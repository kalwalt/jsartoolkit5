var Module = typeof Module !== "undefined" ? Module : {};

var moduleOverrides = {};

var key;

for (key in Module) {
 if (Module.hasOwnProperty(key)) {
  moduleOverrides[key] = Module[key];
 }
}

Module["arguments"] = [];

Module["thisProgram"] = "./this.program";

Module["quit"] = function(status, toThrow) {
 throw toThrow;
};

Module["preRun"] = [];

Module["postRun"] = [];

var ENVIRONMENT_IS_WEB = false;

var ENVIRONMENT_IS_WORKER = false;

var ENVIRONMENT_IS_NODE = false;

var ENVIRONMENT_IS_SHELL = false;

ENVIRONMENT_IS_WEB = typeof window === "object";

ENVIRONMENT_IS_WORKER = typeof importScripts === "function";

ENVIRONMENT_IS_NODE = typeof process === "object" && typeof require === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;

ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (Module["ENVIRONMENT"]) {
 throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)");
}

var scriptDirectory = "";

function locateFile(path) {
 if (Module["locateFile"]) {
  return Module["locateFile"](path, scriptDirectory);
 } else {
  return scriptDirectory + path;
 }
}

if (ENVIRONMENT_IS_NODE) {
 scriptDirectory = __dirname + "/";
 var nodeFS;
 var nodePath;
 Module["read"] = function shell_read(filename, binary) {
  var ret;
  ret = tryParseAsDataURI(filename);
  if (!ret) {
   if (!nodeFS) nodeFS = require("fs");
   if (!nodePath) nodePath = require("path");
   filename = nodePath["normalize"](filename);
   ret = nodeFS["readFileSync"](filename);
  }
  return binary ? ret : ret.toString();
 };
 Module["readBinary"] = function readBinary(filename) {
  var ret = Module["read"](filename, true);
  if (!ret.buffer) {
   ret = new Uint8Array(ret);
  }
  assert(ret.buffer);
  return ret;
 };
 if (process["argv"].length > 1) {
  Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
 }
 Module["arguments"] = process["argv"].slice(2);
 if (typeof module !== "undefined") {
  module["exports"] = Module;
 }
 process["on"]("uncaughtException", function(ex) {
  if (!(ex instanceof ExitStatus)) {
   throw ex;
  }
 });
 process["on"]("unhandledRejection", abort);
 Module["quit"] = function(status) {
  process["exit"](status);
 };
 Module["inspect"] = function() {
  return "[Emscripten Module object]";
 };
} else if (ENVIRONMENT_IS_SHELL) {
 if (typeof read != "undefined") {
  Module["read"] = function shell_read(f) {
   var data = tryParseAsDataURI(f);
   if (data) {
    return intArrayToString(data);
   }
   return read(f);
  };
 }
 Module["readBinary"] = function readBinary(f) {
  var data;
  data = tryParseAsDataURI(f);
  if (data) {
   return data;
  }
  if (typeof readbuffer === "function") {
   return new Uint8Array(readbuffer(f));
  }
  data = read(f, "binary");
  assert(typeof data === "object");
  return data;
 };
 if (typeof scriptArgs != "undefined") {
  Module["arguments"] = scriptArgs;
 } else if (typeof arguments != "undefined") {
  Module["arguments"] = arguments;
 }
 if (typeof quit === "function") {
  Module["quit"] = function(status) {
   quit(status);
  };
 }
} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
 if (ENVIRONMENT_IS_WORKER) {
  scriptDirectory = self.location.href;
 } else if (document.currentScript) {
  scriptDirectory = document.currentScript.src;
 }
 if (scriptDirectory.indexOf("blob:") !== 0) {
  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf("/") + 1);
 } else {
  scriptDirectory = "";
 }
 Module["read"] = function shell_read(url) {
  try {
   var xhr = new XMLHttpRequest();
   xhr.open("GET", url, false);
   xhr.send(null);
   return xhr.responseText;
  } catch (err) {
   var data = tryParseAsDataURI(url);
   if (data) {
    return intArrayToString(data);
   }
   throw err;
  }
 };
 if (ENVIRONMENT_IS_WORKER) {
  Module["readBinary"] = function readBinary(url) {
   try {
    var xhr = new XMLHttpRequest();
    xhr.open("GET", url, false);
    xhr.responseType = "arraybuffer";
    xhr.send(null);
    return new Uint8Array(xhr.response);
   } catch (err) {
    var data = tryParseAsDataURI(url);
    if (data) {
     return data;
    }
    throw err;
   }
  };
 }
 Module["readAsync"] = function readAsync(url, onload, onerror) {
  var xhr = new XMLHttpRequest();
  xhr.open("GET", url, true);
  xhr.responseType = "arraybuffer";
  xhr.onload = function xhr_onload() {
   if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
    onload(xhr.response);
    return;
   }
   var data = tryParseAsDataURI(url);
   if (data) {
    onload(data.buffer);
    return;
   }
   onerror();
  };
  xhr.onerror = onerror;
  xhr.send(null);
 };
 Module["setWindowTitle"] = function(title) {
  document.title = title;
 };
} else {
 throw new Error("environment detection error");
}

var out = Module["print"] || (typeof console !== "undefined" ? console.log.bind(console) : typeof print !== "undefined" ? print : null);

var err = Module["printErr"] || (typeof printErr !== "undefined" ? printErr : typeof console !== "undefined" && console.warn.bind(console) || out);

for (key in moduleOverrides) {
 if (moduleOverrides.hasOwnProperty(key)) {
  Module[key] = moduleOverrides[key];
 }
}

moduleOverrides = undefined;

assert(typeof Module["memoryInitializerPrefixURL"] === "undefined", "Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["pthreadMainPrefixURL"] === "undefined", "Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["cdInitializerPrefixURL"] === "undefined", "Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["filePackagePrefixURL"] === "undefined", "Module.filePackagePrefixURL option was removed, use Module.locateFile instead");

var STACK_ALIGN = 16;

stackSave = stackRestore = stackAlloc = function() {
 abort("cannot use the stack before compiled code is ready to run, and has provided stack access");
};

function dynamicAlloc(size) {
 assert(DYNAMICTOP_PTR);
 var ret = HEAP32[DYNAMICTOP_PTR >> 2];
 var end = ret + size + 15 & -16;
 if (end <= _emscripten_get_heap_size()) {
  HEAP32[DYNAMICTOP_PTR >> 2] = end;
 } else {
  var success = _emscripten_resize_heap(end);
  if (!success) return 0;
 }
 return ret;
}

function getNativeTypeSize(type) {
 switch (type) {
 case "i1":
 case "i8":
  return 1;

 case "i16":
  return 2;

 case "i32":
  return 4;

 case "i64":
  return 8;

 case "float":
  return 4;

 case "double":
  return 8;

 default:
  {
   if (type[type.length - 1] === "*") {
    return 4;
   } else if (type[0] === "i") {
    var bits = parseInt(type.substr(1));
    assert(bits % 8 === 0, "getNativeTypeSize invalid bits " + bits + ", type " + type);
    return bits / 8;
   } else {
    return 0;
   }
  }
 }
}

function warnOnce(text) {
 if (!warnOnce.shown) warnOnce.shown = {};
 if (!warnOnce.shown[text]) {
  warnOnce.shown[text] = 1;
  err(text);
 }
}

var jsCallStartIndex = 1;

var functionPointers = new Array(0);

var funcWrappers = {};

function dynCall(sig, ptr, args) {
 if (args && args.length) {
  assert(args.length == sig.length - 1);
  assert("dynCall_" + sig in Module, "bad function pointer type - no table for sig '" + sig + "'");
  return Module["dynCall_" + sig].apply(null, [ ptr ].concat(args));
 } else {
  assert(sig.length == 1);
  assert("dynCall_" + sig in Module, "bad function pointer type - no table for sig '" + sig + "'");
  return Module["dynCall_" + sig].call(null, ptr);
 }
}

var tempRet0 = 0;

var setTempRet0 = function(value) {
 tempRet0 = value;
};

var getTempRet0 = function() {
 return tempRet0;
};

var GLOBAL_BASE = 8;

var ABORT = false;

var EXITSTATUS = 0;

function assert(condition, text) {
 if (!condition) {
  abort("Assertion failed: " + text);
 }
}

function getCFunc(ident) {
 var func = Module["_" + ident];
 assert(func, "Cannot call unknown function " + ident + ", make sure it is exported");
 return func;
}

function ccall(ident, returnType, argTypes, args, opts) {
 var toC = {
  "string": function(str) {
   var ret = 0;
   if (str !== null && str !== undefined && str !== 0) {
    var len = (str.length << 2) + 1;
    ret = stackAlloc(len);
    stringToUTF8(str, ret, len);
   }
   return ret;
  },
  "array": function(arr) {
   var ret = stackAlloc(arr.length);
   writeArrayToMemory(arr, ret);
   return ret;
  }
 };
 function convertReturnValue(ret) {
  if (returnType === "string") return UTF8ToString(ret);
  if (returnType === "boolean") return Boolean(ret);
  return ret;
 }
 var func = getCFunc(ident);
 var cArgs = [];
 var stack = 0;
 assert(returnType !== "array", 'Return type should not be "array".');
 if (args) {
  for (var i = 0; i < args.length; i++) {
   var converter = toC[argTypes[i]];
   if (converter) {
    if (stack === 0) stack = stackSave();
    cArgs[i] = converter(args[i]);
   } else {
    cArgs[i] = args[i];
   }
  }
 }
 var ret = func.apply(null, cArgs);
 ret = convertReturnValue(ret);
 if (stack !== 0) stackRestore(stack);
 return ret;
}

function setValue(ptr, value, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  HEAP8[ptr >> 0] = value;
  break;

 case "i8":
  HEAP8[ptr >> 0] = value;
  break;

 case "i16":
  HEAP16[ptr >> 1] = value;
  break;

 case "i32":
  HEAP32[ptr >> 2] = value;
  break;

 case "i64":
  tempI64 = [ value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], 
  HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
  break;

 case "float":
  HEAPF32[ptr >> 2] = value;
  break;

 case "double":
  HEAPF64[ptr >> 3] = value;
  break;

 default:
  abort("invalid type for setValue: " + type);
 }
}

var ALLOC_NORMAL = 0;

var ALLOC_NONE = 3;

function allocate(slab, types, allocator, ptr) {
 var zeroinit, size;
 if (typeof slab === "number") {
  zeroinit = true;
  size = slab;
 } else {
  zeroinit = false;
  size = slab.length;
 }
 var singleType = typeof types === "string" ? types : null;
 var ret;
 if (allocator == ALLOC_NONE) {
  ret = ptr;
 } else {
  ret = [ _malloc, stackAlloc, dynamicAlloc ][allocator](Math.max(size, singleType ? 1 : types.length));
 }
 if (zeroinit) {
  var stop;
  ptr = ret;
  assert((ret & 3) == 0);
  stop = ret + (size & ~3);
  for (;ptr < stop; ptr += 4) {
   HEAP32[ptr >> 2] = 0;
  }
  stop = ret + size;
  while (ptr < stop) {
   HEAP8[ptr++ >> 0] = 0;
  }
  return ret;
 }
 if (singleType === "i8") {
  if (slab.subarray || slab.slice) {
   HEAPU8.set(slab, ret);
  } else {
   HEAPU8.set(new Uint8Array(slab), ret);
  }
  return ret;
 }
 var i = 0, type, typeSize, previousType;
 while (i < size) {
  var curr = slab[i];
  type = singleType || types[i];
  if (type === 0) {
   i++;
   continue;
  }
  assert(type, "Must know what type to store in allocate!");
  if (type == "i64") type = "i32";
  setValue(ret + i, curr, type);
  if (previousType !== type) {
   typeSize = getNativeTypeSize(type);
   previousType = type;
  }
  i += typeSize;
 }
 return ret;
}

function getMemory(size) {
 if (!runtimeInitialized) return dynamicAlloc(size);
 return _malloc(size);
}

var UTF8Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf8") : undefined;

function UTF8ArrayToString(u8Array, idx, maxBytesToRead) {
 var endIdx = idx + maxBytesToRead;
 var endPtr = idx;
 while (u8Array[endPtr] && !(endPtr >= endIdx)) ++endPtr;
 if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
  return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
 } else {
  var str = "";
  while (idx < endPtr) {
   var u0 = u8Array[idx++];
   if (!(u0 & 128)) {
    str += String.fromCharCode(u0);
    continue;
   }
   var u1 = u8Array[idx++] & 63;
   if ((u0 & 224) == 192) {
    str += String.fromCharCode((u0 & 31) << 6 | u1);
    continue;
   }
   var u2 = u8Array[idx++] & 63;
   if ((u0 & 240) == 224) {
    u0 = (u0 & 15) << 12 | u1 << 6 | u2;
   } else {
    if ((u0 & 248) != 240) warnOnce("Invalid UTF-8 leading byte 0x" + u0.toString(16) + " encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!");
    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u8Array[idx++] & 63;
   }
   if (u0 < 65536) {
    str += String.fromCharCode(u0);
   } else {
    var ch = u0 - 65536;
    str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
   }
  }
 }
 return str;
}

function UTF8ToString(ptr, maxBytesToRead) {
 return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : "";
}

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
 if (!(maxBytesToWrite > 0)) return 0;
 var startIdx = outIdx;
 var endIdx = outIdx + maxBytesToWrite - 1;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) {
   var u1 = str.charCodeAt(++i);
   u = 65536 + ((u & 1023) << 10) | u1 & 1023;
  }
  if (u <= 127) {
   if (outIdx >= endIdx) break;
   outU8Array[outIdx++] = u;
  } else if (u <= 2047) {
   if (outIdx + 1 >= endIdx) break;
   outU8Array[outIdx++] = 192 | u >> 6;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 65535) {
   if (outIdx + 2 >= endIdx) break;
   outU8Array[outIdx++] = 224 | u >> 12;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else {
   if (outIdx + 3 >= endIdx) break;
   if (u >= 2097152) warnOnce("Invalid Unicode code point 0x" + u.toString(16) + " encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF).");
   outU8Array[outIdx++] = 240 | u >> 18;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  }
 }
 outU8Array[outIdx] = 0;
 return outIdx - startIdx;
}

function stringToUTF8(str, outPtr, maxBytesToWrite) {
 assert(typeof maxBytesToWrite == "number", "stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");
 return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}

function lengthBytesUTF8(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) ++len; else if (u <= 2047) len += 2; else if (u <= 65535) len += 3; else len += 4;
 }
 return len;
}

var UTF16Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-16le") : undefined;

function allocateUTF8(str) {
 var size = lengthBytesUTF8(str) + 1;
 var ret = _malloc(size);
 if (ret) stringToUTF8Array(str, HEAP8, ret, size);
 return ret;
}

function writeArrayToMemory(array, buffer) {
 assert(array.length >= 0, "writeArrayToMemory array must have a length (should be an array or typed array)");
 HEAP8.set(array, buffer);
}

function writeAsciiToMemory(str, buffer, dontAddNull) {
 for (var i = 0; i < str.length; ++i) {
  assert(str.charCodeAt(i) === str.charCodeAt(i) & 255);
  HEAP8[buffer++ >> 0] = str.charCodeAt(i);
 }
 if (!dontAddNull) HEAP8[buffer >> 0] = 0;
}

function demangle(func) {
 var __cxa_demangle_func = Module["___cxa_demangle"] || Module["__cxa_demangle"];
 assert(__cxa_demangle_func);
 try {
  var s = func;
  if (s.startsWith("__Z")) s = s.substr(1);
  var len = lengthBytesUTF8(s) + 1;
  var buf = _malloc(len);
  stringToUTF8(s, buf, len);
  var status = _malloc(4);
  var ret = __cxa_demangle_func(buf, 0, 0, status);
  if (HEAP32[status >> 2] === 0 && ret) {
   return UTF8ToString(ret);
  }
 } catch (e) {} finally {
  if (buf) _free(buf);
  if (status) _free(status);
  if (ret) _free(ret);
 }
 return func;
}

function demangleAll(text) {
 var regex = /__Z[\w\d_]+/g;
 return text.replace(regex, function(x) {
  var y = demangle(x);
  return x === y ? x : y + " [" + x + "]";
 });
}

function jsStackTrace() {
 var err = new Error();
 if (!err.stack) {
  try {
   throw new Error(0);
  } catch (e) {
   err = e;
  }
  if (!err.stack) {
   return "(no stack trace available)";
  }
 }
 return err.stack.toString();
}

function stackTrace() {
 var js = jsStackTrace();
 if (Module["extraStackTrace"]) js += "\n" + Module["extraStackTrace"]();
 return demangleAll(js);
}

var PAGE_SIZE = 16384;

function alignUp(x, multiple) {
 if (x % multiple > 0) {
  x += multiple - x % multiple;
 }
 return x;
}

var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateGlobalBufferViews() {
 Module["HEAP8"] = HEAP8 = new Int8Array(buffer);
 Module["HEAP16"] = HEAP16 = new Int16Array(buffer);
 Module["HEAP32"] = HEAP32 = new Int32Array(buffer);
 Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);
 Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);
 Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);
 Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);
 Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
}

var STACK_BASE = 59472, STACK_MAX = 5302352, DYNAMIC_BASE = 5302352, DYNAMICTOP_PTR = 59440;

assert(STACK_BASE % 16 === 0, "stack must start aligned");

assert(DYNAMIC_BASE % 16 === 0, "heap must start aligned");

var TOTAL_STACK = 5242880;

if (Module["TOTAL_STACK"]) assert(TOTAL_STACK === Module["TOTAL_STACK"], "the stack size can no longer be determined at runtime");

var INITIAL_TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 268435456;

if (INITIAL_TOTAL_MEMORY < TOTAL_STACK) err("TOTAL_MEMORY should be larger than TOTAL_STACK, was " + INITIAL_TOTAL_MEMORY + "! (TOTAL_STACK=" + TOTAL_STACK + ")");

assert(typeof Int32Array !== "undefined" && typeof Float64Array !== "undefined" && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined, "JS engine does not provide full typed array support");

if (Module["buffer"]) {
 buffer = Module["buffer"];
 assert(buffer.byteLength === INITIAL_TOTAL_MEMORY, "provided buffer should be " + INITIAL_TOTAL_MEMORY + " bytes, but it is " + buffer.byteLength);
} else {
 {
  buffer = new ArrayBuffer(INITIAL_TOTAL_MEMORY);
 }
 assert(buffer.byteLength === INITIAL_TOTAL_MEMORY);
}

updateGlobalBufferViews();

HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;

function writeStackCookie() {
 assert((STACK_MAX & 3) == 0);
 HEAPU32[(STACK_MAX >> 2) - 1] = 34821223;
 HEAPU32[(STACK_MAX >> 2) - 2] = 2310721022;
}

function checkStackCookie() {
 if (HEAPU32[(STACK_MAX >> 2) - 1] != 34821223 || HEAPU32[(STACK_MAX >> 2) - 2] != 2310721022) {
  abort("Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x" + HEAPU32[(STACK_MAX >> 2) - 2].toString(16) + " " + HEAPU32[(STACK_MAX >> 2) - 1].toString(16));
 }
 if (HEAP32[0] !== 1668509029) throw "Runtime error: The application has corrupted its heap memory area (address zero)!";
}

function abortStackOverflow(allocSize) {
 abort("Stack overflow! Attempted to allocate " + allocSize + " bytes on the stack, but stack has only " + (STACK_MAX - stackSave() + allocSize) + " bytes available!");
}

HEAP32[0] = 1668509029;

HEAP16[1] = 25459;

if (HEAPU8[2] !== 115 || HEAPU8[3] !== 99) throw "Runtime error: expected the system to be little-endian!";

function callRuntimeCallbacks(callbacks) {
 while (callbacks.length > 0) {
  var callback = callbacks.shift();
  if (typeof callback == "function") {
   callback();
   continue;
  }
  var func = callback.func;
  if (typeof func === "number") {
   if (callback.arg === undefined) {
    Module["dynCall_v"](func);
   } else {
    Module["dynCall_vi"](func, callback.arg);
   }
  } else {
   func(callback.arg === undefined ? null : callback.arg);
  }
 }
}

var __ATPRERUN__ = [];

var __ATINIT__ = [];

var __ATMAIN__ = [];

var __ATPOSTRUN__ = [];

var runtimeInitialized = false;

var runtimeExited = false;

function preRun() {
 if (Module["preRun"]) {
  if (typeof Module["preRun"] == "function") Module["preRun"] = [ Module["preRun"] ];
  while (Module["preRun"].length) {
   addOnPreRun(Module["preRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
 checkStackCookie();
 if (runtimeInitialized) return;
 runtimeInitialized = true;
 if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
 TTY.init();
 callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
 checkStackCookie();
 FS.ignorePermissions = false;
 callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
 checkStackCookie();
 runtimeExited = true;
}

function postRun() {
 checkStackCookie();
 if (Module["postRun"]) {
  if (typeof Module["postRun"] == "function") Module["postRun"] = [ Module["postRun"] ];
  while (Module["postRun"].length) {
   addOnPostRun(Module["postRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
 __ATPRERUN__.unshift(cb);
}

function addOnPostRun(cb) {
 __ATPOSTRUN__.unshift(cb);
}

assert(Math.imul, "This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.fround, "This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.clz32, "This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.trunc, "This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

var Math_abs = Math.abs;

var Math_ceil = Math.ceil;

var Math_floor = Math.floor;

var Math_min = Math.min;

var runDependencies = 0;

var runDependencyWatcher = null;

var dependenciesFulfilled = null;

var runDependencyTracking = {};

function getUniqueRunDependency(id) {
 var orig = id;
 while (1) {
  if (!runDependencyTracking[id]) return id;
  id = orig + Math.random();
 }
 return id;
}

function addRunDependency(id) {
 runDependencies++;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (id) {
  assert(!runDependencyTracking[id]);
  runDependencyTracking[id] = 1;
  if (runDependencyWatcher === null && typeof setInterval !== "undefined") {
   runDependencyWatcher = setInterval(function() {
    if (ABORT) {
     clearInterval(runDependencyWatcher);
     runDependencyWatcher = null;
     return;
    }
    var shown = false;
    for (var dep in runDependencyTracking) {
     if (!shown) {
      shown = true;
      err("still waiting on run dependencies:");
     }
     err("dependency: " + dep);
    }
    if (shown) {
     err("(end of list)");
    }
   }, 1e4);
  }
 } else {
  err("warning: run dependency added without ID");
 }
}

function removeRunDependency(id) {
 runDependencies--;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (id) {
  assert(runDependencyTracking[id]);
  delete runDependencyTracking[id];
 } else {
  err("warning: run dependency removed without ID");
 }
 if (runDependencies == 0) {
  if (runDependencyWatcher !== null) {
   clearInterval(runDependencyWatcher);
   runDependencyWatcher = null;
  }
  if (dependenciesFulfilled) {
   var callback = dependenciesFulfilled;
   dependenciesFulfilled = null;
   callback();
  }
 }
}

Module["preloadedImages"] = {};

Module["preloadedAudios"] = {};

var memoryInitializer = null;

var dataURIPrefix = "data:application/octet-stream;base64,";

function isDataURI(filename) {
 return String.prototype.startsWith ? filename.startsWith(dataURIPrefix) : filename.indexOf(dataURIPrefix) === 0;
}

var ASM_CONSTS = [ function($0, $1, $2, $3, $4, $5) {
 if (!artoolkit["frameMalloc"]) {
  artoolkit["frameMalloc"] = {};
 }
 var frameMalloc = artoolkit["frameMalloc"];
 frameMalloc["framepointer"] = $1;
 frameMalloc["framesize"] = $2;
 frameMalloc["camera"] = $3;
 frameMalloc["transform"] = $4;
 frameMalloc["videoLumaPointer"] = $5;
}, function($0, $1, $2, $3) {
 if (!artoolkit["multiEachMarkerInfo"]) {
  artoolkit["multiEachMarkerInfo"] = {};
 }
 var multiEachMarker = artoolkit["multiEachMarkerInfo"];
 multiEachMarker["visible"] = $0;
 multiEachMarker["pattId"] = $1;
 multiEachMarker["pattType"] = $2;
 multiEachMarker["width"] = $3;
}, function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32) {
 var $a = arguments;
 var i = 12;
 if (!artoolkit["markerInfo"]) {
  artoolkit["markerInfo"] = {
   pos: [ 0, 0 ],
   line: [ [ 0, 0, 0 ], [ 0, 0, 0 ], [ 0, 0, 0 ], [ 0, 0, 0 ] ],
   vertex: [ [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ] ]
  };
 }
 var markerInfo = artoolkit["markerInfo"];
 markerInfo["area"] = $0;
 markerInfo["id"] = $1;
 markerInfo["idPatt"] = $2;
 markerInfo["idMatrix"] = $3;
 markerInfo["dir"] = $4;
 markerInfo["dirPatt"] = $5;
 markerInfo["dirMatrix"] = $6;
 markerInfo["cf"] = $7;
 markerInfo["cfPatt"] = $8;
 markerInfo["cfMatrix"] = $9;
 markerInfo["pos"][0] = $10;
 markerInfo["pos"][1] = $11;
 markerInfo["line"][0][0] = $a[i++];
 markerInfo["line"][0][1] = $a[i++];
 markerInfo["line"][0][2] = $a[i++];
 markerInfo["line"][1][0] = $a[i++];
 markerInfo["line"][1][1] = $a[i++];
 markerInfo["line"][1][2] = $a[i++];
 markerInfo["line"][2][0] = $a[i++];
 markerInfo["line"][2][1] = $a[i++];
 markerInfo["line"][2][2] = $a[i++];
 markerInfo["line"][3][0] = $a[i++];
 markerInfo["line"][3][1] = $a[i++];
 markerInfo["line"][3][2] = $a[i++];
 markerInfo["vertex"][0][0] = $a[i++];
 markerInfo["vertex"][0][1] = $a[i++];
 markerInfo["vertex"][1][0] = $a[i++];
 markerInfo["vertex"][1][1] = $a[i++];
 markerInfo["vertex"][2][0] = $a[i++];
 markerInfo["vertex"][2][1] = $a[i++];
 markerInfo["vertex"][3][0] = $a[i++];
 markerInfo["vertex"][3][1] = $a[i++];
 markerInfo["errorCorrected"] = $a[i++];
}, function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13) {
 var $a = arguments;
 var i = 0;
 if (!artoolkit["NFTMarkerInfo"]) {
  artoolkit["NFTMarkerInfo"] = {
   id: 0,
   error: -1,
   found: 0,
   pose: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
  };
 }
 var markerInfo = artoolkit["NFTMarkerInfo"];
 markerInfo["id"] = $a[i++];
 markerInfo["error"] = $a[i++];
 markerInfo["found"] = 1;
 markerInfo["pose"][0] = $a[i++];
 markerInfo["pose"][1] = $a[i++];
 markerInfo["pose"][2] = $a[i++];
 markerInfo["pose"][3] = $a[i++];
 markerInfo["pose"][4] = $a[i++];
 markerInfo["pose"][5] = $a[i++];
 markerInfo["pose"][6] = $a[i++];
 markerInfo["pose"][7] = $a[i++];
 markerInfo["pose"][8] = $a[i++];
 markerInfo["pose"][9] = $a[i++];
 markerInfo["pose"][10] = $a[i++];
 markerInfo["pose"][11] = $a[i++];
}, function($0) {
 var $a = arguments;
 var i = 0;
 if (!artoolkit["NFTMarkerInfo"]) {
  artoolkit["NFTMarkerInfo"] = {
   id: 0,
   error: -1,
   found: 0,
   pose: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
  };
 }
 var markerInfo = artoolkit["NFTMarkerInfo"];
 markerInfo["id"] = $a[i++];
 markerInfo["error"] = -1;
 markerInfo["found"] = 0;
 markerInfo["pose"][0] = 0;
 markerInfo["pose"][1] = 0;
 markerInfo["pose"][2] = 0;
 markerInfo["pose"][3] = 0;
 markerInfo["pose"][4] = 0;
 markerInfo["pose"][5] = 0;
 markerInfo["pose"][6] = 0;
 markerInfo["pose"][7] = 0;
 markerInfo["pose"][8] = 0;
 markerInfo["pose"][9] = 0;
 markerInfo["pose"][10] = 0;
 markerInfo["pose"][11] = 0;
} ];

function _emscripten_asm_const_iiiiiii(code, a0, a1, a2, a3, a4, a5) {
 return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5);
}

function _emscripten_asm_const_iiiid(code, a0, a1, a2, a3) {
 return ASM_CONSTS[code](a0, a1, a2, a3);
}

function _emscripten_asm_const_iiddddddddddddd(code, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {
 return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

function _emscripten_asm_const_ii(code, a0) {
 return ASM_CONSTS[code](a0);
}

function _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi(code, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32) {
 return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32);
}

__ATINIT__.push({
 func: function() {
  __GLOBAL__I_000101();
 }
}, {
 func: function() {
  __GLOBAL__sub_I_ARToolKitJS_cpp();
 }
}, {
 func: function() {
  __GLOBAL__sub_I_bind_cpp();
 }
}, {
 func: function() {
  ___emscripten_environ_constructor();
 }
}, {
 func: function() {
  __GLOBAL__sub_I_iostream_cpp();
 }
});

memoryInitializer = "data:application/octet-stream;base64,";

var tempDoublePtr = 59456;

assert(tempDoublePtr % 8 == 0);

var ENV = {};

function ___buildEnvironment(environ) {
 var MAX_ENV_VALUES = 64;
 var TOTAL_ENV_SIZE = 1024;
 var poolPtr;
 var envPtr;
 if (!___buildEnvironment.called) {
  ___buildEnvironment.called = true;
  ENV["USER"] = ENV["LOGNAME"] = "web_user";
  ENV["PATH"] = "/";
  ENV["PWD"] = "/";
  ENV["HOME"] = "/home/web_user";
  ENV["LANG"] = "C.UTF-8";
  ENV["_"] = Module["thisProgram"];
  poolPtr = getMemory(TOTAL_ENV_SIZE);
  envPtr = getMemory(MAX_ENV_VALUES * 4);
  HEAP32[envPtr >> 2] = poolPtr;
  HEAP32[environ >> 2] = envPtr;
 } else {
  envPtr = HEAP32[environ >> 2];
  poolPtr = HEAP32[envPtr >> 2];
 }
 var strings = [];
 var totalSize = 0;
 for (var key in ENV) {
  if (typeof ENV[key] === "string") {
   var line = key + "=" + ENV[key];
   strings.push(line);
   totalSize += line.length;
  }
 }
 if (totalSize > TOTAL_ENV_SIZE) {
  throw new Error("Environment size exceeded TOTAL_ENV_SIZE!");
 }
 var ptrSize = 4;
 for (var i = 0; i < strings.length; i++) {
  var line = strings[i];
  writeAsciiToMemory(line, poolPtr);
  HEAP32[envPtr + i * ptrSize >> 2] = poolPtr;
  poolPtr += line.length + 1;
 }
 HEAP32[envPtr + strings.length * ptrSize >> 2] = 0;
}

function _emscripten_get_now() {
 abort();
}

function _emscripten_get_now_is_monotonic() {
 return 0 || ENVIRONMENT_IS_NODE || typeof dateNow !== "undefined" || typeof performance === "object" && performance && typeof performance["now"] === "function";
}

function ___setErrNo(value) {
 if (Module["___errno_location"]) HEAP32[Module["___errno_location"]() >> 2] = value; else err("failed to set errno from JS");
 return value;
}

function _clock_gettime(clk_id, tp) {
 var now;
 if (clk_id === 0) {
  now = Date.now();
 } else if (clk_id === 1 && _emscripten_get_now_is_monotonic()) {
  now = _emscripten_get_now();
 } else {
  ___setErrNo(22);
  return -1;
 }
 HEAP32[tp >> 2] = now / 1e3 | 0;
 HEAP32[tp + 4 >> 2] = now % 1e3 * 1e3 * 1e3 | 0;
 return 0;
}

function ___clock_gettime(a0, a1) {
 return _clock_gettime(a0, a1);
}

function ___cxa_allocate_exception(size) {
 return _malloc(size);
}

function ___cxa_free_exception(ptr) {
 try {
  return _free(ptr);
 } catch (e) {
  err("exception during cxa_free_exception: " + e);
 }
}

var EXCEPTIONS = {
 last: 0,
 caught: [],
 infos: {},
 deAdjust: function(adjusted) {
  if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
  for (var key in EXCEPTIONS.infos) {
   var ptr = +key;
   var adj = EXCEPTIONS.infos[ptr].adjusted;
   var len = adj.length;
   for (var i = 0; i < len; i++) {
    if (adj[i] === adjusted) {
     return ptr;
    }
   }
  }
  return adjusted;
 },
 addRef: function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  info.refcount++;
 },
 decRef: function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  assert(info.refcount > 0);
  info.refcount--;
  if (info.refcount === 0 && !info.rethrown) {
   if (info.destructor) {
    Module["dynCall_vi"](info.destructor, ptr);
   }
   delete EXCEPTIONS.infos[ptr];
   ___cxa_free_exception(ptr);
  }
 },
 clearRef: function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  info.refcount = 0;
 }
};

function ___cxa_begin_catch(ptr) {
 var info = EXCEPTIONS.infos[ptr];
 if (info && !info.caught) {
  info.caught = true;
  __ZSt18uncaught_exceptionv.uncaught_exception--;
 }
 if (info) info.rethrown = false;
 EXCEPTIONS.caught.push(ptr);
 EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
 return ptr;
}

function ___resumeException(ptr) {
 if (!EXCEPTIONS.last) {
  EXCEPTIONS.last = ptr;
 }
 throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
}

function ___cxa_find_matching_catch() {
 var thrown = EXCEPTIONS.last;
 if (!thrown) {
  return (setTempRet0(0), 0) | 0;
 }
 var info = EXCEPTIONS.infos[thrown];
 var throwntype = info.type;
 if (!throwntype) {
  return (setTempRet0(0), thrown) | 0;
 }
 var typeArray = Array.prototype.slice.call(arguments);
 var pointer = Module["___cxa_is_pointer_type"](throwntype);
 if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
 HEAP32[___cxa_find_matching_catch.buffer >> 2] = thrown;
 thrown = ___cxa_find_matching_catch.buffer;
 for (var i = 0; i < typeArray.length; i++) {
  if (typeArray[i] && Module["___cxa_can_catch"](typeArray[i], throwntype, thrown)) {
   thrown = HEAP32[thrown >> 2];
   info.adjusted.push(thrown);
   return (setTempRet0(typeArray[i]), thrown) | 0;
  }
 }
 thrown = HEAP32[thrown >> 2];
 return (setTempRet0(throwntype), thrown) | 0;
}

function ___cxa_throw(ptr, type, destructor) {
 EXCEPTIONS.infos[ptr] = {
  ptr: ptr,
  adjusted: [ ptr ],
  type: type,
  destructor: destructor,
  refcount: 0,
  caught: false,
  rethrown: false
 };
 EXCEPTIONS.last = ptr;
 if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
  __ZSt18uncaught_exceptionv.uncaught_exception = 1;
 } else {
  __ZSt18uncaught_exceptionv.uncaught_exception++;
 }
 throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
}

function ___cxa_uncaught_exception() {
 return !!__ZSt18uncaught_exceptionv.uncaught_exception;
}

function ___gxx_personality_v0() {}

function ___lock() {}

function ___map_file(pathname, size) {
 ___setErrNo(1);
 return -1;
}

var PATH = {
 splitPath: function(filename) {
  var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
  return splitPathRe.exec(filename).slice(1);
 },
 normalizeArray: function(parts, allowAboveRoot) {
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
   var last = parts[i];
   if (last === ".") {
    parts.splice(i, 1);
   } else if (last === "..") {
    parts.splice(i, 1);
    up++;
   } else if (up) {
    parts.splice(i, 1);
    up--;
   }
  }
  if (allowAboveRoot) {
   for (;up; up--) {
    parts.unshift("..");
   }
  }
  return parts;
 },
 normalize: function(path) {
  var isAbsolute = path.charAt(0) === "/", trailingSlash = path.substr(-1) === "/";
  path = PATH.normalizeArray(path.split("/").filter(function(p) {
   return !!p;
  }), !isAbsolute).join("/");
  if (!path && !isAbsolute) {
   path = ".";
  }
  if (path && trailingSlash) {
   path += "/";
  }
  return (isAbsolute ? "/" : "") + path;
 },
 dirname: function(path) {
  var result = PATH.splitPath(path), root = result[0], dir = result[1];
  if (!root && !dir) {
   return ".";
  }
  if (dir) {
   dir = dir.substr(0, dir.length - 1);
  }
  return root + dir;
 },
 basename: function(path) {
  if (path === "/") return "/";
  var lastSlash = path.lastIndexOf("/");
  if (lastSlash === -1) return path;
  return path.substr(lastSlash + 1);
 },
 extname: function(path) {
  return PATH.splitPath(path)[3];
 },
 join: function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return PATH.normalize(paths.join("/"));
 },
 join2: function(l, r) {
  return PATH.normalize(l + "/" + r);
 },
 resolve: function() {
  var resolvedPath = "", resolvedAbsolute = false;
  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
   var path = i >= 0 ? arguments[i] : FS.cwd();
   if (typeof path !== "string") {
    throw new TypeError("Arguments to path.resolve must be strings");
   } else if (!path) {
    return "";
   }
   resolvedPath = path + "/" + resolvedPath;
   resolvedAbsolute = path.charAt(0) === "/";
  }
  resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter(function(p) {
   return !!p;
  }), !resolvedAbsolute).join("/");
  return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
 },
 relative: function(from, to) {
  from = PATH.resolve(from).substr(1);
  to = PATH.resolve(to).substr(1);
  function trim(arr) {
   var start = 0;
   for (;start < arr.length; start++) {
    if (arr[start] !== "") break;
   }
   var end = arr.length - 1;
   for (;end >= 0; end--) {
    if (arr[end] !== "") break;
   }
   if (start > end) return [];
   return arr.slice(start, end - start + 1);
  }
  var fromParts = trim(from.split("/"));
  var toParts = trim(to.split("/"));
  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
   if (fromParts[i] !== toParts[i]) {
    samePartsLength = i;
    break;
   }
  }
  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
   outputParts.push("..");
  }
  outputParts = outputParts.concat(toParts.slice(samePartsLength));
  return outputParts.join("/");
 }
};

var TTY = {
 ttys: [],
 init: function() {},
 shutdown: function() {},
 register: function(dev, ops) {
  TTY.ttys[dev] = {
   input: [],
   output: [],
   ops: ops
  };
  FS.registerDevice(dev, TTY.stream_ops);
 },
 stream_ops: {
  open: function(stream) {
   var tty = TTY.ttys[stream.node.rdev];
   if (!tty) {
    throw new FS.ErrnoError(19);
   }
   stream.tty = tty;
   stream.seekable = false;
  },
  close: function(stream) {
   stream.tty.ops.flush(stream.tty);
  },
  flush: function(stream) {
   stream.tty.ops.flush(stream.tty);
  },
  read: function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.get_char) {
    throw new FS.ErrnoError(6);
   }
   var bytesRead = 0;
   for (var i = 0; i < length; i++) {
    var result;
    try {
     result = stream.tty.ops.get_char(stream.tty);
    } catch (e) {
     throw new FS.ErrnoError(5);
    }
    if (result === undefined && bytesRead === 0) {
     throw new FS.ErrnoError(11);
    }
    if (result === null || result === undefined) break;
    bytesRead++;
    buffer[offset + i] = result;
   }
   if (bytesRead) {
    stream.node.timestamp = Date.now();
   }
   return bytesRead;
  },
  write: function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.put_char) {
    throw new FS.ErrnoError(6);
   }
   try {
    for (var i = 0; i < length; i++) {
     stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
    }
   } catch (e) {
    throw new FS.ErrnoError(5);
   }
   if (length) {
    stream.node.timestamp = Date.now();
   }
   return i;
  }
 },
 default_tty_ops: {
  get_char: function(tty) {
   if (!tty.input.length) {
    var result = null;
    if (ENVIRONMENT_IS_NODE) {
     var BUFSIZE = 256;
     var buf = new Buffer(BUFSIZE);
     var bytesRead = 0;
     var isPosixPlatform = process.platform != "win32";
     var fd = process.stdin.fd;
     if (isPosixPlatform) {
      var usingDevice = false;
      try {
       fd = fs.openSync("/dev/stdin", "r");
       usingDevice = true;
      } catch (e) {}
     }
     try {
      bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
     } catch (e) {
      if (e.toString().indexOf("EOF") != -1) bytesRead = 0; else throw e;
     }
     if (usingDevice) {
      fs.closeSync(fd);
     }
     if (bytesRead > 0) {
      result = buf.slice(0, bytesRead).toString("utf-8");
     } else {
      result = null;
     }
    } else if (typeof window != "undefined" && typeof window.prompt == "function") {
     result = window.prompt("Input: ");
     if (result !== null) {
      result += "\n";
     }
    } else if (typeof readline == "function") {
     result = readline();
     if (result !== null) {
      result += "\n";
     }
    }
    if (!result) {
     return null;
    }
    tty.input = intArrayFromString(result, true);
   }
   return tty.input.shift();
  },
  put_char: function(tty, val) {
   if (val === null || val === 10) {
    out(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  },
  flush: function(tty) {
   if (tty.output && tty.output.length > 0) {
    out(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  }
 },
 default_tty1_ops: {
  put_char: function(tty, val) {
   if (val === null || val === 10) {
    err(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  },
  flush: function(tty) {
   if (tty.output && tty.output.length > 0) {
    err(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  }
 }
};

var MEMFS = {
 ops_table: null,
 mount: function(mount) {
  return MEMFS.createNode(null, "/", 16384 | 511, 0);
 },
 createNode: function(parent, name, mode, dev) {
  if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
   throw new FS.ErrnoError(1);
  }
  if (!MEMFS.ops_table) {
   MEMFS.ops_table = {
    dir: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      lookup: MEMFS.node_ops.lookup,
      mknod: MEMFS.node_ops.mknod,
      rename: MEMFS.node_ops.rename,
      unlink: MEMFS.node_ops.unlink,
      rmdir: MEMFS.node_ops.rmdir,
      readdir: MEMFS.node_ops.readdir,
      symlink: MEMFS.node_ops.symlink
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek
     }
    },
    file: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek,
      read: MEMFS.stream_ops.read,
      write: MEMFS.stream_ops.write,
      allocate: MEMFS.stream_ops.allocate,
      mmap: MEMFS.stream_ops.mmap,
      msync: MEMFS.stream_ops.msync
     }
    },
    link: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      readlink: MEMFS.node_ops.readlink
     },
     stream: {}
    },
    chrdev: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: FS.chrdev_stream_ops
    }
   };
  }
  var node = FS.createNode(parent, name, mode, dev);
  if (FS.isDir(node.mode)) {
   node.node_ops = MEMFS.ops_table.dir.node;
   node.stream_ops = MEMFS.ops_table.dir.stream;
   node.contents = {};
  } else if (FS.isFile(node.mode)) {
   node.node_ops = MEMFS.ops_table.file.node;
   node.stream_ops = MEMFS.ops_table.file.stream;
   node.usedBytes = 0;
   node.contents = null;
  } else if (FS.isLink(node.mode)) {
   node.node_ops = MEMFS.ops_table.link.node;
   node.stream_ops = MEMFS.ops_table.link.stream;
  } else if (FS.isChrdev(node.mode)) {
   node.node_ops = MEMFS.ops_table.chrdev.node;
   node.stream_ops = MEMFS.ops_table.chrdev.stream;
  }
  node.timestamp = Date.now();
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 },
 getFileDataAsRegularArray: function(node) {
  if (node.contents && node.contents.subarray) {
   var arr = [];
   for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
   return arr;
  }
  return node.contents;
 },
 getFileDataAsTypedArray: function(node) {
  if (!node.contents) return new Uint8Array();
  if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
  return new Uint8Array(node.contents);
 },
 expandFileStorage: function(node, newCapacity) {
  var prevCapacity = node.contents ? node.contents.length : 0;
  if (prevCapacity >= newCapacity) return;
  var CAPACITY_DOUBLING_MAX = 1024 * 1024;
  newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);
  if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
  var oldContents = node.contents;
  node.contents = new Uint8Array(newCapacity);
  if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
  return;
 },
 resizeFileStorage: function(node, newSize) {
  if (node.usedBytes == newSize) return;
  if (newSize == 0) {
   node.contents = null;
   node.usedBytes = 0;
   return;
  }
  if (!node.contents || node.contents.subarray) {
   var oldContents = node.contents;
   node.contents = new Uint8Array(new ArrayBuffer(newSize));
   if (oldContents) {
    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
   }
   node.usedBytes = newSize;
   return;
  }
  if (!node.contents) node.contents = [];
  if (node.contents.length > newSize) node.contents.length = newSize; else while (node.contents.length < newSize) node.contents.push(0);
  node.usedBytes = newSize;
 },
 node_ops: {
  getattr: function(node) {
   var attr = {};
   attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
   attr.ino = node.id;
   attr.mode = node.mode;
   attr.nlink = 1;
   attr.uid = 0;
   attr.gid = 0;
   attr.rdev = node.rdev;
   if (FS.isDir(node.mode)) {
    attr.size = 4096;
   } else if (FS.isFile(node.mode)) {
    attr.size = node.usedBytes;
   } else if (FS.isLink(node.mode)) {
    attr.size = node.link.length;
   } else {
    attr.size = 0;
   }
   attr.atime = new Date(node.timestamp);
   attr.mtime = new Date(node.timestamp);
   attr.ctime = new Date(node.timestamp);
   attr.blksize = 4096;
   attr.blocks = Math.ceil(attr.size / attr.blksize);
   return attr;
  },
  setattr: function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
   if (attr.size !== undefined) {
    MEMFS.resizeFileStorage(node, attr.size);
   }
  },
  lookup: function(parent, name) {
   throw FS.genericErrors[2];
  },
  mknod: function(parent, name, mode, dev) {
   return MEMFS.createNode(parent, name, mode, dev);
  },
  rename: function(old_node, new_dir, new_name) {
   if (FS.isDir(old_node.mode)) {
    var new_node;
    try {
     new_node = FS.lookupNode(new_dir, new_name);
    } catch (e) {}
    if (new_node) {
     for (var i in new_node.contents) {
      throw new FS.ErrnoError(39);
     }
    }
   }
   delete old_node.parent.contents[old_node.name];
   old_node.name = new_name;
   new_dir.contents[new_name] = old_node;
   old_node.parent = new_dir;
  },
  unlink: function(parent, name) {
   delete parent.contents[name];
  },
  rmdir: function(parent, name) {
   var node = FS.lookupNode(parent, name);
   for (var i in node.contents) {
    throw new FS.ErrnoError(39);
   }
   delete parent.contents[name];
  },
  readdir: function(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  },
  symlink: function(parent, newname, oldpath) {
   var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
   node.link = oldpath;
   return node;
  },
  readlink: function(node) {
   if (!FS.isLink(node.mode)) {
    throw new FS.ErrnoError(22);
   }
   return node.link;
  }
 },
 stream_ops: {
  read: function(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= stream.node.usedBytes) return 0;
   var size = Math.min(stream.node.usedBytes - position, length);
   assert(size >= 0);
   if (size > 8 && contents.subarray) {
    buffer.set(contents.subarray(position, position + size), offset);
   } else {
    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
   }
   return size;
  },
  write: function(stream, buffer, offset, length, position, canOwn) {
   if (canOwn) {
    warnOnce("file packager has copied file data into memory, but in memory growth we are forced to copy it again (see --no-heap-copy)");
   }
   canOwn = false;
   if (!length) return 0;
   var node = stream.node;
   node.timestamp = Date.now();
   if (buffer.subarray && (!node.contents || node.contents.subarray)) {
    if (canOwn) {
     assert(position === 0, "canOwn must imply no weird position inside the file");
     node.contents = buffer.subarray(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (node.usedBytes === 0 && position === 0) {
     node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
     node.usedBytes = length;
     return length;
    } else if (position + length <= node.usedBytes) {
     node.contents.set(buffer.subarray(offset, offset + length), position);
     return length;
    }
   }
   MEMFS.expandFileStorage(node, position + length);
   if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); else {
    for (var i = 0; i < length; i++) {
     node.contents[position + i] = buffer[offset + i];
    }
   }
   node.usedBytes = Math.max(node.usedBytes, position + length);
   return length;
  },
  llseek: function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.usedBytes;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(22);
   }
   return position;
  },
  allocate: function(stream, offset, length) {
   MEMFS.expandFileStorage(stream.node, offset + length);
   stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
  },
  mmap: function(stream, buffer, offset, length, position, prot, flags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(19);
   }
   var ptr;
   var allocated;
   var contents = stream.node.contents;
   if (!(flags & 2) && (contents.buffer === buffer || contents.buffer === buffer.buffer)) {
    allocated = false;
    ptr = contents.byteOffset;
   } else {
    if (position > 0 || position + length < stream.node.usedBytes) {
     if (contents.subarray) {
      contents = contents.subarray(position, position + length);
     } else {
      contents = Array.prototype.slice.call(contents, position, position + length);
     }
    }
    allocated = true;
    ptr = _malloc(length);
    if (!ptr) {
     throw new FS.ErrnoError(12);
    }
    buffer.set(contents, ptr);
   }
   return {
    ptr: ptr,
    allocated: allocated
   };
  },
  msync: function(stream, buffer, offset, length, mmapFlags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(19);
   }
   if (mmapFlags & 2) {
    return 0;
   }
   var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
   return 0;
  }
 }
};

var IDBFS = {
 dbs: {},
 indexedDB: function() {
  if (typeof indexedDB !== "undefined") return indexedDB;
  var ret = null;
  if (typeof window === "object") ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
  assert(ret, "IDBFS used, but indexedDB not supported");
  return ret;
 },
 DB_VERSION: 21,
 DB_STORE_NAME: "FILE_DATA",
 mount: function(mount) {
  return MEMFS.mount.apply(null, arguments);
 },
 syncfs: function(mount, populate, callback) {
  IDBFS.getLocalSet(mount, function(err, local) {
   if (err) return callback(err);
   IDBFS.getRemoteSet(mount, function(err, remote) {
    if (err) return callback(err);
    var src = populate ? remote : local;
    var dst = populate ? local : remote;
    IDBFS.reconcile(src, dst, callback);
   });
  });
 },
 getDB: function(name, callback) {
  var db = IDBFS.dbs[name];
  if (db) {
   return callback(null, db);
  }
  var req;
  try {
   req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
  } catch (e) {
   return callback(e);
  }
  if (!req) {
   return callback("Unable to connect to IndexedDB");
  }
  req.onupgradeneeded = function(e) {
   var db = e.target.result;
   var transaction = e.target.transaction;
   var fileStore;
   if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
    fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
   } else {
    fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
   }
   if (!fileStore.indexNames.contains("timestamp")) {
    fileStore.createIndex("timestamp", "timestamp", {
     unique: false
    });
   }
  };
  req.onsuccess = function() {
   db = req.result;
   IDBFS.dbs[name] = db;
   callback(null, db);
  };
  req.onerror = function(e) {
   callback(this.error);
   e.preventDefault();
  };
 },
 getLocalSet: function(mount, callback) {
  var entries = {};
  function isRealDir(p) {
   return p !== "." && p !== "..";
  }
  function toAbsolute(root) {
   return function(p) {
    return PATH.join2(root, p);
   };
  }
  var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  while (check.length) {
   var path = check.pop();
   var stat;
   try {
    stat = FS.stat(path);
   } catch (e) {
    return callback(e);
   }
   if (FS.isDir(stat.mode)) {
    check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
   }
   entries[path] = {
    timestamp: stat.mtime
   };
  }
  return callback(null, {
   type: "local",
   entries: entries
  });
 },
 getRemoteSet: function(mount, callback) {
  var entries = {};
  IDBFS.getDB(mount.mountpoint, function(err, db) {
   if (err) return callback(err);
   try {
    var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readonly");
    transaction.onerror = function(e) {
     callback(this.error);
     e.preventDefault();
    };
    var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
    var index = store.index("timestamp");
    index.openKeyCursor().onsuccess = function(event) {
     var cursor = event.target.result;
     if (!cursor) {
      return callback(null, {
       type: "remote",
       db: db,
       entries: entries
      });
     }
     entries[cursor.primaryKey] = {
      timestamp: cursor.key
     };
     cursor.continue();
    };
   } catch (e) {
    return callback(e);
   }
  });
 },
 loadLocalEntry: function(path, callback) {
  var stat, node;
  try {
   var lookup = FS.lookupPath(path);
   node = lookup.node;
   stat = FS.stat(path);
  } catch (e) {
   return callback(e);
  }
  if (FS.isDir(stat.mode)) {
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode
   });
  } else if (FS.isFile(stat.mode)) {
   node.contents = MEMFS.getFileDataAsTypedArray(node);
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode,
    contents: node.contents
   });
  } else {
   return callback(new Error("node type not supported"));
  }
 },
 storeLocalEntry: function(path, entry, callback) {
  try {
   if (FS.isDir(entry.mode)) {
    FS.mkdir(path, entry.mode);
   } else if (FS.isFile(entry.mode)) {
    FS.writeFile(path, entry.contents, {
     canOwn: true
    });
   } else {
    return callback(new Error("node type not supported"));
   }
   FS.chmod(path, entry.mode);
   FS.utime(path, entry.timestamp, entry.timestamp);
  } catch (e) {
   return callback(e);
  }
  callback(null);
 },
 removeLocalEntry: function(path, callback) {
  try {
   var lookup = FS.lookupPath(path);
   var stat = FS.stat(path);
   if (FS.isDir(stat.mode)) {
    FS.rmdir(path);
   } else if (FS.isFile(stat.mode)) {
    FS.unlink(path);
   }
  } catch (e) {
   return callback(e);
  }
  callback(null);
 },
 loadRemoteEntry: function(store, path, callback) {
  var req = store.get(path);
  req.onsuccess = function(event) {
   callback(null, event.target.result);
  };
  req.onerror = function(e) {
   callback(this.error);
   e.preventDefault();
  };
 },
 storeRemoteEntry: function(store, path, entry, callback) {
  var req = store.put(entry, path);
  req.onsuccess = function() {
   callback(null);
  };
  req.onerror = function(e) {
   callback(this.error);
   e.preventDefault();
  };
 },
 removeRemoteEntry: function(store, path, callback) {
  var req = store.delete(path);
  req.onsuccess = function() {
   callback(null);
  };
  req.onerror = function(e) {
   callback(this.error);
   e.preventDefault();
  };
 },
 reconcile: function(src, dst, callback) {
  var total = 0;
  var create = [];
  Object.keys(src.entries).forEach(function(key) {
   var e = src.entries[key];
   var e2 = dst.entries[key];
   if (!e2 || e.timestamp > e2.timestamp) {
    create.push(key);
    total++;
   }
  });
  var remove = [];
  Object.keys(dst.entries).forEach(function(key) {
   var e = dst.entries[key];
   var e2 = src.entries[key];
   if (!e2) {
    remove.push(key);
    total++;
   }
  });
  if (!total) {
   return callback(null);
  }
  var errored = false;
  var completed = 0;
  var db = src.type === "remote" ? src.db : dst.db;
  var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readwrite");
  var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return callback(err);
    }
    return;
   }
   if (++completed >= total) {
    return callback(null);
   }
  }
  transaction.onerror = function(e) {
   done(this.error);
   e.preventDefault();
  };
  create.sort().forEach(function(path) {
   if (dst.type === "local") {
    IDBFS.loadRemoteEntry(store, path, function(err, entry) {
     if (err) return done(err);
     IDBFS.storeLocalEntry(path, entry, done);
    });
   } else {
    IDBFS.loadLocalEntry(path, function(err, entry) {
     if (err) return done(err);
     IDBFS.storeRemoteEntry(store, path, entry, done);
    });
   }
  });
  remove.sort().reverse().forEach(function(path) {
   if (dst.type === "local") {
    IDBFS.removeLocalEntry(path, done);
   } else {
    IDBFS.removeRemoteEntry(store, path, done);
   }
  });
 }
};

var NODEFS = {
 isWindows: false,
 staticInit: function() {
  NODEFS.isWindows = !!process.platform.match(/^win/);
  var flags = process["binding"]("constants");
  if (flags["fs"]) {
   flags = flags["fs"];
  }
  NODEFS.flagsForNodeMap = {
   1024: flags["O_APPEND"],
   64: flags["O_CREAT"],
   128: flags["O_EXCL"],
   0: flags["O_RDONLY"],
   2: flags["O_RDWR"],
   4096: flags["O_SYNC"],
   512: flags["O_TRUNC"],
   1: flags["O_WRONLY"]
  };
 },
 bufferFrom: function(arrayBuffer) {
  return Buffer.alloc ? Buffer.from(arrayBuffer) : new Buffer(arrayBuffer);
 },
 mount: function(mount) {
  assert(ENVIRONMENT_IS_NODE);
  return NODEFS.createNode(null, "/", NODEFS.getMode(mount.opts.root), 0);
 },
 createNode: function(parent, name, mode, dev) {
  if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
   throw new FS.ErrnoError(22);
  }
  var node = FS.createNode(parent, name, mode);
  node.node_ops = NODEFS.node_ops;
  node.stream_ops = NODEFS.stream_ops;
  return node;
 },
 getMode: function(path) {
  var stat;
  try {
   stat = fs.lstatSync(path);
   if (NODEFS.isWindows) {
    stat.mode = stat.mode | (stat.mode & 292) >> 2;
   }
  } catch (e) {
   if (!e.code) throw e;
   throw new FS.ErrnoError(-e.errno);
  }
  return stat.mode;
 },
 realPath: function(node) {
  var parts = [];
  while (node.parent !== node) {
   parts.push(node.name);
   node = node.parent;
  }
  parts.push(node.mount.opts.root);
  parts.reverse();
  return PATH.join.apply(null, parts);
 },
 flagsForNode: function(flags) {
  flags &= ~2097152;
  flags &= ~2048;
  flags &= ~32768;
  flags &= ~524288;
  var newFlags = 0;
  for (var k in NODEFS.flagsForNodeMap) {
   if (flags & k) {
    newFlags |= NODEFS.flagsForNodeMap[k];
    flags ^= k;
   }
  }
  if (!flags) {
   return newFlags;
  } else {
   throw new FS.ErrnoError(22);
  }
 },
 node_ops: {
  getattr: function(node) {
   var path = NODEFS.realPath(node);
   var stat;
   try {
    stat = fs.lstatSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
   if (NODEFS.isWindows && !stat.blksize) {
    stat.blksize = 4096;
   }
   if (NODEFS.isWindows && !stat.blocks) {
    stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;
   }
   return {
    dev: stat.dev,
    ino: stat.ino,
    mode: stat.mode,
    nlink: stat.nlink,
    uid: stat.uid,
    gid: stat.gid,
    rdev: stat.rdev,
    size: stat.size,
    atime: stat.atime,
    mtime: stat.mtime,
    ctime: stat.ctime,
    blksize: stat.blksize,
    blocks: stat.blocks
   };
  },
  setattr: function(node, attr) {
   var path = NODEFS.realPath(node);
   try {
    if (attr.mode !== undefined) {
     fs.chmodSync(path, attr.mode);
     node.mode = attr.mode;
    }
    if (attr.timestamp !== undefined) {
     var date = new Date(attr.timestamp);
     fs.utimesSync(path, date, date);
    }
    if (attr.size !== undefined) {
     fs.truncateSync(path, attr.size);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  lookup: function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   var mode = NODEFS.getMode(path);
   return NODEFS.createNode(parent, name, mode);
  },
  mknod: function(parent, name, mode, dev) {
   var node = NODEFS.createNode(parent, name, mode, dev);
   var path = NODEFS.realPath(node);
   try {
    if (FS.isDir(node.mode)) {
     fs.mkdirSync(path, node.mode);
    } else {
     fs.writeFileSync(path, "", {
      mode: node.mode
     });
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
   return node;
  },
  rename: function(oldNode, newDir, newName) {
   var oldPath = NODEFS.realPath(oldNode);
   var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
   try {
    fs.renameSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  unlink: function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.unlinkSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  rmdir: function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.rmdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  readdir: function(node) {
   var path = NODEFS.realPath(node);
   try {
    return fs.readdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  symlink: function(parent, newName, oldPath) {
   var newPath = PATH.join2(NODEFS.realPath(parent), newName);
   try {
    fs.symlinkSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  readlink: function(node) {
   var path = NODEFS.realPath(node);
   try {
    path = fs.readlinkSync(path);
    path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
    return path;
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  }
 },
 stream_ops: {
  open: function(stream) {
   var path = NODEFS.realPath(stream.node);
   try {
    if (FS.isFile(stream.node.mode)) {
     stream.nfd = fs.openSync(path, NODEFS.flagsForNode(stream.flags));
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  close: function(stream) {
   try {
    if (FS.isFile(stream.node.mode) && stream.nfd) {
     fs.closeSync(stream.nfd);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  read: function(stream, buffer, offset, length, position) {
   if (length === 0) return 0;
   try {
    return fs.readSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
   } catch (e) {
    throw new FS.ErrnoError(-e.errno);
   }
  },
  write: function(stream, buffer, offset, length, position) {
   try {
    return fs.writeSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
   } catch (e) {
    throw new FS.ErrnoError(-e.errno);
   }
  },
  llseek: function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     try {
      var stat = fs.fstatSync(stream.nfd);
      position += stat.size;
     } catch (e) {
      throw new FS.ErrnoError(-e.errno);
     }
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(22);
   }
   return position;
  }
 }
};

var WORKERFS = {
 DIR_MODE: 16895,
 FILE_MODE: 33279,
 reader: null,
 mount: function(mount) {
  assert(ENVIRONMENT_IS_WORKER);
  if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
  var root = WORKERFS.createNode(null, "/", WORKERFS.DIR_MODE, 0);
  var createdParents = {};
  function ensureParent(path) {
   var parts = path.split("/");
   var parent = root;
   for (var i = 0; i < parts.length - 1; i++) {
    var curr = parts.slice(0, i + 1).join("/");
    if (!createdParents[curr]) {
     createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
    }
    parent = createdParents[curr];
   }
   return parent;
  }
  function base(path) {
   var parts = path.split("/");
   return parts[parts.length - 1];
  }
  Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
   WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
  });
  (mount.opts["blobs"] || []).forEach(function(obj) {
   WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
  });
  (mount.opts["packages"] || []).forEach(function(pack) {
   pack["metadata"].files.forEach(function(file) {
    var name = file.filename.substr(1);
    WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack["blob"].slice(file.start, file.end));
   });
  });
  return root;
 },
 createNode: function(parent, name, mode, dev, contents, mtime) {
  var node = FS.createNode(parent, name, mode);
  node.mode = mode;
  node.node_ops = WORKERFS.node_ops;
  node.stream_ops = WORKERFS.stream_ops;
  node.timestamp = (mtime || new Date()).getTime();
  assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
  if (mode === WORKERFS.FILE_MODE) {
   node.size = contents.size;
   node.contents = contents;
  } else {
   node.size = 4096;
   node.contents = {};
  }
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 },
 node_ops: {
  getattr: function(node) {
   return {
    dev: 1,
    ino: undefined,
    mode: node.mode,
    nlink: 1,
    uid: 0,
    gid: 0,
    rdev: undefined,
    size: node.size,
    atime: new Date(node.timestamp),
    mtime: new Date(node.timestamp),
    ctime: new Date(node.timestamp),
    blksize: 4096,
    blocks: Math.ceil(node.size / 4096)
   };
  },
  setattr: function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
  },
  lookup: function(parent, name) {
   throw new FS.ErrnoError(2);
  },
  mknod: function(parent, name, mode, dev) {
   throw new FS.ErrnoError(1);
  },
  rename: function(oldNode, newDir, newName) {
   throw new FS.ErrnoError(1);
  },
  unlink: function(parent, name) {
   throw new FS.ErrnoError(1);
  },
  rmdir: function(parent, name) {
   throw new FS.ErrnoError(1);
  },
  readdir: function(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  },
  symlink: function(parent, newName, oldPath) {
   throw new FS.ErrnoError(1);
  },
  readlink: function(node) {
   throw new FS.ErrnoError(1);
  }
 },
 stream_ops: {
  read: function(stream, buffer, offset, length, position) {
   if (position >= stream.node.size) return 0;
   var chunk = stream.node.contents.slice(position, position + length);
   var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
   buffer.set(new Uint8Array(ab), offset);
   return chunk.size;
  },
  write: function(stream, buffer, offset, length, position) {
   throw new FS.ErrnoError(5);
  },
  llseek: function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.size;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(22);
   }
   return position;
  }
 }
};

var ERRNO_MESSAGES = {
 0: "Success",
 1: "Not super-user",
 2: "No such file or directory",
 3: "No such process",
 4: "Interrupted system call",
 5: "I/O error",
 6: "No such device or address",
 7: "Arg list too long",
 8: "Exec format error",
 9: "Bad file number",
 10: "No children",
 11: "No more processes",
 12: "Not enough core",
 13: "Permission denied",
 14: "Bad address",
 15: "Block device required",
 16: "Mount device busy",
 17: "File exists",
 18: "Cross-device link",
 19: "No such device",
 20: "Not a directory",
 21: "Is a directory",
 22: "Invalid argument",
 23: "Too many open files in system",
 24: "Too many open files",
 25: "Not a typewriter",
 26: "Text file busy",
 27: "File too large",
 28: "No space left on device",
 29: "Illegal seek",
 30: "Read only file system",
 31: "Too many links",
 32: "Broken pipe",
 33: "Math arg out of domain of func",
 34: "Math result not representable",
 35: "File locking deadlock error",
 36: "File or path name too long",
 37: "No record locks available",
 38: "Function not implemented",
 39: "Directory not empty",
 40: "Too many symbolic links",
 42: "No message of desired type",
 43: "Identifier removed",
 44: "Channel number out of range",
 45: "Level 2 not synchronized",
 46: "Level 3 halted",
 47: "Level 3 reset",
 48: "Link number out of range",
 49: "Protocol driver not attached",
 50: "No CSI structure available",
 51: "Level 2 halted",
 52: "Invalid exchange",
 53: "Invalid request descriptor",
 54: "Exchange full",
 55: "No anode",
 56: "Invalid request code",
 57: "Invalid slot",
 59: "Bad font file fmt",
 60: "Device not a stream",
 61: "No data (for no delay io)",
 62: "Timer expired",
 63: "Out of streams resources",
 64: "Machine is not on the network",
 65: "Package not installed",
 66: "The object is remote",
 67: "The link has been severed",
 68: "Advertise error",
 69: "Srmount error",
 70: "Communication error on send",
 71: "Protocol error",
 72: "Multihop attempted",
 73: "Cross mount point (not really error)",
 74: "Trying to read unreadable message",
 75: "Value too large for defined data type",
 76: "Given log. name not unique",
 77: "f.d. invalid for this operation",
 78: "Remote address changed",
 79: "Can   access a needed shared lib",
 80: "Accessing a corrupted shared lib",
 81: ".lib section in a.out corrupted",
 82: "Attempting to link in too many libs",
 83: "Attempting to exec a shared library",
 84: "Illegal byte sequence",
 86: "Streams pipe error",
 87: "Too many users",
 88: "Socket operation on non-socket",
 89: "Destination address required",
 90: "Message too long",
 91: "Protocol wrong type for socket",
 92: "Protocol not available",
 93: "Unknown protocol",
 94: "Socket type not supported",
 95: "Not supported",
 96: "Protocol family not supported",
 97: "Address family not supported by protocol family",
 98: "Address already in use",
 99: "Address not available",
 100: "Network interface is not configured",
 101: "Network is unreachable",
 102: "Connection reset by network",
 103: "Connection aborted",
 104: "Connection reset by peer",
 105: "No buffer space available",
 106: "Socket is already connected",
 107: "Socket is not connected",
 108: "Can't send after socket shutdown",
 109: "Too many references",
 110: "Connection timed out",
 111: "Connection refused",
 112: "Host is down",
 113: "Host is unreachable",
 114: "Socket already connected",
 115: "Connection already in progress",
 116: "Stale file handle",
 122: "Quota exceeded",
 123: "No medium (in tape drive)",
 125: "Operation canceled",
 130: "Previous owner died",
 131: "State not recoverable"
};

var ERRNO_CODES = {
 EPERM: 1,
 ENOENT: 2,
 ESRCH: 3,
 EINTR: 4,
 EIO: 5,
 ENXIO: 6,
 E2BIG: 7,
 ENOEXEC: 8,
 EBADF: 9,
 ECHILD: 10,
 EAGAIN: 11,
 EWOULDBLOCK: 11,
 ENOMEM: 12,
 EACCES: 13,
 EFAULT: 14,
 ENOTBLK: 15,
 EBUSY: 16,
 EEXIST: 17,
 EXDEV: 18,
 ENODEV: 19,
 ENOTDIR: 20,
 EISDIR: 21,
 EINVAL: 22,
 ENFILE: 23,
 EMFILE: 24,
 ENOTTY: 25,
 ETXTBSY: 26,
 EFBIG: 27,
 ENOSPC: 28,
 ESPIPE: 29,
 EROFS: 30,
 EMLINK: 31,
 EPIPE: 32,
 EDOM: 33,
 ERANGE: 34,
 ENOMSG: 42,
 EIDRM: 43,
 ECHRNG: 44,
 EL2NSYNC: 45,
 EL3HLT: 46,
 EL3RST: 47,
 ELNRNG: 48,
 EUNATCH: 49,
 ENOCSI: 50,
 EL2HLT: 51,
 EDEADLK: 35,
 ENOLCK: 37,
 EBADE: 52,
 EBADR: 53,
 EXFULL: 54,
 ENOANO: 55,
 EBADRQC: 56,
 EBADSLT: 57,
 EDEADLOCK: 35,
 EBFONT: 59,
 ENOSTR: 60,
 ENODATA: 61,
 ETIME: 62,
 ENOSR: 63,
 ENONET: 64,
 ENOPKG: 65,
 EREMOTE: 66,
 ENOLINK: 67,
 EADV: 68,
 ESRMNT: 69,
 ECOMM: 70,
 EPROTO: 71,
 EMULTIHOP: 72,
 EDOTDOT: 73,
 EBADMSG: 74,
 ENOTUNIQ: 76,
 EBADFD: 77,
 EREMCHG: 78,
 ELIBACC: 79,
 ELIBBAD: 80,
 ELIBSCN: 81,
 ELIBMAX: 82,
 ELIBEXEC: 83,
 ENOSYS: 38,
 ENOTEMPTY: 39,
 ENAMETOOLONG: 36,
 ELOOP: 40,
 EOPNOTSUPP: 95,
 EPFNOSUPPORT: 96,
 ECONNRESET: 104,
 ENOBUFS: 105,
 EAFNOSUPPORT: 97,
 EPROTOTYPE: 91,
 ENOTSOCK: 88,
 ENOPROTOOPT: 92,
 ESHUTDOWN: 108,
 ECONNREFUSED: 111,
 EADDRINUSE: 98,
 ECONNABORTED: 103,
 ENETUNREACH: 101,
 ENETDOWN: 100,
 ETIMEDOUT: 110,
 EHOSTDOWN: 112,
 EHOSTUNREACH: 113,
 EINPROGRESS: 115,
 EALREADY: 114,
 EDESTADDRREQ: 89,
 EMSGSIZE: 90,
 EPROTONOSUPPORT: 93,
 ESOCKTNOSUPPORT: 94,
 EADDRNOTAVAIL: 99,
 ENETRESET: 102,
 EISCONN: 106,
 ENOTCONN: 107,
 ETOOMANYREFS: 109,
 EUSERS: 87,
 EDQUOT: 122,
 ESTALE: 116,
 ENOTSUP: 95,
 ENOMEDIUM: 123,
 EILSEQ: 84,
 EOVERFLOW: 75,
 ECANCELED: 125,
 ENOTRECOVERABLE: 131,
 EOWNERDEAD: 130,
 ESTRPIPE: 86
};

var FS = {
 root: null,
 mounts: [],
 devices: {},
 streams: [],
 nextInode: 1,
 nameTable: null,
 currentPath: "/",
 initialized: false,
 ignorePermissions: true,
 trackingDelegate: {},
 tracking: {
  openFlags: {
   READ: 1,
   WRITE: 2
  }
 },
 ErrnoError: null,
 genericErrors: {},
 filesystems: null,
 syncFSRequests: 0,
 handleFSError: function(e) {
  if (!(e instanceof FS.ErrnoError)) throw e + " : " + stackTrace();
  return ___setErrNo(e.errno);
 },
 lookupPath: function(path, opts) {
  path = PATH.resolve(FS.cwd(), path);
  opts = opts || {};
  if (!path) return {
   path: "",
   node: null
  };
  var defaults = {
   follow_mount: true,
   recurse_count: 0
  };
  for (var key in defaults) {
   if (opts[key] === undefined) {
    opts[key] = defaults[key];
   }
  }
  if (opts.recurse_count > 8) {
   throw new FS.ErrnoError(40);
  }
  var parts = PATH.normalizeArray(path.split("/").filter(function(p) {
   return !!p;
  }), false);
  var current = FS.root;
  var current_path = "/";
  for (var i = 0; i < parts.length; i++) {
   var islast = i === parts.length - 1;
   if (islast && opts.parent) {
    break;
   }
   current = FS.lookupNode(current, parts[i]);
   current_path = PATH.join2(current_path, parts[i]);
   if (FS.isMountpoint(current)) {
    if (!islast || islast && opts.follow_mount) {
     current = current.mounted.root;
    }
   }
   if (!islast || opts.follow) {
    var count = 0;
    while (FS.isLink(current.mode)) {
     var link = FS.readlink(current_path);
     current_path = PATH.resolve(PATH.dirname(current_path), link);
     var lookup = FS.lookupPath(current_path, {
      recurse_count: opts.recurse_count
     });
     current = lookup.node;
     if (count++ > 40) {
      throw new FS.ErrnoError(40);
     }
    }
   }
  }
  return {
   path: current_path,
   node: current
  };
 },
 getPath: function(node) {
  var path;
  while (true) {
   if (FS.isRoot(node)) {
    var mount = node.mount.mountpoint;
    if (!path) return mount;
    return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
   }
   path = path ? node.name + "/" + path : node.name;
   node = node.parent;
  }
 },
 hashName: function(parentid, name) {
  var hash = 0;
  for (var i = 0; i < name.length; i++) {
   hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
  }
  return (parentid + hash >>> 0) % FS.nameTable.length;
 },
 hashAddNode: function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  node.name_next = FS.nameTable[hash];
  FS.nameTable[hash] = node;
 },
 hashRemoveNode: function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  if (FS.nameTable[hash] === node) {
   FS.nameTable[hash] = node.name_next;
  } else {
   var current = FS.nameTable[hash];
   while (current) {
    if (current.name_next === node) {
     current.name_next = node.name_next;
     break;
    }
    current = current.name_next;
   }
  }
 },
 lookupNode: function(parent, name) {
  var err = FS.mayLookup(parent);
  if (err) {
   throw new FS.ErrnoError(err, parent);
  }
  var hash = FS.hashName(parent.id, name);
  for (var node = FS.nameTable[hash]; node; node = node.name_next) {
   var nodeName = node.name;
   if (node.parent.id === parent.id && nodeName === name) {
    return node;
   }
  }
  return FS.lookup(parent, name);
 },
 createNode: function(parent, name, mode, rdev) {
  if (!FS.FSNode) {
   FS.FSNode = function(parent, name, mode, rdev) {
    if (!parent) {
     parent = this;
    }
    this.parent = parent;
    this.mount = parent.mount;
    this.mounted = null;
    this.id = FS.nextInode++;
    this.name = name;
    this.mode = mode;
    this.node_ops = {};
    this.stream_ops = {};
    this.rdev = rdev;
   };
   FS.FSNode.prototype = {};
   var readMode = 292 | 73;
   var writeMode = 146;
   Object.defineProperties(FS.FSNode.prototype, {
    read: {
     get: function() {
      return (this.mode & readMode) === readMode;
     },
     set: function(val) {
      val ? this.mode |= readMode : this.mode &= ~readMode;
     }
    },
    write: {
     get: function() {
      return (this.mode & writeMode) === writeMode;
     },
     set: function(val) {
      val ? this.mode |= writeMode : this.mode &= ~writeMode;
     }
    },
    isFolder: {
     get: function() {
      return FS.isDir(this.mode);
     }
    },
    isDevice: {
     get: function() {
      return FS.isChrdev(this.mode);
     }
    }
   });
  }
  var node = new FS.FSNode(parent, name, mode, rdev);
  FS.hashAddNode(node);
  return node;
 },
 destroyNode: function(node) {
  FS.hashRemoveNode(node);
 },
 isRoot: function(node) {
  return node === node.parent;
 },
 isMountpoint: function(node) {
  return !!node.mounted;
 },
 isFile: function(mode) {
  return (mode & 61440) === 32768;
 },
 isDir: function(mode) {
  return (mode & 61440) === 16384;
 },
 isLink: function(mode) {
  return (mode & 61440) === 40960;
 },
 isChrdev: function(mode) {
  return (mode & 61440) === 8192;
 },
 isBlkdev: function(mode) {
  return (mode & 61440) === 24576;
 },
 isFIFO: function(mode) {
  return (mode & 61440) === 4096;
 },
 isSocket: function(mode) {
  return (mode & 49152) === 49152;
 },
 flagModes: {
  "r": 0,
  "rs": 1052672,
  "r+": 2,
  "w": 577,
  "wx": 705,
  "xw": 705,
  "w+": 578,
  "wx+": 706,
  "xw+": 706,
  "a": 1089,
  "ax": 1217,
  "xa": 1217,
  "a+": 1090,
  "ax+": 1218,
  "xa+": 1218
 },
 modeStringToFlags: function(str) {
  var flags = FS.flagModes[str];
  if (typeof flags === "undefined") {
   throw new Error("Unknown file open mode: " + str);
  }
  return flags;
 },
 flagsToPermissionString: function(flag) {
  var perms = [ "r", "w", "rw" ][flag & 3];
  if (flag & 512) {
   perms += "w";
  }
  return perms;
 },
 nodePermissions: function(node, perms) {
  if (FS.ignorePermissions) {
   return 0;
  }
  if (perms.indexOf("r") !== -1 && !(node.mode & 292)) {
   return 13;
  } else if (perms.indexOf("w") !== -1 && !(node.mode & 146)) {
   return 13;
  } else if (perms.indexOf("x") !== -1 && !(node.mode & 73)) {
   return 13;
  }
  return 0;
 },
 mayLookup: function(dir) {
  var err = FS.nodePermissions(dir, "x");
  if (err) return err;
  if (!dir.node_ops.lookup) return 13;
  return 0;
 },
 mayCreate: function(dir, name) {
  try {
   var node = FS.lookupNode(dir, name);
   return 17;
  } catch (e) {}
  return FS.nodePermissions(dir, "wx");
 },
 mayDelete: function(dir, name, isdir) {
  var node;
  try {
   node = FS.lookupNode(dir, name);
  } catch (e) {
   return e.errno;
  }
  var err = FS.nodePermissions(dir, "wx");
  if (err) {
   return err;
  }
  if (isdir) {
   if (!FS.isDir(node.mode)) {
    return 20;
   }
   if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
    return 16;
   }
  } else {
   if (FS.isDir(node.mode)) {
    return 21;
   }
  }
  return 0;
 },
 mayOpen: function(node, flags) {
  if (!node) {
   return 2;
  }
  if (FS.isLink(node.mode)) {
   return 40;
  } else if (FS.isDir(node.mode)) {
   if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
    return 21;
   }
  }
  return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
 },
 MAX_OPEN_FDS: 4096,
 nextfd: function(fd_start, fd_end) {
  fd_start = fd_start || 0;
  fd_end = fd_end || FS.MAX_OPEN_FDS;
  for (var fd = fd_start; fd <= fd_end; fd++) {
   if (!FS.streams[fd]) {
    return fd;
   }
  }
  throw new FS.ErrnoError(24);
 },
 getStream: function(fd) {
  return FS.streams[fd];
 },
 createStream: function(stream, fd_start, fd_end) {
  if (!FS.FSStream) {
   FS.FSStream = function() {};
   FS.FSStream.prototype = {};
   Object.defineProperties(FS.FSStream.prototype, {
    object: {
     get: function() {
      return this.node;
     },
     set: function(val) {
      this.node = val;
     }
    },
    isRead: {
     get: function() {
      return (this.flags & 2097155) !== 1;
     }
    },
    isWrite: {
     get: function() {
      return (this.flags & 2097155) !== 0;
     }
    },
    isAppend: {
     get: function() {
      return this.flags & 1024;
     }
    }
   });
  }
  var newStream = new FS.FSStream();
  for (var p in stream) {
   newStream[p] = stream[p];
  }
  stream = newStream;
  var fd = FS.nextfd(fd_start, fd_end);
  stream.fd = fd;
  FS.streams[fd] = stream;
  return stream;
 },
 closeStream: function(fd) {
  FS.streams[fd] = null;
 },
 chrdev_stream_ops: {
  open: function(stream) {
   var device = FS.getDevice(stream.node.rdev);
   stream.stream_ops = device.stream_ops;
   if (stream.stream_ops.open) {
    stream.stream_ops.open(stream);
   }
  },
  llseek: function() {
   throw new FS.ErrnoError(29);
  }
 },
 major: function(dev) {
  return dev >> 8;
 },
 minor: function(dev) {
  return dev & 255;
 },
 makedev: function(ma, mi) {
  return ma << 8 | mi;
 },
 registerDevice: function(dev, ops) {
  FS.devices[dev] = {
   stream_ops: ops
  };
 },
 getDevice: function(dev) {
  return FS.devices[dev];
 },
 getMounts: function(mount) {
  var mounts = [];
  var check = [ mount ];
  while (check.length) {
   var m = check.pop();
   mounts.push(m);
   check.push.apply(check, m.mounts);
  }
  return mounts;
 },
 syncfs: function(populate, callback) {
  if (typeof populate === "function") {
   callback = populate;
   populate = false;
  }
  FS.syncFSRequests++;
  if (FS.syncFSRequests > 1) {
   console.log("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
  }
  var mounts = FS.getMounts(FS.root.mount);
  var completed = 0;
  function doCallback(err) {
   assert(FS.syncFSRequests > 0);
   FS.syncFSRequests--;
   return callback(err);
  }
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return doCallback(err);
    }
    return;
   }
   if (++completed >= mounts.length) {
    doCallback(null);
   }
  }
  mounts.forEach(function(mount) {
   if (!mount.type.syncfs) {
    return done(null);
   }
   mount.type.syncfs(mount, populate, done);
  });
 },
 mount: function(type, opts, mountpoint) {
  var root = mountpoint === "/";
  var pseudo = !mountpoint;
  var node;
  if (root && FS.root) {
   throw new FS.ErrnoError(16);
  } else if (!root && !pseudo) {
   var lookup = FS.lookupPath(mountpoint, {
    follow_mount: false
   });
   mountpoint = lookup.path;
   node = lookup.node;
   if (FS.isMountpoint(node)) {
    throw new FS.ErrnoError(16);
   }
   if (!FS.isDir(node.mode)) {
    throw new FS.ErrnoError(20);
   }
  }
  var mount = {
   type: type,
   opts: opts,
   mountpoint: mountpoint,
   mounts: []
  };
  var mountRoot = type.mount(mount);
  mountRoot.mount = mount;
  mount.root = mountRoot;
  if (root) {
   FS.root = mountRoot;
  } else if (node) {
   node.mounted = mount;
   if (node.mount) {
    node.mount.mounts.push(mount);
   }
  }
  return mountRoot;
 },
 unmount: function(mountpoint) {
  var lookup = FS.lookupPath(mountpoint, {
   follow_mount: false
  });
  if (!FS.isMountpoint(lookup.node)) {
   throw new FS.ErrnoError(22);
  }
  var node = lookup.node;
  var mount = node.mounted;
  var mounts = FS.getMounts(mount);
  Object.keys(FS.nameTable).forEach(function(hash) {
   var current = FS.nameTable[hash];
   while (current) {
    var next = current.name_next;
    if (mounts.indexOf(current.mount) !== -1) {
     FS.destroyNode(current);
    }
    current = next;
   }
  });
  node.mounted = null;
  var idx = node.mount.mounts.indexOf(mount);
  assert(idx !== -1);
  node.mount.mounts.splice(idx, 1);
 },
 lookup: function(parent, name) {
  return parent.node_ops.lookup(parent, name);
 },
 mknod: function(path, mode, dev) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  if (!name || name === "." || name === "..") {
   throw new FS.ErrnoError(22);
  }
  var err = FS.mayCreate(parent, name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.mknod) {
   throw new FS.ErrnoError(1);
  }
  return parent.node_ops.mknod(parent, name, mode, dev);
 },
 create: function(path, mode) {
  mode = mode !== undefined ? mode : 438;
  mode &= 4095;
  mode |= 32768;
  return FS.mknod(path, mode, 0);
 },
 mkdir: function(path, mode) {
  mode = mode !== undefined ? mode : 511;
  mode &= 511 | 512;
  mode |= 16384;
  return FS.mknod(path, mode, 0);
 },
 mkdirTree: function(path, mode) {
  var dirs = path.split("/");
  var d = "";
  for (var i = 0; i < dirs.length; ++i) {
   if (!dirs[i]) continue;
   d += "/" + dirs[i];
   try {
    FS.mkdir(d, mode);
   } catch (e) {
    if (e.errno != 17) throw e;
   }
  }
 },
 mkdev: function(path, mode, dev) {
  if (typeof dev === "undefined") {
   dev = mode;
   mode = 438;
  }
  mode |= 8192;
  return FS.mknod(path, mode, dev);
 },
 symlink: function(oldpath, newpath) {
  if (!PATH.resolve(oldpath)) {
   throw new FS.ErrnoError(2);
  }
  var lookup = FS.lookupPath(newpath, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(2);
  }
  var newname = PATH.basename(newpath);
  var err = FS.mayCreate(parent, newname);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.symlink) {
   throw new FS.ErrnoError(1);
  }
  return parent.node_ops.symlink(parent, newname, oldpath);
 },
 rename: function(old_path, new_path) {
  var old_dirname = PATH.dirname(old_path);
  var new_dirname = PATH.dirname(new_path);
  var old_name = PATH.basename(old_path);
  var new_name = PATH.basename(new_path);
  var lookup, old_dir, new_dir;
  try {
   lookup = FS.lookupPath(old_path, {
    parent: true
   });
   old_dir = lookup.node;
   lookup = FS.lookupPath(new_path, {
    parent: true
   });
   new_dir = lookup.node;
  } catch (e) {
   throw new FS.ErrnoError(16);
  }
  if (!old_dir || !new_dir) throw new FS.ErrnoError(2);
  if (old_dir.mount !== new_dir.mount) {
   throw new FS.ErrnoError(18);
  }
  var old_node = FS.lookupNode(old_dir, old_name);
  var relative = PATH.relative(old_path, new_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(22);
  }
  relative = PATH.relative(new_path, old_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(39);
  }
  var new_node;
  try {
   new_node = FS.lookupNode(new_dir, new_name);
  } catch (e) {}
  if (old_node === new_node) {
   return;
  }
  var isdir = FS.isDir(old_node.mode);
  var err = FS.mayDelete(old_dir, old_name, isdir);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!old_dir.node_ops.rename) {
   throw new FS.ErrnoError(1);
  }
  if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
   throw new FS.ErrnoError(16);
  }
  if (new_dir !== old_dir) {
   err = FS.nodePermissions(old_dir, "w");
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  try {
   if (FS.trackingDelegate["willMovePath"]) {
    FS.trackingDelegate["willMovePath"](old_path, new_path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
  FS.hashRemoveNode(old_node);
  try {
   old_dir.node_ops.rename(old_node, new_dir, new_name);
  } catch (e) {
   throw e;
  } finally {
   FS.hashAddNode(old_node);
  }
  try {
   if (FS.trackingDelegate["onMovePath"]) FS.trackingDelegate["onMovePath"](old_path, new_path);
  } catch (e) {
   console.log("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
 },
 rmdir: function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, true);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.rmdir) {
   throw new FS.ErrnoError(1);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(16);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.rmdir(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 },
 readdir: function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  if (!node.node_ops.readdir) {
   throw new FS.ErrnoError(20);
  }
  return node.node_ops.readdir(node);
 },
 unlink: function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, false);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.unlink) {
   throw new FS.ErrnoError(1);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(16);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.unlink(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 },
 readlink: function(path) {
  var lookup = FS.lookupPath(path);
  var link = lookup.node;
  if (!link) {
   throw new FS.ErrnoError(2);
  }
  if (!link.node_ops.readlink) {
   throw new FS.ErrnoError(22);
  }
  return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
 },
 stat: function(path, dontFollow) {
  var lookup = FS.lookupPath(path, {
   follow: !dontFollow
  });
  var node = lookup.node;
  if (!node) {
   throw new FS.ErrnoError(2);
  }
  if (!node.node_ops.getattr) {
   throw new FS.ErrnoError(1);
  }
  return node.node_ops.getattr(node);
 },
 lstat: function(path) {
  return FS.stat(path, true);
 },
 chmod: function(path, mode, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(1);
  }
  node.node_ops.setattr(node, {
   mode: mode & 4095 | node.mode & ~4095,
   timestamp: Date.now()
  });
 },
 lchmod: function(path, mode) {
  FS.chmod(path, mode, true);
 },
 fchmod: function(fd, mode) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(9);
  }
  FS.chmod(stream.node, mode);
 },
 chown: function(path, uid, gid, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(1);
  }
  node.node_ops.setattr(node, {
   timestamp: Date.now()
  });
 },
 lchown: function(path, uid, gid) {
  FS.chown(path, uid, gid, true);
 },
 fchown: function(fd, uid, gid) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(9);
  }
  FS.chown(stream.node, uid, gid);
 },
 truncate: function(path, len) {
  if (len < 0) {
   throw new FS.ErrnoError(22);
  }
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: true
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(1);
  }
  if (FS.isDir(node.mode)) {
   throw new FS.ErrnoError(21);
  }
  if (!FS.isFile(node.mode)) {
   throw new FS.ErrnoError(22);
  }
  var err = FS.nodePermissions(node, "w");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  node.node_ops.setattr(node, {
   size: len,
   timestamp: Date.now()
  });
 },
 ftruncate: function(fd, len) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(9);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(22);
  }
  FS.truncate(stream.node, len);
 },
 utime: function(path, atime, mtime) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  node.node_ops.setattr(node, {
   timestamp: Math.max(atime, mtime)
  });
 },
 open: function(path, flags, mode, fd_start, fd_end) {
  if (path === "") {
   throw new FS.ErrnoError(2);
  }
  flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;
  mode = typeof mode === "undefined" ? 438 : mode;
  if (flags & 64) {
   mode = mode & 4095 | 32768;
  } else {
   mode = 0;
  }
  var node;
  if (typeof path === "object") {
   node = path;
  } else {
   path = PATH.normalize(path);
   try {
    var lookup = FS.lookupPath(path, {
     follow: !(flags & 131072)
    });
    node = lookup.node;
   } catch (e) {}
  }
  var created = false;
  if (flags & 64) {
   if (node) {
    if (flags & 128) {
     throw new FS.ErrnoError(17);
    }
   } else {
    node = FS.mknod(path, mode, 0);
    created = true;
   }
  }
  if (!node) {
   throw new FS.ErrnoError(2);
  }
  if (FS.isChrdev(node.mode)) {
   flags &= ~512;
  }
  if (flags & 65536 && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(20);
  }
  if (!created) {
   var err = FS.mayOpen(node, flags);
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  if (flags & 512) {
   FS.truncate(node, 0);
  }
  flags &= ~(128 | 512);
  var stream = FS.createStream({
   node: node,
   path: FS.getPath(node),
   flags: flags,
   seekable: true,
   position: 0,
   stream_ops: node.stream_ops,
   ungotten: [],
   error: false
  }, fd_start, fd_end);
  if (stream.stream_ops.open) {
   stream.stream_ops.open(stream);
  }
  if (Module["logReadFiles"] && !(flags & 1)) {
   if (!FS.readFiles) FS.readFiles = {};
   if (!(path in FS.readFiles)) {
    FS.readFiles[path] = 1;
    console.log("FS.trackingDelegate error on read file: " + path);
   }
  }
  try {
   if (FS.trackingDelegate["onOpenFile"]) {
    var trackingFlags = 0;
    if ((flags & 2097155) !== 1) {
     trackingFlags |= FS.tracking.openFlags.READ;
    }
    if ((flags & 2097155) !== 0) {
     trackingFlags |= FS.tracking.openFlags.WRITE;
    }
    FS.trackingDelegate["onOpenFile"](path, trackingFlags);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
  }
  return stream;
 },
 close: function(stream) {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(9);
  }
  if (stream.getdents) stream.getdents = null;
  try {
   if (stream.stream_ops.close) {
    stream.stream_ops.close(stream);
   }
  } catch (e) {
   throw e;
  } finally {
   FS.closeStream(stream.fd);
  }
  stream.fd = null;
 },
 isClosed: function(stream) {
  return stream.fd === null;
 },
 llseek: function(stream, offset, whence) {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(9);
  }
  if (!stream.seekable || !stream.stream_ops.llseek) {
   throw new FS.ErrnoError(29);
  }
  if (whence != 0 && whence != 1 && whence != 2) {
   throw new FS.ErrnoError(22);
  }
  stream.position = stream.stream_ops.llseek(stream, offset, whence);
  stream.ungotten = [];
  return stream.position;
 },
 read: function(stream, buffer, offset, length, position) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(22);
  }
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(9);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(9);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(21);
  }
  if (!stream.stream_ops.read) {
   throw new FS.ErrnoError(22);
  }
  var seeking = typeof position !== "undefined";
  if (!seeking) {
   position = stream.position;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(29);
  }
  var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
  if (!seeking) stream.position += bytesRead;
  return bytesRead;
 },
 write: function(stream, buffer, offset, length, position, canOwn) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(22);
  }
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(9);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(9);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(21);
  }
  if (!stream.stream_ops.write) {
   throw new FS.ErrnoError(22);
  }
  if (stream.flags & 1024) {
   FS.llseek(stream, 0, 2);
  }
  var seeking = typeof position !== "undefined";
  if (!seeking) {
   position = stream.position;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(29);
  }
  var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
  if (!seeking) stream.position += bytesWritten;
  try {
   if (stream.path && FS.trackingDelegate["onWriteToFile"]) FS.trackingDelegate["onWriteToFile"](stream.path);
  } catch (e) {
   console.log("FS.trackingDelegate['onWriteToFile']('" + stream.path + "') threw an exception: " + e.message);
  }
  return bytesWritten;
 },
 allocate: function(stream, offset, length) {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(9);
  }
  if (offset < 0 || length <= 0) {
   throw new FS.ErrnoError(22);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(9);
  }
  if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(19);
  }
  if (!stream.stream_ops.allocate) {
   throw new FS.ErrnoError(95);
  }
  stream.stream_ops.allocate(stream, offset, length);
 },
 mmap: function(stream, buffer, offset, length, position, prot, flags) {
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(13);
  }
  if (!stream.stream_ops.mmap) {
   throw new FS.ErrnoError(19);
  }
  return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
 },
 msync: function(stream, buffer, offset, length, mmapFlags) {
  if (!stream || !stream.stream_ops.msync) {
   return 0;
  }
  return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
 },
 munmap: function(stream) {
  return 0;
 },
 ioctl: function(stream, cmd, arg) {
  if (!stream.stream_ops.ioctl) {
   throw new FS.ErrnoError(25);
  }
  return stream.stream_ops.ioctl(stream, cmd, arg);
 },
 readFile: function(path, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "r";
  opts.encoding = opts.encoding || "binary";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var ret;
  var stream = FS.open(path, opts.flags);
  var stat = FS.stat(path);
  var length = stat.size;
  var buf = new Uint8Array(length);
  FS.read(stream, buf, 0, length, 0);
  if (opts.encoding === "utf8") {
   ret = UTF8ArrayToString(buf, 0);
  } else if (opts.encoding === "binary") {
   ret = buf;
  }
  FS.close(stream);
  return ret;
 },
 writeFile: function(path, data, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "w";
  var stream = FS.open(path, opts.flags, opts.mode);
  if (typeof data === "string") {
   var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
   var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
   FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
  } else if (ArrayBuffer.isView(data)) {
   FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
  } else {
   throw new Error("Unsupported data type");
  }
  FS.close(stream);
 },
 cwd: function() {
  return FS.currentPath;
 },
 chdir: function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  if (lookup.node === null) {
   throw new FS.ErrnoError(2);
  }
  if (!FS.isDir(lookup.node.mode)) {
   throw new FS.ErrnoError(20);
  }
  var err = FS.nodePermissions(lookup.node, "x");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  FS.currentPath = lookup.path;
 },
 createDefaultDirectories: function() {
  FS.mkdir("/tmp");
  FS.mkdir("/home");
  FS.mkdir("/home/web_user");
 },
 createDefaultDevices: function() {
  FS.mkdir("/dev");
  FS.registerDevice(FS.makedev(1, 3), {
   read: function() {
    return 0;
   },
   write: function(stream, buffer, offset, length, pos) {
    return length;
   }
  });
  FS.mkdev("/dev/null", FS.makedev(1, 3));
  TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
  TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
  FS.mkdev("/dev/tty", FS.makedev(5, 0));
  FS.mkdev("/dev/tty1", FS.makedev(6, 0));
  var random_device;
  if (typeof crypto === "object" && typeof crypto["getRandomValues"] === "function") {
   var randomBuffer = new Uint8Array(1);
   random_device = function() {
    crypto.getRandomValues(randomBuffer);
    return randomBuffer[0];
   };
  } else if (ENVIRONMENT_IS_NODE) {
   try {
    var crypto_module = require("crypto");
    random_device = function() {
     return crypto_module["randomBytes"](1)[0];
    };
   } catch (e) {}
  } else {}
  if (!random_device) {
   random_device = function() {
    abort("no cryptographic support found for random_device. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };");
   };
  }
  FS.createDevice("/dev", "random", random_device);
  FS.createDevice("/dev", "urandom", random_device);
  FS.mkdir("/dev/shm");
  FS.mkdir("/dev/shm/tmp");
 },
 createSpecialDirectories: function() {
  FS.mkdir("/proc");
  FS.mkdir("/proc/self");
  FS.mkdir("/proc/self/fd");
  FS.mount({
   mount: function() {
    var node = FS.createNode("/proc/self", "fd", 16384 | 511, 73);
    node.node_ops = {
     lookup: function(parent, name) {
      var fd = +name;
      var stream = FS.getStream(fd);
      if (!stream) throw new FS.ErrnoError(9);
      var ret = {
       parent: null,
       mount: {
        mountpoint: "fake"
       },
       node_ops: {
        readlink: function() {
         return stream.path;
        }
       }
      };
      ret.parent = ret;
      return ret;
     }
    };
    return node;
   }
  }, {}, "/proc/self/fd");
 },
 createStandardStreams: function() {
  if (Module["stdin"]) {
   FS.createDevice("/dev", "stdin", Module["stdin"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdin");
  }
  if (Module["stdout"]) {
   FS.createDevice("/dev", "stdout", null, Module["stdout"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdout");
  }
  if (Module["stderr"]) {
   FS.createDevice("/dev", "stderr", null, Module["stderr"]);
  } else {
   FS.symlink("/dev/tty1", "/dev/stderr");
  }
  var stdin = FS.open("/dev/stdin", "r");
  var stdout = FS.open("/dev/stdout", "w");
  var stderr = FS.open("/dev/stderr", "w");
  assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");
  assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");
  assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
 },
 ensureErrnoError: function() {
  if (FS.ErrnoError) return;
  FS.ErrnoError = function ErrnoError(errno, node) {
   this.node = node;
   this.setErrno = function(errno) {
    this.errno = errno;
    for (var key in ERRNO_CODES) {
     if (ERRNO_CODES[key] === errno) {
      this.code = key;
      break;
     }
    }
   };
   this.setErrno(errno);
   this.message = ERRNO_MESSAGES[errno];
   if (this.stack) Object.defineProperty(this, "stack", {
    value: new Error().stack,
    writable: true
   });
   if (this.stack) this.stack = demangleAll(this.stack);
  };
  FS.ErrnoError.prototype = new Error();
  FS.ErrnoError.prototype.constructor = FS.ErrnoError;
  [ 2 ].forEach(function(code) {
   FS.genericErrors[code] = new FS.ErrnoError(code);
   FS.genericErrors[code].stack = "<generic error, no stack>";
  });
 },
 staticInit: function() {
  FS.ensureErrnoError();
  FS.nameTable = new Array(4096);
  FS.mount(MEMFS, {}, "/");
  FS.createDefaultDirectories();
  FS.createDefaultDevices();
  FS.createSpecialDirectories();
  FS.filesystems = {
   "MEMFS": MEMFS,
   "IDBFS": IDBFS,
   "NODEFS": NODEFS,
   "WORKERFS": WORKERFS
  };
 },
 init: function(input, output, error) {
  assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
  FS.init.initialized = true;
  FS.ensureErrnoError();
  Module["stdin"] = input || Module["stdin"];
  Module["stdout"] = output || Module["stdout"];
  Module["stderr"] = error || Module["stderr"];
  FS.createStandardStreams();
 },
 quit: function() {
  FS.init.initialized = false;
  var fflush = Module["_fflush"];
  if (fflush) fflush(0);
  for (var i = 0; i < FS.streams.length; i++) {
   var stream = FS.streams[i];
   if (!stream) {
    continue;
   }
   FS.close(stream);
  }
 },
 getMode: function(canRead, canWrite) {
  var mode = 0;
  if (canRead) mode |= 292 | 73;
  if (canWrite) mode |= 146;
  return mode;
 },
 joinPath: function(parts, forceRelative) {
  var path = PATH.join.apply(null, parts);
  if (forceRelative && path[0] == "/") path = path.substr(1);
  return path;
 },
 absolutePath: function(relative, base) {
  return PATH.resolve(base, relative);
 },
 standardizePath: function(path) {
  return PATH.normalize(path);
 },
 findObject: function(path, dontResolveLastLink) {
  var ret = FS.analyzePath(path, dontResolveLastLink);
  if (ret.exists) {
   return ret.object;
  } else {
   ___setErrNo(ret.error);
   return null;
  }
 },
 analyzePath: function(path, dontResolveLastLink) {
  try {
   var lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   path = lookup.path;
  } catch (e) {}
  var ret = {
   isRoot: false,
   exists: false,
   error: 0,
   name: null,
   path: null,
   object: null,
   parentExists: false,
   parentPath: null,
   parentObject: null
  };
  try {
   var lookup = FS.lookupPath(path, {
    parent: true
   });
   ret.parentExists = true;
   ret.parentPath = lookup.path;
   ret.parentObject = lookup.node;
   ret.name = PATH.basename(path);
   lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   ret.exists = true;
   ret.path = lookup.path;
   ret.object = lookup.node;
   ret.name = lookup.node.name;
   ret.isRoot = lookup.path === "/";
  } catch (e) {
   ret.error = e.errno;
  }
  return ret;
 },
 createFolder: function(parent, name, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.mkdir(path, mode);
 },
 createPath: function(parent, path, canRead, canWrite) {
  parent = typeof parent === "string" ? parent : FS.getPath(parent);
  var parts = path.split("/").reverse();
  while (parts.length) {
   var part = parts.pop();
   if (!part) continue;
   var current = PATH.join2(parent, part);
   try {
    FS.mkdir(current);
   } catch (e) {}
   parent = current;
  }
  return current;
 },
 createFile: function(parent, name, properties, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.create(path, mode);
 },
 createDataFile: function(parent, name, data, canRead, canWrite, canOwn) {
  var path = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;
  var mode = FS.getMode(canRead, canWrite);
  var node = FS.create(path, mode);
  if (data) {
   if (typeof data === "string") {
    var arr = new Array(data.length);
    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
    data = arr;
   }
   FS.chmod(node, mode | 146);
   var stream = FS.open(node, "w");
   FS.write(stream, data, 0, data.length, 0, canOwn);
   FS.close(stream);
   FS.chmod(node, mode);
  }
  return node;
 },
 createDevice: function(parent, name, input, output) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(!!input, !!output);
  if (!FS.createDevice.major) FS.createDevice.major = 64;
  var dev = FS.makedev(FS.createDevice.major++, 0);
  FS.registerDevice(dev, {
   open: function(stream) {
    stream.seekable = false;
   },
   close: function(stream) {
    if (output && output.buffer && output.buffer.length) {
     output(10);
    }
   },
   read: function(stream, buffer, offset, length, pos) {
    var bytesRead = 0;
    for (var i = 0; i < length; i++) {
     var result;
     try {
      result = input();
     } catch (e) {
      throw new FS.ErrnoError(5);
     }
     if (result === undefined && bytesRead === 0) {
      throw new FS.ErrnoError(11);
     }
     if (result === null || result === undefined) break;
     bytesRead++;
     buffer[offset + i] = result;
    }
    if (bytesRead) {
     stream.node.timestamp = Date.now();
    }
    return bytesRead;
   },
   write: function(stream, buffer, offset, length, pos) {
    for (var i = 0; i < length; i++) {
     try {
      output(buffer[offset + i]);
     } catch (e) {
      throw new FS.ErrnoError(5);
     }
    }
    if (length) {
     stream.node.timestamp = Date.now();
    }
    return i;
   }
  });
  return FS.mkdev(path, mode, dev);
 },
 createLink: function(parent, name, target, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  return FS.symlink(target, path);
 },
 forceLoadFile: function(obj) {
  if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
  var success = true;
  if (typeof XMLHttpRequest !== "undefined") {
   throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
  } else if (Module["read"]) {
   try {
    obj.contents = intArrayFromString(Module["read"](obj.url), true);
    obj.usedBytes = obj.contents.length;
   } catch (e) {
    success = false;
   }
  } else {
   throw new Error("Cannot load without read() or XMLHttpRequest.");
  }
  if (!success) ___setErrNo(5);
  return success;
 },
 createLazyFile: function(parent, name, url, canRead, canWrite) {
  function LazyUint8Array() {
   this.lengthKnown = false;
   this.chunks = [];
  }
  LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
   if (idx > this.length - 1 || idx < 0) {
    return undefined;
   }
   var chunkOffset = idx % this.chunkSize;
   var chunkNum = idx / this.chunkSize | 0;
   return this.getter(chunkNum)[chunkOffset];
  };
  LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
   this.getter = getter;
  };
  LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
   var xhr = new XMLHttpRequest();
   xhr.open("HEAD", url, false);
   xhr.send(null);
   if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
   var datalength = Number(xhr.getResponseHeader("Content-length"));
   var header;
   var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
   var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
   var chunkSize = 1024 * 1024;
   if (!hasByteServing) chunkSize = datalength;
   var doXHR = function(from, to) {
    if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
    if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
    var xhr = new XMLHttpRequest();
    xhr.open("GET", url, false);
    if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
    if (typeof Uint8Array != "undefined") xhr.responseType = "arraybuffer";
    if (xhr.overrideMimeType) {
     xhr.overrideMimeType("text/plain; charset=x-user-defined");
    }
    xhr.send(null);
    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
    if (xhr.response !== undefined) {
     return new Uint8Array(xhr.response || []);
    } else {
     return intArrayFromString(xhr.responseText || "", true);
    }
   };
   var lazyArray = this;
   lazyArray.setDataGetter(function(chunkNum) {
    var start = chunkNum * chunkSize;
    var end = (chunkNum + 1) * chunkSize - 1;
    end = Math.min(end, datalength - 1);
    if (typeof lazyArray.chunks[chunkNum] === "undefined") {
     lazyArray.chunks[chunkNum] = doXHR(start, end);
    }
    if (typeof lazyArray.chunks[chunkNum] === "undefined") throw new Error("doXHR failed!");
    return lazyArray.chunks[chunkNum];
   });
   if (usesGzip || !datalength) {
    chunkSize = datalength = 1;
    datalength = this.getter(0).length;
    chunkSize = datalength;
    console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
   }
   this._length = datalength;
   this._chunkSize = chunkSize;
   this.lengthKnown = true;
  };
  if (typeof XMLHttpRequest !== "undefined") {
   if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
   var lazyArray = new LazyUint8Array();
   Object.defineProperties(lazyArray, {
    length: {
     get: function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._length;
     }
    },
    chunkSize: {
     get: function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._chunkSize;
     }
    }
   });
   var properties = {
    isDevice: false,
    contents: lazyArray
   };
  } else {
   var properties = {
    isDevice: false,
    url: url
   };
  }
  var node = FS.createFile(parent, name, properties, canRead, canWrite);
  if (properties.contents) {
   node.contents = properties.contents;
  } else if (properties.url) {
   node.contents = null;
   node.url = properties.url;
  }
  Object.defineProperties(node, {
   usedBytes: {
    get: function() {
     return this.contents.length;
    }
   }
  });
  var stream_ops = {};
  var keys = Object.keys(node.stream_ops);
  keys.forEach(function(key) {
   var fn = node.stream_ops[key];
   stream_ops[key] = function forceLoadLazyFile() {
    if (!FS.forceLoadFile(node)) {
     throw new FS.ErrnoError(5);
    }
    return fn.apply(null, arguments);
   };
  });
  stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
   if (!FS.forceLoadFile(node)) {
    throw new FS.ErrnoError(5);
   }
   var contents = stream.node.contents;
   if (position >= contents.length) return 0;
   var size = Math.min(contents.length - position, length);
   assert(size >= 0);
   if (contents.slice) {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents[position + i];
    }
   } else {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents.get(position + i);
    }
   }
   return size;
  };
  node.stream_ops = stream_ops;
  return node;
 },
 createPreloadedFile: function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
  Browser.init();
  var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
  var dep = getUniqueRunDependency("cp " + fullname);
  function processData(byteArray) {
   function finish(byteArray) {
    if (preFinish) preFinish();
    if (!dontCreateFile) {
     FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
    }
    if (onload) onload();
    removeRunDependency(dep);
   }
   var handled = false;
   Module["preloadPlugins"].forEach(function(plugin) {
    if (handled) return;
    if (plugin["canHandle"](fullname)) {
     plugin["handle"](byteArray, fullname, finish, function() {
      if (onerror) onerror();
      removeRunDependency(dep);
     });
     handled = true;
    }
   });
   if (!handled) finish(byteArray);
  }
  addRunDependency(dep);
  if (typeof url == "string") {
   Browser.asyncLoad(url, function(byteArray) {
    processData(byteArray);
   }, onerror);
  } else {
   processData(url);
  }
 },
 indexedDB: function() {
  return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
 },
 DB_NAME: function() {
  return "EM_FS_" + window.location.pathname;
 },
 DB_VERSION: 20,
 DB_STORE_NAME: "FILE_DATA",
 saveFilesToDB: function(paths, onload, onerror) {
  onload = onload || function() {};
  onerror = onerror || function() {};
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
   console.log("creating db");
   var db = openRequest.result;
   db.createObjectStore(FS.DB_STORE_NAME);
  };
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   var transaction = db.transaction([ FS.DB_STORE_NAME ], "readwrite");
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach(function(path) {
    var putRequest = files.put(FS.analyzePath(path).object.contents, path);
    putRequest.onsuccess = function putRequest_onsuccess() {
     ok++;
     if (ok + fail == total) finish();
    };
    putRequest.onerror = function putRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   });
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 },
 loadFilesFromDB: function(paths, onload, onerror) {
  onload = onload || function() {};
  onerror = onerror || function() {};
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = onerror;
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   try {
    var transaction = db.transaction([ FS.DB_STORE_NAME ], "readonly");
   } catch (e) {
    onerror(e);
    return;
   }
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach(function(path) {
    var getRequest = files.get(path);
    getRequest.onsuccess = function getRequest_onsuccess() {
     if (FS.analyzePath(path).exists) {
      FS.unlink(path);
     }
     FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
     ok++;
     if (ok + fail == total) finish();
    };
    getRequest.onerror = function getRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   });
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 }
};

var SYSCALLS = {
 DEFAULT_POLLMASK: 5,
 mappings: {},
 umask: 511,
 calculateAt: function(dirfd, path) {
  if (path[0] !== "/") {
   var dir;
   if (dirfd === -100) {
    dir = FS.cwd();
   } else {
    var dirstream = FS.getStream(dirfd);
    if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
    dir = dirstream.path;
   }
   path = PATH.join2(dir, path);
  }
  return path;
 },
 doStat: function(func, path, buf) {
  try {
   var stat = func(path);
  } catch (e) {
   if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
    return -ERRNO_CODES.ENOTDIR;
   }
   throw e;
  }
  HEAP32[buf >> 2] = stat.dev;
  HEAP32[buf + 4 >> 2] = 0;
  HEAP32[buf + 8 >> 2] = stat.ino;
  HEAP32[buf + 12 >> 2] = stat.mode;
  HEAP32[buf + 16 >> 2] = stat.nlink;
  HEAP32[buf + 20 >> 2] = stat.uid;
  HEAP32[buf + 24 >> 2] = stat.gid;
  HEAP32[buf + 28 >> 2] = stat.rdev;
  HEAP32[buf + 32 >> 2] = 0;
  tempI64 = [ stat.size >>> 0, (tempDouble = stat.size, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], 
  HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];
  HEAP32[buf + 48 >> 2] = 4096;
  HEAP32[buf + 52 >> 2] = stat.blocks;
  HEAP32[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;
  HEAP32[buf + 60 >> 2] = 0;
  HEAP32[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;
  HEAP32[buf + 68 >> 2] = 0;
  HEAP32[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;
  HEAP32[buf + 76 >> 2] = 0;
  tempI64 = [ stat.ino >>> 0, (tempDouble = stat.ino, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], 
  HEAP32[buf + 80 >> 2] = tempI64[0], HEAP32[buf + 84 >> 2] = tempI64[1];
  return 0;
 },
 doMsync: function(addr, stream, len, flags) {
  var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
  FS.msync(stream, buffer, 0, len, flags);
 },
 doMkdir: function(path, mode) {
  path = PATH.normalize(path);
  if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);
  FS.mkdir(path, mode, 0);
  return 0;
 },
 doMknod: function(path, mode, dev) {
  switch (mode & 61440) {
  case 32768:
  case 8192:
  case 24576:
  case 4096:
  case 49152:
   break;

  default:
   return -ERRNO_CODES.EINVAL;
  }
  FS.mknod(path, mode, dev);
  return 0;
 },
 doReadlink: function(path, buf, bufsize) {
  if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
  var ret = FS.readlink(path);
  var len = Math.min(bufsize, lengthBytesUTF8(ret));
  var endChar = HEAP8[buf + len];
  stringToUTF8(ret, buf, bufsize + 1);
  HEAP8[buf + len] = endChar;
  return len;
 },
 doAccess: function(path, amode) {
  if (amode & ~7) {
   return -ERRNO_CODES.EINVAL;
  }
  var node;
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  node = lookup.node;
  var perms = "";
  if (amode & 4) perms += "r";
  if (amode & 2) perms += "w";
  if (amode & 1) perms += "x";
  if (perms && FS.nodePermissions(node, perms)) {
   return -ERRNO_CODES.EACCES;
  }
  return 0;
 },
 doDup: function(path, flags, suggestFD) {
  var suggest = FS.getStream(suggestFD);
  if (suggest) FS.close(suggest);
  return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
 },
 doReadv: function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.read(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
   if (curr < len) break;
  }
  return ret;
 },
 doWritev: function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.write(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
  }
  return ret;
 },
 varargs: 0,
 get: function(varargs) {
  SYSCALLS.varargs += 4;
  var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
  return ret;
 },
 getStr: function() {
  var ret = UTF8ToString(SYSCALLS.get());
  return ret;
 },
 getStreamFromFD: function() {
  var stream = FS.getStream(SYSCALLS.get());
  if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return stream;
 },
 getSocketFromFD: function() {
  var socket = SOCKFS.getSocket(SYSCALLS.get());
  if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return socket;
 },
 getSocketAddress: function(allowNull) {
  var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
  if (allowNull && addrp === 0) return null;
  var info = __read_sockaddr(addrp, addrlen);
  if (info.errno) throw new FS.ErrnoError(info.errno);
  info.addr = DNS.lookup_addr(info.addr) || info.addr;
  return info;
 },
 get64: function() {
  var low = SYSCALLS.get(), high = SYSCALLS.get();
  if (low >= 0) assert(high === 0); else assert(high === -1);
  return low;
 },
 getZero: function() {
  assert(SYSCALLS.get() === 0);
 }
};

function ___syscall10(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var path = SYSCALLS.getStr();
  FS.unlink(path);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall140(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
  if (!(offset_high == -1 && offset_low < 0) && !(offset_high == 0 && offset_low >= 0)) {
   return -ERRNO_CODES.EOVERFLOW;
  }
  var offset = offset_low;
  FS.llseek(stream, offset, whence);
  tempI64 = [ stream.position >>> 0, (tempDouble = stream.position, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], 
  HEAP32[result >> 2] = tempI64[0], HEAP32[result + 4 >> 2] = tempI64[1];
  if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall145(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doReadv(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall146(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doWritev(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall221(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
  switch (cmd) {
  case 0:
   {
    var arg = SYSCALLS.get();
    if (arg < 0) {
     return -ERRNO_CODES.EINVAL;
    }
    var newStream;
    newStream = FS.open(stream.path, stream.flags, 0, arg);
    return newStream.fd;
   }

  case 1:
  case 2:
   return 0;

  case 3:
   return stream.flags;

  case 4:
   {
    var arg = SYSCALLS.get();
    stream.flags |= arg;
    return 0;
   }

  case 12:
   {
    var arg = SYSCALLS.get();
    var offset = 0;
    HEAP16[arg + offset >> 1] = 2;
    return 0;
   }

  case 13:
  case 14:
   return 0;

  case 16:
  case 8:
   return -ERRNO_CODES.EINVAL;

  case 9:
   ___setErrNo(ERRNO_CODES.EINVAL);
   return -1;

  default:
   {
    return -ERRNO_CODES.EINVAL;
   }
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall5(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get();
  var stream = FS.open(pathname, flags, mode);
  return stream.fd;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall54(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
  switch (op) {
  case 21509:
  case 21505:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }

  case 21510:
  case 21511:
  case 21512:
  case 21506:
  case 21507:
  case 21508:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }

  case 21519:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    var argp = SYSCALLS.get();
    HEAP32[argp >> 2] = 0;
    return 0;
   }

  case 21520:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return -ERRNO_CODES.EINVAL;
   }

  case 21531:
   {
    var argp = SYSCALLS.get();
    return FS.ioctl(stream, op, argp);
   }

  case 21523:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }

  case 21524:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }

  default:
   abort("bad ioctl syscall " + op);
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall6(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD();
  FS.close(stream);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall91(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var addr = SYSCALLS.get(), len = SYSCALLS.get();
  var info = SYSCALLS.mappings[addr];
  if (!info) return 0;
  if (len === info.len) {
   var stream = FS.getStream(info.fd);
   SYSCALLS.doMsync(addr, stream, len, info.flags);
   FS.munmap(stream);
   SYSCALLS.mappings[addr] = null;
   if (info.allocated) {
    _free(info.malloc);
   }
  }
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___unlock() {}

function getShiftFromSize(size) {
 switch (size) {
 case 1:
  return 0;

 case 2:
  return 1;

 case 4:
  return 2;

 case 8:
  return 3;

 default:
  throw new TypeError("Unknown type size: " + size);
 }
}

function embind_init_charCodes() {
 var codes = new Array(256);
 for (var i = 0; i < 256; ++i) {
  codes[i] = String.fromCharCode(i);
 }
 embind_charCodes = codes;
}

var embind_charCodes = undefined;

function readLatin1String(ptr) {
 var ret = "";
 var c = ptr;
 while (HEAPU8[c]) {
  ret += embind_charCodes[HEAPU8[c++]];
 }
 return ret;
}

var awaitingDependencies = {};

var registeredTypes = {};

var typeDependencies = {};

var char_0 = 48;

var char_9 = 57;

function makeLegalFunctionName(name) {
 if (undefined === name) {
  return "_unknown";
 }
 name = name.replace(/[^a-zA-Z0-9_]/g, "$");
 var f = name.charCodeAt(0);
 if (f >= char_0 && f <= char_9) {
  return "_" + name;
 } else {
  return name;
 }
}

function createNamedFunction(name, body) {
 name = makeLegalFunctionName(name);
 return new Function("body", "return function " + name + "() {\n" + '    "use strict";' + "    return body.apply(this, arguments);\n" + "};\n")(body);
}

function extendError(baseErrorType, errorName) {
 var errorClass = createNamedFunction(errorName, function(message) {
  this.name = errorName;
  this.message = message;
  var stack = new Error(message).stack;
  if (stack !== undefined) {
   this.stack = this.toString() + "\n" + stack.replace(/^Error(:[^\n]*)?\n/, "");
  }
 });
 errorClass.prototype = Object.create(baseErrorType.prototype);
 errorClass.prototype.constructor = errorClass;
 errorClass.prototype.toString = function() {
  if (this.message === undefined) {
   return this.name;
  } else {
   return this.name + ": " + this.message;
  }
 };
 return errorClass;
}

var BindingError = undefined;

function throwBindingError(message) {
 throw new BindingError(message);
}

var InternalError = undefined;

function throwInternalError(message) {
 throw new InternalError(message);
}

function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
 myTypes.forEach(function(type) {
  typeDependencies[type] = dependentTypes;
 });
 function onComplete(typeConverters) {
  var myTypeConverters = getTypeConverters(typeConverters);
  if (myTypeConverters.length !== myTypes.length) {
   throwInternalError("Mismatched type converter count");
  }
  for (var i = 0; i < myTypes.length; ++i) {
   registerType(myTypes[i], myTypeConverters[i]);
  }
 }
 var typeConverters = new Array(dependentTypes.length);
 var unregisteredTypes = [];
 var registered = 0;
 dependentTypes.forEach(function(dt, i) {
  if (registeredTypes.hasOwnProperty(dt)) {
   typeConverters[i] = registeredTypes[dt];
  } else {
   unregisteredTypes.push(dt);
   if (!awaitingDependencies.hasOwnProperty(dt)) {
    awaitingDependencies[dt] = [];
   }
   awaitingDependencies[dt].push(function() {
    typeConverters[i] = registeredTypes[dt];
    ++registered;
    if (registered === unregisteredTypes.length) {
     onComplete(typeConverters);
    }
   });
  }
 });
 if (0 === unregisteredTypes.length) {
  onComplete(typeConverters);
 }
}

function registerType(rawType, registeredInstance, options) {
 options = options || {};
 if (!("argPackAdvance" in registeredInstance)) {
  throw new TypeError("registerType registeredInstance requires argPackAdvance");
 }
 var name = registeredInstance.name;
 if (!rawType) {
  throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
 }
 if (registeredTypes.hasOwnProperty(rawType)) {
  if (options.ignoreDuplicateRegistrations) {
   return;
  } else {
   throwBindingError("Cannot register type '" + name + "' twice");
  }
 }
 registeredTypes[rawType] = registeredInstance;
 delete typeDependencies[rawType];
 if (awaitingDependencies.hasOwnProperty(rawType)) {
  var callbacks = awaitingDependencies[rawType];
  delete awaitingDependencies[rawType];
  callbacks.forEach(function(cb) {
   cb();
  });
 }
}

function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
 var shift = getShiftFromSize(size);
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(wt) {
   return !!wt;
  },
  "toWireType": function(destructors, o) {
   return o ? trueValue : falseValue;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": function(pointer) {
   var heap;
   if (size === 1) {
    heap = HEAP8;
   } else if (size === 2) {
    heap = HEAP16;
   } else if (size === 4) {
    heap = HEAP32;
   } else {
    throw new TypeError("Unknown boolean type size: " + name);
   }
   return this["fromWireType"](heap[pointer >> shift]);
  },
  destructorFunction: null
 });
}

function __embind_register_constant(name, type, value) {
 name = readLatin1String(name);
 whenDependentTypesAreResolved([], [ type ], function(type) {
  type = type[0];
  Module[name] = type["fromWireType"](value);
  return [];
 });
}

var emval_free_list = [];

var emval_handle_array = [ {}, {
 value: undefined
}, {
 value: null
}, {
 value: true
}, {
 value: false
} ];

function __emval_decref(handle) {
 if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
  emval_handle_array[handle] = undefined;
  emval_free_list.push(handle);
 }
}

function count_emval_handles() {
 var count = 0;
 for (var i = 5; i < emval_handle_array.length; ++i) {
  if (emval_handle_array[i] !== undefined) {
   ++count;
  }
 }
 return count;
}

function get_first_emval() {
 for (var i = 5; i < emval_handle_array.length; ++i) {
  if (emval_handle_array[i] !== undefined) {
   return emval_handle_array[i];
  }
 }
 return null;
}

function init_emval() {
 Module["count_emval_handles"] = count_emval_handles;
 Module["get_first_emval"] = get_first_emval;
}

function __emval_register(value) {
 switch (value) {
 case undefined:
  {
   return 1;
  }

 case null:
  {
   return 2;
  }

 case true:
  {
   return 3;
  }

 case false:
  {
   return 4;
  }

 default:
  {
   var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;
   emval_handle_array[handle] = {
    refcount: 1,
    value: value
   };
   return handle;
  }
 }
}

function simpleReadValueFromPointer(pointer) {
 return this["fromWireType"](HEAPU32[pointer >> 2]);
}

function __embind_register_emval(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(handle) {
   var rv = emval_handle_array[handle].value;
   __emval_decref(handle);
   return rv;
  },
  "toWireType": function(destructors, value) {
   return __emval_register(value);
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: null
 });
}

function _embind_repr(v) {
 if (v === null) {
  return "null";
 }
 var t = typeof v;
 if (t === "object" || t === "array" || t === "function") {
  return v.toString();
 } else {
  return "" + v;
 }
}

function floatReadValueFromPointer(name, shift) {
 switch (shift) {
 case 2:
  return function(pointer) {
   return this["fromWireType"](HEAPF32[pointer >> 2]);
  };

 case 3:
  return function(pointer) {
   return this["fromWireType"](HEAPF64[pointer >> 3]);
  };

 default:
  throw new TypeError("Unknown float type: " + name);
 }
}

function __embind_register_float(rawType, name, size) {
 var shift = getShiftFromSize(size);
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   return value;
  },
  "toWireType": function(destructors, value) {
   if (typeof value !== "number" && typeof value !== "boolean") {
    throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
   }
   return value;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": floatReadValueFromPointer(name, shift),
  destructorFunction: null
 });
}

function new_(constructor, argumentList) {
 if (!(constructor instanceof Function)) {
  throw new TypeError("new_ called with constructor type " + typeof constructor + " which is not a function");
 }
 var dummy = createNamedFunction(constructor.name || "unknownFunctionName", function() {});
 dummy.prototype = constructor.prototype;
 var obj = new dummy();
 var r = constructor.apply(obj, argumentList);
 return r instanceof Object ? r : obj;
}

function runDestructors(destructors) {
 while (destructors.length) {
  var ptr = destructors.pop();
  var del = destructors.pop();
  del(ptr);
 }
}

function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
 var argCount = argTypes.length;
 if (argCount < 2) {
  throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
 }
 var isClassMethodFunc = argTypes[1] !== null && classType !== null;
 var needsDestructorStack = false;
 for (var i = 1; i < argTypes.length; ++i) {
  if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {
   needsDestructorStack = true;
   break;
  }
 }
 var returns = argTypes[0].name !== "void";
 var argsList = "";
 var argsListWired = "";
 for (var i = 0; i < argCount - 2; ++i) {
  argsList += (i !== 0 ? ", " : "") + "arg" + i;
  argsListWired += (i !== 0 ? ", " : "") + "arg" + i + "Wired";
 }
 var invokerFnBody = "return function " + makeLegalFunctionName(humanName) + "(" + argsList + ") {\n" + "if (arguments.length !== " + (argCount - 2) + ") {\n" + "throwBindingError('function " + humanName + " called with ' + arguments.length + ' arguments, expected " + (argCount - 2) + " args!');\n" + "}\n";
 if (needsDestructorStack) {
  invokerFnBody += "var destructors = [];\n";
 }
 var dtorStack = needsDestructorStack ? "destructors" : "null";
 var args1 = [ "throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam" ];
 var args2 = [ throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];
 if (isClassMethodFunc) {
  invokerFnBody += "var thisWired = classParam.toWireType(" + dtorStack + ", this);\n";
 }
 for (var i = 0; i < argCount - 2; ++i) {
  invokerFnBody += "var arg" + i + "Wired = argType" + i + ".toWireType(" + dtorStack + ", arg" + i + "); // " + argTypes[i + 2].name + "\n";
  args1.push("argType" + i);
  args2.push(argTypes[i + 2]);
 }
 if (isClassMethodFunc) {
  argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
 }
 invokerFnBody += (returns ? "var rv = " : "") + "invoker(fn" + (argsListWired.length > 0 ? ", " : "") + argsListWired + ");\n";
 if (needsDestructorStack) {
  invokerFnBody += "runDestructors(destructors);\n";
 } else {
  for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {
   var paramName = i === 1 ? "thisWired" : "arg" + (i - 2) + "Wired";
   if (argTypes[i].destructorFunction !== null) {
    invokerFnBody += paramName + "_dtor(" + paramName + "); // " + argTypes[i].name + "\n";
    args1.push(paramName + "_dtor");
    args2.push(argTypes[i].destructorFunction);
   }
  }
 }
 if (returns) {
  invokerFnBody += "var ret = retType.fromWireType(rv);\n" + "return ret;\n";
 } else {}
 invokerFnBody += "}\n";
 args1.push(invokerFnBody);
 var invokerFunction = new_(Function, args1).apply(null, args2);
 return invokerFunction;
}

function ensureOverloadTable(proto, methodName, humanName) {
 if (undefined === proto[methodName].overloadTable) {
  var prevFunc = proto[methodName];
  proto[methodName] = function() {
   if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
    throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
   }
   return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
  };
  proto[methodName].overloadTable = [];
  proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
 }
}

function exposePublicSymbol(name, value, numArguments) {
 if (Module.hasOwnProperty(name)) {
  if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {
   throwBindingError("Cannot register public name '" + name + "' twice");
  }
  ensureOverloadTable(Module, name, name);
  if (Module.hasOwnProperty(numArguments)) {
   throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
  }
  Module[name].overloadTable[numArguments] = value;
 } else {
  Module[name] = value;
  if (undefined !== numArguments) {
   Module[name].numArguments = numArguments;
  }
 }
}

function heap32VectorToArray(count, firstElement) {
 var array = [];
 for (var i = 0; i < count; i++) {
  array.push(HEAP32[(firstElement >> 2) + i]);
 }
 return array;
}

function replacePublicSymbol(name, value, numArguments) {
 if (!Module.hasOwnProperty(name)) {
  throwInternalError("Replacing nonexistant public symbol");
 }
 if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
  Module[name].overloadTable[numArguments] = value;
 } else {
  Module[name] = value;
  Module[name].argCount = numArguments;
 }
}

function embind__requireFunction(signature, rawFunction) {
 signature = readLatin1String(signature);
 function makeDynCaller(dynCall) {
  var args = [];
  for (var i = 1; i < signature.length; ++i) {
   args.push("a" + i);
  }
  var name = "dynCall_" + signature + "_" + rawFunction;
  var body = "return function " + name + "(" + args.join(", ") + ") {\n";
  body += "    return dynCall(rawFunction" + (args.length ? ", " : "") + args.join(", ") + ");\n";
  body += "};\n";
  return new Function("dynCall", "rawFunction", body)(dynCall, rawFunction);
 }
 var fp;
 if (Module["FUNCTION_TABLE_" + signature] !== undefined) {
  fp = Module["FUNCTION_TABLE_" + signature][rawFunction];
 } else if (typeof FUNCTION_TABLE !== "undefined") {
  fp = FUNCTION_TABLE[rawFunction];
 } else {
  var dc = Module["dynCall_" + signature];
  if (dc === undefined) {
   dc = Module["dynCall_" + signature.replace(/f/g, "d")];
   if (dc === undefined) {
    throwBindingError("No dynCall invoker for signature: " + signature);
   }
  }
  fp = makeDynCaller(dc);
 }
 if (typeof fp !== "function") {
  throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
 }
 return fp;
}

var UnboundTypeError = undefined;

function getTypeName(type) {
 var ptr = ___getTypeName(type);
 var rv = readLatin1String(ptr);
 _free(ptr);
 return rv;
}

function throwUnboundTypeError(message, types) {
 var unboundTypes = [];
 var seen = {};
 function visit(type) {
  if (seen[type]) {
   return;
  }
  if (registeredTypes[type]) {
   return;
  }
  if (typeDependencies[type]) {
   typeDependencies[type].forEach(visit);
   return;
  }
  unboundTypes.push(type);
  seen[type] = true;
 }
 types.forEach(visit);
 throw new UnboundTypeError(message + ": " + unboundTypes.map(getTypeName).join([ ", " ]));
}

function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {
 var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
 name = readLatin1String(name);
 rawInvoker = embind__requireFunction(signature, rawInvoker);
 exposePublicSymbol(name, function() {
  throwUnboundTypeError("Cannot call " + name + " due to unbound types", argTypes);
 }, argCount - 1);
 whenDependentTypesAreResolved([], argTypes, function(argTypes) {
  var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));
  replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);
  return [];
 });
}

function integerReadValueFromPointer(name, shift, signed) {
 switch (shift) {
 case 0:
  return signed ? function readS8FromPointer(pointer) {
   return HEAP8[pointer];
  } : function readU8FromPointer(pointer) {
   return HEAPU8[pointer];
  };

 case 1:
  return signed ? function readS16FromPointer(pointer) {
   return HEAP16[pointer >> 1];
  } : function readU16FromPointer(pointer) {
   return HEAPU16[pointer >> 1];
  };

 case 2:
  return signed ? function readS32FromPointer(pointer) {
   return HEAP32[pointer >> 2];
  } : function readU32FromPointer(pointer) {
   return HEAPU32[pointer >> 2];
  };

 default:
  throw new TypeError("Unknown integer type: " + name);
 }
}

function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
 name = readLatin1String(name);
 if (maxRange === -1) {
  maxRange = 4294967295;
 }
 var shift = getShiftFromSize(size);
 var fromWireType = function(value) {
  return value;
 };
 if (minRange === 0) {
  var bitshift = 32 - 8 * size;
  fromWireType = function(value) {
   return value << bitshift >>> bitshift;
  };
 }
 var isUnsignedType = name.indexOf("unsigned") != -1;
 registerType(primitiveType, {
  name: name,
  "fromWireType": fromWireType,
  "toWireType": function(destructors, value) {
   if (typeof value !== "number" && typeof value !== "boolean") {
    throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
   }
   if (value < minRange || value > maxRange) {
    throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ", " + maxRange + "]!");
   }
   return isUnsignedType ? value >>> 0 : value | 0;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": integerReadValueFromPointer(name, shift, minRange !== 0),
  destructorFunction: null
 });
}

function __embind_register_memory_view(rawType, dataTypeIndex, name) {
 var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];
 var TA = typeMapping[dataTypeIndex];
 function decodeMemoryView(handle) {
  handle = handle >> 2;
  var heap = HEAPU32;
  var size = heap[handle];
  var data = heap[handle + 1];
  return new TA(heap["buffer"], data, size);
 }
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": decodeMemoryView,
  "argPackAdvance": 8,
  "readValueFromPointer": decodeMemoryView
 }, {
  ignoreDuplicateRegistrations: true
 });
}

function __embind_register_std_string(rawType, name) {
 name = readLatin1String(name);
 var stdStringIsUTF8 = name === "std::string";
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   var length = HEAPU32[value >> 2];
   var str;
   if (stdStringIsUTF8) {
    var endChar = HEAPU8[value + 4 + length];
    var endCharSwap = 0;
    if (endChar != 0) {
     endCharSwap = endChar;
     HEAPU8[value + 4 + length] = 0;
    }
    var decodeStartPtr = value + 4;
    for (var i = 0; i <= length; ++i) {
     var currentBytePtr = value + 4 + i;
     if (HEAPU8[currentBytePtr] == 0) {
      var stringSegment = UTF8ToString(decodeStartPtr);
      if (str === undefined) str = stringSegment; else {
       str += String.fromCharCode(0);
       str += stringSegment;
      }
      decodeStartPtr = currentBytePtr + 1;
     }
    }
    if (endCharSwap != 0) HEAPU8[value + 4 + length] = endCharSwap;
   } else {
    var a = new Array(length);
    for (var i = 0; i < length; ++i) {
     a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
    }
    str = a.join("");
   }
   _free(value);
   return str;
  },
  "toWireType": function(destructors, value) {
   if (value instanceof ArrayBuffer) {
    value = new Uint8Array(value);
   }
   var getLength;
   var valueIsOfTypeString = typeof value === "string";
   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {
    throwBindingError("Cannot pass non-string to std::string");
   }
   if (stdStringIsUTF8 && valueIsOfTypeString) {
    getLength = function() {
     return lengthBytesUTF8(value);
    };
   } else {
    getLength = function() {
     return value.length;
    };
   }
   var length = getLength();
   var ptr = _malloc(4 + length + 1);
   HEAPU32[ptr >> 2] = length;
   if (stdStringIsUTF8 && valueIsOfTypeString) {
    stringToUTF8(value, ptr + 4, length + 1);
   } else {
    if (valueIsOfTypeString) {
     for (var i = 0; i < length; ++i) {
      var charCode = value.charCodeAt(i);
      if (charCode > 255) {
       _free(ptr);
       throwBindingError("String has UTF-16 code units that do not fit in 8 bits");
      }
      HEAPU8[ptr + 4 + i] = charCode;
     }
    } else {
     for (var i = 0; i < length; ++i) {
      HEAPU8[ptr + 4 + i] = value[i];
     }
    }
   }
   if (destructors !== null) {
    destructors.push(_free, ptr);
   }
   return ptr;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: function(ptr) {
   _free(ptr);
  }
 });
}

function __embind_register_std_wstring(rawType, charSize, name) {
 name = readLatin1String(name);
 var getHeap, shift;
 if (charSize === 2) {
  getHeap = function() {
   return HEAPU16;
  };
  shift = 1;
 } else if (charSize === 4) {
  getHeap = function() {
   return HEAPU32;
  };
  shift = 2;
 }
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   var HEAP = getHeap();
   var length = HEAPU32[value >> 2];
   var a = new Array(length);
   var start = value + 4 >> shift;
   for (var i = 0; i < length; ++i) {
    a[i] = String.fromCharCode(HEAP[start + i]);
   }
   _free(value);
   return a.join("");
  },
  "toWireType": function(destructors, value) {
   var HEAP = getHeap();
   var length = value.length;
   var ptr = _malloc(4 + length * charSize);
   HEAPU32[ptr >> 2] = length;
   var start = ptr + 4 >> shift;
   for (var i = 0; i < length; ++i) {
    HEAP[start + i] = value.charCodeAt(i);
   }
   if (destructors !== null) {
    destructors.push(_free, ptr);
   }
   return ptr;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: function(ptr) {
   _free(ptr);
  }
 });
}

function __embind_register_void(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  isVoid: true,
  name: name,
  "argPackAdvance": 0,
  "fromWireType": function() {
   return undefined;
  },
  "toWireType": function(destructors, o) {
   return undefined;
  }
 });
}

function _abort() {
 Module["abort"]();
}

function _emscripten_get_heap_size() {
 return HEAP8.length;
}

function abortOnCannotGrowMemory(requestedSize) {
 abort("Cannot enlarge memory arrays to size " + requestedSize + " bytes (OOM). Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + HEAP8.length + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");
}

function emscripten_realloc_buffer(size) {
 try {
  var newBuffer = new ArrayBuffer(size);
  if (newBuffer.byteLength != size) return false;
  new Int8Array(newBuffer).set(HEAP8);
 } catch (e) {
  return false;
 }
 buffer = newBuffer;
 Module["_emscripten_replace_memory"](newBuffer);
 return true;
}

function _emscripten_resize_heap(requestedSize) {
 var oldSize = _emscripten_get_heap_size();
 assert(requestedSize > oldSize);
 var PAGE_MULTIPLE = 16777216;
 var LIMIT = 2147483648 - PAGE_MULTIPLE;
 if (requestedSize > LIMIT) {
  err("Cannot enlarge memory, asked to go up to " + requestedSize + " bytes, but the limit is " + LIMIT + " bytes!");
  return false;
 }
 var MIN_TOTAL_MEMORY = 16777216;
 var newSize = Math.max(oldSize, MIN_TOTAL_MEMORY);
 while (newSize < requestedSize) {
  if (newSize <= 536870912) {
   newSize = alignUp(2 * newSize, PAGE_MULTIPLE);
  } else {
   newSize = Math.min(alignUp((3 * newSize + 2147483648) / 4, PAGE_MULTIPLE), LIMIT);
   if (newSize === oldSize) {
    warnOnce("Cannot ask for more memory since we reached the practical limit in browsers (which is just below 2GB), so the request would have failed. Requesting only " + HEAP8.length);
   }
  }
 }
 var start = Date.now();
 if (!emscripten_realloc_buffer(newSize)) {
  err("Failed to grow the heap from " + oldSize + " bytes to " + newSize + " bytes, not enough memory!");
  return false;
 }
 updateGlobalBufferViews();
 err("Warning: Enlarging memory arrays, this is not fast! " + [ oldSize, newSize ]);
 return true;
}

function _exit(status) {
 exit(status);
}

function _getenv(name) {
 if (name === 0) return 0;
 name = UTF8ToString(name);
 if (!ENV.hasOwnProperty(name)) return 0;
 if (_getenv.ret) _free(_getenv.ret);
 _getenv.ret = allocateUTF8(ENV[name]);
 return _getenv.ret;
}

function _gettimeofday(ptr) {
 var now = Date.now();
 HEAP32[ptr >> 2] = now / 1e3 | 0;
 HEAP32[ptr + 4 >> 2] = now % 1e3 * 1e3 | 0;
 return 0;
}

function _llvm_exp2_f32(x) {
 return Math.pow(2, x);
}

function _llvm_stackrestore(p) {
 var self = _llvm_stacksave;
 var ret = self.LLVM_SAVEDSTACKS[p];
 self.LLVM_SAVEDSTACKS.splice(p, 1);
 stackRestore(ret);
}

function _llvm_stacksave() {
 var self = _llvm_stacksave;
 if (!self.LLVM_SAVEDSTACKS) {
  self.LLVM_SAVEDSTACKS = [];
 }
 self.LLVM_SAVEDSTACKS.push(stackSave());
 return self.LLVM_SAVEDSTACKS.length - 1;
}

var ___tm_current = 59296;

var ___tm_timezone = (stringToUTF8("GMT", 59344, 4), 59344);

function _tzset() {
 if (_tzset.called) return;
 _tzset.called = true;
 HEAP32[__get_timezone() >> 2] = new Date().getTimezoneOffset() * 60;
 var winter = new Date(2e3, 0, 1);
 var summer = new Date(2e3, 6, 1);
 HEAP32[__get_daylight() >> 2] = Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());
 function extractZone(date) {
  var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
  return match ? match[1] : "GMT";
 }
 var winterName = extractZone(winter);
 var summerName = extractZone(summer);
 var winterNamePtr = allocate(intArrayFromString(winterName), "i8", ALLOC_NORMAL);
 var summerNamePtr = allocate(intArrayFromString(summerName), "i8", ALLOC_NORMAL);
 if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
  HEAP32[__get_tzname() >> 2] = winterNamePtr;
  HEAP32[__get_tzname() + 4 >> 2] = summerNamePtr;
 } else {
  HEAP32[__get_tzname() >> 2] = summerNamePtr;
  HEAP32[__get_tzname() + 4 >> 2] = winterNamePtr;
 }
}

function _localtime_r(time, tmPtr) {
 _tzset();
 var date = new Date(HEAP32[time >> 2] * 1e3);
 HEAP32[tmPtr >> 2] = date.getSeconds();
 HEAP32[tmPtr + 4 >> 2] = date.getMinutes();
 HEAP32[tmPtr + 8 >> 2] = date.getHours();
 HEAP32[tmPtr + 12 >> 2] = date.getDate();
 HEAP32[tmPtr + 16 >> 2] = date.getMonth();
 HEAP32[tmPtr + 20 >> 2] = date.getFullYear() - 1900;
 HEAP32[tmPtr + 24 >> 2] = date.getDay();
 var start = new Date(date.getFullYear(), 0, 1);
 var yday = (date.getTime() - start.getTime()) / (1e3 * 60 * 60 * 24) | 0;
 HEAP32[tmPtr + 28 >> 2] = yday;
 HEAP32[tmPtr + 36 >> 2] = -(date.getTimezoneOffset() * 60);
 var summerOffset = new Date(2e3, 6, 1).getTimezoneOffset();
 var winterOffset = start.getTimezoneOffset();
 var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;
 HEAP32[tmPtr + 32 >> 2] = dst;
 var zonePtr = HEAP32[__get_tzname() + (dst ? 4 : 0) >> 2];
 HEAP32[tmPtr + 40 >> 2] = zonePtr;
 return tmPtr;
}

function _localtime(time) {
 return _localtime_r(time, ___tm_current);
}

function _longjmp(env, value) {
 _setThrew(env, value || 1);
 throw "longjmp";
}

function _emscripten_memcpy_big(dest, src, num) {
 HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
}

function _pthread_attr_destroy(attr) {
 return 0;
}

function _pthread_attr_init(attr) {
 return 0;
}

function _pthread_attr_setdetachstate() {}

function _pthread_cond_destroy() {
 return 0;
}

function _pthread_cond_init() {
 return 0;
}

function _pthread_cond_signal() {
 return 0;
}

function _pthread_cond_wait() {
 return 0;
}

function _pthread_create() {
 return 11;
}

function __isLeapYear(year) {
 return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}

function __arraySum(array, index) {
 var sum = 0;
 for (var i = 0; i <= index; sum += array[i++]) ;
 return sum;
}

var __MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];

var __MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];

function __addDays(date, days) {
 var newDate = new Date(date.getTime());
 while (days > 0) {
  var leap = __isLeapYear(newDate.getFullYear());
  var currentMonth = newDate.getMonth();
  var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  if (days > daysInCurrentMonth - newDate.getDate()) {
   days -= daysInCurrentMonth - newDate.getDate() + 1;
   newDate.setDate(1);
   if (currentMonth < 11) {
    newDate.setMonth(currentMonth + 1);
   } else {
    newDate.setMonth(0);
    newDate.setFullYear(newDate.getFullYear() + 1);
   }
  } else {
   newDate.setDate(newDate.getDate() + days);
   return newDate;
  }
 }
 return newDate;
}

function _strftime(s, maxsize, format, tm) {
 var tm_zone = HEAP32[tm + 40 >> 2];
 var date = {
  tm_sec: HEAP32[tm >> 2],
  tm_min: HEAP32[tm + 4 >> 2],
  tm_hour: HEAP32[tm + 8 >> 2],
  tm_mday: HEAP32[tm + 12 >> 2],
  tm_mon: HEAP32[tm + 16 >> 2],
  tm_year: HEAP32[tm + 20 >> 2],
  tm_wday: HEAP32[tm + 24 >> 2],
  tm_yday: HEAP32[tm + 28 >> 2],
  tm_isdst: HEAP32[tm + 32 >> 2],
  tm_gmtoff: HEAP32[tm + 36 >> 2],
  tm_zone: tm_zone ? UTF8ToString(tm_zone) : ""
 };
 var pattern = UTF8ToString(format);
 var EXPANSION_RULES_1 = {
  "%c": "%a %b %d %H:%M:%S %Y",
  "%D": "%m/%d/%y",
  "%F": "%Y-%m-%d",
  "%h": "%b",
  "%r": "%I:%M:%S %p",
  "%R": "%H:%M",
  "%T": "%H:%M:%S",
  "%x": "%m/%d/%y",
  "%X": "%H:%M:%S"
 };
 for (var rule in EXPANSION_RULES_1) {
  pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_1[rule]);
 }
 var WEEKDAYS = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
 var MONTHS = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ];
 function leadingSomething(value, digits, character) {
  var str = typeof value === "number" ? value.toString() : value || "";
  while (str.length < digits) {
   str = character[0] + str;
  }
  return str;
 }
 function leadingNulls(value, digits) {
  return leadingSomething(value, digits, "0");
 }
 function compareByDay(date1, date2) {
  function sgn(value) {
   return value < 0 ? -1 : value > 0 ? 1 : 0;
  }
  var compare;
  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {
   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {
    compare = sgn(date1.getDate() - date2.getDate());
   }
  }
  return compare;
 }
 function getFirstWeekStartDate(janFourth) {
  switch (janFourth.getDay()) {
  case 0:
   return new Date(janFourth.getFullYear() - 1, 11, 29);

  case 1:
   return janFourth;

  case 2:
   return new Date(janFourth.getFullYear(), 0, 3);

  case 3:
   return new Date(janFourth.getFullYear(), 0, 2);

  case 4:
   return new Date(janFourth.getFullYear(), 0, 1);

  case 5:
   return new Date(janFourth.getFullYear() - 1, 11, 31);

  case 6:
   return new Date(janFourth.getFullYear() - 1, 11, 30);
  }
 }
 function getWeekBasedYear(date) {
  var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);
  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
    return thisDate.getFullYear() + 1;
   } else {
    return thisDate.getFullYear();
   }
  } else {
   return thisDate.getFullYear() - 1;
  }
 }
 var EXPANSION_RULES_2 = {
  "%a": function(date) {
   return WEEKDAYS[date.tm_wday].substring(0, 3);
  },
  "%A": function(date) {
   return WEEKDAYS[date.tm_wday];
  },
  "%b": function(date) {
   return MONTHS[date.tm_mon].substring(0, 3);
  },
  "%B": function(date) {
   return MONTHS[date.tm_mon];
  },
  "%C": function(date) {
   var year = date.tm_year + 1900;
   return leadingNulls(year / 100 | 0, 2);
  },
  "%d": function(date) {
   return leadingNulls(date.tm_mday, 2);
  },
  "%e": function(date) {
   return leadingSomething(date.tm_mday, 2, " ");
  },
  "%g": function(date) {
   return getWeekBasedYear(date).toString().substring(2);
  },
  "%G": function(date) {
   return getWeekBasedYear(date);
  },
  "%H": function(date) {
   return leadingNulls(date.tm_hour, 2);
  },
  "%I": function(date) {
   var twelveHour = date.tm_hour;
   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;
   return leadingNulls(twelveHour, 2);
  },
  "%j": function(date) {
   return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);
  },
  "%m": function(date) {
   return leadingNulls(date.tm_mon + 1, 2);
  },
  "%M": function(date) {
   return leadingNulls(date.tm_min, 2);
  },
  "%n": function() {
   return "\n";
  },
  "%p": function(date) {
   if (date.tm_hour >= 0 && date.tm_hour < 12) {
    return "AM";
   } else {
    return "PM";
   }
  },
  "%S": function(date) {
   return leadingNulls(date.tm_sec, 2);
  },
  "%t": function() {
   return "\t";
  },
  "%u": function(date) {
   var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
   return day.getDay() || 7;
  },
  "%U": function(date) {
   var janFirst = new Date(date.tm_year + 1900, 0, 1);
   var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstSunday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();
    var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstSunday, janFirst) === 0 ? "01" : "00";
  },
  "%V": function(date) {
   var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);
   var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);
   var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
   var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
   var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
   if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
    return "53";
   }
   if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
    return "01";
   }
   var daysDifference;
   if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {
    daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();
   } else {
    daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();
   }
   return leadingNulls(Math.ceil(daysDifference / 7), 2);
  },
  "%w": function(date) {
   var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
   return day.getDay();
  },
  "%W": function(date) {
   var janFirst = new Date(date.tm_year, 0, 1);
   var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstMonday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();
    var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstMonday, janFirst) === 0 ? "01" : "00";
  },
  "%y": function(date) {
   return (date.tm_year + 1900).toString().substring(2);
  },
  "%Y": function(date) {
   return date.tm_year + 1900;
  },
  "%z": function(date) {
   var off = date.tm_gmtoff;
   var ahead = off >= 0;
   off = Math.abs(off) / 60;
   off = off / 60 * 100 + off % 60;
   return (ahead ? "+" : "-") + String("0000" + off).slice(-4);
  },
  "%Z": function(date) {
   return date.tm_zone;
  },
  "%%": function() {
   return "%";
  }
 };
 for (var rule in EXPANSION_RULES_2) {
  if (pattern.indexOf(rule) >= 0) {
   pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_2[rule](date));
  }
 }
 var bytes = intArrayFromString(pattern, false);
 if (bytes.length > maxsize) {
  return 0;
 }
 writeArrayToMemory(bytes, s);
 return bytes.length - 1;
}

function _strftime_l(s, maxsize, format, tm) {
 return _strftime(s, maxsize, format, tm);
}

function _sysconf(name) {
 switch (name) {
 case 30:
  return PAGE_SIZE;

 case 85:
  var maxHeapSize = 2 * 1024 * 1024 * 1024 - 16777216;
  return maxHeapSize / PAGE_SIZE;

 case 132:
 case 133:
 case 12:
 case 137:
 case 138:
 case 15:
 case 235:
 case 16:
 case 17:
 case 18:
 case 19:
 case 20:
 case 149:
 case 13:
 case 10:
 case 236:
 case 153:
 case 9:
 case 21:
 case 22:
 case 159:
 case 154:
 case 14:
 case 77:
 case 78:
 case 139:
 case 80:
 case 81:
 case 82:
 case 68:
 case 67:
 case 164:
 case 11:
 case 29:
 case 47:
 case 48:
 case 95:
 case 52:
 case 51:
 case 46:
  return 200809;

 case 79:
  return 0;

 case 27:
 case 246:
 case 127:
 case 128:
 case 23:
 case 24:
 case 160:
 case 161:
 case 181:
 case 182:
 case 242:
 case 183:
 case 184:
 case 243:
 case 244:
 case 245:
 case 165:
 case 178:
 case 179:
 case 49:
 case 50:
 case 168:
 case 169:
 case 175:
 case 170:
 case 171:
 case 172:
 case 97:
 case 76:
 case 32:
 case 173:
 case 35:
  return -1;

 case 176:
 case 177:
 case 7:
 case 155:
 case 8:
 case 157:
 case 125:
 case 126:
 case 92:
 case 93:
 case 129:
 case 130:
 case 131:
 case 94:
 case 91:
  return 1;

 case 74:
 case 60:
 case 69:
 case 70:
 case 4:
  return 1024;

 case 31:
 case 42:
 case 72:
  return 32;

 case 87:
 case 26:
 case 33:
  return 2147483647;

 case 34:
 case 1:
  return 47839;

 case 38:
 case 36:
  return 99;

 case 43:
 case 37:
  return 2048;

 case 0:
  return 2097152;

 case 3:
  return 65536;

 case 28:
  return 32768;

 case 44:
  return 32767;

 case 75:
  return 16384;

 case 39:
  return 1e3;

 case 89:
  return 700;

 case 71:
  return 256;

 case 40:
  return 255;

 case 2:
  return 100;

 case 180:
  return 64;

 case 25:
  return 20;

 case 5:
  return 16;

 case 6:
  return 6;

 case 73:
  return 4;

 case 84:
  {
   if (typeof navigator === "object") return navigator["hardwareConcurrency"] || 1;
   return 1;
  }
 }
 ___setErrNo(22);
 return -1;
}

function _time(ptr) {
 var ret = Date.now() / 1e3 | 0;
 if (ptr) {
  HEAP32[ptr >> 2] = ret;
 }
 return ret;
}

if (ENVIRONMENT_IS_NODE) {
 _emscripten_get_now = function _emscripten_get_now_actual() {
  var t = process["hrtime"]();
  return t[0] * 1e3 + t[1] / 1e6;
 };
} else if (typeof dateNow !== "undefined") {
 _emscripten_get_now = dateNow;
} else if (typeof performance === "object" && performance && typeof performance["now"] === "function") {
 _emscripten_get_now = function() {
  return performance["now"]();
 };
} else {
 _emscripten_get_now = Date.now;
}

FS.staticInit();

if (ENVIRONMENT_IS_NODE) {
 var fs = require("fs");
 var NODEJS_PATH = require("path");
 NODEFS.staticInit();
}

embind_init_charCodes();

BindingError = Module["BindingError"] = extendError(Error, "BindingError");

InternalError = Module["InternalError"] = extendError(Error, "InternalError");

init_emval();

UnboundTypeError = Module["UnboundTypeError"] = extendError(Error, "UnboundTypeError");

var ASSERTIONS = true;

function intArrayFromString(stringy, dontAddNull, length) {
 var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
 var u8array = new Array(len);
 var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
 if (dontAddNull) u8array.length = numBytesWritten;
 return u8array;
}

function intArrayToString(array) {
 var ret = [];
 for (var i = 0; i < array.length; i++) {
  var chr = array[i];
  if (chr > 255) {
   if (ASSERTIONS) {
    assert(false, "Character code " + chr + " (" + String.fromCharCode(chr) + ")  at offset " + i + " not in 0x00-0xFF.");
   }
   chr &= 255;
  }
  ret.push(String.fromCharCode(chr));
 }
 return ret.join("");
}

var decodeBase64 = typeof atob === "function" ? atob : function(input) {
 var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
 var output = "";
 var chr1, chr2, chr3;
 var enc1, enc2, enc3, enc4;
 var i = 0;
 input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
 do {
  enc1 = keyStr.indexOf(input.charAt(i++));
  enc2 = keyStr.indexOf(input.charAt(i++));
  enc3 = keyStr.indexOf(input.charAt(i++));
  enc4 = keyStr.indexOf(input.charAt(i++));
  chr1 = enc1 << 2 | enc2 >> 4;
  chr2 = (enc2 & 15) << 4 | enc3 >> 2;
  chr3 = (enc3 & 3) << 6 | enc4;
  output = output + String.fromCharCode(chr1);
  if (enc3 !== 64) {
   output = output + String.fromCharCode(chr2);
  }
  if (enc4 !== 64) {
   output = output + String.fromCharCode(chr3);
  }
 } while (i < input.length);
 return output;
};

function intArrayFromBase64(s) {
 if (typeof ENVIRONMENT_IS_NODE === "boolean" && ENVIRONMENT_IS_NODE) {
  var buf;
  try {
   buf = Buffer.from(s, "base64");
  } catch (_) {
   buf = new Buffer(s, "base64");
  }
  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
 }
 try {
  var decoded = decodeBase64(s);
  var bytes = new Uint8Array(decoded.length);
  for (var i = 0; i < decoded.length; ++i) {
   bytes[i] = decoded.charCodeAt(i);
  }
  return bytes;
 } catch (_) {
  throw new Error("Converting base64 string to bytes failed.");
 }
}

function tryParseAsDataURI(filename) {
 if (!isDataURI(filename)) {
  return;
 }
 return intArrayFromBase64(filename.slice(dataURIPrefix.length));
}

function nullFunc_di(x) {
 err("Invalid function pointer called with signature 'di'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_dii(x) {
 err("Invalid function pointer called with signature 'dii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_i(x) {
 err("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_ii(x) {
 err("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iidiiii(x) {
 err("Invalid function pointer called with signature 'iidiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iii(x) {
 err("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiii(x) {
 err("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiiii(x) {
 err("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiiiid(x) {
 err("Invalid function pointer called with signature 'iiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiiiii(x) {
 err("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiiiiid(x) {
 err("Invalid function pointer called with signature 'iiiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiiiiii(x) {
 err("Invalid function pointer called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiiiiiii(x) {
 err("Invalid function pointer called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiiiiiiii(x) {
 err("Invalid function pointer called with signature 'iiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_v(x) {
 err("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_vi(x) {
 err("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_vid(x) {
 err("Invalid function pointer called with signature 'vid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_vii(x) {
 err("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_viid(x) {
 err("Invalid function pointer called with signature 'viid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_viii(x) {
 err("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_viiii(x) {
 err("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_viiiii(x) {
 err("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_viiiiii(x) {
 err("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_viiiiiii(x) {
 err("Invalid function pointer called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function invoke_ii(index, a1) {
 var sp = stackSave();
 try {
  return dynCall_ii(index, a1);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iii(index, a1, a2) {
 var sp = stackSave();
 try {
  return dynCall_iii(index, a1, a2);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiii(index, a1, a2, a3) {
 var sp = stackSave();
 try {
  return dynCall_iiii(index, a1, a2, a3);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_vi(index, a1) {
 var sp = stackSave();
 try {
  dynCall_vi(index, a1);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_vii(index, a1, a2) {
 var sp = stackSave();
 try {
  dynCall_vii(index, a1, a2);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_viii(index, a1, a2, a3) {
 var sp = stackSave();
 try {
  dynCall_viii(index, a1, a2, a3);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_viiii(index, a1, a2, a3, a4) {
 var sp = stackSave();
 try {
  dynCall_viiii(index, a1, a2, a3, a4);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

var asmGlobalArg = {
 "Math": Math,
 "Int8Array": Int8Array,
 "Int16Array": Int16Array,
 "Int32Array": Int32Array,
 "Uint8Array": Uint8Array,
 "Uint16Array": Uint16Array,
 "Float32Array": Float32Array,
 "Float64Array": Float64Array,
 "NaN": NaN,
 Infinity: Infinity
};

var asmLibraryArg = {
 "abort": abort,
 "setTempRet0": setTempRet0,
 "getTempRet0": getTempRet0,
 "abortStackOverflow": abortStackOverflow,
 "nullFunc_di": nullFunc_di,
 "nullFunc_dii": nullFunc_dii,
 "nullFunc_i": nullFunc_i,
 "nullFunc_ii": nullFunc_ii,
 "nullFunc_iidiiii": nullFunc_iidiiii,
 "nullFunc_iii": nullFunc_iii,
 "nullFunc_iiii": nullFunc_iiii,
 "nullFunc_iiiii": nullFunc_iiiii,
 "nullFunc_iiiiid": nullFunc_iiiiid,
 "nullFunc_iiiiii": nullFunc_iiiiii,
 "nullFunc_iiiiiid": nullFunc_iiiiiid,
 "nullFunc_iiiiiii": nullFunc_iiiiiii,
 "nullFunc_iiiiiiii": nullFunc_iiiiiiii,
 "nullFunc_iiiiiiiii": nullFunc_iiiiiiiii,
 "nullFunc_v": nullFunc_v,
 "nullFunc_vi": nullFunc_vi,
 "nullFunc_vid": nullFunc_vid,
 "nullFunc_vii": nullFunc_vii,
 "nullFunc_viid": nullFunc_viid,
 "nullFunc_viii": nullFunc_viii,
 "nullFunc_viiii": nullFunc_viiii,
 "nullFunc_viiiii": nullFunc_viiiii,
 "nullFunc_viiiiii": nullFunc_viiiiii,
 "nullFunc_viiiiiii": nullFunc_viiiiiii,
 "invoke_ii": invoke_ii,
 "invoke_iii": invoke_iii,
 "invoke_iiii": invoke_iiii,
 "invoke_vi": invoke_vi,
 "invoke_vii": invoke_vii,
 "invoke_viii": invoke_viii,
 "invoke_viiii": invoke_viiii,
 "___buildEnvironment": ___buildEnvironment,
 "___clock_gettime": ___clock_gettime,
 "___cxa_allocate_exception": ___cxa_allocate_exception,
 "___cxa_begin_catch": ___cxa_begin_catch,
 "___cxa_find_matching_catch": ___cxa_find_matching_catch,
 "___cxa_free_exception": ___cxa_free_exception,
 "___cxa_throw": ___cxa_throw,
 "___cxa_uncaught_exception": ___cxa_uncaught_exception,
 "___gxx_personality_v0": ___gxx_personality_v0,
 "___lock": ___lock,
 "___map_file": ___map_file,
 "___resumeException": ___resumeException,
 "___setErrNo": ___setErrNo,
 "___syscall10": ___syscall10,
 "___syscall140": ___syscall140,
 "___syscall145": ___syscall145,
 "___syscall146": ___syscall146,
 "___syscall221": ___syscall221,
 "___syscall5": ___syscall5,
 "___syscall54": ___syscall54,
 "___syscall6": ___syscall6,
 "___syscall91": ___syscall91,
 "___unlock": ___unlock,
 "__addDays": __addDays,
 "__arraySum": __arraySum,
 "__embind_register_bool": __embind_register_bool,
 "__embind_register_constant": __embind_register_constant,
 "__embind_register_emval": __embind_register_emval,
 "__embind_register_float": __embind_register_float,
 "__embind_register_function": __embind_register_function,
 "__embind_register_integer": __embind_register_integer,
 "__embind_register_memory_view": __embind_register_memory_view,
 "__embind_register_std_string": __embind_register_std_string,
 "__embind_register_std_wstring": __embind_register_std_wstring,
 "__embind_register_void": __embind_register_void,
 "__emval_decref": __emval_decref,
 "__emval_register": __emval_register,
 "__isLeapYear": __isLeapYear,
 "_abort": _abort,
 "_clock_gettime": _clock_gettime,
 "_embind_repr": _embind_repr,
 "_emscripten_asm_const_ii": _emscripten_asm_const_ii,
 "_emscripten_asm_const_iiddddddddddddd": _emscripten_asm_const_iiddddddddddddd,
 "_emscripten_asm_const_iiiid": _emscripten_asm_const_iiiid,
 "_emscripten_asm_const_iiiiiii": _emscripten_asm_const_iiiiiii,
 "_emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi": _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi,
 "_emscripten_get_heap_size": _emscripten_get_heap_size,
 "_emscripten_get_now": _emscripten_get_now,
 "_emscripten_get_now_is_monotonic": _emscripten_get_now_is_monotonic,
 "_emscripten_memcpy_big": _emscripten_memcpy_big,
 "_emscripten_resize_heap": _emscripten_resize_heap,
 "_exit": _exit,
 "_getenv": _getenv,
 "_gettimeofday": _gettimeofday,
 "_llvm_exp2_f32": _llvm_exp2_f32,
 "_llvm_stackrestore": _llvm_stackrestore,
 "_llvm_stacksave": _llvm_stacksave,
 "_localtime": _localtime,
 "_localtime_r": _localtime_r,
 "_longjmp": _longjmp,
 "_pthread_attr_destroy": _pthread_attr_destroy,
 "_pthread_attr_init": _pthread_attr_init,
 "_pthread_attr_setdetachstate": _pthread_attr_setdetachstate,
 "_pthread_cond_destroy": _pthread_cond_destroy,
 "_pthread_cond_init": _pthread_cond_init,
 "_pthread_cond_signal": _pthread_cond_signal,
 "_pthread_cond_wait": _pthread_cond_wait,
 "_pthread_create": _pthread_create,
 "_strftime": _strftime,
 "_strftime_l": _strftime_l,
 "_sysconf": _sysconf,
 "_time": _time,
 "_tzset": _tzset,
 "abortOnCannotGrowMemory": abortOnCannotGrowMemory,
 "count_emval_handles": count_emval_handles,
 "craftInvokerFunction": craftInvokerFunction,
 "createNamedFunction": createNamedFunction,
 "embind__requireFunction": embind__requireFunction,
 "embind_init_charCodes": embind_init_charCodes,
 "emscripten_realloc_buffer": emscripten_realloc_buffer,
 "ensureOverloadTable": ensureOverloadTable,
 "exposePublicSymbol": exposePublicSymbol,
 "extendError": extendError,
 "floatReadValueFromPointer": floatReadValueFromPointer,
 "getShiftFromSize": getShiftFromSize,
 "getTypeName": getTypeName,
 "get_first_emval": get_first_emval,
 "heap32VectorToArray": heap32VectorToArray,
 "init_emval": init_emval,
 "integerReadValueFromPointer": integerReadValueFromPointer,
 "makeLegalFunctionName": makeLegalFunctionName,
 "new_": new_,
 "readLatin1String": readLatin1String,
 "registerType": registerType,
 "replacePublicSymbol": replacePublicSymbol,
 "runDestructors": runDestructors,
 "simpleReadValueFromPointer": simpleReadValueFromPointer,
 "throwBindingError": throwBindingError,
 "throwInternalError": throwInternalError,
 "throwUnboundTypeError": throwUnboundTypeError,
 "whenDependentTypesAreResolved": whenDependentTypesAreResolved,
 "tempDoublePtr": tempDoublePtr,
 "DYNAMICTOP_PTR": DYNAMICTOP_PTR
};

// EMSCRIPTEN_START_ASM


var asm = (/** @suppress {uselessCode} */ function(global,env,buffer) {

'almost asm';

  var HEAP8 = new global.Int8Array(buffer),
  HEAP16 = new global.Int16Array(buffer),
  HEAP32 = new global.Int32Array(buffer),
  HEAPU8 = new global.Uint8Array(buffer),
  HEAPU16 = new global.Uint16Array(buffer),
  HEAPF32 = new global.Float32Array(buffer),
  HEAPF64 = new global.Float64Array(buffer),
  tempDoublePtr=env.tempDoublePtr|0,
  DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0,
  __THREW__ = 0,
  threwValue = 0,
  setjmpId = 0,
  tempInt = 0,
  tempBigInt = 0,
  tempBigIntS = 0,
  tempValue = 0,
  tempDouble = 0.0,
  nan = global.NaN,
  inf = global.Infinity,
  Math_floor=global.Math.floor,
  Math_abs=global.Math.abs,
  Math_sqrt=global.Math.sqrt,
  Math_pow=global.Math.pow,
  Math_cos=global.Math.cos,
  Math_sin=global.Math.sin,
  Math_atan2=global.Math.atan2,
  Math_log=global.Math.log,
  Math_ceil=global.Math.ceil,
  Math_imul=global.Math.imul,
  Math_clz32=global.Math.clz32,
  abort=env.abort,
  setTempRet0=env.setTempRet0,
  getTempRet0=env.getTempRet0,
  abortStackOverflow=env.abortStackOverflow,
  nullFunc_di=env.nullFunc_di,
  nullFunc_dii=env.nullFunc_dii,
  nullFunc_i=env.nullFunc_i,
  nullFunc_ii=env.nullFunc_ii,
  nullFunc_iidiiii=env.nullFunc_iidiiii,
  nullFunc_iii=env.nullFunc_iii,
  nullFunc_iiii=env.nullFunc_iiii,
  nullFunc_iiiii=env.nullFunc_iiiii,
  nullFunc_iiiiid=env.nullFunc_iiiiid,
  nullFunc_iiiiii=env.nullFunc_iiiiii,
  nullFunc_iiiiiid=env.nullFunc_iiiiiid,
  nullFunc_iiiiiii=env.nullFunc_iiiiiii,
  nullFunc_iiiiiiii=env.nullFunc_iiiiiiii,
  nullFunc_iiiiiiiii=env.nullFunc_iiiiiiiii,
  nullFunc_v=env.nullFunc_v,
  nullFunc_vi=env.nullFunc_vi,
  nullFunc_vid=env.nullFunc_vid,
  nullFunc_vii=env.nullFunc_vii,
  nullFunc_viid=env.nullFunc_viid,
  nullFunc_viii=env.nullFunc_viii,
  nullFunc_viiii=env.nullFunc_viiii,
  nullFunc_viiiii=env.nullFunc_viiiii,
  nullFunc_viiiiii=env.nullFunc_viiiiii,
  nullFunc_viiiiiii=env.nullFunc_viiiiiii,
  invoke_ii=env.invoke_ii,
  invoke_iii=env.invoke_iii,
  invoke_iiii=env.invoke_iiii,
  invoke_vi=env.invoke_vi,
  invoke_vii=env.invoke_vii,
  invoke_viii=env.invoke_viii,
  invoke_viiii=env.invoke_viiii,
  ___buildEnvironment=env.___buildEnvironment,
  ___clock_gettime=env.___clock_gettime,
  ___cxa_allocate_exception=env.___cxa_allocate_exception,
  ___cxa_begin_catch=env.___cxa_begin_catch,
  ___cxa_find_matching_catch=env.___cxa_find_matching_catch,
  ___cxa_free_exception=env.___cxa_free_exception,
  ___cxa_throw=env.___cxa_throw,
  ___cxa_uncaught_exception=env.___cxa_uncaught_exception,
  ___gxx_personality_v0=env.___gxx_personality_v0,
  ___lock=env.___lock,
  ___map_file=env.___map_file,
  ___resumeException=env.___resumeException,
  ___setErrNo=env.___setErrNo,
  ___syscall10=env.___syscall10,
  ___syscall140=env.___syscall140,
  ___syscall145=env.___syscall145,
  ___syscall146=env.___syscall146,
  ___syscall221=env.___syscall221,
  ___syscall5=env.___syscall5,
  ___syscall54=env.___syscall54,
  ___syscall6=env.___syscall6,
  ___syscall91=env.___syscall91,
  ___unlock=env.___unlock,
  __addDays=env.__addDays,
  __arraySum=env.__arraySum,
  __embind_register_bool=env.__embind_register_bool,
  __embind_register_constant=env.__embind_register_constant,
  __embind_register_emval=env.__embind_register_emval,
  __embind_register_float=env.__embind_register_float,
  __embind_register_function=env.__embind_register_function,
  __embind_register_integer=env.__embind_register_integer,
  __embind_register_memory_view=env.__embind_register_memory_view,
  __embind_register_std_string=env.__embind_register_std_string,
  __embind_register_std_wstring=env.__embind_register_std_wstring,
  __embind_register_void=env.__embind_register_void,
  __emval_decref=env.__emval_decref,
  __emval_register=env.__emval_register,
  __isLeapYear=env.__isLeapYear,
  _abort=env._abort,
  _clock_gettime=env._clock_gettime,
  _embind_repr=env._embind_repr,
  _emscripten_asm_const_ii=env._emscripten_asm_const_ii,
  _emscripten_asm_const_iiddddddddddddd=env._emscripten_asm_const_iiddddddddddddd,
  _emscripten_asm_const_iiiid=env._emscripten_asm_const_iiiid,
  _emscripten_asm_const_iiiiiii=env._emscripten_asm_const_iiiiiii,
  _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi=env._emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi,
  _emscripten_get_heap_size=env._emscripten_get_heap_size,
  _emscripten_get_now=env._emscripten_get_now,
  _emscripten_get_now_is_monotonic=env._emscripten_get_now_is_monotonic,
  _emscripten_memcpy_big=env._emscripten_memcpy_big,
  _emscripten_resize_heap=env._emscripten_resize_heap,
  _exit=env._exit,
  _getenv=env._getenv,
  _gettimeofday=env._gettimeofday,
  _llvm_exp2_f32=env._llvm_exp2_f32,
  _llvm_stackrestore=env._llvm_stackrestore,
  _llvm_stacksave=env._llvm_stacksave,
  _localtime=env._localtime,
  _localtime_r=env._localtime_r,
  _longjmp=env._longjmp,
  _pthread_attr_destroy=env._pthread_attr_destroy,
  _pthread_attr_init=env._pthread_attr_init,
  _pthread_attr_setdetachstate=env._pthread_attr_setdetachstate,
  _pthread_cond_destroy=env._pthread_cond_destroy,
  _pthread_cond_init=env._pthread_cond_init,
  _pthread_cond_signal=env._pthread_cond_signal,
  _pthread_cond_wait=env._pthread_cond_wait,
  _pthread_create=env._pthread_create,
  _strftime=env._strftime,
  _strftime_l=env._strftime_l,
  _sysconf=env._sysconf,
  _time=env._time,
  _tzset=env._tzset,
  abortOnCannotGrowMemory=env.abortOnCannotGrowMemory,
  count_emval_handles=env.count_emval_handles,
  craftInvokerFunction=env.craftInvokerFunction,
  createNamedFunction=env.createNamedFunction,
  embind__requireFunction=env.embind__requireFunction,
  embind_init_charCodes=env.embind_init_charCodes,
  emscripten_realloc_buffer=env.emscripten_realloc_buffer,
  ensureOverloadTable=env.ensureOverloadTable,
  exposePublicSymbol=env.exposePublicSymbol,
  extendError=env.extendError,
  floatReadValueFromPointer=env.floatReadValueFromPointer,
  getShiftFromSize=env.getShiftFromSize,
  getTypeName=env.getTypeName,
  get_first_emval=env.get_first_emval,
  heap32VectorToArray=env.heap32VectorToArray,
  init_emval=env.init_emval,
  integerReadValueFromPointer=env.integerReadValueFromPointer,
  makeLegalFunctionName=env.makeLegalFunctionName,
  new_=env.new_,
  readLatin1String=env.readLatin1String,
  registerType=env.registerType,
  replacePublicSymbol=env.replacePublicSymbol,
  runDestructors=env.runDestructors,
  simpleReadValueFromPointer=env.simpleReadValueFromPointer,
  throwBindingError=env.throwBindingError,
  throwInternalError=env.throwInternalError,
  throwUnboundTypeError=env.throwUnboundTypeError,
  whenDependentTypesAreResolved=env.whenDependentTypesAreResolved,
  STACKTOP = 59472,
  STACK_MAX = 5302352,
  tempFloat = 0.0;

function _emscripten_replace_memory(newBuffer) {
  HEAP8 = new Int8Array(newBuffer);
  HEAPU8 = new Uint8Array(newBuffer);
  HEAP16 = new Int16Array(newBuffer);
  HEAPU16 = new Uint16Array(newBuffer);
  HEAP32 = new Int32Array(newBuffer);
  HEAPF32 = new Float32Array(newBuffer);
  HEAPF64 = new Float64Array(newBuffer);

  buffer = newBuffer;
  return true;
}

// EMSCRIPTEN_START_FUNCS

function __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i13 = i13 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 i17 = i20 + 176 | 0;
 i18 = i20 + 112 | 0;
 i19 = i20 + 88 | 0;
 i15 = i20 + 64 | 0;
 i16 = i20 + 48 | 0;
 i8 = i20 + 160 | 0;
 i14 = i20 + 36 | 0;
 i6 = i20 + 148 | 0;
 i7 = i20 + 136 | 0;
 i9 = i20 + 124 | 0;
 i10 = i20 + 24 | 0;
 i11 = i20 + 12 | 0;
 i12 = i20;
 i3 = i4;
 i2 = i3 - i1 | 0;
 L1 : do if ((i2 | 0) > 1) {
  if ((i2 | 0) > 3 ? (HEAP8[i1 >> 0] | 0) == 103 : 0) {
   i5 = (HEAP8[i1 + 1 >> 0] | 0) == 115;
   i2 = i5 ? i1 + 2 | 0 : i1;
  } else {
   i2 = i1;
   i5 = 0;
  }
  do switch (HEAP8[i2 >> 0] | 0) {
  case 76:
   {
    i1 = __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
    break L1;
   }
  case 84:
   {
    i1 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
    break L1;
   }
  case 102:
   {
    i1 = __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
    break L1;
   }
  case 97:
   switch (HEAP8[i2 + 1 >> 0] | 0) {
   case 97:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50528, __ZNSt3__211char_traitsIcE6lengthEPKc(50528) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 100:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50546, __ZNSt3__211char_traitsIcE6lengthEPKc(50546) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 110:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50546, __ZNSt3__211char_traitsIcE6lengthEPKc(50546) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 78:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50589, __ZNSt3__211char_traitsIcE6lengthEPKc(50589) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 83:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50592, __ZNSt3__211char_traitsIcE6lengthEPKc(50592) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 116:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 122:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   default:
    break L1;
   }
  case 99:
   switch (HEAP8[i2 + 1 >> 0] | 0) {
   case 99:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_121parse_const_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 108:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_115parse_call_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 109:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50594, __ZNSt3__211char_traitsIcE6lengthEPKc(50594) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 111:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50596, __ZNSt3__211char_traitsIcE6lengthEPKc(50596) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 118:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_121parse_conversion_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   default:
    break L1;
   }
  case 100:
   switch (HEAP8[i2 + 1 >> 0] | 0) {
   case 97:
    {
     i14 = i2 + 2 | 0;
     i4 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i14, i4, i13) | 0;
     if ((i4 | 0) == (i14 | 0)) break L1;
     i2 = i13 + 4 | 0;
     if ((HEAP32[i13 >> 2] | 0) == (HEAP32[i2 >> 2] | 0)) break L1;
     HEAP32[i15 >> 2] = 0;
     HEAP32[i15 + 4 >> 2] = 0;
     HEAP32[i15 + 8 >> 2] = 0;
     L32 : do if (i5) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i15, 50598, __ZNSt3__211char_traitsIcE6lengthEPKc(50598) | 0); else {
      i1 = 0;
      while (1) {
       if ((i1 | 0) == 3) break L32;
       HEAP32[i15 + (i1 << 2) >> 2] = 0;
       i1 = i1 + 1 | 0;
      }
     } while (0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i15, 50601) | 0;
     HEAP32[i19 >> 2] = HEAP32[i15 >> 2];
     HEAP32[i19 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
     HEAP32[i19 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i15 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i16, (HEAP32[i2 >> 2] | 0) + -24 | 0);
     i1 = HEAP8[i16 + 11 >> 0] | 0;
     i14 = i1 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i19, i14 ? HEAP32[i16 >> 2] | 0 : i16, i14 ? HEAP32[i16 + 4 >> 2] | 0 : i1 & 255) | 0;
     HEAP32[i18 >> 2] = HEAP32[i19 >> 2];
     HEAP32[i18 + 4 >> 2] = HEAP32[i19 + 4 >> 2];
     HEAP32[i18 + 8 >> 2] = HEAP32[i19 + 8 >> 2];
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i19 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     i1 = HEAP32[i2 >> 2] | 0;
     i2 = i1 + -24 | 0;
     i3 = i2 + 11 | 0;
     if ((HEAP8[i3 >> 0] | 0) < 0) {
      i14 = HEAP32[i2 >> 2] | 0;
      HEAP8[i17 >> 0] = 0;
      __ZNSt3__211char_traitsIcE6assignERcRKc(i14, i17);
      HEAP32[i1 + -20 >> 2] = 0;
     } else {
      HEAP8[i17 >> 0] = 0;
      __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i17);
      HEAP8[i3 >> 0] = 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
     HEAP32[i2 >> 2] = HEAP32[i18 >> 2];
     HEAP32[i2 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
     HEAP32[i2 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i18 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i18);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i19);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
     i1 = i4;
     break L1;
    }
   case 99:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_123parse_dynamic_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 101:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50544, __ZNSt3__211char_traitsIcE6lengthEPKc(50544) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 108:
    {
     i14 = i2 + 2 | 0;
     i4 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i14, i4, i13) | 0;
     if ((i4 | 0) == (i14 | 0)) break L1;
     i2 = i13 + 4 | 0;
     if ((HEAP32[i13 >> 2] | 0) == (HEAP32[i2 >> 2] | 0)) break L1;
     HEAP32[i15 >> 2] = 0;
     HEAP32[i15 + 4 >> 2] = 0;
     HEAP32[i15 + 8 >> 2] = 0;
     L60 : do if (i5) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i15, 50598, __ZNSt3__211char_traitsIcE6lengthEPKc(50598) | 0); else {
      i1 = 0;
      while (1) {
       if ((i1 | 0) == 3) break L60;
       HEAP32[i15 + (i1 << 2) >> 2] = 0;
       i1 = i1 + 1 | 0;
      }
     } while (0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i15, 50611) | 0;
     HEAP32[i19 >> 2] = HEAP32[i15 >> 2];
     HEAP32[i19 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
     HEAP32[i19 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i15 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i16, (HEAP32[i2 >> 2] | 0) + -24 | 0);
     i1 = HEAP8[i16 + 11 >> 0] | 0;
     i14 = i1 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i19, i14 ? HEAP32[i16 >> 2] | 0 : i16, i14 ? HEAP32[i16 + 4 >> 2] | 0 : i1 & 255) | 0;
     HEAP32[i18 >> 2] = HEAP32[i19 >> 2];
     HEAP32[i18 + 4 >> 2] = HEAP32[i19 + 4 >> 2];
     HEAP32[i18 + 8 >> 2] = HEAP32[i19 + 8 >> 2];
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i19 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     i1 = HEAP32[i2 >> 2] | 0;
     i2 = i1 + -24 | 0;
     i3 = i2 + 11 | 0;
     if ((HEAP8[i3 >> 0] | 0) < 0) {
      i14 = HEAP32[i2 >> 2] | 0;
      HEAP8[i17 >> 0] = 0;
      __ZNSt3__211char_traitsIcE6assignERcRKc(i14, i17);
      HEAP32[i1 + -20 >> 2] = 0;
     } else {
      HEAP8[i17 >> 0] = 0;
      __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i17);
      HEAP8[i3 >> 0] = 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
     HEAP32[i2 >> 2] = HEAP32[i18 >> 2];
     HEAP32[i2 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
     HEAP32[i2 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i18 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i18);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i19);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
     i1 = i4;
     break L1;
    }
   case 110:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 115:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_119parse_dot_star_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 116:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_114parse_dot_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 118:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50619, __ZNSt3__211char_traitsIcE6lengthEPKc(50619) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 86:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50621, __ZNSt3__211char_traitsIcE6lengthEPKc(50621) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   default:
    break L1;
   }
  case 101:
   switch (HEAP8[i2 + 1 >> 0] | 0) {
   case 111:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50624, __ZNSt3__211char_traitsIcE6lengthEPKc(50624) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 79:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50626, __ZNSt3__211char_traitsIcE6lengthEPKc(50626) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 113:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50629, __ZNSt3__211char_traitsIcE6lengthEPKc(50629) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   default:
    break L1;
   }
  case 103:
   switch (HEAP8[i2 + 1 >> 0] | 0) {
   case 101:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50632, __ZNSt3__211char_traitsIcE6lengthEPKc(50632) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 116:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50562, __ZNSt3__211char_traitsIcE6lengthEPKc(50562) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   default:
    break L1;
   }
  case 105:
   {
    if ((HEAP8[i2 + 1 >> 0] | 0) != 120) break L1;
    i12 = i1 + 2 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i12, i4, i13) | 0;
    if ((i2 | 0) == (i12 | 0)) break L1;
    i3 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i4, i13) | 0;
    i4 = i13 + 4 | 0;
    if ((i3 | 0) == (i2 | 0)) {
     i3 = HEAP32[i4 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i19 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i19 * 24 | 0) | 0);
      i2 = i19;
     }
     HEAP32[i4 >> 2] = i3 + -24;
     break L1;
    }
    i2 = HEAP32[i4 >> 2] | 0;
    if (((i2 - (HEAP32[i13 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i17, i2 + -24 | 0);
    i2 = HEAP32[i4 >> 2] | 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == -1) break;
     i13 = i1 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i13 * 24 | 0) | 0);
     i1 = i13;
    }
    HEAP32[i4 >> 2] = i2 + -24;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i18, i2 + -48 | 0);
    __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i14, 50526, i18);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i14, 50635) | 0;
    HEAP32[i16 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i16 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
    HEAP32[i16 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i14 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    i1 = HEAP8[i17 + 11 >> 0] | 0;
    i13 = i1 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i16, i13 ? HEAP32[i17 >> 2] | 0 : i17, i13 ? HEAP32[i17 + 4 >> 2] | 0 : i1 & 255) | 0;
    HEAP32[i15 >> 2] = HEAP32[i16 >> 2];
    HEAP32[i15 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
    HEAP32[i15 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i16 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i15, 50573) | 0;
    HEAP32[i8 >> 2] = HEAP32[i15 >> 2];
    HEAP32[i8 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
    HEAP32[i8 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i15 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i19, i8);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i4 >> 2] | 0) + -24 | 0, i19);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i19);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i18);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
    i1 = i3;
    break L1;
   }
  case 108:
   switch (HEAP8[i2 + 1 >> 0] | 0) {
   case 101:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50638, __ZNSt3__211char_traitsIcE6lengthEPKc(50638) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 115:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50641, __ZNSt3__211char_traitsIcE6lengthEPKc(50641) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 83:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50644, __ZNSt3__211char_traitsIcE6lengthEPKc(50644) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 116:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50560, __ZNSt3__211char_traitsIcE6lengthEPKc(50560) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   default:
    break L1;
   }
  case 109:
   switch (HEAP8[i2 + 1 >> 0] | 0) {
   case 105:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50648, __ZNSt3__211char_traitsIcE6lengthEPKc(50648) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 73:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50650, __ZNSt3__211char_traitsIcE6lengthEPKc(50650) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 108:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50544, __ZNSt3__211char_traitsIcE6lengthEPKc(50544) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 76:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50653, __ZNSt3__211char_traitsIcE6lengthEPKc(50653) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 109:
    {
     i2 = i1 + 2 | 0;
     if ((i2 | 0) != (i4 | 0) ? (HEAP8[i2 >> 0] | 0) == 95 : 0) {
      i18 = i1 + 3 | 0;
      HEAP32[i17 >> 2] = 0;
      HEAP32[i17 + 4 >> 2] = 0;
      HEAP32[i17 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50656, __ZNSt3__211char_traitsIcE6lengthEPKc(50656) | 0);
      i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
      i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
      break L1;
     }
     i4 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i4, i13) | 0;
     if ((i4 | 0) == (i2 | 0)) break L1;
     i3 = i13 + 4 | 0;
     i2 = HEAP32[i3 >> 2] | 0;
     if ((HEAP32[i13 >> 2] | 0) == (i2 | 0)) break L1;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i19, i2 + -24 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i19, 0, 50526) | 0;
     HEAP32[i18 >> 2] = HEAP32[i19 >> 2];
     HEAP32[i18 + 4 >> 2] = HEAP32[i19 + 4 >> 2];
     HEAP32[i18 + 8 >> 2] = HEAP32[i19 + 8 >> 2];
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i19 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i18, 50659) | 0;
     HEAP32[i6 >> 2] = HEAP32[i18 >> 2];
     HEAP32[i6 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
     HEAP32[i6 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i18 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i17, i6);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i3 >> 2] | 0) + -24 | 0, i17);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i17);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i18);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i19);
     i1 = i4;
     break L1;
    }
   default:
    break L1;
   }
  case 110:
   switch (HEAP8[i2 + 1 >> 0] | 0) {
   case 119:
   case 97:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_114parse_new_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 101:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50663, __ZNSt3__211char_traitsIcE6lengthEPKc(50663) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 103:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50648, __ZNSt3__211char_traitsIcE6lengthEPKc(50648) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 116:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50666, __ZNSt3__211char_traitsIcE6lengthEPKc(50666) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 120:
    {
     i18 = i1 + 2 | 0;
     i19 = __ZN10__cxxabiv112_GLOBAL__N_125parse_noexcept_expressionINS0_2DbEEEPKcS4_S4_RT_(i18, i4, i13) | 0;
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   default:
    break L1;
   }
  case 111:
   switch (HEAP8[i2 + 1 >> 0] | 0) {
   case 110:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 111:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50668, __ZNSt3__211char_traitsIcE6lengthEPKc(50668) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 114:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50671, __ZNSt3__211char_traitsIcE6lengthEPKc(50671) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 82:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50673, __ZNSt3__211char_traitsIcE6lengthEPKc(50673) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   default:
    break L1;
   }
  case 112:
   switch (HEAP8[i2 + 1 >> 0] | 0) {
   case 109:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50676, __ZNSt3__211char_traitsIcE6lengthEPKc(50676) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 108:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50680, __ZNSt3__211char_traitsIcE6lengthEPKc(50680) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 76:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50682, __ZNSt3__211char_traitsIcE6lengthEPKc(50682) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 112:
    {
     i2 = i1 + 2 | 0;
     if ((i2 | 0) != (i4 | 0) ? (HEAP8[i2 >> 0] | 0) == 95 : 0) {
      i18 = i1 + 3 | 0;
      HEAP32[i17 >> 2] = 0;
      HEAP32[i17 + 4 >> 2] = 0;
      HEAP32[i17 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50685, __ZNSt3__211char_traitsIcE6lengthEPKc(50685) | 0);
      i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
      i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
      break L1;
     }
     i4 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i4, i13) | 0;
     if ((i4 | 0) == (i2 | 0)) break L1;
     i3 = i13 + 4 | 0;
     i2 = HEAP32[i3 >> 2] | 0;
     if ((HEAP32[i13 >> 2] | 0) == (i2 | 0)) break L1;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i19, i2 + -24 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i19, 0, 50526) | 0;
     HEAP32[i18 >> 2] = HEAP32[i19 >> 2];
     HEAP32[i18 + 4 >> 2] = HEAP32[i19 + 4 >> 2];
     HEAP32[i18 + 8 >> 2] = HEAP32[i19 + 8 >> 2];
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i19 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i18, 50688) | 0;
     HEAP32[i7 >> 2] = HEAP32[i18 >> 2];
     HEAP32[i7 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
     HEAP32[i7 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i18 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i17, i7);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i3 >> 2] | 0) + -24 | 0, i17);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i17);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i18);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i19);
     i1 = i4;
     break L1;
    }
   case 115:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50680, __ZNSt3__211char_traitsIcE6lengthEPKc(50680) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 116:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_116parse_arrow_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   default:
    break L1;
   }
  case 113:
   {
    if ((HEAP8[i2 + 1 >> 0] | 0) != 117) break L1;
    i8 = i1 + 2 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i8, i4, i13) | 0;
    if ((i2 | 0) == (i8 | 0)) break L1;
    i3 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i4, i13) | 0;
    if ((i3 | 0) == (i2 | 0)) {
     i3 = i13 + 4 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i19 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4 + (i19 * 24 | 0) | 0);
      i2 = i19;
     }
     HEAP32[i3 >> 2] = i4 + -24;
     break L1;
    }
    i4 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i3, i4, i13) | 0;
    i5 = i13 + 4 | 0;
    if ((i4 | 0) == (i3 | 0)) {
     i4 = HEAP32[i5 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i19 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4 + (i19 * 24 | 0) | 0);
      i2 = i19;
     }
     i3 = i4 + -24 | 0;
     HEAP32[i5 >> 2] = i3;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i19 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i19 * 24 | 0) | 0);
      i2 = i19;
     }
     HEAP32[i5 >> 2] = i4 + -48;
     break L1;
    }
    i2 = HEAP32[i5 >> 2] | 0;
    if (((i2 - (HEAP32[i13 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 3) break L1;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i17, i2 + -24 | 0);
    i2 = HEAP32[i5 >> 2] | 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == -1) break;
     i13 = i1 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i13 * 24 | 0) | 0);
     i1 = i13;
    }
    HEAP32[i5 >> 2] = i2 + -24;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i18, i2 + -48 | 0);
    i2 = HEAP32[i5 >> 2] | 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == -1) break;
     i13 = i1 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i13 * 24 | 0) | 0);
     i1 = i13;
    }
    HEAP32[i5 >> 2] = i2 + -24;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i19, i2 + -48 | 0);
    __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i12, 50526, i19);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i12, 50692) | 0;
    HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
    HEAP32[i11 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
    HEAP32[i11 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i12 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    i1 = HEAP8[i18 + 11 >> 0] | 0;
    i13 = i1 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i11, i13 ? HEAP32[i18 >> 2] | 0 : i18, i13 ? HEAP32[i18 + 4 >> 2] | 0 : i1 & 255) | 0;
    HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
    HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
    HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i11 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 50698) | 0;
    HEAP32[i14 >> 2] = HEAP32[i10 >> 2];
    HEAP32[i14 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
    HEAP32[i14 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i10 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    i1 = HEAP8[i17 + 11 >> 0] | 0;
    i13 = i1 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i14, i13 ? HEAP32[i17 >> 2] | 0 : i17, i13 ? HEAP32[i17 + 4 >> 2] | 0 : i1 & 255) | 0;
    HEAP32[i16 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i16 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
    HEAP32[i16 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i14 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i16, 50524) | 0;
    HEAP32[i9 >> 2] = HEAP32[i16 >> 2];
    HEAP32[i9 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
    HEAP32[i9 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i16 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i15, i9);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i5 >> 2] | 0) + -24 | 0, i15);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i15);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i19);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i18);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
    i1 = i4;
    break L1;
   }
  case 114:
   switch (HEAP8[i2 + 1 >> 0] | 0) {
   case 99:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_127parse_reinterpret_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 109:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50704, __ZNSt3__211char_traitsIcE6lengthEPKc(50704) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 77:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50706, __ZNSt3__211char_traitsIcE6lengthEPKc(50706) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 115:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50709, __ZNSt3__211char_traitsIcE6lengthEPKc(50709) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   case 83:
    {
     i18 = i1 + 2 | 0;
     HEAP32[i17 >> 2] = 0;
     HEAP32[i17 + 4 >> 2] = 0;
     HEAP32[i17 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50712, __ZNSt3__211char_traitsIcE6lengthEPKc(50712) | 0);
     i19 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i18, i4, i17, i13) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = (i19 | 0) == (i18 | 0) ? i1 : i19;
     break L1;
    }
   default:
    break L1;
   }
  case 115:
   switch (HEAP8[i2 + 1 >> 0] | 0) {
   case 99:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_122parse_static_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 112:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_120parse_pack_expansionINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 114:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 116:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_type_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 122:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_expr_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 90:
    {
     if ((i3 - i2 | 0) <= 2) break L1;
     switch (HEAP8[i2 + 2 >> 0] | 0) {
     case 84:
      {
       i1 = __ZN10__cxxabiv112_GLOBAL__N_128parse_sizeof_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
       break L1;
      }
     case 102:
      {
       i1 = __ZN10__cxxabiv112_GLOBAL__N_137parse_sizeof_function_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
       break L1;
      }
     default:
      break L1;
     }
    }
   default:
    break L1;
   }
  case 116:
   switch (HEAP8[i2 + 1 >> 0] | 0) {
   case 105:
   case 101:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_117parse_typeid_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   case 114:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc(i17, 50716);
     i2 = i13 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if (i3 >>> 0 < (HEAP32[i13 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i17);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i13, i17);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i17);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 119:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_116parse_throw_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     break L1;
    }
   default:
    break L1;
   }
  case 57:
  case 56:
  case 55:
  case 54:
  case 53:
  case 52:
  case 51:
  case 50:
  case 49:
   {
    i1 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
    break L1;
   }
  default:
   break L1;
  } while (0);
 } while (0);
 STACKTOP = i20;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i21) {
 i1 = i1 | 0;
 i16 = i16 | 0;
 i21 = i21 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 i20 = i22 + 128 | 0;
 i19 = i22 + 104 | 0;
 i17 = i22 + 40 | 0;
 i5 = i22 + 88 | 0;
 i11 = i22 + 24 | 0;
 i9 = i22 + 76 | 0;
 i10 = i22 + 12 | 0;
 i6 = i22;
 i7 = i22 + 64 | 0;
 L1 : do if ((i1 | 0) != (i16 | 0)) {
  switch (HEAP8[i1 >> 0] | 0) {
  case 75:
  case 86:
  case 114:
   {
    HEAP32[i20 >> 2] = 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i1, i16, i20) | 0;
    L5 : do if ((i2 | 0) != (i1 | 0) ? (i13 = (HEAP8[i2 >> 0] | 0) == 70, i15 = i21 + 4 | 0, i8 = ((HEAP32[i15 >> 2] | 0) - (HEAP32[i21 >> 2] | 0) | 0) / 24 | 0, i14 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i2, i16, i21) | 0, i15 = ((HEAP32[i15 >> 2] | 0) - (HEAP32[i21 >> 2] | 0) | 0) / 24 | 0, (i14 | 0) != (i2 | 0)) : 0) {
     i12 = i21 + 20 | 0;
     i2 = HEAP32[i12 >> 2] | 0;
     if (i13) {
      i1 = 0;
      while (1) {
       if ((i1 | 0) == -1) break;
       i18 = i1 + -1 | 0;
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i2 + (i18 << 4) | 0);
       i1 = i18;
      }
      i2 = i2 + -16 | 0;
      HEAP32[i12 >> 2] = i2;
     }
     i1 = HEAP32[i21 + 12 >> 2] | 0;
     HEAP32[i19 >> 2] = i1;
     if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      HEAP32[i2 + 4 >> 2] = 0;
      HEAP32[i2 + 8 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = i1;
      HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i21 + 16 | 0, i19);
     i11 = HEAP32[i20 >> 2] | 0;
     i9 = (i11 & 1 | 0) == 0;
     i10 = (i11 & 2 | 0) == 0;
     i11 = (i11 & 4 | 0) == 0;
     while (1) {
      if (i8 >>> 0 >= i15 >>> 0) {
       i1 = i14;
       break L5;
      }
      if (i13) {
       i3 = HEAP32[i21 >> 2] | 0;
       i7 = i3 + (i8 * 24 | 0) + 12 | 0;
       i4 = HEAP8[i7 + 11 >> 0] | 0;
       i1 = i4 << 24 >> 24 < 0;
       if (i1) {
        i5 = HEAP32[i3 + (i8 * 24 | 0) + 16 >> 2] | 0;
        i2 = HEAP32[i7 >> 2] | 0;
       } else {
        i5 = i4 & 255;
        i2 = i7;
       }
       i6 = i5 + -2 | 0;
       if ((HEAP8[i2 + i6 >> 0] | 0) == 38) i1 = i5 + -3 | 0; else {
        if (i1) {
         i2 = HEAP32[i7 >> 2] | 0;
         i1 = HEAP32[i3 + (i8 * 24 | 0) + 16 >> 2] | 0;
        } else {
         i2 = i7;
         i1 = i4 & 255;
        }
        i1 = (HEAP8[i2 + i1 + -1 >> 0] | 0) == 38 ? i6 : i5;
       }
       if (!i9) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i7, i1, 50471) | 0;
        i1 = i1 + 6 | 0;
       }
       if (!i10) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i21 >> 2] | 0) + (i8 * 24 | 0) + 12 | 0, i1, 50478) | 0;
        i1 = i1 + 9 | 0;
       }
       if (!i11) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i21 >> 2] | 0) + (i8 * 24 | 0) + 12 | 0, i1, 50488) | 0;
      } else {
       if (!i9) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i21 >> 2] | 0) + (i8 * 24 | 0) | 0, 50471) | 0;
       if (!i10) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i21 >> 2] | 0) + (i8 * 24 | 0) | 0, 50478) | 0;
       if (!i11) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i21 >> 2] | 0) + (i8 * 24 | 0) | 0, 50488) | 0;
      }
      i1 = HEAP32[i12 >> 2] | 0;
      i2 = (HEAP32[i21 >> 2] | 0) + (i8 * 24 | 0) | 0;
      i3 = i1 + -12 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if ((i4 | 0) == (HEAP32[i1 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i1 + -16 | 0, i2); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i4, i2);
       HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 24;
      }
      i8 = i8 + 1 | 0;
     }
    } while (0);
    break L1;
   }
  default:
   {}
  }
  i2 = __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i21) | 0;
  if ((i2 | 0) == (i1 | 0)) {
   L59 : do switch (HEAP8[i1 >> 0] | 0) {
   case 65:
    {
     i3 = __ZN10__cxxabiv112_GLOBAL__N_116parse_array_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i21) | 0;
     if ((i3 | 0) == (i1 | 0)) break L1;
     i2 = HEAP32[i21 + 4 >> 2] | 0;
     if ((HEAP32[i21 >> 2] | 0) == (i2 | 0)) break L1;
     HEAP32[i19 >> 2] = HEAP32[i21 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i20, i2 + -24 | 0, i19);
     i1 = i21 + 20 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      i19 = i2 + 4 | 0;
      HEAP32[i19 >> 2] = 0;
      i18 = i2 + 8 | 0;
      HEAP32[i18 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
      HEAP32[i2 >> 2] = HEAP32[i20 >> 2];
      i21 = i20 + 4 | 0;
      HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
      i19 = i20 + 8 | 0;
      HEAP32[i18 >> 2] = HEAP32[i19 >> 2];
      HEAP32[i19 >> 2] = 0;
      HEAP32[i21 >> 2] = 0;
      HEAP32[i20 >> 2] = 0;
      HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i21 + 16 | 0, i20);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i20);
     i1 = i3;
     break L1;
    }
   case 67:
    {
     i18 = i1 + 1 | 0;
     i4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i18, i16, i21) | 0;
     if ((i4 | 0) == (i18 | 0)) break L1;
     i2 = i21 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((HEAP32[i21 >> 2] | 0) == (i3 | 0)) break L1;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i3 + -24 | 0, 50498) | 0;
     i1 = (HEAP32[i2 >> 2] | 0) + -24 | 0;
     HEAP32[i19 >> 2] = HEAP32[i21 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i20, i1, i19);
     i1 = i21 + 20 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      i19 = i2 + 4 | 0;
      HEAP32[i19 >> 2] = 0;
      i18 = i2 + 8 | 0;
      HEAP32[i18 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
      HEAP32[i2 >> 2] = HEAP32[i20 >> 2];
      i21 = i20 + 4 | 0;
      HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
      i19 = i20 + 8 | 0;
      HEAP32[i18 >> 2] = HEAP32[i19 >> 2];
      HEAP32[i19 >> 2] = 0;
      HEAP32[i21 >> 2] = 0;
      HEAP32[i20 >> 2] = 0;
      HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i21 + 16 | 0, i20);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i20);
     i1 = i4;
     break L1;
    }
   case 70:
    {
     i3 = __ZN10__cxxabiv112_GLOBAL__N_119parse_function_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i21) | 0;
     if ((i3 | 0) == (i1 | 0)) break L1;
     i2 = HEAP32[i21 + 4 >> 2] | 0;
     if ((HEAP32[i21 >> 2] | 0) == (i2 | 0)) break L1;
     HEAP32[i19 >> 2] = HEAP32[i21 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i20, i2 + -24 | 0, i19);
     i1 = i21 + 20 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      i19 = i2 + 4 | 0;
      HEAP32[i19 >> 2] = 0;
      i18 = i2 + 8 | 0;
      HEAP32[i18 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
      HEAP32[i2 >> 2] = HEAP32[i20 >> 2];
      i21 = i20 + 4 | 0;
      HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
      i19 = i20 + 8 | 0;
      HEAP32[i18 >> 2] = HEAP32[i19 >> 2];
      HEAP32[i19 >> 2] = 0;
      HEAP32[i21 >> 2] = 0;
      HEAP32[i20 >> 2] = 0;
      HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i21 + 16 | 0, i20);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i20);
     i1 = i3;
     break L1;
    }
   case 71:
    {
     i18 = i1 + 1 | 0;
     i4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i18, i16, i21) | 0;
     if ((i4 | 0) == (i18 | 0)) break L1;
     i2 = i21 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((HEAP32[i21 >> 2] | 0) == (i3 | 0)) break L1;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i3 + -24 | 0, 50507) | 0;
     i1 = (HEAP32[i2 >> 2] | 0) + -24 | 0;
     HEAP32[i19 >> 2] = HEAP32[i21 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i20, i1, i19);
     i1 = i21 + 20 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      i19 = i2 + 4 | 0;
      HEAP32[i19 >> 2] = 0;
      i18 = i2 + 8 | 0;
      HEAP32[i18 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
      HEAP32[i2 >> 2] = HEAP32[i20 >> 2];
      i21 = i20 + 4 | 0;
      HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
      i19 = i20 + 8 | 0;
      HEAP32[i18 >> 2] = HEAP32[i19 >> 2];
      HEAP32[i19 >> 2] = 0;
      HEAP32[i21 >> 2] = 0;
      HEAP32[i20 >> 2] = 0;
      HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i21 + 16 | 0, i20);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i20);
     i1 = i4;
     break L1;
    }
   case 77:
    {
     i3 = __ZN10__cxxabiv112_GLOBAL__N_128parse_pointer_to_member_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i21) | 0;
     if ((i3 | 0) == (i1 | 0)) break L1;
     i2 = HEAP32[i21 + 4 >> 2] | 0;
     if ((HEAP32[i21 >> 2] | 0) == (i2 | 0)) break L1;
     HEAP32[i19 >> 2] = HEAP32[i21 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i20, i2 + -24 | 0, i19);
     i1 = i21 + 20 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      i19 = i2 + 4 | 0;
      HEAP32[i19 >> 2] = 0;
      i18 = i2 + 8 | 0;
      HEAP32[i18 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
      HEAP32[i2 >> 2] = HEAP32[i20 >> 2];
      i21 = i20 + 4 | 0;
      HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
      i19 = i20 + 8 | 0;
      HEAP32[i18 >> 2] = HEAP32[i19 >> 2];
      HEAP32[i19 >> 2] = 0;
      HEAP32[i21 >> 2] = 0;
      HEAP32[i20 >> 2] = 0;
      HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i21 + 16 | 0, i20);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i20);
     i1 = i3;
     break L1;
    }
   case 79:
    {
     i10 = i21 + 4 | 0;
     i3 = ((HEAP32[i10 >> 2] | 0) - (HEAP32[i21 >> 2] | 0) | 0) / 24 | 0;
     i19 = i1 + 1 | 0;
     i9 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i19, i16, i21) | 0;
     i10 = ((HEAP32[i10 >> 2] | 0) - (HEAP32[i21 >> 2] | 0) | 0) / 24 | 0;
     if ((i9 | 0) == (i19 | 0)) break L1;
     i1 = HEAP32[i21 + 12 >> 2] | 0;
     HEAP32[i20 >> 2] = i1;
     i8 = i21 + 20 | 0;
     i2 = HEAP32[i8 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      HEAP32[i2 + 4 >> 2] = 0;
      HEAP32[i2 + 8 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = i1;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i21 + 16 | 0, i20);
     i6 = i20 + 11 | 0;
     i7 = i20 + 4 | 0;
     while (1) {
      if (i3 >>> 0 >= i10 >>> 0) {
       i1 = i9;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i20, (HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) + 12 | 0, 2);
      i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(50518) | 0;
      i19 = HEAP8[i6 >> 0] | 0;
      if ((i1 | 0) == ((i19 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i19 & 255) | 0)) i1 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i20, 50518, i1) | 0) == 0; else i1 = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i20);
      i2 = HEAP32[i21 >> 2] | 0;
      i4 = i2 + (i3 * 24 | 0) | 0;
      if (!i1) {
       i1 = i2 + (i3 * 24 | 0) + 12 | 0;
       if ((HEAP8[i1 + 11 >> 0] | 0) < 0) i1 = HEAP32[i1 >> 2] | 0;
       if ((HEAP8[i1 >> 0] | 0) == 40) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i4, 50526) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) + 12 | 0, 0, 50524) | 0;
       }
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i4, 50521) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) + 12 | 0, 0, 50524) | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) | 0, 50528) | 0;
      i1 = HEAP32[i8 >> 2] | 0;
      i2 = (HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) | 0;
      i4 = i1 + -12 | 0;
      i5 = HEAP32[i4 >> 2] | 0;
      if ((i5 | 0) == (HEAP32[i1 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i1 + -16 | 0, i2); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i5, i2);
       HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 24;
      }
      i3 = i3 + 1 | 0;
     }
    }
   case 80:
    {
     i12 = i21 + 4 | 0;
     i3 = ((HEAP32[i12 >> 2] | 0) - (HEAP32[i21 >> 2] | 0) | 0) / 24 | 0;
     i13 = i1 + 1 | 0;
     i11 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i13, i16, i21) | 0;
     i12 = ((HEAP32[i12 >> 2] | 0) - (HEAP32[i21 >> 2] | 0) | 0) / 24 | 0;
     if ((i11 | 0) == (i13 | 0)) break L1;
     i1 = HEAP32[i21 + 12 >> 2] | 0;
     HEAP32[i20 >> 2] = i1;
     i10 = i21 + 20 | 0;
     i2 = HEAP32[i10 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      HEAP32[i2 + 4 >> 2] = 0;
      HEAP32[i2 + 8 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = i1;
      HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i21 + 16 | 0, i20);
     i6 = i20 + 11 | 0;
     i7 = i20 + 4 | 0;
     i8 = i20 + 11 | 0;
     i9 = i20 + 4 | 0;
     while (1) {
      if (i3 >>> 0 >= i12 >>> 0) {
       i1 = i11;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i20, (HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) + 12 | 0, 2);
      i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(50518) | 0;
      i19 = HEAP8[i6 >> 0] | 0;
      if ((i1 | 0) == ((i19 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i19 & 255) | 0)) i1 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i20, 50518, i1) | 0) == 0; else i1 = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i20);
      i2 = HEAP32[i21 >> 2] | 0;
      i4 = i2 + (i3 * 24 | 0) | 0;
      if (!i1) {
       i1 = i2 + (i3 * 24 | 0) + 12 | 0;
       if ((HEAP8[i1 + 11 >> 0] | 0) < 0) i1 = HEAP32[i1 >> 2] | 0;
       if ((HEAP8[i1 >> 0] | 0) == 40) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i4, 50526) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) + 12 | 0, 0, 50524) | 0;
       }
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i4, 50521) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) + 12 | 0, 0, 50524) | 0;
      }
      if ((HEAP8[i13 >> 0] | 0) == 85) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i20, (HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) | 0, 12);
       i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(50531) | 0;
       i19 = HEAP8[i8 >> 0] | 0;
       if ((i1 | 0) == ((i19 << 24 >> 24 < 0 ? HEAP32[i9 >> 2] | 0 : i19 & 255) | 0)) i2 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i20, 50531, i1) | 0) != 0; else i2 = 1;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i20);
       i1 = (HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) | 0;
       if (i2) i18 = 113; else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEmmPKc(i1);
      } else {
       i1 = (HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) | 0;
       i18 = 113;
      }
      if ((i18 | 0) == 113) {
       i18 = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i1, 50544) | 0;
      }
      i1 = HEAP32[i10 >> 2] | 0;
      i2 = (HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) | 0;
      i4 = i1 + -12 | 0;
      i5 = HEAP32[i4 >> 2] | 0;
      if ((i5 | 0) == (HEAP32[i1 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i1 + -16 | 0, i2); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i5, i2);
       HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 24;
      }
      i3 = i3 + 1 | 0;
     }
    }
   case 82:
    {
     i10 = i21 + 4 | 0;
     i3 = ((HEAP32[i10 >> 2] | 0) - (HEAP32[i21 >> 2] | 0) | 0) / 24 | 0;
     i19 = i1 + 1 | 0;
     i9 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i19, i16, i21) | 0;
     i10 = ((HEAP32[i10 >> 2] | 0) - (HEAP32[i21 >> 2] | 0) | 0) / 24 | 0;
     if ((i9 | 0) == (i19 | 0)) break L1;
     i1 = HEAP32[i21 + 12 >> 2] | 0;
     HEAP32[i20 >> 2] = i1;
     i8 = i21 + 20 | 0;
     i2 = HEAP32[i8 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      HEAP32[i2 + 4 >> 2] = 0;
      HEAP32[i2 + 8 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = i1;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i21 + 16 | 0, i20);
     i6 = i20 + 11 | 0;
     i7 = i20 + 4 | 0;
     while (1) {
      if (i3 >>> 0 >= i10 >>> 0) {
       i1 = i9;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i20, (HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) + 12 | 0, 2);
      i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(50518) | 0;
      i19 = HEAP8[i6 >> 0] | 0;
      if ((i1 | 0) == ((i19 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i19 & 255) | 0)) i1 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i20, 50518, i1) | 0) == 0; else i1 = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i20);
      i2 = HEAP32[i21 >> 2] | 0;
      i4 = i2 + (i3 * 24 | 0) | 0;
      if (!i1) {
       i1 = i2 + (i3 * 24 | 0) + 12 | 0;
       if ((HEAP8[i1 + 11 >> 0] | 0) < 0) i1 = HEAP32[i1 >> 2] | 0;
       if ((HEAP8[i1 >> 0] | 0) == 40) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i4, 50526) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) + 12 | 0, 0, 50524) | 0;
       }
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i4, 50521) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) + 12 | 0, 0, 50524) | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) | 0, 50546) | 0;
      i1 = HEAP32[i8 >> 2] | 0;
      i2 = (HEAP32[i21 >> 2] | 0) + (i3 * 24 | 0) | 0;
      i4 = i1 + -12 | 0;
      i5 = HEAP32[i4 >> 2] | 0;
      if ((i5 | 0) == (HEAP32[i1 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i1 + -16 | 0, i2); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i5, i2);
       HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 24;
      }
      i3 = i3 + 1 | 0;
     }
    }
   case 84:
    {
     i10 = i21 + 4 | 0;
     i6 = ((HEAP32[i10 >> 2] | 0) - (HEAP32[i21 >> 2] | 0) | 0) / 24 | 0;
     i8 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i21) | 0;
     i7 = ((HEAP32[i10 >> 2] | 0) - (HEAP32[i21 >> 2] | 0) | 0) / 24 | 0;
     if ((i8 | 0) == (i1 | 0)) break L1;
     i11 = i21 + 16 | 0;
     i9 = i21 + 12 | 0;
     i1 = HEAP32[i9 >> 2] | 0;
     HEAP32[i20 >> 2] = i1;
     i12 = i21 + 20 | 0;
     i2 = HEAP32[i12 >> 2] | 0;
     i13 = i21 + 24 | 0;
     if (i2 >>> 0 < (HEAP32[i13 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      HEAP32[i2 + 4 >> 2] = 0;
      HEAP32[i2 + 8 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = i1;
      HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i11, i20);
     i1 = i6;
     while (1) {
      if (i1 >>> 0 >= i7 >>> 0) break;
      i2 = HEAP32[i12 >> 2] | 0;
      i3 = (HEAP32[i21 >> 2] | 0) + (i1 * 24 | 0) | 0;
      i4 = i2 + -12 | 0;
      i5 = HEAP32[i4 >> 2] | 0;
      if ((i5 | 0) == (HEAP32[i2 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i2 + -16 | 0, i3); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i5, i3);
       HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 24;
      }
      i1 = i1 + 1 | 0;
     }
     if (!((i7 | 0) == (i6 + 1 | 0) & (HEAP8[i21 + 63 >> 0] | 0) != 0)) {
      i1 = i8;
      break L1;
     }
     i1 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i8, i16, i21) | 0;
     if ((i1 | 0) == (i8 | 0)) {
      i1 = i8;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i20, (HEAP32[i10 >> 2] | 0) + -24 | 0);
     i3 = HEAP32[i10 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i21 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i21 * 24 | 0) | 0);
      i2 = i21;
     }
     HEAP32[i10 >> 2] = i3 + -24;
     i2 = HEAP8[i20 + 11 >> 0] | 0;
     i21 = i2 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i3 + -48 | 0, i21 ? HEAP32[i20 >> 2] | 0 : i20, i21 ? HEAP32[i20 + 4 >> 2] | 0 : i2 & 255) | 0;
     i2 = (HEAP32[i10 >> 2] | 0) + -24 | 0;
     HEAP32[i17 >> 2] = HEAP32[i9 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i19, i2, i17);
     i2 = HEAP32[i12 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i13 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      i18 = i2 + 4 | 0;
      HEAP32[i18 >> 2] = 0;
      i17 = i2 + 8 | 0;
      HEAP32[i17 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = HEAP32[i19 + 12 >> 2];
      HEAP32[i2 >> 2] = HEAP32[i19 >> 2];
      i21 = i19 + 4 | 0;
      HEAP32[i18 >> 2] = HEAP32[i21 >> 2];
      i18 = i19 + 8 | 0;
      HEAP32[i17 >> 2] = HEAP32[i18 >> 2];
      HEAP32[i18 >> 2] = 0;
      HEAP32[i21 >> 2] = 0;
      HEAP32[i19 >> 2] = 0;
      HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i11, i19);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i19);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i20);
     break L1;
    }
   case 85:
    {
     i2 = i1 + 1 | 0;
     if ((i2 | 0) == (i16 | 0)) break L1;
     i3 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i2, i16, i21) | 0;
     if ((i3 | 0) == (i2 | 0)) break L1;
     i4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i3, i16, i21) | 0;
     if ((i4 | 0) == (i3 | 0)) break L1;
     i3 = i21 + 4 | 0;
     i2 = HEAP32[i3 >> 2] | 0;
     if (((i2 - (HEAP32[i21 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i20, i2 + -24 | 0);
     i2 = HEAP32[i3 >> 2] | 0;
     i1 = 0;
     while (1) {
      if ((i1 | 0) == -1) break;
      i16 = i1 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i16 * 24 | 0) | 0);
      i1 = i16;
     }
     HEAP32[i3 >> 2] = i2 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i19, i2 + -48 | 0, 9);
     i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(50548) | 0;
     i16 = HEAP8[i19 + 11 >> 0] | 0;
     if ((i1 | 0) == ((i16 << 24 >> 24 < 0 ? HEAP32[i19 + 4 >> 2] | 0 : i16 & 255) | 0)) {
      i16 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i19, 50548, i1) | 0) == 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i19);
      if (i16) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i19, (HEAP32[i3 >> 2] | 0) + -24 | 0);
       i2 = HEAP32[i3 >> 2] | 0;
       i1 = 0;
       while (1) {
        if ((i1 | 0) == -1) break;
        i16 = i1 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i16 * 24 | 0) | 0);
        i1 = i16;
       }
       HEAP32[i3 >> 2] = i2 + -24;
       i1 = i19 + 11 | 0;
       i16 = HEAP8[i1 >> 0] | 0;
       i15 = i16 << 24 >> 24 < 0;
       i2 = i19 + 4 | 0;
       i14 = i15 ? HEAP32[i19 >> 2] | 0 : i19;
       i16 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i14 + 9 | 0, i14 + (i15 ? HEAP32[i2 >> 2] | 0 : i16 & 255) | 0, i21) | 0;
       if ((i16 | 0) == (((HEAP8[i1 >> 0] | 0) < 0 ? HEAP32[i19 >> 2] | 0 : i19) + 9 | 0)) {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i11, i20, 50558);
        i1 = HEAP8[i1 >> 0] | 0;
        i16 = i1 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i11, i16 ? HEAP32[i19 >> 2] | 0 : i19, i16 ? HEAP32[i2 >> 2] | 0 : i1 & 255) | 0;
        HEAP32[i7 >> 2] = HEAP32[i11 >> 2];
        HEAP32[i7 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
        HEAP32[i7 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
        i1 = 0;
        while (1) {
         if ((i1 | 0) == 3) break;
         HEAP32[i11 + (i1 << 2) >> 2] = 0;
         i1 = i1 + 1 | 0;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i17, i7);
        i1 = HEAP32[i3 >> 2] | 0;
        if (i1 >>> 0 < (HEAP32[i21 + 8 >> 2] | 0) >>> 0) {
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i1, i17);
         HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 24;
        } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i21, i17);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i17);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
       } else {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i10, i20, 50560);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, (HEAP32[i3 >> 2] | 0) + -24 | 0);
        i1 = HEAP8[i6 + 11 >> 0] | 0;
        i16 = i1 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i10, i16 ? HEAP32[i6 >> 2] | 0 : i6, i16 ? HEAP32[i6 + 4 >> 2] | 0 : i1 & 255) | 0;
        HEAP32[i11 >> 2] = HEAP32[i10 >> 2];
        HEAP32[i11 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
        HEAP32[i11 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
        i1 = 0;
        while (1) {
         if ((i1 | 0) == 3) break;
         HEAP32[i10 + (i1 << 2) >> 2] = 0;
         i1 = i1 + 1 | 0;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i11, 50562) | 0;
        HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
        HEAP32[i9 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
        HEAP32[i9 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
        i1 = 0;
        while (1) {
         if ((i1 | 0) == 3) break;
         HEAP32[i11 + (i1 << 2) >> 2] = 0;
         i1 = i1 + 1 | 0;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i17, i9);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i3 >> 2] | 0) + -24 | 0, i17);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i17);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i19);
      } else i18 = 167;
     } else {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i19);
      i18 = 167;
     }
     if ((i18 | 0) == 167) {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i17, i20, 50558);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i11, (HEAP32[i3 >> 2] | 0) + -24 | 0);
      i1 = HEAP8[i11 + 11 >> 0] | 0;
      i18 = i1 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i17, i18 ? HEAP32[i11 >> 2] | 0 : i11, i18 ? HEAP32[i11 + 4 >> 2] | 0 : i1 & 255) | 0;
      HEAP32[i5 >> 2] = HEAP32[i17 >> 2];
      HEAP32[i5 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
      HEAP32[i5 + 8 >> 2] = HEAP32[i17 + 8 >> 2];
      i1 = 0;
      while (1) {
       if ((i1 | 0) == 3) break;
       HEAP32[i17 + (i1 << 2) >> 2] = 0;
       i1 = i1 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i19, i5);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i3 >> 2] | 0) + -24 | 0, i19);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i19);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     }
     i1 = (HEAP32[i3 >> 2] | 0) + -24 | 0;
     HEAP32[i17 >> 2] = HEAP32[i21 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i19, i1, i17);
     i1 = i21 + 20 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      i18 = i2 + 4 | 0;
      HEAP32[i18 >> 2] = 0;
      i17 = i2 + 8 | 0;
      HEAP32[i17 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = HEAP32[i19 + 12 >> 2];
      HEAP32[i2 >> 2] = HEAP32[i19 >> 2];
      i21 = i19 + 4 | 0;
      HEAP32[i18 >> 2] = HEAP32[i21 >> 2];
      i18 = i19 + 8 | 0;
      HEAP32[i17 >> 2] = HEAP32[i18 >> 2];
      HEAP32[i18 >> 2] = 0;
      HEAP32[i21 >> 2] = 0;
      HEAP32[i19 >> 2] = 0;
      HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i21 + 16 | 0, i19);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i19);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i20);
     i1 = i4;
     break L1;
    }
   case 83:
    {
     i18 = i1 + 1 | 0;
     if ((i18 | 0) != (i16 | 0) ? (HEAP8[i18 >> 0] | 0) == 116 : 0) {
      i3 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i21) | 0;
      if ((i3 | 0) == (i1 | 0)) break L1;
      i2 = HEAP32[i21 + 4 >> 2] | 0;
      if ((HEAP32[i21 >> 2] | 0) == (i2 | 0)) break L1;
      HEAP32[i19 >> 2] = HEAP32[i21 + 12 >> 2];
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i20, i2 + -24 | 0, i19);
      i1 = i21 + 20 | 0;
      i2 = HEAP32[i1 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
       HEAP32[i2 >> 2] = 0;
       i19 = i2 + 4 | 0;
       HEAP32[i19 >> 2] = 0;
       i18 = i2 + 8 | 0;
       HEAP32[i18 >> 2] = 0;
       HEAP32[i2 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
       HEAP32[i2 >> 2] = HEAP32[i20 >> 2];
       i21 = i20 + 4 | 0;
       HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
       i19 = i20 + 8 | 0;
       HEAP32[i18 >> 2] = HEAP32[i19 >> 2];
       HEAP32[i19 >> 2] = 0;
       HEAP32[i21 >> 2] = 0;
       HEAP32[i20 >> 2] = 0;
       HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 16;
      } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i21 + 16 | 0, i20);
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i20);
      i1 = i3;
      break L1;
     }
     i3 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i21) | 0;
     if ((i3 | 0) == (i1 | 0)) break L1;
     i1 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i3, i16, i21) | 0;
     if ((i1 | 0) == (i3 | 0)) {
      i1 = i3;
      break L1;
     }
     i4 = i21 + 4 | 0;
     i2 = HEAP32[i4 >> 2] | 0;
     if (((i2 - (HEAP32[i21 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      i1 = i3;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i20, i2 + -24 | 0);
     i3 = HEAP32[i4 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i18 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i18 * 24 | 0) | 0);
      i2 = i18;
     }
     HEAP32[i4 >> 2] = i3 + -24;
     i2 = HEAP8[i20 + 11 >> 0] | 0;
     i18 = i2 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i3 + -48 | 0, i18 ? HEAP32[i20 >> 2] | 0 : i20, i18 ? HEAP32[i20 + 4 >> 2] | 0 : i2 & 255) | 0;
     i2 = (HEAP32[i4 >> 2] | 0) + -24 | 0;
     HEAP32[i17 >> 2] = HEAP32[i21 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i19, i2, i17);
     i2 = i21 + 20 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if (i3 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i3 >> 2] = 0;
      i18 = i3 + 4 | 0;
      HEAP32[i18 >> 2] = 0;
      i17 = i3 + 8 | 0;
      HEAP32[i17 >> 2] = 0;
      HEAP32[i3 + 12 >> 2] = HEAP32[i19 + 12 >> 2];
      HEAP32[i3 >> 2] = HEAP32[i19 >> 2];
      i21 = i19 + 4 | 0;
      HEAP32[i18 >> 2] = HEAP32[i21 >> 2];
      i18 = i19 + 8 | 0;
      HEAP32[i17 >> 2] = HEAP32[i18 >> 2];
      HEAP32[i18 >> 2] = 0;
      HEAP32[i21 >> 2] = 0;
      HEAP32[i19 >> 2] = 0;
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i21 + 16 | 0, i19);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i19);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i20);
     break L1;
    }
   case 68:
    {
     i2 = i1 + 1 | 0;
     if ((i2 | 0) != (i16 | 0)) switch (HEAP8[i2 >> 0] | 0) {
     case 112:
      {
       i8 = i21 + 4 | 0;
       i3 = ((HEAP32[i8 >> 2] | 0) - (HEAP32[i21 >> 2] | 0) | 0) / 24 | 0;
       i18 = i1 + 2 | 0;
       i7 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i18, i16, i21) | 0;
       i8 = ((HEAP32[i8 >> 2] | 0) - (HEAP32[i21 >> 2] | 0) | 0) / 24 | 0;
       if ((i7 | 0) == (i18 | 0)) break L59;
       i1 = HEAP32[i21 + 12 >> 2] | 0;
       HEAP32[i20 >> 2] = i1;
       i6 = i21 + 20 | 0;
       i2 = HEAP32[i6 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
        HEAP32[i2 >> 2] = 0;
        HEAP32[i2 + 4 >> 2] = 0;
        HEAP32[i2 + 8 >> 2] = 0;
        HEAP32[i2 + 12 >> 2] = i1;
        HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i21 + 16 | 0, i20);
       i1 = i3;
       while (1) {
        if (i1 >>> 0 >= i8 >>> 0) {
         i1 = i7;
         break L1;
        }
        i2 = HEAP32[i6 >> 2] | 0;
        i3 = (HEAP32[i21 >> 2] | 0) + (i1 * 24 | 0) | 0;
        i4 = i2 + -12 | 0;
        i5 = HEAP32[i4 >> 2] | 0;
        if ((i5 | 0) == (HEAP32[i2 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i2 + -16 | 0, i3); else {
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i5, i3);
         HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 24;
        }
        i1 = i1 + 1 | 0;
       }
      }
     case 84:
     case 116:
      {
       i3 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i21) | 0;
       if ((i3 | 0) == (i1 | 0)) break L59;
       i2 = HEAP32[i21 + 4 >> 2] | 0;
       if ((HEAP32[i21 >> 2] | 0) == (i2 | 0)) break L1;
       HEAP32[i19 >> 2] = HEAP32[i21 + 12 >> 2];
       __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i20, i2 + -24 | 0, i19);
       i1 = i21 + 20 | 0;
       i2 = HEAP32[i1 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
        HEAP32[i2 >> 2] = 0;
        i19 = i2 + 4 | 0;
        HEAP32[i19 >> 2] = 0;
        i18 = i2 + 8 | 0;
        HEAP32[i18 >> 2] = 0;
        HEAP32[i2 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
        HEAP32[i2 >> 2] = HEAP32[i20 >> 2];
        i21 = i20 + 4 | 0;
        HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
        i19 = i20 + 8 | 0;
        HEAP32[i18 >> 2] = HEAP32[i19 >> 2];
        HEAP32[i19 >> 2] = 0;
        HEAP32[i21 >> 2] = 0;
        HEAP32[i20 >> 2] = 0;
        HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i21 + 16 | 0, i20);
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i20);
       i1 = i3;
       break L1;
      }
     case 118:
      {
       i3 = __ZN10__cxxabiv112_GLOBAL__N_117parse_vector_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i21) | 0;
       if ((i3 | 0) == (i1 | 0)) break L59;
       i2 = HEAP32[i21 + 4 >> 2] | 0;
       if ((HEAP32[i21 >> 2] | 0) == (i2 | 0)) break L1;
       HEAP32[i19 >> 2] = HEAP32[i21 + 12 >> 2];
       __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i20, i2 + -24 | 0, i19);
       i1 = i21 + 20 | 0;
       i2 = HEAP32[i1 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
        HEAP32[i2 >> 2] = 0;
        i19 = i2 + 4 | 0;
        HEAP32[i19 >> 2] = 0;
        i18 = i2 + 8 | 0;
        HEAP32[i18 >> 2] = 0;
        HEAP32[i2 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
        HEAP32[i2 >> 2] = HEAP32[i20 >> 2];
        i21 = i20 + 4 | 0;
        HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
        i19 = i20 + 8 | 0;
        HEAP32[i18 >> 2] = HEAP32[i19 >> 2];
        HEAP32[i19 >> 2] = 0;
        HEAP32[i21 >> 2] = 0;
        HEAP32[i20 >> 2] = 0;
        HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i21 + 16 | 0, i20);
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i20);
       i1 = i3;
       break L1;
      }
     default:
      break L59;
     }
     break;
    }
   default:
    {}
   } while (0);
   i2 = __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i21) | 0;
   if ((i2 | 0) == (i1 | 0)) {
    i3 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i21) | 0;
    if ((i3 | 0) != (i1 | 0) ? (i4 = HEAP32[i21 + 4 >> 2] | 0, (HEAP32[i21 >> 2] | 0) != (i4 | 0)) : 0) {
     HEAP32[i19 >> 2] = HEAP32[i21 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i20, i4 + -24 | 0, i19);
     i1 = i21 + 20 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i21 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      i19 = i2 + 4 | 0;
      HEAP32[i19 >> 2] = 0;
      i18 = i2 + 8 | 0;
      HEAP32[i18 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
      HEAP32[i2 >> 2] = HEAP32[i20 >> 2];
      i21 = i20 + 4 | 0;
      HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
      i19 = i20 + 8 | 0;
      HEAP32[i18 >> 2] = HEAP32[i19 >> 2];
      HEAP32[i19 >> 2] = 0;
      HEAP32[i21 >> 2] = 0;
      HEAP32[i20 >> 2] = 0;
      HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i21 + 16 | 0, i20);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i20);
     i1 = i3;
    }
   } else i1 = i2;
  } else i1 = i2;
 } while (0);
 STACKTOP = i22;
 return i1 | 0;
}

function _arPattGetImage2(i22, i8, i31, i6, i32, i33, i34, i17, i35, i4, d7, i36) {
 i22 = i22 | 0;
 i8 = i8 | 0;
 i31 = i31 | 0;
 i6 = i6 | 0;
 i32 = i32 | 0;
 i33 = i33 | 0;
 i34 = i34 | 0;
 i17 = i17 | 0;
 i35 = i35 | 0;
 i4 = i4 | 0;
 d7 = +d7;
 i36 = i36 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d5 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, d23 = 0.0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i37 = 0, i38 = 0, d39 = 0.0, d40 = 0.0, d41 = 0.0, d42 = 0.0, i43 = 0, i44 = 0;
 i38 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i14 = i38 + 232 | 0;
 i13 = i38 + 224 | 0;
 i16 = i38 + 216 | 0;
 i15 = i38 + 208 | 0;
 i2 = i38 + 144 | 0;
 i3 = i38 + 80 | 0;
 i28 = i38;
 i29 = i38 + 240 | 0;
 i30 = i38 + 236 | 0;
 HEAPF64[i2 >> 3] = 100.0;
 HEAPF64[i2 + 8 >> 3] = 100.0;
 HEAPF64[i2 + 16 >> 3] = 110.0;
 HEAPF64[i2 + 24 >> 3] = 100.0;
 HEAPF64[i2 + 32 >> 3] = 110.0;
 HEAPF64[i2 + 40 >> 3] = 110.0;
 HEAPF64[i2 + 48 >> 3] = 100.0;
 HEAPF64[i2 + 56 >> 3] = 110.0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 4) break;
  HEAPF64[i3 + (i1 << 4) >> 3] = +HEAPF64[i4 + (i1 << 4) >> 3];
  HEAPF64[i3 + (i1 << 4) + 8 >> 3] = +HEAPF64[i4 + (i1 << 4) + 8 >> 3];
  i1 = i1 + 1 | 0;
 }
 _get_cpara(i2, i3, i28);
 d12 = +HEAPF64[i3 >> 3];
 d40 = +HEAPF64[i3 + 16 >> 3];
 d10 = d12 - d40;
 d23 = +HEAPF64[i3 + 8 >> 3];
 d39 = +HEAPF64[i3 + 24 >> 3];
 d5 = d23 - d39;
 i1 = ~~(d10 * d10 + d5 * d5);
 d5 = +HEAPF64[i3 + 32 >> 3];
 d10 = +HEAPF64[i3 + 48 >> 3];
 d42 = d5 - d10;
 d9 = +HEAPF64[i3 + 40 >> 3];
 d11 = +HEAPF64[i3 + 56 >> 3];
 d41 = d9 - d11;
 i26 = ~~(d42 * d42 + d41 * d41);
 d5 = d40 - d5;
 d9 = d39 - d9;
 i3 = ~~(d5 * d5 + d9 * d9);
 d12 = d10 - d12;
 d23 = d11 - d23;
 i27 = ~~(d12 * d12 + d23 * d23);
 i1 = ~~(+(((i26 | 0) > (i1 | 0) ? i26 : i1) | 0) * d7 * d7);
 i3 = ~~(+(((i27 | 0) > (i3 | 0) ? i27 : i3) | 0) * d7 * d7);
 if (!i22) {
  i2 = i31;
  while (1) if ((i2 | 0) < (i6 | 0) & (Math_imul(i2, i2) | 0) < (i1 | 0)) i2 = i2 << 1; else break;
  i1 = i31;
  while (1) if ((i1 | 0) < (i6 | 0) & (Math_imul(i1, i1) | 0) < (i3 | 0)) i1 = i1 << 1; else break;
 } else {
  i2 = i31;
  while (1) if ((i2 | 0) < (i6 | 0) & (Math_imul(i2 << 2, i2) | 0) < (i1 | 0)) i2 = i2 << 1; else break;
  i1 = i31;
  while (1) if ((i1 | 0) < (i6 | 0) & (Math_imul(i1 << 2, i1) | 0) < (i3 | 0)) i1 = i1 << 1; else break;
 }
 i27 = (i2 | 0) > (i6 | 0) ? i6 : i2;
 i24 = (i1 | 0) > (i6 | 0) ? i6 : i1;
 i25 = (i27 | 0) / (i31 | 0) | 0;
 i26 = (i24 | 0) / (i31 | 0) | 0;
 d5 = (1.0 - d7) * .5 * 10.0;
 d23 = d7 * 10.0;
 i21 = Math_imul(i31, i31) | 0;
 L19 : do if (!i8) {
  i21 = i21 * 3 | 0;
  i1 = _calloc(i21, 4) | 0;
  if (!i1) {
   _arLog(0, 3, 20581, i15);
   _exit(1);
  }
  L24 : do switch (i17 | 0) {
  case 0:
   {
    d10 = d5 + 100.0;
    d11 = +(i24 | 0);
    d12 = +(i27 | 0);
    i13 = i28 + 48 | 0;
    i14 = i28 + 56 | 0;
    i15 = i28 + 64 | 0;
    i16 = i28 + 8 | 0;
    i17 = i28 + 16 | 0;
    i18 = i28 + 24 | 0;
    i19 = i28 + 32 | 0;
    i20 = i28 + 40 | 0;
    i8 = (i22 | 0) == 1;
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i24 | 0)) break L24;
     d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i27 | 0)) break;
      d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
      d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
      if (d7 == 0.0) {
       i37 = 306;
       break L19;
      }
      d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
      HEAPF32[i29 >> 2] = d42;
      d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
      HEAPF32[i30 >> 2] = d5;
      _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
      d5 = +HEAPF32[i29 >> 2];
      if (i8) {
       i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
       i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       i2 = ~~(d5 + .5);
       i3 = ~~(+HEAPF32[i30 >> 2] + .5);
      }
      if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
       i3 = ((Math_imul(i3, i33) | 0) + i2 | 0) * 3 | 0;
       i22 = ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) | 0) * 3 | 0;
       i2 = i1 + (i22 << 2) | 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + (HEAPU8[i32 + (i3 + 2) >> 0] | 0);
       i2 = i1 + (i22 + 1 << 2) | 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + (HEAPU8[i32 + (i3 + 1) >> 0] | 0);
       i22 = i1 + (i22 + 2 << 2) | 0;
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + (HEAPU8[i32 + i3 >> 0] | 0);
      }
      i6 = i6 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   }
  case 1:
   {
    d10 = d5 + 100.0;
    d11 = +(i24 | 0);
    d12 = +(i27 | 0);
    i13 = i28 + 48 | 0;
    i14 = i28 + 56 | 0;
    i15 = i28 + 64 | 0;
    i16 = i28 + 8 | 0;
    i17 = i28 + 16 | 0;
    i18 = i28 + 24 | 0;
    i19 = i28 + 32 | 0;
    i20 = i28 + 40 | 0;
    i8 = (i22 | 0) == 1;
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i24 | 0)) break L24;
     d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i27 | 0)) break;
      d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
      d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
      if (d7 == 0.0) {
       i37 = 306;
       break L19;
      }
      d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
      HEAPF32[i29 >> 2] = d42;
      d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
      HEAPF32[i30 >> 2] = d5;
      _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
      d5 = +HEAPF32[i29 >> 2];
      if (i8) {
       i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
       i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       i2 = ~~(d5 + .5);
       i3 = ~~(+HEAPF32[i30 >> 2] + .5);
      }
      if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
       i3 = ((Math_imul(i3, i33) | 0) + i2 | 0) * 3 | 0;
       i22 = ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) | 0) * 3 | 0;
       i2 = i1 + (i22 << 2) | 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + (HEAPU8[i32 + i3 >> 0] | 0);
       i2 = i1 + (i22 + 1 << 2) | 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + (HEAPU8[i32 + (i3 + 1) >> 0] | 0);
       i22 = i1 + (i22 + 2 << 2) | 0;
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + (HEAPU8[i32 + (i3 + 2) >> 0] | 0);
      }
      i6 = i6 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   }
  case 2:
   {
    d10 = d5 + 100.0;
    d11 = +(i24 | 0);
    d12 = +(i27 | 0);
    i13 = i28 + 48 | 0;
    i14 = i28 + 56 | 0;
    i15 = i28 + 64 | 0;
    i16 = i28 + 8 | 0;
    i17 = i28 + 16 | 0;
    i18 = i28 + 24 | 0;
    i19 = i28 + 32 | 0;
    i20 = i28 + 40 | 0;
    i8 = (i22 | 0) == 1;
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i24 | 0)) break L24;
     d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i27 | 0)) break;
      d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
      d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
      if (d7 == 0.0) {
       i37 = 306;
       break L19;
      }
      d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
      HEAPF32[i29 >> 2] = d42;
      d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
      HEAPF32[i30 >> 2] = d5;
      _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
      d5 = +HEAPF32[i29 >> 2];
      if (i8) {
       i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
       i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       i2 = ~~(d5 + .5);
       i3 = ~~(+HEAPF32[i30 >> 2] + .5);
      }
      if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
       i3 = (Math_imul(i3, i33) | 0) + i2 << 2;
       i22 = ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) | 0) * 3 | 0;
       i2 = i1 + (i22 << 2) | 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + (HEAPU8[i32 + (i3 | 2) >> 0] | 0);
       i2 = i1 + (i22 + 1 << 2) | 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + (HEAPU8[i32 + (i3 | 1) >> 0] | 0);
       i22 = i1 + (i22 + 2 << 2) | 0;
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + (HEAPU8[i32 + i3 >> 0] | 0);
      }
      i6 = i6 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   }
  case 3:
   {
    d10 = d5 + 100.0;
    d11 = +(i24 | 0);
    d12 = +(i27 | 0);
    i13 = i28 + 48 | 0;
    i14 = i28 + 56 | 0;
    i15 = i28 + 64 | 0;
    i16 = i28 + 8 | 0;
    i17 = i28 + 16 | 0;
    i18 = i28 + 24 | 0;
    i19 = i28 + 32 | 0;
    i20 = i28 + 40 | 0;
    i8 = (i22 | 0) == 1;
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i24 | 0)) break L24;
     d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i27 | 0)) break;
      d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
      d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
      if (d7 == 0.0) {
       i37 = 306;
       break L19;
      }
      d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
      HEAPF32[i29 >> 2] = d42;
      d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
      HEAPF32[i30 >> 2] = d5;
      _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
      d5 = +HEAPF32[i29 >> 2];
      if (i8) {
       i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
       i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       i2 = ~~(d5 + .5);
       i3 = ~~(+HEAPF32[i30 >> 2] + .5);
      }
      if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
       i3 = (Math_imul(i3, i33) | 0) + i2 << 2;
       i22 = ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) | 0) * 3 | 0;
       i2 = i1 + (i22 << 2) | 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + (HEAPU8[i32 + i3 >> 0] | 0);
       i2 = i1 + (i22 + 1 << 2) | 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + (HEAPU8[i32 + (i3 | 1) >> 0] | 0);
       i22 = i1 + (i22 + 2 << 2) | 0;
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + (HEAPU8[i32 + (i3 | 2) >> 0] | 0);
      }
      i6 = i6 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   }
  case 4:
   {
    d10 = d5 + 100.0;
    d11 = +(i24 | 0);
    d12 = +(i27 | 0);
    i13 = i28 + 48 | 0;
    i14 = i28 + 56 | 0;
    i15 = i28 + 64 | 0;
    i16 = i28 + 8 | 0;
    i17 = i28 + 16 | 0;
    i18 = i28 + 24 | 0;
    i19 = i28 + 32 | 0;
    i20 = i28 + 40 | 0;
    i8 = (i22 | 0) == 1;
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i24 | 0)) break L24;
     d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i27 | 0)) break;
      d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
      d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
      if (d7 == 0.0) {
       i37 = 306;
       break L19;
      }
      d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
      HEAPF32[i29 >> 2] = d42;
      d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
      HEAPF32[i30 >> 2] = d5;
      _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
      d5 = +HEAPF32[i29 >> 2];
      if (i8) {
       i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
       i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       i2 = ~~(d5 + .5);
       i3 = ~~(+HEAPF32[i30 >> 2] + .5);
      }
      if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
       i3 = (Math_imul(i3, i33) | 0) + i2 << 2;
       i22 = ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) | 0) * 3 | 0;
       i2 = i1 + (i22 << 2) | 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + (HEAPU8[i32 + (i3 | 1) >> 0] | 0);
       i2 = i1 + (i22 + 1 << 2) | 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + (HEAPU8[i32 + (i3 | 2) >> 0] | 0);
       i22 = i1 + (i22 + 2 << 2) | 0;
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + (HEAPU8[i32 + (i3 | 3) >> 0] | 0);
      }
      i6 = i6 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   }
  case 5:
  case 12:
  case 13:
  case 14:
   {
    d10 = d5 + 100.0;
    d11 = +(i24 | 0);
    d12 = +(i27 | 0);
    i13 = i28 + 48 | 0;
    i14 = i28 + 56 | 0;
    i15 = i28 + 64 | 0;
    i16 = i28 + 8 | 0;
    i17 = i28 + 16 | 0;
    i18 = i28 + 24 | 0;
    i19 = i28 + 32 | 0;
    i20 = i28 + 40 | 0;
    i8 = (i22 | 0) == 1;
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i24 | 0)) break L24;
     d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i27 | 0)) break;
      d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
      d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
      if (d7 == 0.0) {
       i37 = 306;
       break L19;
      }
      d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
      HEAPF32[i29 >> 2] = d42;
      d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
      HEAPF32[i30 >> 2] = d5;
      _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
      d5 = +HEAPF32[i29 >> 2];
      if (i8) {
       i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
       i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       i2 = ~~(d5 + .5);
       i3 = ~~(+HEAPF32[i30 >> 2] + .5);
      }
      if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
       i3 = i32 + ((Math_imul(i3, i33) | 0) + i2) | 0;
       i3 = HEAPU8[i3 >> 0] | 0;
       i22 = ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) | 0) * 3 | 0;
       i2 = i1 + (i22 << 2) | 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + i3;
       i2 = i1 + (i22 + 1 << 2) | 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + i3;
       i22 = i1 + (i22 + 2 << 2) | 0;
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + i3;
      }
      i6 = i6 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   }
  case 6:
   {
    d10 = d5 + 100.0;
    d11 = +(i24 | 0);
    d12 = +(i27 | 0);
    i13 = i28 + 48 | 0;
    i14 = i28 + 56 | 0;
    i15 = i28 + 64 | 0;
    i16 = i28 + 8 | 0;
    i17 = i28 + 16 | 0;
    i18 = i28 + 24 | 0;
    i19 = i28 + 32 | 0;
    i20 = i28 + 40 | 0;
    i8 = (i22 | 0) == 1;
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i24 | 0)) break L24;
     d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i27 | 0)) break;
      d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
      d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
      if (d7 == 0.0) {
       i37 = 306;
       break L19;
      }
      d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
      HEAPF32[i29 >> 2] = d42;
      d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
      HEAPF32[i30 >> 2] = d5;
      _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
      d5 = +HEAPF32[i29 >> 2];
      if (i8) {
       i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
       i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       i2 = ~~(d5 + .5);
       i3 = ~~(+HEAPF32[i30 >> 2] + .5);
      }
      if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
       i3 = (Math_imul(i3, i33) | 0) + i2 << 2;
       i22 = ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) | 0) * 3 | 0;
       i2 = i1 + (i22 << 2) | 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + (HEAPU8[i32 + (i3 | 3) >> 0] | 0);
       i2 = i1 + (i22 + 1 << 2) | 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + (HEAPU8[i32 + (i3 | 2) >> 0] | 0);
       i22 = i1 + (i22 + 2 << 2) | 0;
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + (HEAPU8[i32 + (i3 | 1) >> 0] | 0);
      }
      i6 = i6 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   }
  case 7:
   {
    d10 = d5 + 100.0;
    d11 = +(i24 | 0);
    d12 = +(i27 | 0);
    i13 = i28 + 48 | 0;
    i14 = i28 + 56 | 0;
    i15 = i28 + 64 | 0;
    i16 = i28 + 8 | 0;
    i17 = i28 + 16 | 0;
    i18 = i28 + 24 | 0;
    i19 = i28 + 32 | 0;
    i20 = i28 + 40 | 0;
    i8 = (i22 | 0) == 1;
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i24 | 0)) break L24;
     d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i27 | 0)) break;
      d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
      d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
      if (d7 == 0.0) {
       i37 = 306;
       break L19;
      }
      d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
      HEAPF32[i29 >> 2] = d42;
      d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
      HEAPF32[i30 >> 2] = d5;
      _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
      d5 = +HEAPF32[i29 >> 2];
      if (i8) {
       i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
       i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       i2 = ~~(d5 + .5);
       i3 = ~~(+HEAPF32[i30 >> 2] + .5);
      }
      if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
       i44 = Math_imul(i3, i33) | 0;
       i43 = (i2 & 65534) + i44 << 1;
       d40 = +((HEAPU8[i32 + i43 >> 0] | 0) + -128 | 0);
       d42 = +((HEAPU8[i32 + (i43 + 2) >> 0] | 0) + -128 | 0);
       d41 = +((HEAPU8[i32 + (i44 + i2 << 1 | 1) >> 0] | 0) + -16 | 0) * 298.0820007324219;
       i44 = ~~(d40 * 516.4110107421875 + d41) >> 8;
       i43 = ~~(d41 - d40 * 100.29100036621094 - d42 * 208.1199951171875) >> 8;
       i3 = ~~(d41 + d42 * 408.5830078125) >> 8;
       i44 = (i44 | 0) > 0 ? i44 : 0;
       i22 = ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) | 0) * 3 | 0;
       i2 = i1 + (i22 << 2) | 0;
       HEAP32[i2 >> 2] = ((i44 | 0) < 255 ? i44 : 255) + (HEAP32[i2 >> 2] | 0);
       i43 = (i43 | 0) > 0 ? i43 : 0;
       i2 = i1 + (i22 + 1 << 2) | 0;
       HEAP32[i2 >> 2] = ((i43 | 0) < 255 ? i43 : 255) + (HEAP32[i2 >> 2] | 0);
       i3 = (i3 | 0) > 0 ? i3 : 0;
       i22 = i1 + (i22 + 2 << 2) | 0;
       HEAP32[i22 >> 2] = ((i3 | 0) < 255 ? i3 : 255) + (HEAP32[i22 >> 2] | 0);
      }
      i6 = i6 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   }
  case 8:
   {
    d10 = d5 + 100.0;
    d11 = +(i24 | 0);
    d12 = +(i27 | 0);
    i13 = i28 + 48 | 0;
    i14 = i28 + 56 | 0;
    i15 = i28 + 64 | 0;
    i16 = i28 + 8 | 0;
    i17 = i28 + 16 | 0;
    i18 = i28 + 24 | 0;
    i19 = i28 + 32 | 0;
    i20 = i28 + 40 | 0;
    i8 = (i22 | 0) == 1;
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i24 | 0)) break L24;
     d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i27 | 0)) break;
      d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
      d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
      if (d7 == 0.0) {
       i37 = 306;
       break L19;
      }
      d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
      HEAPF32[i29 >> 2] = d42;
      d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
      HEAPF32[i30 >> 2] = d5;
      _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
      d5 = +HEAPF32[i29 >> 2];
      if (i8) {
       i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
       i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       i2 = ~~(d5 + .5);
       i3 = ~~(+HEAPF32[i30 >> 2] + .5);
      }
      if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
       i3 = Math_imul(i3, i33) | 0;
       i43 = (i2 & 65534) + i3 << 1;
       d40 = +((HEAPU8[i32 + (i43 | 1) >> 0] | 0) + -128 | 0);
       d42 = +((HEAPU8[i32 + (i43 + 3) >> 0] | 0) + -128 | 0);
       d41 = +((HEAPU8[i32 + (i3 + i2 << 1) >> 0] | 0) + -16 | 0) * 298.0820007324219;
       i2 = ~~(d41 + d40 * 516.4110107421875) >> 8;
       i3 = ~~(d41 - d40 * 100.29100036621094 - d42 * 208.1199951171875) >> 8;
       i43 = ~~(d41 + d42 * 408.5830078125) >> 8;
       i2 = (i2 | 0) > 0 ? i2 : 0;
       i44 = ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) | 0) * 3 | 0;
       i22 = i1 + (i44 << 2) | 0;
       HEAP32[i22 >> 2] = ((i2 | 0) < 255 ? i2 : 255) + (HEAP32[i22 >> 2] | 0);
       i3 = (i3 | 0) > 0 ? i3 : 0;
       i22 = i1 + (i44 + 1 << 2) | 0;
       HEAP32[i22 >> 2] = ((i3 | 0) < 255 ? i3 : 255) + (HEAP32[i22 >> 2] | 0);
       i43 = (i43 | 0) > 0 ? i43 : 0;
       i44 = i1 + (i44 + 2 << 2) | 0;
       HEAP32[i44 >> 2] = ((i43 | 0) < 255 ? i43 : 255) + (HEAP32[i44 >> 2] | 0);
      }
      i6 = i6 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   }
  case 9:
   {
    d10 = d5 + 100.0;
    d11 = +(i24 | 0);
    d12 = +(i27 | 0);
    i13 = i28 + 48 | 0;
    i14 = i28 + 56 | 0;
    i15 = i28 + 64 | 0;
    i16 = i28 + 8 | 0;
    i17 = i28 + 16 | 0;
    i18 = i28 + 24 | 0;
    i19 = i28 + 32 | 0;
    i20 = i28 + 40 | 0;
    i8 = (i22 | 0) == 1;
    i6 = 0;
    while (1) {
     if ((i6 | 0) >= (i24 | 0)) break L24;
     d9 = d10 + d23 * (+(i6 | 0) + .5) / d11;
     i4 = 0;
     while (1) {
      if ((i4 | 0) >= (i27 | 0)) break;
      d5 = d10 + d23 * (+(i4 | 0) + .5) / d12;
      d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
      if (d7 == 0.0) {
       i37 = 306;
       break L19;
      }
      d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
      HEAPF32[i29 >> 2] = d42;
      d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
      HEAPF32[i30 >> 2] = d5;
      _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
      d5 = +HEAPF32[i29 >> 2];
      if (i8) {
       i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
       i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       i2 = ~~(d5 + .5);
       i3 = ~~(+HEAPF32[i30 >> 2] + .5);
      }
      if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
       i43 = (Math_imul(i3, i33) | 0) + i2 << 1;
       i3 = HEAP8[i32 + (i43 | 1) >> 0] | 0;
       i44 = ((Math_imul((i6 | 0) / (i26 | 0) | 0, i31) | 0) + ((i4 | 0) / (i25 | 0) | 0) | 0) * 3 | 0;
       i22 = i1 + (i44 << 2) | 0;
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + ((i3 << 3 & 255 | 4) & 255);
       i43 = HEAP8[i32 + i43 >> 0] | 0;
       i22 = i1 + (i44 + 1 << 2) | 0;
       HEAP32[i22 >> 2] = ((i3 & -32 & 255) >>> 3 | i43 << 5 & 255 | 2) + (HEAP32[i22 >> 2] | 0);
       i44 = i1 + (i44 + 2 << 2) | 0;
       HEAP32[i44 >> 2] = (HEAP32[i44 >> 2] | 0) + ((i43 & -8 | 4) & 255);
      }
      i4 = i4 + 1 | 0;
     }
     i6 = i6 + 1 | 0;
    }
   }
  case 10:
   {
    d10 = d5 + 100.0;
    d11 = +(i24 | 0);
    d12 = +(i27 | 0);
    i13 = i28 + 48 | 0;
    i14 = i28 + 56 | 0;
    i15 = i28 + 64 | 0;
    i16 = i28 + 8 | 0;
    i17 = i28 + 16 | 0;
    i18 = i28 + 24 | 0;
    i19 = i28 + 32 | 0;
    i20 = i28 + 40 | 0;
    i8 = (i22 | 0) == 1;
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i24 | 0)) break L24;
     d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i27 | 0)) break;
      d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
      d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
      if (d7 == 0.0) {
       i37 = 306;
       break L19;
      }
      d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
      HEAPF32[i29 >> 2] = d42;
      d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
      HEAPF32[i30 >> 2] = d5;
      _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
      d5 = +HEAPF32[i29 >> 2];
      if (i8) {
       i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
       i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       i2 = ~~(d5 + .5);
       i3 = ~~(+HEAPF32[i30 >> 2] + .5);
      }
      if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
       i43 = (Math_imul(i3, i33) | 0) + i2 << 1;
       i3 = HEAP8[i32 + (i43 | 1) >> 0] | 0;
       i44 = ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) | 0) * 3 | 0;
       i22 = i1 + (i44 << 2) | 0;
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + ((i3 << 2 & 255 | 4) & 255);
       i43 = HEAP8[i32 + i43 >> 0] | 0;
       i22 = i1 + (i44 + 1 << 2) | 0;
       HEAP32[i22 >> 2] = ((i3 & -64 & 255) >>> 3 | i43 << 5 & 255 | 4) + (HEAP32[i22 >> 2] | 0);
       i44 = i1 + (i44 + 2 << 2) | 0;
       HEAP32[i44 >> 2] = (HEAP32[i44 >> 2] | 0) + ((i43 & -8 | 4) & 255);
      }
      i6 = i6 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   }
  case 11:
   {
    d10 = d5 + 100.0;
    d11 = +(i24 | 0);
    d12 = +(i27 | 0);
    i13 = i28 + 48 | 0;
    i14 = i28 + 56 | 0;
    i15 = i28 + 64 | 0;
    i16 = i28 + 8 | 0;
    i17 = i28 + 16 | 0;
    i18 = i28 + 24 | 0;
    i19 = i28 + 32 | 0;
    i20 = i28 + 40 | 0;
    i8 = (i22 | 0) == 1;
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i24 | 0)) break L24;
     d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i27 | 0)) break;
      d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
      d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
      if (d7 == 0.0) {
       i37 = 306;
       break L19;
      }
      d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
      HEAPF32[i29 >> 2] = d42;
      d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
      HEAPF32[i30 >> 2] = d5;
      _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
      d5 = +HEAPF32[i29 >> 2];
      if (i8) {
       i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
       i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       i2 = ~~(d5 + .5);
       i3 = ~~(+HEAPF32[i30 >> 2] + .5);
      }
      if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
       i43 = (Math_imul(i3, i33) | 0) + i2 << 1;
       i44 = ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) | 0) * 3 | 0;
       i22 = i1 + (i44 << 2) | 0;
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + ((HEAP8[i32 + (i43 | 1) >> 0] & -16 | 8) & 255);
       i43 = HEAP8[i32 + i43 >> 0] | 0;
       i22 = i1 + (i44 + 1 << 2) | 0;
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + ((i43 << 4 & 255 | 8) & 255);
       i44 = i1 + (i44 + 2 << 2) | 0;
       HEAP32[i44 >> 2] = (HEAP32[i44 >> 2] | 0) + ((i43 & -16 | 8) & 255);
      }
      i6 = i6 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   }
  default:
   {
    _arLog(0, 3, 17978, i16);
    i37 = 306;
    break L19;
   }
  } while (0);
  i3 = Math_imul(i26, i25) | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == (i21 | 0)) break;
   HEAP8[i36 + i2 >> 0] = ((HEAP32[i1 + (i2 << 2) >> 2] | 0) >>> 0) / (i3 >>> 0) | 0;
   i2 = i2 + 1 | 0;
  }
  _free(i1);
  i1 = 0;
 } else {
  i1 = _calloc(i21, 4) | 0;
  if (!i1) {
   _arLog(0, 3, 20581, i13);
   _exit(1);
  }
  L239 : do if (i17 >>> 0 < 2) {
   d10 = d5 + 100.0;
   d11 = +(i24 | 0);
   d12 = +(i27 | 0);
   i13 = i28 + 48 | 0;
   i14 = i28 + 56 | 0;
   i15 = i28 + 64 | 0;
   i16 = i28 + 8 | 0;
   i17 = i28 + 16 | 0;
   i18 = i28 + 24 | 0;
   i19 = i28 + 32 | 0;
   i20 = i28 + 40 | 0;
   i8 = (i22 | 0) == 1;
   i4 = 0;
   while (1) {
    if ((i4 | 0) >= (i24 | 0)) break L239;
    d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
    i6 = 0;
    while (1) {
     if ((i6 | 0) >= (i27 | 0)) break;
     d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
     d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
     if (d7 == 0.0) {
      i37 = 306;
      break L19;
     }
     d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
     HEAPF32[i29 >> 2] = d42;
     d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
     HEAPF32[i30 >> 2] = d5;
     _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
     d5 = +HEAPF32[i29 >> 2];
     if (i8) {
      i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
      i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
     } else {
      i2 = ~~(d5 + .5);
      i3 = ~~(+HEAPF32[i30 >> 2] + .5);
     }
     if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
      i43 = ((Math_imul(i3, i33) | 0) + i2 | 0) * 3 | 0;
      i44 = i1 + ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) << 2) | 0;
      HEAP32[i44 >> 2] = (HEAP32[i44 >> 2] | 0) + ((((HEAPU8[i32 + (i43 + 1) >> 0] | 0) + (HEAPU8[i32 + i43 >> 0] | 0) + (HEAPU8[i32 + (i43 + 2) >> 0] | 0) | 0) >>> 0) / 3 | 0);
     }
     i6 = i6 + 1 | 0;
    }
    i4 = i4 + 1 | 0;
   }
  } else {
   if ((i17 | 1 | 0) == 3) {
    d10 = d5 + 100.0;
    d11 = +(i24 | 0);
    d12 = +(i27 | 0);
    i13 = i28 + 48 | 0;
    i14 = i28 + 56 | 0;
    i15 = i28 + 64 | 0;
    i16 = i28 + 8 | 0;
    i17 = i28 + 16 | 0;
    i18 = i28 + 24 | 0;
    i19 = i28 + 32 | 0;
    i20 = i28 + 40 | 0;
    i8 = (i22 | 0) == 1;
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i24 | 0)) break L239;
     d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i27 | 0)) break;
      d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
      d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
      if (d7 == 0.0) {
       i37 = 306;
       break L19;
      }
      d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
      HEAPF32[i29 >> 2] = d42;
      d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
      HEAPF32[i30 >> 2] = d5;
      _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
      d5 = +HEAPF32[i29 >> 2];
      if (i8) {
       i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
       i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       i2 = ~~(d5 + .5);
       i3 = ~~(+HEAPF32[i30 >> 2] + .5);
      }
      if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
       i43 = (Math_imul(i3, i33) | 0) + i2 << 2;
       i44 = i1 + ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) << 2) | 0;
       HEAP32[i44 >> 2] = (HEAP32[i44 >> 2] | 0) + ((((HEAPU8[i32 + (i43 | 1) >> 0] | 0) + (HEAPU8[i32 + i43 >> 0] | 0) + (HEAPU8[i32 + (i43 | 2) >> 0] | 0) | 0) >>> 0) / 3 | 0);
      }
      i6 = i6 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   }
   if ((i17 | 2 | 0) == 6) {
    d10 = d5 + 100.0;
    d11 = +(i24 | 0);
    d12 = +(i27 | 0);
    i13 = i28 + 48 | 0;
    i14 = i28 + 56 | 0;
    i15 = i28 + 64 | 0;
    i16 = i28 + 8 | 0;
    i17 = i28 + 16 | 0;
    i18 = i28 + 24 | 0;
    i19 = i28 + 32 | 0;
    i20 = i28 + 40 | 0;
    i8 = (i22 | 0) == 1;
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i24 | 0)) break L239;
     d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i27 | 0)) break;
      d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
      d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
      if (d7 == 0.0) {
       i37 = 306;
       break L19;
      }
      d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
      HEAPF32[i29 >> 2] = d42;
      d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
      HEAPF32[i30 >> 2] = d5;
      _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
      d5 = +HEAPF32[i29 >> 2];
      if (i8) {
       i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
       i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       i2 = ~~(d5 + .5);
       i3 = ~~(+HEAPF32[i30 >> 2] + .5);
      }
      if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
       i43 = (Math_imul(i3, i33) | 0) + i2 << 2;
       i44 = i1 + ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) << 2) | 0;
       HEAP32[i44 >> 2] = (HEAP32[i44 >> 2] | 0) + ((((HEAPU8[i32 + (i43 | 2) >> 0] | 0) + (HEAPU8[i32 + (i43 | 1) >> 0] | 0) + (HEAPU8[i32 + (i43 | 3) >> 0] | 0) | 0) >>> 0) / 3 | 0);
      }
      i6 = i6 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   }
   switch (i17 | 0) {
   case 5:
   case 12:
   case 13:
   case 14:
    {
     d10 = d5 + 100.0;
     d11 = +(i24 | 0);
     d12 = +(i27 | 0);
     i13 = i28 + 48 | 0;
     i14 = i28 + 56 | 0;
     i15 = i28 + 64 | 0;
     i16 = i28 + 8 | 0;
     i17 = i28 + 16 | 0;
     i18 = i28 + 24 | 0;
     i19 = i28 + 32 | 0;
     i20 = i28 + 40 | 0;
     i8 = (i22 | 0) == 1;
     i4 = 0;
     while (1) {
      if ((i4 | 0) >= (i24 | 0)) break L239;
      d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i27 | 0)) break;
       d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
       d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
       if (d7 == 0.0) {
        i37 = 306;
        break L19;
       }
       d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
       HEAPF32[i29 >> 2] = d42;
       d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
       HEAPF32[i30 >> 2] = d5;
       _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
       d5 = +HEAPF32[i29 >> 2];
       if (i8) {
        i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
        i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        i2 = ~~(d5 + .5);
        i3 = ~~(+HEAPF32[i30 >> 2] + .5);
       }
       if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
        i43 = i32 + ((Math_imul(i3, i33) | 0) + i2) | 0;
        i44 = i1 + ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) << 2) | 0;
        HEAP32[i44 >> 2] = (HEAP32[i44 >> 2] | 0) + (HEAPU8[i43 >> 0] | 0);
       }
       i6 = i6 + 1 | 0;
      }
      i4 = i4 + 1 | 0;
     }
    }
   case 7:
    {
     d10 = d5 + 100.0;
     d11 = +(i24 | 0);
     d12 = +(i27 | 0);
     i13 = i28 + 48 | 0;
     i14 = i28 + 56 | 0;
     i15 = i28 + 64 | 0;
     i16 = i28 + 8 | 0;
     i17 = i28 + 16 | 0;
     i18 = i28 + 24 | 0;
     i19 = i28 + 32 | 0;
     i20 = i28 + 40 | 0;
     i8 = (i22 | 0) == 1;
     i4 = 0;
     while (1) {
      if ((i4 | 0) >= (i24 | 0)) break L239;
      d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i27 | 0)) break;
       d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
       d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
       if (d7 == 0.0) {
        i37 = 306;
        break L19;
       }
       d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
       HEAPF32[i29 >> 2] = d42;
       d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
       HEAPF32[i30 >> 2] = d5;
       _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
       d5 = +HEAPF32[i29 >> 2];
       if (i8) {
        i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
        i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        i2 = ~~(d5 + .5);
        i3 = ~~(+HEAPF32[i30 >> 2] + .5);
       }
       if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
        i43 = i32 + ((Math_imul(i3, i33) | 0) + i2 << 1 | 1) | 0;
        i44 = i1 + ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) << 2) | 0;
        HEAP32[i44 >> 2] = (HEAP32[i44 >> 2] | 0) + (HEAPU8[i43 >> 0] | 0);
       }
       i6 = i6 + 1 | 0;
      }
      i4 = i4 + 1 | 0;
     }
    }
   case 8:
    {
     d10 = d5 + 100.0;
     d11 = +(i24 | 0);
     d12 = +(i27 | 0);
     i13 = i28 + 48 | 0;
     i14 = i28 + 56 | 0;
     i15 = i28 + 64 | 0;
     i16 = i28 + 8 | 0;
     i17 = i28 + 16 | 0;
     i18 = i28 + 24 | 0;
     i19 = i28 + 32 | 0;
     i20 = i28 + 40 | 0;
     i8 = (i22 | 0) == 1;
     i4 = 0;
     while (1) {
      if ((i4 | 0) >= (i24 | 0)) break L239;
      d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i27 | 0)) break;
       d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
       d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
       if (d7 == 0.0) {
        i37 = 306;
        break L19;
       }
       d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
       HEAPF32[i29 >> 2] = d42;
       d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
       HEAPF32[i30 >> 2] = d5;
       _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
       d5 = +HEAPF32[i29 >> 2];
       if (i8) {
        i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
        i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        i2 = ~~(d5 + .5);
        i3 = ~~(+HEAPF32[i30 >> 2] + .5);
       }
       if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
        i43 = i32 + ((Math_imul(i3, i33) | 0) + i2 << 1) | 0;
        i44 = i1 + ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) << 2) | 0;
        HEAP32[i44 >> 2] = (HEAP32[i44 >> 2] | 0) + (HEAPU8[i43 >> 0] | 0);
       }
       i6 = i6 + 1 | 0;
      }
      i4 = i4 + 1 | 0;
     }
    }
   case 9:
    {
     d10 = d5 + 100.0;
     d11 = +(i24 | 0);
     d12 = +(i27 | 0);
     i13 = i28 + 48 | 0;
     i14 = i28 + 56 | 0;
     i15 = i28 + 64 | 0;
     i16 = i28 + 8 | 0;
     i17 = i28 + 16 | 0;
     i18 = i28 + 24 | 0;
     i19 = i28 + 32 | 0;
     i20 = i28 + 40 | 0;
     i8 = (i22 | 0) == 1;
     i4 = 0;
     while (1) {
      if ((i4 | 0) >= (i24 | 0)) break L239;
      d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i27 | 0)) break;
       d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
       d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
       if (d7 == 0.0) {
        i37 = 306;
        break L19;
       }
       d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
       HEAPF32[i29 >> 2] = d42;
       d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
       HEAPF32[i30 >> 2] = d5;
       _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
       d5 = +HEAPF32[i29 >> 2];
       if (i8) {
        i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
        i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        i2 = ~~(d5 + .5);
        i3 = ~~(+HEAPF32[i30 >> 2] + .5);
       }
       if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
        i43 = (Math_imul(i3, i33) | 0) + i2 << 1;
        i22 = HEAPU8[i32 + i43 >> 0] | 0;
        i43 = HEAPU8[i32 + (i43 | 1) >> 0] | 0;
        i44 = i1 + ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) << 2) | 0;
        HEAP32[i44 >> 2] = ((((i22 << 5 & 224 | i43 >>> 3 & 28 | 2) + (i22 & 248 | 4) + (i43 << 3 & 248 | 4) | 0) >>> 0) / 3 | 0) + (HEAP32[i44 >> 2] | 0);
       }
       i6 = i6 + 1 | 0;
      }
      i4 = i4 + 1 | 0;
     }
    }
   case 10:
    {
     d10 = d5 + 100.0;
     d11 = +(i24 | 0);
     d12 = +(i27 | 0);
     i13 = i28 + 48 | 0;
     i14 = i28 + 56 | 0;
     i15 = i28 + 64 | 0;
     i16 = i28 + 8 | 0;
     i17 = i28 + 16 | 0;
     i18 = i28 + 24 | 0;
     i19 = i28 + 32 | 0;
     i20 = i28 + 40 | 0;
     i8 = (i22 | 0) == 1;
     i4 = 0;
     while (1) {
      if ((i4 | 0) >= (i24 | 0)) break L239;
      d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i27 | 0)) break;
       d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
       d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
       if (d7 == 0.0) {
        i37 = 306;
        break L19;
       }
       d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
       HEAPF32[i29 >> 2] = d42;
       d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
       HEAPF32[i30 >> 2] = d5;
       _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
       d5 = +HEAPF32[i29 >> 2];
       if (i8) {
        i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
        i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        i2 = ~~(d5 + .5);
        i3 = ~~(+HEAPF32[i30 >> 2] + .5);
       }
       if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
        i43 = (Math_imul(i3, i33) | 0) + i2 << 1;
        i22 = HEAPU8[i32 + i43 >> 0] | 0;
        i43 = HEAPU8[i32 + (i43 | 1) >> 0] | 0;
        i44 = i1 + ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) << 2) | 0;
        HEAP32[i44 >> 2] = ((((i22 << 5 & 224 | i43 >>> 3 & 24 | 4) + (i22 & 248 | 4) + (i43 << 2 & 248 | 4) | 0) >>> 0) / 3 | 0) + (HEAP32[i44 >> 2] | 0);
       }
       i6 = i6 + 1 | 0;
      }
      i4 = i4 + 1 | 0;
     }
    }
   case 11:
    {
     d10 = d5 + 100.0;
     d11 = +(i24 | 0);
     d12 = +(i27 | 0);
     i13 = i28 + 48 | 0;
     i14 = i28 + 56 | 0;
     i15 = i28 + 64 | 0;
     i16 = i28 + 8 | 0;
     i17 = i28 + 16 | 0;
     i18 = i28 + 24 | 0;
     i19 = i28 + 32 | 0;
     i20 = i28 + 40 | 0;
     i8 = (i22 | 0) == 1;
     i4 = 0;
     while (1) {
      if ((i4 | 0) >= (i24 | 0)) break L239;
      d9 = d10 + d23 * (+(i4 | 0) + .5) / d11;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i27 | 0)) break;
       d5 = d10 + d23 * (+(i6 | 0) + .5) / d12;
       d7 = +HEAPF64[i15 >> 3] + (d5 * +HEAPF64[i13 >> 3] + d9 * +HEAPF64[i14 >> 3]);
       if (d7 == 0.0) {
        i37 = 306;
        break L19;
       }
       d42 = (+HEAPF64[i17 >> 3] + (d5 * +HEAPF64[i28 >> 3] + d9 * +HEAPF64[i16 >> 3])) / d7;
       HEAPF32[i29 >> 2] = d42;
       d5 = (+HEAPF64[i20 >> 3] + (d5 * +HEAPF64[i18 >> 3] + d9 * +HEAPF64[i19 >> 3])) / d7;
       HEAPF32[i30 >> 2] = d5;
       _arParamIdeal2ObservLTf(i35, d42, d5, i29, i30) | 0;
       d5 = +HEAPF32[i29 >> 2];
       if (i8) {
        i2 = ((~~(d5 + 1.0) | 0) / 2 | 0) << 1;
        i3 = ((~~(+HEAPF32[i30 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        i2 = ~~(d5 + .5);
        i3 = ~~(+HEAPF32[i30 >> 2] + .5);
       }
       if ((i2 | 0) > -1 ? (i3 | 0) < (i34 | 0) & ((i3 | 0) > -1 & (i2 | 0) < (i33 | 0)) : 0) {
        i43 = (Math_imul(i3, i33) | 0) + i2 << 1;
        i22 = HEAPU8[i32 + i43 >> 0] | 0;
        i44 = i1 + ((Math_imul((i4 | 0) / (i26 | 0) | 0, i31) | 0) + ((i6 | 0) / (i25 | 0) | 0) << 2) | 0;
        HEAP32[i44 >> 2] = ((((i22 << 4 & 240 | 8) + (i22 & 240 | 8) + ((HEAP8[i32 + (i43 | 1) >> 0] & -16 | 8) & 255) | 0) >>> 0) / 3 | 0) + (HEAP32[i44 >> 2] | 0);
       }
       i6 = i6 + 1 | 0;
      }
      i4 = i4 + 1 | 0;
     }
    }
   default:
    {
     _arLog(0, 3, 17978, i14);
     i37 = 306;
     break L19;
    }
   }
  } while (0);
  i3 = Math_imul(i26, i25) | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == (i21 | 0)) break;
   HEAP8[i36 + i2 >> 0] = ((HEAP32[i1 + (i2 << 2) >> 2] | 0) >>> 0) / (i3 >>> 0) | 0;
   i2 = i2 + 1 | 0;
  }
  _free(i1);
  i1 = 0;
 } while (0);
 if ((i37 | 0) == 306) {
  _free(i1);
  i1 = -1;
 }
 STACKTOP = i38;
 return i1 | 0;
}

function __ZN6vision25DoGScaleInvariantDetector15extractFeaturesEPKNS_25GaussianScaleSpacePyramidEPKNS_10DoGPyramidE(i1, i43, i51) {
 i1 = i1 | 0;
 i43 = i43 | 0;
 i51 = i51 | 0;
 var d2 = 0.0, d3 = 0.0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, d9 = 0.0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, d57 = 0.0, i58 = 0, i59 = 0, d60 = 0.0;
 i59 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i52 = i59;
 i54 = i1 + 60 | 0;
 i55 = i1 + 64 | 0;
 HEAP32[i55 >> 2] = HEAP32[i54 >> 2];
 d57 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[i1 + 52 >> 2]);
 i44 = i1 + 32 | 0;
 i45 = i52 + 12 | 0;
 i47 = i52 + 16 | 0;
 i48 = i52 + 24 | 0;
 i49 = i52 + 28 | 0;
 i50 = i52 + 4 | 0;
 i27 = i1 + 68 | 0;
 i28 = i52 + 12 | 0;
 i29 = i52 + 16 | 0;
 i30 = i52 + 24 | 0;
 i31 = i52 + 28 | 0;
 i32 = i52 + 4 | 0;
 i33 = i52 + 12 | 0;
 i34 = i52 + 16 | 0;
 i35 = i52 + 24 | 0;
 i36 = i52 + 28 | 0;
 i37 = i52 + 4 | 0;
 i1 = 1;
 L1 : while (1) {
  if (i1 >>> 0 >= ((__ZNK6vision10DoGPyramid4sizeEv(i44) | 0) + -1 | 0) >>> 0) {
   i58 = 3;
   break;
  }
  i38 = __ZNK6vision10DoGPyramid3getEm(i51, i1 + -1 | 0) | 0;
  i39 = __ZNK6vision10DoGPyramid3getEm(i51, i1) | 0;
  i40 = i1 + 1 | 0;
  i41 = __ZNK6vision10DoGPyramid3getEm(i51, i40) | 0;
  i42 = __ZNK6vision10DoGPyramid15octaveFromIndexEi(i51, i1) | 0;
  i26 = __ZNK6vision10DoGPyramid14scaleFromIndexEi(i51, i1) | 0;
  i25 = __ZNK6vision5Image5widthEv(i38) | 0;
  L4 : do if ((i25 | 0) == (__ZNK6vision5Image5widthEv(i39) | 0) ? (i25 = __ZNK6vision5Image5widthEv(i38) | 0, (i25 | 0) == (__ZNK6vision5Image5widthEv(i41) | 0)) : 0) {
   i25 = __ZNK6vision5Image6heightEv(i38) | 0;
   if ((i25 | 0) != (__ZNK6vision5Image6heightEv(i39) | 0)) {
    i58 = 7;
    break L1;
   }
   i25 = __ZNK6vision5Image6heightEv(i38) | 0;
   if ((i25 | 0) != (__ZNK6vision5Image6heightEv(i41) | 0)) {
    i58 = 9;
    break L1;
   }
   i7 = (__ZNK6vision5Image5widthEv(i39) | 0) + -1 | 0;
   i8 = (__ZNK6vision5Image6heightEv(i39) | 0) + -1 | 0;
   d9 = +(i26 | 0);
   i1 = 1;
   while (1) {
    if (i1 >>> 0 >= i8 >>> 0) break L4;
    i17 = i1 + -1 | 0;
    i10 = __ZNK6vision5Image3getIfEEPKT_m(i38, i17) | 0;
    i11 = __ZNK6vision5Image3getIfEEPKT_m(i38, i1) | 0;
    i12 = i1 + 1 | 0;
    i13 = __ZNK6vision5Image3getIfEEPKT_m(i38, i12) | 0;
    i14 = __ZNK6vision5Image3getIfEEPKT_m(i39, i17) | 0;
    i15 = __ZNK6vision5Image3getIfEEPKT_m(i39, i1) | 0;
    i16 = __ZNK6vision5Image3getIfEEPKT_m(i39, i12) | 0;
    i17 = __ZNK6vision5Image3getIfEEPKT_m(i41, i17) | 0;
    i18 = __ZNK6vision5Image3getIfEEPKT_m(i41, i1) | 0;
    i19 = __ZNK6vision5Image3getIfEEPKT_m(i41, i12) | 0;
    d6 = +(i1 >>> 0);
    i5 = 1;
    while (1) {
     if (i5 >>> 0 >= i7 >>> 0) break;
     i1 = i15 + (i5 << 2) | 0;
     do if (!(+__ZN6vision3sqrIfEET_S1_(+HEAPF32[i1 >> 2]) < d57)) {
      d3 = +HEAPF32[i1 >> 2];
      i4 = i5 + -1 | 0;
      d2 = +HEAPF32[i10 + (i4 << 2) >> 2];
      do if (((((d3 > d2 ? d3 > +HEAPF32[i10 + (i5 << 2) >> 2] : 0) ? (i46 = i5 + 1 | 0, d3 > +HEAPF32[i10 + (i46 << 2) >> 2]) : 0) ? d3 > +HEAPF32[i11 + (i4 << 2) >> 2] : 0) ? d3 > +HEAPF32[i11 + (i5 << 2) >> 2] : 0) ? d3 > +HEAPF32[i11 + (i46 << 2) >> 2] : 0) {
       if (!(d3 > +HEAPF32[i13 + (i4 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i13 + (i5 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i13 + (i46 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i14 + (i4 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i14 + (i5 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i14 + (i46 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i15 + (i4 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i15 + (i46 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i16 + (i4 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i16 + (i5 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i16 + (i46 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i17 + (i4 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i17 + (i5 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i17 + (i46 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i18 + (i4 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i18 + (i5 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i18 + (i46 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i19 + (i4 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i19 + (i5 << 2) >> 2])) {
        i58 = 42;
        break;
       }
       if (!(d3 > +HEAPF32[i19 + (i46 << 2) >> 2])) i58 = 42;
      } else i58 = 42; while (0);
      if ((i58 | 0) == 42) {
       i58 = 0;
       if (!(d3 < d2)) break;
       if (!(d3 < +HEAPF32[i10 + (i5 << 2) >> 2])) break;
       i1 = i5 + 1 | 0;
       if (!(d3 < +HEAPF32[i10 + (i1 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i11 + (i4 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i11 + (i5 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i11 + (i1 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i13 + (i4 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i13 + (i5 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i13 + (i1 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i14 + (i4 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i14 + (i5 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i14 + (i1 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i15 + (i4 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i15 + (i1 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i16 + (i4 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i16 + (i5 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i16 + (i1 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i17 + (i4 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i17 + (i5 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i17 + (i1 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i18 + (i4 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i18 + (i5 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i18 + (i1 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i19 + (i4 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i19 + (i5 << 2) >> 2])) break;
       if (!(d3 < +HEAPF32[i19 + (i1 << 2) >> 2])) break;
      }
      HEAP32[i45 >> 2] = i42;
      HEAP32[i47 >> 2] = i26;
      HEAPF32[i48 >> 2] = d3;
      d24 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf(i43, i42, d9);
      HEAPF32[i49 >> 2] = d24;
      __ZN6vision23bilinear_upsample_pointERfS0_ffi(i52, i50, +(i5 >>> 0), d6, i42);
      i1 = HEAP32[i55 >> 2] | 0;
      if ((i1 | 0) == (HEAP32[i27 >> 2] | 0)) {
       __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i54, i52);
       break;
      } else {
       i4 = i52;
       i25 = i1 + 36 | 0;
       do {
        HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
        i1 = i1 + 4 | 0;
        i4 = i4 + 4 | 0;
       } while ((i1 | 0) < (i25 | 0));
       HEAP32[i55 >> 2] = (HEAP32[i55 >> 2] | 0) + 36;
       break;
      }
     } while (0);
     i5 = i5 + 1 | 0;
    }
    i1 = i12;
   }
  } else i58 = 72; while (0);
  L76 : do if ((i58 | 0) == 72) {
   i58 = 0;
   i25 = __ZNK6vision5Image5widthEv(i38) | 0;
   if ((i25 | 0) == (__ZNK6vision5Image5widthEv(i39) | 0) ? (i25 = (__ZNK6vision5Image5widthEv(i39) | 0) >>> 1, (i25 | 0) == (__ZNK6vision5Image5widthEv(i41) | 0)) : 0) {
    i25 = __ZNK6vision5Image6heightEv(i38) | 0;
    if ((i25 | 0) != (__ZNK6vision5Image6heightEv(i39) | 0)) {
     i58 = 75;
     break L1;
    }
    i25 = (__ZNK6vision5Image6heightEv(i39) | 0) >>> 1;
    if ((i25 | 0) != (__ZNK6vision5Image6heightEv(i41) | 0)) {
     i58 = 77;
     break L1;
    }
    i8 = ~~+Math_floor(+((+(((__ZNK6vision5Image5widthEv(i41) | 0) + -1 | 0) >>> 0) + -.5) * 2.0 + .5)) >>> 0;
    i10 = ~~+Math_floor(+((+(((__ZNK6vision5Image6heightEv(i41) | 0) + -1 | 0) >>> 0) + -.5) * 2.0 + .5)) >>> 0;
    d24 = +(i26 | 0);
    i1 = 2;
    while (1) {
     if (i1 >>> 0 >= i10 >>> 0) break L76;
     i15 = i1 + -1 | 0;
     i11 = __ZNK6vision5Image3getIfEEPKT_m(i38, i15) | 0;
     i12 = __ZNK6vision5Image3getIfEEPKT_m(i38, i1) | 0;
     i13 = i1 + 1 | 0;
     i14 = __ZNK6vision5Image3getIfEEPKT_m(i38, i13) | 0;
     i15 = __ZNK6vision5Image3getIfEEPKT_m(i39, i15) | 0;
     i16 = __ZNK6vision5Image3getIfEEPKT_m(i39, i1) | 0;
     i17 = __ZNK6vision5Image3getIfEEPKT_m(i39, i13) | 0;
     d20 = +(i1 >>> 0);
     d21 = d20 * .5 + -.25;
     d22 = d21 + -.5;
     d23 = d21 + .5;
     i7 = 2;
     while (1) {
      if (i7 >>> 0 >= i8 >>> 0) break;
      i5 = i16 + (i7 << 2) | 0;
      do if (!(+__ZN6vision3sqrIfEET_S1_(+HEAPF32[i5 >> 2]) < d57)) {
       d6 = +(i7 >>> 0);
       d9 = d6 * .5 + -.25;
       d2 = +HEAPF32[i5 >> 2];
       i4 = i7 + -1 | 0;
       i1 = i11 + (i4 << 2) | 0;
       do if (((d2 > +HEAPF32[i1 >> 2] ? d2 > +HEAPF32[i11 + (i7 << 2) >> 2] : 0) ? (i53 = i7 + 1 | 0, d2 > +HEAPF32[i11 + (i53 << 2) >> 2]) : 0) ? d2 > +HEAPF32[i12 + (i4 << 2) >> 2] : 0) {
        if (!(d2 > +HEAPF32[i12 + (i7 << 2) >> 2])) {
         i58 = 110;
         break;
        }
        if (!(d2 > +HEAPF32[i12 + (i53 << 2) >> 2])) {
         i58 = 110;
         break;
        }
        if (!(d2 > +HEAPF32[i14 + (i4 << 2) >> 2])) {
         i58 = 110;
         break;
        }
        if (!(d2 > +HEAPF32[i14 + (i7 << 2) >> 2])) {
         i58 = 110;
         break;
        }
        if (!(d2 > +HEAPF32[i14 + (i53 << 2) >> 2])) {
         i58 = 110;
         break;
        }
        if (!(d2 > +HEAPF32[i15 + (i4 << 2) >> 2])) {
         i58 = 110;
         break;
        }
        if (!(d2 > +HEAPF32[i15 + (i7 << 2) >> 2])) {
         i58 = 110;
         break;
        }
        if (!(d2 > +HEAPF32[i15 + (i53 << 2) >> 2])) {
         i58 = 110;
         break;
        }
        if (!(d2 > +HEAPF32[i16 + (i4 << 2) >> 2])) {
         i58 = 110;
         break;
        }
        if (!(d2 > +HEAPF32[i16 + (i53 << 2) >> 2])) {
         i58 = 110;
         break;
        }
        if (!(d2 > +HEAPF32[i17 + (i4 << 2) >> 2])) {
         i58 = 110;
         break;
        }
        if (!(d2 > +HEAPF32[i17 + (i7 << 2) >> 2])) {
         i58 = 110;
         break;
        }
        if (!(d2 > +HEAPF32[i17 + (i53 << 2) >> 2])) {
         i58 = 110;
         break;
        }
        d3 = d9 + -.5;
        if (!(d2 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d3, d22))) {
         i58 = 110;
         break;
        }
        d2 = +HEAPF32[i5 >> 2];
        if (!(d2 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d9, d22))) {
         i58 = 110;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        d2 = d9 + .5;
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d2, d22))) {
         i58 = 110;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d3, d21))) {
         i58 = 110;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d9, d21))) {
         i58 = 110;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d2, d21))) {
         i58 = 110;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d3, d23))) {
         i58 = 110;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d9, d23))) {
         i58 = 110;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d2, d23))) i58 = 110;
       } else i58 = 110; while (0);
       if ((i58 | 0) == 110) {
        i58 = 0;
        d2 = +HEAPF32[i5 >> 2];
        if (!(d2 < +HEAPF32[i1 >> 2])) break;
        if (!(d2 < +HEAPF32[i11 + (i7 << 2) >> 2])) break;
        i1 = i7 + 1 | 0;
        if (!(d2 < +HEAPF32[i11 + (i1 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i12 + (i4 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i12 + (i7 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i12 + (i1 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i14 + (i4 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i14 + (i7 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i14 + (i1 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i15 + (i4 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i15 + (i7 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i15 + (i1 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i16 + (i4 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i16 + (i1 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i17 + (i4 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i17 + (i7 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i17 + (i1 << 2) >> 2])) break;
        d3 = d9 + -.5;
        if (!(d2 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d3, d22))) break;
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d9, d22))) break;
        d60 = +HEAPF32[i5 >> 2];
        d2 = d9 + .5;
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d2, d22))) break;
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d3, d21))) break;
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d9, d21))) break;
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d2, d21))) break;
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d3, d23))) break;
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d9, d23))) break;
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i41, d2, d23))) break;
       }
       HEAP32[i28 >> 2] = i42;
       HEAP32[i29 >> 2] = i26;
       HEAP32[i30 >> 2] = HEAP32[i5 >> 2];
       d60 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf(i43, i42, d24);
       HEAPF32[i31 >> 2] = d60;
       __ZN6vision23bilinear_upsample_pointERfS0_ffi(i52, i32, d6, d20, i42);
       i1 = HEAP32[i55 >> 2] | 0;
       if ((i1 | 0) == (HEAP32[i27 >> 2] | 0)) {
        __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i54, i52);
        break;
       } else {
        i4 = i52;
        i25 = i1 + 36 | 0;
        do {
         HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
         i1 = i1 + 4 | 0;
         i4 = i4 + 4 | 0;
        } while ((i1 | 0) < (i25 | 0));
        HEAP32[i55 >> 2] = (HEAP32[i55 >> 2] | 0) + 36;
        break;
       }
      } while (0);
      i7 = i7 + 1 | 0;
     }
     i1 = i13;
    }
   }
   i25 = (__ZNK6vision5Image5widthEv(i38) | 0) >>> 1;
   if ((i25 | 0) == (__ZNK6vision5Image5widthEv(i39) | 0) ? (i25 = (__ZNK6vision5Image5widthEv(i38) | 0) >>> 1, (i25 | 0) == (__ZNK6vision5Image5widthEv(i41) | 0)) : 0) {
    i25 = (__ZNK6vision5Image6heightEv(i38) | 0) >>> 1;
    if ((i25 | 0) != (__ZNK6vision5Image6heightEv(i39) | 0)) {
     i58 = 144;
     break L1;
    }
    i25 = (__ZNK6vision5Image6heightEv(i38) | 0) >>> 1;
    if ((i25 | 0) != (__ZNK6vision5Image6heightEv(i41) | 0)) {
     i58 = 146;
     break L1;
    }
    i8 = (__ZNK6vision5Image5widthEv(i39) | 0) + -1 | 0;
    i10 = (__ZNK6vision5Image6heightEv(i39) | 0) + -1 | 0;
    d22 = +(i26 | 0);
    i1 = 1;
    while (1) {
     if (i1 >>> 0 >= i10 >>> 0) break L76;
     i15 = i1 + -1 | 0;
     i11 = __ZNK6vision5Image3getIfEEPKT_m(i39, i15) | 0;
     i12 = __ZNK6vision5Image3getIfEEPKT_m(i39, i1) | 0;
     i13 = i1 + 1 | 0;
     i14 = __ZNK6vision5Image3getIfEEPKT_m(i39, i13) | 0;
     i15 = __ZNK6vision5Image3getIfEEPKT_m(i41, i15) | 0;
     i16 = __ZNK6vision5Image3getIfEEPKT_m(i41, i1) | 0;
     i17 = __ZNK6vision5Image3getIfEEPKT_m(i41, i13) | 0;
     d23 = +(i1 << 1 >>> 0) + .5;
     d9 = +(i1 >>> 0);
     d20 = d23 + -2.0;
     d21 = d23 + 2.0;
     i7 = 1;
     while (1) {
      if (i7 >>> 0 >= i8 >>> 0) break;
      i5 = i12 + (i7 << 2) | 0;
      do if (!(+__ZN6vision3sqrIfEET_S1_(+HEAPF32[i5 >> 2]) < d57)) {
       d6 = +(i7 << 1 >>> 0) + .5;
       d2 = +HEAPF32[i5 >> 2];
       i4 = i7 + -1 | 0;
       i1 = i11 + (i4 << 2) | 0;
       do if (((d2 > +HEAPF32[i1 >> 2] ? d2 > +HEAPF32[i11 + (i7 << 2) >> 2] : 0) ? (i56 = i7 + 1 | 0, d2 > +HEAPF32[i11 + (i56 << 2) >> 2]) : 0) ? d2 > +HEAPF32[i12 + (i4 << 2) >> 2] : 0) {
        if (!(d2 > +HEAPF32[i12 + (i56 << 2) >> 2])) {
         i58 = 179;
         break;
        }
        if (!(d2 > +HEAPF32[i14 + (i4 << 2) >> 2])) {
         i58 = 179;
         break;
        }
        if (!(d2 > +HEAPF32[i14 + (i7 << 2) >> 2])) {
         i58 = 179;
         break;
        }
        if (!(d2 > +HEAPF32[i14 + (i56 << 2) >> 2])) {
         i58 = 179;
         break;
        }
        if (!(d2 > +HEAPF32[i15 + (i4 << 2) >> 2])) {
         i58 = 179;
         break;
        }
        if (!(d2 > +HEAPF32[i15 + (i7 << 2) >> 2])) {
         i58 = 179;
         break;
        }
        if (!(d2 > +HEAPF32[i15 + (i56 << 2) >> 2])) {
         i58 = 179;
         break;
        }
        if (!(d2 > +HEAPF32[i16 + (i4 << 2) >> 2])) {
         i58 = 179;
         break;
        }
        if (!(d2 > +HEAPF32[i16 + (i7 << 2) >> 2])) {
         i58 = 179;
         break;
        }
        if (!(d2 > +HEAPF32[i16 + (i56 << 2) >> 2])) {
         i58 = 179;
         break;
        }
        if (!(d2 > +HEAPF32[i17 + (i4 << 2) >> 2])) {
         i58 = 179;
         break;
        }
        if (!(d2 > +HEAPF32[i17 + (i7 << 2) >> 2])) {
         i58 = 179;
         break;
        }
        if (!(d2 > +HEAPF32[i17 + (i56 << 2) >> 2])) {
         i58 = 179;
         break;
        }
        d3 = d6 + -2.0;
        if (!(d2 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d3, d20))) {
         i58 = 179;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d6, d20))) {
         i58 = 179;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        d2 = d6 + 2.0;
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d2, d20))) {
         i58 = 179;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d3, d23))) {
         i58 = 179;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d6, d23))) {
         i58 = 179;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d2, d23))) {
         i58 = 179;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d3, d21))) {
         i58 = 179;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d6, d21))) {
         i58 = 179;
         break;
        }
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d2, d21))) i58 = 179;
       } else i58 = 179; while (0);
       if ((i58 | 0) == 179) {
        i58 = 0;
        d2 = +HEAPF32[i5 >> 2];
        if (!(d2 < +HEAPF32[i1 >> 2])) break;
        if (!(d2 < +HEAPF32[i11 + (i7 << 2) >> 2])) break;
        i1 = i7 + 1 | 0;
        if (!(d2 < +HEAPF32[i11 + (i1 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i12 + (i4 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i12 + (i1 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i14 + (i4 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i14 + (i7 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i14 + (i1 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i15 + (i4 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i15 + (i7 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i15 + (i1 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i16 + (i4 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i16 + (i7 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i16 + (i1 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i17 + (i4 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i17 + (i7 << 2) >> 2])) break;
        if (!(d2 < +HEAPF32[i17 + (i1 << 2) >> 2])) break;
        d3 = d6 + -2.0;
        if (!(d2 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d3, d20))) break;
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d6, d20))) break;
        d60 = +HEAPF32[i5 >> 2];
        d2 = d6 + 2.0;
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d2, d20))) break;
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d3, d23))) break;
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d6, d23))) break;
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d2, d23))) break;
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d3, d21))) break;
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d6, d21))) break;
        d60 = +HEAPF32[i5 >> 2];
        if (!(d60 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i38, d2, d21))) break;
       }
       HEAP32[i33 >> 2] = i42;
       HEAP32[i34 >> 2] = i26;
       HEAP32[i35 >> 2] = HEAP32[i5 >> 2];
       d60 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf(i43, i42, d22);
       HEAPF32[i36 >> 2] = d60;
       __ZN6vision23bilinear_upsample_pointERfS0_ffi(i52, i37, +(i7 >>> 0), d9, i42);
       i1 = HEAP32[i55 >> 2] | 0;
       if ((i1 | 0) == (HEAP32[i27 >> 2] | 0)) {
        __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i54, i52);
        break;
       } else {
        i4 = i52;
        i25 = i1 + 36 | 0;
        do {
         HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
         i1 = i1 + 4 | 0;
         i4 = i4 + 4 | 0;
        } while ((i1 | 0) < (i25 | 0));
        HEAP32[i55 >> 2] = (HEAP32[i55 >> 2] | 0) + 36;
        break;
       }
      } while (0);
      i7 = i7 + 1 | 0;
     }
     i1 = i13;
    }
   }
  } while (0);
  i1 = i40;
 }
 if ((i58 | 0) == 3) {
  STACKTOP = i59;
  return;
 } else if ((i58 | 0) == 7) {
  i59 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24766) | 0, 20647) | 0, 33655) | 0, 192) | 0, 33662) | 0, 24818) | 0;
  __ZNKSt3__28ios_base6getlocEv(i52, i59 + (HEAP32[(HEAP32[i59 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i58 = __ZNKSt3__26locale9use_facetERNS0_2idE(i52, 58792) | 0;
  i58 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i58 >> 2] | 0) + 28 >> 2] & 63](i58, 10) | 0;
  __ZNSt3__26localeD2Ev(i52);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i59, i58) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i59) | 0;
  _abort();
 } else if ((i58 | 0) == 9) {
  i59 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24841) | 0, 20647) | 0, 33655) | 0, 193) | 0, 33662) | 0, 24818) | 0;
  __ZNKSt3__28ios_base6getlocEv(i52, i59 + (HEAP32[(HEAP32[i59 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i58 = __ZNKSt3__26locale9use_facetERNS0_2idE(i52, 58792) | 0;
  i58 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i58 >> 2] | 0) + 28 >> 2] & 63](i58, 10) | 0;
  __ZNSt3__26localeD2Ev(i52);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i59, i58) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i59) | 0;
  _abort();
 } else if ((i58 | 0) == 75) {
  i59 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24766) | 0, 20647) | 0, 33655) | 0, 277) | 0, 33662) | 0, 24818) | 0;
  __ZNKSt3__28ios_base6getlocEv(i52, i59 + (HEAP32[(HEAP32[i59 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i58 = __ZNKSt3__26locale9use_facetERNS0_2idE(i52, 58792) | 0;
  i58 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i58 >> 2] | 0) + 28 >> 2] & 63](i58, 10) | 0;
  __ZNSt3__26localeD2Ev(i52);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i59, i58) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i59) | 0;
  _abort();
 } else if ((i58 | 0) == 77) {
  i59 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24893) | 0, 20647) | 0, 33655) | 0, 278) | 0, 33662) | 0, 24818) | 0;
  __ZNKSt3__28ios_base6getlocEv(i52, i59 + (HEAP32[(HEAP32[i59 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i58 = __ZNKSt3__26locale9use_facetERNS0_2idE(i52, 58792) | 0;
  i58 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i58 >> 2] | 0) + 28 >> 2] & 63](i58, 10) | 0;
  __ZNSt3__26localeD2Ev(i52);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i59, i58) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i59) | 0;
  _abort();
 } else if ((i58 | 0) == 144) {
  i59 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24950) | 0, 20647) | 0, 33655) | 0, 362) | 0, 33662) | 0, 24818) | 0;
  __ZNKSt3__28ios_base6getlocEv(i52, i59 + (HEAP32[(HEAP32[i59 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i58 = __ZNKSt3__26locale9use_facetERNS0_2idE(i52, 58792) | 0;
  i58 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i58 >> 2] | 0) + 28 >> 2] & 63](i58, 10) | 0;
  __ZNSt3__26localeD2Ev(i52);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i59, i58) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i59) | 0;
  _abort();
 } else if ((i58 | 0) == 146) {
  i59 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 25007) | 0, 20647) | 0, 33655) | 0, 363) | 0, 33662) | 0, 24818) | 0;
  __ZNKSt3__28ios_base6getlocEv(i52, i59 + (HEAP32[(HEAP32[i59 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i58 = __ZNKSt3__26locale9use_facetERNS0_2idE(i52, 58792) | 0;
  i58 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i58 >> 2] | 0) + 28 >> 2] & 63](i58, 10) | 0;
  __ZNSt3__26localeD2Ev(i52);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i59, i58) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i59) | 0;
  _abort();
 }
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 var i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i6;
 L1 : do if ((i2 - i1 | 0) > 1) do switch (HEAP8[i1 >> 0] | 0) {
 case 97:
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 97:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 50826);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 110:
  case 100:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 50837);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 78:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 50847);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 83:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 50858);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  default:
   break L1;
  }
 case 99:
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 108:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 50868);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 109:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 50879);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 111:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 50889);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 118:
   {
    i3 = i5 + 63 | 0;
    i7 = HEAP8[i3 >> 0] | 0;
    HEAP8[i3 >> 0] = 0;
    i4 = i1 + 2 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i4, i2, i5) | 0;
    HEAP8[i3 >> 0] = i7;
    if ((i2 | 0) == (i4 | 0)) break L1;
    i3 = HEAP32[i5 + 4 >> 2] | 0;
    if ((HEAP32[i5 >> 2] | 0) == (i3 | 0)) break L1;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i3 + -24 | 0, 0, 50899) | 0;
    HEAP8[i5 + 60 >> 0] = 1;
    i1 = i2;
    break L1;
   }
  default:
   break L1;
  }
 case 100:
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 97:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm18EEERAT__Kc(i4, 50909);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 101:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 50927);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 108:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm16EEERAT__Kc(i4);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 118:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 50937);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 86:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 50947);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  default:
   break L1;
  }
 case 101:
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 111:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 50958);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 79:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 50968);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 113:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 50979);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  default:
   break L1;
  }
 case 103:
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 101:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 50990);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 116:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 51001);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  default:
   break L1;
  }
 case 105:
  {
   if ((HEAP8[i1 + 1 >> 0] | 0) != 120) break L1;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 51011);
   i2 = i5 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
   i1 = i1 + 2 | 0;
   break L1;
  }
 case 108:
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 101:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 51022);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 105:
   {
    i7 = i1 + 2 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i7, i2, i5) | 0;
    if ((i2 | 0) == (i7 | 0)) break L1;
    i3 = HEAP32[i5 + 4 >> 2] | 0;
    if ((HEAP32[i5 >> 2] | 0) == (i3 | 0)) break L1;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i3 + -24 | 0, 0, 51033) | 0;
    i1 = i2;
    break L1;
   }
  case 115:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 51045);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 83:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc(i4, 51056);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 116:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 51068);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  default:
   break L1;
  }
 case 109:
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 105:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 51078);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 73:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 51088);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 108:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 50927);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 76:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 51099);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 109:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 51110);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  default:
   break L1;
  }
 case 110:
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 97:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc(i4, 51121);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 101:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 51136);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 103:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 51078);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 116:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 51147);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 119:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc(i4, 51157);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  default:
   break L1;
  }
 case 111:
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 111:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 51170);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 114:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 51181);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 82:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 51191);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  default:
   break L1;
  }
 case 112:
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 109:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc(i4, 51202);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 108:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 51214);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 76:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 51224);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 112:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 51235);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 115:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 51214);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 116:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 51246);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  default:
   break L1;
  }
 case 113:
  {
   if ((HEAP8[i1 + 1 >> 0] | 0) != 117) break L1;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 51257);
   i2 = i5 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
   i1 = i1 + 2 | 0;
   break L1;
  }
 case 114:
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 109:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i4, 51267);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 77:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 51277);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 115:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i4, 51288);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 83:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc(i4, 51299);
    i2 = i5 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i5 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i5, i4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
    i1 = i1 + 2 | 0;
    break L1;
   }
  default:
   break L1;
  }
 case 118:
  {
   if (((HEAP8[i1 + 1 >> 0] | 0) + -48 | 0) >>> 0 >= 10) break L1;
   i7 = i1 + 2 | 0;
   i2 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i7, i2, i5) | 0;
   if ((i2 | 0) == (i7 | 0)) break L1;
   i3 = HEAP32[i5 + 4 >> 2] | 0;
   if ((HEAP32[i5 >> 2] | 0) == (i3 | 0)) break L1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i3 + -24 | 0, 0, 50899) | 0;
   i1 = i2;
   break L1;
  }
 default:
  break L1;
 } while (0); while (0);
 STACKTOP = i6;
 return i1 | 0;
}

function _malloc(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i13 = i22;
 do if (i2 >>> 0 < 245) {
  i10 = i2 >>> 0 < 11 ? 16 : i2 + 11 & -8;
  i2 = i10 >>> 3;
  i12 = HEAP32[14307] | 0;
  i3 = i12 >>> i2;
  if (i3 & 3 | 0) {
   i1 = (i3 & 1 ^ 1) + i2 | 0;
   i2 = 57268 + (i1 << 1 << 2) | 0;
   i3 = i2 + 8 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   i5 = i4 + 8 | 0;
   i6 = HEAP32[i5 >> 2] | 0;
   if ((i6 | 0) == (i2 | 0)) HEAP32[14307] = i12 & ~(1 << i1); else {
    HEAP32[i6 + 12 >> 2] = i2;
    HEAP32[i3 >> 2] = i6;
   }
   i21 = i1 << 3;
   HEAP32[i4 + 4 >> 2] = i21 | 3;
   i21 = i4 + i21 + 4 | 0;
   HEAP32[i21 >> 2] = HEAP32[i21 >> 2] | 1;
   i21 = i5;
   STACKTOP = i22;
   return i21 | 0;
  }
  i11 = HEAP32[14309] | 0;
  if (i10 >>> 0 > i11 >>> 0) {
   if (i3 | 0) {
    i1 = 2 << i2;
    i1 = i3 << i2 & (i1 | 0 - i1);
    i1 = (i1 & 0 - i1) + -1 | 0;
    i8 = i1 >>> 12 & 16;
    i1 = i1 >>> i8;
    i3 = i1 >>> 5 & 8;
    i1 = i1 >>> i3;
    i6 = i1 >>> 2 & 4;
    i1 = i1 >>> i6;
    i2 = i1 >>> 1 & 2;
    i1 = i1 >>> i2;
    i4 = i1 >>> 1 & 1;
    i4 = (i3 | i8 | i6 | i2 | i4) + (i1 >>> i4) | 0;
    i1 = 57268 + (i4 << 1 << 2) | 0;
    i2 = i1 + 8 | 0;
    i6 = HEAP32[i2 >> 2] | 0;
    i8 = i6 + 8 | 0;
    i3 = HEAP32[i8 >> 2] | 0;
    if ((i3 | 0) == (i1 | 0)) {
     i2 = i12 & ~(1 << i4);
     HEAP32[14307] = i2;
    } else {
     HEAP32[i3 + 12 >> 2] = i1;
     HEAP32[i2 >> 2] = i3;
     i2 = i12;
    }
    i21 = i4 << 3;
    i7 = i21 - i10 | 0;
    HEAP32[i6 + 4 >> 2] = i10 | 3;
    i5 = i6 + i10 | 0;
    HEAP32[i5 + 4 >> 2] = i7 | 1;
    HEAP32[i6 + i21 >> 2] = i7;
    if (i11 | 0) {
     i4 = HEAP32[14312] | 0;
     i1 = i11 >>> 3;
     i3 = 57268 + (i1 << 1 << 2) | 0;
     i1 = 1 << i1;
     if (!(i2 & i1)) {
      HEAP32[14307] = i2 | i1;
      i1 = i3;
      i2 = i3 + 8 | 0;
     } else {
      i2 = i3 + 8 | 0;
      i1 = HEAP32[i2 >> 2] | 0;
     }
     HEAP32[i2 >> 2] = i4;
     HEAP32[i1 + 12 >> 2] = i4;
     HEAP32[i4 + 8 >> 2] = i1;
     HEAP32[i4 + 12 >> 2] = i3;
    }
    HEAP32[14309] = i7;
    HEAP32[14312] = i5;
    i21 = i8;
    STACKTOP = i22;
    return i21 | 0;
   }
   i6 = HEAP32[14308] | 0;
   if (i6) {
    i3 = (i6 & 0 - i6) + -1 | 0;
    i5 = i3 >>> 12 & 16;
    i3 = i3 >>> i5;
    i4 = i3 >>> 5 & 8;
    i3 = i3 >>> i4;
    i7 = i3 >>> 2 & 4;
    i3 = i3 >>> i7;
    i8 = i3 >>> 1 & 2;
    i3 = i3 >>> i8;
    i9 = i3 >>> 1 & 1;
    i9 = HEAP32[57532 + ((i4 | i5 | i7 | i8 | i9) + (i3 >>> i9) << 2) >> 2] | 0;
    i3 = i9;
    i8 = i9;
    i9 = (HEAP32[i9 + 4 >> 2] & -8) - i10 | 0;
    while (1) {
     i2 = HEAP32[i3 + 16 >> 2] | 0;
     if (!i2) {
      i2 = HEAP32[i3 + 20 >> 2] | 0;
      if (!i2) break;
     }
     i7 = (HEAP32[i2 + 4 >> 2] & -8) - i10 | 0;
     i5 = i7 >>> 0 < i9 >>> 0;
     i3 = i2;
     i8 = i5 ? i2 : i8;
     i9 = i5 ? i7 : i9;
    }
    i7 = i8 + i10 | 0;
    if (i7 >>> 0 > i8 >>> 0) {
     i5 = HEAP32[i8 + 24 >> 2] | 0;
     i1 = HEAP32[i8 + 12 >> 2] | 0;
     do if ((i1 | 0) == (i8 | 0)) {
      i2 = i8 + 20 | 0;
      i1 = HEAP32[i2 >> 2] | 0;
      if (!i1) {
       i2 = i8 + 16 | 0;
       i1 = HEAP32[i2 >> 2] | 0;
       if (!i1) {
        i3 = 0;
        break;
       }
      }
      while (1) {
       i4 = i1 + 20 | 0;
       i3 = HEAP32[i4 >> 2] | 0;
       if (!i3) {
        i4 = i1 + 16 | 0;
        i3 = HEAP32[i4 >> 2] | 0;
        if (!i3) break; else {
         i1 = i3;
         i2 = i4;
        }
       } else {
        i1 = i3;
        i2 = i4;
       }
      }
      HEAP32[i2 >> 2] = 0;
      i3 = i1;
     } else {
      i3 = HEAP32[i8 + 8 >> 2] | 0;
      HEAP32[i3 + 12 >> 2] = i1;
      HEAP32[i1 + 8 >> 2] = i3;
      i3 = i1;
     } while (0);
     do if (i5 | 0) {
      i1 = HEAP32[i8 + 28 >> 2] | 0;
      i2 = 57532 + (i1 << 2) | 0;
      if ((i8 | 0) == (HEAP32[i2 >> 2] | 0)) {
       HEAP32[i2 >> 2] = i3;
       if (!i3) {
        HEAP32[14308] = i6 & ~(1 << i1);
        break;
       }
      } else {
       i21 = i5 + 16 | 0;
       HEAP32[((HEAP32[i21 >> 2] | 0) == (i8 | 0) ? i21 : i5 + 20 | 0) >> 2] = i3;
       if (!i3) break;
      }
      HEAP32[i3 + 24 >> 2] = i5;
      i1 = HEAP32[i8 + 16 >> 2] | 0;
      if (i1 | 0) {
       HEAP32[i3 + 16 >> 2] = i1;
       HEAP32[i1 + 24 >> 2] = i3;
      }
      i1 = HEAP32[i8 + 20 >> 2] | 0;
      if (i1 | 0) {
       HEAP32[i3 + 20 >> 2] = i1;
       HEAP32[i1 + 24 >> 2] = i3;
      }
     } while (0);
     if (i9 >>> 0 < 16) {
      i21 = i9 + i10 | 0;
      HEAP32[i8 + 4 >> 2] = i21 | 3;
      i21 = i8 + i21 + 4 | 0;
      HEAP32[i21 >> 2] = HEAP32[i21 >> 2] | 1;
     } else {
      HEAP32[i8 + 4 >> 2] = i10 | 3;
      HEAP32[i7 + 4 >> 2] = i9 | 1;
      HEAP32[i7 + i9 >> 2] = i9;
      if (i11 | 0) {
       i4 = HEAP32[14312] | 0;
       i1 = i11 >>> 3;
       i3 = 57268 + (i1 << 1 << 2) | 0;
       i1 = 1 << i1;
       if (!(i1 & i12)) {
        HEAP32[14307] = i1 | i12;
        i1 = i3;
        i2 = i3 + 8 | 0;
       } else {
        i2 = i3 + 8 | 0;
        i1 = HEAP32[i2 >> 2] | 0;
       }
       HEAP32[i2 >> 2] = i4;
       HEAP32[i1 + 12 >> 2] = i4;
       HEAP32[i4 + 8 >> 2] = i1;
       HEAP32[i4 + 12 >> 2] = i3;
      }
      HEAP32[14309] = i9;
      HEAP32[14312] = i7;
     }
     i21 = i8 + 8 | 0;
     STACKTOP = i22;
     return i21 | 0;
    } else i12 = i10;
   } else i12 = i10;
  } else i12 = i10;
 } else if (i2 >>> 0 <= 4294967231) {
  i2 = i2 + 11 | 0;
  i10 = i2 & -8;
  i4 = HEAP32[14308] | 0;
  if (i4) {
   i5 = 0 - i10 | 0;
   i2 = i2 >>> 8;
   if (i2) if (i10 >>> 0 > 16777215) i9 = 31; else {
    i12 = (i2 + 1048320 | 0) >>> 16 & 8;
    i16 = i2 << i12;
    i8 = (i16 + 520192 | 0) >>> 16 & 4;
    i16 = i16 << i8;
    i9 = (i16 + 245760 | 0) >>> 16 & 2;
    i9 = 14 - (i8 | i12 | i9) + (i16 << i9 >>> 15) | 0;
    i9 = i10 >>> (i9 + 7 | 0) & 1 | i9 << 1;
   } else i9 = 0;
   i3 = HEAP32[57532 + (i9 << 2) >> 2] | 0;
   L79 : do if (!i3) {
    i3 = 0;
    i2 = 0;
    i16 = 61;
   } else {
    i2 = 0;
    i8 = i10 << ((i9 | 0) == 31 ? 0 : 25 - (i9 >>> 1) | 0);
    i6 = 0;
    while (1) {
     i7 = (HEAP32[i3 + 4 >> 2] & -8) - i10 | 0;
     if (i7 >>> 0 < i5 >>> 0) if (!i7) {
      i2 = i3;
      i5 = 0;
      i16 = 65;
      break L79;
     } else {
      i2 = i3;
      i5 = i7;
     }
     i16 = HEAP32[i3 + 20 >> 2] | 0;
     i3 = HEAP32[i3 + 16 + (i8 >>> 31 << 2) >> 2] | 0;
     i6 = (i16 | 0) == 0 | (i16 | 0) == (i3 | 0) ? i6 : i16;
     if (!i3) {
      i3 = i6;
      i16 = 61;
      break;
     } else i8 = i8 << 1;
    }
   } while (0);
   if ((i16 | 0) == 61) {
    if ((i3 | 0) == 0 & (i2 | 0) == 0) {
     i2 = 2 << i9;
     i2 = (i2 | 0 - i2) & i4;
     if (!i2) {
      i12 = i10;
      break;
     }
     i12 = (i2 & 0 - i2) + -1 | 0;
     i7 = i12 >>> 12 & 16;
     i12 = i12 >>> i7;
     i6 = i12 >>> 5 & 8;
     i12 = i12 >>> i6;
     i8 = i12 >>> 2 & 4;
     i12 = i12 >>> i8;
     i9 = i12 >>> 1 & 2;
     i12 = i12 >>> i9;
     i3 = i12 >>> 1 & 1;
     i2 = 0;
     i3 = HEAP32[57532 + ((i6 | i7 | i8 | i9 | i3) + (i12 >>> i3) << 2) >> 2] | 0;
    }
    if (!i3) {
     i8 = i2;
     i7 = i5;
    } else i16 = 65;
   }
   if ((i16 | 0) == 65) {
    i6 = i3;
    while (1) {
     i12 = (HEAP32[i6 + 4 >> 2] & -8) - i10 | 0;
     i3 = i12 >>> 0 < i5 >>> 0;
     i5 = i3 ? i12 : i5;
     i2 = i3 ? i6 : i2;
     i3 = HEAP32[i6 + 16 >> 2] | 0;
     if (!i3) i3 = HEAP32[i6 + 20 >> 2] | 0;
     if (!i3) {
      i8 = i2;
      i7 = i5;
      break;
     } else i6 = i3;
    }
   }
   if (((i8 | 0) != 0 ? i7 >>> 0 < ((HEAP32[14309] | 0) - i10 | 0) >>> 0 : 0) ? (i11 = i8 + i10 | 0, i11 >>> 0 > i8 >>> 0) : 0) {
    i6 = HEAP32[i8 + 24 >> 2] | 0;
    i1 = HEAP32[i8 + 12 >> 2] | 0;
    do if ((i1 | 0) == (i8 | 0)) {
     i2 = i8 + 20 | 0;
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i2 = i8 + 16 | 0;
      i1 = HEAP32[i2 >> 2] | 0;
      if (!i1) {
       i1 = 0;
       break;
      }
     }
     while (1) {
      i5 = i1 + 20 | 0;
      i3 = HEAP32[i5 >> 2] | 0;
      if (!i3) {
       i5 = i1 + 16 | 0;
       i3 = HEAP32[i5 >> 2] | 0;
       if (!i3) break; else {
        i1 = i3;
        i2 = i5;
       }
      } else {
       i1 = i3;
       i2 = i5;
      }
     }
     HEAP32[i2 >> 2] = 0;
    } else {
     i21 = HEAP32[i8 + 8 >> 2] | 0;
     HEAP32[i21 + 12 >> 2] = i1;
     HEAP32[i1 + 8 >> 2] = i21;
    } while (0);
    do if (i6) {
     i2 = HEAP32[i8 + 28 >> 2] | 0;
     i3 = 57532 + (i2 << 2) | 0;
     if ((i8 | 0) == (HEAP32[i3 >> 2] | 0)) {
      HEAP32[i3 >> 2] = i1;
      if (!i1) {
       i4 = i4 & ~(1 << i2);
       HEAP32[14308] = i4;
       break;
      }
     } else {
      i21 = i6 + 16 | 0;
      HEAP32[((HEAP32[i21 >> 2] | 0) == (i8 | 0) ? i21 : i6 + 20 | 0) >> 2] = i1;
      if (!i1) break;
     }
     HEAP32[i1 + 24 >> 2] = i6;
     i2 = HEAP32[i8 + 16 >> 2] | 0;
     if (i2 | 0) {
      HEAP32[i1 + 16 >> 2] = i2;
      HEAP32[i2 + 24 >> 2] = i1;
     }
     i2 = HEAP32[i8 + 20 >> 2] | 0;
     if (i2) {
      HEAP32[i1 + 20 >> 2] = i2;
      HEAP32[i2 + 24 >> 2] = i1;
     }
    } while (0);
    L128 : do if (i7 >>> 0 < 16) {
     i21 = i7 + i10 | 0;
     HEAP32[i8 + 4 >> 2] = i21 | 3;
     i21 = i8 + i21 + 4 | 0;
     HEAP32[i21 >> 2] = HEAP32[i21 >> 2] | 1;
    } else {
     HEAP32[i8 + 4 >> 2] = i10 | 3;
     HEAP32[i11 + 4 >> 2] = i7 | 1;
     HEAP32[i11 + i7 >> 2] = i7;
     i1 = i7 >>> 3;
     if (i7 >>> 0 < 256) {
      i3 = 57268 + (i1 << 1 << 2) | 0;
      i2 = HEAP32[14307] | 0;
      i1 = 1 << i1;
      if (!(i2 & i1)) {
       HEAP32[14307] = i2 | i1;
       i1 = i3;
       i2 = i3 + 8 | 0;
      } else {
       i2 = i3 + 8 | 0;
       i1 = HEAP32[i2 >> 2] | 0;
      }
      HEAP32[i2 >> 2] = i11;
      HEAP32[i1 + 12 >> 2] = i11;
      HEAP32[i11 + 8 >> 2] = i1;
      HEAP32[i11 + 12 >> 2] = i3;
      break;
     }
     i1 = i7 >>> 8;
     if (i1) if (i7 >>> 0 > 16777215) i3 = 31; else {
      i20 = (i1 + 1048320 | 0) >>> 16 & 8;
      i21 = i1 << i20;
      i19 = (i21 + 520192 | 0) >>> 16 & 4;
      i21 = i21 << i19;
      i3 = (i21 + 245760 | 0) >>> 16 & 2;
      i3 = 14 - (i19 | i20 | i3) + (i21 << i3 >>> 15) | 0;
      i3 = i7 >>> (i3 + 7 | 0) & 1 | i3 << 1;
     } else i3 = 0;
     i1 = 57532 + (i3 << 2) | 0;
     HEAP32[i11 + 28 >> 2] = i3;
     i2 = i11 + 16 | 0;
     HEAP32[i2 + 4 >> 2] = 0;
     HEAP32[i2 >> 2] = 0;
     i2 = 1 << i3;
     if (!(i4 & i2)) {
      HEAP32[14308] = i4 | i2;
      HEAP32[i1 >> 2] = i11;
      HEAP32[i11 + 24 >> 2] = i1;
      HEAP32[i11 + 12 >> 2] = i11;
      HEAP32[i11 + 8 >> 2] = i11;
      break;
     }
     i1 = HEAP32[i1 >> 2] | 0;
     L145 : do if ((HEAP32[i1 + 4 >> 2] & -8 | 0) != (i7 | 0)) {
      i4 = i7 << ((i3 | 0) == 31 ? 0 : 25 - (i3 >>> 1) | 0);
      while (1) {
       i3 = i1 + 16 + (i4 >>> 31 << 2) | 0;
       i2 = HEAP32[i3 >> 2] | 0;
       if (!i2) break;
       if ((HEAP32[i2 + 4 >> 2] & -8 | 0) == (i7 | 0)) {
        i1 = i2;
        break L145;
       } else {
        i4 = i4 << 1;
        i1 = i2;
       }
      }
      HEAP32[i3 >> 2] = i11;
      HEAP32[i11 + 24 >> 2] = i1;
      HEAP32[i11 + 12 >> 2] = i11;
      HEAP32[i11 + 8 >> 2] = i11;
      break L128;
     } while (0);
     i20 = i1 + 8 | 0;
     i21 = HEAP32[i20 >> 2] | 0;
     HEAP32[i21 + 12 >> 2] = i11;
     HEAP32[i20 >> 2] = i11;
     HEAP32[i11 + 8 >> 2] = i21;
     HEAP32[i11 + 12 >> 2] = i1;
     HEAP32[i11 + 24 >> 2] = 0;
    } while (0);
    i21 = i8 + 8 | 0;
    STACKTOP = i22;
    return i21 | 0;
   } else i12 = i10;
  } else i12 = i10;
 } else i12 = -1; while (0);
 i3 = HEAP32[14309] | 0;
 if (i3 >>> 0 >= i12 >>> 0) {
  i1 = i3 - i12 | 0;
  i2 = HEAP32[14312] | 0;
  if (i1 >>> 0 > 15) {
   i21 = i2 + i12 | 0;
   HEAP32[14312] = i21;
   HEAP32[14309] = i1;
   HEAP32[i21 + 4 >> 2] = i1 | 1;
   HEAP32[i2 + i3 >> 2] = i1;
   HEAP32[i2 + 4 >> 2] = i12 | 3;
  } else {
   HEAP32[14309] = 0;
   HEAP32[14312] = 0;
   HEAP32[i2 + 4 >> 2] = i3 | 3;
   i21 = i2 + i3 + 4 | 0;
   HEAP32[i21 >> 2] = HEAP32[i21 >> 2] | 1;
  }
  i21 = i2 + 8 | 0;
  STACKTOP = i22;
  return i21 | 0;
 }
 i7 = HEAP32[14310] | 0;
 if (i7 >>> 0 > i12 >>> 0) {
  i19 = i7 - i12 | 0;
  HEAP32[14310] = i19;
  i21 = HEAP32[14313] | 0;
  i20 = i21 + i12 | 0;
  HEAP32[14313] = i20;
  HEAP32[i20 + 4 >> 2] = i19 | 1;
  HEAP32[i21 + 4 >> 2] = i12 | 3;
  i21 = i21 + 8 | 0;
  STACKTOP = i22;
  return i21 | 0;
 }
 if (!(HEAP32[14425] | 0)) {
  HEAP32[14427] = 4096;
  HEAP32[14426] = 4096;
  HEAP32[14428] = -1;
  HEAP32[14429] = -1;
  HEAP32[14430] = 0;
  HEAP32[14418] = 0;
  HEAP32[14425] = i13 & -16 ^ 1431655768;
  i2 = 4096;
 } else i2 = HEAP32[14427] | 0;
 i8 = i12 + 48 | 0;
 i9 = i12 + 47 | 0;
 i6 = i2 + i9 | 0;
 i5 = 0 - i2 | 0;
 i10 = i6 & i5;
 if (i10 >>> 0 <= i12 >>> 0) {
  i21 = 0;
  STACKTOP = i22;
  return i21 | 0;
 }
 i2 = HEAP32[14417] | 0;
 if (i2 | 0 ? (i11 = HEAP32[14415] | 0, i13 = i11 + i10 | 0, i13 >>> 0 <= i11 >>> 0 | i13 >>> 0 > i2 >>> 0) : 0) {
  i21 = 0;
  STACKTOP = i22;
  return i21 | 0;
 }
 L178 : do if (!(HEAP32[14418] & 4)) {
  i3 = HEAP32[14313] | 0;
  L180 : do if (i3) {
   i4 = 57676;
   while (1) {
    i13 = HEAP32[i4 >> 2] | 0;
    if (i13 >>> 0 <= i3 >>> 0 ? (i13 + (HEAP32[i4 + 4 >> 2] | 0) | 0) >>> 0 > i3 >>> 0 : 0) break;
    i2 = HEAP32[i4 + 8 >> 2] | 0;
    if (!i2) {
     i16 = 128;
     break L180;
    } else i4 = i2;
   }
   i1 = i6 - i7 & i5;
   if (i1 >>> 0 < 2147483647) {
    i2 = _sbrk(i1 | 0) | 0;
    if ((i2 | 0) == ((HEAP32[i4 >> 2] | 0) + (HEAP32[i4 + 4 >> 2] | 0) | 0)) {
     if ((i2 | 0) != (-1 | 0)) {
      i7 = i1;
      i6 = i2;
      i16 = 145;
      break L178;
     }
    } else {
     i4 = i2;
     i16 = 136;
    }
   } else i1 = 0;
  } else i16 = 128; while (0);
  do if ((i16 | 0) == 128) {
   i3 = _sbrk(0) | 0;
   if ((i3 | 0) != (-1 | 0) ? (i1 = i3, i14 = HEAP32[14426] | 0, i15 = i14 + -1 | 0, i1 = ((i15 & i1 | 0) == 0 ? 0 : (i15 + i1 & 0 - i14) - i1 | 0) + i10 | 0, i14 = HEAP32[14415] | 0, i15 = i1 + i14 | 0, i1 >>> 0 > i12 >>> 0 & i1 >>> 0 < 2147483647) : 0) {
    i13 = HEAP32[14417] | 0;
    if (i13 | 0 ? i15 >>> 0 <= i14 >>> 0 | i15 >>> 0 > i13 >>> 0 : 0) {
     i1 = 0;
     break;
    }
    i2 = _sbrk(i1 | 0) | 0;
    if ((i2 | 0) == (i3 | 0)) {
     i7 = i1;
     i6 = i3;
     i16 = 145;
     break L178;
    } else {
     i4 = i2;
     i16 = 136;
    }
   } else i1 = 0;
  } while (0);
  do if ((i16 | 0) == 136) {
   i3 = 0 - i1 | 0;
   if (!(i8 >>> 0 > i1 >>> 0 & (i1 >>> 0 < 2147483647 & (i4 | 0) != (-1 | 0)))) if ((i4 | 0) == (-1 | 0)) {
    i1 = 0;
    break;
   } else {
    i7 = i1;
    i6 = i4;
    i16 = 145;
    break L178;
   }
   i2 = HEAP32[14427] | 0;
   i2 = i9 - i1 + i2 & 0 - i2;
   if (i2 >>> 0 >= 2147483647) {
    i7 = i1;
    i6 = i4;
    i16 = 145;
    break L178;
   }
   if ((_sbrk(i2 | 0) | 0) == (-1 | 0)) {
    _sbrk(i3 | 0) | 0;
    i1 = 0;
    break;
   } else {
    i7 = i2 + i1 | 0;
    i6 = i4;
    i16 = 145;
    break L178;
   }
  } while (0);
  HEAP32[14418] = HEAP32[14418] | 4;
  i16 = 143;
 } else {
  i1 = 0;
  i16 = 143;
 } while (0);
 if (((i16 | 0) == 143 ? i10 >>> 0 < 2147483647 : 0) ? (i19 = _sbrk(i10 | 0) | 0, i15 = _sbrk(0) | 0, i17 = i15 - i19 | 0, i18 = i17 >>> 0 > (i12 + 40 | 0) >>> 0, !((i19 | 0) == (-1 | 0) | i18 ^ 1 | i19 >>> 0 < i15 >>> 0 & ((i19 | 0) != (-1 | 0) & (i15 | 0) != (-1 | 0)) ^ 1)) : 0) {
  i7 = i18 ? i17 : i1;
  i6 = i19;
  i16 = 145;
 }
 if ((i16 | 0) == 145) {
  i1 = (HEAP32[14415] | 0) + i7 | 0;
  HEAP32[14415] = i1;
  if (i1 >>> 0 > (HEAP32[14416] | 0) >>> 0) HEAP32[14416] = i1;
  i9 = HEAP32[14313] | 0;
  L215 : do if (i9) {
   i1 = 57676;
   while (1) {
    i2 = HEAP32[i1 >> 2] | 0;
    i3 = HEAP32[i1 + 4 >> 2] | 0;
    if ((i6 | 0) == (i2 + i3 | 0)) {
     i16 = 154;
     break;
    }
    i4 = HEAP32[i1 + 8 >> 2] | 0;
    if (!i4) break; else i1 = i4;
   }
   if (((i16 | 0) == 154 ? (i20 = i1 + 4 | 0, (HEAP32[i1 + 12 >> 2] & 8 | 0) == 0) : 0) ? i6 >>> 0 > i9 >>> 0 & i2 >>> 0 <= i9 >>> 0 : 0) {
    HEAP32[i20 >> 2] = i3 + i7;
    i21 = (HEAP32[14310] | 0) + i7 | 0;
    i19 = i9 + 8 | 0;
    i19 = (i19 & 7 | 0) == 0 ? 0 : 0 - i19 & 7;
    i20 = i9 + i19 | 0;
    i19 = i21 - i19 | 0;
    HEAP32[14313] = i20;
    HEAP32[14310] = i19;
    HEAP32[i20 + 4 >> 2] = i19 | 1;
    HEAP32[i9 + i21 + 4 >> 2] = 40;
    HEAP32[14314] = HEAP32[14429];
    break;
   }
   if (i6 >>> 0 < (HEAP32[14311] | 0) >>> 0) HEAP32[14311] = i6;
   i3 = i6 + i7 | 0;
   i1 = 57676;
   while (1) {
    if ((HEAP32[i1 >> 2] | 0) == (i3 | 0)) {
     i16 = 162;
     break;
    }
    i2 = HEAP32[i1 + 8 >> 2] | 0;
    if (!i2) break; else i1 = i2;
   }
   if ((i16 | 0) == 162 ? (HEAP32[i1 + 12 >> 2] & 8 | 0) == 0 : 0) {
    HEAP32[i1 >> 2] = i6;
    i11 = i1 + 4 | 0;
    HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + i7;
    i11 = i6 + 8 | 0;
    i11 = i6 + ((i11 & 7 | 0) == 0 ? 0 : 0 - i11 & 7) | 0;
    i1 = i3 + 8 | 0;
    i1 = i3 + ((i1 & 7 | 0) == 0 ? 0 : 0 - i1 & 7) | 0;
    i10 = i11 + i12 | 0;
    i8 = i1 - i11 - i12 | 0;
    HEAP32[i11 + 4 >> 2] = i12 | 3;
    L238 : do if ((i9 | 0) == (i1 | 0)) {
     i21 = (HEAP32[14310] | 0) + i8 | 0;
     HEAP32[14310] = i21;
     HEAP32[14313] = i10;
     HEAP32[i10 + 4 >> 2] = i21 | 1;
    } else {
     if ((HEAP32[14312] | 0) == (i1 | 0)) {
      i21 = (HEAP32[14309] | 0) + i8 | 0;
      HEAP32[14309] = i21;
      HEAP32[14312] = i10;
      HEAP32[i10 + 4 >> 2] = i21 | 1;
      HEAP32[i10 + i21 >> 2] = i21;
      break;
     }
     i2 = HEAP32[i1 + 4 >> 2] | 0;
     if ((i2 & 3 | 0) == 1) {
      i7 = i2 & -8;
      i4 = i2 >>> 3;
      L246 : do if (i2 >>> 0 < 256) {
       i2 = HEAP32[i1 + 8 >> 2] | 0;
       i3 = HEAP32[i1 + 12 >> 2] | 0;
       if ((i3 | 0) == (i2 | 0)) {
        HEAP32[14307] = HEAP32[14307] & ~(1 << i4);
        break;
       } else {
        HEAP32[i2 + 12 >> 2] = i3;
        HEAP32[i3 + 8 >> 2] = i2;
        break;
       }
      } else {
       i6 = HEAP32[i1 + 24 >> 2] | 0;
       i2 = HEAP32[i1 + 12 >> 2] | 0;
       do if ((i2 | 0) == (i1 | 0)) {
        i3 = i1 + 16 | 0;
        i4 = i3 + 4 | 0;
        i2 = HEAP32[i4 >> 2] | 0;
        if (!i2) {
         i2 = HEAP32[i3 >> 2] | 0;
         if (!i2) {
          i2 = 0;
          break;
         }
        } else i3 = i4;
        while (1) {
         i5 = i2 + 20 | 0;
         i4 = HEAP32[i5 >> 2] | 0;
         if (!i4) {
          i5 = i2 + 16 | 0;
          i4 = HEAP32[i5 >> 2] | 0;
          if (!i4) break; else {
           i2 = i4;
           i3 = i5;
          }
         } else {
          i2 = i4;
          i3 = i5;
         }
        }
        HEAP32[i3 >> 2] = 0;
       } else {
        i21 = HEAP32[i1 + 8 >> 2] | 0;
        HEAP32[i21 + 12 >> 2] = i2;
        HEAP32[i2 + 8 >> 2] = i21;
       } while (0);
       if (!i6) break;
       i3 = HEAP32[i1 + 28 >> 2] | 0;
       i4 = 57532 + (i3 << 2) | 0;
       do if ((HEAP32[i4 >> 2] | 0) != (i1 | 0)) {
        i21 = i6 + 16 | 0;
        HEAP32[((HEAP32[i21 >> 2] | 0) == (i1 | 0) ? i21 : i6 + 20 | 0) >> 2] = i2;
        if (!i2) break L246;
       } else {
        HEAP32[i4 >> 2] = i2;
        if (i2 | 0) break;
        HEAP32[14308] = HEAP32[14308] & ~(1 << i3);
        break L246;
       } while (0);
       HEAP32[i2 + 24 >> 2] = i6;
       i3 = i1 + 16 | 0;
       i4 = HEAP32[i3 >> 2] | 0;
       if (i4 | 0) {
        HEAP32[i2 + 16 >> 2] = i4;
        HEAP32[i4 + 24 >> 2] = i2;
       }
       i3 = HEAP32[i3 + 4 >> 2] | 0;
       if (!i3) break;
       HEAP32[i2 + 20 >> 2] = i3;
       HEAP32[i3 + 24 >> 2] = i2;
      } while (0);
      i1 = i1 + i7 | 0;
      i5 = i7 + i8 | 0;
     } else i5 = i8;
     i1 = i1 + 4 | 0;
     HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -2;
     HEAP32[i10 + 4 >> 2] = i5 | 1;
     HEAP32[i10 + i5 >> 2] = i5;
     i1 = i5 >>> 3;
     if (i5 >>> 0 < 256) {
      i3 = 57268 + (i1 << 1 << 2) | 0;
      i2 = HEAP32[14307] | 0;
      i1 = 1 << i1;
      if (!(i2 & i1)) {
       HEAP32[14307] = i2 | i1;
       i1 = i3;
       i2 = i3 + 8 | 0;
      } else {
       i2 = i3 + 8 | 0;
       i1 = HEAP32[i2 >> 2] | 0;
      }
      HEAP32[i2 >> 2] = i10;
      HEAP32[i1 + 12 >> 2] = i10;
      HEAP32[i10 + 8 >> 2] = i1;
      HEAP32[i10 + 12 >> 2] = i3;
      break;
     }
     i1 = i5 >>> 8;
     do if (!i1) i4 = 0; else {
      if (i5 >>> 0 > 16777215) {
       i4 = 31;
       break;
      }
      i20 = (i1 + 1048320 | 0) >>> 16 & 8;
      i21 = i1 << i20;
      i19 = (i21 + 520192 | 0) >>> 16 & 4;
      i21 = i21 << i19;
      i4 = (i21 + 245760 | 0) >>> 16 & 2;
      i4 = 14 - (i19 | i20 | i4) + (i21 << i4 >>> 15) | 0;
      i4 = i5 >>> (i4 + 7 | 0) & 1 | i4 << 1;
     } while (0);
     i1 = 57532 + (i4 << 2) | 0;
     HEAP32[i10 + 28 >> 2] = i4;
     i2 = i10 + 16 | 0;
     HEAP32[i2 + 4 >> 2] = 0;
     HEAP32[i2 >> 2] = 0;
     i2 = HEAP32[14308] | 0;
     i3 = 1 << i4;
     if (!(i2 & i3)) {
      HEAP32[14308] = i2 | i3;
      HEAP32[i1 >> 2] = i10;
      HEAP32[i10 + 24 >> 2] = i1;
      HEAP32[i10 + 12 >> 2] = i10;
      HEAP32[i10 + 8 >> 2] = i10;
      break;
     }
     i1 = HEAP32[i1 >> 2] | 0;
     L291 : do if ((HEAP32[i1 + 4 >> 2] & -8 | 0) != (i5 | 0)) {
      i4 = i5 << ((i4 | 0) == 31 ? 0 : 25 - (i4 >>> 1) | 0);
      while (1) {
       i3 = i1 + 16 + (i4 >>> 31 << 2) | 0;
       i2 = HEAP32[i3 >> 2] | 0;
       if (!i2) break;
       if ((HEAP32[i2 + 4 >> 2] & -8 | 0) == (i5 | 0)) {
        i1 = i2;
        break L291;
       } else {
        i4 = i4 << 1;
        i1 = i2;
       }
      }
      HEAP32[i3 >> 2] = i10;
      HEAP32[i10 + 24 >> 2] = i1;
      HEAP32[i10 + 12 >> 2] = i10;
      HEAP32[i10 + 8 >> 2] = i10;
      break L238;
     } while (0);
     i20 = i1 + 8 | 0;
     i21 = HEAP32[i20 >> 2] | 0;
     HEAP32[i21 + 12 >> 2] = i10;
     HEAP32[i20 >> 2] = i10;
     HEAP32[i10 + 8 >> 2] = i21;
     HEAP32[i10 + 12 >> 2] = i1;
     HEAP32[i10 + 24 >> 2] = 0;
    } while (0);
    i21 = i11 + 8 | 0;
    STACKTOP = i22;
    return i21 | 0;
   }
   i1 = 57676;
   while (1) {
    i2 = HEAP32[i1 >> 2] | 0;
    if (i2 >>> 0 <= i9 >>> 0 ? (i21 = i2 + (HEAP32[i1 + 4 >> 2] | 0) | 0, i21 >>> 0 > i9 >>> 0) : 0) break;
    i1 = HEAP32[i1 + 8 >> 2] | 0;
   }
   i5 = i21 + -47 | 0;
   i2 = i5 + 8 | 0;
   i2 = i5 + ((i2 & 7 | 0) == 0 ? 0 : 0 - i2 & 7) | 0;
   i5 = i9 + 16 | 0;
   i2 = i2 >>> 0 < i5 >>> 0 ? i9 : i2;
   i1 = i2 + 8 | 0;
   i3 = i7 + -40 | 0;
   i19 = i6 + 8 | 0;
   i19 = (i19 & 7 | 0) == 0 ? 0 : 0 - i19 & 7;
   i20 = i6 + i19 | 0;
   i19 = i3 - i19 | 0;
   HEAP32[14313] = i20;
   HEAP32[14310] = i19;
   HEAP32[i20 + 4 >> 2] = i19 | 1;
   HEAP32[i6 + i3 + 4 >> 2] = 40;
   HEAP32[14314] = HEAP32[14429];
   i3 = i2 + 4 | 0;
   HEAP32[i3 >> 2] = 27;
   HEAP32[i1 >> 2] = HEAP32[14419];
   HEAP32[i1 + 4 >> 2] = HEAP32[14420];
   HEAP32[i1 + 8 >> 2] = HEAP32[14421];
   HEAP32[i1 + 12 >> 2] = HEAP32[14422];
   HEAP32[14419] = i6;
   HEAP32[14420] = i7;
   HEAP32[14422] = 0;
   HEAP32[14421] = i1;
   i1 = i2 + 24 | 0;
   do {
    i20 = i1;
    i1 = i1 + 4 | 0;
    HEAP32[i1 >> 2] = 7;
   } while ((i20 + 8 | 0) >>> 0 < i21 >>> 0);
   if ((i2 | 0) != (i9 | 0)) {
    i6 = i2 - i9 | 0;
    HEAP32[i3 >> 2] = HEAP32[i3 >> 2] & -2;
    HEAP32[i9 + 4 >> 2] = i6 | 1;
    HEAP32[i2 >> 2] = i6;
    i1 = i6 >>> 3;
    if (i6 >>> 0 < 256) {
     i3 = 57268 + (i1 << 1 << 2) | 0;
     i2 = HEAP32[14307] | 0;
     i1 = 1 << i1;
     if (!(i2 & i1)) {
      HEAP32[14307] = i2 | i1;
      i1 = i3;
      i2 = i3 + 8 | 0;
     } else {
      i2 = i3 + 8 | 0;
      i1 = HEAP32[i2 >> 2] | 0;
     }
     HEAP32[i2 >> 2] = i9;
     HEAP32[i1 + 12 >> 2] = i9;
     HEAP32[i9 + 8 >> 2] = i1;
     HEAP32[i9 + 12 >> 2] = i3;
     break;
    }
    i1 = i6 >>> 8;
    if (i1) if (i6 >>> 0 > 16777215) i4 = 31; else {
     i20 = (i1 + 1048320 | 0) >>> 16 & 8;
     i21 = i1 << i20;
     i19 = (i21 + 520192 | 0) >>> 16 & 4;
     i21 = i21 << i19;
     i4 = (i21 + 245760 | 0) >>> 16 & 2;
     i4 = 14 - (i19 | i20 | i4) + (i21 << i4 >>> 15) | 0;
     i4 = i6 >>> (i4 + 7 | 0) & 1 | i4 << 1;
    } else i4 = 0;
    i3 = 57532 + (i4 << 2) | 0;
    HEAP32[i9 + 28 >> 2] = i4;
    HEAP32[i9 + 20 >> 2] = 0;
    HEAP32[i5 >> 2] = 0;
    i1 = HEAP32[14308] | 0;
    i2 = 1 << i4;
    if (!(i1 & i2)) {
     HEAP32[14308] = i1 | i2;
     HEAP32[i3 >> 2] = i9;
     HEAP32[i9 + 24 >> 2] = i3;
     HEAP32[i9 + 12 >> 2] = i9;
     HEAP32[i9 + 8 >> 2] = i9;
     break;
    }
    i1 = HEAP32[i3 >> 2] | 0;
    L325 : do if ((HEAP32[i1 + 4 >> 2] & -8 | 0) != (i6 | 0)) {
     i4 = i6 << ((i4 | 0) == 31 ? 0 : 25 - (i4 >>> 1) | 0);
     while (1) {
      i3 = i1 + 16 + (i4 >>> 31 << 2) | 0;
      i2 = HEAP32[i3 >> 2] | 0;
      if (!i2) break;
      if ((HEAP32[i2 + 4 >> 2] & -8 | 0) == (i6 | 0)) {
       i1 = i2;
       break L325;
      } else {
       i4 = i4 << 1;
       i1 = i2;
      }
     }
     HEAP32[i3 >> 2] = i9;
     HEAP32[i9 + 24 >> 2] = i1;
     HEAP32[i9 + 12 >> 2] = i9;
     HEAP32[i9 + 8 >> 2] = i9;
     break L215;
    } while (0);
    i20 = i1 + 8 | 0;
    i21 = HEAP32[i20 >> 2] | 0;
    HEAP32[i21 + 12 >> 2] = i9;
    HEAP32[i20 >> 2] = i9;
    HEAP32[i9 + 8 >> 2] = i21;
    HEAP32[i9 + 12 >> 2] = i1;
    HEAP32[i9 + 24 >> 2] = 0;
   }
  } else {
   i21 = HEAP32[14311] | 0;
   if ((i21 | 0) == 0 | i6 >>> 0 < i21 >>> 0) HEAP32[14311] = i6;
   HEAP32[14419] = i6;
   HEAP32[14420] = i7;
   HEAP32[14422] = 0;
   HEAP32[14316] = HEAP32[14425];
   HEAP32[14315] = -1;
   HEAP32[14320] = 57268;
   HEAP32[14319] = 57268;
   HEAP32[14322] = 57276;
   HEAP32[14321] = 57276;
   HEAP32[14324] = 57284;
   HEAP32[14323] = 57284;
   HEAP32[14326] = 57292;
   HEAP32[14325] = 57292;
   HEAP32[14328] = 57300;
   HEAP32[14327] = 57300;
   HEAP32[14330] = 57308;
   HEAP32[14329] = 57308;
   HEAP32[14332] = 57316;
   HEAP32[14331] = 57316;
   HEAP32[14334] = 57324;
   HEAP32[14333] = 57324;
   HEAP32[14336] = 57332;
   HEAP32[14335] = 57332;
   HEAP32[14338] = 57340;
   HEAP32[14337] = 57340;
   HEAP32[14340] = 57348;
   HEAP32[14339] = 57348;
   HEAP32[14342] = 57356;
   HEAP32[14341] = 57356;
   HEAP32[14344] = 57364;
   HEAP32[14343] = 57364;
   HEAP32[14346] = 57372;
   HEAP32[14345] = 57372;
   HEAP32[14348] = 57380;
   HEAP32[14347] = 57380;
   HEAP32[14350] = 57388;
   HEAP32[14349] = 57388;
   HEAP32[14352] = 57396;
   HEAP32[14351] = 57396;
   HEAP32[14354] = 57404;
   HEAP32[14353] = 57404;
   HEAP32[14356] = 57412;
   HEAP32[14355] = 57412;
   HEAP32[14358] = 57420;
   HEAP32[14357] = 57420;
   HEAP32[14360] = 57428;
   HEAP32[14359] = 57428;
   HEAP32[14362] = 57436;
   HEAP32[14361] = 57436;
   HEAP32[14364] = 57444;
   HEAP32[14363] = 57444;
   HEAP32[14366] = 57452;
   HEAP32[14365] = 57452;
   HEAP32[14368] = 57460;
   HEAP32[14367] = 57460;
   HEAP32[14370] = 57468;
   HEAP32[14369] = 57468;
   HEAP32[14372] = 57476;
   HEAP32[14371] = 57476;
   HEAP32[14374] = 57484;
   HEAP32[14373] = 57484;
   HEAP32[14376] = 57492;
   HEAP32[14375] = 57492;
   HEAP32[14378] = 57500;
   HEAP32[14377] = 57500;
   HEAP32[14380] = 57508;
   HEAP32[14379] = 57508;
   HEAP32[14382] = 57516;
   HEAP32[14381] = 57516;
   i21 = i7 + -40 | 0;
   i19 = i6 + 8 | 0;
   i19 = (i19 & 7 | 0) == 0 ? 0 : 0 - i19 & 7;
   i20 = i6 + i19 | 0;
   i19 = i21 - i19 | 0;
   HEAP32[14313] = i20;
   HEAP32[14310] = i19;
   HEAP32[i20 + 4 >> 2] = i19 | 1;
   HEAP32[i6 + i21 + 4 >> 2] = 40;
   HEAP32[14314] = HEAP32[14429];
  } while (0);
  i1 = HEAP32[14310] | 0;
  if (i1 >>> 0 > i12 >>> 0) {
   i19 = i1 - i12 | 0;
   HEAP32[14310] = i19;
   i21 = HEAP32[14313] | 0;
   i20 = i21 + i12 | 0;
   HEAP32[14313] = i20;
   HEAP32[i20 + 4 >> 2] = i19 | 1;
   HEAP32[i21 + 4 >> 2] = i12 | 3;
   i21 = i21 + 8 | 0;
   STACKTOP = i22;
   return i21 | 0;
  }
 }
 i21 = ___errno_location() | 0;
 HEAP32[i21 >> 2] = 12;
 i21 = 0;
 STACKTOP = i22;
 return i21 | 0;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(i36, i37, i2, i3, i5, i40, i31, i4, i32, i33, i1) {
 i36 = i36 | 0;
 i37 = i37 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i40 = i40 | 0;
 i31 = i31 | 0;
 i4 = i4 | 0;
 i32 = i32 | 0;
 i33 = i33 | 0;
 i1 = i1 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i34 = 0, i35 = 0, i38 = 0, i39 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0;
 i47 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 i25 = i47 + 488 | 0;
 i34 = i47;
 i46 = i47 + 480 | 0;
 i38 = i47 + 472 | 0;
 i26 = i47 + 468 | 0;
 i27 = i47 + 496 | 0;
 i28 = i47 + 493 | 0;
 i29 = i47 + 492 | 0;
 i41 = i47 + 456 | 0;
 i42 = i47 + 444 | 0;
 i43 = i47 + 432 | 0;
 i44 = i47 + 420 | 0;
 i45 = i47 + 408 | 0;
 i30 = i47 + 404 | 0;
 i39 = i47 + 400 | 0;
 HEAP32[i25 >> 2] = i1;
 HEAP32[i46 >> 2] = i34;
 HEAP32[i46 + 4 >> 2] = 143;
 HEAP32[i38 >> 2] = i34;
 HEAP32[i26 >> 2] = i34 + 400;
 HEAP32[i41 >> 2] = 0;
 HEAP32[i41 + 4 >> 2] = 0;
 HEAP32[i41 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i41 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i42 >> 2] = 0;
 HEAP32[i42 + 4 >> 2] = 0;
 HEAP32[i42 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i42 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i43 >> 2] = 0;
 HEAP32[i43 + 4 >> 2] = 0;
 HEAP32[i43 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i43 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i44 >> 2] = 0;
 HEAP32[i44 + 4 >> 2] = 0;
 HEAP32[i44 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i44 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i45 >> 2] = 0;
 HEAP32[i45 + 4 >> 2] = 0;
 HEAP32[i45 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i45 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri(i2, i3, i27, i28, i29, i41, i42, i43, i44, i30);
 HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
 i18 = i4 + 8 | 0;
 i19 = i43 + 11 | 0;
 i20 = i43 + 4 | 0;
 i21 = i44 + 11 | 0;
 i22 = i44 + 4 | 0;
 i23 = i41 + 11 | 0;
 i24 = i41 + 4 | 0;
 i12 = (i5 & 512 | 0) != 0;
 i13 = i42 + 11 | 0;
 i14 = i27 + 3 | 0;
 i15 = i42 + 4 | 0;
 i16 = i45 + 11 | 0;
 i17 = i45 + 4 | 0;
 i34 = 0;
 i11 = 0;
 L21 : while (1) {
  if (i11 >>> 0 >= 4) {
   i35 = 243;
   break;
  }
  i1 = HEAP32[i36 >> 2] | 0;
  do if (i1) {
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i36 >> 2] = 0;
    i3 = 1;
    break;
   } else {
    i3 = (HEAP32[i36 >> 2] | 0) == 0;
    break;
   }
  } else i3 = 1; while (0);
  i2 = HEAP32[i37 >> 2] | 0;
  do if (i2) {
   i1 = HEAP32[i2 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i3) {
    i10 = i2;
    break;
   } else {
    i35 = 243;
    break L21;
   } else {
    HEAP32[i37 >> 2] = 0;
    i35 = 31;
    break;
   }
  } else i35 = 31; while (0);
  if ((i35 | 0) == 31) {
   i35 = 0;
   if (i3) {
    i35 = 243;
    break;
   } else i10 = 0;
  }
  L46 : do switch (HEAP8[i27 + i11 >> 0] | 0) {
  case 1:
   {
    if ((i11 | 0) == 3) i1 = i34; else {
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
     if ((i1 & 255) << 24 >> 24 <= -1) {
      i35 = 45;
      break L21;
     }
     if (!(HEAP16[(HEAP32[i18 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 8192)) {
      i35 = 45;
      break L21;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
      HEAP32[i2 >> 2] = i3 + 1;
      i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i45, i1 & 255);
     i35 = 47;
    }
    break;
   }
  case 0:
   {
    if ((i11 | 0) == 3) i1 = i34; else i35 = 47;
    break;
   }
  case 3:
   {
    i1 = HEAP8[i19 >> 0] | 0;
    i1 = i1 << 24 >> 24 < 0 ? HEAP32[i20 >> 2] | 0 : i1 & 255;
    i4 = HEAP8[i21 >> 0] | 0;
    i4 = i4 << 24 >> 24 < 0 ? HEAP32[i22 >> 2] | 0 : i4 & 255;
    if ((i1 | 0) == (0 - i4 | 0)) i1 = i34; else {
     i5 = (i1 | 0) == 0;
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     i3 = (i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0);
     if (i5 | (i4 | 0) == 0) {
      if (i3) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
      i1 = i1 & 255;
      if (i5) {
       if ((HEAP8[((HEAP8[i21 >> 0] | 0) < 0 ? HEAP32[i44 >> 2] | 0 : i44) >> 0] | 0) != i1 << 24 >> 24) {
        i1 = i34;
        break L46;
       }
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = i1 + 12 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
        HEAP32[i2 >> 2] = i3 + 1;
        __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
       }
       HEAP8[i31 >> 0] = 1;
       i1 = HEAP8[i21 >> 0] | 0;
       i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i22 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i44 : i34;
       break L46;
      }
      if ((HEAP8[((HEAP8[i19 >> 0] | 0) < 0 ? HEAP32[i43 >> 2] | 0 : i43) >> 0] | 0) != i1 << 24 >> 24) {
       HEAP8[i31 >> 0] = 1;
       i1 = i34;
       break L46;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
       HEAP32[i2 >> 2] = i3 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
      }
      i1 = HEAP8[i19 >> 0] | 0;
      i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i20 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i43 : i34;
      break L46;
     }
     if (i3) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
     i2 = HEAP32[i36 >> 2] | 0;
     i3 = i2 + 12 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     i5 = (i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0);
     if ((HEAP8[((HEAP8[i19 >> 0] | 0) < 0 ? HEAP32[i43 >> 2] | 0 : i43) >> 0] | 0) == (i1 & 255) << 24 >> 24) {
      if (i5) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0; else {
       HEAP32[i3 >> 2] = i4 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i4 >> 0] | 0) | 0;
      }
      i1 = HEAP8[i19 >> 0] | 0;
      i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i20 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i43 : i34;
      break L46;
     }
     if (i5) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i4 >> 0] | 0) | 0;
     if ((HEAP8[((HEAP8[i21 >> 0] | 0) < 0 ? HEAP32[i44 >> 2] | 0 : i44) >> 0] | 0) != (i1 & 255) << 24 >> 24) {
      i35 = 105;
      break L21;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
      HEAP32[i2 >> 2] = i3 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
     }
     HEAP8[i31 >> 0] = 1;
     i1 = HEAP8[i21 >> 0] | 0;
     i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i22 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i44 : i34;
    }
    break;
   }
  case 2:
   {
    if (i11 >>> 0 < 2 | (i34 | 0) != 0) {
     i1 = HEAP8[i13 >> 0] | 0;
     i3 = i1 << 24 >> 24 < 0;
     i2 = HEAP32[i42 >> 2] | 0;
     i4 = i3 ? i2 : i42;
     i5 = i4;
     if (!i11) i3 = i5; else {
      i9 = i5;
      i35 = 110;
     }
    } else {
     if (!(i12 | (i11 | 0) == 2 & (HEAP8[i14 >> 0] | 0) != 0)) {
      i1 = 0;
      break L46;
     }
     i1 = HEAP8[i13 >> 0] | 0;
     i3 = i1 << 24 >> 24 < 0;
     i2 = HEAP32[i42 >> 2] | 0;
     i9 = i3 ? i2 : i42;
     i4 = i9;
     i35 = 110;
    }
    L109 : do if ((i35 | 0) == 110) {
     i35 = 0;
     if ((HEAPU8[i27 + (i11 + -1) >> 0] | 0) < 2) {
      i5 = i4 + (i3 ? HEAP32[i15 >> 2] | 0 : i1 & 255) | 0;
      i3 = i9;
      while (1) {
       i6 = i3;
       if ((i5 | 0) == (i6 | 0)) break;
       i7 = HEAP8[i6 >> 0] | 0;
       if (i7 << 24 >> 24 <= -1) break;
       if (!(HEAP16[(HEAP32[i18 >> 2] | 0) + (i7 << 24 >> 24 << 1) >> 1] & 8192)) break;
       i3 = i6 + 1 | 0;
      }
      i7 = i3 - i9 | 0;
      i6 = HEAP8[i16 >> 0] | 0;
      i8 = i6 << 24 >> 24 < 0;
      i5 = HEAP32[i17 >> 2] | 0;
      i6 = i6 & 255;
      if (i7 >>> 0 <= (i8 ? i5 : i6) >>> 0) {
       i48 = (HEAP32[i45 >> 2] | 0) + i5 | 0;
       i5 = i45 + i6 | 0;
       i6 = i8 ? i48 : i5;
       i5 = i8 ? i48 + (0 - i7) | 0 : i5 + (0 - i7) | 0;
       while (1) {
        if ((i5 | 0) == (i6 | 0)) break L109;
        if ((HEAP8[i5 >> 0] | 0) != (HEAP8[i4 >> 0] | 0)) {
         i3 = i9;
         break L109;
        }
        i4 = i4 + 1 | 0;
        i5 = i5 + 1 | 0;
       }
      } else i3 = i9;
     } else i3 = i9;
    } while (0);
    i5 = i3;
    i3 = i10;
    L124 : while (1) {
     i48 = i1 << 24 >> 24 < 0;
     if ((i5 | 0) == ((i48 ? i2 : i42) + (i48 ? HEAP32[i15 >> 2] | 0 : i1 & 255) | 0)) break;
     i1 = HEAP32[i36 >> 2] | 0;
     do if (i1) {
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[i36 >> 2] = 0;
       i2 = 1;
       break;
      } else {
       i2 = (HEAP32[i36 >> 2] | 0) == 0;
       break;
      }
     } else i2 = 1; while (0);
     do if (i3) {
      i1 = HEAP32[i3 + 12 >> 2] | 0;
      if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) {
       i4 = i3;
       break;
      } else break L124; else {
       HEAP32[i37 >> 2] = 0;
       i35 = 136;
       break;
      }
     } else i35 = 136; while (0);
     if ((i35 | 0) == 136) {
      i35 = 0;
      if (i2) break; else i4 = 0;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
     if ((HEAP8[i5 >> 0] | 0) != (i1 & 255) << 24 >> 24) break;
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
      HEAP32[i2 >> 2] = i3 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
     }
     i5 = i5 + 1 | 0;
     i1 = HEAP8[i13 >> 0] | 0;
     i2 = HEAP32[i42 >> 2] | 0;
     i3 = i4;
    }
    if (i12 ? (i48 = HEAP8[i13 >> 0] | 0, i10 = i48 << 24 >> 24 < 0, (i5 | 0) != ((i10 ? HEAP32[i42 >> 2] | 0 : i42) + (i10 ? HEAP32[i15 >> 2] | 0 : i48 & 255) | 0)) : 0) {
     i35 = 148;
     break L21;
    } else i1 = i34;
    break;
   }
  case 4:
   {
    i5 = 0;
    i4 = i10;
    i1 = i10;
    L161 : while (1) {
     i2 = HEAP32[i36 >> 2] | 0;
     do if (i2) {
      i3 = HEAP32[i2 + 12 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[i36 >> 2] = 0;
       i3 = 1;
       break;
      } else {
       i3 = (HEAP32[i36 >> 2] | 0) == 0;
       break;
      }
     } else i3 = 1; while (0);
     do if (i4) {
      i2 = HEAP32[i4 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i3) {
       i6 = i4;
       break;
      } else {
       i4 = i1;
       break L161;
      } else {
       HEAP32[i37 >> 2] = 0;
       i1 = 0;
       i35 = 162;
       break;
      }
     } else i35 = 162; while (0);
     if ((i35 | 0) == 162) {
      i35 = 0;
      if (i3) {
       i4 = i1;
       break;
      } else i6 = 0;
     }
     i2 = HEAP32[i36 >> 2] | 0;
     i3 = HEAP32[i2 + 12 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
     i3 = i2 & 255;
     if (i3 << 24 >> 24 > -1 ? (HEAP16[(HEAP32[i18 >> 2] | 0) + (i2 << 24 >> 24 << 1) >> 1] & 2048) != 0 : 0) {
      i2 = HEAP32[i33 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i25 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i32, i33, i25);
       i2 = HEAP32[i33 >> 2] | 0;
      }
      HEAP32[i33 >> 2] = i2 + 1;
      HEAP8[i2 >> 0] = i3;
      i2 = i5 + 1 | 0;
     } else {
      i48 = HEAP8[i23 >> 0] | 0;
      if (!((HEAP8[i29 >> 0] | 0) == i3 << 24 >> 24 & (i5 | 0 ? ((i48 << 24 >> 24 < 0 ? HEAP32[i24 >> 2] | 0 : i48 & 255) | 0) != 0 : 0))) {
       i4 = i1;
       break;
      }
      i2 = HEAP32[i38 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i26 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i46, i38, i26);
       i2 = HEAP32[i38 >> 2] | 0;
      }
      HEAP32[i38 >> 2] = i2 + 4;
      HEAP32[i2 >> 2] = i5;
      i2 = 0;
     }
     i3 = HEAP32[i36 >> 2] | 0;
     i4 = i3 + 12 | 0;
     i5 = HEAP32[i4 >> 2] | 0;
     if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0; else {
      HEAP32[i4 >> 2] = i5 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i5 >> 0] | 0) | 0;
     }
     i5 = i2;
     i4 = i6;
    }
    i1 = HEAP32[i38 >> 2] | 0;
    if (i5 | 0 ? (HEAP32[i46 >> 2] | 0) != (i1 | 0) : 0) {
     if ((i1 | 0) == (HEAP32[i26 >> 2] | 0)) {
      __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i46, i38, i26);
      i1 = HEAP32[i38 >> 2] | 0;
     }
     HEAP32[i38 >> 2] = i1 + 4;
     HEAP32[i1 >> 2] = i5;
    }
    L213 : do if ((HEAP32[i30 >> 2] | 0) > 0) {
     i1 = HEAP32[i36 >> 2] | 0;
     do if (i1) {
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[i36 >> 2] = 0;
       i2 = 1;
       break;
      } else {
       i2 = (HEAP32[i36 >> 2] | 0) == 0;
       break;
      }
     } else i2 = 1; while (0);
     do if (i4) {
      i1 = HEAP32[i4 + 12 >> 2] | 0;
      if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break; else {
       i35 = 204;
       break L21;
      } else {
       HEAP32[i37 >> 2] = 0;
       i35 = 198;
       break;
      }
     } else i35 = 198; while (0);
     if ((i35 | 0) == 198) {
      i35 = 0;
      if (i2) {
       i35 = 204;
       break L21;
      } else i4 = 0;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
     if ((HEAP8[i28 >> 0] | 0) != (i1 & 255) << 24 >> 24) {
      i35 = 204;
      break L21;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
      HEAP32[i2 >> 2] = i3 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
     }
     i3 = i4;
     while (1) {
      if ((HEAP32[i30 >> 2] | 0) <= 0) break L213;
      i1 = HEAP32[i36 >> 2] | 0;
      do if (i1) {
       i2 = HEAP32[i1 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
       if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
        HEAP32[i36 >> 2] = 0;
        i2 = 1;
        break;
       } else {
        i2 = (HEAP32[i36 >> 2] | 0) == 0;
        break;
       }
      } else i2 = 1; while (0);
      do if (i3) {
       i1 = HEAP32[i3 + 12 >> 2] | 0;
       if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
       if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) {
        i4 = i3;
        break;
       } else {
        i35 = 230;
        break L21;
       } else {
        HEAP32[i37 >> 2] = 0;
        i35 = 223;
        break;
       }
      } else i35 = 223; while (0);
      if ((i35 | 0) == 223) {
       i35 = 0;
       if (i2) {
        i35 = 230;
        break L21;
       } else i4 = 0;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
      if ((i1 & 255) << 24 >> 24 <= -1) {
       i35 = 230;
       break L21;
      }
      if (!(HEAP16[(HEAP32[i18 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 2048)) {
       i35 = 230;
       break L21;
      }
      if ((HEAP32[i33 >> 2] | 0) == (HEAP32[i25 >> 2] | 0)) __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i32, i33, i25);
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
      i2 = HEAP32[i33 >> 2] | 0;
      HEAP32[i33 >> 2] = i2 + 1;
      HEAP8[i2 >> 0] = i1;
      HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + -1;
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
       HEAP32[i2 >> 2] = i3 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
      }
      i3 = i4;
     }
    } while (0);
    if ((HEAP32[i33 >> 2] | 0) == (HEAP32[i32 >> 2] | 0)) {
     i35 = 241;
     break L21;
    } else i1 = i34;
    break;
   }
  default:
   i1 = i34;
  } while (0);
  L289 : do if ((i35 | 0) == 47) {
   i35 = 0;
   i3 = i10;
   while (1) {
    i1 = HEAP32[i36 >> 2] | 0;
    do if (i1) {
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[i36 >> 2] = 0;
      i2 = 1;
      break;
     } else {
      i2 = (HEAP32[i36 >> 2] | 0) == 0;
      break;
     }
    } else i2 = 1; while (0);
    do if (i3) {
     i1 = HEAP32[i3 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) {
      i4 = i3;
      break;
     } else {
      i1 = i34;
      break L289;
     } else {
      HEAP32[i37 >> 2] = 0;
      i35 = 61;
      break;
     }
    } else i35 = 61; while (0);
    if ((i35 | 0) == 61) {
     i35 = 0;
     if (i2) {
      i1 = i34;
      break L289;
     } else i4 = 0;
    }
    i1 = HEAP32[i36 >> 2] | 0;
    i2 = HEAP32[i1 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
    if ((i1 & 255) << 24 >> 24 <= -1) {
     i1 = i34;
     break L289;
    }
    if (!(HEAP16[(HEAP32[i18 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 8192)) {
     i1 = i34;
     break L289;
    }
    i1 = HEAP32[i36 >> 2] | 0;
    i2 = i1 + 12 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
     HEAP32[i2 >> 2] = i3 + 1;
     i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i45, i1 & 255);
    i3 = i4;
   }
  } while (0);
  i34 = i1;
  i11 = i11 + 1 | 0;
 }
 L326 : do if ((i35 | 0) == 45) {
  HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 105) {
  HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 148) {
  HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 204) {
  HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 230) {
  HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 241) {
  HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 243) {
  L328 : do if (i34 | 0) {
   i5 = i34 + 11 | 0;
   i6 = i34 + 4 | 0;
   i4 = 1;
   L330 : while (1) {
    i1 = HEAP8[i5 >> 0] | 0;
    if (i1 << 24 >> 24 < 0) i1 = HEAP32[i6 >> 2] | 0; else i1 = i1 & 255;
    if (i4 >>> 0 >= i1 >>> 0) break L328;
    i1 = HEAP32[i36 >> 2] | 0;
    do if (i1) {
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[i36 >> 2] = 0;
      i3 = 1;
      break;
     } else {
      i3 = (HEAP32[i36 >> 2] | 0) == 0;
      break;
     }
    } else i3 = 1; while (0);
    i1 = HEAP32[i37 >> 2] | 0;
    do if (i1) {
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i3) break; else break L330; else {
      HEAP32[i37 >> 2] = 0;
      i35 = 262;
      break;
     }
    } else i35 = 262; while (0);
    if ((i35 | 0) == 262 ? (i35 = 0, i3) : 0) break;
    i1 = HEAP32[i36 >> 2] | 0;
    i2 = HEAP32[i1 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
    if ((HEAP8[i5 >> 0] | 0) < 0) i2 = HEAP32[i34 >> 2] | 0; else i2 = i34;
    if ((HEAP8[i2 + i4 >> 0] | 0) != (i1 & 255) << 24 >> 24) break;
    i1 = HEAP32[i36 >> 2] | 0;
    i2 = i1 + 12 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
     HEAP32[i2 >> 2] = i3 + 1;
     __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
    }
    i4 = i4 + 1 | 0;
   }
   HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
   i2 = 0;
   break L326;
  } while (0);
  i2 = HEAP32[i46 >> 2] | 0;
  i1 = HEAP32[i38 >> 2] | 0;
  if ((i2 | 0) != (i1 | 0)) {
   HEAP32[i39 >> 2] = 0;
   __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i41, i2, i1, i39);
   if (!(HEAP32[i39 >> 2] | 0)) {
    i2 = 1;
    break;
   } else {
    HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
    i2 = 0;
    break;
   }
  } else i2 = 1;
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i45);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i44);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i43);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i42);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i41);
 i1 = HEAP32[i46 >> 2] | 0;
 HEAP32[i46 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i46 + 4 >> 2] & 255](i1);
 STACKTOP = i47;
 return i2 | 0;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(i36, i37, i2, i3, i4, i40, i30, i31, i32, i33, i1) {
 i36 = i36 | 0;
 i37 = i37 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i40 = i40 | 0;
 i30 = i30 | 0;
 i31 = i31 | 0;
 i32 = i32 | 0;
 i33 = i33 | 0;
 i1 = i1 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i34 = 0, i35 = 0, i38 = 0, i39 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0;
 i47 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 i24 = i47 + 496 | 0;
 i34 = i47;
 i46 = i47 + 488 | 0;
 i38 = i47 + 480 | 0;
 i25 = i47 + 476 | 0;
 i26 = i47 + 500 | 0;
 i27 = i47 + 472 | 0;
 i28 = i47 + 468 | 0;
 i41 = i47 + 456 | 0;
 i42 = i47 + 444 | 0;
 i43 = i47 + 432 | 0;
 i44 = i47 + 420 | 0;
 i45 = i47 + 408 | 0;
 i29 = i47 + 404 | 0;
 i39 = i47 + 400 | 0;
 HEAP32[i24 >> 2] = i1;
 HEAP32[i46 >> 2] = i34;
 HEAP32[i46 + 4 >> 2] = 143;
 HEAP32[i38 >> 2] = i34;
 HEAP32[i25 >> 2] = i34 + 400;
 HEAP32[i41 >> 2] = 0;
 HEAP32[i41 + 4 >> 2] = 0;
 HEAP32[i41 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i41 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i42 >> 2] = 0;
 HEAP32[i42 + 4 >> 2] = 0;
 HEAP32[i42 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i42 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i43 >> 2] = 0;
 HEAP32[i43 + 4 >> 2] = 0;
 HEAP32[i43 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i43 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i44 >> 2] = 0;
 HEAP32[i44 + 4 >> 2] = 0;
 HEAP32[i44 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i44 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i45 >> 2] = 0;
 HEAP32[i45 + 4 >> 2] = 0;
 HEAP32[i45 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i45 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri(i2, i3, i26, i27, i28, i41, i42, i43, i44, i29);
 HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
 i18 = i43 + 8 + 3 | 0;
 i19 = i43 + 4 | 0;
 i20 = i44 + 8 + 3 | 0;
 i21 = i44 + 4 | 0;
 i22 = i41 + 11 | 0;
 i23 = i41 + 4 | 0;
 i12 = (i4 & 512 | 0) != 0;
 i13 = i42 + 8 + 3 | 0;
 i14 = i26 + 3 | 0;
 i15 = i42 + 4 | 0;
 i16 = i45 + 8 + 3 | 0;
 i17 = i45 + 4 | 0;
 i34 = 0;
 i11 = 0;
 L21 : while (1) {
  if (i11 >>> 0 >= 4) {
   i35 = 239;
   break;
  }
  i1 = HEAP32[i36 >> 2] | 0;
  do if (i1) {
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i36 >> 2] = 0;
    i3 = 1;
    break;
   } else {
    i3 = (HEAP32[i36 >> 2] | 0) == 0;
    break;
   }
  } else i3 = 1; while (0);
  i2 = HEAP32[i37 >> 2] | 0;
  do if (i2) {
   i1 = HEAP32[i2 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i3) {
    i10 = i2;
    break;
   } else {
    i35 = 239;
    break L21;
   } else {
    HEAP32[i37 >> 2] = 0;
    i35 = 31;
    break;
   }
  } else i35 = 31; while (0);
  if ((i35 | 0) == 31) {
   i35 = 0;
   if (i3) {
    i35 = 239;
    break;
   } else i10 = 0;
  }
  L46 : do switch (HEAP8[i26 + i11 >> 0] | 0) {
  case 1:
   {
    if ((i11 | 0) == 3) i1 = i34; else {
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i31 >> 2] | 0) + 12 >> 2] & 63](i31, 8192, i1) | 0)) {
      i35 = 44;
      break L21;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
      HEAP32[i2 >> 2] = i3 + 4;
      i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
     }
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i45, i1);
     i35 = 46;
    }
    break;
   }
  case 0:
   {
    if ((i11 | 0) == 3) i1 = i34; else i35 = 46;
    break;
   }
  case 3:
   {
    i1 = HEAP8[i18 >> 0] | 0;
    i1 = i1 << 24 >> 24 < 0 ? HEAP32[i19 >> 2] | 0 : i1 & 255;
    i4 = HEAP8[i20 >> 0] | 0;
    i4 = i4 << 24 >> 24 < 0 ? HEAP32[i21 >> 2] | 0 : i4 & 255;
    if ((i1 | 0) == (0 - i4 | 0)) i1 = i34; else {
     i5 = (i1 | 0) == 0;
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     i3 = (i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0);
     if (i5 | (i4 | 0) == 0) {
      if (i3) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
      if (i5) {
       if ((i1 | 0) != (HEAP32[((HEAP8[i20 >> 0] | 0) < 0 ? HEAP32[i44 >> 2] | 0 : i44) >> 2] | 0)) {
        i1 = i34;
        break L46;
       }
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = i1 + 12 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
        HEAP32[i2 >> 2] = i3 + 4;
        __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
       }
       HEAP8[i30 >> 0] = 1;
       i1 = HEAP8[i20 >> 0] | 0;
       i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i21 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i44 : i34;
       break L46;
      }
      if ((i1 | 0) != (HEAP32[((HEAP8[i18 >> 0] | 0) < 0 ? HEAP32[i43 >> 2] | 0 : i43) >> 2] | 0)) {
       HEAP8[i30 >> 0] = 1;
       i1 = i34;
       break L46;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
       HEAP32[i2 >> 2] = i3 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
      }
      i1 = HEAP8[i18 >> 0] | 0;
      i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i19 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i43 : i34;
      break L46;
     }
     if (i3) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
     i2 = HEAP32[i36 >> 2] | 0;
     i3 = i2 + 12 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     i5 = (i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0);
     if ((i1 | 0) == (HEAP32[((HEAP8[i18 >> 0] | 0) < 0 ? HEAP32[i43 >> 2] | 0 : i43) >> 2] | 0)) {
      if (i5) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0; else {
       HEAP32[i3 >> 2] = i4 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i4 >> 2] | 0) | 0;
      }
      i1 = HEAP8[i18 >> 0] | 0;
      i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i19 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i43 : i34;
      break L46;
     }
     if (i5) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i4 >> 2] | 0) | 0;
     if ((i1 | 0) != (HEAP32[((HEAP8[i20 >> 0] | 0) < 0 ? HEAP32[i44 >> 2] | 0 : i44) >> 2] | 0)) {
      i35 = 103;
      break L21;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
      HEAP32[i2 >> 2] = i3 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
     }
     HEAP8[i30 >> 0] = 1;
     i1 = HEAP8[i20 >> 0] | 0;
     i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i21 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i44 : i34;
    }
    break;
   }
  case 2:
   {
    if (i11 >>> 0 < 2 | (i34 | 0) != 0) {
     i2 = HEAP8[i13 >> 0] | 0;
     i3 = HEAP32[i42 >> 2] | 0;
     i1 = i2 << 24 >> 24 < 0 ? i3 : i42;
     if (i11) i35 = 108;
    } else {
     if (!(i12 | (i11 | 0) == 2 & (HEAP8[i14 >> 0] | 0) != 0)) {
      i1 = 0;
      break L46;
     }
     i2 = HEAP8[i13 >> 0] | 0;
     i3 = HEAP32[i42 >> 2] | 0;
     i1 = i2 << 24 >> 24 < 0 ? i3 : i42;
     i35 = 108;
    }
    L108 : do if ((i35 | 0) == 108) {
     i35 = 0;
     if ((HEAPU8[i26 + (i11 + -1) >> 0] | 0) < 2) {
      i4 = i2;
      while (1) {
       i9 = i4 << 24 >> 24 < 0;
       i2 = i1;
       if (((i9 ? i3 : i42) + ((i9 ? HEAP32[i15 >> 2] | 0 : i4 & 255) << 2) | 0) == (i2 | 0)) {
        i2 = i4;
        break;
       }
       if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i31 >> 2] | 0) + 12 >> 2] & 63](i31, 8192, HEAP32[i2 >> 2] | 0) | 0)) {
        i35 = 112;
        break;
       }
       i1 = i2 + 4 | 0;
       i4 = HEAP8[i13 >> 0] | 0;
       i3 = HEAP32[i42 >> 2] | 0;
      }
      if ((i35 | 0) == 112) {
       i35 = 0;
       i2 = HEAP8[i13 >> 0] | 0;
       i3 = HEAP32[i42 >> 2] | 0;
      }
      i5 = i2 << 24 >> 24 < 0 ? i3 : i42;
      i9 = i5;
      i7 = i1 - i9 >> 2;
      i6 = HEAP8[i16 >> 0] | 0;
      i8 = i6 << 24 >> 24 < 0;
      i4 = HEAP32[i17 >> 2] | 0;
      i6 = i6 & 255;
      if (i7 >>> 0 > (i8 ? i4 : i6) >>> 0) i1 = i9; else {
       i48 = (HEAP32[i45 >> 2] | 0) + (i4 << 2) | 0;
       i4 = i45 + (i6 << 2) | 0;
       i6 = i8 ? i48 : i4;
       i4 = (i8 ? i48 : i4) + (0 - i7 << 2) | 0;
       while (1) {
        if ((i4 | 0) == (i6 | 0)) break L108;
        if ((HEAP32[i4 >> 2] | 0) != (HEAP32[i5 >> 2] | 0)) {
         i1 = i9;
         break L108;
        }
        i5 = i5 + 4 | 0;
        i4 = i4 + 4 | 0;
       }
      }
     }
    } while (0);
    i5 = i1;
    i4 = i10;
    L124 : while (1) {
     i48 = i2 << 24 >> 24 < 0;
     if ((i5 | 0) == ((i48 ? i3 : i42) + ((i48 ? HEAP32[i15 >> 2] | 0 : i2 & 255) << 2) | 0)) break;
     i1 = HEAP32[i36 >> 2] | 0;
     do if (i1) {
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[i36 >> 2] = 0;
       i2 = 1;
       break;
      } else {
       i2 = (HEAP32[i36 >> 2] | 0) == 0;
       break;
      }
     } else i2 = 1; while (0);
     do if (i4) {
      i1 = HEAP32[i4 + 12 >> 2] | 0;
      if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break; else break L124; else {
       HEAP32[i37 >> 2] = 0;
       i35 = 134;
       break;
      }
     } else i35 = 134; while (0);
     if ((i35 | 0) == 134) {
      i35 = 0;
      if (i2) break; else i4 = 0;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
     if ((i1 | 0) != (HEAP32[i5 >> 2] | 0)) break;
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
      HEAP32[i2 >> 2] = i3 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
     }
     i5 = i5 + 4 | 0;
     i2 = HEAP8[i13 >> 0] | 0;
     i3 = HEAP32[i42 >> 2] | 0;
    }
    if (i12 ? (i48 = HEAP8[i13 >> 0] | 0, i10 = i48 << 24 >> 24 < 0, (i5 | 0) != ((i10 ? HEAP32[i42 >> 2] | 0 : i42) + ((i10 ? HEAP32[i15 >> 2] | 0 : i48 & 255) << 2) | 0)) : 0) {
     i35 = 146;
     break L21;
    } else i1 = i34;
    break;
   }
  case 4:
   {
    i5 = 0;
    i4 = i10;
    i1 = i10;
    L161 : while (1) {
     i2 = HEAP32[i36 >> 2] | 0;
     do if (i2) {
      i3 = HEAP32[i2 + 12 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[i36 >> 2] = 0;
       i3 = 1;
       break;
      } else {
       i3 = (HEAP32[i36 >> 2] | 0) == 0;
       break;
      }
     } else i3 = 1; while (0);
     do if (i4) {
      i2 = HEAP32[i4 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i3) {
       i6 = i4;
       break;
      } else {
       i4 = i1;
       break L161;
      } else {
       HEAP32[i37 >> 2] = 0;
       i1 = 0;
       i35 = 160;
       break;
      }
     } else i35 = 160; while (0);
     if ((i35 | 0) == 160) {
      i35 = 0;
      if (i3) {
       i4 = i1;
       break;
      } else i6 = 0;
     }
     i2 = HEAP32[i36 >> 2] | 0;
     i3 = HEAP32[i2 + 12 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i3 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i31 >> 2] | 0) + 12 >> 2] & 63](i31, 2048, i3) | 0) {
      i2 = HEAP32[i33 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i24 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i32, i33, i24);
       i2 = HEAP32[i33 >> 2] | 0;
      }
      HEAP32[i33 >> 2] = i2 + 4;
      HEAP32[i2 >> 2] = i3;
      i2 = i5 + 1 | 0;
     } else {
      i48 = HEAP8[i22 >> 0] | 0;
      if (!((i3 | 0) == (HEAP32[i28 >> 2] | 0) & (i5 | 0 ? ((i48 << 24 >> 24 < 0 ? HEAP32[i23 >> 2] | 0 : i48 & 255) | 0) != 0 : 0))) {
       i4 = i1;
       break;
      }
      i2 = HEAP32[i38 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i25 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i46, i38, i25);
       i2 = HEAP32[i38 >> 2] | 0;
      }
      HEAP32[i38 >> 2] = i2 + 4;
      HEAP32[i2 >> 2] = i5;
      i2 = 0;
     }
     i3 = HEAP32[i36 >> 2] | 0;
     i4 = i3 + 12 | 0;
     i5 = HEAP32[i4 >> 2] | 0;
     if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0; else {
      HEAP32[i4 >> 2] = i5 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i5 >> 2] | 0) | 0;
     }
     i5 = i2;
     i4 = i6;
    }
    i1 = HEAP32[i38 >> 2] | 0;
    if (i5 | 0 ? (HEAP32[i46 >> 2] | 0) != (i1 | 0) : 0) {
     if ((i1 | 0) == (HEAP32[i25 >> 2] | 0)) {
      __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i46, i38, i25);
      i1 = HEAP32[i38 >> 2] | 0;
     }
     HEAP32[i38 >> 2] = i1 + 4;
     HEAP32[i1 >> 2] = i5;
    }
    L211 : do if ((HEAP32[i29 >> 2] | 0) > 0) {
     i1 = HEAP32[i36 >> 2] | 0;
     do if (i1) {
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[i36 >> 2] = 0;
       i2 = 1;
       break;
      } else {
       i2 = (HEAP32[i36 >> 2] | 0) == 0;
       break;
      }
     } else i2 = 1; while (0);
     do if (i4) {
      i1 = HEAP32[i4 + 12 >> 2] | 0;
      if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break; else {
       i35 = 201;
       break L21;
      } else {
       HEAP32[i37 >> 2] = 0;
       i35 = 195;
       break;
      }
     } else i35 = 195; while (0);
     if ((i35 | 0) == 195) {
      i35 = 0;
      if (i2) {
       i35 = 201;
       break L21;
      } else i4 = 0;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
     if ((i1 | 0) != (HEAP32[i27 >> 2] | 0)) {
      i35 = 201;
      break L21;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
      HEAP32[i2 >> 2] = i3 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
     }
     i3 = i4;
     while (1) {
      if ((HEAP32[i29 >> 2] | 0) <= 0) break L211;
      i1 = HEAP32[i36 >> 2] | 0;
      do if (i1) {
       i2 = HEAP32[i1 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
       if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
        HEAP32[i36 >> 2] = 0;
        i2 = 1;
        break;
       } else {
        i2 = (HEAP32[i36 >> 2] | 0) == 0;
        break;
       }
      } else i2 = 1; while (0);
      do if (i3) {
       i1 = HEAP32[i3 + 12 >> 2] | 0;
       if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
       if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) {
        i4 = i3;
        break;
       } else {
        i35 = 226;
        break L21;
       } else {
        HEAP32[i37 >> 2] = 0;
        i35 = 220;
        break;
       }
      } else i35 = 220; while (0);
      if ((i35 | 0) == 220) {
       i35 = 0;
       if (i2) {
        i35 = 226;
        break L21;
       } else i4 = 0;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i31 >> 2] | 0) + 12 >> 2] & 63](i31, 2048, i1) | 0)) {
       i35 = 226;
       break L21;
      }
      if ((HEAP32[i33 >> 2] | 0) == (HEAP32[i24 >> 2] | 0)) __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i32, i33, i24);
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
      i2 = HEAP32[i33 >> 2] | 0;
      HEAP32[i33 >> 2] = i2 + 4;
      HEAP32[i2 >> 2] = i1;
      HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + -1;
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
       HEAP32[i2 >> 2] = i3 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
      }
      i3 = i4;
     }
    } while (0);
    if ((HEAP32[i33 >> 2] | 0) == (HEAP32[i32 >> 2] | 0)) {
     i35 = 237;
     break L21;
    } else i1 = i34;
    break;
   }
  default:
   i1 = i34;
  } while (0);
  L286 : do if ((i35 | 0) == 46) {
   i35 = 0;
   i3 = i10;
   while (1) {
    i1 = HEAP32[i36 >> 2] | 0;
    do if (i1) {
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[i36 >> 2] = 0;
      i2 = 1;
      break;
     } else {
      i2 = (HEAP32[i36 >> 2] | 0) == 0;
      break;
     }
    } else i2 = 1; while (0);
    do if (i3) {
     i1 = HEAP32[i3 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) {
      i4 = i3;
      break;
     } else {
      i1 = i34;
      break L286;
     } else {
      HEAP32[i37 >> 2] = 0;
      i35 = 60;
      break;
     }
    } else i35 = 60; while (0);
    if ((i35 | 0) == 60) {
     i35 = 0;
     if (i2) {
      i1 = i34;
      break L286;
     } else i4 = 0;
    }
    i1 = HEAP32[i36 >> 2] | 0;
    i2 = HEAP32[i1 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i31 >> 2] | 0) + 12 >> 2] & 63](i31, 8192, i1) | 0)) {
     i1 = i34;
     break L286;
    }
    i1 = HEAP32[i36 >> 2] | 0;
    i2 = i1 + 12 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
     HEAP32[i2 >> 2] = i3 + 4;
     i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
    }
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i45, i1);
    i3 = i4;
   }
  } while (0);
  i34 = i1;
  i11 = i11 + 1 | 0;
 }
 L322 : do if ((i35 | 0) == 44) {
  HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 103) {
  HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 146) {
  HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 201) {
  HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 226) {
  HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 237) {
  HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 239) {
  L324 : do if (i34 | 0) {
   i5 = i34 + 8 + 3 | 0;
   i6 = i34 + 4 | 0;
   i4 = 1;
   L326 : while (1) {
    i1 = HEAP8[i5 >> 0] | 0;
    if (i1 << 24 >> 24 < 0) i1 = HEAP32[i6 >> 2] | 0; else i1 = i1 & 255;
    if (i4 >>> 0 >= i1 >>> 0) break L324;
    i1 = HEAP32[i36 >> 2] | 0;
    do if (i1) {
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[i36 >> 2] = 0;
      i3 = 1;
      break;
     } else {
      i3 = (HEAP32[i36 >> 2] | 0) == 0;
      break;
     }
    } else i3 = 1; while (0);
    i1 = HEAP32[i37 >> 2] | 0;
    do if (i1) {
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i3) break; else break L326; else {
      HEAP32[i37 >> 2] = 0;
      i35 = 258;
      break;
     }
    } else i35 = 258; while (0);
    if ((i35 | 0) == 258 ? (i35 = 0, i3) : 0) break;
    i1 = HEAP32[i36 >> 2] | 0;
    i2 = HEAP32[i1 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
    if ((HEAP8[i5 >> 0] | 0) < 0) i2 = HEAP32[i34 >> 2] | 0; else i2 = i34;
    if ((i1 | 0) != (HEAP32[i2 + (i4 << 2) >> 2] | 0)) break;
    i1 = HEAP32[i36 >> 2] | 0;
    i2 = i1 + 12 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
     HEAP32[i2 >> 2] = i3 + 4;
     __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
    }
    i4 = i4 + 1 | 0;
   }
   HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
   i2 = 0;
   break L322;
  } while (0);
  i2 = HEAP32[i46 >> 2] | 0;
  i1 = HEAP32[i38 >> 2] | 0;
  if ((i2 | 0) != (i1 | 0)) {
   HEAP32[i39 >> 2] = 0;
   __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i41, i2, i1, i39);
   if (!(HEAP32[i39 >> 2] | 0)) {
    i2 = 1;
    break;
   } else {
    HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
    i2 = 0;
    break;
   }
  } else i2 = 1;
 } while (0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i45);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i44);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i43);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i42);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i41);
 i1 = HEAP32[i46 >> 2] | 0;
 HEAP32[i46 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i46 + 4 >> 2] & 255](i1);
 STACKTOP = i47;
 return i2 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i6;
 L1 : do if ((i1 | 0) != (i2 | 0)) do switch (HEAP8[i1 >> 0] | 0) {
 case 118:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc(i5, 51963);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 119:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm8EEERAT__Kc(i5);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 98:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc(i5, 51968);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 99:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc(i5, 51737);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 97:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc(i5, 51742);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 104:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm14EEERAT__Kc(i5, 51754);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 115:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc(i5, 51768);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 116:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc(i5, 51774);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 105:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm4EEERAT__Kc(i5, 51973);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 106:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc(i5, 51977);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 108:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc(i5, 51990);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 109:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm14EEERAT__Kc(i5, 51995);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 120:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 52009);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 121:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm19EEERAT__Kc(i5);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 110:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm9EEERAT__Kc(i5, 51803);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 111:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm18EEERAT__Kc(i5, 51812);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 102:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc(i5, 52019);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 100:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm7EEERAT__Kc(i5);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 101:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc(i5, 52025);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 103:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 52037);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 122:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm4EEERAT__Kc(i5, 52048);
   i2 = i4 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 117:
  {
   i3 = i1 + 1 | 0;
   i5 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i3, i2, i4) | 0;
   i1 = (i5 | 0) == (i3 | 0) ? i1 : i5;
   break L1;
  }
 case 68:
  {
   i3 = i1 + 1 | 0;
   if ((i3 | 0) == (i2 | 0)) break L1;
   switch (HEAP8[i3 >> 0] | 0) {
   case 100:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 52052);
     i2 = i4 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 52062);
     i2 = i4 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 102:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 52073);
     i2 = i4 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 104:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 52083);
     i2 = i4 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 105:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm9EEERAT__Kc(i5, 52093);
     i2 = i4 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm9EEERAT__Kc(i5, 52102);
     i2 = i4 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc(i5, 52111);
     i2 = i4 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 110:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc(i5, 52116);
     i2 = i4 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if (i3 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i1 = i1 + 2 | 0;
     break L1;
    }
   default:
    break L1;
   }
  }
 default:
  break L1;
 } while (0); while (0);
 STACKTOP = i6;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_nested_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i37, i41) {
 i1 = i1 | 0;
 i37 = i37 | 0;
 i41 = i41 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i38 = 0, i39 = 0, i40 = 0, i42 = 0, i43 = 0, i44 = 0;
 i44 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i42 = i44 + 36 | 0;
 i38 = i44 + 24 | 0;
 i39 = i44 + 8 | 0;
 i40 = i44;
 L1 : do if ((i1 | 0) != (i37 | 0) ? (HEAP8[i1 >> 0] | 0) == 78 : 0) {
  i3 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i1 + 1 | 0, i37, i42) | 0;
  L4 : do if ((i3 | 0) != (i37 | 0)) {
   i4 = i41 + 52 | 0;
   HEAP32[i4 >> 2] = 0;
   switch (HEAP8[i3 >> 0] | 0) {
   case 82:
    {
     i2 = 1;
     i6 = 6;
     break;
    }
   case 79:
    {
     i2 = 2;
     i6 = 6;
     break;
    }
   default:
    {}
   }
   if ((i6 | 0) == 6) {
    HEAP32[i4 >> 2] = i2;
    i3 = i3 + 1 | 0;
   }
   i36 = i41 + 4 | 0;
   i2 = HEAP32[i36 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[i41 + 8 >> 2] | 0) >>> 0) {
    HEAP32[i2 >> 2] = 0;
    HEAP32[i2 + 4 >> 2] = 0;
    HEAP32[i2 + 8 >> 2] = 0;
    HEAP32[i2 + 12 >> 2] = 0;
    HEAP32[i2 + 16 >> 2] = 0;
    HEAP32[i2 + 20 >> 2] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev(i2);
    HEAP32[i36 >> 2] = (HEAP32[i36 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_(i41);
   if (((i37 - i3 | 0) > 1 ? (HEAP8[i3 >> 0] | 0) == 83 : 0) ? (HEAP8[i3 + 1 >> 0] | 0) == 116 : 0) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc((HEAP32[i36 >> 2] | 0) + -24 | 0, 51902);
    i3 = i3 + 2 | 0;
   }
   if ((i3 | 0) == (i37 | 0)) {
    i3 = HEAP32[i36 >> 2] | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == -1) break;
     i43 = i2 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i43 * 24 | 0) | 0);
     i2 = i43;
    }
    HEAP32[i36 >> 2] = i3 + -24;
    break;
   }
   i8 = i38 + 11 | 0;
   i9 = i38 + 4 | 0;
   i7 = i41 + 12 | 0;
   i35 = i41 + 20 | 0;
   i10 = i41 + 24 | 0;
   i11 = i39 + 11 | 0;
   i12 = i39 + 4 | 0;
   i13 = i39 + 11 | 0;
   i14 = i39 + 4 | 0;
   i15 = i39 + 12 | 0;
   i16 = i39 + 4 | 0;
   i17 = i39 + 8 | 0;
   i18 = i41 + 16 | 0;
   i19 = i39 + 12 | 0;
   i20 = i39 + 4 | 0;
   i21 = i39 + 8 | 0;
   i22 = i39 + 11 | 0;
   i23 = i39 + 4 | 0;
   i24 = i39 + 12 | 0;
   i25 = i39 + 4 | 0;
   i26 = i39 + 8 | 0;
   i27 = i39 + 11 | 0;
   i28 = i39 + 4 | 0;
   i29 = i39 + 12 | 0;
   i30 = i39 + 4 | 0;
   i31 = i39 + 8 | 0;
   i32 = i39 + 12 | 0;
   i33 = i39 + 4 | 0;
   i34 = i39 + 8 | 0;
   i5 = 0;
   L27 : while (1) {
    L29 : while (1) {
     i2 = HEAP8[i3 >> 0] | 0;
     if (i2 << 24 >> 24 == 69) break L27;
     switch (i2 << 24 >> 24 | 0) {
     case 83:
      {
       i6 = 23;
       break L29;
      }
     case 84:
      {
       i6 = 39;
       break L29;
      }
     case 68:
      {
       i6 = 53;
       break L29;
      }
     case 73:
      {
       i4 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i3, i37, i41) | 0;
       if ((i4 | 0) == (i3 | 0) | (i4 | 0) == (i37 | 0)) break L4;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i38, (HEAP32[i36 >> 2] | 0) + -24 | 0);
       i3 = HEAP32[i36 >> 2] | 0;
       i2 = 0;
       while (1) {
        if ((i2 | 0) == -1) break;
        i6 = i2 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i6 * 24 | 0) | 0);
        i2 = i6;
       }
       HEAP32[i36 >> 2] = i3 + -24;
       i2 = HEAP8[i8 >> 0] | 0;
       i6 = i2 << 24 >> 24 < 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i3 + -48 | 0, i6 ? HEAP32[i38 >> 2] | 0 : i38, i6 ? HEAP32[i9 >> 2] | 0 : i2 & 255) | 0;
       i2 = (HEAP32[i36 >> 2] | 0) + -24 | 0;
       HEAP32[i40 >> 2] = HEAP32[i7 >> 2];
       __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i39, i2, i40);
       i2 = HEAP32[i35 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
        HEAP32[i2 >> 2] = 0;
        i3 = i2 + 4 | 0;
        HEAP32[i3 >> 2] = 0;
        i6 = i2 + 8 | 0;
        HEAP32[i6 >> 2] = 0;
        HEAP32[i2 + 12 >> 2] = HEAP32[i15 >> 2];
        HEAP32[i2 >> 2] = HEAP32[i39 >> 2];
        HEAP32[i3 >> 2] = HEAP32[i16 >> 2];
        HEAP32[i6 >> 2] = HEAP32[i17 >> 2];
        HEAP32[i17 >> 2] = 0;
        HEAP32[i16 >> 2] = 0;
        HEAP32[i39 >> 2] = 0;
        HEAP32[i35 >> 2] = (HEAP32[i35 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i18, i39);
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i39);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i38);
       i3 = i4;
       break;
      }
     case 76:
      {
       i3 = i3 + 1 | 0;
       if ((i3 | 0) == (i37 | 0)) break L4;
       break;
      }
     default:
      {
       i6 = 79;
       break L29;
      }
     }
    }
    L45 : do if ((i6 | 0) == 23) {
     i6 = 0;
     i5 = i3 + 1 | 0;
     if ((i5 | 0) != (i37 | 0) ? (HEAP8[i5 >> 0] | 0) == 116 : 0) {
      i6 = 79;
      break;
     }
     i5 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i3, i37, i41) | 0;
     if ((i5 | 0) == (i3 | 0) | (i5 | 0) == (i37 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i38, (HEAP32[i36 >> 2] | 0) + -24 | 0);
     i3 = HEAP32[i36 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i4 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i4 * 24 | 0) | 0);
      i2 = i4;
     }
     HEAP32[i36 >> 2] = i3 + -24;
     i4 = i3 + -48 | 0;
     i2 = HEAP8[i4 + 11 >> 0] | 0;
     if (i2 << 24 >> 24 < 0) i2 = HEAP32[i3 + -44 >> 2] | 0; else i2 = i2 & 255;
     if (!i2) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i4, i38); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i39, 50598, i38);
      i2 = HEAP8[i22 >> 0] | 0;
      i4 = i2 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i36 >> 2] | 0) + -24 | 0, i4 ? HEAP32[i39 >> 2] | 0 : i39, i4 ? HEAP32[i23 >> 2] | 0 : i2 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i39);
      i2 = (HEAP32[i36 >> 2] | 0) + -24 | 0;
      HEAP32[i40 >> 2] = HEAP32[i7 >> 2];
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i39, i2, i40);
      i2 = HEAP32[i35 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
       HEAP32[i2 >> 2] = 0;
       i3 = i2 + 4 | 0;
       HEAP32[i3 >> 2] = 0;
       i4 = i2 + 8 | 0;
       HEAP32[i4 >> 2] = 0;
       HEAP32[i2 + 12 >> 2] = HEAP32[i32 >> 2];
       HEAP32[i2 >> 2] = HEAP32[i39 >> 2];
       HEAP32[i3 >> 2] = HEAP32[i33 >> 2];
       HEAP32[i4 >> 2] = HEAP32[i34 >> 2];
       HEAP32[i34 >> 2] = 0;
       HEAP32[i33 >> 2] = 0;
       HEAP32[i39 >> 2] = 0;
       HEAP32[i35 >> 2] = (HEAP32[i35 >> 2] | 0) + 16;
      } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i18, i39);
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i39);
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i38);
     i3 = i5;
    } else if ((i6 | 0) == 39) {
     i6 = 0;
     i5 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i3, i37, i41) | 0;
     if ((i5 | 0) == (i3 | 0) | (i5 | 0) == (i37 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i38, (HEAP32[i36 >> 2] | 0) + -24 | 0);
     i3 = HEAP32[i36 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i4 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i4 * 24 | 0) | 0);
      i2 = i4;
     }
     HEAP32[i36 >> 2] = i3 + -24;
     i4 = i3 + -48 | 0;
     i2 = HEAP8[i4 + 11 >> 0] | 0;
     if (i2 << 24 >> 24 < 0) i2 = HEAP32[i3 + -44 >> 2] | 0; else i2 = i2 & 255;
     if (!i2) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i4, i38); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i39, 50598, i38);
      i4 = HEAP8[i13 >> 0] | 0;
      i3 = i4 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i36 >> 2] | 0) + -24 | 0, i3 ? HEAP32[i39 >> 2] | 0 : i39, i3 ? HEAP32[i14 >> 2] | 0 : i4 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i39);
     }
     i2 = (HEAP32[i36 >> 2] | 0) + -24 | 0;
     HEAP32[i40 >> 2] = HEAP32[i7 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i39, i2, i40);
     i2 = HEAP32[i35 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      i3 = i2 + 4 | 0;
      HEAP32[i3 >> 2] = 0;
      i4 = i2 + 8 | 0;
      HEAP32[i4 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = HEAP32[i24 >> 2];
      HEAP32[i2 >> 2] = HEAP32[i39 >> 2];
      HEAP32[i3 >> 2] = HEAP32[i25 >> 2];
      HEAP32[i4 >> 2] = HEAP32[i26 >> 2];
      HEAP32[i26 >> 2] = 0;
      HEAP32[i25 >> 2] = 0;
      HEAP32[i39 >> 2] = 0;
      HEAP32[i35 >> 2] = (HEAP32[i35 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i18, i39);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i39);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i38);
     i3 = i5;
    } else if ((i6 | 0) == 53) {
     i6 = 0;
     i2 = i3 + 1 | 0;
     if ((i2 | 0) != (i37 | 0)) switch (HEAP8[i2 >> 0] | 0) {
     case 84:
     case 116:
      break;
     default:
      {
       i6 = 79;
       break L45;
      }
     }
     i5 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_(i3, i37, i41) | 0;
     if ((i5 | 0) == (i3 | 0) | (i5 | 0) == (i37 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i38, (HEAP32[i36 >> 2] | 0) + -24 | 0);
     i3 = HEAP32[i36 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i4 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i4 * 24 | 0) | 0);
      i2 = i4;
     }
     HEAP32[i36 >> 2] = i3 + -24;
     i4 = i3 + -48 | 0;
     i2 = HEAP8[i4 + 11 >> 0] | 0;
     if (i2 << 24 >> 24 < 0) i2 = HEAP32[i3 + -44 >> 2] | 0; else i2 = i2 & 255;
     if (!i2) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i4, i38); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i39, 50598, i38);
      i4 = HEAP8[i27 >> 0] | 0;
      i3 = i4 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i36 >> 2] | 0) + -24 | 0, i3 ? HEAP32[i39 >> 2] | 0 : i39, i3 ? HEAP32[i28 >> 2] | 0 : i4 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i39);
     }
     i2 = (HEAP32[i36 >> 2] | 0) + -24 | 0;
     HEAP32[i40 >> 2] = HEAP32[i7 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i39, i2, i40);
     i2 = HEAP32[i35 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      i3 = i2 + 4 | 0;
      HEAP32[i3 >> 2] = 0;
      i4 = i2 + 8 | 0;
      HEAP32[i4 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = HEAP32[i29 >> 2];
      HEAP32[i2 >> 2] = HEAP32[i39 >> 2];
      HEAP32[i3 >> 2] = HEAP32[i30 >> 2];
      HEAP32[i4 >> 2] = HEAP32[i31 >> 2];
      HEAP32[i31 >> 2] = 0;
      HEAP32[i30 >> 2] = 0;
      HEAP32[i39 >> 2] = 0;
      HEAP32[i35 >> 2] = (HEAP32[i35 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i18, i39);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i39);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i38);
     i3 = i5;
    } while (0);
    if ((i6 | 0) == 79) {
     i5 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_(i3, i37, i41) | 0;
     if ((i5 | 0) == (i3 | 0) | (i5 | 0) == (i37 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i38, (HEAP32[i36 >> 2] | 0) + -24 | 0);
     i3 = HEAP32[i36 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i6 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i6 * 24 | 0) | 0);
      i2 = i6;
     }
     HEAP32[i36 >> 2] = i3 + -24;
     i4 = i3 + -48 | 0;
     i2 = HEAP8[i4 + 11 >> 0] | 0;
     if (i2 << 24 >> 24 < 0) i2 = HEAP32[i3 + -44 >> 2] | 0; else i2 = i2 & 255;
     if (!i2) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i4, i38); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i39, 50598, i38);
      i6 = HEAP8[i11 >> 0] | 0;
      i4 = i6 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i36 >> 2] | 0) + -24 | 0, i4 ? HEAP32[i39 >> 2] | 0 : i39, i4 ? HEAP32[i12 >> 2] | 0 : i6 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i39);
     }
     i2 = (HEAP32[i36 >> 2] | 0) + -24 | 0;
     HEAP32[i40 >> 2] = HEAP32[i7 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i39, i2, i40);
     i2 = HEAP32[i35 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = 0;
      i4 = i2 + 4 | 0;
      HEAP32[i4 >> 2] = 0;
      i6 = i2 + 8 | 0;
      HEAP32[i6 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = HEAP32[i19 >> 2];
      HEAP32[i2 >> 2] = HEAP32[i39 >> 2];
      HEAP32[i4 >> 2] = HEAP32[i20 >> 2];
      HEAP32[i6 >> 2] = HEAP32[i21 >> 2];
      HEAP32[i21 >> 2] = 0;
      HEAP32[i20 >> 2] = 0;
      HEAP32[i39 >> 2] = 0;
      HEAP32[i35 >> 2] = (HEAP32[i35 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i18, i39);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i39);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i38);
     i3 = i5;
    }
    i5 = 1;
   }
   i1 = i3 + 1 | 0;
   HEAP32[i41 + 48 >> 2] = HEAP32[i42 >> 2];
   if (i5 ? (i43 = HEAP32[i35 >> 2] | 0, (HEAP32[i41 + 16 >> 2] | 0) != (i43 | 0)) : 0) {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == -1) break;
     i42 = i2 + -1 | 0;
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i43 + (i42 << 4) | 0);
     i2 = i42;
    }
    HEAP32[i35 >> 2] = i43 + -16;
   }
   break L1;
  } while (0);
 } while (0);
 STACKTOP = i44;
 return i1 | 0;
}

function __ZNSt3__212__next_primeEm(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i10;
 i8 = i10 + 8 | 0;
 i4 = i10 + 4 | 0;
 HEAP32[i8 >> 2] = i1;
 do if (i1 >>> 0 >= 212) {
  i7 = (i1 >>> 0) / 210 | 0;
  i2 = i7 * 210 | 0;
  HEAP32[i4 >> 2] = i1 - i2;
  i1 = 0;
  i6 = (__ZNSt3__213__lower_boundIRNS_6__lessIjmEEPKjmEET0_S6_S6_RKT1_T_(10544, 10736, i4, i3) | 0) - 10544 >> 2;
  L4 : while (1) {
   i5 = (HEAP32[10544 + (i6 << 2) >> 2] | 0) + i2 | 0;
   i2 = 5;
   while (1) {
    if (i2 >>> 0 >= 47) {
     i9 = 6;
     break;
    }
    i3 = HEAP32[10352 + (i2 << 2) >> 2] | 0;
    i4 = (i5 >>> 0) / (i3 >>> 0) | 0;
    if (i4 >>> 0 < i3 >>> 0) {
     i9 = 107;
     break L4;
    }
    if ((i5 | 0) == (Math_imul(i4, i3) | 0)) break; else i2 = i2 + 1 | 0;
   }
   L10 : do if ((i9 | 0) == 6) {
    i9 = 0;
    i4 = 211;
    L12 : while (1) {
     i2 = (i5 >>> 0) / (i4 >>> 0) | 0;
     do if (i2 >>> 0 >= i4 >>> 0) if ((i5 | 0) != (Math_imul(i2, i4) | 0)) {
      i2 = i4 + 10 | 0;
      i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
      if (i3 >>> 0 >= i2 >>> 0) if ((i5 | 0) != (Math_imul(i3, i2) | 0)) {
       i2 = i4 + 12 | 0;
       i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
       if (i3 >>> 0 >= i2 >>> 0) if ((i5 | 0) != (Math_imul(i3, i2) | 0)) {
        i2 = i4 + 16 | 0;
        i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
        if (i3 >>> 0 >= i2 >>> 0) if ((i5 | 0) != (Math_imul(i3, i2) | 0)) {
         i2 = i4 + 18 | 0;
         i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
         if (i3 >>> 0 >= i2 >>> 0) if ((i5 | 0) != (Math_imul(i3, i2) | 0)) {
          i2 = i4 + 22 | 0;
          i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
          if (i3 >>> 0 >= i2 >>> 0) if ((i5 | 0) != (Math_imul(i3, i2) | 0)) {
           i2 = i4 + 28 | 0;
           i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
           if (i3 >>> 0 >= i2 >>> 0) if ((i5 | 0) == (Math_imul(i3, i2) | 0)) i3 = 9; else {
            i2 = i4 + 30 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 36 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 40 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 42 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 46 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 52 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 58 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 60 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 66 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 70 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 72 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 78 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 82 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 88 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 96 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 100 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 102 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 106 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 108 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 112 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 120 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 126 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 130 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 136 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 138 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 142 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 148 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 150 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 156 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 162 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 166 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 168 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 172 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 178 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 180 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 186 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 190 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 192 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 196 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 198 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            if (i3 >>> 0 < i2 >>> 0) {
             i3 = 1;
             i1 = i5;
             break;
            }
            if ((i5 | 0) == (Math_imul(i3, i2) | 0)) {
             i3 = 9;
             break;
            }
            i2 = i4 + 208 | 0;
            i3 = (i5 >>> 0) / (i2 >>> 0) | 0;
            i11 = i3 >>> 0 < i2 >>> 0;
            i3 = (i5 | 0) == (Math_imul(i3, i2) | 0);
            i2 = i11 | i3 ? i2 : i4 + 210 | 0;
            i3 = i11 ? 1 : i3 ? 9 : 0;
            i1 = i11 ? i5 : i1;
           } else {
            i3 = 1;
            i1 = i5;
           }
          } else i3 = 9; else {
           i3 = 1;
           i1 = i5;
          }
         } else i3 = 9; else {
          i3 = 1;
          i1 = i5;
         }
        } else i3 = 9; else {
         i3 = 1;
         i1 = i5;
        }
       } else i3 = 9; else {
        i3 = 1;
        i1 = i5;
       }
      } else i3 = 9; else {
       i3 = 1;
       i1 = i5;
      }
     } else {
      i2 = i4;
      i3 = 9;
     } else {
      i2 = i4;
      i3 = 1;
      i1 = i5;
     } while (0);
     switch (i3 & 15) {
     case 9:
      break L10;
     case 0:
      {
       i4 = i2;
       break;
      }
     default:
      break L12;
     }
    }
    if (i3) {
     i9 = 108;
     break L4;
    }
   } while (0);
   i11 = i6 + 1 | 0;
   i5 = (i11 | 0) == 48;
   i2 = i7 + (i5 & 1) | 0;
   i7 = i2;
   i2 = i2 * 210 | 0;
   i6 = i5 ? 0 : i11;
  }
  if ((i9 | 0) == 107) {
   HEAP32[i8 >> 2] = i5;
   i1 = i5;
   break;
  } else if ((i9 | 0) == 108) {
   HEAP32[i8 >> 2] = i5;
   break;
  }
 } else {
  i1 = __ZNSt3__213__lower_boundIRNS_6__lessIjmEEPKjmEET0_S6_S6_RKT1_T_(10352, 10544, i8, i3) | 0;
  i1 = HEAP32[i1 >> 2] | 0;
 } while (0);
 STACKTOP = i10;
 return i1 | 0;
}

function _vfscanf(i34, i1, i27) {
 i34 = i34 | 0;
 i1 = i1 | 0;
 i27 = i27 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, d8 = 0.0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i35 = 0, i36 = 0;
 i36 = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 i29 = i36 + 264 | 0;
 i30 = i36;
 i31 = i36 + 260 | 0;
 i32 = i36 + 272 | 0;
 if ((HEAP32[i34 + 76 >> 2] | 0) > -1) i35 = ___lockfile(i34) | 0; else i35 = 0;
 i2 = HEAP8[i1 >> 0] | 0;
 L4 : do if (i2 << 24 >> 24) {
  i20 = i34 + 4 | 0;
  i21 = i34 + 104 | 0;
  i22 = i34 + 120 | 0;
  i23 = i34 + 8 | 0;
  i24 = i30 + 10 | 0;
  i25 = i30 + 33 | 0;
  i26 = i30 + 46 | 0;
  i28 = i30 + 94 | 0;
  i19 = i29 + 4 | 0;
  i5 = i1;
  i1 = 0;
  i3 = 0;
  i4 = i2;
  i2 = 0;
  i13 = 0;
  i14 = 0;
  L6 : while (1) {
   L8 : do if (!(_isspace(i4 & 255) | 0)) {
    i6 = (HEAP8[i5 >> 0] | 0) == 37;
    L10 : do if (i6) {
     i4 = i5 + 1 | 0;
     i7 = HEAP8[i4 >> 0] | 0;
     L12 : do switch (i7 << 24 >> 24) {
     case 37:
      break L10;
     case 42:
      {
       i18 = 0;
       i4 = i5 + 2 | 0;
       break;
      }
     default:
      {
       if (_isdigit(i7 & 255) | 0 ? (HEAP8[i5 + 2 >> 0] | 0) == 36 : 0) {
        i18 = _arg_n_668(i27, (HEAPU8[i4 >> 0] | 0) + -48 | 0) | 0;
        i4 = i5 + 3 | 0;
        break L12;
       }
       i17 = (HEAP32[i27 >> 2] | 0) + (4 - 1) & ~(4 - 1);
       i18 = HEAP32[i17 >> 2] | 0;
       HEAP32[i27 >> 2] = i17 + 4;
      }
     } while (0);
     if (!(_isdigit(HEAPU8[i4 >> 0] | 0) | 0)) {
      i10 = 0;
      i7 = i4;
     } else {
      i5 = 0;
      do {
       i5 = (i5 * 10 | 0) + -48 + (HEAPU8[i4 >> 0] | 0) | 0;
       i4 = i4 + 1 | 0;
      } while ((_isdigit(HEAPU8[i4 >> 0] | 0) | 0) != 0);
      i10 = i5;
      i7 = i4;
     }
     i6 = HEAP8[i7 >> 0] | 0;
     i9 = i7 + 1 | 0;
     if (i6 << 24 >> 24 == 109) {
      i4 = (i18 | 0) != 0 & 1;
      i3 = 0;
      i5 = i9;
      i7 = i7 + 2 | 0;
      i6 = HEAP8[i9 >> 0] | 0;
      i2 = 0;
     } else {
      i4 = 0;
      i5 = i7;
      i7 = i9;
     }
     switch (i6 << 24 >> 24) {
     case 104:
      {
       i17 = (HEAP8[i7 >> 0] | 0) == 104;
       i6 = i17 ? -2 : -1;
       i5 = i17 ? i5 + 2 | 0 : i7;
       break;
      }
     case 108:
      {
       i17 = (HEAP8[i7 >> 0] | 0) == 108;
       i6 = i17 ? 3 : 1;
       i5 = i17 ? i5 + 2 | 0 : i7;
       break;
      }
     case 106:
      {
       i6 = 3;
       i5 = i7;
       break;
      }
     case 116:
     case 122:
      {
       i6 = 1;
       i5 = i7;
       break;
      }
     case 76:
      {
       i6 = 2;
       i5 = i7;
       break;
      }
     case 110:
     case 112:
     case 67:
     case 83:
     case 91:
     case 99:
     case 115:
     case 88:
     case 71:
     case 70:
     case 69:
     case 65:
     case 103:
     case 102:
     case 101:
     case 97:
     case 120:
     case 117:
     case 111:
     case 105:
     case 100:
      {
       i6 = 0;
       break;
      }
     default:
      {
       i33 = 143;
       break L6;
      }
     }
     i11 = HEAPU8[i5 >> 0] | 0;
     i12 = (i11 & 47 | 0) == 3;
     i11 = i12 ? i11 | 32 : i11;
     i12 = i12 ? 1 : i6;
     i9 = i11 & 255;
     switch (i9 << 24 >> 24) {
     case 99:
      {
       i17 = (i10 | 0) > 1 ? i10 : 1;
       break;
      }
     case 91:
      {
       i17 = i10;
       break;
      }
     case 110:
      {
       _store_int_669(i18, i12, i13, i14);
       i6 = i13;
       i7 = i14;
       break L8;
      }
     default:
      {
       ___shlim(i34, 0, 0);
       do {
        i6 = HEAP32[i20 >> 2] | 0;
        if (i6 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
         HEAP32[i20 >> 2] = i6 + 1;
         i6 = HEAPU8[i6 >> 0] | 0;
        } else i6 = ___shgetc(i34) | 0;
       } while ((_isspace(i6) | 0) != 0);
       if (!(HEAP32[i21 >> 2] | 0)) i6 = HEAP32[i20 >> 2] | 0; else {
        i6 = (HEAP32[i20 >> 2] | 0) + -1 | 0;
        HEAP32[i20 >> 2] = i6;
       }
       i16 = i22;
       i17 = i6 - (HEAP32[i23 >> 2] | 0) | 0;
       i13 = _i64Add(HEAP32[i16 >> 2] | 0, HEAP32[i16 + 4 >> 2] | 0, i13 | 0, i14 | 0) | 0;
       i13 = _i64Add(i13 | 0, getTempRet0() | 0, i17 | 0, ((i17 | 0) < 0) << 31 >> 31 | 0) | 0;
       i17 = i10;
       i14 = getTempRet0() | 0;
      }
     }
     i16 = ((i17 | 0) < 0) << 31 >> 31;
     ___shlim(i34, i17, i16);
     i7 = HEAP32[i20 >> 2] | 0;
     i6 = HEAP32[i21 >> 2] | 0;
     if (i7 >>> 0 < i6 >>> 0) HEAP32[i20 >> 2] = i7 + 1; else {
      if ((___shgetc(i34) | 0) < 0) {
       i33 = 143;
       break L6;
      }
      i6 = HEAP32[i21 >> 2] | 0;
     }
     if (i6 | 0) HEAP32[i20 >> 2] = (HEAP32[i20 >> 2] | 0) + -1;
     L59 : do switch (i9 << 24 >> 24) {
     case 91:
     case 99:
     case 115:
      {
       i15 = (i11 | 0) == 99;
       L61 : do if ((i11 | 16 | 0) == 115) {
        _memset(i30 | 0, -1, 257) | 0;
        HEAP8[i30 >> 0] = 0;
        if ((i11 | 0) == 115) {
         HEAP8[i25 >> 0] = 0;
         HEAP16[i24 >> 1] = 0;
         HEAP16[i24 + 2 >> 1] = 0;
         HEAP8[i24 + 4 >> 0] = 0;
        }
       } else {
        i11 = i5 + 1 | 0;
        i10 = (HEAP8[i11 >> 0] | 0) == 94;
        i6 = i10 & 1;
        i5 = i10 ? i5 + 2 | 0 : i11;
        _memset(i30 | 0, i6 | 0, 257) | 0;
        HEAP8[i30 >> 0] = 0;
        switch (HEAP8[i5 >> 0] | 0) {
        case 45:
         {
          i9 = (i6 ^ 1) & 255;
          HEAP8[i26 >> 0] = i9;
          i5 = i5 + 1 | 0;
          break;
         }
        case 93:
         {
          i9 = (i6 ^ 1) & 255;
          HEAP8[i28 >> 0] = i9;
          i5 = i5 + 1 | 0;
          break;
         }
        default:
         i9 = (i6 ^ 1) & 255;
        }
        while (1) {
         i6 = HEAP8[i5 >> 0] | 0;
         L72 : do switch (i6 << 24 >> 24) {
         case 0:
          {
           i33 = 143;
           break L6;
          }
         case 93:
          break L61;
         case 45:
          {
           i7 = i5 + 1 | 0;
           i6 = HEAP8[i7 >> 0] | 0;
           switch (i6 << 24 >> 24) {
           case 93:
           case 0:
            {
             i6 = 45;
             break L72;
            }
           default:
            {}
           }
           i5 = HEAP8[i5 + -1 >> 0] | 0;
           if ((i5 & 255) < (i6 & 255)) {
            i5 = i5 & 255;
            do {
             i5 = i5 + 1 | 0;
             HEAP8[i30 + i5 >> 0] = i9;
             i6 = HEAP8[i7 >> 0] | 0;
            } while (i5 >>> 0 < (i6 & 255) >>> 0);
            i5 = i7;
           } else i5 = i7;
           break;
          }
         default:
          {}
         } while (0);
         HEAP8[i30 + ((i6 & 255) + 1) >> 0] = i9;
         i5 = i5 + 1 | 0;
        }
       } while (0);
       i6 = i15 ? i17 + 1 | 0 : 31;
       i11 = (i12 | 0) == 1;
       i12 = (i4 | 0) != 0;
       L80 : do if (i11) {
        if (i12) {
         i2 = _malloc(i6 << 2) | 0;
         if (!i2) {
          i3 = 0;
          i2 = 0;
          i33 = 143;
          break L6;
         }
        } else i2 = i18;
        HEAP32[i29 >> 2] = 0;
        HEAP32[i19 >> 2] = 0;
        i3 = 0;
        L85 : while (1) {
         i9 = (i2 | 0) == 0;
         do {
          L89 : while (1) {
           i7 = HEAP32[i20 >> 2] | 0;
           if (i7 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
            HEAP32[i20 >> 2] = i7 + 1;
            i7 = HEAPU8[i7 >> 0] | 0;
           } else i7 = ___shgetc(i34) | 0;
           if (!(HEAP8[i30 + (i7 + 1) >> 0] | 0)) break L85;
           HEAP8[i32 >> 0] = i7;
           switch (_mbrtowc(i31, i32, 1, i29) | 0) {
           case -1:
            {
             i3 = 0;
             i33 = 143;
             break L6;
            }
           case -2:
            break;
           default:
            break L89;
           }
          }
          if (!i9) {
           HEAP32[i2 + (i3 << 2) >> 2] = HEAP32[i31 >> 2];
           i3 = i3 + 1 | 0;
          }
         } while (!(i12 & (i3 | 0) == (i6 | 0)));
         i6 = i6 << 1 | 1;
         i7 = _realloc(i2, i6 << 2) | 0;
         if (!i7) {
          i3 = 0;
          i33 = 143;
          break L6;
         } else i2 = i7;
        }
        if (!(_mbsinit(i29) | 0)) {
         i3 = 0;
         i33 = 143;
         break L6;
        } else {
         i9 = i3;
         i3 = 0;
         i10 = i2;
        }
       } else {
        if (i12) {
         i3 = _malloc(i6) | 0;
         if (!i3) {
          i3 = 0;
          i2 = 0;
          i33 = 143;
          break L6;
         }
         i2 = 0;
         while (1) {
          i9 = i2;
          do {
           i2 = HEAP32[i20 >> 2] | 0;
           if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
            HEAP32[i20 >> 2] = i2 + 1;
            i2 = HEAPU8[i2 >> 0] | 0;
           } else i2 = ___shgetc(i34) | 0;
           if (!(HEAP8[i30 + (i2 + 1) >> 0] | 0)) {
            i10 = 0;
            i2 = 0;
            break L80;
           }
           i10 = i9;
           i9 = i9 + 1 | 0;
           HEAP8[i3 + i10 >> 0] = i2;
          } while ((i9 | 0) != (i6 | 0));
          i6 = i6 << 1 | 1;
          i7 = _realloc(i3, i6) | 0;
          if (!i7) {
           i2 = 0;
           i33 = 143;
           break L6;
          } else {
           i2 = i9;
           i3 = i7;
          }
         }
        }
        if (!i18) while (1) {
         i2 = HEAP32[i20 >> 2] | 0;
         if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
          HEAP32[i20 >> 2] = i2 + 1;
          i2 = HEAPU8[i2 >> 0] | 0;
         } else i2 = ___shgetc(i34) | 0;
         if (!(HEAP8[i30 + (i2 + 1) >> 0] | 0)) {
          i9 = 0;
          i3 = 0;
          i10 = 0;
          i2 = 0;
          break L80;
         }
        }
        i3 = 0;
        while (1) {
         i2 = HEAP32[i20 >> 2] | 0;
         if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
          HEAP32[i20 >> 2] = i2 + 1;
          i2 = HEAPU8[i2 >> 0] | 0;
         } else i2 = ___shgetc(i34) | 0;
         if (!(HEAP8[i30 + (i2 + 1) >> 0] | 0)) {
          i9 = i3;
          i3 = i18;
          i10 = 0;
          i2 = 0;
          break L80;
         }
         HEAP8[i18 + i3 >> 0] = i2;
         i3 = i3 + 1 | 0;
        }
       } while (0);
       if (!(HEAP32[i21 >> 2] | 0)) i6 = HEAP32[i20 >> 2] | 0; else {
        i6 = (HEAP32[i20 >> 2] | 0) + -1 | 0;
        HEAP32[i20 >> 2] = i6;
       }
       i7 = i22;
       i6 = i6 - (HEAP32[i23 >> 2] | 0) | 0;
       i6 = _i64Add(HEAP32[i7 >> 2] | 0, HEAP32[i7 + 4 >> 2] | 0, i6 | 0, ((i6 | 0) < 0) << 31 >> 31 | 0) | 0;
       i7 = getTempRet0() | 0;
       if ((i6 | 0) == 0 & (i7 | 0) == 0) break L6;
       if (!((i6 | 0) == (i17 | 0) & (i7 | 0) == (i16 | 0) | i15 ^ 1)) break L6;
       do if (i12) if (i11) {
        HEAP32[i18 >> 2] = i10;
        break;
       } else {
        HEAP32[i18 >> 2] = i3;
        break;
       } while (0);
       if (!i15) {
        if (i10 | 0) HEAP32[i10 + (i9 << 2) >> 2] = 0;
        if (!i3) {
         i3 = 0;
         break L59;
        }
        HEAP8[i3 + i9 >> 0] = 0;
       }
       break;
      }
     case 120:
     case 88:
     case 112:
      {
       i6 = 16;
       i33 = 131;
       break;
      }
     case 111:
      {
       i6 = 8;
       i33 = 131;
       break;
      }
     case 117:
     case 100:
      {
       i6 = 10;
       i33 = 131;
       break;
      }
     case 105:
      {
       i6 = 0;
       i33 = 131;
       break;
      }
     case 71:
     case 103:
     case 70:
     case 102:
     case 69:
     case 101:
     case 65:
     case 97:
      {
       d8 = +___floatscan(i34, i12, 0);
       i17 = i22;
       i15 = HEAP32[i17 >> 2] | 0;
       i17 = HEAP32[i17 + 4 >> 2] | 0;
       i16 = (HEAP32[i20 >> 2] | 0) - (HEAP32[i23 >> 2] | 0) | 0;
       i16 = _i64Subtract(0, 0, i16 | 0, ((i16 | 0) < 0) << 31 >> 31 | 0) | 0;
       if ((i15 | 0) == (i16 | 0) & (i17 | 0) == (getTempRet0() | 0)) break L6;
       if (i18) switch (i12 | 0) {
       case 0:
        {
         HEAPF32[i18 >> 2] = d8;
         break L59;
        }
       case 1:
        {
         HEAPF64[i18 >> 3] = d8;
         break L59;
        }
       case 2:
        {
         HEAPF64[i18 >> 3] = d8;
         break L59;
        }
       default:
        break L59;
       }
       break;
      }
     default:
      {}
     } while (0);
     do if ((i33 | 0) == 131) {
      i33 = 0;
      i6 = ___intscan(i34, i6, 0, -1, -1) | 0;
      i7 = getTempRet0() | 0;
      i17 = i22;
      i15 = HEAP32[i17 >> 2] | 0;
      i17 = HEAP32[i17 + 4 >> 2] | 0;
      i16 = (HEAP32[i20 >> 2] | 0) - (HEAP32[i23 >> 2] | 0) | 0;
      i16 = _i64Subtract(0, 0, i16 | 0, ((i16 | 0) < 0) << 31 >> 31 | 0) | 0;
      if ((i15 | 0) == (i16 | 0) & (i17 | 0) == (getTempRet0() | 0)) break L6;
      if ((i18 | 0) != 0 & (i11 | 0) == 112) {
       HEAP32[i18 >> 2] = i6;
       break;
      } else {
       _store_int_669(i18, i12, i6, i7);
       break;
      }
     } while (0);
     i7 = i22;
     i6 = (HEAP32[i20 >> 2] | 0) - (HEAP32[i23 >> 2] | 0) | 0;
     i7 = _i64Add(HEAP32[i7 >> 2] | 0, HEAP32[i7 + 4 >> 2] | 0, i13 | 0, i14 | 0) | 0;
     i6 = _i64Add(i7 | 0, getTempRet0() | 0, i6 | 0, ((i6 | 0) < 0) << 31 >> 31 | 0) | 0;
     i1 = i1 + ((i18 | 0) != 0 & 1) | 0;
     i7 = getTempRet0() | 0;
     break L8;
    } while (0);
    i5 = i5 + (i6 & 1) | 0;
    ___shlim(i34, 0, 0);
    i4 = HEAP32[i20 >> 2] | 0;
    if (i4 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
     HEAP32[i20 >> 2] = i4 + 1;
     i4 = HEAPU8[i4 >> 0] | 0;
    } else i4 = ___shgetc(i34) | 0;
    if ((i4 | 0) != (HEAPU8[i5 >> 0] | 0)) {
     i33 = 23;
     break L6;
    }
    i6 = _i64Add(i13 | 0, i14 | 0, 1, 0) | 0;
    i7 = getTempRet0() | 0;
   } else {
    while (1) {
     i4 = i5 + 1 | 0;
     if (!(_isspace(HEAPU8[i4 >> 0] | 0) | 0)) break; else i5 = i4;
    }
    ___shlim(i34, 0, 0);
    do {
     i4 = HEAP32[i20 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
      HEAP32[i20 >> 2] = i4 + 1;
      i4 = HEAPU8[i4 >> 0] | 0;
     } else i4 = ___shgetc(i34) | 0;
    } while ((_isspace(i4) | 0) != 0);
    if (!(HEAP32[i21 >> 2] | 0)) i4 = HEAP32[i20 >> 2] | 0; else {
     i4 = (HEAP32[i20 >> 2] | 0) + -1 | 0;
     HEAP32[i20 >> 2] = i4;
    }
    i7 = i22;
    i6 = i4 - (HEAP32[i23 >> 2] | 0) | 0;
    i7 = _i64Add(HEAP32[i7 >> 2] | 0, HEAP32[i7 + 4 >> 2] | 0, i13 | 0, i14 | 0) | 0;
    i6 = _i64Add(i7 | 0, getTempRet0() | 0, i6 | 0, ((i6 | 0) < 0) << 31 >> 31 | 0) | 0;
    i7 = getTempRet0() | 0;
   } while (0);
   i5 = i5 + 1 | 0;
   i4 = HEAP8[i5 >> 0] | 0;
   if (!(i4 << 24 >> 24)) break L4; else {
    i13 = i6;
    i14 = i7;
   }
  }
  if ((i33 | 0) == 23) {
   if (HEAP32[i21 >> 2] | 0) HEAP32[i20 >> 2] = (HEAP32[i20 >> 2] | 0) + -1;
   if ((i1 | 0) != 0 | (i4 | 0) > -1) break; else {
    i4 = 0;
    i1 = i3;
    i33 = 144;
   }
  } else if ((i33 | 0) == 143) if (!i1) {
   i1 = i3;
   i33 = 144;
  }
  if ((i33 | 0) == 144) {
   i3 = i1;
   i1 = -1;
  }
  if (i4) {
   _free(i3);
   _free(i2);
  }
 } else i1 = 0; while (0);
 if (i35 | 0) ___unlockfile(i34);
 STACKTOP = i36;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_(i1, i3, i11) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i11 = i11 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i12 = i13 + 64 | 0;
 i6 = i13 + 48 | 0;
 i7 = i13 + 36 | 0;
 i8 = i13 + 24 | 0;
 i9 = i13 + 12 | 0;
 i10 = i13;
 L1 : do if ((i3 - i1 | 0) > 3 ? (HEAP8[i1 >> 0] | 0) == 76 : 0) {
  i2 = i1 + 1 | 0;
  do switch (HEAP8[i2 >> 0] | 0) {
  case 84:
   break L1;
  case 119:
   {
    i10 = i1 + 2 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i12, 51718, __ZNSt3__211char_traitsIcE6lengthEPKc(51718) | 0);
    i11 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i10, i3, i12, i11) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i11 | 0) == (i10 | 0) ? i1 : i11;
    break L1;
   }
  case 98:
   {
    if ((HEAP8[i1 + 3 >> 0] | 0) != 69) break L1;
    switch (HEAP8[i1 + 2 >> 0] | 0) {
    case 48:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc(i12, 51726);
      i2 = i11 + 4 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if (i3 >>> 0 < (HEAP32[i11 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i12);
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i11, i12);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i12);
      i1 = i1 + 4 | 0;
      break L1;
     }
    case 49:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc(i12, 51732);
      i2 = i11 + 4 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if (i3 >>> 0 < (HEAP32[i11 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i12);
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i11, i12);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i12);
      i1 = i1 + 4 | 0;
      break L1;
     }
    default:
     break L1;
    }
   }
  case 99:
   {
    i10 = i1 + 2 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i12, 51737, __ZNSt3__211char_traitsIcE6lengthEPKc(51737) | 0);
    i11 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i10, i3, i12, i11) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i11 | 0) == (i10 | 0) ? i1 : i11;
    break L1;
   }
  case 97:
   {
    i10 = i1 + 2 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i12, 51742, __ZNSt3__211char_traitsIcE6lengthEPKc(51742) | 0);
    i11 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i10, i3, i12, i11) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i11 | 0) == (i10 | 0) ? i1 : i11;
    break L1;
   }
  case 104:
   {
    i10 = i1 + 2 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i12, 51754, __ZNSt3__211char_traitsIcE6lengthEPKc(51754) | 0);
    i11 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i10, i3, i12, i11) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i11 | 0) == (i10 | 0) ? i1 : i11;
    break L1;
   }
  case 115:
   {
    i10 = i1 + 2 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i12, 51768, __ZNSt3__211char_traitsIcE6lengthEPKc(51768) | 0);
    i11 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i10, i3, i12, i11) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i11 | 0) == (i10 | 0) ? i1 : i11;
    break L1;
   }
  case 116:
   {
    i10 = i1 + 2 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i12, 51774, __ZNSt3__211char_traitsIcE6lengthEPKc(51774) | 0);
    i11 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i10, i3, i12, i11) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i11 | 0) == (i10 | 0) ? i1 : i11;
    break L1;
   }
  case 105:
   {
    i10 = i1 + 2 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i12, 59242, __ZNSt3__211char_traitsIcE6lengthEPKc(59242) | 0);
    i11 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i10, i3, i12, i11) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i11 | 0) == (i10 | 0) ? i1 : i11;
    break L1;
   }
  case 106:
   {
    i10 = i1 + 2 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i12, 51789, __ZNSt3__211char_traitsIcE6lengthEPKc(51789) | 0);
    i11 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i10, i3, i12, i11) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i11 | 0) == (i10 | 0) ? i1 : i11;
    break L1;
   }
  case 108:
   {
    i10 = i1 + 2 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i12, 51791, __ZNSt3__211char_traitsIcE6lengthEPKc(51791) | 0);
    i11 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i10, i3, i12, i11) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i11 | 0) == (i10 | 0) ? i1 : i11;
    break L1;
   }
  case 109:
   {
    i10 = i1 + 2 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i12, 51793, __ZNSt3__211char_traitsIcE6lengthEPKc(51793) | 0);
    i11 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i10, i3, i12, i11) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i11 | 0) == (i10 | 0) ? i1 : i11;
    break L1;
   }
  case 120:
   {
    i10 = i1 + 2 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i12, 51796, __ZNSt3__211char_traitsIcE6lengthEPKc(51796) | 0);
    i11 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i10, i3, i12, i11) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i11 | 0) == (i10 | 0) ? i1 : i11;
    break L1;
   }
  case 121:
   {
    i10 = i1 + 2 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i12, 51799, __ZNSt3__211char_traitsIcE6lengthEPKc(51799) | 0);
    i11 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i10, i3, i12, i11) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i11 | 0) == (i10 | 0) ? i1 : i11;
    break L1;
   }
  case 110:
   {
    i10 = i1 + 2 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i12, 51803, __ZNSt3__211char_traitsIcE6lengthEPKc(51803) | 0);
    i11 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i10, i3, i12, i11) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i11 | 0) == (i10 | 0) ? i1 : i11;
    break L1;
   }
  case 111:
   {
    i10 = i1 + 2 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i12, 51812, __ZNSt3__211char_traitsIcE6lengthEPKc(51812) | 0);
    i11 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i10, i3, i12, i11) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i11 | 0) == (i10 | 0) ? i1 : i11;
    break L1;
   }
  case 102:
   {
    i10 = i1 + 2 | 0;
    i12 = __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIfNS0_2DbEEEPKcS4_S4_RT0_(i10, i3, i11) | 0;
    i1 = (i12 | 0) == (i10 | 0) ? i1 : i12;
    break L1;
   }
  case 100:
   {
    i10 = i1 + 2 | 0;
    i12 = __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIdNS0_2DbEEEPKcS4_S4_RT0_(i10, i3, i11) | 0;
    i1 = (i12 | 0) == (i10 | 0) ? i1 : i12;
    break L1;
   }
  case 101:
   {
    i10 = i1 + 2 | 0;
    i12 = __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIeNS0_2DbEEEPKcS4_S4_RT0_(i10, i3, i11) | 0;
    i1 = (i12 | 0) == (i10 | 0) ? i1 : i12;
    break L1;
   }
  case 95:
   {
    if ((HEAP8[i1 + 2 >> 0] | 0) != 90) break L1;
    i12 = i1 + 3 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i12, i3, i11) | 0;
    if ((i2 | 0) == (i12 | 0) | (i2 | 0) == (i3 | 0)) break L1;
    i1 = (HEAP8[i2 >> 0] | 0) == 69 ? i2 + 1 | 0 : i1;
    break L1;
   }
  default:
   {
    i5 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i2, i3, i11) | 0;
    if ((i5 | 0) == (i2 | 0) | (i5 | 0) == (i3 | 0)) break L1;
    if ((HEAP8[i5 >> 0] | 0) == 69) {
     i1 = i5 + 1 | 0;
     break L1;
    }
    i4 = i5;
    while (1) {
     if ((i4 | 0) == (i3 | 0)) break L1;
     i2 = HEAP8[i4 >> 0] | 0;
     if (((i2 << 24 >> 24) + -48 | 0) >>> 0 >= 10) break;
     i4 = i4 + 1 | 0;
    }
    if (!((i4 | 0) != (i5 | 0) & i2 << 24 >> 24 == 69)) break L1;
    i3 = i11 + 4 | 0;
    i2 = HEAP32[i3 >> 2] | 0;
    if ((HEAP32[i11 >> 2] | 0) == (i2 | 0)) break L1;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i9, i2 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i9, 0, 50526) | 0;
    HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
    HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i9 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i8, 50524) | 0;
    HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
    HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
    HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i8 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    HEAP32[i10 >> 2] = 0;
    HEAP32[i10 + 4 >> 2] = 0;
    HEAP32[i10 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i10, i5, i4);
    i1 = HEAP8[i10 + 11 >> 0] | 0;
    i11 = i1 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i7, i11 ? HEAP32[i10 >> 2] | 0 : i10, i11 ? HEAP32[i10 + 4 >> 2] | 0 : i1 & 255) | 0;
    HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
    HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i7 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i12, i6);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i3 >> 2] | 0) + -24 | 0, i12);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i12);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
    i1 = i4 + 1 | 0;
    break L1;
   }
  } while (0);
 } while (0);
 STACKTOP = i13;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i9, i10) {
 i1 = i1 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i12 = i13 + 12 | 0;
 i11 = i13;
 i2 = i9;
 L1 : do if ((i2 - i1 | 0) > 2) {
  if ((HEAP8[i1 >> 0] | 0) == 103) {
   i3 = (HEAP8[i1 + 1 >> 0] | 0) == 115;
   i5 = i3;
   i3 = i3 ? i1 + 2 | 0 : i1;
  } else {
   i5 = 0;
   i3 = i1;
  }
  i4 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i3, i9, i10) | 0;
  if ((i4 | 0) != (i3 | 0)) {
   if (!i5) {
    i1 = i4;
    break;
   }
   i2 = HEAP32[i10 + 4 >> 2] | 0;
   if ((HEAP32[i10 >> 2] | 0) == (i2 | 0)) break;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i2 + -24 | 0, 0, 50598) | 0;
   i1 = i4;
   break;
  }
  if (((i2 - i3 | 0) > 2 ? (HEAP8[i3 >> 0] | 0) == 115 : 0) ? (HEAP8[i3 + 1 >> 0] | 0) == 114 : 0) {
   i4 = i3 + 2 | 0;
   if ((HEAP8[i4 >> 0] | 0) == 78) {
    i8 = i3 + 3 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_(i8, i9, i10) | 0;
    if ((i2 | 0) == (i8 | 0) | (i2 | 0) == (i9 | 0)) break;
    i4 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i2, i9, i10) | 0;
    i8 = i10 + 4 | 0;
    do if ((i4 | 0) == (i2 | 0)) i7 = i10; else {
     i2 = HEAP32[i8 >> 2] | 0;
     if (((i2 - (HEAP32[i10 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i12, i2 + -24 | 0);
     i3 = HEAP32[i8 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i7 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i7 * 24 | 0) | 0);
      i2 = i7;
     }
     HEAP32[i8 >> 2] = i3 + -24;
     i7 = HEAP8[i12 + 11 >> 0] | 0;
     i6 = i7 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i3 + -48 | 0, i6 ? HEAP32[i12 >> 2] | 0 : i12, i6 ? HEAP32[i12 + 4 >> 2] | 0 : i7 & 255) | 0;
     if ((i4 | 0) != (i9 | 0)) {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
      i2 = i4;
      i7 = i10;
      break;
     }
     i3 = HEAP32[i8 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i11 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i11 * 24 | 0) | 0);
      i2 = i11;
     }
     HEAP32[i8 >> 2] = i3 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
     break L1;
    } while (0);
    i5 = i11 + 11 | 0;
    i6 = i11 + 4 | 0;
    while (1) {
     if ((HEAP8[i2 >> 0] | 0) == 69) break;
     i4 = __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_(i2, i9, i10) | 0;
     if ((i4 | 0) == (i2 | 0) | (i4 | 0) == (i9 | 0)) break L1;
     i2 = HEAP32[i8 >> 2] | 0;
     if (((i2 - (HEAP32[i7 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i12, i2 + -24 | 0);
     i3 = HEAP32[i8 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i14 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i14 * 24 | 0) | 0);
      i2 = i14;
     }
     HEAP32[i8 >> 2] = i3 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i12, 0, 50598) | 0;
     HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
     HEAP32[i11 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
     HEAP32[i11 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      HEAP32[i12 + (i2 << 2) >> 2] = 0;
      i2 = i2 + 1 | 0;
     }
     i2 = HEAP8[i5 >> 0] | 0;
     i14 = i2 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i8 >> 2] | 0) + -24 | 0, i14 ? HEAP32[i11 >> 2] | 0 : i11, i14 ? HEAP32[i6 >> 2] | 0 : i2 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
     i2 = i4;
    }
    i14 = i2 + 1 | 0;
    i3 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i14, i9, i10) | 0;
    if ((i3 | 0) == (i14 | 0)) {
     i3 = HEAP32[i8 >> 2] | 0;
     if ((HEAP32[i10 >> 2] | 0) == (i3 | 0)) break;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i14 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i14 * 24 | 0) | 0);
      i2 = i14;
     }
     HEAP32[i8 >> 2] = i3 + -24;
     break;
    }
    i2 = HEAP32[i8 >> 2] | 0;
    if (((i2 - (HEAP32[i7 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i12, i2 + -24 | 0);
    i2 = HEAP32[i8 >> 2] | 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == -1) break;
     i14 = i1 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i14 * 24 | 0) | 0);
     i1 = i14;
    }
    HEAP32[i8 >> 2] = i2 + -24;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i12, 0, 50598) | 0;
    HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
    HEAP32[i11 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
    HEAP32[i11 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i12 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    i1 = HEAP8[i11 + 11 >> 0] | 0;
    i14 = i1 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i8 >> 2] | 0) + -24 | 0, i14 ? HEAP32[i11 >> 2] | 0 : i11, i14 ? HEAP32[i11 + 4 >> 2] | 0 : i1 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = i3;
    break;
   }
   i2 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_(i4, i9, i10) | 0;
   if ((i2 | 0) != (i4 | 0)) {
    i5 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i2, i9, i10) | 0;
    if ((i5 | 0) != (i2 | 0)) {
     i4 = i10 + 4 | 0;
     i2 = HEAP32[i4 >> 2] | 0;
     if (((i2 - (HEAP32[i10 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i12, i2 + -24 | 0);
     i3 = HEAP32[i4 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i14 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i14 * 24 | 0) | 0);
      i2 = i14;
     }
     HEAP32[i4 >> 2] = i3 + -24;
     i2 = HEAP8[i12 + 11 >> 0] | 0;
     i14 = i2 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i3 + -48 | 0, i14 ? HEAP32[i12 >> 2] | 0 : i12, i14 ? HEAP32[i12 + 4 >> 2] | 0 : i2 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
     i2 = i5;
    }
    i4 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i2, i9, i10) | 0;
    if ((i4 | 0) == (i2 | 0)) {
     i3 = i10 + 4 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if ((HEAP32[i10 >> 2] | 0) == (i4 | 0)) break;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i14 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4 + (i14 * 24 | 0) | 0);
      i2 = i14;
     }
     HEAP32[i3 >> 2] = i4 + -24;
     break;
    }
    i3 = i10 + 4 | 0;
    i2 = HEAP32[i3 >> 2] | 0;
    if (((i2 - (HEAP32[i10 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i12, i2 + -24 | 0);
    i2 = HEAP32[i3 >> 2] | 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == -1) break;
     i14 = i1 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i14 * 24 | 0) | 0);
     i1 = i14;
    }
    HEAP32[i3 >> 2] = i2 + -24;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i12, 0, 50598) | 0;
    HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
    HEAP32[i11 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
    HEAP32[i11 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i12 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    i1 = HEAP8[i11 + 11 >> 0] | 0;
    i14 = i1 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i3 >> 2] | 0) + -24 | 0, i14 ? HEAP32[i11 >> 2] | 0 : i11, i14 ? HEAP32[i11 + 4 >> 2] | 0 : i1 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = i4;
    break;
   }
   i6 = __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_(i4, i9, i10) | 0;
   if (!((i6 | 0) == (i4 | 0) | (i6 | 0) == (i9 | 0))) {
    if (i5) {
     i2 = i10 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((HEAP32[i10 >> 2] | 0) == (i3 | 0)) break;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i3 + -24 | 0, 0, 50598) | 0;
     i8 = i2;
    } else i8 = i10 + 4 | 0;
    i5 = i11 + 11 | 0;
    i7 = i11 + 4 | 0;
    i2 = i6;
    while (1) {
     if ((HEAP8[i2 >> 0] | 0) == 69) break;
     i4 = __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_(i2, i9, i10) | 0;
     if ((i4 | 0) == (i2 | 0) | (i4 | 0) == (i9 | 0)) break L1;
     i2 = HEAP32[i8 >> 2] | 0;
     if (((i2 - (HEAP32[i10 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i12, i2 + -24 | 0);
     i3 = HEAP32[i8 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i14 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i14 * 24 | 0) | 0);
      i2 = i14;
     }
     HEAP32[i8 >> 2] = i3 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i12, 0, 50598) | 0;
     HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
     HEAP32[i11 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
     HEAP32[i11 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      HEAP32[i12 + (i2 << 2) >> 2] = 0;
      i2 = i2 + 1 | 0;
     }
     i2 = HEAP8[i5 >> 0] | 0;
     i14 = i2 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i8 >> 2] | 0) + -24 | 0, i14 ? HEAP32[i11 >> 2] | 0 : i11, i14 ? HEAP32[i7 >> 2] | 0 : i2 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
     i2 = i4;
    }
    i14 = i2 + 1 | 0;
    i3 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i14, i9, i10) | 0;
    if ((i3 | 0) == (i14 | 0)) {
     i3 = HEAP32[i8 >> 2] | 0;
     if ((HEAP32[i10 >> 2] | 0) == (i3 | 0)) break;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i14 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i14 * 24 | 0) | 0);
      i2 = i14;
     }
     HEAP32[i8 >> 2] = i3 + -24;
     break;
    }
    i2 = HEAP32[i8 >> 2] | 0;
    if (((i2 - (HEAP32[i10 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i12, i2 + -24 | 0);
     i2 = HEAP32[i8 >> 2] | 0;
     i1 = 0;
     while (1) {
      if ((i1 | 0) == -1) break;
      i14 = i1 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i14 * 24 | 0) | 0);
      i1 = i14;
     }
     HEAP32[i8 >> 2] = i2 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i12, 0, 50598) | 0;
     HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
     HEAP32[i11 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
     HEAP32[i11 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i12 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     i1 = HEAP8[i11 + 11 >> 0] | 0;
     i14 = i1 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i8 >> 2] | 0) + -24 | 0, i14 ? HEAP32[i11 >> 2] | 0 : i11, i14 ? HEAP32[i11 + 4 >> 2] | 0 : i1 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
     i1 = i3;
    }
   }
  }
 } while (0);
 STACKTOP = i13;
 return i1 | 0;
}

function _arDetectMarker(i37, i35) {
 i37 = i37 | 0;
 i35 = i35 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, d8 = 0.0, i9 = 0, d10 = 0.0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, d36 = 0.0, i38 = 0, i39 = 0, d40 = 0.0, d41 = 0.0;
 i39 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i33 = i39 + 32 | 0;
 i27 = i39 + 24 | 0;
 i20 = i39;
 i31 = i39 + 52 | 0;
 i24 = i39 + 40 | 0;
 L1 : do if ((i37 | 0) != 0 & (i35 | 0) != 0) {
  i38 = i37 + 44 | 0;
  HEAP32[i38 >> 2] = 0;
  i32 = i37 + 7062388 | 0;
  i1 = HEAP32[i32 >> 2] | 0;
  L3 : do if ((i1 | 0) == 4) {
   i29 = i37 + 7062396 | 0;
   i1 = HEAP32[i29 >> 2] | 0;
   do if ((i1 | 0) > 0) HEAP32[i29 >> 2] = i1 + -1; else {
    i23 = i37 + 16 | 0;
    i25 = HEAP32[i23 >> 2] | 0;
    i26 = i37 + 7062400 | 0;
    i21 = (HEAP32[i26 >> 2] | 0) + i25 | 0;
    i21 = (i21 | 0) < 255 ? i21 : 255;
    HEAP32[i31 >> 2] = i21;
    i28 = i37 + 7062404 | 0;
    i22 = i25 - (HEAP32[i28 >> 2] | 0) | 0;
    i22 = (i22 | 0) > 0 ? i22 : 0;
    HEAP32[i31 + 4 >> 2] = i22;
    HEAP32[i31 + 8 >> 2] = i25;
    i2 = i35 + 12 | 0;
    i3 = i37 + 36 | 0;
    i4 = i37 + 40 | 0;
    i5 = i37 + 12 | 0;
    i6 = i37 + 20 | 0;
    i9 = i37 + 4834144 | 0;
    i11 = i37 + 15416 | 0;
    i12 = i37 + 15408 | 0;
    i13 = i37 + 4 | 0;
    i14 = i37 + 7062384 | 0;
    i15 = i37 + 24 | 0;
    i16 = i37 + 32 | 0;
    i17 = i37 + 7062416 | 0;
    i18 = i37 + 48 | 0;
    i19 = i37 + 7062424 | 0;
    i1 = 0;
    while (1) {
     if (i1 >>> 0 >= 3) break;
     if ((_arLabeling(HEAP32[i2 >> 2] | 0, HEAP32[i3 >> 2] | 0, HEAP32[i4 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i5 >> 2] | 0, HEAP32[i31 + (i1 << 2) >> 2] | 0, HEAP32[i6 >> 2] | 0, i9, 0) | 0) < 0) {
      i34 = 29;
      break;
     }
     if ((_arDetectMarker2(HEAP32[i3 >> 2] | 0, HEAP32[i4 >> 2] | 0, i9, HEAP32[i6 >> 2] | 0, 1e6, 70, 1.0, i11, i12) | 0) < 0) {
      i34 = 29;
      break;
     }
     if ((_arGetMarkerInfo(HEAP32[i35 >> 2] | 0, HEAP32[i3 >> 2] | 0, HEAP32[i4 >> 2] | 0, HEAP32[i13 >> 2] | 0, i11, HEAP32[i12 >> 2] | 0, HEAP32[i14 >> 2] | 0, HEAP32[i6 >> 2] | 0, HEAP32[i15 >> 2] | 0, (HEAP32[i16 >> 2] | 0) + 184 | 0, +HEAPF64[i17 >> 3], i18, i38, HEAP32[i19 >> 2] | 0) | 0) < 0) {
      i34 = 29;
      break;
     }
     HEAP32[i24 + (i1 << 2) >> 2] = HEAP32[i38 >> 2];
     i1 = i1 + 1 | 0;
    }
    if ((i34 | 0) == 29) {
     i1 = -1;
     break L1;
    }
    if ((HEAP32[i37 >> 2] | 0) == 1) {
     i19 = HEAP32[i24 + 4 >> 2] | 0;
     i3 = HEAP32[i24 + 8 >> 2] | 0;
     i2 = HEAP32[i24 >> 2] | 0;
     HEAP32[i20 >> 2] = i22;
     HEAP32[i20 + 4 >> 2] = i19;
     HEAP32[i20 + 8 >> 2] = i25;
     HEAP32[i20 + 12 >> 2] = i3;
     HEAP32[i20 + 16 >> 2] = i21;
     HEAP32[i20 + 20 >> 2] = i2;
     _arLog(0, 3, 17770, i20);
    } else {
     i2 = HEAP32[i24 >> 2] | 0;
     i3 = HEAP32[i24 + 8 >> 2] | 0;
    }
    i1 = HEAP32[i24 + 4 >> 2] | 0;
    if ((i2 | 0) > (i3 | 0) | (i1 | 0) > (i3 | 0)) {
     i2 = (i2 | 0) < (i1 | 0) ? i22 : i21;
     HEAP32[i23 >> 2] = i2;
     i1 = i2 - i25 | 0;
     if ((i1 | 0) > 0) {
      HEAP32[i26 >> 2] = i1;
      i1 = 1;
     } else {
      HEAP32[i26 >> 2] = 1;
      i1 = 0 - i1 | 0;
     }
     HEAP32[i28 >> 2] = i1;
     if ((HEAP32[i37 >> 2] | 0) == 1) {
      HEAP32[i27 >> 2] = i2;
      _arLog(0, 3, 17846, i27);
      HEAP32[i29 >> 2] = HEAP32[i37 + 7062392 >> 2];
      break;
     } else {
      HEAP32[i29 >> 2] = HEAP32[i37 + 7062392 >> 2];
      break;
     }
    }
    i1 = HEAP32[i26 >> 2] | 0;
    i2 = HEAP32[i28 >> 2] | 0;
    do if ((i1 | 0) >= (i2 | 0)) if ((i1 | 0) > (i2 | 0)) {
     HEAP32[i28 >> 2] = i2 + 1;
     break;
    } else {
     i1 = i1 + 1 | 0;
     HEAP32[i26 >> 2] = i1;
     HEAP32[i28 >> 2] = i2 + 1;
     break;
    } else {
     i1 = i1 + 1 | 0;
     HEAP32[i26 >> 2] = i1;
    } while (0);
    if ((i1 + i25 | 0) > 254) {
     HEAP32[i26 >> 2] = 1;
     i1 = 1;
    }
    if ((i25 | 0) <= (i1 | 0)) HEAP32[i28 >> 2] = 1;
    HEAP32[i29 >> 2] = HEAP32[i37 + 7062392 >> 2];
    break L3;
   } while (0);
   i3 = HEAP32[i32 >> 2] | 0;
   i34 = 33;
  } else {
   i3 = i1;
   i34 = 33;
  } while (0);
  if ((i34 | 0) == 33) {
   L47 : do switch (i3 | 0) {
   case 3:
    {
     i2 = i37 + 7062408 | 0;
     i3 = i35 + 12 | 0;
     i1 = _arImageProcLumaHistAndBoxFilterWithBias(HEAP32[i2 >> 2] | 0, HEAP32[i3 >> 2] | 0, 9, -7) | 0;
     if ((i1 | 0) < 0) break L1;
     i1 = HEAP32[i2 >> 2] | 0;
     i6 = i37 + 4834144 | 0;
     i1 = _arLabeling(HEAP32[i3 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0, HEAP32[i1 + 8 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i37 + 12 >> 2] | 0, 0, 0, i6, HEAP32[i1 >> 2] | 0) | 0;
     if ((i1 | 0) < 0) break L1;
     i1 = i37 + 36 | 0;
     i2 = i37 + 40 | 0;
     i3 = i37 + 20 | 0;
     break;
    }
   case 2:
   case 1:
    {
     i4 = i37 + 7062396 | 0;
     i1 = HEAP32[i4 >> 2] | 0;
     if ((i1 | 0) > 0) {
      HEAP32[i4 >> 2] = i1 + -1;
      i34 = 48;
      break L47;
     }
     i1 = HEAP32[i37 + 7062408 >> 2] | 0;
     i2 = HEAP32[i35 + 12 >> 2] | 0;
     if ((i3 | 0) == 1) i1 = _arImageProcLumaHistAndCDFAndMedian(i1, i2, i31) | 0; else i1 = _arImageProcLumaHistAndOtsu(i1, i2, i31) | 0;
     if ((i1 | 0) < 0) break L1;
     i1 = i37 + 16 | 0;
     if ((HEAP32[i37 >> 2] | 0) == 1 ? (i30 = HEAPU8[i31 >> 0] | 0, (HEAP32[i1 >> 2] | 0) != (i30 | 0)) : 0) {
      HEAP32[i33 >> 2] = (HEAP32[i32 >> 2] | 0) == 1 ? 17898 : 17905;
      HEAP32[i33 + 4 >> 2] = i30;
      _arLog(0, 3, 17910, i33);
     }
     HEAP32[i1 >> 2] = HEAPU8[i31 >> 0];
     HEAP32[i4 >> 2] = HEAP32[i37 + 7062392 >> 2];
     i34 = 48;
     break;
    }
   default:
    i34 = 48;
   } while (0);
   if ((i34 | 0) == 48) {
    i1 = i37 + 36 | 0;
    i2 = i37 + 40 | 0;
    i3 = i37 + 20 | 0;
    i6 = i37 + 4834144 | 0;
    if ((_arLabeling(HEAP32[i35 + 12 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i2 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i37 + 12 >> 2] | 0, HEAP32[i37 + 16 >> 2] | 0, HEAP32[i3 >> 2] | 0, i6, 0) | 0) < 0) {
     i1 = -1;
     break;
    }
   }
   i4 = i37 + 15416 | 0;
   i5 = i37 + 15408 | 0;
   if ((_arDetectMarker2(HEAP32[i1 >> 2] | 0, HEAP32[i2 >> 2] | 0, i6, HEAP32[i3 >> 2] | 0, 1e6, 70, 1.0, i4, i5) | 0) < 0) {
    i1 = -1;
    break;
   }
   if ((_arGetMarkerInfo(HEAP32[i35 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i2 >> 2] | 0, HEAP32[i37 + 4 >> 2] | 0, i4, HEAP32[i5 >> 2] | 0, HEAP32[i37 + 7062384 >> 2] | 0, HEAP32[i3 >> 2] | 0, HEAP32[i37 + 24 >> 2] | 0, (HEAP32[i37 + 32 >> 2] | 0) + 184 | 0, +HEAPF64[i37 + 7062416 >> 3], i37 + 48 | 0, i38, HEAP32[i37 + 7062424 >> 2] | 0) | 0) < 0) {
    i1 = -1;
    break;
   }
  }
  i14 = i37 + 28 | 0;
  if ((HEAP32[i14 >> 2] | 0) == 1) {
   _confidenceCutoff(i37);
   i1 = 0;
   break;
  }
  i15 = i37 + 4818296 | 0;
  i12 = HEAP32[i15 >> 2] | 0;
  i13 = i37 + 24 | 0;
  i11 = 0;
  while (1) {
   if ((i11 | 0) >= (i12 | 0)) break;
   i3 = HEAP32[i38 >> 2] | 0;
   i4 = i37 + 4818304 + (i11 * 264 | 0) | 0;
   i5 = i37 + 4818304 + (i11 * 264 | 0) + 56 | 0;
   i6 = i37 + 4818304 + (i11 * 264 | 0) + 64 | 0;
   i2 = 0;
   i9 = -1;
   d7 = .5;
   while (1) {
    if ((i2 | 0) >= (i3 | 0)) break;
    d8 = +(HEAP32[i37 + 48 + (i2 << 8) >> 2] | 0);
    d10 = +(HEAP32[i4 >> 2] | 0) / d8;
    if (!(d10 < .7 | d10 > 1.43) ? (d10 = +HEAPF64[i37 + 48 + (i2 << 8) + 56 >> 3] - +HEAPF64[i5 >> 3], d36 = +HEAPF64[i37 + 48 + (i2 << 8) + 64 >> 3] - +HEAPF64[i6 >> 3], d36 = (d10 * d10 + d36 * d36) / d8, d36 < d7) : 0) {
     i1 = i2;
     d7 = d36;
    } else i1 = i9;
    i2 = i2 + 1 | 0;
    i9 = i1;
   }
   L85 : do if ((i9 | 0) > -1) {
    i6 = HEAP32[i13 >> 2] | 0;
    switch (i6 | 0) {
    case 2:
    case 1:
    case 0:
     break;
    case 4:
    case 3:
     {
      i2 = i37 + 48 + (i9 << 8) + 40 | 0;
      d8 = +HEAPF64[i37 + 4818304 + (i11 * 264 | 0) + 40 >> 3];
      if (!(+HEAPF64[i2 >> 3] < d8)) {
       i1 = i37 + 48 + (i9 << 8) + 48 | 0;
       d7 = +HEAPF64[i37 + 4818304 + (i11 * 264 | 0) + 48 >> 3];
       if (!(+HEAPF64[i1 >> 3] < d7)) break L85;
      } else {
       i1 = i37 + 48 + (i9 << 8) + 48 | 0;
       d7 = +HEAPF64[i37 + 4818304 + (i11 * 264 | 0) + 48 >> 3];
      }
      HEAPF64[i2 >> 3] = d8;
      HEAP32[i37 + 48 + (i9 << 8) + 8 >> 2] = HEAP32[i37 + 4818304 + (i11 * 264 | 0) + 8 >> 2];
      HEAPF64[i1 >> 3] = d7;
      HEAP32[i37 + 48 + (i9 << 8) + 12 >> 2] = HEAP32[i37 + 4818304 + (i11 * 264 | 0) + 12 >> 2];
      i2 = 0;
      i3 = -1;
      d8 = 1.0e8;
      while (1) {
       if ((i2 | 0) == 4) break;
       i1 = 0;
       d7 = 0.0;
       while (1) {
        if ((i1 | 0) == 4) break;
        i35 = i1 + i2 & 3;
        d40 = +HEAPF64[i37 + 4818304 + (i11 * 264 | 0) + 168 + (i1 << 4) >> 3] - +HEAPF64[i37 + 48 + (i9 << 8) + 168 + (i35 << 4) >> 3];
        d10 = +HEAPF64[i37 + 4818304 + (i11 * 264 | 0) + 168 + (i1 << 4) + 8 >> 3] - +HEAPF64[i37 + 48 + (i9 << 8) + 168 + (i35 << 4) + 8 >> 3];
        i1 = i1 + 1 | 0;
        d7 = d7 + (d40 * d40 + d10 * d10);
       }
       i35 = d7 < d8;
       i34 = i35 ? i2 : i3;
       i2 = i2 + 1 | 0;
       i3 = i34;
       d8 = i35 ? d7 : d8;
      }
      i35 = 4 - i3 | 0;
      HEAP32[i37 + 48 + (i9 << 8) + 20 >> 2] = (i35 + (HEAP32[i37 + 4818304 + (i11 * 264 | 0) + 20 >> 2] | 0) | 0) % 4 | 0;
      HEAP32[i37 + 48 + (i9 << 8) + 24 >> 2] = (i35 + (HEAP32[i37 + 4818304 + (i11 * 264 | 0) + 24 >> 2] | 0) | 0) % 4 | 0;
      break L85;
     }
    default:
     {
      i1 = -1;
      break L1;
     }
    }
    i1 = i37 + 48 + (i9 << 8) + 32 | 0;
    d10 = +HEAPF64[i37 + 4818304 + (i11 * 264 | 0) + 32 >> 3];
    if (+HEAPF64[i1 >> 3] < d10) {
     HEAPF64[i1 >> 3] = d10;
     i4 = HEAP32[i37 + 4818304 + (i11 * 264 | 0) + 4 >> 2] | 0;
     HEAP32[i37 + 48 + (i9 << 8) + 4 >> 2] = i4;
     i5 = i37 + 4818304 + (i11 * 264 | 0) + 16 | 0;
     i2 = -1;
     d7 = 1.0e8;
     i3 = 0;
     while (1) {
      if ((i3 | 0) == 4) break;
      i1 = 0;
      d8 = 0.0;
      while (1) {
       if ((i1 | 0) == 4) break;
       i35 = i1 + i3 & 3;
       d41 = +HEAPF64[i37 + 4818304 + (i11 * 264 | 0) + 168 + (i1 << 4) >> 3] - +HEAPF64[i37 + 48 + (i9 << 8) + 168 + (i35 << 4) >> 3];
       d40 = +HEAPF64[i37 + 4818304 + (i11 * 264 | 0) + 168 + (i1 << 4) + 8 >> 3] - +HEAPF64[i37 + 48 + (i9 << 8) + 168 + (i35 << 4) + 8 >> 3];
       i1 = i1 + 1 | 0;
       d8 = d8 + (d41 * d41 + d40 * d40);
      }
      if (d8 < d7) {
       i1 = (4 - i3 + (HEAP32[i5 >> 2] | 0) | 0) % 4 | 0;
       d7 = d8;
      } else i1 = i2;
      i2 = i1;
      i3 = i3 + 1 | 0;
     }
     HEAP32[i37 + 48 + (i9 << 8) + 16 >> 2] = i2;
     if (i6 >>> 0 < 2) {
      HEAP32[i37 + 48 + (i9 << 8) + 8 >> 2] = i4;
      HEAPF64[i37 + 48 + (i9 << 8) + 40 >> 3] = d10;
      HEAP32[i37 + 48 + (i9 << 8) + 20 >> 2] = i2;
      break;
     } else {
      HEAP32[i37 + 48 + (i9 << 8) + 12 >> 2] = i4;
      HEAPF64[i37 + 48 + (i9 << 8) + 48 >> 3] = d10;
      HEAP32[i37 + 48 + (i9 << 8) + 24 >> 2] = i2;
      break;
     }
    }
   } while (0);
   i11 = i11 + 1 | 0;
  }
  _confidenceCutoff(i37);
  i2 = 0;
  i1 = 0;
  while (1) {
   if ((i2 | 0) >= (HEAP32[i15 >> 2] | 0)) break;
   i34 = i37 + 4818304 + (i2 * 264 | 0) + 256 | 0;
   i35 = HEAP32[i34 >> 2] | 0;
   HEAP32[i34 >> 2] = i35 + 1;
   if ((i35 | 0) < 3) {
    if ((i2 | 0) != (i1 | 0)) _memcpy(i37 + 4818304 + (i1 * 264 | 0) | 0, i37 + 4818304 + (i2 * 264 | 0) | 0, 264) | 0;
    i1 = i1 + 1 | 0;
   }
   i2 = i2 + 1 | 0;
  }
  HEAP32[i15 >> 2] = i1;
  i2 = HEAP32[i38 >> 2] | 0;
  i6 = 0;
  while (1) {
   if ((i6 | 0) >= (i2 | 0)) break;
   i5 = i37 + 48 + (i6 << 8) | 0;
   i3 = HEAP32[i37 + 48 + (i6 << 8) + 4 >> 2] | 0;
   if ((i3 | 0) >= 0) {
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i1 | 0)) break;
     if ((HEAP32[i37 + 4818304 + (i4 * 264 | 0) + 4 >> 2] | 0) == (i3 | 0)) break;
     i4 = i4 + 1 | 0;
    }
    if ((i4 | 0) == (i1 | 0)) {
     if ((i1 | 0) == 60) break;
     i1 = i1 + 1 | 0;
     HEAP32[i15 >> 2] = i1;
    }
    _memcpy(i37 + 4818304 + (i4 * 264 | 0) | 0, i5 | 0, 256) | 0;
    HEAP32[i37 + 4818304 + (i4 * 264 | 0) + 256 >> 2] = 1;
   }
   i6 = i6 + 1 | 0;
  }
  if ((HEAP32[i14 >> 2] | 0) == 2) i1 = 0; else {
   i9 = 0;
   while (1) {
    if ((i9 | 0) >= (i1 | 0)) {
     i1 = 0;
     break L1;
    }
    i4 = i37 + 4818304 + (i9 * 264 | 0) | 0;
    i5 = i37 + 4818304 + (i9 * 264 | 0) + 56 | 0;
    i6 = i37 + 4818304 + (i9 * 264 | 0) + 64 | 0;
    i3 = 0;
    while (1) {
     if ((i3 | 0) >= (i2 | 0)) break;
     d7 = +(HEAP32[i37 + 48 + (i3 << 8) >> 2] | 0);
     d41 = +(HEAP32[i4 >> 2] | 0) / d7;
     if (!(d41 < .7 | d41 > 1.43) ? (d40 = +HEAPF64[i37 + 48 + (i3 << 8) + 56 >> 3] - +HEAPF64[i5 >> 3], d41 = +HEAPF64[i37 + 48 + (i3 << 8) + 64 >> 3] - +HEAPF64[i6 >> 3], (d40 * d40 + d41 * d41) / d7 < .5) : 0) break;
     i3 = i3 + 1 | 0;
    }
    if ((i3 | 0) == (i2 | 0)) {
     _memcpy(i37 + 48 + (i2 << 8) | 0, i37 + 4818304 + (i9 * 264 | 0) | 0, 256) | 0;
     i2 = i2 + 1 | 0;
     HEAP32[i38 >> 2] = i2;
     i1 = HEAP32[i15 >> 2] | 0;
    }
    i9 = i9 + 1 | 0;
   }
  }
 } else i1 = -1; while (0);
 STACKTOP = i39;
 return i1 | 0;
}

function __ZN6vision20SamplePyramidFREAK84EPfPKNS_25GaussianScaleSpacePyramidERKNS_12FeaturePointEPKfS8_S8_S8_S8_S8_ffffffff(i1, i2, i10, i11, i12, i13, i14, i15, i16, d17, d3, d4, d5, d6, d7, d8, d9) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 d17 = +d17;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 d7 = +d7;
 d8 = +d8;
 d9 = +d9;
 var i18 = 0, i19 = 0, i20 = 0, d21 = 0.0, d22 = 0.0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 i53 = i18 + 288 | 0;
 i23 = i18 + 240 | 0;
 i28 = i18 + 192 | 0;
 i33 = i18 + 144 | 0;
 i38 = i18 + 96 | 0;
 i43 = i18 + 48 | 0;
 i48 = i18;
 i20 = i18 + 328 | 0;
 i19 = i18 + 324 | 0;
 d22 = +HEAPF32[i10 + 12 >> 2] * d9;
 d22 = d22 < 1.0 ? 1.0 : d22;
 __ZN6vision10SimilarityIfEEvPT_S1_S1_S1_S1_(i53, +HEAPF32[i10 >> 2], +HEAPF32[i10 + 4 >> 2], +HEAPF32[i10 + 8 >> 2], d22);
 d21 = +HEAPF32[i53 + 8 >> 2];
 d9 = +HEAPF32[i53 + 20 >> 2];
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i23, i53, i11);
 i27 = i23 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i27, i53, i11 + 8 | 0);
 i26 = i23 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i26, i53, i11 + 16 | 0);
 i25 = i23 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i25, i53, i11 + 24 | 0);
 i24 = i23 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i24, i53, i11 + 32 | 0);
 i10 = i23 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i10, i53, i11 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i28, i53, i12);
 i32 = i28 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i32, i53, i12 + 8 | 0);
 i31 = i28 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i31, i53, i12 + 16 | 0);
 i30 = i28 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i30, i53, i12 + 24 | 0);
 i29 = i28 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i29, i53, i12 + 32 | 0);
 i11 = i28 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i11, i53, i12 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i33, i53, i13);
 i37 = i33 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i37, i53, i13 + 8 | 0);
 i36 = i33 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i36, i53, i13 + 16 | 0);
 i35 = i33 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i35, i53, i13 + 24 | 0);
 i34 = i33 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i34, i53, i13 + 32 | 0);
 i12 = i33 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i12, i53, i13 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i38, i53, i14);
 i42 = i38 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i42, i53, i14 + 8 | 0);
 i41 = i38 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i41, i53, i14 + 16 | 0);
 i40 = i38 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i40, i53, i14 + 24 | 0);
 i39 = i38 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i39, i53, i14 + 32 | 0);
 i13 = i38 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i13, i53, i14 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i43, i53, i15);
 i47 = i43 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i47, i53, i15 + 8 | 0);
 i46 = i43 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i46, i53, i15 + 16 | 0);
 i45 = i43 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i45, i53, i15 + 24 | 0);
 i44 = i43 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i44, i53, i15 + 32 | 0);
 i14 = i43 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i14, i53, i15 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i48, i53, i16);
 i52 = i48 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i52, i53, i16 + 8 | 0);
 i51 = i48 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i51, i53, i16 + 16 | 0);
 i50 = i48 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i50, i53, i16 + 24 | 0);
 i49 = i48 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i49, i53, i16 + 32 | 0);
 i15 = i48 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i15, i53, i16 + 40 | 0);
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i2, i20, i19, d22 * d8);
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i48 >> 2], +HEAPF32[i48 + 4 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i52 >> 2], +HEAPF32[i48 + 12 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 4 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i51 >> 2], +HEAPF32[i48 + 20 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 8 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i50 >> 2], +HEAPF32[i48 + 28 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 12 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i49 >> 2], +HEAPF32[i48 + 36 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 16 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i15 >> 2], +HEAPF32[i48 + 44 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 20 >> 2] = d8;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i2, i20, i19, d22 * d7);
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i43 >> 2], +HEAPF32[i43 + 4 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 24 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i47 >> 2], +HEAPF32[i43 + 12 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 28 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i46 >> 2], +HEAPF32[i43 + 20 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 32 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i45 >> 2], +HEAPF32[i43 + 28 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 36 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i44 >> 2], +HEAPF32[i43 + 36 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 40 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i14 >> 2], +HEAPF32[i43 + 44 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 44 >> 2] = d8;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i2, i20, i19, d22 * d6);
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i38 >> 2], +HEAPF32[i38 + 4 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 48 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i42 >> 2], +HEAPF32[i38 + 12 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 52 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i41 >> 2], +HEAPF32[i38 + 20 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 56 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i40 >> 2], +HEAPF32[i38 + 28 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 60 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i39 >> 2], +HEAPF32[i38 + 36 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 64 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i13 >> 2], +HEAPF32[i38 + 44 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 68 >> 2] = d8;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i2, i20, i19, d22 * d5);
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i33 >> 2], +HEAPF32[i33 + 4 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 72 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i37 >> 2], +HEAPF32[i33 + 12 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 76 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i36 >> 2], +HEAPF32[i33 + 20 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 80 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i35 >> 2], +HEAPF32[i33 + 28 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 84 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i34 >> 2], +HEAPF32[i33 + 36 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 88 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i12 >> 2], +HEAPF32[i33 + 44 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 92 >> 2] = d8;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i2, i20, i19, d22 * d4);
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i28 >> 2], +HEAPF32[i28 + 4 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 96 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i32 >> 2], +HEAPF32[i28 + 12 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 100 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i31 >> 2], +HEAPF32[i28 + 20 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 104 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i30 >> 2], +HEAPF32[i28 + 28 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 108 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i29 >> 2], +HEAPF32[i28 + 36 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 112 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i11 >> 2], +HEAPF32[i28 + 44 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 116 >> 2] = d8;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i2, i20, i19, d22 * d3);
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i23 >> 2], +HEAPF32[i23 + 4 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 120 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i27 >> 2], +HEAPF32[i23 + 12 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 124 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i26 >> 2], +HEAPF32[i23 + 20 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 128 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i25 >> 2], +HEAPF32[i23 + 28 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 132 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i24 >> 2], +HEAPF32[i23 + 36 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 136 >> 2] = d8;
 d8 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, +HEAPF32[i10 >> 2], +HEAPF32[i23 + 44 >> 2], HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 140 >> 2] = d8;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i2, i20, i19, d22 * d17);
 d17 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i2, d21, d9, HEAP32[i20 >> 2] | 0, HEAP32[i19 >> 2] | 0);
 HEAPF32[i1 + 144 >> 2] = d17;
 STACKTOP = i18;
 return 1;
}

function __ZN6vision36ComputeSubpixelHessianFineOctavePairEPfS0_RKNS_5ImageES3_S3_ii(i7, i8, i2, i14, i15, i16, i17) {
 i7 = i7 | 0;
 i8 = i8 | 0;
 i2 = i2 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i17 = i17 | 0;
 var i1 = 0, d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, d23 = 0.0, d24 = 0.0, d25 = 0.0, d26 = 0.0, d27 = 0.0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i18 = i21 + 28 | 0;
 i19 = i21 + 24 | 0;
 i20 = i21 + 20 | 0;
 i9 = i21 + 16 | 0;
 i10 = i21 + 12 | 0;
 i11 = i21 + 8 | 0;
 i12 = i21 + 4 | 0;
 i13 = i21;
 if ((i16 | 0) > 0 ? (i16 + 1 | 0) >>> 0 < (__ZNK6vision5Image5widthEv(i14) | 0) >>> 0 : 0) {
  i1 = i17 + -1 | 0;
  if ((i17 | 0) > 0 ? (i4 = i17 + 1 | 0, i4 >>> 0 < (__ZNK6vision5Image6heightEv(i14) | 0) >>> 0) : 0) {
   i6 = __ZNK6vision5Image5widthEv(i2) | 0;
   if ((i6 | 0) != (__ZNK6vision5Image5widthEv(i14) | 0)) {
    i6 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24261) | 0, 22571) | 0, 33655) | 0, 415) | 0, 33662) | 0, 23157) | 0;
    __ZNKSt3__28ios_base6getlocEv(i18, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
    i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, 10) | 0;
    __ZNSt3__26localeD2Ev(i18);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i5) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
    _abort();
   }
   i6 = (__ZNK6vision5Image5widthEv(i2) | 0) >>> 1;
   if ((i6 | 0) != (__ZNK6vision5Image5widthEv(i15) | 0)) {
    i6 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23187) | 0, 22571) | 0, 33655) | 0, 416) | 0, 33662) | 0, 23157) | 0;
    __ZNKSt3__28ios_base6getlocEv(i18, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
    i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, 10) | 0;
    __ZNSt3__26localeD2Ev(i18);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i5) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
    _abort();
   }
   i6 = __ZNK6vision5Image6heightEv(i2) | 0;
   if ((i6 | 0) != (__ZNK6vision5Image6heightEv(i14) | 0)) {
    i6 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24313) | 0, 22571) | 0, 33655) | 0, 417) | 0, 33662) | 0, 23157) | 0;
    __ZNKSt3__28ios_base6getlocEv(i18, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
    i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, 10) | 0;
    __ZNSt3__26localeD2Ev(i18);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i5) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
    _abort();
   }
   i6 = (__ZNK6vision5Image6heightEv(i2) | 0) >>> 1;
   if ((i6 | 0) != (__ZNK6vision5Image6heightEv(i15) | 0)) {
    i6 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23303) | 0, 22571) | 0, 33655) | 0, 418) | 0, 33662) | 0, 23157) | 0;
    __ZNKSt3__28ios_base6getlocEv(i18, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
    i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, 10) | 0;
    __ZNSt3__26localeD2Ev(i18);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i5) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
    _abort();
   }
   i5 = (__ZNK6vision5Image3getIfEEPKT_m(i2, i1) | 0) + (i16 << 2) | 0;
   i6 = (__ZNK6vision5Image3getIfEEPKT_m(i2, i17) | 0) + (i16 << 2) | 0;
   i1 = (__ZNK6vision5Image3getIfEEPKT_m(i2, i4) | 0) + (i16 << 2) | 0;
   i2 = (__ZNK6vision5Image3getIfEEPKT_m(i14, i17) | 0) + (i16 << 2) | 0;
   __ZN6vision25bilinear_downsample_pointERfS0_ffi(i19, i20, +(i16 | 0), +(i17 | 0), 1);
   d3 = +HEAPF32[i19 >> 2];
   if (!(d3 + -.5 >= 0.0)) {
    i4 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24367) | 0, 22571) | 0, 33655) | 0, 428) | 0, 33662) | 0, 24408) | 0;
    __ZNKSt3__28ios_base6getlocEv(i18, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i22 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
    i22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i22 >> 2] | 0) + 28 >> 2] & 63](i22, 10) | 0;
    __ZNSt3__26localeD2Ev(i18);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i22) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
    _abort();
   }
   if (!(+HEAPF32[i20 >> 2] + -.5 >= 0.0)) {
    i22 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24462) | 0, 22571) | 0, 33655) | 0, 429) | 0, 33662) | 0, 24503) | 0;
    __ZNKSt3__28ios_base6getlocEv(i18, i22 + (HEAP32[(HEAP32[i22 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
    i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
    __ZNSt3__26localeD2Ev(i18);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i22, i4) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i22) | 0;
    _abort();
   }
   if (!(d3 + .5 < +((__ZNK6vision5Image5widthEv(i15) | 0) >>> 0))) {
    i22 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24557) | 0, 22571) | 0, 33655) | 0, 430) | 0, 33662) | 0, 24408) | 0;
    __ZNKSt3__28ios_base6getlocEv(i18, i22 + (HEAP32[(HEAP32[i22 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
    i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
    __ZNSt3__26localeD2Ev(i18);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i22, i4) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i22) | 0;
    _abort();
   }
   d3 = +HEAPF32[i20 >> 2] + .5;
   if (d3 < +((__ZNK6vision5Image6heightEv(i15) | 0) >>> 0)) {
    __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii(i9, i10, i11, i12, i13, i14, i16, i17);
    d23 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i15, +HEAPF32[i19 >> 2], +HEAPF32[i20 >> 2]);
    d3 = +HEAPF32[i6 >> 2];
    d24 = d23 + (d3 - +HEAPF32[i2 >> 2] * 2.0);
    d27 = +HEAPF32[i6 + -4 >> 2];
    d27 = d27 + +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i15, +HEAPF32[i19 >> 2] + .5, +HEAPF32[i20 >> 2]);
    d26 = +HEAPF32[i6 + 4 >> 2];
    d26 = (d27 - (d26 + +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i15, +HEAPF32[i19 >> 2] + -.5, +HEAPF32[i20 >> 2]))) * .25;
    d27 = +HEAPF32[i5 >> 2];
    d27 = d27 + +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i15, +HEAPF32[i19 >> 2], +HEAPF32[i20 >> 2] + .5);
    d25 = +HEAPF32[i1 >> 2];
    d25 = (d27 - (d25 + +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i15, +HEAPF32[i19 >> 2], +HEAPF32[i20 >> 2] + -.5))) * .25;
    HEAP32[i7 >> 2] = HEAP32[i11 >> 2];
    i22 = HEAP32[i13 >> 2] | 0;
    HEAP32[i7 + 4 >> 2] = i22;
    HEAPF32[i7 + 8 >> 2] = d26;
    HEAP32[i7 + 12 >> 2] = i22;
    HEAP32[i7 + 16 >> 2] = HEAP32[i12 >> 2];
    HEAPF32[i7 + 20 >> 2] = d25;
    HEAPF32[i7 + 24 >> 2] = d26;
    HEAPF32[i7 + 28 >> 2] = d25;
    HEAPF32[i7 + 32 >> 2] = d24;
    HEAPF32[i8 >> 2] = -+HEAPF32[i9 >> 2];
    HEAPF32[i8 + 4 >> 2] = -+HEAPF32[i10 >> 2];
    HEAPF32[i8 + 8 >> 2] = -((d23 - d3) * .5);
    STACKTOP = i21;
    return;
   } else {
    i22 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24608) | 0, 22571) | 0, 33655) | 0, 431) | 0, 33662) | 0, 24503) | 0;
    __ZNKSt3__28ios_base6getlocEv(i18, i22 + (HEAP32[(HEAP32[i22 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i21 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
    i21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i21 >> 2] | 0) + 28 >> 2] & 63](i21, 10) | 0;
    __ZNSt3__26localeD2Ev(i18);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i22, i21) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i22) | 0;
    _abort();
   }
  }
  i22 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23025) | 0, 22571) | 0, 33655) | 0, 414) | 0, 33662) | 0, 23084) | 0;
  __ZNKSt3__28ios_base6getlocEv(i18, i22 + (HEAP32[(HEAP32[i22 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i21 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
  i21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i21 >> 2] | 0) + 28 >> 2] & 63](i21, 10) | 0;
  __ZNSt3__26localeD2Ev(i18);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i22, i21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i22) | 0;
  _abort();
 }
 i22 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 22951) | 0, 22571) | 0, 33655) | 0, 413) | 0, 33662) | 0, 23009) | 0;
 __ZNKSt3__28ios_base6getlocEv(i18, i22 + (HEAP32[(HEAP32[i22 >> 2] | 0) + -12 >> 2] | 0) | 0);
 i21 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
 i21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i21 >> 2] | 0) + 28 >> 2] & 63](i21, 10) | 0;
 __ZNSt3__26localeD2Ev(i18);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i22, i21) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i22) | 0;
 _abort();
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i21, i1, i15) {
 i21 = i21 | 0;
 i1 = i1 | 0;
 i15 = i15 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i24 = 0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i13 = i24 + 48 | 0;
 i22 = i24 + 40 | 0;
 i23 = i24 + 32 | 0;
 i19 = i24 + 24 | 0;
 i20 = i24 + 12 | 0;
 i14 = i24;
 if ((i21 | 0) != (i1 | 0)) {
  i18 = i15 + 56 | 0;
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjEC2ERj(i22, i18);
  HEAP32[i18 >> 2] = (HEAP32[i18 >> 2] | 0) + 1;
  i2 = i15 + 61 | 0;
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb(i23, i2);
  if ((HEAP32[i18 >> 2] | 0) >>> 0 > 1) HEAP8[i2 >> 0] = 1;
  L6 : do switch (HEAP8[i21 >> 0] | 0) {
  case 84:
  case 71:
   {
    i1 = __ZN10__cxxabiv112_GLOBAL__N_118parse_special_nameINS0_2DbEEEPKcS4_S4_RT_(i21, i1, i15) | 0;
    i2 = 1;
    break;
   }
  default:
   {
    i8 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i21, i1, i15) | 0;
    i17 = HEAP32[i15 + 48 >> 2] | 0;
    i18 = HEAP32[i15 + 52 >> 2] | 0;
    L8 : do if ((i8 | 0) != (i21 | 0)) {
     if ((i8 | 0) != (i1 | 0)) {
      switch (HEAP8[i8 >> 0] | 0) {
      case 46:
      case 69:
       {
        i1 = i8;
        break L8;
       }
      default:
       {}
      }
      __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb(i19, i2);
      HEAP8[i2 >> 0] = 0;
      HEAP32[i20 >> 2] = 0;
      HEAP32[i20 + 4 >> 2] = 0;
      HEAP32[i20 + 8 >> 2] = 0;
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i20 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i16 = i15 + 4 | 0;
      i5 = HEAP32[i16 >> 2] | 0;
      L16 : do if ((HEAP32[i15 >> 2] | 0) != (i5 | 0)) {
       i2 = i5 + -24 | 0;
       i6 = HEAP8[i2 + 11 >> 0] | 0;
       i7 = i6 << 24 >> 24 < 0;
       if (i7) i3 = HEAP32[i5 + -20 >> 2] | 0; else i3 = i6 & 255;
       if (i3) {
        if (!(HEAP8[i15 + 60 >> 0] | 0)) {
         if (i7) {
          i3 = HEAP32[i2 >> 2] | 0;
          i4 = HEAP32[i5 + -20 >> 2] | 0;
         } else {
          i3 = i2;
          i4 = i6 & 255;
         }
         if ((HEAP8[i3 + i4 + -1 >> 0] | 0) == 62) {
          if (i7) {
           i3 = HEAP32[i5 + -20 >> 2] | 0;
           i4 = HEAP32[i2 >> 2] | 0;
          } else {
           i3 = i6 & 255;
           i4 = i2;
          }
          if ((HEAP8[i4 + (i3 + -2) >> 0] | 0) != 45) {
           if (i7) {
            i3 = HEAP32[i5 + -20 >> 2] | 0;
            i4 = HEAP32[i2 >> 2] | 0;
           } else {
            i3 = i6 & 255;
            i4 = i2;
           }
           if ((HEAP8[i4 + (i3 + -2) >> 0] | 0) != 62) {
            i5 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i8, i1, i15) | 0;
            if ((i5 | 0) == (i8 | 0)) {
             i1 = i21;
             i2 = 0;
             break;
            }
            i12 = HEAP32[i16 >> 2] | 0;
            i3 = i12;
            if (((i12 - (HEAP32[i15 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
             i1 = i21;
             i2 = 0;
             break;
            }
            i4 = i3 + -24 | 0;
            HEAP32[i14 >> 2] = HEAP32[i4 >> 2];
            HEAP32[i14 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
            HEAP32[i14 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
            i2 = 0;
            while (1) {
             if ((i2 | 0) == 3) break;
             HEAP32[i4 + (i2 << 2) >> 2] = 0;
             i2 = i2 + 1 | 0;
            }
            i3 = i3 + -12 | 0;
            i4 = i20 + 11 | 0;
            if ((HEAP8[i4 >> 0] | 0) < 0) {
             i12 = HEAP32[i20 >> 2] | 0;
             HEAP8[i13 >> 0] = 0;
             __ZNSt3__211char_traitsIcE6assignERcRKc(i12, i13);
             HEAP32[i20 + 4 >> 2] = 0;
            } else {
             HEAP8[i13 >> 0] = 0;
             __ZNSt3__211char_traitsIcE6assignERcRKc(i20, i13);
             HEAP8[i4 >> 0] = 0;
            }
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i20);
            HEAP32[i20 >> 2] = HEAP32[i3 >> 2];
            HEAP32[i20 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
            HEAP32[i20 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
            i2 = 0;
            while (1) {
             if ((i2 | 0) == 3) break;
             HEAP32[i3 + (i2 << 2) >> 2] = 0;
             i2 = i2 + 1 | 0;
            }
            i12 = HEAP8[i4 >> 0] | 0;
            if (!((i12 << 24 >> 24 < 0 ? HEAP32[i20 + 4 >> 2] | 0 : i12 & 255) | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i14, 32);
            i3 = HEAP32[i16 >> 2] | 0;
            i2 = 0;
            while (1) {
             if ((i2 | 0) == -1) break;
             i12 = i2 + -1 | 0;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i12 * 24 | 0) | 0);
             i2 = i12;
            }
            HEAP32[i16 >> 2] = i3 + -24;
            i2 = HEAP8[i14 + 11 >> 0] | 0;
            i12 = i2 << 24 >> 24 < 0;
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm(i3 + -48 | 0, 0, i12 ? HEAP32[i14 >> 2] | 0 : i14, i12 ? HEAP32[i14 + 4 >> 2] | 0 : i2 & 255) | 0;
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
            i3 = i5;
            i2 = (HEAP32[i16 >> 2] | 0) + -24 | 0;
           } else i3 = i8;
          } else i3 = i8;
         } else i3 = i8;
        } else i3 = i8;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i2, 40);
        if ((i3 | 0) != (i1 | 0) ? (HEAP8[i3 >> 0] | 0) == 118 : 0) {
         i1 = i3 + 1 | 0;
         i3 = HEAP32[i15 >> 2] | 0;
         i2 = HEAP32[i16 >> 2] | 0;
        } else i9 = 50;
        do if ((i9 | 0) == 50) {
         i9 = i13 + 11 | 0;
         i10 = i13 + 4 | 0;
         i11 = i14 + 11 | 0;
         i12 = i14 + 4 | 0;
         i7 = 1;
         i2 = i3;
         L67 : while (1) {
          i4 = i2;
          while (1) {
           i5 = ((HEAP32[i16 >> 2] | 0) - (HEAP32[i15 >> 2] | 0) | 0) / 24 | 0;
           i8 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i4, i1, i15) | 0;
           i2 = HEAP32[i16 >> 2] | 0;
           i3 = HEAP32[i15 >> 2] | 0;
           i6 = (i2 - i3 | 0) / 24 | 0;
           if ((i8 | 0) == (i4 | 0)) {
            i9 = 74;
            break L67;
           }
           if (i6 >>> 0 > i5 >>> 0) break; else i4 = i8;
          }
          HEAP32[i13 >> 2] = 0;
          HEAP32[i13 + 4 >> 2] = 0;
          HEAP32[i13 + 8 >> 2] = 0;
          i2 = 0;
          while (1) {
           if ((i2 | 0) == 3) break;
           HEAP32[i13 + (i2 << 2) >> 2] = 0;
           i2 = i2 + 1 | 0;
          }
          i2 = i5;
          while (1) {
           if (i2 >>> 0 >= i6 >>> 0) break;
           i4 = HEAP8[i9 >> 0] | 0;
           if ((i4 << 24 >> 24 < 0 ? HEAP32[i10 >> 2] | 0 : i4 & 255) | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i13, 50748) | 0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i14, (HEAP32[i15 >> 2] | 0) + (i2 * 24 | 0) | 0);
           i4 = HEAP8[i11 >> 0] | 0;
           i3 = i4 << 24 >> 24 < 0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i13, i3 ? HEAP32[i14 >> 2] | 0 : i14, i3 ? HEAP32[i12 >> 2] | 0 : i4 & 255) | 0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
           i2 = i2 + 1 | 0;
          }
          i2 = i5;
          while (1) {
           if (i2 >>> 0 >= i6 >>> 0) break;
           i4 = HEAP32[i16 >> 2] | 0;
           i3 = 0;
           while (1) {
            if ((i3 | 0) == -1) break;
            i5 = i3 + -1 | 0;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4 + (i5 * 24 | 0) | 0);
            i3 = i5;
           }
           HEAP32[i16 >> 2] = i4 + -24;
           i2 = i2 + 1 | 0;
          }
          i4 = HEAP8[i9 >> 0] | 0;
          i2 = HEAP32[i10 >> 2] | 0;
          i3 = i4 & 255;
          if (!((i4 << 24 >> 24 < 0 ? i2 : i3) | 0)) i2 = i7; else {
           i5 = HEAP32[i16 >> 2] | 0;
           if ((HEAP32[i15 >> 2] | 0) == (i5 | 0)) {
            i9 = 86;
            break;
           }
           if (!i7) {
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i5 + -24 | 0, 50748) | 0;
            i4 = HEAP8[i9 >> 0] | 0;
            i3 = i4 & 255;
            i5 = HEAP32[i16 >> 2] | 0;
            i2 = HEAP32[i10 >> 2] | 0;
           }
           i7 = i4 << 24 >> 24 < 0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i5 + -24 | 0, i7 ? HEAP32[i13 >> 2] | 0 : i13, i7 ? i2 : i3) | 0;
           i2 = 0;
          }
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
          i7 = i2;
          i2 = i8;
         }
         if ((i9 | 0) == 74) {
          i1 = i4;
          break;
         } else if ((i9 | 0) == 86) {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
          i1 = i21;
          i2 = 0;
          break L16;
         }
        } while (0);
        if ((i3 | 0) != (i2 | 0)) {
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i2 + -24 | 0, 41);
         if (i17 & 1 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i16 >> 2] | 0) + -24 | 0, 50471) | 0;
         if (i17 & 2 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i16 >> 2] | 0) + -24 | 0, 50478) | 0;
         if (i17 & 4 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i16 >> 2] | 0) + -24 | 0, 50488) | 0;
         switch (i18 | 0) {
         case 1:
          {
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i16 >> 2] | 0) + -24 | 0, 51952) | 0;
           break;
          }
         case 2:
          {
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i16 >> 2] | 0) + -24 | 0, 51955) | 0;
           break;
          }
         default:
          {}
         }
         i2 = HEAP8[i20 + 11 >> 0] | 0;
         i18 = i2 << 24 >> 24 < 0;
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i16 >> 2] | 0) + -24 | 0, i18 ? HEAP32[i20 >> 2] | 0 : i20, i18 ? HEAP32[i20 + 4 >> 2] | 0 : i2 & 255) | 0;
         i2 = 1;
        } else {
         i1 = i21;
         i2 = 0;
        }
       } else {
        i1 = i21;
        i2 = 0;
       }
      } else {
       i1 = i21;
       i2 = 0;
      } while (0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i20);
      __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev(i19);
      if (!i2) {
       i2 = 0;
       break L6;
      }
     }
    } else i1 = i21; while (0);
    i2 = 1;
   }
  } while (0);
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev(i23);
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjED2Ev(i22);
  if (i2) i9 = 90; else i1 = i21;
 } else {
  i1 = i21;
  i9 = 90;
 }
 STACKTOP = i24;
 return i1 | 0;
}

function _fmt_fp(i26, d5, i28, i11, i27, i19) {
 i26 = i26 | 0;
 d5 = +d5;
 i28 = i28 | 0;
 i11 = i11 | 0;
 i27 = i27 | 0;
 i19 = i19 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, d9 = 0.0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i29 = 0;
 i29 = STACKTOP;
 STACKTOP = STACKTOP + 560 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(560);
 i3 = i29 + 32 | 0;
 i14 = i29 + 536 | 0;
 i25 = i29;
 i24 = i25;
 i4 = i29 + 540 | 0;
 HEAP32[i14 >> 2] = 0;
 i23 = i4 + 12 | 0;
 ___DOUBLE_BITS_737(d5) | 0;
 i1 = getTempRet0() | 0;
 if ((i1 | 0) < 0) {
  d5 = -d5;
  ___DOUBLE_BITS_737(d5) | 0;
  i22 = 1;
  i21 = 46973;
  i1 = getTempRet0() | 0;
 } else {
  i22 = (i27 & 2049 | 0) != 0 & 1;
  i21 = (i27 & 2048 | 0) == 0 ? ((i27 & 1 | 0) == 0 ? 46974 : 46979) : 46976;
 }
 do if (0 == 0 & (i1 & 2146435072 | 0) == 2146435072) {
  i25 = (i19 & 32 | 0) != 0;
  i1 = i22 + 3 | 0;
  _pad_734(i26, 32, i28, i1, i27 & -65537);
  _out_728(i26, i21, i22);
  _out_728(i26, d5 != d5 | 0.0 != 0.0 ? (i25 ? 47013 : 47e3) : i25 ? 46992 : 46996, 3);
  _pad_734(i26, 32, i28, i1, i27 ^ 8192);
 } else {
  d9 = +_frexp(d5, i14) * 2.0;
  i1 = d9 != 0.0;
  if (i1) HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + -1;
  i13 = i19 | 32;
  if ((i13 | 0) == 97) {
   i7 = i19 & 32;
   i10 = (i7 | 0) == 0 ? i21 : i21 + 9 | 0;
   i8 = i22 | 2;
   i1 = 12 - i11 | 0;
   do if (!(i11 >>> 0 > 11 | (i1 | 0) == 0)) {
    d5 = 8.0;
    do {
     i1 = i1 + -1 | 0;
     d5 = d5 * 16.0;
    } while ((i1 | 0) != 0);
    if ((HEAP8[i10 >> 0] | 0) == 45) {
     d5 = -(d5 + (-d9 - d5));
     break;
    } else {
     d5 = d9 + d5 - d5;
     break;
    }
   } else d5 = d9; while (0);
   i2 = HEAP32[i14 >> 2] | 0;
   i1 = (i2 | 0) < 0 ? 0 - i2 | 0 : i2;
   i1 = _fmt_u(i1, ((i1 | 0) < 0) << 31 >> 31, i23) | 0;
   if ((i1 | 0) == (i23 | 0)) {
    i1 = i4 + 11 | 0;
    HEAP8[i1 >> 0] = 48;
   }
   HEAP8[i1 + -1 >> 0] = (i2 >> 31 & 2) + 43;
   i6 = i1 + -2 | 0;
   HEAP8[i6 >> 0] = i19 + 15;
   i2 = (i11 | 0) < 1;
   i3 = (i27 & 8 | 0) == 0;
   i4 = i25;
   do {
    i22 = ~~d5;
    i1 = i4 + 1 | 0;
    HEAP8[i4 >> 0] = i7 | HEAPU8[4448 + i22 >> 0];
    d5 = (d5 - +(i22 | 0)) * 16.0;
    if ((i1 - i24 | 0) == 1 ? !(i3 & (i2 & d5 == 0.0)) : 0) {
     HEAP8[i1 >> 0] = 46;
     i4 = i4 + 2 | 0;
    } else i4 = i1;
   } while (d5 != 0.0);
   if ((i11 | 0) != 0 ? (-2 - i24 + i4 | 0) < (i11 | 0) : 0) {
    i2 = i23;
    i3 = i6;
    i1 = i11 + 2 + i2 - i3 | 0;
   } else {
    i2 = i23;
    i3 = i6;
    i1 = i2 - i24 - i3 + i4 | 0;
   }
   i23 = i1 + i8 | 0;
   _pad_734(i26, 32, i28, i23, i27);
   _out_728(i26, i10, i8);
   _pad_734(i26, 48, i28, i23, i27 ^ 65536);
   i24 = i4 - i24 | 0;
   _out_728(i26, i25, i24);
   i25 = i2 - i3 | 0;
   _pad_734(i26, 48, i1 - (i24 + i25) | 0, 0, 0);
   _out_728(i26, i6, i25);
   _pad_734(i26, 32, i28, i23, i27 ^ 8192);
   i1 = i23;
   break;
  }
  i2 = (i11 | 0) < 0 ? 6 : i11;
  if (i1) {
   i1 = (HEAP32[i14 >> 2] | 0) + -28 | 0;
   HEAP32[i14 >> 2] = i1;
   d5 = d9 * 268435456.0;
  } else {
   d5 = d9;
   i1 = HEAP32[i14 >> 2] | 0;
  }
  i20 = (i1 | 0) < 0 ? i3 : i3 + 288 | 0;
  i3 = i20;
  do {
   i17 = ~~d5 >>> 0;
   HEAP32[i3 >> 2] = i17;
   i3 = i3 + 4 | 0;
   d5 = (d5 - +(i17 >>> 0)) * 1.0e9;
  } while (d5 != 0.0);
  i17 = i20;
  if ((i1 | 0) > 0) {
   i7 = i20;
   while (1) {
    i6 = (i1 | 0) < 29 ? i1 : 29;
    i1 = i3 + -4 | 0;
    if (i1 >>> 0 >= i7 >>> 0) {
     i4 = 0;
     do {
      i12 = _bitshift64Shl(HEAP32[i1 >> 2] | 0, 0, i6 | 0) | 0;
      i12 = _i64Add(i12 | 0, getTempRet0() | 0, i4 | 0, 0) | 0;
      i15 = getTempRet0() | 0;
      i4 = ___udivdi3(i12 | 0, i15 | 0, 1e9, 0) | 0;
      i16 = ___muldi3(i4 | 0, getTempRet0() | 0, 1e9, 0) | 0;
      i16 = _i64Subtract(i12 | 0, i15 | 0, i16 | 0, getTempRet0() | 0) | 0;
      getTempRet0() | 0;
      HEAP32[i1 >> 2] = i16;
      i1 = i1 + -4 | 0;
     } while (i1 >>> 0 >= i7 >>> 0);
     if (i4) {
      i16 = i7 + -4 | 0;
      HEAP32[i16 >> 2] = i4;
      i4 = i16;
     } else i4 = i7;
    } else i4 = i7;
    L57 : do if (i3 >>> 0 > i4 >>> 0) {
     i1 = i3;
     while (1) {
      i3 = i1 + -4 | 0;
      if (HEAP32[i3 >> 2] | 0) {
       i3 = i1;
       break L57;
      }
      if (i3 >>> 0 > i4 >>> 0) i1 = i3; else break;
     }
    } while (0);
    i1 = (HEAP32[i14 >> 2] | 0) - i6 | 0;
    HEAP32[i14 >> 2] = i1;
    if ((i1 | 0) > 0) i7 = i4; else break;
   }
  } else i4 = i20;
  if ((i1 | 0) < 0) {
   i11 = ((i2 + 25 | 0) / 9 | 0) + 1 | 0;
   i12 = (i13 | 0) == 102;
   do {
    i10 = 0 - i1 | 0;
    i10 = (i10 | 0) < 9 ? i10 : 9;
    if (i4 >>> 0 < i3 >>> 0) {
     i6 = (1 << i10) + -1 | 0;
     i7 = 1e9 >>> i10;
     i8 = 0;
     i1 = i4;
     do {
      i16 = HEAP32[i1 >> 2] | 0;
      HEAP32[i1 >> 2] = (i16 >>> i10) + i8;
      i8 = Math_imul(i16 & i6, i7) | 0;
      i1 = i1 + 4 | 0;
     } while (i1 >>> 0 < i3 >>> 0);
     i4 = (HEAP32[i4 >> 2] | 0) == 0 ? i4 + 4 | 0 : i4;
     if (i8) {
      HEAP32[i3 >> 2] = i8;
      i3 = i3 + 4 | 0;
     }
    } else i4 = (HEAP32[i4 >> 2] | 0) == 0 ? i4 + 4 | 0 : i4;
    i1 = i12 ? i20 : i4;
    i3 = (i3 - i1 >> 2 | 0) > (i11 | 0) ? i1 + (i11 << 2) | 0 : i3;
    i1 = (HEAP32[i14 >> 2] | 0) + i10 | 0;
    HEAP32[i14 >> 2] = i1;
   } while ((i1 | 0) < 0);
   i12 = i4;
  } else i12 = i4;
  if (i12 >>> 0 < i3 >>> 0) {
   i1 = (i17 - i12 >> 2) * 9 | 0;
   i6 = HEAP32[i12 >> 2] | 0;
   if (i6 >>> 0 >= 10) {
    i4 = 10;
    do {
     i4 = i4 * 10 | 0;
     i1 = i1 + 1 | 0;
    } while (i6 >>> 0 >= i4 >>> 0);
   }
  } else i1 = 0;
  i15 = (i13 | 0) == 103;
  i16 = (i2 | 0) != 0;
  i4 = i2 - ((i13 | 0) == 102 ? 0 : i1) + ((i16 & i15) << 31 >> 31) | 0;
  if ((i4 | 0) < (((i3 - i17 >> 2) * 9 | 0) + -9 | 0)) {
   i14 = i4 + 9216 | 0;
   i4 = (i14 | 0) / 9 | 0;
   i11 = i20 + 4 + (i4 + -1024 << 2) | 0;
   i4 = i14 - (i4 * 9 | 0) | 0;
   if ((i4 | 0) < 8) {
    i6 = 10;
    while (1) {
     i6 = i6 * 10 | 0;
     if ((i4 | 0) < 7) i4 = i4 + 1 | 0; else break;
    }
   } else i6 = 10;
   i8 = HEAP32[i11 >> 2] | 0;
   i4 = (i8 >>> 0) / (i6 >>> 0) | 0;
   i10 = i8 - (Math_imul(i4, i6) | 0) | 0;
   i7 = (i11 + 4 | 0) == (i3 | 0);
   if (!(i7 & (i10 | 0) == 0)) {
    d9 = (i4 & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
    i14 = i6 >>> 1;
    d5 = i10 >>> 0 < i14 >>> 0 ? .5 : i7 & (i10 | 0) == (i14 | 0) ? 1.0 : 1.5;
    if (i22) {
     i14 = (HEAP8[i21 >> 0] | 0) == 45;
     d5 = i14 ? -d5 : d5;
     d9 = i14 ? -d9 : d9;
    }
    i4 = i8 - i10 | 0;
    HEAP32[i11 >> 2] = i4;
    if (d9 + d5 != d9) {
     i14 = i4 + i6 | 0;
     HEAP32[i11 >> 2] = i14;
     if (i14 >>> 0 > 999999999) {
      i6 = i11;
      i1 = i12;
      while (1) {
       i4 = i6 + -4 | 0;
       HEAP32[i6 >> 2] = 0;
       if (i4 >>> 0 < i1 >>> 0) {
        i1 = i1 + -4 | 0;
        HEAP32[i1 >> 2] = 0;
       }
       i14 = (HEAP32[i4 >> 2] | 0) + 1 | 0;
       HEAP32[i4 >> 2] = i14;
       if (i14 >>> 0 > 999999999) i6 = i4; else {
        i6 = i1;
        break;
       }
      }
     } else {
      i4 = i11;
      i6 = i12;
     }
     i1 = (i17 - i6 >> 2) * 9 | 0;
     i8 = HEAP32[i6 >> 2] | 0;
     if (i8 >>> 0 >= 10) {
      i7 = 10;
      do {
       i7 = i7 * 10 | 0;
       i1 = i1 + 1 | 0;
      } while (i8 >>> 0 >= i7 >>> 0);
     }
    } else {
     i4 = i11;
     i6 = i12;
    }
   } else {
    i4 = i11;
    i6 = i12;
   }
   i14 = i4 + 4 | 0;
   i3 = i3 >>> 0 > i14 >>> 0 ? i14 : i3;
  } else i6 = i12;
  i11 = 0 - i1 | 0;
  L109 : do if (i3 >>> 0 > i6 >>> 0) while (1) {
   i4 = i3 + -4 | 0;
   if (HEAP32[i4 >> 2] | 0) {
    i14 = i3;
    i13 = 1;
    break L109;
   }
   if (i4 >>> 0 > i6 >>> 0) i3 = i4; else {
    i14 = i4;
    i13 = 0;
    break;
   }
  } else {
   i14 = i3;
   i13 = 0;
  } while (0);
  do if (i15) {
   i2 = i2 + ((i16 ^ 1) & 1) | 0;
   if ((i2 | 0) > (i1 | 0) & (i1 | 0) > -5) {
    i7 = i19 + -1 | 0;
    i2 = i2 + -1 - i1 | 0;
   } else {
    i7 = i19 + -2 | 0;
    i2 = i2 + -1 | 0;
   }
   if (!(i27 & 8)) {
    if (i13 ? (i18 = HEAP32[i14 + -4 >> 2] | 0, (i18 | 0) != 0) : 0) if (!((i18 >>> 0) % 10 | 0)) {
     i4 = 0;
     i3 = 10;
     do {
      i3 = i3 * 10 | 0;
      i4 = i4 + 1 | 0;
     } while (!((i18 >>> 0) % (i3 >>> 0) | 0 | 0));
    } else i4 = 0; else i4 = 9;
    i3 = ((i14 - i17 >> 2) * 9 | 0) + -9 | 0;
    if ((i7 | 32 | 0) == 102) {
     i19 = i3 - i4 | 0;
     i19 = (i19 | 0) > 0 ? i19 : 0;
     i2 = (i2 | 0) < (i19 | 0) ? i2 : i19;
     break;
    } else {
     i19 = i3 + i1 - i4 | 0;
     i19 = (i19 | 0) > 0 ? i19 : 0;
     i2 = (i2 | 0) < (i19 | 0) ? i2 : i19;
     break;
    }
   }
  } else i7 = i19; while (0);
  i12 = (i2 | 0) != 0;
  i8 = i12 ? 1 : i27 >>> 3 & 1;
  i10 = (i7 | 32 | 0) == 102;
  if (i10) {
   i15 = 0;
   i1 = (i1 | 0) > 0 ? i1 : 0;
  } else {
   i3 = (i1 | 0) < 0 ? i11 : i1;
   i3 = _fmt_u(i3, ((i3 | 0) < 0) << 31 >> 31, i23) | 0;
   i4 = i23;
   if ((i4 - i3 | 0) < 2) do {
    i3 = i3 + -1 | 0;
    HEAP8[i3 >> 0] = 48;
   } while ((i4 - i3 | 0) < 2);
   HEAP8[i3 + -1 >> 0] = (i1 >> 31 & 2) + 43;
   i1 = i3 + -2 | 0;
   HEAP8[i1 >> 0] = i7;
   i15 = i1;
   i1 = i4 - i1 | 0;
  }
  i1 = i22 + 1 + i2 + i8 + i1 | 0;
  _pad_734(i26, 32, i28, i1, i27);
  _out_728(i26, i21, i22);
  _pad_734(i26, 48, i28, i1, i27 ^ 65536);
  if (i10) {
   i8 = i6 >>> 0 > i20 >>> 0 ? i20 : i6;
   i10 = i25 + 9 | 0;
   i6 = i10;
   i7 = i25 + 8 | 0;
   i4 = i8;
   do {
    i3 = _fmt_u(HEAP32[i4 >> 2] | 0, 0, i10) | 0;
    if ((i4 | 0) == (i8 | 0)) {
     if ((i3 | 0) == (i10 | 0)) {
      HEAP8[i7 >> 0] = 48;
      i3 = i7;
     }
    } else if (i3 >>> 0 > i25 >>> 0) {
     _memset(i25 | 0, 48, i3 - i24 | 0) | 0;
     do i3 = i3 + -1 | 0; while (i3 >>> 0 > i25 >>> 0);
    }
    _out_728(i26, i3, i6 - i3 | 0);
    i4 = i4 + 4 | 0;
   } while (i4 >>> 0 <= i20 >>> 0);
   if (!((i27 & 8 | 0) == 0 & (i12 ^ 1))) _out_728(i26, 50815, 1);
   if (i4 >>> 0 < i14 >>> 0 & (i2 | 0) > 0) while (1) {
    i3 = _fmt_u(HEAP32[i4 >> 2] | 0, 0, i10) | 0;
    if (i3 >>> 0 > i25 >>> 0) {
     _memset(i25 | 0, 48, i3 - i24 | 0) | 0;
     do i3 = i3 + -1 | 0; while (i3 >>> 0 > i25 >>> 0);
    }
    _out_728(i26, i3, (i2 | 0) < 9 ? i2 : 9);
    i4 = i4 + 4 | 0;
    i3 = i2 + -9 | 0;
    if (!(i4 >>> 0 < i14 >>> 0 & (i2 | 0) > 9)) {
     i2 = i3;
     break;
    } else i2 = i3;
   }
   _pad_734(i26, 48, i2 + 9 | 0, 9, 0);
  } else {
   i14 = i13 ? i14 : i6 + 4 | 0;
   if (i6 >>> 0 < i14 >>> 0 & (i2 | 0) > -1) {
    i11 = i25 + 9 | 0;
    i12 = (i27 & 8 | 0) == 0;
    i13 = i11;
    i8 = 0 - i24 | 0;
    i10 = i25 + 8 | 0;
    i7 = i6;
    do {
     i3 = _fmt_u(HEAP32[i7 >> 2] | 0, 0, i11) | 0;
     if ((i3 | 0) == (i11 | 0)) {
      HEAP8[i10 >> 0] = 48;
      i3 = i10;
     }
     do if ((i7 | 0) == (i6 | 0)) {
      i4 = i3 + 1 | 0;
      _out_728(i26, i3, 1);
      if (i12 & (i2 | 0) < 1) {
       i3 = i4;
       break;
      }
      _out_728(i26, 50815, 1);
      i3 = i4;
     } else {
      if (i3 >>> 0 <= i25 >>> 0) break;
      _memset(i25 | 0, 48, i3 + i8 | 0) | 0;
      do i3 = i3 + -1 | 0; while (i3 >>> 0 > i25 >>> 0);
     } while (0);
     i24 = i13 - i3 | 0;
     _out_728(i26, i3, (i2 | 0) > (i24 | 0) ? i24 : i2);
     i2 = i2 - i24 | 0;
     i7 = i7 + 4 | 0;
    } while (i7 >>> 0 < i14 >>> 0 & (i2 | 0) > -1);
   }
   _pad_734(i26, 48, i2 + 18 | 0, 18, 0);
   _out_728(i26, i15, i23 - i15 | 0);
  }
  _pad_734(i26, 32, i28, i1, i27 ^ 8192);
 } while (0);
 STACKTOP = i29;
 return ((i1 | 0) < (i28 | 0) ? i28 : i1) | 0;
}

function __ZN6vision21HoughSimilarityVoting4voteEffff(i17, d6, d11, d14, d15) {
 i17 = i17 | 0;
 d6 = +d6;
 d11 = +d11;
 d14 = +d14;
 d15 = +d15;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d12 = 0.0, d13 = 0.0, d16 = 0.0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i21;
 d16 = +HEAPF32[i17 + 20 >> 2];
 if ((((((!(d16 > d6) ? (d7 = +HEAPF32[i17 + 24 >> 2], !(d7 <= d6)) : 0) ? (d8 = +HEAPF32[i17 + 28 >> 2], !(d8 > d11)) : 0) ? (d9 = +HEAPF32[i17 + 32 >> 2], !(d9 <= d11)) : 0) ? (d10 = d14, !(d10 <= -3.141592653589793 | d10 > 3.141592653589793)) : 0) ? (d12 = +HEAPF32[i17 + 36 >> 2], !(d12 > d15)) : 0) ? (d13 = +HEAPF32[i17 + 40 >> 2], !(d13 <= d15)) : 0) {
  if (!(d16 <= d6)) {
   i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30524) | 0, 30558) | 0, 33655) | 0, 360) | 0, 33662) | 0, 30681) | 0;
   __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
   i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
   __ZNSt3__26localeD2Ev(i1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
   _abort();
  }
  if (!(d7 > d6)) {
   i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30696) | 0, 30558) | 0, 33655) | 0, 361) | 0, 33662) | 0, 30681) | 0;
   __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
   i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
   __ZNSt3__26localeD2Ev(i1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
   _abort();
  }
  if (!(d8 <= d11)) {
   i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30729) | 0, 30558) | 0, 33655) | 0, 362) | 0, 33662) | 0, 30763) | 0;
   __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
   i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
   __ZNSt3__26localeD2Ev(i1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
   _abort();
  }
  if (!(d9 > d11)) {
   i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30778) | 0, 30558) | 0, 33655) | 0, 363) | 0, 33662) | 0, 30763) | 0;
   __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
   i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
   __ZNSt3__26localeD2Ev(i1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
   _abort();
  }
  if (!(d10 > -3.141592653589793)) {
   i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30811) | 0, 30558) | 0, 33655) | 0, 364) | 0, 33662) | 0, 30846) | 0;
   __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
   i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
   __ZNSt3__26localeD2Ev(i1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
   _abort();
  }
  if (!(d10 <= 3.141592653589793)) {
   i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30865) | 0, 30558) | 0, 33655) | 0, 365) | 0, 33662) | 0, 30846) | 0;
   __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
   i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
   __ZNSt3__26localeD2Ev(i1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
   _abort();
  }
  if (!(d12 <= d15)) {
   i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30900) | 0, 30558) | 0, 33655) | 0, 366) | 0, 33662) | 0, 30942) | 0;
   __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
   i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
   __ZNSt3__26localeD2Ev(i1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
   _abort();
  }
  if (!(d13 > d15)) {
   i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30961) | 0, 30558) | 0, 33655) | 0, 367) | 0, 33662) | 0, 30942) | 0;
   __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
   i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
   __ZNSt3__26localeD2Ev(i1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
   _abort();
  }
  i1 = i17 + 68 | 0;
  i2 = i17 + 72 | 0;
  i5 = i17 + 76 | 0;
  i3 = i17 + 80 | 0;
  __ZNK6vision21HoughSimilarityVoting12mapVoteToBinERfS1_S1_S1_ffff(i17, i1, i2, i5, i3, d6, d11, d14, d15);
  i1 = ~~+Math_floor(+(+HEAPF32[i1 >> 2] + -.5));
  i2 = ~~+Math_floor(+(+HEAPF32[i2 >> 2] + -.5));
  i5 = ~~+Math_floor(+(+HEAPF32[i5 >> 2] + -.5));
  i3 = ~~+Math_floor(+(+HEAPF32[i3 >> 2] + -.5));
  i4 = HEAP32[i17 + 60 >> 2] | 0;
  i5 = (i4 + i5 | 0) % (i4 | 0) | 0;
  if ((((i1 | 0) >= 0 ? (i18 = i1 + 1 | 0, !((i2 | 0) < 0 ? 1 : (i18 | 0) >= (HEAP32[i17 + 52 >> 2] | 0))) : 0) ? (i19 = i2 + 1 | 0, !((i3 | 0) < 0 ? 1 : (i19 | 0) >= (HEAP32[i17 + 56 >> 2] | 0))) : 0) ? (i20 = i3 + 1 | 0, (i20 | 0) < (HEAP32[i17 + 64 >> 2] | 0)) : 0) {
   i4 = (i5 + 1 | 0) % (i4 | 0) | 0;
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i1, i2, i5, i3) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i18, i2, i5, i3) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i18, i19, i5, i3) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i18, i19, i4, i3) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i18, i19, i4, i20) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i18, i19, i5, i20) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i18, i2, i4, i3) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i18, i2, i4, i20) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i18, i2, i5, i20) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i1, i19, i5, i3) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i1, i19, i4, i3) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i1, i19, i4, i20) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i1, i19, i5, i20) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i1, i2, i4, i3) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i1, i2, i4, i20) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i17, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i17, i1, i2, i5, i20) | 0, 1);
   i1 = 1;
  } else i1 = 0;
 } else i1 = 0;
 STACKTOP = i21;
 return i1 | 0;
}

function _printf_core(i19, i1, i27, i28, i30, i23, i29) {
 i19 = i19 | 0;
 i1 = i1 | 0;
 i27 = i27 | 0;
 i28 = i28 | 0;
 i30 = i30 | 0;
 i23 = i23 | 0;
 i29 = i29 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i24 = 0, i25 = 0, i26 = 0, i31 = 0, i32 = 0;
 i31 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i24 = i31 + 56 | 0;
 i26 = i31 + 40 | 0;
 i17 = i31;
 i20 = i31 + 48 | 0;
 i21 = i31 + 60 | 0;
 HEAP32[i24 >> 2] = i1;
 i14 = (i19 | 0) != 0;
 i15 = i17 + 40 | 0;
 i16 = i15;
 i17 = i17 + 39 | 0;
 i18 = i20 + 4 | 0;
 i2 = 0;
 i1 = 0;
 i4 = 0;
 L1 : while (1) {
  do {
   do if ((i1 | 0) > -1) if ((i2 | 0) > (2147483647 - i1 | 0)) {
    i1 = ___errno_location() | 0;
    HEAP32[i1 >> 2] = 75;
    i1 = -1;
    break;
   } else {
    i1 = i2 + i1 | 0;
    break;
   } while (0);
   i8 = HEAP32[i24 >> 2] | 0;
   i2 = HEAP8[i8 >> 0] | 0;
   if (!(i2 << 24 >> 24)) {
    i13 = 92;
    break L1;
   }
   i3 = i8;
   L12 : while (1) {
    switch (i2 << 24 >> 24) {
    case 37:
     {
      i13 = 10;
      break L12;
     }
    case 0:
     {
      i2 = i3;
      break L12;
     }
    default:
     {}
    }
    i12 = i3 + 1 | 0;
    HEAP32[i24 >> 2] = i12;
    i2 = HEAP8[i12 >> 0] | 0;
    i3 = i12;
   }
   L15 : do if ((i13 | 0) == 10) {
    i13 = 0;
    i2 = i3;
    do {
     if ((HEAP8[i3 + 1 >> 0] | 0) != 37) break L15;
     i2 = i2 + 1 | 0;
     i3 = i3 + 2 | 0;
     HEAP32[i24 >> 2] = i3;
    } while ((HEAP8[i3 >> 0] | 0) == 37);
   } while (0);
   i2 = i2 - i8 | 0;
   if (i14) _out_728(i19, i8, i2);
  } while ((i2 | 0) != 0);
  i12 = (_isdigit(HEAP8[(HEAP32[i24 >> 2] | 0) + 1 >> 0] | 0) | 0) == 0;
  i3 = HEAP32[i24 >> 2] | 0;
  if (!i12 ? (HEAP8[i3 + 2 >> 0] | 0) == 36 : 0) {
   i10 = (HEAP8[i3 + 1 >> 0] | 0) + -48 | 0;
   i6 = 1;
   i2 = 3;
  } else {
   i10 = -1;
   i6 = i4;
   i2 = 1;
  }
  i2 = i3 + i2 | 0;
  HEAP32[i24 >> 2] = i2;
  i3 = HEAP8[i2 >> 0] | 0;
  i4 = (i3 << 24 >> 24) + -32 | 0;
  if (i4 >>> 0 > 31 | (1 << i4 & 75913 | 0) == 0) i5 = 0; else {
   i5 = 0;
   do {
    i5 = 1 << i4 | i5;
    i2 = i2 + 1 | 0;
    HEAP32[i24 >> 2] = i2;
    i3 = HEAP8[i2 >> 0] | 0;
    i4 = (i3 << 24 >> 24) + -32 | 0;
   } while (!(i4 >>> 0 > 31 | (1 << i4 & 75913 | 0) == 0));
  }
  if (i3 << 24 >> 24 == 42) {
   if ((_isdigit(HEAP8[i2 + 1 >> 0] | 0) | 0) != 0 ? (i25 = HEAP32[i24 >> 2] | 0, (HEAP8[i25 + 2 >> 0] | 0) == 36) : 0) {
    i2 = i25 + 1 | 0;
    HEAP32[i30 + ((HEAP8[i2 >> 0] | 0) + -48 << 2) >> 2] = 10;
    i2 = HEAP32[i28 + ((HEAP8[i2 >> 0] | 0) + -48 << 3) >> 2] | 0;
    i4 = 1;
    i3 = i25 + 3 | 0;
   } else {
    if (i6 | 0) {
     i1 = -1;
     break;
    }
    if (i14) {
     i12 = (HEAP32[i27 >> 2] | 0) + (4 - 1) & ~(4 - 1);
     i2 = HEAP32[i12 >> 2] | 0;
     HEAP32[i27 >> 2] = i12 + 4;
    } else i2 = 0;
    i4 = 0;
    i3 = (HEAP32[i24 >> 2] | 0) + 1 | 0;
   }
   HEAP32[i24 >> 2] = i3;
   i12 = (i2 | 0) < 0;
   i11 = i12 ? 0 - i2 | 0 : i2;
   i5 = i12 ? i5 | 8192 : i5;
   i12 = i4;
  } else {
   i2 = _getint_729(i24) | 0;
   if ((i2 | 0) < 0) {
    i1 = -1;
    break;
   }
   i11 = i2;
   i12 = i6;
   i3 = HEAP32[i24 >> 2] | 0;
  }
  do if ((HEAP8[i3 >> 0] | 0) == 46) {
   i2 = i3 + 1 | 0;
   if ((HEAP8[i2 >> 0] | 0) != 42) {
    HEAP32[i24 >> 2] = i2;
    i2 = _getint_729(i24) | 0;
    i3 = HEAP32[i24 >> 2] | 0;
    break;
   }
   if (_isdigit(HEAP8[i3 + 2 >> 0] | 0) | 0 ? (i22 = HEAP32[i24 >> 2] | 0, (HEAP8[i22 + 3 >> 0] | 0) == 36) : 0) {
    i2 = i22 + 2 | 0;
    HEAP32[i30 + ((HEAP8[i2 >> 0] | 0) + -48 << 2) >> 2] = 10;
    i2 = HEAP32[i28 + ((HEAP8[i2 >> 0] | 0) + -48 << 3) >> 2] | 0;
    i3 = i22 + 4 | 0;
    HEAP32[i24 >> 2] = i3;
    break;
   }
   if (i12 | 0) {
    i1 = -1;
    break L1;
   }
   if (i14) {
    i9 = (HEAP32[i27 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    i2 = HEAP32[i9 >> 2] | 0;
    HEAP32[i27 >> 2] = i9 + 4;
   } else i2 = 0;
   i3 = (HEAP32[i24 >> 2] | 0) + 2 | 0;
   HEAP32[i24 >> 2] = i3;
  } else i2 = -1; while (0);
  i9 = 0;
  while (1) {
   if (((HEAP8[i3 >> 0] | 0) + -65 | 0) >>> 0 > 57) {
    i1 = -1;
    break L1;
   }
   i4 = i3;
   i3 = i3 + 1 | 0;
   HEAP32[i24 >> 2] = i3;
   i4 = HEAP8[(HEAP8[i4 >> 0] | 0) + -65 + (3984 + (i9 * 58 | 0)) >> 0] | 0;
   i6 = i4 & 255;
   if ((i6 + -1 | 0) >>> 0 >= 8) break; else i9 = i6;
  }
  if (!(i4 << 24 >> 24)) {
   i1 = -1;
   break;
  }
  i7 = (i10 | 0) > -1;
  do if (i4 << 24 >> 24 == 19) if (i7) {
   i1 = -1;
   break L1;
  } else i13 = 54; else {
   if (i7) {
    HEAP32[i30 + (i10 << 2) >> 2] = i6;
    i7 = i28 + (i10 << 3) | 0;
    i10 = HEAP32[i7 + 4 >> 2] | 0;
    i13 = i26;
    HEAP32[i13 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i13 + 4 >> 2] = i10;
    i13 = 54;
    break;
   }
   if (!i14) {
    i1 = 0;
    break L1;
   }
   _pop_arg_731(i26, i6, i27, i29);
   i3 = HEAP32[i24 >> 2] | 0;
   i13 = 55;
  } while (0);
  if ((i13 | 0) == 54) {
   i13 = 0;
   if (i14) i13 = 55; else i2 = 0;
  }
  L77 : do if ((i13 | 0) == 55) {
   i13 = 0;
   i3 = HEAP8[i3 + -1 >> 0] | 0;
   i3 = (i9 | 0) != 0 & (i3 & 15 | 0) == 3 ? i3 & -33 : i3;
   i4 = i5 & -65537;
   i10 = (i5 & 8192 | 0) == 0 ? i5 : i4;
   L79 : do switch (i3 | 0) {
   case 110:
    switch ((i9 & 255) << 24 >> 24) {
    case 0:
     {
      HEAP32[HEAP32[i26 >> 2] >> 2] = i1;
      i2 = 0;
      break L77;
     }
    case 1:
     {
      HEAP32[HEAP32[i26 >> 2] >> 2] = i1;
      i2 = 0;
      break L77;
     }
    case 2:
     {
      i2 = HEAP32[i26 >> 2] | 0;
      HEAP32[i2 >> 2] = i1;
      HEAP32[i2 + 4 >> 2] = ((i1 | 0) < 0) << 31 >> 31;
      i2 = 0;
      break L77;
     }
    case 3:
     {
      HEAP16[HEAP32[i26 >> 2] >> 1] = i1;
      i2 = 0;
      break L77;
     }
    case 4:
     {
      HEAP8[HEAP32[i26 >> 2] >> 0] = i1;
      i2 = 0;
      break L77;
     }
    case 6:
     {
      HEAP32[HEAP32[i26 >> 2] >> 2] = i1;
      i2 = 0;
      break L77;
     }
    case 7:
     {
      i2 = HEAP32[i26 >> 2] | 0;
      HEAP32[i2 >> 2] = i1;
      HEAP32[i2 + 4 >> 2] = ((i1 | 0) < 0) << 31 >> 31;
      i2 = 0;
      break L77;
     }
    default:
     {
      i2 = 0;
      break L77;
     }
    }
   case 112:
    {
     i3 = 120;
     i2 = i2 >>> 0 > 8 ? i2 : 8;
     i4 = i10 | 8;
     i13 = 67;
     break;
    }
   case 88:
   case 120:
    {
     i4 = i10;
     i13 = 67;
     break;
    }
   case 111:
    {
     i7 = i26;
     i7 = _fmt_o(HEAP32[i7 >> 2] | 0, HEAP32[i7 + 4 >> 2] | 0, i15) | 0;
     i4 = i16 - i7 | 0;
     i5 = 0;
     i6 = 46956;
     i2 = (i10 & 8 | 0) == 0 | (i2 | 0) > (i4 | 0) ? i2 : i4 + 1 | 0;
     i4 = i10;
     i13 = 73;
     break;
    }
   case 105:
   case 100:
    {
     i4 = i26;
     i3 = HEAP32[i4 >> 2] | 0;
     i4 = HEAP32[i4 + 4 >> 2] | 0;
     if ((i4 | 0) < 0) {
      i3 = _i64Subtract(0, 0, i3 | 0, i4 | 0) | 0;
      i4 = getTempRet0() | 0;
      i5 = i26;
      HEAP32[i5 >> 2] = i3;
      HEAP32[i5 + 4 >> 2] = i4;
      i5 = 1;
      i6 = 46956;
      i13 = 72;
      break L79;
     } else {
      i5 = (i10 & 2049 | 0) != 0 & 1;
      i6 = (i10 & 2048 | 0) == 0 ? ((i10 & 1 | 0) == 0 ? 46956 : 46958) : 46957;
      i13 = 72;
      break L79;
     }
    }
   case 117:
    {
     i4 = i26;
     i5 = 0;
     i6 = 46956;
     i3 = HEAP32[i4 >> 2] | 0;
     i4 = HEAP32[i4 + 4 >> 2] | 0;
     i13 = 72;
     break;
    }
   case 99:
    {
     HEAP8[i17 >> 0] = HEAP32[i26 >> 2];
     i8 = i17;
     i5 = 0;
     i6 = 46956;
     i7 = 1;
     i3 = i4;
     i2 = i16;
     break;
    }
   case 115:
    {
     i9 = HEAP32[i26 >> 2] | 0;
     i9 = (i9 | 0) == 0 ? 46966 : i9;
     i10 = _memchr(i9, 0, i2) | 0;
     i32 = (i10 | 0) == 0;
     i8 = i9;
     i5 = 0;
     i6 = 46956;
     i7 = i32 ? i2 : i10 - i9 | 0;
     i3 = i4;
     i2 = i32 ? i9 + i2 | 0 : i10;
     break;
    }
   case 67:
    {
     HEAP32[i20 >> 2] = HEAP32[i26 >> 2];
     HEAP32[i18 >> 2] = 0;
     HEAP32[i26 >> 2] = i20;
     i6 = -1;
     i13 = 79;
     break;
    }
   case 83:
    {
     if (!i2) {
      _pad_734(i19, 32, i11, 0, i10);
      i2 = 0;
      i13 = 89;
     } else {
      i6 = i2;
      i13 = 79;
     }
     break;
    }
   case 65:
   case 71:
   case 70:
   case 69:
   case 97:
   case 103:
   case 102:
   case 101:
    {
     i2 = FUNCTION_TABLE_iidiiii[i23 & 1](i19, +HEAPF64[i26 >> 3], i11, i2, i10, i3) | 0;
     break L77;
    }
   default:
    {
     i5 = 0;
     i6 = 46956;
     i7 = i2;
     i3 = i10;
     i2 = i16;
    }
   } while (0);
   L102 : do if ((i13 | 0) == 67) {
    i7 = i26;
    i7 = _fmt_x(HEAP32[i7 >> 2] | 0, HEAP32[i7 + 4 >> 2] | 0, i15, i3 & 32) | 0;
    i6 = i26;
    i6 = (i4 & 8 | 0) == 0 | (HEAP32[i6 >> 2] | 0) == 0 & (HEAP32[i6 + 4 >> 2] | 0) == 0;
    i5 = i6 ? 0 : 2;
    i6 = i6 ? 46956 : 46956 + (i3 >>> 4) | 0;
    i13 = 73;
   } else if ((i13 | 0) == 72) {
    i7 = _fmt_u(i3, i4, i15) | 0;
    i4 = i10;
    i13 = 73;
   } else if ((i13 | 0) == 79) {
    i13 = 0;
    i5 = HEAP32[i26 >> 2] | 0;
    i2 = 0;
    while (1) {
     i3 = HEAP32[i5 >> 2] | 0;
     if (!i3) break;
     i3 = _wctomb(i21, i3) | 0;
     i4 = (i3 | 0) < 0;
     if (i4 | i3 >>> 0 > (i6 - i2 | 0) >>> 0) {
      i13 = 83;
      break;
     }
     i2 = i3 + i2 | 0;
     if (i6 >>> 0 > i2 >>> 0) i5 = i5 + 4 | 0; else break;
    }
    if ((i13 | 0) == 83) {
     i13 = 0;
     if (i4) {
      i1 = -1;
      break L1;
     }
    }
    _pad_734(i19, 32, i11, i2, i10);
    if (!i2) {
     i2 = 0;
     i13 = 89;
    } else {
     i4 = HEAP32[i26 >> 2] | 0;
     i5 = 0;
     while (1) {
      i3 = HEAP32[i4 >> 2] | 0;
      if (!i3) {
       i13 = 89;
       break L102;
      }
      i3 = _wctomb(i21, i3) | 0;
      i5 = i3 + i5 | 0;
      if ((i5 | 0) > (i2 | 0)) {
       i13 = 89;
       break L102;
      }
      _out_728(i19, i21, i3);
      if (i5 >>> 0 >= i2 >>> 0) {
       i13 = 89;
       break;
      } else i4 = i4 + 4 | 0;
     }
    }
   } while (0);
   if ((i13 | 0) == 73) {
    i13 = 0;
    i3 = i26;
    i3 = (HEAP32[i3 >> 2] | 0) != 0 | (HEAP32[i3 + 4 >> 2] | 0) != 0;
    i32 = (i2 | 0) != 0 | i3;
    i3 = i16 - i7 + ((i3 ^ 1) & 1) | 0;
    i8 = i32 ? i7 : i15;
    i7 = i32 ? ((i2 | 0) > (i3 | 0) ? i2 : i3) : 0;
    i3 = (i2 | 0) > -1 ? i4 & -65537 : i4;
    i2 = i16;
   } else if ((i13 | 0) == 89) {
    i13 = 0;
    _pad_734(i19, 32, i11, i2, i10 ^ 8192);
    i2 = (i11 | 0) > (i2 | 0) ? i11 : i2;
    break;
   }
   i10 = i2 - i8 | 0;
   i9 = (i7 | 0) < (i10 | 0) ? i10 : i7;
   i32 = i9 + i5 | 0;
   i2 = (i11 | 0) < (i32 | 0) ? i32 : i11;
   _pad_734(i19, 32, i2, i32, i3);
   _out_728(i19, i6, i5);
   _pad_734(i19, 48, i2, i32, i3 ^ 65536);
   _pad_734(i19, 48, i9, i10, 0);
   _out_728(i19, i8, i10);
   _pad_734(i19, 32, i2, i32, i3 ^ 8192);
  } while (0);
  i4 = i12;
 }
 L123 : do if ((i13 | 0) == 92) if (!i19) if (!i4) i1 = 0; else {
  i1 = 1;
  while (1) {
   i2 = HEAP32[i30 + (i1 << 2) >> 2] | 0;
   if (!i2) break;
   _pop_arg_731(i28 + (i1 << 3) | 0, i2, i27, i29);
   i1 = i1 + 1 | 0;
   if (i1 >>> 0 >= 10) {
    i1 = 1;
    break L123;
   }
  }
  while (1) {
   if (HEAP32[i30 + (i1 << 2) >> 2] | 0) {
    i1 = -1;
    break L123;
   }
   i1 = i1 + 1 | 0;
   if (i1 >>> 0 >= 10) {
    i1 = 1;
    break;
   }
  }
 } while (0);
 STACKTOP = i31;
 return i1 | 0;
}

function __ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(i3, i4, i6, i8, d1, d2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 d1 = +d1;
 d2 = +d2;
 var d5 = 0.0, d7 = 0.0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, d17 = 0.0, d18 = 0.0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i12 = i14;
 i13 = ~~+Math_floor(+d1);
 if ((i13 | 0) != (~~d1 | 0)) {
  i11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23362) | 0, 23414) | 0, 33655) | 0, 69) | 0, 33662) | 0, 23526) | 0;
  __ZNKSt3__28ios_base6getlocEv(i12, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58792) | 0;
  i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i12);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i10) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 i10 = ~~+Math_floor(+d2);
 if ((i10 | 0) != (~~d2 | 0)) {
  i11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23556) | 0, 23414) | 0, 33655) | 0, 70) | 0, 33662) | 0, 23526) | 0;
  __ZNKSt3__28ios_base6getlocEv(i12, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58792) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i12);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 i11 = i13 + 1 | 0;
 i9 = i10 + 1 | 0;
 if (!((i10 | 0) > -1 & i10 >>> 0 < i6 >>> 0)) {
  i15 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23608) | 0, 23414) | 0, 33655) | 0, 79) | 0, 33662) | 0, 23654) | 0;
  __ZNKSt3__28ios_base6getlocEv(i12, i15 + (HEAP32[(HEAP32[i15 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i16 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58792) | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 28 >> 2] & 63](i16, 10) | 0;
  __ZNSt3__26localeD2Ev(i12);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i16) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
  _abort();
 }
 if (i9 >>> 0 >= i6 >>> 0) {
  i16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23671) | 0, 23414) | 0, 33655) | 0, 80) | 0, 33662) | 0, 23731) | 0;
  __ZNKSt3__28ios_base6getlocEv(i12, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58792) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i12);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 }
 if (!((i13 | 0) > -1 & i13 >>> 0 < i4 >>> 0)) {
  i16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23755) | 0, 23414) | 0, 33655) | 0, 81) | 0, 33662) | 0, 23800) | 0;
  __ZNKSt3__28ios_base6getlocEv(i12, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58792) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i12);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 }
 if (i11 >>> 0 >= i4 >>> 0) {
  i16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23817) | 0, 23414) | 0, 33655) | 0, 82) | 0, 33662) | 0, 23876) | 0;
  __ZNKSt3__28ios_base6getlocEv(i12, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58792) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i12);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 }
 i4 = i3 + (Math_imul(i10, i8) | 0) | 0;
 i3 = i4 + i8 | 0;
 d18 = +(i11 | 0) - d1;
 d5 = +(i9 | 0) - d2;
 d7 = d18 * d5;
 d17 = d1 - +(i13 | 0);
 d5 = d17 * d5;
 d2 = d2 - +(i10 | 0);
 d1 = d18 * d2;
 d2 = d17 * d2;
 if (!(d7 >= 0.0) | !(d7 <= 1.0001)) {
  i16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23900) | 0, 23414) | 0, 33655) | 0, 94) | 0, 33662) | 0, 23947) | 0;
  __ZNKSt3__28ios_base6getlocEv(i12, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58792) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i12);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 }
 if (!(d5 >= 0.0) | !(d5 <= 1.0001)) {
  i16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23960) | 0, 23414) | 0, 33655) | 0, 95) | 0, 33662) | 0, 23947) | 0;
  __ZNKSt3__28ios_base6getlocEv(i12, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58792) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i12);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 }
 if (!(d1 >= 0.0) | !(d1 <= 1.0001)) {
  i16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24007) | 0, 23414) | 0, 33655) | 0, 96) | 0, 33662) | 0, 23947) | 0;
  __ZNKSt3__28ios_base6getlocEv(i12, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58792) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i12);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 }
 if (!(d2 >= 0.0) | !(d2 <= 1.0001)) {
  i16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24054) | 0, 23414) | 0, 33655) | 0, 97) | 0, 33662) | 0, 23947) | 0;
  __ZNKSt3__28ios_base6getlocEv(i12, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58792) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i12);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 }
 if (!(d2 + (d1 + (d7 + d5)) <= 1.0001)) {
  i16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24101) | 0, 23414) | 0, 33655) | 0, 98) | 0, 33662) | 0, 23947) | 0;
  __ZNKSt3__28ios_base6getlocEv(i12, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58792) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i12);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 } else {
  STACKTOP = i14;
  return +(d7 * +HEAPF32[i4 + (i13 << 2) >> 2] + d5 * +HEAPF32[i4 + (i11 << 2) >> 2] + d1 * +HEAPF32[i3 + (i13 << 2) >> 2] + d2 * +HEAPF32[i3 + (i11 << 2) >> 2]);
 }
 return +(0.0);
}

function _decfloat(i23, i2, i26, i25, i24, i20) {
 i23 = i23 | 0;
 i2 = i2 | 0;
 i26 = i26 | 0;
 i25 = i25 | 0;
 i24 = i24 | 0;
 i20 = i20 | 0;
 var d1 = 0.0, i3 = 0, d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, d10 = 0.0, d11 = 0.0, i12 = 0, d13 = 0.0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i21 = 0, i22 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, d31 = 0.0;
 i30 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 i27 = i30;
 i28 = i25 + i26 | 0;
 i29 = 0 - i28 | 0;
 i22 = i23 + 4 | 0;
 i21 = i23 + 104 | 0;
 i3 = 0;
 L1 : while (1) {
  switch (i2 | 0) {
  case 46:
   {
    i18 = 7;
    break L1;
   }
  case 48:
   break;
  default:
   {
    i14 = 0;
    i9 = i3;
    i3 = 0;
    i8 = 0;
    break L1;
   }
  }
  i2 = HEAP32[i22 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
   HEAP32[i22 >> 2] = i2 + 1;
   i2 = HEAPU8[i2 >> 0] | 0;
  } else i2 = ___shgetc(i23) | 0;
  i3 = 1;
 }
 if ((i18 | 0) == 7) {
  i2 = HEAP32[i22 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
   HEAP32[i22 >> 2] = i2 + 1;
   i2 = HEAPU8[i2 >> 0] | 0;
  } else i2 = ___shgetc(i23) | 0;
  if ((i2 | 0) == 48) {
   i3 = 0;
   i2 = 0;
   while (1) {
    i3 = _i64Add(i3 | 0, i2 | 0, -1, -1) | 0;
    i8 = getTempRet0() | 0;
    i2 = HEAP32[i22 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
     HEAP32[i22 >> 2] = i2 + 1;
     i2 = HEAPU8[i2 >> 0] | 0;
    } else i2 = ___shgetc(i23) | 0;
    if ((i2 | 0) == 48) i2 = i8; else {
     i14 = 1;
     i9 = 1;
     break;
    }
   }
  } else {
   i14 = 1;
   i9 = i3;
   i3 = 0;
   i8 = 0;
  }
 }
 HEAP32[i27 >> 2] = 0;
 i7 = i2 + -48 | 0;
 i6 = (i2 | 0) == 46;
 L22 : do if (i6 | i7 >>> 0 < 10) {
  i19 = i27 + 496 | 0;
  i15 = 0;
  i5 = 0;
  i12 = 0;
  i16 = i14;
  i17 = i9;
  i18 = i7;
  i9 = 0;
  i7 = 0;
  L24 : while (1) {
   do if (i6) if (!i16) {
    i16 = 1;
    i3 = i9;
    i8 = i7;
   } else break L24; else {
    i9 = _i64Add(i9 | 0, i7 | 0, 1, 0) | 0;
    i7 = getTempRet0() | 0;
    i14 = (i2 | 0) != 48;
    if ((i5 | 0) >= 125) {
     if (!i14) break;
     HEAP32[i19 >> 2] = HEAP32[i19 >> 2] | 1;
     break;
    }
    i6 = i27 + (i5 << 2) | 0;
    if (!i15) i2 = i18; else i2 = i2 + -48 + ((HEAP32[i6 >> 2] | 0) * 10 | 0) | 0;
    HEAP32[i6 >> 2] = i2;
    i15 = i15 + 1 | 0;
    i17 = (i15 | 0) == 9;
    i15 = i17 ? 0 : i15;
    i5 = i5 + (i17 & 1) | 0;
    i12 = i14 ? i9 : i12;
    i17 = 1;
   } while (0);
   i2 = HEAP32[i22 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
    HEAP32[i22 >> 2] = i2 + 1;
    i2 = HEAPU8[i2 >> 0] | 0;
   } else i2 = ___shgetc(i23) | 0;
   i18 = i2 + -48 | 0;
   i6 = (i2 | 0) == 46;
   if (!(i6 | i18 >>> 0 < 10)) {
    i14 = i16;
    i6 = i17;
    i18 = 31;
    break L22;
   }
  }
  i2 = i15;
  i6 = (i17 | 0) != 0;
  i18 = 39;
 } else {
  i15 = 0;
  i5 = 0;
  i12 = 0;
  i6 = i9;
  i9 = 0;
  i7 = 0;
  i18 = 31;
 } while (0);
 do if ((i18 | 0) == 31) {
  i19 = (i14 | 0) == 0;
  i3 = i19 ? i9 : i3;
  i8 = i19 ? i7 : i8;
  i6 = (i6 | 0) != 0;
  if (!(i6 & (i2 | 32 | 0) == 101)) if ((i2 | 0) > -1) {
   i2 = i15;
   i18 = 39;
   break;
  } else {
   i2 = i15;
   i18 = 41;
   break;
  }
  i6 = _scanexp(i23, i20) | 0;
  i2 = getTempRet0() | 0;
  if ((i6 | 0) == 0 & (i2 | 0) == -2147483648) {
   if (!i20) {
    ___shlim(i23, 0, 0);
    d1 = 0.0;
    break;
   }
   if (!(HEAP32[i21 >> 2] | 0)) {
    i6 = 0;
    i2 = 0;
   } else {
    HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + -1;
    i6 = 0;
    i2 = 0;
   }
  }
  i3 = _i64Add(i6 | 0, i2 | 0, i3 | 0, i8 | 0) | 0;
  i2 = i15;
  i8 = getTempRet0() | 0;
  i18 = 43;
 } while (0);
 if ((i18 | 0) == 39) if (HEAP32[i21 >> 2] | 0) {
  HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + -1;
  if (i6) i18 = 43; else i18 = 42;
 } else i18 = 41;
 if ((i18 | 0) == 41) if (i6) i18 = 43; else i18 = 42;
 do if ((i18 | 0) == 42) {
  i29 = ___errno_location() | 0;
  HEAP32[i29 >> 2] = 22;
  ___shlim(i23, 0, 0);
  d1 = 0.0;
 } else if ((i18 | 0) == 43) {
  i6 = HEAP32[i27 >> 2] | 0;
  if (!i6) {
   d1 = +(i24 | 0) * 0.0;
   break;
  }
  if (((i7 | 0) < 0 | (i7 | 0) == 0 & i9 >>> 0 < 10) & ((i3 | 0) == (i9 | 0) & (i8 | 0) == (i7 | 0)) ? (i26 | 0) > 30 | (i6 >>> i26 | 0) == 0 : 0) {
   d1 = +(i24 | 0) * +(i6 >>> 0);
   break;
  }
  i23 = (i25 | 0) / -2 | 0;
  i22 = ((i23 | 0) < 0) << 31 >> 31;
  if ((i8 | 0) > (i22 | 0) | (i8 | 0) == (i22 | 0) & i3 >>> 0 > i23 >>> 0) {
   i29 = ___errno_location() | 0;
   HEAP32[i29 >> 2] = 34;
   d1 = +(i24 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
   break;
  }
  i23 = i25 + -106 | 0;
  i22 = ((i23 | 0) < 0) << 31 >> 31;
  if ((i8 | 0) < (i22 | 0) | (i8 | 0) == (i22 | 0) & i3 >>> 0 < i23 >>> 0) {
   i29 = ___errno_location() | 0;
   HEAP32[i29 >> 2] = 34;
   d1 = +(i24 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
   break;
  }
  if (i2) {
   if ((i2 | 0) < 9) {
    i7 = i27 + (i5 << 2) | 0;
    i6 = HEAP32[i7 >> 2] | 0;
    while (1) {
     i6 = i6 * 10 | 0;
     if ((i2 | 0) >= 8) break; else i2 = i2 + 1 | 0;
    }
    HEAP32[i7 >> 2] = i6;
   }
   i5 = i5 + 1 | 0;
  }
  if ((i12 | 0) < 9 ? (i12 | 0) <= (i3 | 0) & (i3 | 0) < 18 : 0) {
   if ((i3 | 0) == 9) {
    d1 = +(i24 | 0) * +((HEAP32[i27 >> 2] | 0) >>> 0);
    break;
   }
   if ((i3 | 0) < 9) {
    d1 = +(i24 | 0) * +((HEAP32[i27 >> 2] | 0) >>> 0) / +(HEAP32[4464 + (8 - i3 << 2) >> 2] | 0);
    break;
   }
   i23 = i26 + 27 + (Math_imul(i3, -3) | 0) | 0;
   i2 = HEAP32[i27 >> 2] | 0;
   if ((i23 | 0) > 30 | (i2 >>> i23 | 0) == 0) {
    d1 = +(i24 | 0) * +(i2 >>> 0) * +(HEAP32[4464 + (i3 + -10 << 2) >> 2] | 0);
    break;
   }
  }
  i2 = (i3 | 0) % 9 | 0;
  if (!i2) i6 = 0; else {
   i12 = (i3 | 0) > -1 ? i2 : i2 + 9 | 0;
   i8 = HEAP32[4464 + (8 - i12 << 2) >> 2] | 0;
   if (i5) {
    i9 = 1e9 / (i8 | 0) | 0;
    i7 = 0;
    i6 = 0;
    i2 = 0;
    do {
     i21 = i27 + (i2 << 2) | 0;
     i22 = HEAP32[i21 >> 2] | 0;
     i23 = (i22 >>> 0) / (i8 >>> 0) | 0;
     i22 = i22 - (Math_imul(i23, i8) | 0) | 0;
     i23 = i23 + i7 | 0;
     HEAP32[i21 >> 2] = i23;
     i7 = Math_imul(i9, i22) | 0;
     i23 = (i2 | 0) == (i6 | 0) & (i23 | 0) == 0;
     i3 = i23 ? i3 + -9 | 0 : i3;
     i6 = i23 ? i6 + 1 & 127 : i6;
     i2 = i2 + 1 | 0;
    } while ((i2 | 0) != (i5 | 0));
    if (!i7) i2 = i5; else {
     HEAP32[i27 + (i5 << 2) >> 2] = i7;
     i2 = i5 + 1 | 0;
    }
   } else {
    i6 = 0;
    i2 = 0;
   }
   i5 = i2;
   i3 = 9 - i12 + i3 | 0;
  }
  i2 = 0;
  L104 : while (1) {
   i14 = (i3 | 0) < 18;
   i15 = (i3 | 0) == 18;
   i16 = i27 + (i6 << 2) | 0;
   while (1) {
    if (!i14) {
     if (!i15) break L104;
     if ((HEAP32[i16 >> 2] | 0) >>> 0 >= 9007199) {
      i3 = 18;
      break L104;
     }
    }
    i7 = 0;
    i17 = i5;
    i5 = i5 + 127 | 0;
    while (1) {
     i9 = i5 & 127;
     i8 = i27 + (i9 << 2) | 0;
     i5 = _bitshift64Shl(HEAP32[i8 >> 2] | 0, 0, 29) | 0;
     i5 = _i64Add(i5 | 0, getTempRet0() | 0, i7 | 0, 0) | 0;
     i7 = getTempRet0() | 0;
     if (i7 >>> 0 > 0 | (i7 | 0) == 0 & i5 >>> 0 > 1e9) {
      i12 = ___udivdi3(i5 | 0, i7 | 0, 1e9, 0) | 0;
      i23 = ___muldi3(i12 | 0, getTempRet0() | 0, 1e9, 0) | 0;
      i5 = _i64Subtract(i5 | 0, i7 | 0, i23 | 0, getTempRet0() | 0) | 0;
      getTempRet0() | 0;
     } else i12 = 0;
     HEAP32[i8 >> 2] = i5;
     i23 = (i9 | 0) == (i6 | 0);
     i8 = (i9 | 0) != (i17 + 127 & 127 | 0) | i23 ? i17 : (i5 | 0) == 0 ? i9 : i17;
     if (i23) break; else {
      i7 = i12;
      i17 = i8;
      i5 = i9 + -1 | 0;
     }
    }
    i2 = i2 + -29 | 0;
    if (!i12) i5 = i17; else break;
   }
   i6 = i6 + 127 & 127;
   i5 = i8 + 127 & 127;
   i7 = i27 + ((i8 + 126 & 127) << 2) | 0;
   if ((i6 | 0) == (i8 | 0)) HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | HEAP32[i27 + (i5 << 2) >> 2]; else i5 = i17;
   HEAP32[i27 + (i6 << 2) >> 2] = i12;
   i3 = i3 + 9 | 0;
  }
  L123 : while (1) {
   i15 = i5 + 1 & 127;
   i16 = i27 + ((i5 + 127 & 127) << 2) | 0;
   while (1) {
    i9 = (i3 | 0) == 18;
    i14 = (i3 | 0) > 27 ? 9 : 1;
    i17 = i6;
    while (1) {
     i8 = 0;
     while (1) {
      i6 = i8 + i17 & 127;
      if ((i6 | 0) == (i5 | 0)) {
       i18 = 92;
       break;
      }
      i6 = HEAP32[i27 + (i6 << 2) >> 2] | 0;
      i7 = HEAP32[14072 + (i8 << 2) >> 2] | 0;
      if (i6 >>> 0 < i7 >>> 0) {
       i18 = 92;
       break;
      }
      if (i6 >>> 0 > i7 >>> 0) break;
      if ((i8 + 1 | 0) >>> 0 < 2) i8 = 1; else {
       i18 = 92;
       break;
      }
     }
     if ((i18 | 0) == 92 ? (i18 = 0, i9) : 0) break L123;
     i2 = i14 + i2 | 0;
     if ((i17 | 0) == (i5 | 0)) i17 = i5; else break;
    }
    i9 = (1 << i14) + -1 | 0;
    i12 = 1e9 >>> i14;
    i8 = 0;
    i6 = i17;
    i7 = i17;
    do {
     i21 = i27 + (i7 << 2) | 0;
     i22 = HEAP32[i21 >> 2] | 0;
     i23 = (i22 >>> i14) + i8 | 0;
     HEAP32[i21 >> 2] = i23;
     i8 = Math_imul(i22 & i9, i12) | 0;
     i23 = (i7 | 0) == (i6 | 0) & (i23 | 0) == 0;
     i3 = i23 ? i3 + -9 | 0 : i3;
     i6 = i23 ? i6 + 1 & 127 : i6;
     i7 = i7 + 1 & 127;
    } while ((i7 | 0) != (i5 | 0));
    if (i8 | 0) {
     if ((i15 | 0) != (i6 | 0)) break;
     HEAP32[i16 >> 2] = HEAP32[i16 >> 2] | 1;
    }
   }
   HEAP32[i27 + (i5 << 2) >> 2] = i8;
   i5 = i15;
  }
  d1 = 0.0;
  i3 = i5;
  i6 = 0;
  do {
   i7 = i6 + i17 & 127;
   i5 = i3 + 1 & 127;
   if ((i7 | 0) == (i3 | 0)) {
    HEAP32[i27 + (i5 + -1 << 2) >> 2] = 0;
    i3 = i5;
   }
   d1 = d1 * 1.0e9 + +((HEAP32[i27 + (i7 << 2) >> 2] | 0) >>> 0);
   i6 = i6 + 1 | 0;
  } while ((i6 | 0) != 2);
  d13 = +(i24 | 0);
  d4 = d1 * d13;
  i7 = i2 + 53 | 0;
  i8 = i7 - i25 | 0;
  i9 = (i8 | 0) < (i26 | 0);
  i6 = i9 ? ((i8 | 0) > 0 ? i8 : 0) : i26;
  if ((i6 | 0) < 53) {
   d31 = +_copysignl(+_scalbn(1.0, 105 - i6 | 0), d4);
   d10 = +_fmodl(d4, +_scalbn(1.0, 53 - i6 | 0));
   d11 = d31;
   d1 = d10;
   d10 = d31 + (d4 - d10);
  } else {
   d11 = 0.0;
   d1 = 0.0;
   d10 = d4;
  }
  i5 = i17 + 2 & 127;
  if ((i5 | 0) != (i3 | 0)) {
   i5 = HEAP32[i27 + (i5 << 2) >> 2] | 0;
   do if (i5 >>> 0 >= 5e8) {
    if ((i5 | 0) != 5e8) {
     d1 = d13 * .75 + d1;
     break;
    }
    if ((i17 + 3 & 127 | 0) == (i3 | 0)) {
     d1 = d13 * .5 + d1;
     break;
    } else {
     d1 = d13 * .75 + d1;
     break;
    }
   } else {
    if ((i5 | 0) == 0 ? (i17 + 3 & 127 | 0) == (i3 | 0) : 0) break;
    d1 = d13 * .25 + d1;
   } while (0);
   if ((53 - i6 | 0) > 1 ? !(+_fmodl(d1, 1.0) != 0.0) : 0) d4 = d1 + 1.0; else d4 = d1;
  } else d4 = d1;
  d1 = d10 + d4 - d11;
  do if ((i7 & 2147483647 | 0) > (-2 - i28 | 0)) {
   i28 = !(+Math_abs(+d1) >= 9007199254740992.0);
   i2 = i2 + ((i28 ^ 1) & 1) | 0;
   d1 = i28 ? d1 : d1 * .5;
   if ((i2 + 50 | 0) <= (i29 | 0) ? !(d4 != 0.0 & (i9 & ((i6 | 0) != (i8 | 0) | i28))) : 0) break;
   i29 = ___errno_location() | 0;
   HEAP32[i29 >> 2] = 34;
  } while (0);
  d1 = +_scalbnl(d1, i2);
 } while (0);
 STACKTOP = i30;
 return +d1;
}
function __ZN10__cxxabiv112_GLOBAL__N_114parse_new_exprINS0_2DbEEEPKcS4_S4_RT_(i19, i4, i13) {
 i19 = i19 | 0;
 i4 = i4 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i14 = i21 + 88 | 0;
 i20 = i21 + 76 | 0;
 i17 = i21 + 64 | 0;
 i18 = i21 + 40 | 0;
 i15 = i21 + 16 | 0;
 i12 = i21;
 i16 = i21 + 52 | 0;
 i3 = i4;
 L1 : do if ((i3 - i19 | 0) > 3) {
  i1 = HEAP8[i19 >> 0] | 0;
  if (i1 << 24 >> 24 == 103) {
   i11 = (HEAP8[i19 + 1 >> 0] | 0) == 115;
   i1 = i11 ? i19 + 2 | 0 : i19;
   i2 = i1;
   i1 = HEAP8[i1 >> 0] | 0;
  } else {
   i11 = 0;
   i2 = i19;
  }
  if (i1 << 24 >> 24 == 110) {
   i1 = HEAP8[i2 + 1 >> 0] | 0;
   switch (i1 << 24 >> 24) {
   case 97:
   case 119:
    break;
   default:
    {
     i1 = i19;
     break L1;
    }
   }
   i10 = i1 << 24 >> 24 == 97;
   i1 = i2 + 2 | 0;
   L8 : do if ((i1 | 0) != (i4 | 0)) {
    i9 = 0;
    while (1) {
     if ((HEAP8[i1 >> 0] | 0) == 95) break;
     i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
     if ((i2 | 0) == (i1 | 0) | (i2 | 0) == (i4 | 0)) break L8; else {
      i9 = 1;
      i1 = i2;
     }
    }
    i7 = i1 + 1 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i7, i4, i13) | 0;
    if (!((i2 | 0) == (i7 | 0) | (i2 | 0) == (i4 | 0))) {
     i1 = HEAP8[i2 >> 0] | 0;
     L15 : do if (!((i3 - i2 | 0) > 2 & i1 << 24 >> 24 == 112)) if (i1 << 24 >> 24 == 69) {
      i6 = 0;
      i7 = i2;
     } else break L8; else {
      if ((HEAP8[i2 + 1 >> 0] | 0) != 105) break L8;
      i1 = i2 + 2 | 0;
      while (1) {
       if ((HEAP8[i1 >> 0] | 0) == 69) {
        i6 = 1;
        i7 = i1;
        break L15;
       }
       i7 = i1;
       i1 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i13) | 0;
       if ((i1 | 0) == (i7 | 0) | (i1 | 0) == (i4 | 0)) break L8;
      }
     } while (0);
     HEAP32[i20 >> 2] = 0;
     HEAP32[i20 + 4 >> 2] = 0;
     HEAP32[i20 + 8 >> 2] = 0;
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i20 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     if (i6) {
      i3 = i13 + 4 | 0;
      i1 = HEAP32[i3 >> 2] | 0;
      if ((HEAP32[i13 >> 2] | 0) == (i1 | 0)) {
       i1 = i19;
       i2 = 1;
      } else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i17, i1 + -24 | 0);
       i1 = i20 + 11 | 0;
       if ((HEAP8[i1 >> 0] | 0) < 0) {
        i8 = HEAP32[i20 >> 2] | 0;
        HEAP8[i14 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i14);
        HEAP32[i20 + 4 >> 2] = 0;
       } else {
        HEAP8[i14 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc(i20, i14);
        HEAP8[i1 >> 0] = 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i20);
       HEAP32[i20 >> 2] = HEAP32[i17 >> 2];
       HEAP32[i20 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
       HEAP32[i20 + 8 >> 2] = HEAP32[i17 + 8 >> 2];
       i1 = 0;
       while (1) {
        if ((i1 | 0) == 3) break;
        HEAP32[i17 + (i1 << 2) >> 2] = 0;
        i1 = i1 + 1 | 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
       i2 = HEAP32[i3 >> 2] | 0;
       i1 = 0;
       while (1) {
        if ((i1 | 0) == -1) break;
        i8 = i1 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i8 * 24 | 0) | 0);
        i1 = i8;
       }
       i1 = i2 + -24 | 0;
       HEAP32[i3 >> 2] = i1;
       i5 = i13;
       i8 = 33;
      }
     } else {
      i1 = i13 + 4 | 0;
      i3 = i1;
      i5 = i13;
      i1 = HEAP32[i1 >> 2] | 0;
      i8 = 33;
     }
     if ((i8 | 0) == 33) if ((HEAP32[i5 >> 2] | 0) == (i1 | 0)) {
      i1 = i19;
      i2 = 1;
     } else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i17, i1 + -24 | 0);
      i4 = HEAP32[i3 >> 2] | 0;
      i1 = 0;
      while (1) {
       if ((i1 | 0) == -1) break;
       i2 = i1 + -1 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4 + (i2 * 24 | 0) | 0);
       i1 = i2;
      }
      i2 = i4 + -24 | 0;
      HEAP32[i3 >> 2] = i2;
      HEAP32[i18 >> 2] = 0;
      HEAP32[i18 + 4 >> 2] = 0;
      HEAP32[i18 + 8 >> 2] = 0;
      i1 = 0;
      while (1) {
       if ((i1 | 0) == 3) break;
       HEAP32[i18 + (i1 << 2) >> 2] = 0;
       i1 = i1 + 1 | 0;
      }
      if (i9) if ((HEAP32[i5 >> 2] | 0) == (i2 | 0)) {
       i1 = i19;
       i2 = 1;
      } else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i15, i4 + -48 | 0);
       i1 = i18 + 11 | 0;
       if ((HEAP8[i1 >> 0] | 0) < 0) {
        i8 = HEAP32[i18 >> 2] | 0;
        HEAP8[i14 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i14);
        HEAP32[i18 + 4 >> 2] = 0;
       } else {
        HEAP8[i14 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc(i18, i14);
        HEAP8[i1 >> 0] = 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i18);
       HEAP32[i18 >> 2] = HEAP32[i15 >> 2];
       HEAP32[i18 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
       HEAP32[i18 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
       i1 = 0;
       while (1) {
        if ((i1 | 0) == 3) break;
        HEAP32[i15 + (i1 << 2) >> 2] = 0;
        i1 = i1 + 1 | 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
       i2 = HEAP32[i3 >> 2] | 0;
       i1 = 0;
       while (1) {
        if ((i1 | 0) == -1) break;
        i8 = i1 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i8 * 24 | 0) | 0);
        i1 = i8;
       }
       HEAP32[i3 >> 2] = i2 + -24;
       i8 = 52;
      } else i8 = 52;
      if ((i8 | 0) == 52) {
       HEAP32[i14 >> 2] = 0;
       HEAP32[i14 + 4 >> 2] = 0;
       HEAP32[i14 + 8 >> 2] = 0;
       i1 = 0;
       while (1) {
        if ((i1 | 0) == 3) break;
        HEAP32[i14 + (i1 << 2) >> 2] = 0;
        i1 = i1 + 1 | 0;
       }
       if (i11) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc(i14, 50598);
       if (i10) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i14, 50808) | 0; else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i14, 50558) | 0;
       if (i9) {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i12, 50526, i18);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i12, 50812) | 0;
        HEAP32[i15 >> 2] = HEAP32[i12 >> 2];
        HEAP32[i15 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
        HEAP32[i15 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
        i1 = 0;
        while (1) {
         if ((i1 | 0) == 3) break;
         HEAP32[i12 + (i1 << 2) >> 2] = 0;
         i1 = i1 + 1 | 0;
        }
        i11 = HEAP8[i15 + 11 >> 0] | 0;
        i10 = i11 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i14, i10 ? HEAP32[i15 >> 2] | 0 : i15, i10 ? HEAP32[i15 + 4 >> 2] | 0 : i11 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
       }
       i11 = HEAP8[i17 + 11 >> 0] | 0;
       i10 = i11 << 24 >> 24 < 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i14, i10 ? HEAP32[i17 >> 2] | 0 : i17, i10 ? HEAP32[i17 + 4 >> 2] | 0 : i11 & 255) | 0;
       if (i6) {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i12, 50521, i20);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i12, 50524) | 0;
        HEAP32[i15 >> 2] = HEAP32[i12 >> 2];
        HEAP32[i15 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
        HEAP32[i15 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
        i1 = 0;
        while (1) {
         if ((i1 | 0) == 3) break;
         HEAP32[i12 + (i1 << 2) >> 2] = 0;
         i1 = i1 + 1 | 0;
        }
        i11 = HEAP8[i15 + 11 >> 0] | 0;
        i10 = i11 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i14, i10 ? HEAP32[i15 >> 2] | 0 : i15, i10 ? HEAP32[i15 + 4 >> 2] | 0 : i11 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
       };
       HEAP32[i16 >> 2] = HEAP32[i14 >> 2];
       HEAP32[i16 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
       HEAP32[i16 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
       i1 = 0;
       while (1) {
        if ((i1 | 0) == 3) break;
        HEAP32[i14 + (i1 << 2) >> 2] = 0;
        i1 = i1 + 1 | 0;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i15, i16);
       i1 = HEAP32[i3 >> 2] | 0;
       if (i1 >>> 0 < (HEAP32[i13 + 8 >> 2] | 0) >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i1, i15);
        HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 24;
       } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i13, i15);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i15);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
       i1 = i7 + 1 | 0;
       i2 = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i18);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i20);
     if (!i2) break L1;
    }
   } while (0);
   i1 = i19;
  } else i1 = i19;
 } else i1 = i19; while (0);
 STACKTOP = i21;
 return i1 | 0;
}

function _arGetTransMatMultiSquare2(i20, i23, i12, i25, i18) {
 i20 = i20 | 0;
 i23 = i23 | 0;
 i12 = i12 | 0;
 i25 = i25 | 0;
 i18 = i18 | 0;
 var d1 = 0.0, i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i21 = 0, i22 = 0, i24 = 0, i26 = 0, i27 = 0;
 i27 = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 i17 = i27 + 200 | 0;
 i16 = i27 + 192 | 0;
 i21 = i27 + 96 | 0;
 i19 = i27;
 i22 = i25 + 4 | 0;
 i2 = HEAP32[i22 >> 2] | 0;
 i15 = i25 + 112 | 0;
 i9 = i25 + 120 | 0;
 i8 = 0;
 while (1) {
  if ((i8 | 0) >= (i2 | 0)) break;
  i10 = HEAP32[i25 >> 2] | 0;
  i11 = i10 + (i8 * 320 | 0) | 0;
  if (!(HEAP32[i10 + (i8 * 320 | 0) + 4 >> 2] | 0)) {
   i3 = -1;
   i4 = 0;
   while (1) {
    if ((i4 | 0) >= (i12 | 0)) break;
    if ((HEAP32[i23 + (i4 << 8) + 8 >> 2] | 0) == (HEAP32[i11 >> 2] | 0) ? (d5 = +HEAPF64[i23 + (i4 << 8) + 40 >> 3], !(d5 < +HEAPF64[i15 >> 3])) : 0) if (!((i3 | 0) != -1 ? !(+HEAPF64[i23 + (i3 << 8) + 40 >> 3] < d5) : 0)) i3 = i4;
    i4 = i4 + 1 | 0;
   }
   HEAP32[i10 + (i8 * 320 | 0) + 304 >> 2] = i3;
   if ((i3 | 0) > -1) HEAP32[i23 + (i3 << 8) + 16 >> 2] = HEAP32[i23 + (i3 << 8) + 20 >> 2];
  } else {
   i7 = i10 + (i8 * 320 | 0) + 312 | 0;
   i6 = 0;
   i3 = -1;
   while (1) {
    if ((i6 | 0) >= (i12 | 0)) break;
    i4 = HEAP32[i23 + (i6 << 8) + 12 >> 2] | 0;
    if ((i4 | 0) == 0 ? (i14 = i23 + (i6 << 8) + 248 | 0, i13 = HEAP32[i14 >> 2] | 0, i14 = HEAP32[i14 + 4 >> 2] | 0, !((i13 | 0) == 0 & (i14 | 0) == 0)) : 0) {
     i4 = i7;
     if ((i13 | 0) == (HEAP32[i4 >> 2] | 0) ? (i14 | 0) == (HEAP32[i4 + 4 >> 2] | 0) : 0) i26 = 20;
    } else if ((i4 | 0) == (HEAP32[i11 >> 2] | 0)) i26 = 20;
    if ((i26 | 0) == 20) {
     i26 = 0;
     d1 = +HEAPF64[i23 + (i6 << 8) + 48 >> 3];
     if (!(d1 < +HEAPF64[i9 >> 3])) if (!((i3 | 0) != -1 ? !(+HEAPF64[i23 + (i3 << 8) + 48 >> 3] < d1) : 0)) i3 = i6;
    }
    i6 = i6 + 1 | 0;
   }
   HEAP32[i10 + (i8 * 320 | 0) + 304 >> 2] = i3;
   if ((i3 | 0) > -1) HEAP32[i23 + (i3 << 8) + 16 >> 2] = HEAP32[i23 + (i3 << 8) + 24 >> 2];
  }
  i8 = i8 + 1 | 0;
 }
 i9 = 0;
 i7 = 0;
 i3 = 0;
 i8 = 0;
 while (1) {
  if ((i8 | 0) >= (i2 | 0)) break;
  i2 = HEAP32[i25 >> 2] | 0;
  i4 = HEAP32[i2 + (i8 * 320 | 0) + 304 >> 2] | 0;
  do if ((i4 | 0) < 0) {
   i4 = i9;
   i2 = i7;
  } else {
   i6 = i23 + (i4 << 8) | 0;
   if (+_arGetTransMatSquare(i20, i6, +HEAPF64[i2 + (i8 * 320 | 0) + 8 >> 3], i19) > 4.0) {
    HEAP32[(HEAP32[i25 >> 2] | 0) + (i8 * 320 | 0) + 304 >> 2] = -1;
    i2 = i23 + (i4 << 8) + 236 | 0;
    if (HEAP32[i2 >> 2] | 0) {
     i4 = i9;
     i2 = i7;
     break;
    }
    HEAP32[i2 >> 2] = 7;
    i4 = i9;
    i2 = i7;
    break;
   }
   i4 = HEAP32[i6 >> 2] | 0;
   L45 : do if ((i9 | 0) == 0 | (i7 | 0) < (i4 | 0)) {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) {
      i2 = i4;
      i3 = i8;
      break L45;
     }
     i3 = 0;
     while (1) {
      if ((i3 | 0) == 4) break;
      HEAPF64[i21 + (i2 << 5) + (i3 << 3) >> 3] = +HEAPF64[i19 + (i2 << 5) + (i3 << 3) >> 3];
      i3 = i3 + 1 | 0;
     }
     i2 = i2 + 1 | 0;
    }
   } else i2 = i7; while (0);
   i4 = i9 + 1 | 0;
  } while (0);
  i9 = i4;
  i7 = i2;
  i8 = i8 + 1 | 0;
  i2 = HEAP32[i22 >> 2] | 0;
 }
 L57 : do if ((i9 | 0) != 0 ? (i9 | 0) >= (HEAP32[i25 + 128 >> 2] | 0) : 0) {
  _arUtilMatMul(i21, (HEAP32[i25 >> 2] | 0) + (i3 * 320 | 0) + 112 | 0, i19) | 0;
  i8 = i9 << 2;
  i10 = _malloc(i9 << 6) | 0;
  if (!i10) {
   _arLog(0, 3, 20581, i16);
   _exit(1);
  }
  i9 = _malloc(i9 * 96 | 0) | 0;
  if (!i9) {
   _arLog(0, 3, 20581, i17);
   _exit(1);
  }
  i7 = HEAP32[i22 >> 2] | 0;
  i6 = 0;
  i2 = 0;
  while (1) {
   if ((i6 | 0) >= (i7 | 0)) break;
   i3 = HEAP32[i25 >> 2] | 0;
   i4 = HEAP32[i3 + (i6 * 320 | 0) + 304 >> 2] | 0;
   if ((i4 | 0) >= 0) {
    i16 = HEAP32[i23 + (i4 << 8) + 16 >> 2] | 0;
    i15 = (4 - i16 | 0) % 4 | 0;
    i17 = i2 << 3;
    HEAPF64[i10 + (i17 << 3) >> 3] = +HEAPF64[i23 + (i4 << 8) + 168 + (i15 << 4) >> 3];
    HEAPF64[i10 + ((i17 | 1) << 3) >> 3] = +HEAPF64[i23 + (i4 << 8) + 168 + (i15 << 4) + 8 >> 3];
    i15 = (5 - i16 | 0) % 4 | 0;
    HEAPF64[i10 + ((i17 | 2) << 3) >> 3] = +HEAPF64[i23 + (i4 << 8) + 168 + (i15 << 4) >> 3];
    HEAPF64[i10 + ((i17 | 3) << 3) >> 3] = +HEAPF64[i23 + (i4 << 8) + 168 + (i15 << 4) + 8 >> 3];
    i15 = (6 - i16 | 0) % 4 | 0;
    HEAPF64[i10 + ((i17 | 4) << 3) >> 3] = +HEAPF64[i23 + (i4 << 8) + 168 + (i15 << 4) >> 3];
    HEAPF64[i10 + ((i17 | 5) << 3) >> 3] = +HEAPF64[i23 + (i4 << 8) + 168 + (i15 << 4) + 8 >> 3];
    i16 = (7 - i16 | 0) % 4 | 0;
    HEAPF64[i10 + ((i17 | 6) << 3) >> 3] = +HEAPF64[i23 + (i4 << 8) + 168 + (i16 << 4) >> 3];
    HEAPF64[i10 + ((i17 | 7) << 3) >> 3] = +HEAPF64[i23 + (i4 << 8) + 168 + (i16 << 4) + 8 >> 3];
    i17 = i2 * 12 | 0;
    HEAPF64[i9 + (i17 << 3) >> 3] = +HEAPF64[i3 + (i6 * 320 | 0) + 208 >> 3];
    HEAPF64[i9 + ((i17 | 1) << 3) >> 3] = +HEAPF64[i3 + (i6 * 320 | 0) + 216 >> 3];
    HEAPF64[i9 + ((i17 | 2) << 3) >> 3] = +HEAPF64[i3 + (i6 * 320 | 0) + 224 >> 3];
    HEAPF64[i9 + ((i17 | 3) << 3) >> 3] = +HEAPF64[i3 + (i6 * 320 | 0) + 232 >> 3];
    HEAPF64[i9 + (i17 + 4 << 3) >> 3] = +HEAPF64[i3 + (i6 * 320 | 0) + 240 >> 3];
    HEAPF64[i9 + (i17 + 5 << 3) >> 3] = +HEAPF64[i3 + (i6 * 320 | 0) + 248 >> 3];
    HEAPF64[i9 + (i17 + 6 << 3) >> 3] = +HEAPF64[i3 + (i6 * 320 | 0) + 256 >> 3];
    HEAPF64[i9 + (i17 + 7 << 3) >> 3] = +HEAPF64[i3 + (i6 * 320 | 0) + 264 >> 3];
    HEAPF64[i9 + (i17 + 8 << 3) >> 3] = +HEAPF64[i3 + (i6 * 320 | 0) + 272 >> 3];
    HEAPF64[i9 + (i17 + 9 << 3) >> 3] = +HEAPF64[i3 + (i6 * 320 | 0) + 280 >> 3];
    HEAPF64[i9 + (i17 + 10 << 3) >> 3] = +HEAPF64[i3 + (i6 * 320 | 0) + 288 >> 3];
    HEAPF64[i9 + (i17 + 11 << 3) >> 3] = +HEAPF64[i3 + (i6 * 320 | 0) + 296 >> 3];
    i2 = i2 + 1 | 0;
   }
   i6 = i6 + 1 | 0;
  }
  i6 = i25 + 104 | 0;
  i3 = (i18 | 0) != 0;
  if (!(HEAP32[i6 >> 2] | 0)) {
   i2 = i25 + 8 | 0;
   d1 = +_arGetTransMat(i20, i19, i10, i9, i8, i2);
   if (i3 & d1 >= 20.0) {
    _icpSetInlierProbability(HEAP32[i20 >> 2] | 0, .8) | 0;
    d1 = +_arGetTransMatRobust(i20, i19, i10, i9, i8, i2);
    if (d1 >= 20.0) {
     _icpSetInlierProbability(HEAP32[i20 >> 2] | 0, .6) | 0;
     d1 = +_arGetTransMatRobust(i20, i19, i10, i9, i8, i2);
     if (d1 >= 20.0) {
      _icpSetInlierProbability(HEAP32[i20 >> 2] | 0, .4) | 0;
      d1 = +_arGetTransMatRobust(i20, i19, i10, i9, i8, i2);
      if (d1 >= 20.0) {
       _icpSetInlierProbability(HEAP32[i20 >> 2] | 0, 0.0) | 0;
       d1 = +_arGetTransMatRobust(i20, i19, i10, i9, i8, i2);
      }
     }
    }
   }
   _free(i9);
   _free(i10);
  } else {
   d1 = +_arGetTransMat(i20, i19, i10, i9, i8, i21);
   i4 = i25 + 8 | 0;
   d5 = +_arGetTransMat(i20, i4, i10, i9, i8, i4);
   i2 = d1 < d5;
   L82 : do if (i3) {
    L84 : do if (i2) {
     i3 = 0;
     while (1) {
      if ((i3 | 0) == 3) break L84;
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 4) break;
       HEAPF64[i25 + 8 + (i3 << 5) + (i2 << 3) >> 3] = +HEAPF64[i21 + (i3 << 5) + (i2 << 3) >> 3];
       i2 = i2 + 1 | 0;
      }
      i3 = i3 + 1 | 0;
     }
    } else d1 = d5; while (0);
    if (d1 >= 20.0) {
     _icpSetInlierProbability(HEAP32[i20 >> 2] | 0, .8) | 0;
     d1 = +_arGetTransMatRobust(i20, i19, i10, i9, i8, i21);
     d5 = +_arGetTransMatRobust(i20, i4, i10, i9, i8, i4);
     L95 : do if (d1 < d5) {
      i3 = 0;
      while (1) {
       if ((i3 | 0) == 3) break L95;
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 4) break;
        HEAPF64[i25 + 8 + (i3 << 5) + (i2 << 3) >> 3] = +HEAPF64[i21 + (i3 << 5) + (i2 << 3) >> 3];
        i2 = i2 + 1 | 0;
       }
       i3 = i3 + 1 | 0;
      }
     } else d1 = d5; while (0);
     if (d1 >= 20.0) {
      _icpSetInlierProbability(HEAP32[i20 >> 2] | 0, .6) | 0;
      d1 = +_arGetTransMatRobust(i20, i19, i10, i9, i8, i21);
      d5 = +_arGetTransMatRobust(i20, i4, i10, i9, i8, i4);
      L106 : do if (d1 < d5) {
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break L106;
        i2 = 0;
        while (1) {
         if ((i2 | 0) == 4) break;
         HEAPF64[i25 + 8 + (i3 << 5) + (i2 << 3) >> 3] = +HEAPF64[i21 + (i3 << 5) + (i2 << 3) >> 3];
         i2 = i2 + 1 | 0;
        }
        i3 = i3 + 1 | 0;
       }
      } else d1 = d5; while (0);
      if (d1 >= 20.0) {
       _icpSetInlierProbability(HEAP32[i20 >> 2] | 0, .4) | 0;
       d1 = +_arGetTransMatRobust(i20, i19, i10, i9, i8, i21);
       d5 = +_arGetTransMatRobust(i20, i4, i10, i9, i8, i4);
       L117 : do if (d1 < d5) {
        i3 = 0;
        while (1) {
         if ((i3 | 0) == 3) break L117;
         i2 = 0;
         while (1) {
          if ((i2 | 0) == 4) break;
          HEAPF64[i25 + 8 + (i3 << 5) + (i2 << 3) >> 3] = +HEAPF64[i21 + (i3 << 5) + (i2 << 3) >> 3];
          i2 = i2 + 1 | 0;
         }
         i3 = i3 + 1 | 0;
        }
       } else d1 = d5; while (0);
       if (d1 >= 20.0) {
        _icpSetInlierProbability(HEAP32[i20 >> 2] | 0, 0.0) | 0;
        d1 = +_arGetTransMatRobust(i20, i19, i10, i9, i8, i21);
        d5 = +_arGetTransMatRobust(i20, i4, i10, i9, i8, i4);
        if (d1 < d5) {
         i3 = 0;
         while (1) {
          if ((i3 | 0) == 3) break L82;
          i2 = 0;
          while (1) {
           if ((i2 | 0) == 4) break;
           HEAPF64[i25 + 8 + (i3 << 5) + (i2 << 3) >> 3] = +HEAPF64[i21 + (i3 << 5) + (i2 << 3) >> 3];
           i2 = i2 + 1 | 0;
          }
          i3 = i3 + 1 | 0;
         }
        } else d1 = d5;
       }
      }
     }
    }
   } else if (i2) {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break L82;
     i3 = 0;
     while (1) {
      if ((i3 | 0) == 4) break;
      HEAPF64[i25 + 8 + (i2 << 5) + (i3 << 3) >> 3] = +HEAPF64[i21 + (i2 << 5) + (i3 << 3) >> 3];
      i3 = i3 + 1 | 0;
     }
     i2 = i2 + 1 | 0;
    }
   } else d1 = d5; while (0);
   _free(i9);
   _free(i10);
  }
  if (d1 < 20.0) {
   HEAP32[i6 >> 2] = 1;
   break;
  }
  HEAP32[i6 >> 2] = 0;
  i3 = HEAP32[i22 >> 2] | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (i3 | 0)) break L57;
   i4 = HEAP32[(HEAP32[i25 >> 2] | 0) + (i2 * 320 | 0) + 304 >> 2] | 0;
   if ((i4 | 0) >= 0 ? (i24 = i23 + (i4 << 8) + 236 | 0, (HEAP32[i24 >> 2] | 0) == 0) : 0) HEAP32[i24 >> 2] = 8;
   i2 = i2 + 1 | 0;
  }
 } else i26 = 45; while (0);
 if ((i26 | 0) == 45) {
  HEAP32[i25 + 104 >> 2] = 0;
  d1 = -1.0;
 }
 STACKTOP = i27;
 return +d1;
}

function __ZN6vision10DoGPyramid25difference_image_binomialERNS_5ImageERKS1_S4_(i1, i7, i8, i9) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i6;
 if ((__ZNK6vision5Image4typeEv(i7) | 0) != 2) {
  i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 21117) | 0, 20647) | 0, 33655) | 0, 86) | 0, 33662) | 0, 21162) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image4typeEv(i8) | 0) != 2) {
  i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 21188) | 0, 20647) | 0, 33655) | 0, 87) | 0, 33662) | 0, 21162) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image4typeEv(i9) | 0) != 2) {
  i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 21235) | 0, 20647) | 0, 33655) | 0, 88) | 0, 33662) | 0, 21162) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image8channelsEv(i7) | 0) != 1) {
  i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 21282) | 0, 20647) | 0, 33655) | 0, 89) | 0, 33662) | 0, 21323) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image8channelsEv(i8) | 0) != 1) {
  i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 21360) | 0, 20647) | 0, 33655) | 0, 90) | 0, 33662) | 0, 21323) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image8channelsEv(i9) | 0) != 1) {
  i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 21403) | 0, 20647) | 0, 33655) | 0, 91) | 0, 33662) | 0, 21323) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 i5 = __ZNK6vision5Image5widthEv(i7) | 0;
 if ((i5 | 0) != (__ZNK6vision5Image5widthEv(i9) | 0)) {
  i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 21446) | 0, 20647) | 0, 33655) | 0, 92) | 0, 33662) | 0, 21494) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 i5 = __ZNK6vision5Image6heightEv(i7) | 0;
 if ((i5 | 0) != (__ZNK6vision5Image6heightEv(i9) | 0)) {
  i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 21526) | 0, 20647) | 0, 33655) | 0, 93) | 0, 33662) | 0, 21576) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 i5 = __ZNK6vision5Image5widthEv(i8) | 0;
 if ((i5 | 0) != (__ZNK6vision5Image5widthEv(i9) | 0)) {
  i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 21609) | 0, 20647) | 0, 33655) | 0, 94) | 0, 33662) | 0, 21494) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 i5 = __ZNK6vision5Image6heightEv(i8) | 0;
 if ((i5 | 0) != (__ZNK6vision5Image6heightEv(i9) | 0)) {
  i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 21659) | 0, 20647) | 0, 33655) | 0, 95) | 0, 33662) | 0, 21576) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 i2 = 0;
 while (1) {
  if (i2 >>> 0 >= (__ZNK6vision5Image6heightEv(i8) | 0) >>> 0) break;
  i3 = __ZN6vision5Image3getIfEEPT_m(i7, i2) | 0;
  i4 = __ZNK6vision5Image3getIfEEPKT_m(i8, i2) | 0;
  i5 = __ZNK6vision5Image3getIfEEPKT_m(i9, i2) | 0;
  i1 = 0;
  while (1) {
   if (i1 >>> 0 >= (__ZNK6vision5Image5widthEv(i8) | 0) >>> 0) break;
   HEAPF32[i3 + (i1 << 2) >> 2] = +HEAPF32[i4 + (i1 << 2) >> 2] - +HEAPF32[i5 + (i1 << 2) >> 2];
   i1 = i1 + 1 | 0;
  }
  i2 = i2 + 1 | 0;
 }
 STACKTOP = i6;
 return;
}

function __ZN6vision21OrientationAssignment7computeEPfRiiifff(i15, i18, i24, i1, i4, d13, d14, d5) {
 i15 = i15 | 0;
 i18 = i18 | 0;
 i24 = i24 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 d13 = +d13;
 d14 = +d14;
 d5 = +d5;
 var i2 = 0, i3 = 0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, d11 = 0.0, d12 = 0.0, i16 = 0, i17 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0;
 i27 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i25 = i27 + 32 | 0;
 i26 = i27 + 24 | 0;
 i19 = i27 + 16 | 0;
 i20 = i27 + 12 | 0;
 i21 = i27 + 8 | 0;
 i22 = i27 + 4 | 0;
 i23 = i27;
 if (!(d13 >= 0.0)) {
  i17 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 26162) | 0, 25996) | 0, 33655) | 0, 119) | 0, 33662) | 0, 26192) | 0;
  __ZNKSt3__28ios_base6getlocEv(i25, i17 + (HEAP32[(HEAP32[i17 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i16 = __ZNKSt3__26locale9use_facetERNS0_2idE(i25, 58792) | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 28 >> 2] & 63](i16, 10) | 0;
  __ZNSt3__26localeD2Ev(i25);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i17, i16) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i17) | 0;
  _abort();
 }
 i2 = i15 + 4 | 0;
 i17 = (Math_imul(HEAP32[i2 >> 2] | 0, i1) | 0) + i4 | 0;
 i3 = i15 + 40 | 0;
 if (!(+((__ZNK6vision5Image5widthEv((HEAP32[i3 >> 2] | 0) + (i17 << 5) | 0) | 0) >>> 0) > d13)) {
  i17 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 26211) | 0, 25996) | 0, 33655) | 0, 120) | 0, 33662) | 0, 26291) | 0;
  __ZNKSt3__28ios_base6getlocEv(i25, i17 + (HEAP32[(HEAP32[i17 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i16 = __ZNKSt3__26locale9use_facetERNS0_2idE(i25, 58792) | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 28 >> 2] & 63](i16, 10) | 0;
  __ZNSt3__26localeD2Ev(i25);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i17, i16) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i17) | 0;
  _abort();
 }
 if (!(d14 >= 0.0)) {
  i17 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 26327) | 0, 25996) | 0, 33655) | 0, 121) | 0, 33662) | 0, 26357) | 0;
  __ZNKSt3__28ios_base6getlocEv(i25, i17 + (HEAP32[(HEAP32[i17 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i16 = __ZNKSt3__26locale9use_facetERNS0_2idE(i25, 58792) | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 28 >> 2] & 63](i16, 10) | 0;
  __ZNSt3__26localeD2Ev(i25);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i17, i16) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i17) | 0;
  _abort();
 }
 i17 = (Math_imul(HEAP32[i2 >> 2] | 0, i1) | 0) + i4 | 0;
 if (!(+((__ZNK6vision5Image6heightEv((HEAP32[i3 >> 2] | 0) + (i17 << 5) | 0) | 0) >>> 0) > d14)) {
  i17 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 26376) | 0, 25996) | 0, 33655) | 0, 122) | 0, 33662) | 0, 26457) | 0;
  __ZNKSt3__28ios_base6getlocEv(i25, i17 + (HEAP32[(HEAP32[i17 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i16 = __ZNKSt3__26locale9use_facetERNS0_2idE(i25, 58792) | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 28 >> 2] & 63](i16, 10) | 0;
  __ZNSt3__26localeD2Ev(i25);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i17, i16) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i17) | 0;
  _abort();
 }
 i9 = (Math_imul(HEAP32[i2 >> 2] | 0, i1) | 0) + i4 | 0;
 i9 = (HEAP32[i3 >> 2] | 0) + (i9 << 5) | 0;
 if ((__ZNK6vision5Image8channelsEv(i9) | 0) != 2) {
  i17 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 26494) | 0, 25996) | 0, 33655) | 0, 126) | 0, 33662) | 0, 26535) | 0;
  __ZNKSt3__28ios_base6getlocEv(i25, i17 + (HEAP32[(HEAP32[i17 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i16 = __ZNKSt3__26locale9use_facetERNS0_2idE(i25, 58792) | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 28 >> 2] & 63](i16, 10) | 0;
  __ZNSt3__26localeD2Ev(i25);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i17, i16) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i17) | 0;
  _abort();
 }
 HEAP32[i24 >> 2] = 0;
 i1 = ~~(d13 + .5);
 i2 = ~~(d14 + .5);
 L16 : do if (((i1 | 0) >= 0 ? !((i2 | 0) < 0 | (__ZNK6vision5Image5widthEv(i9) | 0) >>> 0 <= i1 >>> 0) : 0) ? (__ZNK6vision5Image6heightEv(i9) | 0) >>> 0 > i2 >>> 0 : 0) {
  d6 = +__ZN6vision4max2IfEET_S1_S1_(1.0, +HEAPF32[i15 + 12 >> 2] * d5);
  d11 = -1.0 / (+__ZN6vision3sqrIfEET_S1_(d6) * 2.0);
  d6 = d6 * +HEAPF32[i15 + 16 >> 2];
  d12 = +Math_ceil(+(+__ZN6vision3sqrIfEET_S1_(d6)));
  i3 = ~~(d6 + .5);
  i8 = __ZN6vision4max2IiEET_S1_S1_(0, i1 - i3 | 0) | 0;
  i7 = __ZN6vision4min2IiEET_S1_S1_(i3 + i1 | 0, (__ZNK6vision5Image5widthEv(i9) | 0) + -1 | 0) | 0;
  i1 = __ZN6vision4max2IiEET_S1_S1_(0, i2 - i3 | 0) | 0;
  i3 = __ZN6vision4min2IiEET_S1_S1_(i3 + i2 | 0, (__ZNK6vision5Image6heightEv(i9) | 0) + -1 | 0) | 0;
  i16 = i15 + 28 | 0;
  i17 = HEAP32[i16 >> 2] | 0;
  __ZN6vision10ZeroVectorIfEEvPT_m(i17, (HEAP32[i15 + 32 >> 2] | 0) - i17 >> 2);
  i17 = i15 + 8 | 0;
  while (1) {
   if ((i1 | 0) > (i3 | 0)) break;
   d5 = +__ZN6vision3sqrIfEET_S1_(+(i1 | 0) - d14);
   i4 = __ZNK6vision5Image3getIfEEPKT_m(i9, i1) | 0;
   i2 = i8;
   while (1) {
    if ((i2 | 0) > (i7 | 0)) break;
    d6 = d5 + +__ZN6vision3sqrIfEET_S1_(+(i2 | 0) - d13);
    if (!(d6 > d12)) {
     i28 = i4 + (i2 << 1 << 2) | 0;
     d6 = +__ZN6vision8fastexp6IfEET_S1_(d11 * d6);
     i10 = HEAP32[i17 >> 2] | 0;
     __ZN6vision25bilinear_histogram_updateEPfffi(HEAP32[i16 >> 2] | 0, +HEAPF32[i28 >> 2] * +(i10 | 0) * .159154943091895, d6 * +HEAPF32[i28 + 4 >> 2], i10);
    }
    i2 = i2 + 1 | 0;
   }
   i1 = i1 + 1 | 0;
  }
  i2 = i15 + 20 | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (HEAP32[i2 >> 2] | 0)) break;
   i28 = HEAP32[i16 >> 2] | 0;
   __ZN6vision26SmoothOrientationHistogramIfEEvPT_PKS1_mS4_(i28, i28, HEAP32[i17 >> 2] | 0, 13528);
   i1 = i1 + 1 | 0;
  }
  i2 = HEAP32[i17 >> 2] | 0;
  i1 = 0;
  d11 = 0.0;
  while (1) {
   if ((i1 | 0) >= (i2 | 0)) break;
   d14 = +HEAPF32[(HEAP32[i16 >> 2] | 0) + (i1 << 2) >> 2];
   i1 = i1 + 1 | 0;
   d11 = d14 > d11 ? d14 : d11;
  }
  if (!(d11 == 0.0)) {
   if (!(d11 > 0.0)) {
    i28 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 26566) | 0, 25996) | 0, 33655) | 0, 218) | 0, 33662) | 0, 26604) | 0;
    __ZNKSt3__28ios_base6getlocEv(i25, i28 + (HEAP32[(HEAP32[i28 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i25, 58792) | 0;
    i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
    __ZNSt3__26localeD2Ev(i25);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i28, i10) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i28) | 0;
    _abort();
   }
   i8 = i25 + 4 | 0;
   i9 = i26 + 4 | 0;
   i10 = i19 + 4 | 0;
   i7 = i15 + 24 | 0;
   i3 = 0;
   i1 = i2;
   while (1) {
    if ((i3 | 0) >= (i1 | 0)) break L16;
    d6 = +(i3 | 0);
    HEAPF32[i25 >> 2] = d6;
    i2 = HEAP32[i16 >> 2] | 0;
    i28 = i2 + (i3 << 2) | 0;
    i15 = HEAP32[i28 >> 2] | 0;
    HEAP32[i8 >> 2] = i15;
    i4 = i3 + -1 | 0;
    HEAPF32[i26 >> 2] = +(i4 | 0);
    i4 = HEAP32[i2 + (((i4 + i1 | 0) % (i1 | 0) | 0) << 2) >> 2] | 0;
    HEAP32[i9 >> 2] = i4;
    i3 = i3 + 1 | 0;
    HEAPF32[i19 >> 2] = +(i3 | 0);
    i2 = HEAP32[i2 + (((i3 + i1 | 0) % (i1 | 0) | 0) << 2) >> 2] | 0;
    HEAP32[i10 >> 2] = i2;
    d5 = (HEAP32[tempDoublePtr >> 2] = i15, +HEAPF32[tempDoublePtr >> 2]);
    if (+HEAPF32[i28 >> 2] > d11 * +HEAPF32[i7 >> 2] ? (d14 = (HEAP32[tempDoublePtr >> 2] = i2, +HEAPF32[tempDoublePtr >> 2]), d5 > (HEAP32[tempDoublePtr >> 2] = i4, +HEAPF32[tempDoublePtr >> 2]) & d5 > d14) : 0) {
     HEAPF32[i23 >> 2] = d6;
     if (__ZN6vision16Quadratic3PointsIfEEbRT_S2_S2_PKS1_S4_S4_(i20, i21, i22, i26, i25, i19) | 0) __ZN6vision22QuadraticCriticalPointIfEEbRT_S1_S1_S1_(i23, +HEAPF32[i20 >> 2], +HEAPF32[i21 >> 2], +HEAPF32[i22 >> 2]) | 0;
     d14 = +(HEAP32[i17 >> 2] | 0);
     i1 = HEAP32[i24 >> 2] | 0;
     HEAPF32[i18 + (i1 << 2) >> 2] = (+HEAPF32[i23 >> 2] + .5 + d14) / d14 * 6.283185307179586 % 6.283185307179586;
     HEAP32[i24 >> 2] = i1 + 1;
     i1 = HEAP32[i17 >> 2] | 0;
    }
   }
  }
 } while (0);
 STACKTOP = i27;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_array_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i5, i7) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i15 = i16 + 96 | 0;
 i13 = i16 + 72 | 0;
 i14 = i16 + 48 | 0;
 i8 = i16 + 36 | 0;
 i9 = i16 + 24 | 0;
 i10 = i16 + 12 | 0;
 i12 = i16;
 do if (((i1 | 0) != (i5 | 0) ? (HEAP8[i1 >> 0] | 0) == 65 : 0) ? (i6 = i1 + 1 | 0, (i6 | 0) != (i5 | 0)) : 0) {
  i2 = HEAP8[i6 >> 0] | 0;
  if (i2 << 24 >> 24 == 95) {
   i14 = i1 + 2 | 0;
   i3 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i14, i5, i7) | 0;
   if ((i3 | 0) == (i14 | 0)) break;
   i4 = i7 + 4 | 0;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((HEAP32[i7 >> 2] | 0) == (i2 | 0)) break;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i15, i2 + -12 | 0, 2);
   i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(50518) | 0;
   i14 = HEAP8[i15 + 11 >> 0] | 0;
   if ((i1 | 0) == ((i14 << 24 >> 24 < 0 ? HEAP32[i15 + 4 >> 2] | 0 : i14 & 255) | 0)) {
    i14 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i15, 50518, i1) | 0) == 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
    if (i14) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEmm((HEAP32[i4 >> 2] | 0) + -12 | 0);
   } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i4 >> 2] | 0) + -12 | 0, 0, 51959) | 0;
   i1 = i3;
   break;
  }
  if ((i2 + -49 & 255) < 9) {
   i4 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i6, i5) | 0;
   if ((i4 | 0) == (i5 | 0)) break;
   if ((HEAP8[i4 >> 0] | 0) != 95) break;
   i12 = i4 + 1 | 0;
   i5 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i12, i5, i7) | 0;
   if ((i5 | 0) == (i12 | 0)) break;
   i3 = i7 + 4 | 0;
   i2 = HEAP32[i3 >> 2] | 0;
   if ((HEAP32[i7 >> 2] | 0) == (i2 | 0)) break;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i15, i2 + -12 | 0, 2);
   i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(50518) | 0;
   i12 = HEAP8[i15 + 11 >> 0] | 0;
   if ((i1 | 0) == ((i12 << 24 >> 24 < 0 ? HEAP32[i15 + 4 >> 2] | 0 : i12 & 255) | 0)) {
    i12 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i15, 50518, i1) | 0) == 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
    if (i12) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEmm((HEAP32[i3 >> 2] | 0) + -12 | 0);
   } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
   i2 = (HEAP32[i3 >> 2] | 0) + -12 | 0;
   HEAP32[i14 >> 2] = 0;
   HEAP32[i14 + 4 >> 2] = 0;
   HEAP32[i14 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i14, i6, i4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i14, 0, 50518) | 0;
   HEAP32[i13 >> 2] = HEAP32[i14 >> 2];
   HEAP32[i13 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
   HEAP32[i13 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i14 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i13, 50573) | 0;
   HEAP32[i15 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i15 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i15 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i13 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i1 = HEAP8[i15 + 11 >> 0] | 0;
   i12 = i1 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm(i2, 0, i12 ? HEAP32[i15 >> 2] | 0 : i15, i12 ? HEAP32[i15 + 4 >> 2] | 0 : i1 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
   i1 = i5;
   break;
  }
  i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i6, i5, i7) | 0;
  if (((!((i2 | 0) == (i6 | 0) | (i2 | 0) == (i5 | 0)) ? (HEAP8[i2 >> 0] | 0) == 95 : 0) ? (i6 = i2 + 1 | 0, i11 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i6, i5, i7) | 0, (i11 | 0) != (i6 | 0)) : 0) ? (i4 = i7 + 4 | 0, i3 = HEAP32[i4 >> 2] | 0, ((i3 - (HEAP32[i7 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i13, i3 + -24 | 0);
   i2 = HEAP32[i4 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == -1) break;
    i7 = i1 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i7 * 24 | 0) | 0);
    i1 = i7;
   }
   HEAP32[i4 >> 2] = i2 + -24;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i14, i2 + -48 | 0);
   i1 = HEAP32[i4 >> 2] | 0;
   i2 = i1 + -24 | 0;
   i3 = i2 + 11 | 0;
   if ((HEAP8[i3 >> 0] | 0) < 0) {
    i7 = HEAP32[i2 >> 2] | 0;
    HEAP8[i15 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i7, i15);
    HEAP32[i1 + -20 >> 2] = 0;
   } else {
    HEAP8[i15 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i15);
    HEAP8[i3 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
   HEAP32[i2 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i2 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i2 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i13 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i2 = i13 + 12 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i15, i2, 2);
   i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(50518) | 0;
   i7 = HEAP8[i15 + 11 >> 0] | 0;
   if ((i1 | 0) == ((i7 << 24 >> 24 < 0 ? HEAP32[i15 + 4 >> 2] | 0 : i7 & 255) | 0)) {
    i7 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i15, 50518, i1) | 0) == 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
    if (i7) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEmm(i2);
   } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i12, i14);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i12, 0, 50518) | 0;
   HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i10 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
   HEAP32[i10 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i12 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 50573) | 0;
   HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i10 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i1 = HEAP8[i2 + 11 >> 0] | 0;
   i7 = i1 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i9, i7 ? HEAP32[i2 >> 2] | 0 : i2, i7 ? HEAP32[i13 + 16 >> 2] | 0 : i1 & 255) | 0;
   HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
   HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i9 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i1 = HEAP32[i4 >> 2] | 0;
   i2 = i1 + -12 | 0;
   i3 = i2 + 11 | 0;
   if ((HEAP8[i3 >> 0] | 0) < 0) {
    i7 = HEAP32[i2 >> 2] | 0;
    HEAP8[i15 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i7, i15);
    HEAP32[i1 + -8 >> 2] = 0;
   } else {
    HEAP8[i15 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i15);
    HEAP8[i3 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
   HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i2 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
   HEAP32[i2 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i8 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i14);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i13);
   i1 = i11;
  }
 } while (0);
 STACKTOP = i16;
 return i1 | 0;
}

function _arLabelingSubEWZ(i5, i18, i19, i6, i20) {
 i5 = i5 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 i6 = i6 | 0;
 i20 = i20 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i21 = 0, d22 = 0.0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i17 = i21;
 i8 = HEAP32[i20 >> 2] | 0;
 i16 = i19 + -1 | 0;
 i1 = i8;
 i2 = 0;
 i3 = i8 + ((Math_imul(i16, i18) | 0) << 1) | 0;
 while (1) {
  if ((i2 | 0) >= (i18 | 0)) break;
  HEAP16[i3 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + 2 | 0;
  i2 = i2 + 1 | 0;
  i3 = i3 + 2 | 0;
 }
 i15 = i18 + -1 | 0;
 i1 = i8;
 i2 = 0;
 i3 = i8 + (i15 << 1) | 0;
 while (1) {
  if ((i2 | 0) >= (i19 | 0)) break;
  HEAP16[i3 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + (i18 << 1) | 0;
  i2 = i2 + 1 | 0;
  i3 = i3 + (i18 << 1) | 0;
 }
 i4 = i20 + 1179664 | 0;
 i12 = i18 + 1 | 0;
 i14 = 0 - i18 | 0;
 i7 = i5 + i12 | 0;
 i2 = i6 + i12 | 0;
 i13 = 1;
 i9 = 0;
 i3 = (HEAP32[i20 + 4 >> 2] | 0) + i12 | 0;
 i5 = i8 + (i12 << 1) | 0;
 L9 : while (1) {
  if ((i13 | 0) >= (i16 | 0)) {
   i2 = 59;
   break;
  }
  i10 = i2;
  i1 = i9;
  i11 = i3;
  i9 = 1;
  i12 = i5;
  while (1) {
   if ((i9 | 0) >= (i15 | 0)) break;
   do if ((HEAPU8[i7 >> 0] | 0) > (HEAPU8[i10 >> 0] | 0)) {
    HEAP8[i11 >> 0] = -1;
    i3 = i12 + (i14 << 1) | 0;
    i2 = HEAP16[i3 >> 1] | 0;
    if (i2 << 16 >> 16 > 0) {
     HEAP16[i12 >> 1] = i2;
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i6 = i20 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
     i6 = i20 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i9;
     i6 = i20 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i13;
     HEAP32[i20 + 1310736 + (i8 + -1 << 2) >> 2] = i13;
     break;
    }
    i6 = HEAP16[i3 + 2 >> 1] | 0;
    i8 = i6 << 16 >> 16;
    i2 = HEAP16[i3 + -2 >> 1] | 0;
    i5 = i2 << 16 >> 16;
    i3 = i2 << 16 >> 16 > 0;
    if (i6 << 16 >> 16 <= 0) {
     if (i3) {
      HEAP16[i12 >> 1] = i2;
      i2 = i5 * 7 | 0;
      i3 = i20 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
      i3 = i20 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
      i3 = i20 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i13;
      i3 = i20 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i3 >> 2] | 0) < (i9 | 0)) HEAP32[i3 >> 2] = i9;
      HEAP32[i20 + 1310736 + (i2 + -1 << 2) >> 2] = i13;
      break;
     }
     i2 = HEAP16[i12 + -2 >> 1] | 0;
     if (i2 << 16 >> 16 > 0) {
      HEAP16[i12 >> 1] = i2;
      i2 = (i2 << 16 >> 16) * 7 | 0;
      i8 = i20 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
      i8 = i20 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i9;
      i8 = i20 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i13;
      i2 = i20 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i2 >> 2] | 0) >= (i9 | 0)) break;
      HEAP32[i2 >> 2] = i9;
      break;
     } else {
      i2 = i1 + 1 | 0;
      if ((i1 | 0) > 32767) {
       i2 = 54;
       break L9;
      }
      HEAP16[i12 >> 1] = i2;
      HEAP32[i20 + 1179664 + (i1 << 2) >> 2] = i2 << 16 >> 16;
      i1 = i1 * 7 | 0;
      HEAP32[i20 + 1310736 + (i1 << 2) >> 2] = 1;
      HEAP32[i20 + 1310736 + (i1 + 1 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 2 << 2) >> 2] = i13;
      HEAP32[i20 + 1310736 + (i1 + 3 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 4 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 5 << 2) >> 2] = i13;
      HEAP32[i20 + 1310736 + (i1 + 6 << 2) >> 2] = i13;
      i1 = i2;
      break;
     }
    }
    if (i3) {
     i2 = HEAP32[i20 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
     i6 = HEAP32[i20 + 1179664 + (i5 + -1 << 2) >> 2] | 0;
     L36 : do if ((i2 | 0) <= (i6 | 0)) {
      HEAP16[i12 >> 1] = i2;
      if ((i2 | 0) < (i6 | 0)) {
       i3 = i4;
       i5 = 0;
       while (1) {
        if ((i5 | 0) >= (i1 | 0)) break L36;
        if ((HEAP32[i3 >> 2] | 0) == (i6 | 0)) HEAP32[i3 >> 2] = i2;
        i3 = i3 + 4 | 0;
        i5 = i5 + 1 | 0;
       }
      }
     } else {
      HEAP16[i12 >> 1] = i6;
      i3 = i4;
      i5 = 0;
      while (1) {
       if ((i5 | 0) >= (i1 | 0)) {
        i2 = i6;
        break L36;
       }
       if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i6;
       i3 = i3 + 4 | 0;
       i5 = i5 + 1 | 0;
      }
     } while (0);
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i6 = i20 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
     i6 = i20 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i9;
     i6 = i20 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i13;
     HEAP32[i20 + 1310736 + (i8 + -1 << 2) >> 2] = i13;
     break;
    }
    i3 = HEAP16[i12 + -2 >> 1] | 0;
    if (i3 << 16 >> 16 <= 0) {
     HEAP16[i12 >> 1] = i6;
     i2 = i8 * 7 | 0;
     i3 = i20 + 1310736 + (i2 + -7 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
     i3 = i20 + 1310736 + (i2 + -6 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
     i3 = i20 + 1310736 + (i2 + -5 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i13;
     i3 = i20 + 1310736 + (i2 + -4 << 2) | 0;
     if ((HEAP32[i3 >> 2] | 0) > (i9 | 0)) HEAP32[i3 >> 2] = i9;
     HEAP32[i20 + 1310736 + (i2 + -1 << 2) >> 2] = i13;
     break;
    }
    i2 = HEAP32[i20 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
    i6 = HEAP32[i20 + 1179664 + ((i3 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if ((i2 | 0) <= (i6 | 0)) {
     HEAP16[i12 >> 1] = i2;
     if ((i2 | 0) < (i6 | 0)) {
      i3 = i4;
      i5 = 0;
      while (1) {
       if ((i5 | 0) >= (i1 | 0)) break L60;
       if ((HEAP32[i3 >> 2] | 0) == (i6 | 0)) HEAP32[i3 >> 2] = i2;
       i3 = i3 + 4 | 0;
       i5 = i5 + 1 | 0;
      }
     }
    } else {
     HEAP16[i12 >> 1] = i6;
     i3 = i4;
     i5 = 0;
     while (1) {
      if ((i5 | 0) >= (i1 | 0)) {
       i2 = i6;
       break L60;
      }
      if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i6;
      i3 = i3 + 4 | 0;
      i5 = i5 + 1 | 0;
     }
    } while (0);
    i8 = (i2 << 16 >> 16) * 7 | 0;
    i6 = i20 + 1310736 + (i8 + -7 << 2) | 0;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
    i6 = i20 + 1310736 + (i8 + -6 << 2) | 0;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i9;
    i8 = i20 + 1310736 + (i8 + -5 << 2) | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i13;
   } else {
    HEAP16[i12 >> 1] = 0;
    HEAP8[i11 >> 0] = 0;
   } while (0);
   i7 = i7 + 1 | 0;
   i10 = i10 + 1 | 0;
   i11 = i11 + 1 | 0;
   i9 = i9 + 1 | 0;
   i12 = i12 + 2 | 0;
  }
  i7 = i7 + 2 | 0;
  i2 = i10 + 2 | 0;
  i13 = i13 + 1 | 0;
  i9 = i1;
  i3 = i11 + 2 | 0;
  i5 = i12 + 4 | 0;
 }
 L80 : do if ((i2 | 0) == 54) {
  _arLog(0, 3, 17520, i17);
  i1 = -1;
 } else if ((i2 | 0) == 59) {
  i6 = i20 + 12 | 0;
  i1 = 1;
  i5 = 1;
  while (1) {
   if ((i5 | 0) > (i9 | 0)) break;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (i5 | 0)) i3 = i1 + 1 | 0; else {
    i3 = i1;
    i1 = HEAP32[i20 + 1179664 + (i2 + -1 << 2) >> 2] | 0;
   }
   HEAP32[i4 >> 2] = i1;
   i1 = i3;
   i5 = i5 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  i7 = i20 + 8 | 0;
  i2 = i1 + -1 | 0;
  HEAP32[i7 >> 2] = i2;
  if (!i2) i1 = 0; else {
   _memset(i6 | 0, 0, i2 << 2 | 0) | 0;
   _memset(i20 + 655376 | 0, 0, i2 << 4 | 0) | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break;
    i17 = i1 << 2;
    HEAP32[i20 + 131084 + (i17 << 2) >> 2] = i18;
    HEAP32[i20 + 131084 + ((i17 | 1) << 2) >> 2] = 0;
    HEAP32[i20 + 131084 + ((i17 | 2) << 2) >> 2] = i19;
    HEAP32[i20 + 131084 + ((i17 | 3) << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i5 = 0;
   while (1) {
    if ((i5 | 0) >= (i9 | 0)) break;
    i3 = (HEAP32[i20 + 1179664 + (i5 << 2) >> 2] | 0) + -1 | 0;
    i4 = i5 * 7 | 0;
    i1 = i20 + 12 + (i3 << 2) | 0;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + (HEAP32[i20 + 1310736 + (i4 << 2) >> 2] | 0);
    i1 = i3 << 1;
    i2 = i20 + 655376 + (i1 << 3) | 0;
    HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] + +(HEAP32[i20 + 1310736 + (i4 + 1 << 2) >> 2] | 0);
    i1 = i20 + 655376 + ((i1 | 1) << 3) | 0;
    HEAPF64[i1 >> 3] = +HEAPF64[i1 >> 3] + +(HEAP32[i20 + 1310736 + (i4 + 2 << 2) >> 2] | 0);
    i3 = i3 << 2;
    i1 = i20 + 131084 + (i3 << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 3 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i20 + 131084 + ((i3 | 1) << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 4 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) < (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i20 + 131084 + ((i3 | 2) << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 5 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i2 = i20 + 131084 + ((i3 | 3) << 2) | 0;
    i1 = HEAP32[i20 + 1310736 + (i4 + 6 << 2) >> 2] | 0;
    if ((HEAP32[i2 >> 2] | 0) < (i1 | 0)) HEAP32[i2 >> 2] = i1;
    i5 = i5 + 1 | 0;
   }
   i2 = HEAP32[i7 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) {
     i1 = 0;
     break L80;
    }
    d22 = +(HEAP32[i20 + 12 + (i1 << 2) >> 2] | 0);
    i19 = i1 << 1;
    i18 = i20 + 655376 + (i19 << 3) | 0;
    HEAPF64[i18 >> 3] = +HEAPF64[i18 >> 3] / d22;
    i19 = i20 + 655376 + ((i19 | 1) << 3) | 0;
    HEAPF64[i19 >> 3] = +HEAPF64[i19 >> 3] / d22;
    i1 = i1 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i21;
 return i1 | 0;
}

function _arLabelingSubEBZ(i5, i18, i19, i6, i20) {
 i5 = i5 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 i6 = i6 | 0;
 i20 = i20 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i21 = 0, d22 = 0.0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i17 = i21;
 i8 = HEAP32[i20 >> 2] | 0;
 i16 = i19 + -1 | 0;
 i1 = i8;
 i2 = 0;
 i3 = i8 + ((Math_imul(i16, i18) | 0) << 1) | 0;
 while (1) {
  if ((i2 | 0) >= (i18 | 0)) break;
  HEAP16[i3 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + 2 | 0;
  i2 = i2 + 1 | 0;
  i3 = i3 + 2 | 0;
 }
 i15 = i18 + -1 | 0;
 i1 = i8;
 i2 = 0;
 i3 = i8 + (i15 << 1) | 0;
 while (1) {
  if ((i2 | 0) >= (i19 | 0)) break;
  HEAP16[i3 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + (i18 << 1) | 0;
  i2 = i2 + 1 | 0;
  i3 = i3 + (i18 << 1) | 0;
 }
 i4 = i20 + 1179664 | 0;
 i12 = i18 + 1 | 0;
 i14 = 0 - i18 | 0;
 i7 = i5 + i12 | 0;
 i2 = i6 + i12 | 0;
 i13 = 1;
 i9 = 0;
 i3 = (HEAP32[i20 + 4 >> 2] | 0) + i12 | 0;
 i5 = i8 + (i12 << 1) | 0;
 L9 : while (1) {
  if ((i13 | 0) >= (i16 | 0)) {
   i2 = 59;
   break;
  }
  i10 = i2;
  i1 = i9;
  i11 = i3;
  i9 = 1;
  i12 = i5;
  while (1) {
   if ((i9 | 0) >= (i15 | 0)) break;
   do if ((HEAPU8[i7 >> 0] | 0) > (HEAPU8[i10 >> 0] | 0)) {
    HEAP16[i12 >> 1] = 0;
    HEAP8[i11 >> 0] = 0;
   } else {
    HEAP8[i11 >> 0] = -1;
    i3 = i12 + (i14 << 1) | 0;
    i2 = HEAP16[i3 >> 1] | 0;
    if (i2 << 16 >> 16 > 0) {
     HEAP16[i12 >> 1] = i2;
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i6 = i20 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
     i6 = i20 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i9;
     i6 = i20 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i13;
     HEAP32[i20 + 1310736 + (i8 + -1 << 2) >> 2] = i13;
     break;
    }
    i6 = HEAP16[i3 + 2 >> 1] | 0;
    i8 = i6 << 16 >> 16;
    i2 = HEAP16[i3 + -2 >> 1] | 0;
    i5 = i2 << 16 >> 16;
    i3 = i2 << 16 >> 16 > 0;
    if (i6 << 16 >> 16 <= 0) {
     if (i3) {
      HEAP16[i12 >> 1] = i2;
      i2 = i5 * 7 | 0;
      i3 = i20 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
      i3 = i20 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
      i3 = i20 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i13;
      i3 = i20 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i3 >> 2] | 0) < (i9 | 0)) HEAP32[i3 >> 2] = i9;
      HEAP32[i20 + 1310736 + (i2 + -1 << 2) >> 2] = i13;
      break;
     }
     i2 = HEAP16[i12 + -2 >> 1] | 0;
     if (i2 << 16 >> 16 > 0) {
      HEAP16[i12 >> 1] = i2;
      i2 = (i2 << 16 >> 16) * 7 | 0;
      i8 = i20 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
      i8 = i20 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i9;
      i8 = i20 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i13;
      i2 = i20 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i2 >> 2] | 0) >= (i9 | 0)) break;
      HEAP32[i2 >> 2] = i9;
      break;
     } else {
      i2 = i1 + 1 | 0;
      if ((i1 | 0) > 32767) {
       i2 = 54;
       break L9;
      }
      HEAP16[i12 >> 1] = i2;
      HEAP32[i20 + 1179664 + (i1 << 2) >> 2] = i2 << 16 >> 16;
      i1 = i1 * 7 | 0;
      HEAP32[i20 + 1310736 + (i1 << 2) >> 2] = 1;
      HEAP32[i20 + 1310736 + (i1 + 1 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 2 << 2) >> 2] = i13;
      HEAP32[i20 + 1310736 + (i1 + 3 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 4 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 5 << 2) >> 2] = i13;
      HEAP32[i20 + 1310736 + (i1 + 6 << 2) >> 2] = i13;
      i1 = i2;
      break;
     }
    }
    if (i3) {
     i2 = HEAP32[i20 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
     i6 = HEAP32[i20 + 1179664 + (i5 + -1 << 2) >> 2] | 0;
     L37 : do if ((i2 | 0) <= (i6 | 0)) {
      HEAP16[i12 >> 1] = i2;
      if ((i2 | 0) < (i6 | 0)) {
       i3 = i4;
       i5 = 0;
       while (1) {
        if ((i5 | 0) >= (i1 | 0)) break L37;
        if ((HEAP32[i3 >> 2] | 0) == (i6 | 0)) HEAP32[i3 >> 2] = i2;
        i3 = i3 + 4 | 0;
        i5 = i5 + 1 | 0;
       }
      }
     } else {
      HEAP16[i12 >> 1] = i6;
      i3 = i4;
      i5 = 0;
      while (1) {
       if ((i5 | 0) >= (i1 | 0)) {
        i2 = i6;
        break L37;
       }
       if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i6;
       i3 = i3 + 4 | 0;
       i5 = i5 + 1 | 0;
      }
     } while (0);
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i6 = i20 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
     i6 = i20 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i9;
     i6 = i20 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i13;
     HEAP32[i20 + 1310736 + (i8 + -1 << 2) >> 2] = i13;
     break;
    }
    i3 = HEAP16[i12 + -2 >> 1] | 0;
    if (i3 << 16 >> 16 <= 0) {
     HEAP16[i12 >> 1] = i6;
     i2 = i8 * 7 | 0;
     i3 = i20 + 1310736 + (i2 + -7 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
     i3 = i20 + 1310736 + (i2 + -6 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
     i3 = i20 + 1310736 + (i2 + -5 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i13;
     i3 = i20 + 1310736 + (i2 + -4 << 2) | 0;
     if ((HEAP32[i3 >> 2] | 0) > (i9 | 0)) HEAP32[i3 >> 2] = i9;
     HEAP32[i20 + 1310736 + (i2 + -1 << 2) >> 2] = i13;
     break;
    }
    i2 = HEAP32[i20 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
    i6 = HEAP32[i20 + 1179664 + ((i3 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if ((i2 | 0) <= (i6 | 0)) {
     HEAP16[i12 >> 1] = i2;
     if ((i2 | 0) < (i6 | 0)) {
      i3 = i4;
      i5 = 0;
      while (1) {
       if ((i5 | 0) >= (i1 | 0)) break L61;
       if ((HEAP32[i3 >> 2] | 0) == (i6 | 0)) HEAP32[i3 >> 2] = i2;
       i3 = i3 + 4 | 0;
       i5 = i5 + 1 | 0;
      }
     }
    } else {
     HEAP16[i12 >> 1] = i6;
     i3 = i4;
     i5 = 0;
     while (1) {
      if ((i5 | 0) >= (i1 | 0)) {
       i2 = i6;
       break L61;
      }
      if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i6;
      i3 = i3 + 4 | 0;
      i5 = i5 + 1 | 0;
     }
    } while (0);
    i8 = (i2 << 16 >> 16) * 7 | 0;
    i6 = i20 + 1310736 + (i8 + -7 << 2) | 0;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
    i6 = i20 + 1310736 + (i8 + -6 << 2) | 0;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i9;
    i8 = i20 + 1310736 + (i8 + -5 << 2) | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i13;
   } while (0);
   i7 = i7 + 1 | 0;
   i10 = i10 + 1 | 0;
   i11 = i11 + 1 | 0;
   i9 = i9 + 1 | 0;
   i12 = i12 + 2 | 0;
  }
  i7 = i7 + 2 | 0;
  i2 = i10 + 2 | 0;
  i13 = i13 + 1 | 0;
  i9 = i1;
  i3 = i11 + 2 | 0;
  i5 = i12 + 4 | 0;
 }
 L80 : do if ((i2 | 0) == 54) {
  _arLog(0, 3, 17520, i17);
  i1 = -1;
 } else if ((i2 | 0) == 59) {
  i6 = i20 + 12 | 0;
  i1 = 1;
  i5 = 1;
  while (1) {
   if ((i5 | 0) > (i9 | 0)) break;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (i5 | 0)) i3 = i1 + 1 | 0; else {
    i3 = i1;
    i1 = HEAP32[i20 + 1179664 + (i2 + -1 << 2) >> 2] | 0;
   }
   HEAP32[i4 >> 2] = i1;
   i1 = i3;
   i5 = i5 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  i7 = i20 + 8 | 0;
  i2 = i1 + -1 | 0;
  HEAP32[i7 >> 2] = i2;
  if (!i2) i1 = 0; else {
   _memset(i6 | 0, 0, i2 << 2 | 0) | 0;
   _memset(i20 + 655376 | 0, 0, i2 << 4 | 0) | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break;
    i17 = i1 << 2;
    HEAP32[i20 + 131084 + (i17 << 2) >> 2] = i18;
    HEAP32[i20 + 131084 + ((i17 | 1) << 2) >> 2] = 0;
    HEAP32[i20 + 131084 + ((i17 | 2) << 2) >> 2] = i19;
    HEAP32[i20 + 131084 + ((i17 | 3) << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i5 = 0;
   while (1) {
    if ((i5 | 0) >= (i9 | 0)) break;
    i3 = (HEAP32[i20 + 1179664 + (i5 << 2) >> 2] | 0) + -1 | 0;
    i4 = i5 * 7 | 0;
    i1 = i20 + 12 + (i3 << 2) | 0;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + (HEAP32[i20 + 1310736 + (i4 << 2) >> 2] | 0);
    i1 = i3 << 1;
    i2 = i20 + 655376 + (i1 << 3) | 0;
    HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] + +(HEAP32[i20 + 1310736 + (i4 + 1 << 2) >> 2] | 0);
    i1 = i20 + 655376 + ((i1 | 1) << 3) | 0;
    HEAPF64[i1 >> 3] = +HEAPF64[i1 >> 3] + +(HEAP32[i20 + 1310736 + (i4 + 2 << 2) >> 2] | 0);
    i3 = i3 << 2;
    i1 = i20 + 131084 + (i3 << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 3 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i20 + 131084 + ((i3 | 1) << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 4 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) < (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i20 + 131084 + ((i3 | 2) << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 5 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i2 = i20 + 131084 + ((i3 | 3) << 2) | 0;
    i1 = HEAP32[i20 + 1310736 + (i4 + 6 << 2) >> 2] | 0;
    if ((HEAP32[i2 >> 2] | 0) < (i1 | 0)) HEAP32[i2 >> 2] = i1;
    i5 = i5 + 1 | 0;
   }
   i2 = HEAP32[i7 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) {
     i1 = 0;
     break L80;
    }
    d22 = +(HEAP32[i20 + 12 + (i1 << 2) >> 2] | 0);
    i19 = i1 << 1;
    i18 = i20 + 655376 + (i19 << 3) | 0;
    HEAPF64[i18 >> 3] = +HEAPF64[i18 >> 3] / d22;
    i19 = i20 + 655376 + ((i19 | 1) << 3) | 0;
    HEAPF64[i19 >> 3] = +HEAPF64[i19 >> 3] / d22;
    i1 = i1 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i21;
 return i1 | 0;
}

function _arLabelingSubEWIC(i5, i16, i1, i17, i21) {
 i5 = i5 | 0;
 i16 = i16 | 0;
 i1 = i1 | 0;
 i17 = i17 | 0;
 i21 = i21 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, d23 = 0.0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i18 = i22;
 i20 = (i16 | 0) / 2 | 0;
 i19 = (i1 | 0) / 2 | 0;
 i6 = HEAP32[i21 >> 2] | 0;
 i15 = i19 + -1 | 0;
 i1 = i6;
 i2 = i6 + ((Math_imul(i15, i20) | 0) << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i20 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + 2 | 0;
  i2 = i2 + 2 | 0;
  i3 = i3 + 1 | 0;
 }
 i14 = i20 + -1 | 0;
 i1 = i6;
 i2 = i6 + (i14 << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i19 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + (i20 << 1) | 0;
  i2 = i2 + (i20 << 1) | 0;
  i3 = i3 + 1 | 0;
 }
 i4 = i21 + 1179664 | 0;
 i11 = i20 + 1 | 0;
 i13 = 0 - i20 | 0;
 i2 = i5 + ((i16 << 1) + 2) | 0;
 i12 = 1;
 i8 = 0;
 i3 = (HEAP32[i21 + 4 >> 2] | 0) + i11 | 0;
 i5 = i6 + (i11 << 1) | 0;
 L9 : while (1) {
  if ((i12 | 0) >= (i15 | 0)) {
   i2 = 59;
   break;
  }
  i10 = i2;
  i1 = i8;
  i11 = i3;
  i9 = 1;
  while (1) {
   if ((i9 | 0) >= (i14 | 0)) break;
   do if ((HEAPU8[i10 >> 0] | 0 | 0) > (i17 | 0)) {
    HEAP8[i11 >> 0] = -1;
    i3 = i5 + (i13 << 1) | 0;
    i2 = HEAP16[i3 >> 1] | 0;
    if (i2 << 16 >> 16 > 0) {
     HEAP16[i5 >> 1] = i2;
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i21 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i21 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i21 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i12;
     HEAP32[i21 + 1310736 + (i8 + -1 << 2) >> 2] = i12;
     break;
    }
    i7 = HEAP16[i3 + 2 >> 1] | 0;
    i8 = i7 << 16 >> 16;
    i2 = HEAP16[i3 + -2 >> 1] | 0;
    i6 = i2 << 16 >> 16;
    i3 = i2 << 16 >> 16 > 0;
    if (i7 << 16 >> 16 <= 0) {
     if (i3) {
      HEAP16[i5 >> 1] = i2;
      i2 = i6 * 7 | 0;
      i3 = i21 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
      i3 = i21 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
      i3 = i21 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i12;
      i3 = i21 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i3 >> 2] | 0) < (i9 | 0)) HEAP32[i3 >> 2] = i9;
      HEAP32[i21 + 1310736 + (i2 + -1 << 2) >> 2] = i12;
      break;
     }
     i2 = HEAP16[i5 + -2 >> 1] | 0;
     if (i2 << 16 >> 16 > 0) {
      HEAP16[i5 >> 1] = i2;
      i2 = (i2 << 16 >> 16) * 7 | 0;
      i8 = i21 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
      i8 = i21 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i9;
      i8 = i21 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i12;
      i2 = i21 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i2 >> 2] | 0) >= (i9 | 0)) break;
      HEAP32[i2 >> 2] = i9;
      break;
     } else {
      i2 = i1 + 1 | 0;
      if ((i1 | 0) > 32767) {
       i2 = 54;
       break L9;
      }
      HEAP16[i5 >> 1] = i2;
      HEAP32[i21 + 1179664 + (i1 << 2) >> 2] = i2 << 16 >> 16;
      i1 = i1 * 7 | 0;
      HEAP32[i21 + 1310736 + (i1 << 2) >> 2] = 1;
      HEAP32[i21 + 1310736 + (i1 + 1 << 2) >> 2] = i9;
      HEAP32[i21 + 1310736 + (i1 + 2 << 2) >> 2] = i12;
      HEAP32[i21 + 1310736 + (i1 + 3 << 2) >> 2] = i9;
      HEAP32[i21 + 1310736 + (i1 + 4 << 2) >> 2] = i9;
      HEAP32[i21 + 1310736 + (i1 + 5 << 2) >> 2] = i12;
      HEAP32[i21 + 1310736 + (i1 + 6 << 2) >> 2] = i12;
      i1 = i2;
      break;
     }
    }
    if (i3) {
     i2 = HEAP32[i21 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
     i7 = HEAP32[i21 + 1179664 + (i6 + -1 << 2) >> 2] | 0;
     L36 : do if ((i2 | 0) <= (i7 | 0)) {
      HEAP16[i5 >> 1] = i2;
      if ((i2 | 0) < (i7 | 0)) {
       i3 = i4;
       i6 = 0;
       while (1) {
        if ((i6 | 0) >= (i1 | 0)) break L36;
        if ((HEAP32[i3 >> 2] | 0) == (i7 | 0)) HEAP32[i3 >> 2] = i2;
        i3 = i3 + 4 | 0;
        i6 = i6 + 1 | 0;
       }
      }
     } else {
      HEAP16[i5 >> 1] = i7;
      i3 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) {
        i2 = i7;
        break L36;
       }
       if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i7;
       i3 = i3 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     } while (0);
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i21 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i21 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i21 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i12;
     HEAP32[i21 + 1310736 + (i8 + -1 << 2) >> 2] = i12;
     break;
    }
    i3 = HEAP16[i5 + -2 >> 1] | 0;
    if (i3 << 16 >> 16 <= 0) {
     HEAP16[i5 >> 1] = i7;
     i2 = i8 * 7 | 0;
     i3 = i21 + 1310736 + (i2 + -7 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
     i3 = i21 + 1310736 + (i2 + -6 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
     i3 = i21 + 1310736 + (i2 + -5 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i12;
     i3 = i21 + 1310736 + (i2 + -4 << 2) | 0;
     if ((HEAP32[i3 >> 2] | 0) > (i9 | 0)) HEAP32[i3 >> 2] = i9;
     HEAP32[i21 + 1310736 + (i2 + -1 << 2) >> 2] = i12;
     break;
    }
    i2 = HEAP32[i21 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
    i7 = HEAP32[i21 + 1179664 + ((i3 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if ((i2 | 0) <= (i7 | 0)) {
     HEAP16[i5 >> 1] = i2;
     if ((i2 | 0) < (i7 | 0)) {
      i3 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) break L60;
       if ((HEAP32[i3 >> 2] | 0) == (i7 | 0)) HEAP32[i3 >> 2] = i2;
       i3 = i3 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     }
    } else {
     HEAP16[i5 >> 1] = i7;
     i3 = i4;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i1 | 0)) {
       i2 = i7;
       break L60;
      }
      if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i7;
      i3 = i3 + 4 | 0;
      i6 = i6 + 1 | 0;
     }
    } while (0);
    i8 = (i2 << 16 >> 16) * 7 | 0;
    i7 = i21 + 1310736 + (i8 + -7 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
    i7 = i21 + 1310736 + (i8 + -6 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
    i8 = i21 + 1310736 + (i8 + -5 << 2) | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i12;
   } else {
    HEAP16[i5 >> 1] = 0;
    HEAP8[i11 >> 0] = 0;
   } while (0);
   i10 = i10 + 2 | 0;
   i11 = i11 + 1 | 0;
   i9 = i9 + 1 | 0;
   i5 = i5 + 2 | 0;
  }
  i2 = i10 + i16 + 4 | 0;
  i12 = i12 + 1 | 0;
  i8 = i1;
  i3 = i11 + 2 | 0;
  i5 = i5 + 4 | 0;
 }
 L80 : do if ((i2 | 0) == 54) {
  _arLog(0, 3, 17520, i18);
  i1 = -1;
 } else if ((i2 | 0) == 59) {
  i6 = i21 + 12 | 0;
  i1 = 1;
  i5 = 1;
  while (1) {
   if ((i5 | 0) > (i8 | 0)) break;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (i5 | 0)) i3 = i1 + 1 | 0; else {
    i3 = i1;
    i1 = HEAP32[i21 + 1179664 + (i2 + -1 << 2) >> 2] | 0;
   }
   HEAP32[i4 >> 2] = i1;
   i1 = i3;
   i5 = i5 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  i7 = i21 + 8 | 0;
  i2 = i1 + -1 | 0;
  HEAP32[i7 >> 2] = i2;
  if (!i2) i1 = 0; else {
   _memset(i6 | 0, 0, i2 << 2 | 0) | 0;
   _memset(i21 + 655376 | 0, 0, i2 << 4 | 0) | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break;
    i18 = i1 << 2;
    HEAP32[i21 + 131084 + (i18 << 2) >> 2] = i20;
    HEAP32[i21 + 131084 + ((i18 | 1) << 2) >> 2] = 0;
    HEAP32[i21 + 131084 + ((i18 | 2) << 2) >> 2] = i19;
    HEAP32[i21 + 131084 + ((i18 | 3) << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i5 = 0;
   while (1) {
    if ((i5 | 0) >= (i8 | 0)) break;
    i3 = (HEAP32[i21 + 1179664 + (i5 << 2) >> 2] | 0) + -1 | 0;
    i4 = i5 * 7 | 0;
    i1 = i21 + 12 + (i3 << 2) | 0;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + (HEAP32[i21 + 1310736 + (i4 << 2) >> 2] | 0);
    i1 = i3 << 1;
    i2 = i21 + 655376 + (i1 << 3) | 0;
    HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] + +(HEAP32[i21 + 1310736 + (i4 + 1 << 2) >> 2] | 0);
    i1 = i21 + 655376 + ((i1 | 1) << 3) | 0;
    HEAPF64[i1 >> 3] = +HEAPF64[i1 >> 3] + +(HEAP32[i21 + 1310736 + (i4 + 2 << 2) >> 2] | 0);
    i3 = i3 << 2;
    i1 = i21 + 131084 + (i3 << 2) | 0;
    i2 = HEAP32[i21 + 1310736 + (i4 + 3 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i21 + 131084 + ((i3 | 1) << 2) | 0;
    i2 = HEAP32[i21 + 1310736 + (i4 + 4 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) < (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i21 + 131084 + ((i3 | 2) << 2) | 0;
    i2 = HEAP32[i21 + 1310736 + (i4 + 5 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i2 = i21 + 131084 + ((i3 | 3) << 2) | 0;
    i1 = HEAP32[i21 + 1310736 + (i4 + 6 << 2) >> 2] | 0;
    if ((HEAP32[i2 >> 2] | 0) < (i1 | 0)) HEAP32[i2 >> 2] = i1;
    i5 = i5 + 1 | 0;
   }
   i2 = HEAP32[i7 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) {
     i1 = 0;
     break L80;
    }
    d23 = +(HEAP32[i21 + 12 + (i1 << 2) >> 2] | 0);
    i20 = i1 << 1;
    i19 = i21 + 655376 + (i20 << 3) | 0;
    HEAPF64[i19 >> 3] = +HEAPF64[i19 >> 3] / d23;
    i20 = i21 + 655376 + ((i20 | 1) << 3) | 0;
    HEAPF64[i20 >> 3] = +HEAPF64[i20 >> 3] / d23;
    i1 = i1 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i22;
 return i1 | 0;
}

function _arLabelingSubEBIC(i5, i16, i1, i17, i21) {
 i5 = i5 | 0;
 i16 = i16 | 0;
 i1 = i1 | 0;
 i17 = i17 | 0;
 i21 = i21 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, d23 = 0.0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i18 = i22;
 i20 = (i16 | 0) / 2 | 0;
 i19 = (i1 | 0) / 2 | 0;
 i6 = HEAP32[i21 >> 2] | 0;
 i15 = i19 + -1 | 0;
 i1 = i6;
 i2 = i6 + ((Math_imul(i15, i20) | 0) << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i20 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + 2 | 0;
  i2 = i2 + 2 | 0;
  i3 = i3 + 1 | 0;
 }
 i14 = i20 + -1 | 0;
 i1 = i6;
 i2 = i6 + (i14 << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i19 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + (i20 << 1) | 0;
  i2 = i2 + (i20 << 1) | 0;
  i3 = i3 + 1 | 0;
 }
 i4 = i21 + 1179664 | 0;
 i11 = i20 + 1 | 0;
 i13 = 0 - i20 | 0;
 i2 = i5 + ((i16 << 1) + 2) | 0;
 i12 = 1;
 i8 = 0;
 i3 = (HEAP32[i21 + 4 >> 2] | 0) + i11 | 0;
 i5 = i6 + (i11 << 1) | 0;
 L9 : while (1) {
  if ((i12 | 0) >= (i15 | 0)) {
   i2 = 59;
   break;
  }
  i10 = i2;
  i1 = i8;
  i11 = i3;
  i9 = 1;
  while (1) {
   if ((i9 | 0) >= (i14 | 0)) break;
   do if ((HEAPU8[i10 >> 0] | 0 | 0) > (i17 | 0)) {
    HEAP16[i5 >> 1] = 0;
    HEAP8[i11 >> 0] = 0;
   } else {
    HEAP8[i11 >> 0] = -1;
    i3 = i5 + (i13 << 1) | 0;
    i2 = HEAP16[i3 >> 1] | 0;
    if (i2 << 16 >> 16 > 0) {
     HEAP16[i5 >> 1] = i2;
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i21 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i21 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i21 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i12;
     HEAP32[i21 + 1310736 + (i8 + -1 << 2) >> 2] = i12;
     break;
    }
    i7 = HEAP16[i3 + 2 >> 1] | 0;
    i8 = i7 << 16 >> 16;
    i2 = HEAP16[i3 + -2 >> 1] | 0;
    i6 = i2 << 16 >> 16;
    i3 = i2 << 16 >> 16 > 0;
    if (i7 << 16 >> 16 <= 0) {
     if (i3) {
      HEAP16[i5 >> 1] = i2;
      i2 = i6 * 7 | 0;
      i3 = i21 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
      i3 = i21 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
      i3 = i21 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i12;
      i3 = i21 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i3 >> 2] | 0) < (i9 | 0)) HEAP32[i3 >> 2] = i9;
      HEAP32[i21 + 1310736 + (i2 + -1 << 2) >> 2] = i12;
      break;
     }
     i2 = HEAP16[i5 + -2 >> 1] | 0;
     if (i2 << 16 >> 16 > 0) {
      HEAP16[i5 >> 1] = i2;
      i2 = (i2 << 16 >> 16) * 7 | 0;
      i8 = i21 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
      i8 = i21 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i9;
      i8 = i21 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i12;
      i2 = i21 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i2 >> 2] | 0) >= (i9 | 0)) break;
      HEAP32[i2 >> 2] = i9;
      break;
     } else {
      i2 = i1 + 1 | 0;
      if ((i1 | 0) > 32767) {
       i2 = 54;
       break L9;
      }
      HEAP16[i5 >> 1] = i2;
      HEAP32[i21 + 1179664 + (i1 << 2) >> 2] = i2 << 16 >> 16;
      i1 = i1 * 7 | 0;
      HEAP32[i21 + 1310736 + (i1 << 2) >> 2] = 1;
      HEAP32[i21 + 1310736 + (i1 + 1 << 2) >> 2] = i9;
      HEAP32[i21 + 1310736 + (i1 + 2 << 2) >> 2] = i12;
      HEAP32[i21 + 1310736 + (i1 + 3 << 2) >> 2] = i9;
      HEAP32[i21 + 1310736 + (i1 + 4 << 2) >> 2] = i9;
      HEAP32[i21 + 1310736 + (i1 + 5 << 2) >> 2] = i12;
      HEAP32[i21 + 1310736 + (i1 + 6 << 2) >> 2] = i12;
      i1 = i2;
      break;
     }
    }
    if (i3) {
     i2 = HEAP32[i21 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
     i7 = HEAP32[i21 + 1179664 + (i6 + -1 << 2) >> 2] | 0;
     L37 : do if ((i2 | 0) <= (i7 | 0)) {
      HEAP16[i5 >> 1] = i2;
      if ((i2 | 0) < (i7 | 0)) {
       i3 = i4;
       i6 = 0;
       while (1) {
        if ((i6 | 0) >= (i1 | 0)) break L37;
        if ((HEAP32[i3 >> 2] | 0) == (i7 | 0)) HEAP32[i3 >> 2] = i2;
        i3 = i3 + 4 | 0;
        i6 = i6 + 1 | 0;
       }
      }
     } else {
      HEAP16[i5 >> 1] = i7;
      i3 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) {
        i2 = i7;
        break L37;
       }
       if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i7;
       i3 = i3 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     } while (0);
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i21 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i21 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i21 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i12;
     HEAP32[i21 + 1310736 + (i8 + -1 << 2) >> 2] = i12;
     break;
    }
    i3 = HEAP16[i5 + -2 >> 1] | 0;
    if (i3 << 16 >> 16 <= 0) {
     HEAP16[i5 >> 1] = i7;
     i2 = i8 * 7 | 0;
     i3 = i21 + 1310736 + (i2 + -7 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
     i3 = i21 + 1310736 + (i2 + -6 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
     i3 = i21 + 1310736 + (i2 + -5 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i12;
     i3 = i21 + 1310736 + (i2 + -4 << 2) | 0;
     if ((HEAP32[i3 >> 2] | 0) > (i9 | 0)) HEAP32[i3 >> 2] = i9;
     HEAP32[i21 + 1310736 + (i2 + -1 << 2) >> 2] = i12;
     break;
    }
    i2 = HEAP32[i21 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
    i7 = HEAP32[i21 + 1179664 + ((i3 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if ((i2 | 0) <= (i7 | 0)) {
     HEAP16[i5 >> 1] = i2;
     if ((i2 | 0) < (i7 | 0)) {
      i3 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) break L61;
       if ((HEAP32[i3 >> 2] | 0) == (i7 | 0)) HEAP32[i3 >> 2] = i2;
       i3 = i3 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     }
    } else {
     HEAP16[i5 >> 1] = i7;
     i3 = i4;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i1 | 0)) {
       i2 = i7;
       break L61;
      }
      if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i7;
      i3 = i3 + 4 | 0;
      i6 = i6 + 1 | 0;
     }
    } while (0);
    i8 = (i2 << 16 >> 16) * 7 | 0;
    i7 = i21 + 1310736 + (i8 + -7 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
    i7 = i21 + 1310736 + (i8 + -6 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
    i8 = i21 + 1310736 + (i8 + -5 << 2) | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i12;
   } while (0);
   i10 = i10 + 2 | 0;
   i11 = i11 + 1 | 0;
   i9 = i9 + 1 | 0;
   i5 = i5 + 2 | 0;
  }
  i2 = i10 + i16 + 4 | 0;
  i12 = i12 + 1 | 0;
  i8 = i1;
  i3 = i11 + 2 | 0;
  i5 = i5 + 4 | 0;
 }
 L80 : do if ((i2 | 0) == 54) {
  _arLog(0, 3, 17520, i18);
  i1 = -1;
 } else if ((i2 | 0) == 59) {
  i6 = i21 + 12 | 0;
  i1 = 1;
  i5 = 1;
  while (1) {
   if ((i5 | 0) > (i8 | 0)) break;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (i5 | 0)) i3 = i1 + 1 | 0; else {
    i3 = i1;
    i1 = HEAP32[i21 + 1179664 + (i2 + -1 << 2) >> 2] | 0;
   }
   HEAP32[i4 >> 2] = i1;
   i1 = i3;
   i5 = i5 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  i7 = i21 + 8 | 0;
  i2 = i1 + -1 | 0;
  HEAP32[i7 >> 2] = i2;
  if (!i2) i1 = 0; else {
   _memset(i6 | 0, 0, i2 << 2 | 0) | 0;
   _memset(i21 + 655376 | 0, 0, i2 << 4 | 0) | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break;
    i18 = i1 << 2;
    HEAP32[i21 + 131084 + (i18 << 2) >> 2] = i20;
    HEAP32[i21 + 131084 + ((i18 | 1) << 2) >> 2] = 0;
    HEAP32[i21 + 131084 + ((i18 | 2) << 2) >> 2] = i19;
    HEAP32[i21 + 131084 + ((i18 | 3) << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i5 = 0;
   while (1) {
    if ((i5 | 0) >= (i8 | 0)) break;
    i3 = (HEAP32[i21 + 1179664 + (i5 << 2) >> 2] | 0) + -1 | 0;
    i4 = i5 * 7 | 0;
    i1 = i21 + 12 + (i3 << 2) | 0;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + (HEAP32[i21 + 1310736 + (i4 << 2) >> 2] | 0);
    i1 = i3 << 1;
    i2 = i21 + 655376 + (i1 << 3) | 0;
    HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] + +(HEAP32[i21 + 1310736 + (i4 + 1 << 2) >> 2] | 0);
    i1 = i21 + 655376 + ((i1 | 1) << 3) | 0;
    HEAPF64[i1 >> 3] = +HEAPF64[i1 >> 3] + +(HEAP32[i21 + 1310736 + (i4 + 2 << 2) >> 2] | 0);
    i3 = i3 << 2;
    i1 = i21 + 131084 + (i3 << 2) | 0;
    i2 = HEAP32[i21 + 1310736 + (i4 + 3 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i21 + 131084 + ((i3 | 1) << 2) | 0;
    i2 = HEAP32[i21 + 1310736 + (i4 + 4 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) < (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i21 + 131084 + ((i3 | 2) << 2) | 0;
    i2 = HEAP32[i21 + 1310736 + (i4 + 5 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i2 = i21 + 131084 + ((i3 | 3) << 2) | 0;
    i1 = HEAP32[i21 + 1310736 + (i4 + 6 << 2) >> 2] | 0;
    if ((HEAP32[i2 >> 2] | 0) < (i1 | 0)) HEAP32[i2 >> 2] = i1;
    i5 = i5 + 1 | 0;
   }
   i2 = HEAP32[i7 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) {
     i1 = 0;
     break L80;
    }
    d23 = +(HEAP32[i21 + 12 + (i1 << 2) >> 2] | 0);
    i20 = i1 << 1;
    i19 = i21 + 655376 + (i20 << 3) | 0;
    HEAPF64[i19 >> 3] = +HEAPF64[i19 >> 3] / d23;
    i20 = i21 + 655376 + ((i20 | 1) << 3) | 0;
    HEAPF64[i20 >> 3] = +HEAPF64[i20 >> 3] / d23;
    i1 = i1 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i22;
 return i1 | 0;
}

function _arLabelingSubEWRC(i5, i18, i19, i15, i20) {
 i5 = i5 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 i15 = i15 | 0;
 i20 = i20 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0, i21 = 0, d22 = 0.0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i17 = i21;
 i6 = HEAP32[i20 >> 2] | 0;
 i16 = i19 + -1 | 0;
 i1 = i6;
 i2 = i6 + ((Math_imul(i16, i18) | 0) << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i18 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + 2 | 0;
  i2 = i2 + 2 | 0;
  i3 = i3 + 1 | 0;
 }
 i14 = i18 + -1 | 0;
 i1 = i6;
 i2 = i6 + (i14 << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i19 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + (i18 << 1) | 0;
  i2 = i2 + (i18 << 1) | 0;
  i3 = i3 + 1 | 0;
 }
 i4 = i20 + 1179664 | 0;
 i11 = i18 + 1 | 0;
 i13 = 0 - i18 | 0;
 i2 = i5 + i11 | 0;
 i12 = 1;
 i8 = 0;
 i3 = (HEAP32[i20 + 4 >> 2] | 0) + i11 | 0;
 i5 = i6 + (i11 << 1) | 0;
 L9 : while (1) {
  if ((i12 | 0) >= (i16 | 0)) {
   i2 = 59;
   break;
  }
  i10 = i2;
  i1 = i8;
  i11 = i3;
  i9 = 1;
  while (1) {
   if ((i9 | 0) >= (i14 | 0)) break;
   do if ((HEAPU8[i10 >> 0] | 0 | 0) > (i15 | 0)) {
    HEAP8[i11 >> 0] = -1;
    i3 = i5 + (i13 << 1) | 0;
    i2 = HEAP16[i3 >> 1] | 0;
    if (i2 << 16 >> 16 > 0) {
     HEAP16[i5 >> 1] = i2;
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i20 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i20 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i20 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i12;
     HEAP32[i20 + 1310736 + (i8 + -1 << 2) >> 2] = i12;
     break;
    }
    i7 = HEAP16[i3 + 2 >> 1] | 0;
    i8 = i7 << 16 >> 16;
    i2 = HEAP16[i3 + -2 >> 1] | 0;
    i6 = i2 << 16 >> 16;
    i3 = i2 << 16 >> 16 > 0;
    if (i7 << 16 >> 16 <= 0) {
     if (i3) {
      HEAP16[i5 >> 1] = i2;
      i2 = i6 * 7 | 0;
      i3 = i20 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
      i3 = i20 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
      i3 = i20 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i12;
      i3 = i20 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i3 >> 2] | 0) < (i9 | 0)) HEAP32[i3 >> 2] = i9;
      HEAP32[i20 + 1310736 + (i2 + -1 << 2) >> 2] = i12;
      break;
     }
     i2 = HEAP16[i5 + -2 >> 1] | 0;
     if (i2 << 16 >> 16 > 0) {
      HEAP16[i5 >> 1] = i2;
      i2 = (i2 << 16 >> 16) * 7 | 0;
      i8 = i20 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
      i8 = i20 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i9;
      i8 = i20 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i12;
      i2 = i20 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i2 >> 2] | 0) >= (i9 | 0)) break;
      HEAP32[i2 >> 2] = i9;
      break;
     } else {
      i2 = i1 + 1 | 0;
      if ((i1 | 0) > 32767) {
       i2 = 54;
       break L9;
      }
      HEAP16[i5 >> 1] = i2;
      HEAP32[i20 + 1179664 + (i1 << 2) >> 2] = i2 << 16 >> 16;
      i1 = i1 * 7 | 0;
      HEAP32[i20 + 1310736 + (i1 << 2) >> 2] = 1;
      HEAP32[i20 + 1310736 + (i1 + 1 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 2 << 2) >> 2] = i12;
      HEAP32[i20 + 1310736 + (i1 + 3 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 4 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 5 << 2) >> 2] = i12;
      HEAP32[i20 + 1310736 + (i1 + 6 << 2) >> 2] = i12;
      i1 = i2;
      break;
     }
    }
    if (i3) {
     i2 = HEAP32[i20 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
     i7 = HEAP32[i20 + 1179664 + (i6 + -1 << 2) >> 2] | 0;
     L36 : do if ((i2 | 0) <= (i7 | 0)) {
      HEAP16[i5 >> 1] = i2;
      if ((i2 | 0) < (i7 | 0)) {
       i3 = i4;
       i6 = 0;
       while (1) {
        if ((i6 | 0) >= (i1 | 0)) break L36;
        if ((HEAP32[i3 >> 2] | 0) == (i7 | 0)) HEAP32[i3 >> 2] = i2;
        i3 = i3 + 4 | 0;
        i6 = i6 + 1 | 0;
       }
      }
     } else {
      HEAP16[i5 >> 1] = i7;
      i3 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) {
        i2 = i7;
        break L36;
       }
       if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i7;
       i3 = i3 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     } while (0);
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i20 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i20 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i20 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i12;
     HEAP32[i20 + 1310736 + (i8 + -1 << 2) >> 2] = i12;
     break;
    }
    i3 = HEAP16[i5 + -2 >> 1] | 0;
    if (i3 << 16 >> 16 <= 0) {
     HEAP16[i5 >> 1] = i7;
     i2 = i8 * 7 | 0;
     i3 = i20 + 1310736 + (i2 + -7 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
     i3 = i20 + 1310736 + (i2 + -6 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
     i3 = i20 + 1310736 + (i2 + -5 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i12;
     i3 = i20 + 1310736 + (i2 + -4 << 2) | 0;
     if ((HEAP32[i3 >> 2] | 0) > (i9 | 0)) HEAP32[i3 >> 2] = i9;
     HEAP32[i20 + 1310736 + (i2 + -1 << 2) >> 2] = i12;
     break;
    }
    i2 = HEAP32[i20 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
    i7 = HEAP32[i20 + 1179664 + ((i3 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if ((i2 | 0) <= (i7 | 0)) {
     HEAP16[i5 >> 1] = i2;
     if ((i2 | 0) < (i7 | 0)) {
      i3 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) break L60;
       if ((HEAP32[i3 >> 2] | 0) == (i7 | 0)) HEAP32[i3 >> 2] = i2;
       i3 = i3 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     }
    } else {
     HEAP16[i5 >> 1] = i7;
     i3 = i4;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i1 | 0)) {
       i2 = i7;
       break L60;
      }
      if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i7;
      i3 = i3 + 4 | 0;
      i6 = i6 + 1 | 0;
     }
    } while (0);
    i8 = (i2 << 16 >> 16) * 7 | 0;
    i7 = i20 + 1310736 + (i8 + -7 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
    i7 = i20 + 1310736 + (i8 + -6 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
    i8 = i20 + 1310736 + (i8 + -5 << 2) | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i12;
   } else {
    HEAP16[i5 >> 1] = 0;
    HEAP8[i11 >> 0] = 0;
   } while (0);
   i10 = i10 + 1 | 0;
   i11 = i11 + 1 | 0;
   i9 = i9 + 1 | 0;
   i5 = i5 + 2 | 0;
  }
  i2 = i10 + 2 | 0;
  i12 = i12 + 1 | 0;
  i8 = i1;
  i3 = i11 + 2 | 0;
  i5 = i5 + 4 | 0;
 }
 L80 : do if ((i2 | 0) == 54) {
  _arLog(0, 3, 17520, i17);
  i1 = -1;
 } else if ((i2 | 0) == 59) {
  i6 = i20 + 12 | 0;
  i1 = 1;
  i5 = 1;
  while (1) {
   if ((i5 | 0) > (i8 | 0)) break;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (i5 | 0)) i3 = i1 + 1 | 0; else {
    i3 = i1;
    i1 = HEAP32[i20 + 1179664 + (i2 + -1 << 2) >> 2] | 0;
   }
   HEAP32[i4 >> 2] = i1;
   i1 = i3;
   i5 = i5 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  i7 = i20 + 8 | 0;
  i2 = i1 + -1 | 0;
  HEAP32[i7 >> 2] = i2;
  if (!i2) i1 = 0; else {
   _memset(i6 | 0, 0, i2 << 2 | 0) | 0;
   _memset(i20 + 655376 | 0, 0, i2 << 4 | 0) | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break;
    i17 = i1 << 2;
    HEAP32[i20 + 131084 + (i17 << 2) >> 2] = i18;
    HEAP32[i20 + 131084 + ((i17 | 1) << 2) >> 2] = 0;
    HEAP32[i20 + 131084 + ((i17 | 2) << 2) >> 2] = i19;
    HEAP32[i20 + 131084 + ((i17 | 3) << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i5 = 0;
   while (1) {
    if ((i5 | 0) >= (i8 | 0)) break;
    i3 = (HEAP32[i20 + 1179664 + (i5 << 2) >> 2] | 0) + -1 | 0;
    i4 = i5 * 7 | 0;
    i1 = i20 + 12 + (i3 << 2) | 0;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + (HEAP32[i20 + 1310736 + (i4 << 2) >> 2] | 0);
    i1 = i3 << 1;
    i2 = i20 + 655376 + (i1 << 3) | 0;
    HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] + +(HEAP32[i20 + 1310736 + (i4 + 1 << 2) >> 2] | 0);
    i1 = i20 + 655376 + ((i1 | 1) << 3) | 0;
    HEAPF64[i1 >> 3] = +HEAPF64[i1 >> 3] + +(HEAP32[i20 + 1310736 + (i4 + 2 << 2) >> 2] | 0);
    i3 = i3 << 2;
    i1 = i20 + 131084 + (i3 << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 3 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i20 + 131084 + ((i3 | 1) << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 4 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) < (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i20 + 131084 + ((i3 | 2) << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 5 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i2 = i20 + 131084 + ((i3 | 3) << 2) | 0;
    i1 = HEAP32[i20 + 1310736 + (i4 + 6 << 2) >> 2] | 0;
    if ((HEAP32[i2 >> 2] | 0) < (i1 | 0)) HEAP32[i2 >> 2] = i1;
    i5 = i5 + 1 | 0;
   }
   i2 = HEAP32[i7 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) {
     i1 = 0;
     break L80;
    }
    d22 = +(HEAP32[i20 + 12 + (i1 << 2) >> 2] | 0);
    i19 = i1 << 1;
    i18 = i20 + 655376 + (i19 << 3) | 0;
    HEAPF64[i18 >> 3] = +HEAPF64[i18 >> 3] / d22;
    i19 = i20 + 655376 + ((i19 | 1) << 3) | 0;
    HEAPF64[i19 >> 3] = +HEAPF64[i19 >> 3] / d22;
    i1 = i1 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i21;
 return i1 | 0;
}

function _arLabelingSubEBRC(i5, i18, i19, i15, i20) {
 i5 = i5 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 i15 = i15 | 0;
 i20 = i20 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0, i21 = 0, d22 = 0.0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i17 = i21;
 i6 = HEAP32[i20 >> 2] | 0;
 i16 = i19 + -1 | 0;
 i1 = i6;
 i2 = i6 + ((Math_imul(i16, i18) | 0) << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i18 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + 2 | 0;
  i2 = i2 + 2 | 0;
  i3 = i3 + 1 | 0;
 }
 i14 = i18 + -1 | 0;
 i1 = i6;
 i2 = i6 + (i14 << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i19 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + (i18 << 1) | 0;
  i2 = i2 + (i18 << 1) | 0;
  i3 = i3 + 1 | 0;
 }
 i4 = i20 + 1179664 | 0;
 i11 = i18 + 1 | 0;
 i13 = 0 - i18 | 0;
 i2 = i5 + i11 | 0;
 i12 = 1;
 i8 = 0;
 i3 = (HEAP32[i20 + 4 >> 2] | 0) + i11 | 0;
 i5 = i6 + (i11 << 1) | 0;
 L9 : while (1) {
  if ((i12 | 0) >= (i16 | 0)) {
   i2 = 59;
   break;
  }
  i10 = i2;
  i1 = i8;
  i11 = i3;
  i9 = 1;
  while (1) {
   if ((i9 | 0) >= (i14 | 0)) break;
   do if ((HEAPU8[i10 >> 0] | 0 | 0) > (i15 | 0)) {
    HEAP16[i5 >> 1] = 0;
    HEAP8[i11 >> 0] = 0;
   } else {
    HEAP8[i11 >> 0] = -1;
    i3 = i5 + (i13 << 1) | 0;
    i2 = HEAP16[i3 >> 1] | 0;
    if (i2 << 16 >> 16 > 0) {
     HEAP16[i5 >> 1] = i2;
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i20 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i20 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i20 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i12;
     HEAP32[i20 + 1310736 + (i8 + -1 << 2) >> 2] = i12;
     break;
    }
    i7 = HEAP16[i3 + 2 >> 1] | 0;
    i8 = i7 << 16 >> 16;
    i2 = HEAP16[i3 + -2 >> 1] | 0;
    i6 = i2 << 16 >> 16;
    i3 = i2 << 16 >> 16 > 0;
    if (i7 << 16 >> 16 <= 0) {
     if (i3) {
      HEAP16[i5 >> 1] = i2;
      i2 = i6 * 7 | 0;
      i3 = i20 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
      i3 = i20 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
      i3 = i20 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i12;
      i3 = i20 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i3 >> 2] | 0) < (i9 | 0)) HEAP32[i3 >> 2] = i9;
      HEAP32[i20 + 1310736 + (i2 + -1 << 2) >> 2] = i12;
      break;
     }
     i2 = HEAP16[i5 + -2 >> 1] | 0;
     if (i2 << 16 >> 16 > 0) {
      HEAP16[i5 >> 1] = i2;
      i2 = (i2 << 16 >> 16) * 7 | 0;
      i8 = i20 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
      i8 = i20 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i9;
      i8 = i20 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i12;
      i2 = i20 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i2 >> 2] | 0) >= (i9 | 0)) break;
      HEAP32[i2 >> 2] = i9;
      break;
     } else {
      i2 = i1 + 1 | 0;
      if ((i1 | 0) > 32767) {
       i2 = 54;
       break L9;
      }
      HEAP16[i5 >> 1] = i2;
      HEAP32[i20 + 1179664 + (i1 << 2) >> 2] = i2 << 16 >> 16;
      i1 = i1 * 7 | 0;
      HEAP32[i20 + 1310736 + (i1 << 2) >> 2] = 1;
      HEAP32[i20 + 1310736 + (i1 + 1 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 2 << 2) >> 2] = i12;
      HEAP32[i20 + 1310736 + (i1 + 3 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 4 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 5 << 2) >> 2] = i12;
      HEAP32[i20 + 1310736 + (i1 + 6 << 2) >> 2] = i12;
      i1 = i2;
      break;
     }
    }
    if (i3) {
     i2 = HEAP32[i20 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
     i7 = HEAP32[i20 + 1179664 + (i6 + -1 << 2) >> 2] | 0;
     L37 : do if ((i2 | 0) <= (i7 | 0)) {
      HEAP16[i5 >> 1] = i2;
      if ((i2 | 0) < (i7 | 0)) {
       i3 = i4;
       i6 = 0;
       while (1) {
        if ((i6 | 0) >= (i1 | 0)) break L37;
        if ((HEAP32[i3 >> 2] | 0) == (i7 | 0)) HEAP32[i3 >> 2] = i2;
        i3 = i3 + 4 | 0;
        i6 = i6 + 1 | 0;
       }
      }
     } else {
      HEAP16[i5 >> 1] = i7;
      i3 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) {
        i2 = i7;
        break L37;
       }
       if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i7;
       i3 = i3 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     } while (0);
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i20 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i20 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i20 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i12;
     HEAP32[i20 + 1310736 + (i8 + -1 << 2) >> 2] = i12;
     break;
    }
    i3 = HEAP16[i5 + -2 >> 1] | 0;
    if (i3 << 16 >> 16 <= 0) {
     HEAP16[i5 >> 1] = i7;
     i2 = i8 * 7 | 0;
     i3 = i20 + 1310736 + (i2 + -7 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
     i3 = i20 + 1310736 + (i2 + -6 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
     i3 = i20 + 1310736 + (i2 + -5 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i12;
     i3 = i20 + 1310736 + (i2 + -4 << 2) | 0;
     if ((HEAP32[i3 >> 2] | 0) > (i9 | 0)) HEAP32[i3 >> 2] = i9;
     HEAP32[i20 + 1310736 + (i2 + -1 << 2) >> 2] = i12;
     break;
    }
    i2 = HEAP32[i20 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
    i7 = HEAP32[i20 + 1179664 + ((i3 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if ((i2 | 0) <= (i7 | 0)) {
     HEAP16[i5 >> 1] = i2;
     if ((i2 | 0) < (i7 | 0)) {
      i3 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) break L61;
       if ((HEAP32[i3 >> 2] | 0) == (i7 | 0)) HEAP32[i3 >> 2] = i2;
       i3 = i3 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     }
    } else {
     HEAP16[i5 >> 1] = i7;
     i3 = i4;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i1 | 0)) {
       i2 = i7;
       break L61;
      }
      if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i7;
      i3 = i3 + 4 | 0;
      i6 = i6 + 1 | 0;
     }
    } while (0);
    i8 = (i2 << 16 >> 16) * 7 | 0;
    i7 = i20 + 1310736 + (i8 + -7 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
    i7 = i20 + 1310736 + (i8 + -6 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
    i8 = i20 + 1310736 + (i8 + -5 << 2) | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i12;
   } while (0);
   i10 = i10 + 1 | 0;
   i11 = i11 + 1 | 0;
   i9 = i9 + 1 | 0;
   i5 = i5 + 2 | 0;
  }
  i2 = i10 + 2 | 0;
  i12 = i12 + 1 | 0;
  i8 = i1;
  i3 = i11 + 2 | 0;
  i5 = i5 + 4 | 0;
 }
 L80 : do if ((i2 | 0) == 54) {
  _arLog(0, 3, 17520, i17);
  i1 = -1;
 } else if ((i2 | 0) == 59) {
  i6 = i20 + 12 | 0;
  i1 = 1;
  i5 = 1;
  while (1) {
   if ((i5 | 0) > (i8 | 0)) break;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (i5 | 0)) i3 = i1 + 1 | 0; else {
    i3 = i1;
    i1 = HEAP32[i20 + 1179664 + (i2 + -1 << 2) >> 2] | 0;
   }
   HEAP32[i4 >> 2] = i1;
   i1 = i3;
   i5 = i5 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  i7 = i20 + 8 | 0;
  i2 = i1 + -1 | 0;
  HEAP32[i7 >> 2] = i2;
  if (!i2) i1 = 0; else {
   _memset(i6 | 0, 0, i2 << 2 | 0) | 0;
   _memset(i20 + 655376 | 0, 0, i2 << 4 | 0) | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break;
    i17 = i1 << 2;
    HEAP32[i20 + 131084 + (i17 << 2) >> 2] = i18;
    HEAP32[i20 + 131084 + ((i17 | 1) << 2) >> 2] = 0;
    HEAP32[i20 + 131084 + ((i17 | 2) << 2) >> 2] = i19;
    HEAP32[i20 + 131084 + ((i17 | 3) << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i5 = 0;
   while (1) {
    if ((i5 | 0) >= (i8 | 0)) break;
    i3 = (HEAP32[i20 + 1179664 + (i5 << 2) >> 2] | 0) + -1 | 0;
    i4 = i5 * 7 | 0;
    i1 = i20 + 12 + (i3 << 2) | 0;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + (HEAP32[i20 + 1310736 + (i4 << 2) >> 2] | 0);
    i1 = i3 << 1;
    i2 = i20 + 655376 + (i1 << 3) | 0;
    HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] + +(HEAP32[i20 + 1310736 + (i4 + 1 << 2) >> 2] | 0);
    i1 = i20 + 655376 + ((i1 | 1) << 3) | 0;
    HEAPF64[i1 >> 3] = +HEAPF64[i1 >> 3] + +(HEAP32[i20 + 1310736 + (i4 + 2 << 2) >> 2] | 0);
    i3 = i3 << 2;
    i1 = i20 + 131084 + (i3 << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 3 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i20 + 131084 + ((i3 | 1) << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 4 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) < (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i20 + 131084 + ((i3 | 2) << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 5 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i2 = i20 + 131084 + ((i3 | 3) << 2) | 0;
    i1 = HEAP32[i20 + 1310736 + (i4 + 6 << 2) >> 2] | 0;
    if ((HEAP32[i2 >> 2] | 0) < (i1 | 0)) HEAP32[i2 >> 2] = i1;
    i5 = i5 + 1 | 0;
   }
   i2 = HEAP32[i7 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) {
     i1 = 0;
     break L80;
    }
    d22 = +(HEAP32[i20 + 12 + (i1 << 2) >> 2] | 0);
    i19 = i1 << 1;
    i18 = i20 + 655376 + (i19 << 3) | 0;
    HEAPF64[i18 >> 3] = +HEAPF64[i18 >> 3] / d22;
    i19 = i20 + 655376 + ((i19 | 1) << 3) | 0;
    HEAPF64[i19 >> 3] = +HEAPF64[i19 >> 3] / d22;
    i1 = i1 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i21;
 return i1 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc(i35, i36, i37, i38, i39, i40, i41, i1) {
 i35 = i35 | 0;
 i36 = i36 | 0;
 i37 = i37 | 0;
 i38 = i38 | 0;
 i39 = i39 | 0;
 i40 = i40 | 0;
 i41 = i41 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i42 = 0, i43 = 0;
 i42 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 i2 = i42 + 128 | 0;
 i1 = i42 + 112 | 0;
 i33 = i42 + 124 | 0;
 i34 = i42 + 120 | 0;
 i3 = i42 + 116 | 0;
 i4 = i42 + 108 | 0;
 i5 = i42 + 104 | 0;
 i6 = i42 + 100 | 0;
 i7 = i42 + 96 | 0;
 i8 = i42 + 92 | 0;
 i9 = i42 + 88 | 0;
 i10 = i42 + 84 | 0;
 i11 = i42 + 80 | 0;
 i12 = i42 + 76 | 0;
 i13 = i42 + 72 | 0;
 i14 = i42 + 68 | 0;
 i15 = i42 + 64 | 0;
 i16 = i42 + 60 | 0;
 i17 = i42 + 56 | 0;
 i18 = i42 + 52 | 0;
 i19 = i42 + 48 | 0;
 i20 = i42 + 44 | 0;
 i21 = i42 + 40 | 0;
 i22 = i42 + 36 | 0;
 i23 = i42 + 32 | 0;
 i24 = i42 + 28 | 0;
 i25 = i42 + 24 | 0;
 i26 = i42 + 20 | 0;
 i27 = i42 + 16 | 0;
 i28 = i42 + 12 | 0;
 i29 = i42 + 8 | 0;
 i30 = i42 + 4 | 0;
 i31 = i42;
 HEAP32[i39 >> 2] = 0;
 __ZNKSt3__28ios_base6getlocEv(i2, i38);
 i32 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58824) | 0;
 __ZNSt3__26localeD2Ev(i2);
 do switch (i41 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[i33 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i33 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i35, i40 + 24 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[i34 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i34 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i35, i40 + 16 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 99:
  {
   i34 = i35 + 8 | 0;
   i34 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i34 >> 2] | 0) + 12 >> 2] & 127](i34) | 0;
   HEAP32[i3 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i4 >> 2] = HEAP32[i37 >> 2];
   i43 = HEAP8[i34 + 8 + 3 >> 0] | 0;
   i37 = i43 << 24 >> 24 < 0;
   i41 = i37 ? HEAP32[i34 >> 2] | 0 : i34;
   i43 = i41 + ((i37 ? HEAP32[i34 + 4 >> 2] | 0 : i43 & 255) << 2) | 0;
   HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
   i43 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i35, i1, i2, i38, i39, i40, i41, i43) | 0;
   HEAP32[i36 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[i5 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE(i35, i40 + 12 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 68:
  {
   HEAP32[i6 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i7 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
   i43 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i35, i1, i2, i38, i39, i40, 10784, 10816) | 0;
   HEAP32[i36 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 70:
  {
   HEAP32[i8 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i9 >> 2];
   i43 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i35, i1, i2, i38, i39, i40, 10816, 10848) | 0;
   HEAP32[i36 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 72:
  {
   HEAP32[i10 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i35, i40 + 8 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 73:
  {
   HEAP32[i11 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i11 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i35, i40 + 8 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 106:
  {
   HEAP32[i12 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i12 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE(i35, i40 + 28 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 109:
  {
   HEAP32[i13 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i13 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE(i35, i40 + 16 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 77:
  {
   HEAP32[i14 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i14 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE(i35, i40 + 4 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[i15 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i15 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE(i35, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 112:
  {
   HEAP32[i16 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i16 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE(i35, i40 + 8 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 114:
  {
   HEAP32[i17 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i18 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i17 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i18 >> 2];
   i43 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i35, i1, i2, i38, i39, i40, 10848, 10892) | 0;
   HEAP32[i36 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 82:
  {
   HEAP32[i19 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i20 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i19 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i20 >> 2];
   i43 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i35, i1, i2, i38, i39, i40, 10896, 10916) | 0;
   HEAP32[i36 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 83:
  {
   HEAP32[i21 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i21 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE(i35, i40, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 84:
  {
   HEAP32[i22 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i23 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i22 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i23 >> 2];
   i43 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i35, i1, i2, i38, i39, i40, 10928, 10960) | 0;
   HEAP32[i36 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 119:
  {
   HEAP32[i24 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i24 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE(i35, i40 + 24 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 120:
  {
   i41 = HEAP32[(HEAP32[i35 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[i25 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i26 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i25 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i26 >> 2];
   i1 = FUNCTION_TABLE_iiiiiii[i41 & 63](i35, i1, i2, i38, i39, i40) | 0;
   break;
  }
 case 88:
  {
   i34 = i35 + 8 | 0;
   i34 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i34 >> 2] | 0) + 24 >> 2] & 127](i34) | 0;
   HEAP32[i27 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i28 >> 2] = HEAP32[i37 >> 2];
   i43 = HEAP8[i34 + 8 + 3 >> 0] | 0;
   i37 = i43 << 24 >> 24 < 0;
   i41 = i37 ? HEAP32[i34 >> 2] | 0 : i34;
   i43 = i41 + ((i37 ? HEAP32[i34 + 4 >> 2] | 0 : i43 & 255) << 2) | 0;
   HEAP32[i1 >> 2] = HEAP32[i27 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i28 >> 2];
   i43 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i35, i1, i2, i38, i39, i40, i41, i43) | 0;
   HEAP32[i36 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 121:
  {
   HEAP32[i29 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i29 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i35, i40 + 20 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 89:
  {
   HEAP32[i30 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i30 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE(i35, i40 + 20 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 37:
  {
   HEAP32[i31 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i31 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE(i35, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 default:
  {
   HEAP32[i39 >> 2] = HEAP32[i39 >> 2] | 4;
   i43 = 26;
  }
 } while (0);
 if ((i43 | 0) == 26) i1 = HEAP32[i36 >> 2] | 0;
 STACKTOP = i42;
 return i1 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc(i35, i36, i37, i38, i39, i40, i41, i1) {
 i35 = i35 | 0;
 i36 = i36 | 0;
 i37 = i37 | 0;
 i38 = i38 | 0;
 i39 = i39 | 0;
 i40 = i40 | 0;
 i41 = i41 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i42 = 0, i43 = 0;
 i42 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 i2 = i42 + 128 | 0;
 i1 = i42 + 112 | 0;
 i33 = i42 + 124 | 0;
 i34 = i42 + 120 | 0;
 i3 = i42 + 116 | 0;
 i4 = i42 + 108 | 0;
 i5 = i42 + 104 | 0;
 i6 = i42 + 100 | 0;
 i7 = i42 + 96 | 0;
 i8 = i42 + 92 | 0;
 i9 = i42 + 88 | 0;
 i10 = i42 + 84 | 0;
 i11 = i42 + 80 | 0;
 i12 = i42 + 76 | 0;
 i13 = i42 + 72 | 0;
 i14 = i42 + 68 | 0;
 i15 = i42 + 64 | 0;
 i16 = i42 + 60 | 0;
 i17 = i42 + 56 | 0;
 i18 = i42 + 52 | 0;
 i19 = i42 + 48 | 0;
 i20 = i42 + 44 | 0;
 i21 = i42 + 40 | 0;
 i22 = i42 + 36 | 0;
 i23 = i42 + 32 | 0;
 i24 = i42 + 28 | 0;
 i25 = i42 + 24 | 0;
 i26 = i42 + 20 | 0;
 i27 = i42 + 16 | 0;
 i28 = i42 + 12 | 0;
 i29 = i42 + 8 | 0;
 i30 = i42 + 4 | 0;
 i31 = i42;
 HEAP32[i39 >> 2] = 0;
 __ZNKSt3__28ios_base6getlocEv(i2, i38);
 i32 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58792) | 0;
 __ZNSt3__26localeD2Ev(i2);
 do switch (i41 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[i33 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i33 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i35, i40 + 24 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[i34 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i34 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i35, i40 + 16 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 99:
  {
   i34 = i35 + 8 | 0;
   i34 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i34 >> 2] | 0) + 12 >> 2] & 127](i34) | 0;
   HEAP32[i3 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i4 >> 2] = HEAP32[i37 >> 2];
   i43 = HEAP8[i34 + 11 >> 0] | 0;
   i37 = i43 << 24 >> 24 < 0;
   i41 = i37 ? HEAP32[i34 >> 2] | 0 : i34;
   i43 = i41 + (i37 ? HEAP32[i34 + 4 >> 2] | 0 : i43 & 255) | 0;
   HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
   i43 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i35, i1, i2, i38, i39, i40, i41, i43) | 0;
   HEAP32[i36 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[i5 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE(i35, i40 + 12 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 68:
  {
   HEAP32[i6 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i7 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
   i43 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i35, i1, i2, i38, i39, i40, 48350, 48358) | 0;
   HEAP32[i36 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 70:
  {
   HEAP32[i8 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i9 >> 2];
   i43 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i35, i1, i2, i38, i39, i40, 48358, 48366) | 0;
   HEAP32[i36 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 72:
  {
   HEAP32[i10 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i35, i40 + 8 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 73:
  {
   HEAP32[i11 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i11 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i35, i40 + 8 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 106:
  {
   HEAP32[i12 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i12 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE(i35, i40 + 28 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 109:
  {
   HEAP32[i13 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i13 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE(i35, i40 + 16 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 77:
  {
   HEAP32[i14 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i14 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE(i35, i40 + 4 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[i15 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i15 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE(i35, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 112:
  {
   HEAP32[i16 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i16 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE(i35, i40 + 8 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 114:
  {
   HEAP32[i17 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i18 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i17 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i18 >> 2];
   i43 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i35, i1, i2, i38, i39, i40, 48366, 48377) | 0;
   HEAP32[i36 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 82:
  {
   HEAP32[i19 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i20 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i19 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i20 >> 2];
   i43 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i35, i1, i2, i38, i39, i40, 48377, 48382) | 0;
   HEAP32[i36 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 83:
  {
   HEAP32[i21 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i21 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE(i35, i40, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 84:
  {
   HEAP32[i22 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i23 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i22 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i23 >> 2];
   i43 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i35, i1, i2, i38, i39, i40, 48382, 48390) | 0;
   HEAP32[i36 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 119:
  {
   HEAP32[i24 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i24 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE(i35, i40 + 24 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 120:
  {
   i41 = HEAP32[(HEAP32[i35 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[i25 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i26 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i25 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i26 >> 2];
   i1 = FUNCTION_TABLE_iiiiiii[i41 & 63](i35, i1, i2, i38, i39, i40) | 0;
   break;
  }
 case 88:
  {
   i34 = i35 + 8 | 0;
   i34 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i34 >> 2] | 0) + 24 >> 2] & 127](i34) | 0;
   HEAP32[i27 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i28 >> 2] = HEAP32[i37 >> 2];
   i43 = HEAP8[i34 + 11 >> 0] | 0;
   i37 = i43 << 24 >> 24 < 0;
   i41 = i37 ? HEAP32[i34 >> 2] | 0 : i34;
   i43 = i41 + (i37 ? HEAP32[i34 + 4 >> 2] | 0 : i43 & 255) | 0;
   HEAP32[i1 >> 2] = HEAP32[i27 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i28 >> 2];
   i43 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i35, i1, i2, i38, i39, i40, i41, i43) | 0;
   HEAP32[i36 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 121:
  {
   HEAP32[i29 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i29 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i35, i40 + 20 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 89:
  {
   HEAP32[i30 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i30 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE(i35, i40 + 20 | 0, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 case 37:
  {
   HEAP32[i31 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i31 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE(i35, i36, i2, i39, i32);
   i43 = 26;
   break;
  }
 default:
  {
   HEAP32[i39 >> 2] = HEAP32[i39 >> 2] | 4;
   i43 = 26;
  }
 } while (0);
 if ((i43 | 0) == 26) i1 = HEAP32[i36 >> 2] | 0;
 STACKTOP = i42;
 return i1 | 0;
}

function _arLabelingSubDWZ(i5, i17, i18, i6, i19) {
 i5 = i5 | 0;
 i17 = i17 | 0;
 i18 = i18 | 0;
 i6 = i6 | 0;
 i19 = i19 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i20 = 0, d21 = 0.0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i16 = i20;
 i7 = HEAP32[i19 >> 2] | 0;
 i15 = i18 + -1 | 0;
 i1 = i7;
 i2 = 0;
 i3 = i7 + ((Math_imul(i15, i17) | 0) << 1) | 0;
 while (1) {
  if ((i2 | 0) >= (i17 | 0)) break;
  HEAP16[i3 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + 2 | 0;
  i2 = i2 + 1 | 0;
  i3 = i3 + 2 | 0;
 }
 i14 = i17 + -1 | 0;
 i1 = i7;
 i2 = 0;
 i3 = i7 + (i14 << 1) | 0;
 while (1) {
  if ((i2 | 0) >= (i18 | 0)) break;
  HEAP16[i3 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + (i17 << 1) | 0;
  i2 = i2 + 1 | 0;
  i3 = i3 + (i17 << 1) | 0;
 }
 i4 = i19 + 1179664 | 0;
 i3 = i17 + 1 | 0;
 i13 = 0 - i17 | 0;
 i5 = i5 + i3 | 0;
 i2 = i6 + i3 | 0;
 i12 = 1;
 i8 = 0;
 i3 = i7 + (i3 << 1) | 0;
 L9 : while (1) {
  if ((i12 | 0) >= (i15 | 0)) {
   i2 = 59;
   break;
  }
  i10 = i2;
  i1 = i8;
  i9 = 1;
  i11 = i3;
  while (1) {
   if ((i9 | 0) >= (i14 | 0)) break;
   do if ((HEAPU8[i5 >> 0] | 0) > (HEAPU8[i10 >> 0] | 0)) {
    i3 = i11 + (i13 << 1) | 0;
    i2 = HEAP16[i3 >> 1] | 0;
    if (i2 << 16 >> 16 > 0) {
     HEAP16[i11 >> 1] = i2;
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i19 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i19 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i19 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i12;
     HEAP32[i19 + 1310736 + (i8 + -1 << 2) >> 2] = i12;
     break;
    }
    i7 = HEAP16[i3 + 2 >> 1] | 0;
    i8 = i7 << 16 >> 16;
    i2 = HEAP16[i3 + -2 >> 1] | 0;
    i6 = i2 << 16 >> 16;
    i3 = i2 << 16 >> 16 > 0;
    if (i7 << 16 >> 16 <= 0) {
     if (i3) {
      HEAP16[i11 >> 1] = i2;
      i2 = i6 * 7 | 0;
      i3 = i19 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
      i3 = i19 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
      i3 = i19 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i12;
      i3 = i19 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i3 >> 2] | 0) < (i9 | 0)) HEAP32[i3 >> 2] = i9;
      HEAP32[i19 + 1310736 + (i2 + -1 << 2) >> 2] = i12;
      break;
     }
     i2 = HEAP16[i11 + -2 >> 1] | 0;
     if (i2 << 16 >> 16 > 0) {
      HEAP16[i11 >> 1] = i2;
      i2 = (i2 << 16 >> 16) * 7 | 0;
      i8 = i19 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
      i8 = i19 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i9;
      i8 = i19 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i12;
      i2 = i19 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i2 >> 2] | 0) >= (i9 | 0)) break;
      HEAP32[i2 >> 2] = i9;
      break;
     } else {
      i2 = i1 + 1 | 0;
      if ((i1 | 0) > 32767) {
       i2 = 54;
       break L9;
      }
      HEAP16[i11 >> 1] = i2;
      HEAP32[i19 + 1179664 + (i1 << 2) >> 2] = i2 << 16 >> 16;
      i1 = i1 * 7 | 0;
      HEAP32[i19 + 1310736 + (i1 << 2) >> 2] = 1;
      HEAP32[i19 + 1310736 + (i1 + 1 << 2) >> 2] = i9;
      HEAP32[i19 + 1310736 + (i1 + 2 << 2) >> 2] = i12;
      HEAP32[i19 + 1310736 + (i1 + 3 << 2) >> 2] = i9;
      HEAP32[i19 + 1310736 + (i1 + 4 << 2) >> 2] = i9;
      HEAP32[i19 + 1310736 + (i1 + 5 << 2) >> 2] = i12;
      HEAP32[i19 + 1310736 + (i1 + 6 << 2) >> 2] = i12;
      i1 = i2;
      break;
     }
    }
    if (i3) {
     i2 = HEAP32[i19 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
     i7 = HEAP32[i19 + 1179664 + (i6 + -1 << 2) >> 2] | 0;
     L36 : do if ((i2 | 0) <= (i7 | 0)) {
      HEAP16[i11 >> 1] = i2;
      if ((i2 | 0) < (i7 | 0)) {
       i3 = i4;
       i6 = 0;
       while (1) {
        if ((i6 | 0) >= (i1 | 0)) break L36;
        if ((HEAP32[i3 >> 2] | 0) == (i7 | 0)) HEAP32[i3 >> 2] = i2;
        i3 = i3 + 4 | 0;
        i6 = i6 + 1 | 0;
       }
      }
     } else {
      HEAP16[i11 >> 1] = i7;
      i3 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) {
        i2 = i7;
        break L36;
       }
       if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i7;
       i3 = i3 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     } while (0);
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i19 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i19 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i19 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i12;
     HEAP32[i19 + 1310736 + (i8 + -1 << 2) >> 2] = i12;
     break;
    }
    i3 = HEAP16[i11 + -2 >> 1] | 0;
    if (i3 << 16 >> 16 <= 0) {
     HEAP16[i11 >> 1] = i7;
     i2 = i8 * 7 | 0;
     i3 = i19 + 1310736 + (i2 + -7 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
     i3 = i19 + 1310736 + (i2 + -6 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
     i3 = i19 + 1310736 + (i2 + -5 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i12;
     i3 = i19 + 1310736 + (i2 + -4 << 2) | 0;
     if ((HEAP32[i3 >> 2] | 0) > (i9 | 0)) HEAP32[i3 >> 2] = i9;
     HEAP32[i19 + 1310736 + (i2 + -1 << 2) >> 2] = i12;
     break;
    }
    i2 = HEAP32[i19 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
    i7 = HEAP32[i19 + 1179664 + ((i3 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if ((i2 | 0) <= (i7 | 0)) {
     HEAP16[i11 >> 1] = i2;
     if ((i2 | 0) < (i7 | 0)) {
      i3 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) break L60;
       if ((HEAP32[i3 >> 2] | 0) == (i7 | 0)) HEAP32[i3 >> 2] = i2;
       i3 = i3 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     }
    } else {
     HEAP16[i11 >> 1] = i7;
     i3 = i4;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i1 | 0)) {
       i2 = i7;
       break L60;
      }
      if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i7;
      i3 = i3 + 4 | 0;
      i6 = i6 + 1 | 0;
     }
    } while (0);
    i8 = (i2 << 16 >> 16) * 7 | 0;
    i7 = i19 + 1310736 + (i8 + -7 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
    i7 = i19 + 1310736 + (i8 + -6 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
    i8 = i19 + 1310736 + (i8 + -5 << 2) | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i12;
   } else HEAP16[i11 >> 1] = 0; while (0);
   i5 = i5 + 1 | 0;
   i10 = i10 + 1 | 0;
   i9 = i9 + 1 | 0;
   i11 = i11 + 2 | 0;
  }
  i5 = i5 + 2 | 0;
  i2 = i10 + 2 | 0;
  i12 = i12 + 1 | 0;
  i8 = i1;
  i3 = i11 + 4 | 0;
 }
 L80 : do if ((i2 | 0) == 54) {
  _arLog(0, 3, 17520, i16);
  i1 = -1;
 } else if ((i2 | 0) == 59) {
  i6 = i19 + 12 | 0;
  i1 = 1;
  i5 = 1;
  while (1) {
   if ((i5 | 0) > (i8 | 0)) break;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (i5 | 0)) i3 = i1 + 1 | 0; else {
    i3 = i1;
    i1 = HEAP32[i19 + 1179664 + (i2 + -1 << 2) >> 2] | 0;
   }
   HEAP32[i4 >> 2] = i1;
   i1 = i3;
   i5 = i5 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  i7 = i19 + 8 | 0;
  i2 = i1 + -1 | 0;
  HEAP32[i7 >> 2] = i2;
  if (!i2) i1 = 0; else {
   _memset(i6 | 0, 0, i2 << 2 | 0) | 0;
   _memset(i19 + 655376 | 0, 0, i2 << 4 | 0) | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break;
    i16 = i1 << 2;
    HEAP32[i19 + 131084 + (i16 << 2) >> 2] = i17;
    HEAP32[i19 + 131084 + ((i16 | 1) << 2) >> 2] = 0;
    HEAP32[i19 + 131084 + ((i16 | 2) << 2) >> 2] = i18;
    HEAP32[i19 + 131084 + ((i16 | 3) << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i5 = 0;
   while (1) {
    if ((i5 | 0) >= (i8 | 0)) break;
    i3 = (HEAP32[i19 + 1179664 + (i5 << 2) >> 2] | 0) + -1 | 0;
    i4 = i5 * 7 | 0;
    i1 = i19 + 12 + (i3 << 2) | 0;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + (HEAP32[i19 + 1310736 + (i4 << 2) >> 2] | 0);
    i1 = i3 << 1;
    i2 = i19 + 655376 + (i1 << 3) | 0;
    HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] + +(HEAP32[i19 + 1310736 + (i4 + 1 << 2) >> 2] | 0);
    i1 = i19 + 655376 + ((i1 | 1) << 3) | 0;
    HEAPF64[i1 >> 3] = +HEAPF64[i1 >> 3] + +(HEAP32[i19 + 1310736 + (i4 + 2 << 2) >> 2] | 0);
    i3 = i3 << 2;
    i1 = i19 + 131084 + (i3 << 2) | 0;
    i2 = HEAP32[i19 + 1310736 + (i4 + 3 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i19 + 131084 + ((i3 | 1) << 2) | 0;
    i2 = HEAP32[i19 + 1310736 + (i4 + 4 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) < (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i19 + 131084 + ((i3 | 2) << 2) | 0;
    i2 = HEAP32[i19 + 1310736 + (i4 + 5 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i2 = i19 + 131084 + ((i3 | 3) << 2) | 0;
    i1 = HEAP32[i19 + 1310736 + (i4 + 6 << 2) >> 2] | 0;
    if ((HEAP32[i2 >> 2] | 0) < (i1 | 0)) HEAP32[i2 >> 2] = i1;
    i5 = i5 + 1 | 0;
   }
   i2 = HEAP32[i7 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) {
     i1 = 0;
     break L80;
    }
    d21 = +(HEAP32[i19 + 12 + (i1 << 2) >> 2] | 0);
    i18 = i1 << 1;
    i17 = i19 + 655376 + (i18 << 3) | 0;
    HEAPF64[i17 >> 3] = +HEAPF64[i17 >> 3] / d21;
    i18 = i19 + 655376 + ((i18 | 1) << 3) | 0;
    HEAPF64[i18 >> 3] = +HEAPF64[i18 >> 3] / d21;
    i1 = i1 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i20;
 return i1 | 0;
}

function _arLabelingSubDBZ(i5, i17, i18, i6, i19) {
 i5 = i5 | 0;
 i17 = i17 | 0;
 i18 = i18 | 0;
 i6 = i6 | 0;
 i19 = i19 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i20 = 0, d21 = 0.0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i16 = i20;
 i7 = HEAP32[i19 >> 2] | 0;
 i15 = i18 + -1 | 0;
 i1 = i7;
 i2 = 0;
 i3 = i7 + ((Math_imul(i15, i17) | 0) << 1) | 0;
 while (1) {
  if ((i2 | 0) >= (i17 | 0)) break;
  HEAP16[i3 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + 2 | 0;
  i2 = i2 + 1 | 0;
  i3 = i3 + 2 | 0;
 }
 i14 = i17 + -1 | 0;
 i1 = i7;
 i2 = 0;
 i3 = i7 + (i14 << 1) | 0;
 while (1) {
  if ((i2 | 0) >= (i18 | 0)) break;
  HEAP16[i3 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + (i17 << 1) | 0;
  i2 = i2 + 1 | 0;
  i3 = i3 + (i17 << 1) | 0;
 }
 i4 = i19 + 1179664 | 0;
 i3 = i17 + 1 | 0;
 i13 = 0 - i17 | 0;
 i5 = i5 + i3 | 0;
 i2 = i6 + i3 | 0;
 i12 = 1;
 i8 = 0;
 i3 = i7 + (i3 << 1) | 0;
 L9 : while (1) {
  if ((i12 | 0) >= (i15 | 0)) {
   i2 = 59;
   break;
  }
  i10 = i2;
  i1 = i8;
  i9 = 1;
  i11 = i3;
  while (1) {
   if ((i9 | 0) >= (i14 | 0)) break;
   do if ((HEAPU8[i5 >> 0] | 0) > (HEAPU8[i10 >> 0] | 0)) HEAP16[i11 >> 1] = 0; else {
    i3 = i11 + (i13 << 1) | 0;
    i2 = HEAP16[i3 >> 1] | 0;
    if (i2 << 16 >> 16 > 0) {
     HEAP16[i11 >> 1] = i2;
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i19 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i19 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i19 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i12;
     HEAP32[i19 + 1310736 + (i8 + -1 << 2) >> 2] = i12;
     break;
    }
    i7 = HEAP16[i3 + 2 >> 1] | 0;
    i8 = i7 << 16 >> 16;
    i2 = HEAP16[i3 + -2 >> 1] | 0;
    i6 = i2 << 16 >> 16;
    i3 = i2 << 16 >> 16 > 0;
    if (i7 << 16 >> 16 <= 0) {
     if (i3) {
      HEAP16[i11 >> 1] = i2;
      i2 = i6 * 7 | 0;
      i3 = i19 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
      i3 = i19 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
      i3 = i19 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i12;
      i3 = i19 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i3 >> 2] | 0) < (i9 | 0)) HEAP32[i3 >> 2] = i9;
      HEAP32[i19 + 1310736 + (i2 + -1 << 2) >> 2] = i12;
      break;
     }
     i2 = HEAP16[i11 + -2 >> 1] | 0;
     if (i2 << 16 >> 16 > 0) {
      HEAP16[i11 >> 1] = i2;
      i2 = (i2 << 16 >> 16) * 7 | 0;
      i8 = i19 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
      i8 = i19 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i9;
      i8 = i19 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i12;
      i2 = i19 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i2 >> 2] | 0) >= (i9 | 0)) break;
      HEAP32[i2 >> 2] = i9;
      break;
     } else {
      i2 = i1 + 1 | 0;
      if ((i1 | 0) > 32767) {
       i2 = 54;
       break L9;
      }
      HEAP16[i11 >> 1] = i2;
      HEAP32[i19 + 1179664 + (i1 << 2) >> 2] = i2 << 16 >> 16;
      i1 = i1 * 7 | 0;
      HEAP32[i19 + 1310736 + (i1 << 2) >> 2] = 1;
      HEAP32[i19 + 1310736 + (i1 + 1 << 2) >> 2] = i9;
      HEAP32[i19 + 1310736 + (i1 + 2 << 2) >> 2] = i12;
      HEAP32[i19 + 1310736 + (i1 + 3 << 2) >> 2] = i9;
      HEAP32[i19 + 1310736 + (i1 + 4 << 2) >> 2] = i9;
      HEAP32[i19 + 1310736 + (i1 + 5 << 2) >> 2] = i12;
      HEAP32[i19 + 1310736 + (i1 + 6 << 2) >> 2] = i12;
      i1 = i2;
      break;
     }
    }
    if (i3) {
     i2 = HEAP32[i19 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
     i7 = HEAP32[i19 + 1179664 + (i6 + -1 << 2) >> 2] | 0;
     L37 : do if ((i2 | 0) <= (i7 | 0)) {
      HEAP16[i11 >> 1] = i2;
      if ((i2 | 0) < (i7 | 0)) {
       i3 = i4;
       i6 = 0;
       while (1) {
        if ((i6 | 0) >= (i1 | 0)) break L37;
        if ((HEAP32[i3 >> 2] | 0) == (i7 | 0)) HEAP32[i3 >> 2] = i2;
        i3 = i3 + 4 | 0;
        i6 = i6 + 1 | 0;
       }
      }
     } else {
      HEAP16[i11 >> 1] = i7;
      i3 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) {
        i2 = i7;
        break L37;
       }
       if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i7;
       i3 = i3 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     } while (0);
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i19 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i19 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i19 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i12;
     HEAP32[i19 + 1310736 + (i8 + -1 << 2) >> 2] = i12;
     break;
    }
    i3 = HEAP16[i11 + -2 >> 1] | 0;
    if (i3 << 16 >> 16 <= 0) {
     HEAP16[i11 >> 1] = i7;
     i2 = i8 * 7 | 0;
     i3 = i19 + 1310736 + (i2 + -7 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
     i3 = i19 + 1310736 + (i2 + -6 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i9;
     i3 = i19 + 1310736 + (i2 + -5 << 2) | 0;
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i12;
     i3 = i19 + 1310736 + (i2 + -4 << 2) | 0;
     if ((HEAP32[i3 >> 2] | 0) > (i9 | 0)) HEAP32[i3 >> 2] = i9;
     HEAP32[i19 + 1310736 + (i2 + -1 << 2) >> 2] = i12;
     break;
    }
    i2 = HEAP32[i19 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
    i7 = HEAP32[i19 + 1179664 + ((i3 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if ((i2 | 0) <= (i7 | 0)) {
     HEAP16[i11 >> 1] = i2;
     if ((i2 | 0) < (i7 | 0)) {
      i3 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) break L61;
       if ((HEAP32[i3 >> 2] | 0) == (i7 | 0)) HEAP32[i3 >> 2] = i2;
       i3 = i3 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     }
    } else {
     HEAP16[i11 >> 1] = i7;
     i3 = i4;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i1 | 0)) {
       i2 = i7;
       break L61;
      }
      if ((HEAP32[i3 >> 2] | 0) == (i2 | 0)) HEAP32[i3 >> 2] = i7;
      i3 = i3 + 4 | 0;
      i6 = i6 + 1 | 0;
     }
    } while (0);
    i8 = (i2 << 16 >> 16) * 7 | 0;
    i7 = i19 + 1310736 + (i8 + -7 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
    i7 = i19 + 1310736 + (i8 + -6 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
    i8 = i19 + 1310736 + (i8 + -5 << 2) | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i12;
   } while (0);
   i5 = i5 + 1 | 0;
   i10 = i10 + 1 | 0;
   i9 = i9 + 1 | 0;
   i11 = i11 + 2 | 0;
  }
  i5 = i5 + 2 | 0;
  i2 = i10 + 2 | 0;
  i12 = i12 + 1 | 0;
  i8 = i1;
  i3 = i11 + 4 | 0;
 }
 L80 : do if ((i2 | 0) == 54) {
  _arLog(0, 3, 17520, i16);
  i1 = -1;
 } else if ((i2 | 0) == 59) {
  i6 = i19 + 12 | 0;
  i1 = 1;
  i5 = 1;
  while (1) {
   if ((i5 | 0) > (i8 | 0)) break;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (i5 | 0)) i3 = i1 + 1 | 0; else {
    i3 = i1;
    i1 = HEAP32[i19 + 1179664 + (i2 + -1 << 2) >> 2] | 0;
   }
   HEAP32[i4 >> 2] = i1;
   i1 = i3;
   i5 = i5 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  i7 = i19 + 8 | 0;
  i2 = i1 + -1 | 0;
  HEAP32[i7 >> 2] = i2;
  if (!i2) i1 = 0; else {
   _memset(i6 | 0, 0, i2 << 2 | 0) | 0;
   _memset(i19 + 655376 | 0, 0, i2 << 4 | 0) | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break;
    i16 = i1 << 2;
    HEAP32[i19 + 131084 + (i16 << 2) >> 2] = i17;
    HEAP32[i19 + 131084 + ((i16 | 1) << 2) >> 2] = 0;
    HEAP32[i19 + 131084 + ((i16 | 2) << 2) >> 2] = i18;
    HEAP32[i19 + 131084 + ((i16 | 3) << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i5 = 0;
   while (1) {
    if ((i5 | 0) >= (i8 | 0)) break;
    i3 = (HEAP32[i19 + 1179664 + (i5 << 2) >> 2] | 0) + -1 | 0;
    i4 = i5 * 7 | 0;
    i1 = i19 + 12 + (i3 << 2) | 0;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + (HEAP32[i19 + 1310736 + (i4 << 2) >> 2] | 0);
    i1 = i3 << 1;
    i2 = i19 + 655376 + (i1 << 3) | 0;
    HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] + +(HEAP32[i19 + 1310736 + (i4 + 1 << 2) >> 2] | 0);
    i1 = i19 + 655376 + ((i1 | 1) << 3) | 0;
    HEAPF64[i1 >> 3] = +HEAPF64[i1 >> 3] + +(HEAP32[i19 + 1310736 + (i4 + 2 << 2) >> 2] | 0);
    i3 = i3 << 2;
    i1 = i19 + 131084 + (i3 << 2) | 0;
    i2 = HEAP32[i19 + 1310736 + (i4 + 3 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i19 + 131084 + ((i3 | 1) << 2) | 0;
    i2 = HEAP32[i19 + 1310736 + (i4 + 4 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) < (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i19 + 131084 + ((i3 | 2) << 2) | 0;
    i2 = HEAP32[i19 + 1310736 + (i4 + 5 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i2 = i19 + 131084 + ((i3 | 3) << 2) | 0;
    i1 = HEAP32[i19 + 1310736 + (i4 + 6 << 2) >> 2] | 0;
    if ((HEAP32[i2 >> 2] | 0) < (i1 | 0)) HEAP32[i2 >> 2] = i1;
    i5 = i5 + 1 | 0;
   }
   i2 = HEAP32[i7 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) {
     i1 = 0;
     break L80;
    }
    d21 = +(HEAP32[i19 + 12 + (i1 << 2) >> 2] | 0);
    i18 = i1 << 1;
    i17 = i19 + 655376 + (i18 << 3) | 0;
    HEAPF64[i17 >> 3] = +HEAPF64[i17 >> 3] / d21;
    i18 = i19 + 655376 + ((i18 | 1) << 3) | 0;
    HEAPF64[i18 >> 3] = +HEAPF64[i18 >> 3] / d21;
    i1 = i1 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i20;
 return i1 | 0;
}

function _arLabelingSubDWIC(i5, i15, i1, i16, i20) {
 i5 = i5 | 0;
 i15 = i15 | 0;
 i1 = i1 | 0;
 i16 = i16 | 0;
 i20 = i20 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i17 = 0, i18 = 0, i19 = 0, i21 = 0, d22 = 0.0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i17 = i21;
 i19 = (i15 | 0) / 2 | 0;
 i18 = (i1 | 0) / 2 | 0;
 i6 = HEAP32[i20 >> 2] | 0;
 i14 = i18 + -1 | 0;
 i1 = i6;
 i2 = i6 + ((Math_imul(i14, i19) | 0) << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i19 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + 2 | 0;
  i2 = i2 + 2 | 0;
  i3 = i3 + 1 | 0;
 }
 i13 = i19 + -1 | 0;
 i1 = i6;
 i2 = i6 + (i13 << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i18 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + (i19 << 1) | 0;
  i2 = i2 + (i19 << 1) | 0;
  i3 = i3 + 1 | 0;
 }
 i4 = i20 + 1179664 | 0;
 i12 = 0 - i19 | 0;
 i2 = i5 + ((i15 << 1) + 2) | 0;
 i11 = 1;
 i8 = 0;
 i3 = i6 + (i19 + 1 << 1) | 0;
 L9 : while (1) {
  if ((i11 | 0) >= (i14 | 0)) {
   i2 = 59;
   break;
  }
  i10 = i2;
  i1 = i8;
  i9 = 1;
  while (1) {
   if ((i9 | 0) >= (i13 | 0)) break;
   do if ((HEAPU8[i10 >> 0] | 0 | 0) > (i16 | 0)) {
    i5 = i3 + (i12 << 1) | 0;
    i2 = HEAP16[i5 >> 1] | 0;
    if (i2 << 16 >> 16 > 0) {
     HEAP16[i3 >> 1] = i2;
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i20 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i20 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i20 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i11;
     HEAP32[i20 + 1310736 + (i8 + -1 << 2) >> 2] = i11;
     break;
    }
    i7 = HEAP16[i5 + 2 >> 1] | 0;
    i8 = i7 << 16 >> 16;
    i2 = HEAP16[i5 + -2 >> 1] | 0;
    i6 = i2 << 16 >> 16;
    i5 = i2 << 16 >> 16 > 0;
    if (i7 << 16 >> 16 <= 0) {
     if (i5) {
      HEAP16[i3 >> 1] = i2;
      i2 = i6 * 7 | 0;
      i5 = i20 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
      i5 = i20 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i9;
      i5 = i20 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i11;
      i5 = i20 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i5 >> 2] | 0) < (i9 | 0)) HEAP32[i5 >> 2] = i9;
      HEAP32[i20 + 1310736 + (i2 + -1 << 2) >> 2] = i11;
      break;
     }
     i2 = HEAP16[i3 + -2 >> 1] | 0;
     if (i2 << 16 >> 16 > 0) {
      HEAP16[i3 >> 1] = i2;
      i2 = (i2 << 16 >> 16) * 7 | 0;
      i8 = i20 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
      i8 = i20 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i9;
      i8 = i20 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i11;
      i2 = i20 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i2 >> 2] | 0) >= (i9 | 0)) break;
      HEAP32[i2 >> 2] = i9;
      break;
     } else {
      i2 = i1 + 1 | 0;
      if ((i1 | 0) > 32767) {
       i2 = 54;
       break L9;
      }
      HEAP16[i3 >> 1] = i2;
      HEAP32[i20 + 1179664 + (i1 << 2) >> 2] = i2 << 16 >> 16;
      i1 = i1 * 7 | 0;
      HEAP32[i20 + 1310736 + (i1 << 2) >> 2] = 1;
      HEAP32[i20 + 1310736 + (i1 + 1 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 2 << 2) >> 2] = i11;
      HEAP32[i20 + 1310736 + (i1 + 3 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 4 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 5 << 2) >> 2] = i11;
      HEAP32[i20 + 1310736 + (i1 + 6 << 2) >> 2] = i11;
      i1 = i2;
      break;
     }
    }
    if (i5) {
     i2 = HEAP32[i20 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
     i7 = HEAP32[i20 + 1179664 + (i6 + -1 << 2) >> 2] | 0;
     L36 : do if ((i2 | 0) <= (i7 | 0)) {
      HEAP16[i3 >> 1] = i2;
      if ((i2 | 0) < (i7 | 0)) {
       i5 = i4;
       i6 = 0;
       while (1) {
        if ((i6 | 0) >= (i1 | 0)) break L36;
        if ((HEAP32[i5 >> 2] | 0) == (i7 | 0)) HEAP32[i5 >> 2] = i2;
        i5 = i5 + 4 | 0;
        i6 = i6 + 1 | 0;
       }
      }
     } else {
      HEAP16[i3 >> 1] = i7;
      i5 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) {
        i2 = i7;
        break L36;
       }
       if ((HEAP32[i5 >> 2] | 0) == (i2 | 0)) HEAP32[i5 >> 2] = i7;
       i5 = i5 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     } while (0);
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i20 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i20 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i20 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i11;
     HEAP32[i20 + 1310736 + (i8 + -1 << 2) >> 2] = i11;
     break;
    }
    i5 = HEAP16[i3 + -2 >> 1] | 0;
    if (i5 << 16 >> 16 <= 0) {
     HEAP16[i3 >> 1] = i7;
     i2 = i8 * 7 | 0;
     i5 = i20 + 1310736 + (i2 + -7 << 2) | 0;
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
     i5 = i20 + 1310736 + (i2 + -6 << 2) | 0;
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i9;
     i5 = i20 + 1310736 + (i2 + -5 << 2) | 0;
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i11;
     i5 = i20 + 1310736 + (i2 + -4 << 2) | 0;
     if ((HEAP32[i5 >> 2] | 0) > (i9 | 0)) HEAP32[i5 >> 2] = i9;
     HEAP32[i20 + 1310736 + (i2 + -1 << 2) >> 2] = i11;
     break;
    }
    i2 = HEAP32[i20 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
    i7 = HEAP32[i20 + 1179664 + ((i5 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if ((i2 | 0) <= (i7 | 0)) {
     HEAP16[i3 >> 1] = i2;
     if ((i2 | 0) < (i7 | 0)) {
      i5 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) break L60;
       if ((HEAP32[i5 >> 2] | 0) == (i7 | 0)) HEAP32[i5 >> 2] = i2;
       i5 = i5 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     }
    } else {
     HEAP16[i3 >> 1] = i7;
     i5 = i4;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i1 | 0)) {
       i2 = i7;
       break L60;
      }
      if ((HEAP32[i5 >> 2] | 0) == (i2 | 0)) HEAP32[i5 >> 2] = i7;
      i5 = i5 + 4 | 0;
      i6 = i6 + 1 | 0;
     }
    } while (0);
    i8 = (i2 << 16 >> 16) * 7 | 0;
    i7 = i20 + 1310736 + (i8 + -7 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
    i7 = i20 + 1310736 + (i8 + -6 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
    i8 = i20 + 1310736 + (i8 + -5 << 2) | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i11;
   } else HEAP16[i3 >> 1] = 0; while (0);
   i10 = i10 + 2 | 0;
   i9 = i9 + 1 | 0;
   i3 = i3 + 2 | 0;
  }
  i2 = i10 + i15 + 4 | 0;
  i11 = i11 + 1 | 0;
  i8 = i1;
  i3 = i3 + 4 | 0;
 }
 L80 : do if ((i2 | 0) == 54) {
  _arLog(0, 3, 17520, i17);
  i1 = -1;
 } else if ((i2 | 0) == 59) {
  i6 = i20 + 12 | 0;
  i1 = 1;
  i5 = 1;
  while (1) {
   if ((i5 | 0) > (i8 | 0)) break;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (i5 | 0)) i3 = i1 + 1 | 0; else {
    i3 = i1;
    i1 = HEAP32[i20 + 1179664 + (i2 + -1 << 2) >> 2] | 0;
   }
   HEAP32[i4 >> 2] = i1;
   i1 = i3;
   i5 = i5 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  i7 = i20 + 8 | 0;
  i2 = i1 + -1 | 0;
  HEAP32[i7 >> 2] = i2;
  if (!i2) i1 = 0; else {
   _memset(i6 | 0, 0, i2 << 2 | 0) | 0;
   _memset(i20 + 655376 | 0, 0, i2 << 4 | 0) | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break;
    i17 = i1 << 2;
    HEAP32[i20 + 131084 + (i17 << 2) >> 2] = i19;
    HEAP32[i20 + 131084 + ((i17 | 1) << 2) >> 2] = 0;
    HEAP32[i20 + 131084 + ((i17 | 2) << 2) >> 2] = i18;
    HEAP32[i20 + 131084 + ((i17 | 3) << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i5 = 0;
   while (1) {
    if ((i5 | 0) >= (i8 | 0)) break;
    i3 = (HEAP32[i20 + 1179664 + (i5 << 2) >> 2] | 0) + -1 | 0;
    i4 = i5 * 7 | 0;
    i1 = i20 + 12 + (i3 << 2) | 0;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + (HEAP32[i20 + 1310736 + (i4 << 2) >> 2] | 0);
    i1 = i3 << 1;
    i2 = i20 + 655376 + (i1 << 3) | 0;
    HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] + +(HEAP32[i20 + 1310736 + (i4 + 1 << 2) >> 2] | 0);
    i1 = i20 + 655376 + ((i1 | 1) << 3) | 0;
    HEAPF64[i1 >> 3] = +HEAPF64[i1 >> 3] + +(HEAP32[i20 + 1310736 + (i4 + 2 << 2) >> 2] | 0);
    i3 = i3 << 2;
    i1 = i20 + 131084 + (i3 << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 3 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i20 + 131084 + ((i3 | 1) << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 4 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) < (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i20 + 131084 + ((i3 | 2) << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 5 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i2 = i20 + 131084 + ((i3 | 3) << 2) | 0;
    i1 = HEAP32[i20 + 1310736 + (i4 + 6 << 2) >> 2] | 0;
    if ((HEAP32[i2 >> 2] | 0) < (i1 | 0)) HEAP32[i2 >> 2] = i1;
    i5 = i5 + 1 | 0;
   }
   i2 = HEAP32[i7 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) {
     i1 = 0;
     break L80;
    }
    d22 = +(HEAP32[i20 + 12 + (i1 << 2) >> 2] | 0);
    i19 = i1 << 1;
    i18 = i20 + 655376 + (i19 << 3) | 0;
    HEAPF64[i18 >> 3] = +HEAPF64[i18 >> 3] / d22;
    i19 = i20 + 655376 + ((i19 | 1) << 3) | 0;
    HEAPF64[i19 >> 3] = +HEAPF64[i19 >> 3] / d22;
    i1 = i1 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i21;
 return i1 | 0;
}

function _arLabelingSubDBIC(i5, i15, i1, i16, i20) {
 i5 = i5 | 0;
 i15 = i15 | 0;
 i1 = i1 | 0;
 i16 = i16 | 0;
 i20 = i20 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i17 = 0, i18 = 0, i19 = 0, i21 = 0, d22 = 0.0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i17 = i21;
 i19 = (i15 | 0) / 2 | 0;
 i18 = (i1 | 0) / 2 | 0;
 i6 = HEAP32[i20 >> 2] | 0;
 i14 = i18 + -1 | 0;
 i1 = i6;
 i2 = i6 + ((Math_imul(i14, i19) | 0) << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i19 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + 2 | 0;
  i2 = i2 + 2 | 0;
  i3 = i3 + 1 | 0;
 }
 i13 = i19 + -1 | 0;
 i1 = i6;
 i2 = i6 + (i13 << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i18 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + (i19 << 1) | 0;
  i2 = i2 + (i19 << 1) | 0;
  i3 = i3 + 1 | 0;
 }
 i4 = i20 + 1179664 | 0;
 i12 = 0 - i19 | 0;
 i2 = i5 + ((i15 << 1) + 2) | 0;
 i11 = 1;
 i8 = 0;
 i3 = i6 + (i19 + 1 << 1) | 0;
 L9 : while (1) {
  if ((i11 | 0) >= (i14 | 0)) {
   i2 = 59;
   break;
  }
  i10 = i2;
  i1 = i8;
  i9 = 1;
  while (1) {
   if ((i9 | 0) >= (i13 | 0)) break;
   do if ((HEAPU8[i10 >> 0] | 0 | 0) > (i16 | 0)) HEAP16[i3 >> 1] = 0; else {
    i5 = i3 + (i12 << 1) | 0;
    i2 = HEAP16[i5 >> 1] | 0;
    if (i2 << 16 >> 16 > 0) {
     HEAP16[i3 >> 1] = i2;
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i20 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i20 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i20 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i11;
     HEAP32[i20 + 1310736 + (i8 + -1 << 2) >> 2] = i11;
     break;
    }
    i7 = HEAP16[i5 + 2 >> 1] | 0;
    i8 = i7 << 16 >> 16;
    i2 = HEAP16[i5 + -2 >> 1] | 0;
    i6 = i2 << 16 >> 16;
    i5 = i2 << 16 >> 16 > 0;
    if (i7 << 16 >> 16 <= 0) {
     if (i5) {
      HEAP16[i3 >> 1] = i2;
      i2 = i6 * 7 | 0;
      i5 = i20 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
      i5 = i20 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i9;
      i5 = i20 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i11;
      i5 = i20 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i5 >> 2] | 0) < (i9 | 0)) HEAP32[i5 >> 2] = i9;
      HEAP32[i20 + 1310736 + (i2 + -1 << 2) >> 2] = i11;
      break;
     }
     i2 = HEAP16[i3 + -2 >> 1] | 0;
     if (i2 << 16 >> 16 > 0) {
      HEAP16[i3 >> 1] = i2;
      i2 = (i2 << 16 >> 16) * 7 | 0;
      i8 = i20 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
      i8 = i20 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i9;
      i8 = i20 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i11;
      i2 = i20 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i2 >> 2] | 0) >= (i9 | 0)) break;
      HEAP32[i2 >> 2] = i9;
      break;
     } else {
      i2 = i1 + 1 | 0;
      if ((i1 | 0) > 32767) {
       i2 = 54;
       break L9;
      }
      HEAP16[i3 >> 1] = i2;
      HEAP32[i20 + 1179664 + (i1 << 2) >> 2] = i2 << 16 >> 16;
      i1 = i1 * 7 | 0;
      HEAP32[i20 + 1310736 + (i1 << 2) >> 2] = 1;
      HEAP32[i20 + 1310736 + (i1 + 1 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 2 << 2) >> 2] = i11;
      HEAP32[i20 + 1310736 + (i1 + 3 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 4 << 2) >> 2] = i9;
      HEAP32[i20 + 1310736 + (i1 + 5 << 2) >> 2] = i11;
      HEAP32[i20 + 1310736 + (i1 + 6 << 2) >> 2] = i11;
      i1 = i2;
      break;
     }
    }
    if (i5) {
     i2 = HEAP32[i20 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
     i7 = HEAP32[i20 + 1179664 + (i6 + -1 << 2) >> 2] | 0;
     L37 : do if ((i2 | 0) <= (i7 | 0)) {
      HEAP16[i3 >> 1] = i2;
      if ((i2 | 0) < (i7 | 0)) {
       i5 = i4;
       i6 = 0;
       while (1) {
        if ((i6 | 0) >= (i1 | 0)) break L37;
        if ((HEAP32[i5 >> 2] | 0) == (i7 | 0)) HEAP32[i5 >> 2] = i2;
        i5 = i5 + 4 | 0;
        i6 = i6 + 1 | 0;
       }
      }
     } else {
      HEAP16[i3 >> 1] = i7;
      i5 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) {
        i2 = i7;
        break L37;
       }
       if ((HEAP32[i5 >> 2] | 0) == (i2 | 0)) HEAP32[i5 >> 2] = i7;
       i5 = i5 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     } while (0);
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i20 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i20 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i20 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i11;
     HEAP32[i20 + 1310736 + (i8 + -1 << 2) >> 2] = i11;
     break;
    }
    i5 = HEAP16[i3 + -2 >> 1] | 0;
    if (i5 << 16 >> 16 <= 0) {
     HEAP16[i3 >> 1] = i7;
     i2 = i8 * 7 | 0;
     i5 = i20 + 1310736 + (i2 + -7 << 2) | 0;
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
     i5 = i20 + 1310736 + (i2 + -6 << 2) | 0;
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i9;
     i5 = i20 + 1310736 + (i2 + -5 << 2) | 0;
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i11;
     i5 = i20 + 1310736 + (i2 + -4 << 2) | 0;
     if ((HEAP32[i5 >> 2] | 0) > (i9 | 0)) HEAP32[i5 >> 2] = i9;
     HEAP32[i20 + 1310736 + (i2 + -1 << 2) >> 2] = i11;
     break;
    }
    i2 = HEAP32[i20 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
    i7 = HEAP32[i20 + 1179664 + ((i5 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if ((i2 | 0) <= (i7 | 0)) {
     HEAP16[i3 >> 1] = i2;
     if ((i2 | 0) < (i7 | 0)) {
      i5 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) break L61;
       if ((HEAP32[i5 >> 2] | 0) == (i7 | 0)) HEAP32[i5 >> 2] = i2;
       i5 = i5 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     }
    } else {
     HEAP16[i3 >> 1] = i7;
     i5 = i4;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i1 | 0)) {
       i2 = i7;
       break L61;
      }
      if ((HEAP32[i5 >> 2] | 0) == (i2 | 0)) HEAP32[i5 >> 2] = i7;
      i5 = i5 + 4 | 0;
      i6 = i6 + 1 | 0;
     }
    } while (0);
    i8 = (i2 << 16 >> 16) * 7 | 0;
    i7 = i20 + 1310736 + (i8 + -7 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
    i7 = i20 + 1310736 + (i8 + -6 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
    i8 = i20 + 1310736 + (i8 + -5 << 2) | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i11;
   } while (0);
   i10 = i10 + 2 | 0;
   i9 = i9 + 1 | 0;
   i3 = i3 + 2 | 0;
  }
  i2 = i10 + i15 + 4 | 0;
  i11 = i11 + 1 | 0;
  i8 = i1;
  i3 = i3 + 4 | 0;
 }
 L80 : do if ((i2 | 0) == 54) {
  _arLog(0, 3, 17520, i17);
  i1 = -1;
 } else if ((i2 | 0) == 59) {
  i6 = i20 + 12 | 0;
  i1 = 1;
  i5 = 1;
  while (1) {
   if ((i5 | 0) > (i8 | 0)) break;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (i5 | 0)) i3 = i1 + 1 | 0; else {
    i3 = i1;
    i1 = HEAP32[i20 + 1179664 + (i2 + -1 << 2) >> 2] | 0;
   }
   HEAP32[i4 >> 2] = i1;
   i1 = i3;
   i5 = i5 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  i7 = i20 + 8 | 0;
  i2 = i1 + -1 | 0;
  HEAP32[i7 >> 2] = i2;
  if (!i2) i1 = 0; else {
   _memset(i6 | 0, 0, i2 << 2 | 0) | 0;
   _memset(i20 + 655376 | 0, 0, i2 << 4 | 0) | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break;
    i17 = i1 << 2;
    HEAP32[i20 + 131084 + (i17 << 2) >> 2] = i19;
    HEAP32[i20 + 131084 + ((i17 | 1) << 2) >> 2] = 0;
    HEAP32[i20 + 131084 + ((i17 | 2) << 2) >> 2] = i18;
    HEAP32[i20 + 131084 + ((i17 | 3) << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i5 = 0;
   while (1) {
    if ((i5 | 0) >= (i8 | 0)) break;
    i3 = (HEAP32[i20 + 1179664 + (i5 << 2) >> 2] | 0) + -1 | 0;
    i4 = i5 * 7 | 0;
    i1 = i20 + 12 + (i3 << 2) | 0;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + (HEAP32[i20 + 1310736 + (i4 << 2) >> 2] | 0);
    i1 = i3 << 1;
    i2 = i20 + 655376 + (i1 << 3) | 0;
    HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] + +(HEAP32[i20 + 1310736 + (i4 + 1 << 2) >> 2] | 0);
    i1 = i20 + 655376 + ((i1 | 1) << 3) | 0;
    HEAPF64[i1 >> 3] = +HEAPF64[i1 >> 3] + +(HEAP32[i20 + 1310736 + (i4 + 2 << 2) >> 2] | 0);
    i3 = i3 << 2;
    i1 = i20 + 131084 + (i3 << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 3 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i20 + 131084 + ((i3 | 1) << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 4 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) < (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i20 + 131084 + ((i3 | 2) << 2) | 0;
    i2 = HEAP32[i20 + 1310736 + (i4 + 5 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i2 = i20 + 131084 + ((i3 | 3) << 2) | 0;
    i1 = HEAP32[i20 + 1310736 + (i4 + 6 << 2) >> 2] | 0;
    if ((HEAP32[i2 >> 2] | 0) < (i1 | 0)) HEAP32[i2 >> 2] = i1;
    i5 = i5 + 1 | 0;
   }
   i2 = HEAP32[i7 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) {
     i1 = 0;
     break L80;
    }
    d22 = +(HEAP32[i20 + 12 + (i1 << 2) >> 2] | 0);
    i19 = i1 << 1;
    i18 = i20 + 655376 + (i19 << 3) | 0;
    HEAPF64[i18 >> 3] = +HEAPF64[i18 >> 3] / d22;
    i19 = i20 + 655376 + ((i19 | 1) << 3) | 0;
    HEAPF64[i19 >> 3] = +HEAPF64[i19 >> 3] / d22;
    i1 = i1 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i21;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_special_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i5, i12) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i12 = i12 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i6 = i14 + 60 | 0;
 i7 = i14 + 48 | 0;
 i8 = i14 + 36 | 0;
 i9 = i14 + 24 | 0;
 i10 = i14 + 12 | 0;
 i11 = i14;
 L1 : do if ((i5 - i1 | 0) > 2) {
  switch (HEAP8[i1 >> 0] | 0) {
  case 84:
   break;
  case 71:
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 86:
    {
     i11 = i1 + 2 | 0;
     i2 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i11, i5, i12) | 0;
     if ((i2 | 0) == (i11 | 0)) {
      i13 = 60;
      break L1;
     }
     i3 = HEAP32[i12 + 4 >> 2] | 0;
     if ((HEAP32[i12 >> 2] | 0) == (i3 | 0)) break L1;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i3 + -24 | 0, 0, 52356) | 0;
     i1 = i2;
     i13 = 60;
     break L1;
    }
   case 82:
    {
     i11 = i1 + 2 | 0;
     i2 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i11, i5, i12) | 0;
     if ((i2 | 0) == (i11 | 0)) {
      i13 = 60;
      break L1;
     }
     i3 = HEAP32[i12 + 4 >> 2] | 0;
     if ((HEAP32[i12 >> 2] | 0) == (i3 | 0)) break L1;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i3 + -24 | 0, 0, 52376) | 0;
     i1 = i2;
     i13 = 60;
     break L1;
    }
   default:
    {
     i13 = 60;
     break L1;
    }
   }
  default:
   {
    i13 = 60;
    break L1;
   }
  }
  i2 = i1 + 1 | 0;
  switch (HEAP8[i2 >> 0] | 0) {
  case 86:
   {
    i11 = i1 + 2 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i11, i5, i12) | 0;
    if ((i2 | 0) == (i11 | 0)) {
     i13 = 60;
     break L1;
    }
    i3 = HEAP32[i12 + 4 >> 2] | 0;
    if ((HEAP32[i12 >> 2] | 0) == (i3 | 0)) break L1;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i3 + -24 | 0, 0, 52205) | 0;
    i1 = i2;
    i13 = 60;
    break L1;
   }
  case 84:
   {
    i11 = i1 + 2 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i11, i5, i12) | 0;
    if ((i2 | 0) == (i11 | 0)) {
     i13 = 60;
     break L1;
    }
    i3 = HEAP32[i12 + 4 >> 2] | 0;
    if ((HEAP32[i12 >> 2] | 0) == (i3 | 0)) break L1;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i3 + -24 | 0, 0, 52217) | 0;
    i1 = i2;
    i13 = 60;
    break L1;
   }
  case 73:
   {
    i11 = i1 + 2 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i11, i5, i12) | 0;
    if ((i2 | 0) == (i11 | 0)) {
     i13 = 60;
     break L1;
    }
    i3 = HEAP32[i12 + 4 >> 2] | 0;
    if ((HEAP32[i12 >> 2] | 0) == (i3 | 0)) break L1;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i3 + -24 | 0, 0, 52226) | 0;
    i1 = i2;
    i13 = 60;
    break L1;
   }
  case 83:
   {
    i11 = i1 + 2 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i11, i5, i12) | 0;
    if ((i2 | 0) == (i11 | 0)) {
     i13 = 60;
     break L1;
    }
    i3 = HEAP32[i12 + 4 >> 2] | 0;
    if ((HEAP32[i12 >> 2] | 0) == (i3 | 0)) break L1;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i3 + -24 | 0, 0, 52240) | 0;
    i1 = i2;
    i13 = 60;
    break L1;
   }
  case 99:
   {
    i11 = i1 + 2 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_(i11, i5) | 0;
    if ((i2 | 0) == (i11 | 0)) {
     i13 = 60;
     break L1;
    }
    i4 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_(i2, i5) | 0;
    if ((i4 | 0) == (i2 | 0)) {
     i13 = 60;
     break L1;
    }
    i3 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i4, i5, i12) | 0;
    if ((i3 | 0) == (i4 | 0)) {
     i13 = 60;
     break L1;
    }
    i2 = HEAP32[i12 + 4 >> 2] | 0;
    if ((HEAP32[i12 >> 2] | 0) == (i2 | 0)) break L1;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i2 + -24 | 0, 0, 52259) | 0;
    i1 = i3;
    i13 = 60;
    break L1;
   }
  case 67:
   {
    i4 = i1 + 2 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i4, i5, i12) | 0;
    if ((i2 | 0) == (i4 | 0)) {
     i13 = 60;
     break L1;
    }
    i3 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i2, i5) | 0;
    if ((i3 | 0) == (i2 | 0) | (i3 | 0) == (i5 | 0)) {
     i13 = 60;
     break L1;
    }
    if ((HEAP8[i3 >> 0] | 0) != 95) {
     i13 = 60;
     break L1;
    }
    i3 = i3 + 1 | 0;
    i4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i3, i5, i12) | 0;
    if ((i4 | 0) == (i3 | 0)) {
     i13 = 60;
     break L1;
    }
    i3 = i12 + 4 | 0;
    i2 = HEAP32[i3 >> 2] | 0;
    if (((i2 - (HEAP32[i12 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, i2 + -24 | 0);
    i2 = HEAP32[i3 >> 2] | 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == -1) break;
     i13 = i1 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i13 * 24 | 0) | 0);
     i1 = i13;
    }
    HEAP32[i3 >> 2] = i2 + -24;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i7, 0, 52286) | 0;
    HEAP32[i10 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i10 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
    HEAP32[i10 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i7 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 52311) | 0;
    HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
    HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
    HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i10 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i11, (HEAP32[i3 >> 2] | 0) + -24 | 0);
    i1 = HEAP8[i11 + 11 >> 0] | 0;
    i13 = i1 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i9, i13 ? HEAP32[i11 >> 2] | 0 : i11, i13 ? HEAP32[i11 + 4 >> 2] | 0 : i1 & 255) | 0;
    HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
    HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i9 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    i1 = HEAP32[i3 >> 2] | 0;
    i2 = i1 + -24 | 0;
    i3 = i2 + 11 | 0;
    if ((HEAP8[i3 >> 0] | 0) < 0) {
     i13 = HEAP32[i2 >> 2] | 0;
     HEAP8[i6 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc(i13, i6);
     HEAP32[i1 + -20 >> 2] = 0;
    } else {
     HEAP8[i6 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i6);
     HEAP8[i3 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
    HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
    HEAP32[i2 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
    HEAP32[i2 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i8 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
    i1 = i4;
    i13 = 60;
    break L1;
   }
  default:
   {
    i3 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_(i2, i5) | 0;
    do if ((i3 | 0) != (i2 | 0)) {
     i2 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i3, i5, i12) | 0;
     if ((i2 | 0) != (i3 | 0)) {
      i3 = HEAP32[i12 + 4 >> 2] | 0;
      if ((HEAP32[i12 >> 2] | 0) != (i3 | 0)) {
       i3 = i3 + -24 | 0;
       if ((HEAP8[i1 + 2 >> 0] | 0) == 118) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i3, 0, 52316) | 0;
        i3 = 0;
        break;
       } else {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i3, 0, 52334) | 0;
        i3 = 0;
        break;
       }
      } else {
       i3 = 1;
       i2 = i1;
      }
     } else {
      i3 = 0;
      i2 = i1;
     }
    } else {
     i3 = 3;
     i2 = i1;
    } while (0);
    switch (i3 & 3) {
    case 3:
    case 0:
     {
      i1 = i2;
      i13 = 60;
      break L1;
     }
    default:
     {}
    }
    if (!i3) {
     i1 = i2;
     i13 = 60;
     break L1;
    } else break L1;
   }
  }
 } else i13 = 60; while (0);
 STACKTOP = i14;
 return i1 | 0;
}

function _arLabelingSubDWRC(i5, i17, i18, i14, i19) {
 i5 = i5 | 0;
 i17 = i17 | 0;
 i18 = i18 | 0;
 i14 = i14 | 0;
 i19 = i19 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i20 = 0, d21 = 0.0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i16 = i20;
 i6 = HEAP32[i19 >> 2] | 0;
 i15 = i18 + -1 | 0;
 i1 = i6;
 i2 = i6 + ((Math_imul(i15, i17) | 0) << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i17 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + 2 | 0;
  i2 = i2 + 2 | 0;
  i3 = i3 + 1 | 0;
 }
 i13 = i17 + -1 | 0;
 i1 = i6;
 i2 = i6 + (i13 << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i18 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + (i17 << 1) | 0;
  i2 = i2 + (i17 << 1) | 0;
  i3 = i3 + 1 | 0;
 }
 i4 = i19 + 1179664 | 0;
 i3 = i17 + 1 | 0;
 i12 = 0 - i17 | 0;
 i2 = i5 + i3 | 0;
 i11 = 1;
 i8 = 0;
 i3 = i6 + (i3 << 1) | 0;
 L9 : while (1) {
  if ((i11 | 0) >= (i15 | 0)) {
   i2 = 59;
   break;
  }
  i10 = i2;
  i1 = i8;
  i9 = 1;
  while (1) {
   if ((i9 | 0) >= (i13 | 0)) break;
   do if ((HEAPU8[i10 >> 0] | 0 | 0) > (i14 | 0)) {
    i5 = i3 + (i12 << 1) | 0;
    i2 = HEAP16[i5 >> 1] | 0;
    if (i2 << 16 >> 16 > 0) {
     HEAP16[i3 >> 1] = i2;
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i19 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i19 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i19 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i11;
     HEAP32[i19 + 1310736 + (i8 + -1 << 2) >> 2] = i11;
     break;
    }
    i7 = HEAP16[i5 + 2 >> 1] | 0;
    i8 = i7 << 16 >> 16;
    i2 = HEAP16[i5 + -2 >> 1] | 0;
    i6 = i2 << 16 >> 16;
    i5 = i2 << 16 >> 16 > 0;
    if (i7 << 16 >> 16 <= 0) {
     if (i5) {
      HEAP16[i3 >> 1] = i2;
      i2 = i6 * 7 | 0;
      i5 = i19 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
      i5 = i19 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i9;
      i5 = i19 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i11;
      i5 = i19 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i5 >> 2] | 0) < (i9 | 0)) HEAP32[i5 >> 2] = i9;
      HEAP32[i19 + 1310736 + (i2 + -1 << 2) >> 2] = i11;
      break;
     }
     i2 = HEAP16[i3 + -2 >> 1] | 0;
     if (i2 << 16 >> 16 > 0) {
      HEAP16[i3 >> 1] = i2;
      i2 = (i2 << 16 >> 16) * 7 | 0;
      i8 = i19 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
      i8 = i19 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i9;
      i8 = i19 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i11;
      i2 = i19 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i2 >> 2] | 0) >= (i9 | 0)) break;
      HEAP32[i2 >> 2] = i9;
      break;
     } else {
      i2 = i1 + 1 | 0;
      if ((i1 | 0) > 32767) {
       i2 = 54;
       break L9;
      }
      HEAP16[i3 >> 1] = i2;
      HEAP32[i19 + 1179664 + (i1 << 2) >> 2] = i2 << 16 >> 16;
      i1 = i1 * 7 | 0;
      HEAP32[i19 + 1310736 + (i1 << 2) >> 2] = 1;
      HEAP32[i19 + 1310736 + (i1 + 1 << 2) >> 2] = i9;
      HEAP32[i19 + 1310736 + (i1 + 2 << 2) >> 2] = i11;
      HEAP32[i19 + 1310736 + (i1 + 3 << 2) >> 2] = i9;
      HEAP32[i19 + 1310736 + (i1 + 4 << 2) >> 2] = i9;
      HEAP32[i19 + 1310736 + (i1 + 5 << 2) >> 2] = i11;
      HEAP32[i19 + 1310736 + (i1 + 6 << 2) >> 2] = i11;
      i1 = i2;
      break;
     }
    }
    if (i5) {
     i2 = HEAP32[i19 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
     i7 = HEAP32[i19 + 1179664 + (i6 + -1 << 2) >> 2] | 0;
     L36 : do if ((i2 | 0) <= (i7 | 0)) {
      HEAP16[i3 >> 1] = i2;
      if ((i2 | 0) < (i7 | 0)) {
       i5 = i4;
       i6 = 0;
       while (1) {
        if ((i6 | 0) >= (i1 | 0)) break L36;
        if ((HEAP32[i5 >> 2] | 0) == (i7 | 0)) HEAP32[i5 >> 2] = i2;
        i5 = i5 + 4 | 0;
        i6 = i6 + 1 | 0;
       }
      }
     } else {
      HEAP16[i3 >> 1] = i7;
      i5 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) {
        i2 = i7;
        break L36;
       }
       if ((HEAP32[i5 >> 2] | 0) == (i2 | 0)) HEAP32[i5 >> 2] = i7;
       i5 = i5 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     } while (0);
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i19 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i19 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i19 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i11;
     HEAP32[i19 + 1310736 + (i8 + -1 << 2) >> 2] = i11;
     break;
    }
    i2 = HEAP16[i3 + -2 >> 1] | 0;
    if (i2 << 16 >> 16 <= 0) {
     HEAP16[i3 >> 1] = i7;
     i2 = i8 * 7 | 0;
     i5 = i19 + 1310736 + (i2 + -7 << 2) | 0;
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
     i5 = i19 + 1310736 + (i2 + -6 << 2) | 0;
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i9;
     i5 = i19 + 1310736 + (i2 + -5 << 2) | 0;
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i11;
     i5 = i19 + 1310736 + (i2 + -4 << 2) | 0;
     if ((HEAP32[i5 >> 2] | 0) > (i9 | 0)) HEAP32[i5 >> 2] = i9;
     HEAP32[i19 + 1310736 + (i2 + -1 << 2) >> 2] = i11;
     break;
    }
    i7 = HEAP32[i19 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
    i2 = HEAP32[i19 + 1179664 + ((i2 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if ((i7 | 0) <= (i2 | 0)) {
     HEAP16[i3 >> 1] = i7;
     if ((i7 | 0) < (i2 | 0)) {
      i5 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) {
        i2 = i7;
        break L60;
       }
       if ((HEAP32[i5 >> 2] | 0) == (i2 | 0)) HEAP32[i5 >> 2] = i7;
       i5 = i5 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     } else i2 = i7;
    } else {
     HEAP16[i3 >> 1] = i2;
     i5 = i4;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i1 | 0)) break L60;
      if ((HEAP32[i5 >> 2] | 0) == (i7 | 0)) HEAP32[i5 >> 2] = i2;
      i5 = i5 + 4 | 0;
      i6 = i6 + 1 | 0;
     }
    } while (0);
    i8 = (i2 << 16 >> 16) * 7 | 0;
    i7 = i19 + 1310736 + (i8 + -7 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
    i7 = i19 + 1310736 + (i8 + -6 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
    i8 = i19 + 1310736 + (i8 + -5 << 2) | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i11;
   } else HEAP16[i3 >> 1] = 0; while (0);
   i10 = i10 + 1 | 0;
   i9 = i9 + 1 | 0;
   i3 = i3 + 2 | 0;
  }
  i2 = i10 + 2 | 0;
  i11 = i11 + 1 | 0;
  i8 = i1;
  i3 = i3 + 4 | 0;
 }
 L80 : do if ((i2 | 0) == 54) {
  _arLog(0, 3, 17520, i16);
  i1 = -1;
 } else if ((i2 | 0) == 59) {
  i6 = i19 + 12 | 0;
  i1 = 1;
  i5 = 1;
  while (1) {
   if ((i5 | 0) > (i8 | 0)) break;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (i5 | 0)) i3 = i1 + 1 | 0; else {
    i3 = i1;
    i1 = HEAP32[i19 + 1179664 + (i2 + -1 << 2) >> 2] | 0;
   }
   HEAP32[i4 >> 2] = i1;
   i1 = i3;
   i5 = i5 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  i7 = i19 + 8 | 0;
  i2 = i1 + -1 | 0;
  HEAP32[i7 >> 2] = i2;
  if (!i2) i1 = 0; else {
   _memset(i6 | 0, 0, i2 << 2 | 0) | 0;
   _memset(i19 + 655376 | 0, 0, i2 << 4 | 0) | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break;
    i16 = i1 << 2;
    HEAP32[i19 + 131084 + (i16 << 2) >> 2] = i17;
    HEAP32[i19 + 131084 + ((i16 | 1) << 2) >> 2] = 0;
    HEAP32[i19 + 131084 + ((i16 | 2) << 2) >> 2] = i18;
    HEAP32[i19 + 131084 + ((i16 | 3) << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i5 = 0;
   while (1) {
    if ((i5 | 0) >= (i8 | 0)) break;
    i3 = (HEAP32[i19 + 1179664 + (i5 << 2) >> 2] | 0) + -1 | 0;
    i4 = i5 * 7 | 0;
    i1 = i19 + 12 + (i3 << 2) | 0;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + (HEAP32[i19 + 1310736 + (i4 << 2) >> 2] | 0);
    i1 = i3 << 1;
    i2 = i19 + 655376 + (i1 << 3) | 0;
    HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] + +(HEAP32[i19 + 1310736 + (i4 + 1 << 2) >> 2] | 0);
    i1 = i19 + 655376 + ((i1 | 1) << 3) | 0;
    HEAPF64[i1 >> 3] = +HEAPF64[i1 >> 3] + +(HEAP32[i19 + 1310736 + (i4 + 2 << 2) >> 2] | 0);
    i3 = i3 << 2;
    i1 = i19 + 131084 + (i3 << 2) | 0;
    i2 = HEAP32[i19 + 1310736 + (i4 + 3 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i19 + 131084 + ((i3 | 1) << 2) | 0;
    i2 = HEAP32[i19 + 1310736 + (i4 + 4 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) < (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i19 + 131084 + ((i3 | 2) << 2) | 0;
    i2 = HEAP32[i19 + 1310736 + (i4 + 5 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i2 = i19 + 131084 + ((i3 | 3) << 2) | 0;
    i1 = HEAP32[i19 + 1310736 + (i4 + 6 << 2) >> 2] | 0;
    if ((HEAP32[i2 >> 2] | 0) < (i1 | 0)) HEAP32[i2 >> 2] = i1;
    i5 = i5 + 1 | 0;
   }
   i2 = HEAP32[i7 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) {
     i1 = 0;
     break L80;
    }
    d21 = +(HEAP32[i19 + 12 + (i1 << 2) >> 2] | 0);
    i18 = i1 << 1;
    i17 = i19 + 655376 + (i18 << 3) | 0;
    HEAPF64[i17 >> 3] = +HEAPF64[i17 >> 3] / d21;
    i18 = i19 + 655376 + ((i18 | 1) << 3) | 0;
    HEAPF64[i18 >> 3] = +HEAPF64[i18 >> 3] / d21;
    i1 = i1 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i20;
 return i1 | 0;
}

function _arLabelingSubDBRC(i5, i17, i18, i14, i19) {
 i5 = i5 | 0;
 i17 = i17 | 0;
 i18 = i18 | 0;
 i14 = i14 | 0;
 i19 = i19 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i20 = 0, d21 = 0.0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i16 = i20;
 i6 = HEAP32[i19 >> 2] | 0;
 i15 = i18 + -1 | 0;
 i1 = i6;
 i2 = i6 + ((Math_imul(i15, i17) | 0) << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i17 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + 2 | 0;
  i2 = i2 + 2 | 0;
  i3 = i3 + 1 | 0;
 }
 i13 = i17 + -1 | 0;
 i1 = i6;
 i2 = i6 + (i13 << 1) | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i18 | 0)) break;
  HEAP16[i2 >> 1] = 0;
  HEAP16[i1 >> 1] = 0;
  i1 = i1 + (i17 << 1) | 0;
  i2 = i2 + (i17 << 1) | 0;
  i3 = i3 + 1 | 0;
 }
 i4 = i19 + 1179664 | 0;
 i3 = i17 + 1 | 0;
 i12 = 0 - i17 | 0;
 i2 = i5 + i3 | 0;
 i11 = 1;
 i8 = 0;
 i3 = i6 + (i3 << 1) | 0;
 L9 : while (1) {
  if ((i11 | 0) >= (i15 | 0)) {
   i2 = 59;
   break;
  }
  i10 = i2;
  i1 = i8;
  i9 = 1;
  while (1) {
   if ((i9 | 0) >= (i13 | 0)) break;
   do if ((HEAPU8[i10 >> 0] | 0 | 0) > (i14 | 0)) HEAP16[i3 >> 1] = 0; else {
    i5 = i3 + (i12 << 1) | 0;
    i2 = HEAP16[i5 >> 1] | 0;
    if (i2 << 16 >> 16 > 0) {
     HEAP16[i3 >> 1] = i2;
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i19 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i19 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i19 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i11;
     HEAP32[i19 + 1310736 + (i8 + -1 << 2) >> 2] = i11;
     break;
    }
    i7 = HEAP16[i5 + 2 >> 1] | 0;
    i8 = i7 << 16 >> 16;
    i2 = HEAP16[i5 + -2 >> 1] | 0;
    i6 = i2 << 16 >> 16;
    i5 = i2 << 16 >> 16 > 0;
    if (i7 << 16 >> 16 <= 0) {
     if (i5) {
      HEAP16[i3 >> 1] = i2;
      i2 = i6 * 7 | 0;
      i5 = i19 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
      i5 = i19 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i9;
      i5 = i19 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i11;
      i5 = i19 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i5 >> 2] | 0) < (i9 | 0)) HEAP32[i5 >> 2] = i9;
      HEAP32[i19 + 1310736 + (i2 + -1 << 2) >> 2] = i11;
      break;
     }
     i2 = HEAP16[i3 + -2 >> 1] | 0;
     if (i2 << 16 >> 16 > 0) {
      HEAP16[i3 >> 1] = i2;
      i2 = (i2 << 16 >> 16) * 7 | 0;
      i8 = i19 + 1310736 + (i2 + -7 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
      i8 = i19 + 1310736 + (i2 + -6 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i9;
      i8 = i19 + 1310736 + (i2 + -5 << 2) | 0;
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i11;
      i2 = i19 + 1310736 + (i2 + -3 << 2) | 0;
      if ((HEAP32[i2 >> 2] | 0) >= (i9 | 0)) break;
      HEAP32[i2 >> 2] = i9;
      break;
     } else {
      i2 = i1 + 1 | 0;
      if ((i1 | 0) > 32767) {
       i2 = 54;
       break L9;
      }
      HEAP16[i3 >> 1] = i2;
      HEAP32[i19 + 1179664 + (i1 << 2) >> 2] = i2 << 16 >> 16;
      i1 = i1 * 7 | 0;
      HEAP32[i19 + 1310736 + (i1 << 2) >> 2] = 1;
      HEAP32[i19 + 1310736 + (i1 + 1 << 2) >> 2] = i9;
      HEAP32[i19 + 1310736 + (i1 + 2 << 2) >> 2] = i11;
      HEAP32[i19 + 1310736 + (i1 + 3 << 2) >> 2] = i9;
      HEAP32[i19 + 1310736 + (i1 + 4 << 2) >> 2] = i9;
      HEAP32[i19 + 1310736 + (i1 + 5 << 2) >> 2] = i11;
      HEAP32[i19 + 1310736 + (i1 + 6 << 2) >> 2] = i11;
      i1 = i2;
      break;
     }
    }
    if (i5) {
     i2 = HEAP32[i19 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
     i7 = HEAP32[i19 + 1179664 + (i6 + -1 << 2) >> 2] | 0;
     L37 : do if ((i2 | 0) <= (i7 | 0)) {
      HEAP16[i3 >> 1] = i2;
      if ((i2 | 0) < (i7 | 0)) {
       i5 = i4;
       i6 = 0;
       while (1) {
        if ((i6 | 0) >= (i1 | 0)) break L37;
        if ((HEAP32[i5 >> 2] | 0) == (i7 | 0)) HEAP32[i5 >> 2] = i2;
        i5 = i5 + 4 | 0;
        i6 = i6 + 1 | 0;
       }
      }
     } else {
      HEAP16[i3 >> 1] = i7;
      i5 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) {
        i2 = i7;
        break L37;
       }
       if ((HEAP32[i5 >> 2] | 0) == (i2 | 0)) HEAP32[i5 >> 2] = i7;
       i5 = i5 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     } while (0);
     i8 = (i2 << 16 >> 16) * 7 | 0;
     i7 = i19 + 1310736 + (i8 + -7 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
     i7 = i19 + 1310736 + (i8 + -6 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
     i7 = i19 + 1310736 + (i8 + -5 << 2) | 0;
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i11;
     HEAP32[i19 + 1310736 + (i8 + -1 << 2) >> 2] = i11;
     break;
    }
    i2 = HEAP16[i3 + -2 >> 1] | 0;
    if (i2 << 16 >> 16 <= 0) {
     HEAP16[i3 >> 1] = i7;
     i2 = i8 * 7 | 0;
     i5 = i19 + 1310736 + (i2 + -7 << 2) | 0;
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
     i5 = i19 + 1310736 + (i2 + -6 << 2) | 0;
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i9;
     i5 = i19 + 1310736 + (i2 + -5 << 2) | 0;
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i11;
     i5 = i19 + 1310736 + (i2 + -4 << 2) | 0;
     if ((HEAP32[i5 >> 2] | 0) > (i9 | 0)) HEAP32[i5 >> 2] = i9;
     HEAP32[i19 + 1310736 + (i2 + -1 << 2) >> 2] = i11;
     break;
    }
    i7 = HEAP32[i19 + 1179664 + (i8 + -1 << 2) >> 2] | 0;
    i2 = HEAP32[i19 + 1179664 + ((i2 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if ((i7 | 0) <= (i2 | 0)) {
     HEAP16[i3 >> 1] = i7;
     if ((i7 | 0) < (i2 | 0)) {
      i5 = i4;
      i6 = 0;
      while (1) {
       if ((i6 | 0) >= (i1 | 0)) {
        i2 = i7;
        break L61;
       }
       if ((HEAP32[i5 >> 2] | 0) == (i2 | 0)) HEAP32[i5 >> 2] = i7;
       i5 = i5 + 4 | 0;
       i6 = i6 + 1 | 0;
      }
     } else i2 = i7;
    } else {
     HEAP16[i3 >> 1] = i2;
     i5 = i4;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (i1 | 0)) break L61;
      if ((HEAP32[i5 >> 2] | 0) == (i7 | 0)) HEAP32[i5 >> 2] = i2;
      i5 = i5 + 4 | 0;
      i6 = i6 + 1 | 0;
     }
    } while (0);
    i8 = (i2 << 16 >> 16) * 7 | 0;
    i7 = i19 + 1310736 + (i8 + -7 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
    i7 = i19 + 1310736 + (i8 + -6 << 2) | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i9;
    i8 = i19 + 1310736 + (i8 + -5 << 2) | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i11;
   } while (0);
   i10 = i10 + 1 | 0;
   i9 = i9 + 1 | 0;
   i3 = i3 + 2 | 0;
  }
  i2 = i10 + 2 | 0;
  i11 = i11 + 1 | 0;
  i8 = i1;
  i3 = i3 + 4 | 0;
 }
 L80 : do if ((i2 | 0) == 54) {
  _arLog(0, 3, 17520, i16);
  i1 = -1;
 } else if ((i2 | 0) == 59) {
  i6 = i19 + 12 | 0;
  i1 = 1;
  i5 = 1;
  while (1) {
   if ((i5 | 0) > (i8 | 0)) break;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (i5 | 0)) i3 = i1 + 1 | 0; else {
    i3 = i1;
    i1 = HEAP32[i19 + 1179664 + (i2 + -1 << 2) >> 2] | 0;
   }
   HEAP32[i4 >> 2] = i1;
   i1 = i3;
   i5 = i5 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  i7 = i19 + 8 | 0;
  i2 = i1 + -1 | 0;
  HEAP32[i7 >> 2] = i2;
  if (!i2) i1 = 0; else {
   _memset(i6 | 0, 0, i2 << 2 | 0) | 0;
   _memset(i19 + 655376 | 0, 0, i2 << 4 | 0) | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break;
    i16 = i1 << 2;
    HEAP32[i19 + 131084 + (i16 << 2) >> 2] = i17;
    HEAP32[i19 + 131084 + ((i16 | 1) << 2) >> 2] = 0;
    HEAP32[i19 + 131084 + ((i16 | 2) << 2) >> 2] = i18;
    HEAP32[i19 + 131084 + ((i16 | 3) << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i5 = 0;
   while (1) {
    if ((i5 | 0) >= (i8 | 0)) break;
    i3 = (HEAP32[i19 + 1179664 + (i5 << 2) >> 2] | 0) + -1 | 0;
    i4 = i5 * 7 | 0;
    i1 = i19 + 12 + (i3 << 2) | 0;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + (HEAP32[i19 + 1310736 + (i4 << 2) >> 2] | 0);
    i1 = i3 << 1;
    i2 = i19 + 655376 + (i1 << 3) | 0;
    HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] + +(HEAP32[i19 + 1310736 + (i4 + 1 << 2) >> 2] | 0);
    i1 = i19 + 655376 + ((i1 | 1) << 3) | 0;
    HEAPF64[i1 >> 3] = +HEAPF64[i1 >> 3] + +(HEAP32[i19 + 1310736 + (i4 + 2 << 2) >> 2] | 0);
    i3 = i3 << 2;
    i1 = i19 + 131084 + (i3 << 2) | 0;
    i2 = HEAP32[i19 + 1310736 + (i4 + 3 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i19 + 131084 + ((i3 | 1) << 2) | 0;
    i2 = HEAP32[i19 + 1310736 + (i4 + 4 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) < (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i1 = i19 + 131084 + ((i3 | 2) << 2) | 0;
    i2 = HEAP32[i19 + 1310736 + (i4 + 5 << 2) >> 2] | 0;
    if ((HEAP32[i1 >> 2] | 0) > (i2 | 0)) HEAP32[i1 >> 2] = i2;
    i2 = i19 + 131084 + ((i3 | 3) << 2) | 0;
    i1 = HEAP32[i19 + 1310736 + (i4 + 6 << 2) >> 2] | 0;
    if ((HEAP32[i2 >> 2] | 0) < (i1 | 0)) HEAP32[i2 >> 2] = i1;
    i5 = i5 + 1 | 0;
   }
   i2 = HEAP32[i7 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) {
     i1 = 0;
     break L80;
    }
    d21 = +(HEAP32[i19 + 12 + (i1 << 2) >> 2] | 0);
    i18 = i1 << 1;
    i17 = i19 + 655376 + (i18 << 3) | 0;
    HEAPF64[i17 >> 3] = +HEAPF64[i17 >> 3] / d21;
    i18 = i19 + 655376 + ((i18 | 1) << 3) | 0;
    HEAPF64[i18 >> 3] = +HEAPF64[i18 >> 3] / d21;
    i1 = i1 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i20;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_unnamed_type_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i12, i9) {
 i1 = i1 | 0;
 i12 = i12 | 0;
 i9 = i9 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0, i15 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 i11 = i14 + 56 | 0;
 i3 = i14 + 40 | 0;
 i4 = i14 + 28 | 0;
 i8 = i14 + 12 | 0;
 i7 = i14;
 i10 = i14 + 24 | 0;
 L1 : do if ((i12 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 85 : 0) {
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 116:
   {
    HEAP32[i3 >> 2] = 0;
    HEAP32[i3 + 4 >> 2] = 0;
    HEAP32[i3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i3, 51327, __ZNSt3__211char_traitsIcE6lengthEPKc(51327) | 0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i11, i3);
    i4 = i9 + 4 | 0;
    i2 = HEAP32[i4 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[i9 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i11);
     HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i9, i11);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i11);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i3);
    i3 = i1 + 2 | 0;
    if ((i3 | 0) == (i12 | 0)) {
     i3 = HEAP32[i4 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i13 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i13 * 24 | 0) | 0);
      i2 = i13;
     }
     HEAP32[i4 >> 2] = i3 + -24;
     break L1;
    }
    if (((HEAP8[i3 >> 0] | 0) + -48 | 0) >>> 0 < 10) {
     i2 = i1 + 3 | 0;
     while (1) {
      if ((i2 | 0) == (i12 | 0)) {
       i2 = i12;
       break;
      }
      if (((HEAP8[i2 >> 0] | 0) + -48 | 0) >>> 0 >= 10) break;
      i2 = i2 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE23__append_forward_unsafeIPKcEERS7_T_SC_((HEAP32[i4 >> 2] | 0) + -24 | 0, i3, i2);
    } else i2 = i3;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[i4 >> 2] | 0) + -24 | 0, 39);
    if ((i2 | 0) != (i12 | 0) ? (HEAP8[i2 >> 0] | 0) == 95 : 0) {
     i1 = i2 + 1 | 0;
     break L1;
    }
    i3 = HEAP32[i4 >> 2] | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == -1) break;
     i13 = i2 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i13 * 24 | 0) | 0);
     i2 = i13;
    }
    HEAP32[i4 >> 2] = i3 + -24;
    break L1;
   }
  case 108:
   break;
  default:
   break L1;
  }
  HEAP32[i4 >> 2] = 0;
  HEAP32[i4 + 4 >> 2] = 0;
  HEAP32[i4 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i4, 51336, __ZNSt3__211char_traitsIcE6lengthEPKc(51336) | 0);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i11, i4);
  i13 = i9 + 4 | 0;
  i2 = HEAP32[i13 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i9 + 8 >> 2] | 0) >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i11);
   HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 24;
  } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i9, i11);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i11);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i4);
  i3 = i1 + 2 | 0;
  do if ((HEAP8[i3 >> 0] | 0) != 118) {
   i2 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i3, i12, i9) | 0;
   if ((i2 | 0) == (i3 | 0)) {
    i3 = HEAP32[i13 >> 2] | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == -1) break;
     i12 = i2 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i12 * 24 | 0) | 0);
     i2 = i12;
    }
    HEAP32[i13 >> 2] = i3 + -24;
    break L1;
   }
   i3 = HEAP32[i13 >> 2] | 0;
   if (((i3 - (HEAP32[i9 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i3 + -24 | 0);
   i4 = HEAP32[i13 >> 2] | 0;
   i3 = 0;
   while (1) {
    if ((i3 | 0) == -1) break;
    i6 = i3 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4 + (i6 * 24 | 0) | 0);
    i3 = i6;
   }
   HEAP32[i13 >> 2] = i4 + -24;
   i5 = i8 + 11 | 0;
   i3 = HEAP8[i5 >> 0] | 0;
   i15 = i3 << 24 >> 24 < 0;
   i6 = i8 + 4 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i4 + -48 | 0, i15 ? HEAP32[i8 >> 2] | 0 : i8, i15 ? HEAP32[i6 >> 2] | 0 : i3 & 255) | 0;
   while (1) {
    i4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i2, i12, i9) | 0;
    if ((i4 | 0) == (i2 | 0)) {
     i3 = 54;
     break;
    }
    i2 = HEAP32[i13 >> 2] | 0;
    if (((i2 - (HEAP32[i9 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     i3 = 82;
     break;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, i2 + -24 | 0);
    if ((HEAP8[i5 >> 0] | 0) < 0) {
     i15 = HEAP32[i8 >> 2] | 0;
     HEAP8[i11 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc(i15, i11);
     HEAP32[i6 >> 2] = 0;
    } else {
     HEAP8[i11 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i11);
     HEAP8[i5 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i8);
    HEAP32[i8 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i8 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
    HEAP32[i8 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i7 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
    i3 = HEAP32[i13 >> 2] | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == -1) break;
     i15 = i2 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i15 * 24 | 0) | 0);
     i2 = i15;
    }
    HEAP32[i13 >> 2] = i3 + -24;
    i15 = HEAP8[i5 >> 0] | 0;
    if ((i15 << 24 >> 24 < 0 ? HEAP32[i6 >> 2] | 0 : i15 & 255) | 0) {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i3 + -48 | 0, 50748) | 0;
     i15 = HEAP8[i5 >> 0] | 0;
     i3 = i15 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i13 >> 2] | 0) + -24 | 0, i3 ? HEAP32[i8 >> 2] | 0 : i8, i3 ? HEAP32[i6 >> 2] | 0 : i15 & 255) | 0;
    }
    i2 = i4;
   }
   if ((i3 | 0) == 54) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i13 >> 2] | 0) + -24 | 0, 50524) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
    break;
   } else if ((i3 | 0) == 82) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
    break L1;
   }
  } else {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[i13 >> 2] | 0) + -24 | 0, 41);
   i2 = i1 + 3 | 0;
  } while (0);
  if ((i2 | 0) != (i12 | 0) ? (HEAP8[i2 >> 0] | 0) == 69 : 0) {
   i5 = i2 + 1 | 0;
   if ((i5 | 0) == (i12 | 0)) {
    i3 = HEAP32[i13 >> 2] | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == -1) break;
     i15 = i2 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i15 * 24 | 0) | 0);
     i2 = i15;
    }
    HEAP32[i13 >> 2] = i3 + -24;
    break;
   }
   if (((HEAP8[i5 >> 0] | 0) + -48 | 0) >>> 0 < 10) {
    i2 = i2 + 2 | 0;
    while (1) {
     if ((i2 | 0) == (i12 | 0)) {
      i2 = i12;
      break;
     }
     if (((HEAP8[i2 >> 0] | 0) + -48 | 0) >>> 0 >= 10) break;
     i2 = i2 + 1 | 0;
    }
    i3 = (HEAP32[i13 >> 2] | 0) + -24 | 0;
    if ((HEAP8[i3 + 11 >> 0] | 0) < 0) i4 = HEAP32[i3 >> 2] | 0; else i4 = i3;
    HEAP32[i10 >> 2] = i4 + 7;
    HEAP32[i11 >> 2] = HEAP32[i10 >> 2];
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueENS_11__wrap_iterIPcEEE4typeENSD_ISA_EESC_SC_(i3, i11, i5, i2) | 0;
   } else i2 = i5;
   if ((i2 | 0) != (i12 | 0) ? (HEAP8[i2 >> 0] | 0) == 95 : 0) {
    i1 = i2 + 1 | 0;
    break;
   }
   i3 = HEAP32[i13 >> 2] | 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == -1) break;
    i15 = i2 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i15 * 24 | 0) | 0);
    i2 = i15;
   }
   HEAP32[i13 >> 2] = i3 + -24;
   break;
  }
  i3 = HEAP32[i13 >> 2] | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == -1) break;
   i15 = i2 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i15 * 24 | 0) | 0);
   i2 = i15;
  }
  HEAP32[i13 >> 2] = i3 + -24;
 } while (0);
 STACKTOP = i14;
 return i1 | 0;
}

function __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i2, i3, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i10;
 if ((i2 | 0) <= -1) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31055) | 0, 30558) | 0, 33655) | 0, 165) | 0, 33662) | 0, 31088) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 i4 = HEAP32[i1 + 52 >> 2] | 0;
 if ((i4 | 0) <= (i2 | 0)) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31106) | 0, 30558) | 0, 33655) | 0, 166) | 0, 33662) | 0, 31088) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 if ((i3 | 0) <= -1) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31146) | 0, 30558) | 0, 33655) | 0, 167) | 0, 33662) | 0, 31179) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 i8 = HEAP32[i1 + 56 >> 2] | 0;
 if ((i8 | 0) <= (i3 | 0)) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31197) | 0, 30558) | 0, 33655) | 0, 168) | 0, 33662) | 0, 31179) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 if ((i5 | 0) <= -1) {
  i11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31237) | 0, 30558) | 0, 33655) | 0, 169) | 0, 33662) | 0, 31274) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 i9 = HEAP32[i1 + 60 >> 2] | 0;
 if ((i9 | 0) <= (i5 | 0)) {
  i11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31296) | 0, 30558) | 0, 33655) | 0, 170) | 0, 33662) | 0, 31274) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 if ((i6 | 0) <= -1) {
  i12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31344) | 0, 30558) | 0, 33655) | 0, 171) | 0, 33662) | 0, 31381) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 if ((HEAP32[i1 + 64 >> 2] | 0) <= (i6 | 0)) {
  i12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31403) | 0, 30558) | 0, 33655) | 0, 172) | 0, 33662) | 0, 31381) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 i12 = (Math_imul(i4, i3) | 0) + i2 | 0;
 i11 = (Math_imul(HEAP32[i1 + 84 >> 2] | 0, i5) | 0) + i12 | 0;
 i1 = i11 + (Math_imul(HEAP32[i1 + 88 >> 2] | 0, i6) | 0) | 0;
 if ((i1 | 0) > ((Math_imul(Math_imul(i8, i4) | 0, (Math_imul(i9, i6) | 0) + i5 | 0) | 0) + i12 | 0)) {
  i12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31451) | 0, 30558) | 0, 33655) | 0, 176) | 0, 33662) | 0, 31036) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 } else {
  STACKTOP = i10;
  return i1 | 0;
 }
 return 0;
}

function __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(i1, i3, i2, i4, i7, i8, i9, i11, i5, i13) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i11 = i11 | 0;
 i5 = i5 | 0;
 i13 = i13 | 0;
 var i6 = 0, i10 = 0, i12 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i10 = i14 + 12 | 0;
 i12 = i14;
 if (i1) {
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 59024) | 0;
  if (i3) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 44 >> 2] & 63](i10, i6);
   i1 = HEAP32[i10 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 32 >> 2] & 63](i12, i6);
   i1 = i5 + 11 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    i1 = HEAP32[i5 >> 2] | 0;
    HEAP8[i10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i10);
    HEAP32[i5 + 4 >> 2] = 0;
    i1 = i5;
   } else {
    HEAP8[i10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i5, i10);
    HEAP8[i1 >> 0] = 0;
    i1 = i5;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i5, 0);
   HEAP32[i1 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i1 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
   HEAP32[i1 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i12 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
   i2 = i6;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] & 63](i10, i6);
   i1 = HEAP32[i10 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i12, i6);
   i1 = i5 + 11 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    i1 = HEAP32[i5 >> 2] | 0;
    HEAP8[i10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i10);
    HEAP32[i5 + 4 >> 2] = 0;
    i1 = i5;
   } else {
    HEAP8[i10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i5, i10);
    HEAP8[i1 >> 0] = 0;
    i1 = i5;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i5, 0);
   HEAP32[i1 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i1 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
   HEAP32[i1 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i12 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
   i2 = i6;
  }
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 12 >> 2] & 127](i6) | 0;
  HEAP8[i7 >> 0] = i1;
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 16 >> 2] & 127](i6) | 0;
  HEAP8[i8 >> 0] = i1;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i12, i6);
  i1 = i9 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i9 >> 2] | 0;
   HEAP8[i10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i10);
   HEAP32[i9 + 4 >> 2] = 0;
   i1 = i9;
  } else {
   HEAP8[i10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i9, i10);
   HEAP8[i1 >> 0] = 0;
   i1 = i9;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i9, 0);
  HEAP32[i1 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i12 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i12, i6);
  i1 = i11 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i11 >> 2] | 0;
   HEAP8[i10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i10);
   HEAP32[i11 + 4 >> 2] = 0;
   i1 = i11;
  } else {
   HEAP8[i10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i11, i10);
   HEAP8[i1 >> 0] = 0;
   i1 = i11;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i11, 0);
  HEAP32[i1 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i12 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0;
 } else {
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 59016) | 0;
  if (i3) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 44 >> 2] & 63](i10, i6);
   i1 = HEAP32[i10 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 32 >> 2] & 63](i12, i6);
   i1 = i5 + 11 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    i1 = HEAP32[i5 >> 2] | 0;
    HEAP8[i10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i10);
    HEAP32[i5 + 4 >> 2] = 0;
    i1 = i5;
   } else {
    HEAP8[i10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i5, i10);
    HEAP8[i1 >> 0] = 0;
    i1 = i5;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i5, 0);
   HEAP32[i1 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i1 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
   HEAP32[i1 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i12 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
   i2 = i6;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] & 63](i10, i6);
   i1 = HEAP32[i10 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i12, i6);
   i1 = i5 + 11 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    i1 = HEAP32[i5 >> 2] | 0;
    HEAP8[i10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i10);
    HEAP32[i5 + 4 >> 2] = 0;
    i1 = i5;
   } else {
    HEAP8[i10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i5, i10);
    HEAP8[i1 >> 0] = 0;
    i1 = i5;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i5, 0);
   HEAP32[i1 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i1 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
   HEAP32[i1 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i12 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
   i2 = i6;
  }
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 12 >> 2] & 127](i6) | 0;
  HEAP8[i7 >> 0] = i1;
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 16 >> 2] & 127](i6) | 0;
  HEAP8[i8 >> 0] = i1;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i12, i6);
  i1 = i9 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i9 >> 2] | 0;
   HEAP8[i10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i10);
   HEAP32[i9 + 4 >> 2] = 0;
   i1 = i9;
  } else {
   HEAP8[i10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i9, i10);
   HEAP8[i1 >> 0] = 0;
   i1 = i9;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i9, 0);
  HEAP32[i1 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i12 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i12, i6);
  i1 = i11 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i11 >> 2] | 0;
   HEAP8[i10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i10);
   HEAP32[i11 + 4 >> 2] = 0;
   i1 = i11;
  } else {
   HEAP8[i10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i11, i10);
   HEAP8[i1 >> 0] = 0;
   i1 = i11;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i11, 0);
  HEAP32[i1 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i12 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0;
 }
 HEAP32[i13 >> 2] = i1;
 STACKTOP = i14;
 return;
}

function __ZNK6vision21HoughSimilarityVoting16getBinsFromIndexERiS1_S1_S1_i(i8, i2, i5, i6, i3, i1) {
 i8 = i8 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i10;
 i7 = i8 + 88 | 0;
 i13 = i8 + 84 | 0;
 i4 = i8 + 52 | 0;
 i12 = (((i1 | 0) % (HEAP32[i7 >> 2] | 0) | 0 | 0) % (HEAP32[i13 >> 2] | 0) | 0 | 0) % (HEAP32[i4 >> 2] | 0) | 0;
 HEAP32[i2 >> 2] = i12;
 i12 = (((i1 - i12 | 0) % (HEAP32[i7 >> 2] | 0) | 0 | 0) % (HEAP32[i13 >> 2] | 0) | 0 | 0) / (HEAP32[i4 >> 2] | 0) | 0;
 HEAP32[i5 >> 2] = i12;
 i12 = i1 - (HEAP32[i2 >> 2] | 0) - (Math_imul(HEAP32[i4 >> 2] | 0, i12) | 0) | 0;
 i12 = ((i12 | 0) % (HEAP32[i7 >> 2] | 0) | 0 | 0) / (HEAP32[i13 >> 2] | 0) | 0;
 HEAP32[i6 >> 2] = i12;
 i11 = Math_imul(HEAP32[i4 >> 2] | 0, HEAP32[i5 >> 2] | 0) | 0;
 i1 = i1 - (HEAP32[i2 >> 2] | 0) - ((Math_imul(HEAP32[i13 >> 2] | 0, i12) | 0) + i11) | 0;
 i7 = (i1 | 0) / (HEAP32[i7 >> 2] | 0) | 0;
 HEAP32[i3 >> 2] = i7;
 i1 = HEAP32[i2 >> 2] | 0;
 if ((i1 | 0) <= -1) {
  i13 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31055) | 0, 30558) | 0, 33655) | 0, 190) | 0, 33662) | 0, 31088) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 }
 if ((i1 | 0) >= (HEAP32[i4 >> 2] | 0)) {
  i13 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31106) | 0, 30558) | 0, 33655) | 0, 191) | 0, 33662) | 0, 31088) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 }
 i1 = HEAP32[i5 >> 2] | 0;
 if ((i1 | 0) <= -1) {
  i13 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31146) | 0, 30558) | 0, 33655) | 0, 192) | 0, 33662) | 0, 31179) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 }
 if ((i1 | 0) >= (HEAP32[i8 + 56 >> 2] | 0)) {
  i13 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31197) | 0, 30558) | 0, 33655) | 0, 193) | 0, 33662) | 0, 31179) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 }
 i1 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) <= -1) {
  i13 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31237) | 0, 30558) | 0, 33655) | 0, 194) | 0, 33662) | 0, 31274) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 }
 if ((i1 | 0) >= (HEAP32[i8 + 60 >> 2] | 0)) {
  i13 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31296) | 0, 30558) | 0, 33655) | 0, 195) | 0, 33662) | 0, 31274) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 }
 if ((i7 | 0) <= -1) {
  i13 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31344) | 0, 30558) | 0, 33655) | 0, 196) | 0, 33662) | 0, 31381) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 }
 if ((i7 | 0) < (HEAP32[i8 + 64 >> 2] | 0)) {
  STACKTOP = i10;
  return;
 } else {
  i13 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31403) | 0, 30558) | 0, 33655) | 0, 197) | 0, 33662) | 0, 31381) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 }
}

function __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(i1, i3, i2, i4, i6, i7, i8, i10, i5, i12) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 i12 = i12 | 0;
 var i9 = 0, i11 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i13 + 12 | 0;
 i11 = i13;
 if (i1) {
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 59040) | 0;
  if (i3) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 63](i9, i2);
   i1 = HEAP32[i9 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 63](i11, i2);
   i1 = i5 + 8 + 3 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    i4 = HEAP32[i5 >> 2] | 0;
    HEAP32[i9 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i4, i9);
    HEAP32[i5 + 4 >> 2] = 0;
   } else {
    HEAP32[i9 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i5, i9);
    HEAP8[i1 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i5, 0);
   HEAP32[i5 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i11 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i11);
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 63](i9, i2);
   i1 = HEAP32[i9 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i11, i2);
   i1 = i5 + 8 + 3 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    i4 = HEAP32[i5 >> 2] | 0;
    HEAP32[i9 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i4, i9);
    HEAP32[i5 + 4 >> 2] = 0;
   } else {
    HEAP32[i9 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i5, i9);
    HEAP8[i1 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i5, 0);
   HEAP32[i5 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i11 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i11);
  }
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i6 >> 2] = i1;
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  HEAP32[i7 >> 2] = i1;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i11, i2);
  i1 = i8 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i8 >> 2] | 0;
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i9);
   HEAP32[i8 + 4 >> 2] = 0;
   i1 = i8;
  } else {
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i9);
   HEAP8[i1 >> 0] = 0;
   i1 = i8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i8, 0);
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i11, i2);
  i1 = i10 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i8 = HEAP32[i10 >> 2] | 0;
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i8, i9);
   HEAP32[i10 + 4 >> 2] = 0;
  } else {
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i10, i9);
   HEAP8[i1 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i10, 0);
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i11);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 } else {
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 59032) | 0;
  if (i3) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 63](i9, i2);
   i1 = HEAP32[i9 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 63](i11, i2);
   i1 = i5 + 8 + 3 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    i4 = HEAP32[i5 >> 2] | 0;
    HEAP32[i9 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i4, i9);
    HEAP32[i5 + 4 >> 2] = 0;
   } else {
    HEAP32[i9 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i5, i9);
    HEAP8[i1 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i5, 0);
   HEAP32[i5 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i11 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i11);
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 63](i9, i2);
   i1 = HEAP32[i9 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i11, i2);
   i1 = i5 + 8 + 3 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    i4 = HEAP32[i5 >> 2] | 0;
    HEAP32[i9 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i4, i9);
    HEAP32[i5 + 4 >> 2] = 0;
   } else {
    HEAP32[i9 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i5, i9);
    HEAP8[i1 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i5, 0);
   HEAP32[i5 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i11 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i11);
  }
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i6 >> 2] = i1;
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  HEAP32[i7 >> 2] = i1;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i11, i2);
  i1 = i8 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i8 >> 2] | 0;
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i9);
   HEAP32[i8 + 4 >> 2] = 0;
   i1 = i8;
  } else {
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i9);
   HEAP8[i1 >> 0] = 0;
   i1 = i8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i8, 0);
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i11, i2);
  i1 = i10 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i8 = HEAP32[i10 >> 2] | 0;
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i8, i9);
   HEAP32[i10 + 4 >> 2] = 0;
  } else {
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i10, i9);
   HEAP8[i1 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i10, 0);
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i11);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 }
 HEAP32[i12 >> 2] = i1;
 STACKTOP = i13;
 return;
}

function __ZN6vision38ComputeSubpixelHessianCoarseOctavePairEPfS0_RKNS_5ImageES3_S3_ii(i1, i2, i8, i9, i12, i13, i14) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0, i11 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0, d25 = 0.0, d26 = 0.0, i27 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i15 = i18 + 28 | 0;
 i16 = i18 + 24 | 0;
 i17 = i18 + 20 | 0;
 i3 = i18 + 16 | 0;
 i4 = i18 + 12 | 0;
 i5 = i18 + 8 | 0;
 i6 = i18 + 4 | 0;
 i7 = i18;
 if ((i13 | 0) > 0 ? (i13 + 1 | 0) >>> 0 < (__ZNK6vision5Image5widthEv(i9) | 0) >>> 0 : 0) {
  i10 = i14 + -1 | 0;
  if ((i14 | 0) > 0 ? (i11 = i14 + 1 | 0, i11 >>> 0 < (__ZNK6vision5Image6heightEv(i9) | 0) >>> 0) : 0) {
   i19 = (__ZNK6vision5Image5widthEv(i8) | 0) >>> 1;
   if ((i19 | 0) != (__ZNK6vision5Image5widthEv(i9) | 0)) {
    i19 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23100) | 0, 22571) | 0, 33655) | 0, 361) | 0, 33662) | 0, 23157) | 0;
    __ZNKSt3__28ios_base6getlocEv(i15, i19 + (HEAP32[(HEAP32[i19 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i20 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58792) | 0;
    i20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i20 >> 2] | 0) + 28 >> 2] & 63](i20, 10) | 0;
    __ZNSt3__26localeD2Ev(i15);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i19, i20) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i19) | 0;
    _abort();
   }
   i20 = (__ZNK6vision5Image5widthEv(i8) | 0) >>> 1;
   if ((i20 | 0) != (__ZNK6vision5Image5widthEv(i12) | 0)) {
    i20 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23187) | 0, 22571) | 0, 33655) | 0, 362) | 0, 33662) | 0, 23157) | 0;
    __ZNKSt3__28ios_base6getlocEv(i15, i20 + (HEAP32[(HEAP32[i20 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i19 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58792) | 0;
    i19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i19 >> 2] | 0) + 28 >> 2] & 63](i19, 10) | 0;
    __ZNSt3__26localeD2Ev(i15);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i20, i19) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i20) | 0;
    _abort();
   }
   i20 = (__ZNK6vision5Image6heightEv(i8) | 0) >>> 1;
   if ((i20 | 0) != (__ZNK6vision5Image6heightEv(i9) | 0)) {
    i20 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23244) | 0, 22571) | 0, 33655) | 0, 363) | 0, 33662) | 0, 23157) | 0;
    __ZNKSt3__28ios_base6getlocEv(i15, i20 + (HEAP32[(HEAP32[i20 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i19 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58792) | 0;
    i19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i19 >> 2] | 0) + 28 >> 2] & 63](i19, 10) | 0;
    __ZNSt3__26localeD2Ev(i15);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i20, i19) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i20) | 0;
    _abort();
   }
   i20 = (__ZNK6vision5Image6heightEv(i8) | 0) >>> 1;
   if ((i20 | 0) == (__ZNK6vision5Image6heightEv(i12) | 0)) {
    i27 = (__ZNK6vision5Image3getIfEEPKT_m(i9, i14) | 0) + (i13 << 2) | 0;
    i20 = (__ZNK6vision5Image3getIfEEPKT_m(i12, i10) | 0) + (i13 << 2) | 0;
    i15 = (__ZNK6vision5Image3getIfEEPKT_m(i12, i14) | 0) + (i13 << 2) | 0;
    i19 = (__ZNK6vision5Image3getIfEEPKT_m(i12, i11) | 0) + (i13 << 2) | 0;
    __ZN6vision23bilinear_upsample_pointERfS0_ffi(i16, i17, +(i13 | 0), +(i14 | 0), 1);
    __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii(i3, i4, i5, i6, i7, i9, i13, i14);
    d21 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i8, +HEAPF32[i16 >> 2], +HEAPF32[i17 >> 2]);
    d22 = +HEAPF32[i15 >> 2];
    d23 = d22 + (d21 - +HEAPF32[i27 >> 2] * 2.0);
    d26 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i8, +HEAPF32[i16 >> 2] + -2.0, +HEAPF32[i17 >> 2]);
    d26 = d26 + +HEAPF32[i15 + 4 >> 2];
    d25 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i8, +HEAPF32[i16 >> 2] + 2.0, +HEAPF32[i17 >> 2]);
    d25 = (d26 - (d25 + +HEAPF32[i15 + -4 >> 2])) * .25;
    d26 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i8, +HEAPF32[i16 >> 2], +HEAPF32[i17 >> 2] + -2.0);
    d26 = d26 + +HEAPF32[i19 >> 2];
    d24 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i8, +HEAPF32[i16 >> 2], +HEAPF32[i17 >> 2] + 2.0);
    d24 = (d26 - (d24 + +HEAPF32[i20 >> 2])) * .25;
    HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
    i20 = HEAP32[i7 >> 2] | 0;
    HEAP32[i1 + 4 >> 2] = i20;
    HEAPF32[i1 + 8 >> 2] = d25;
    HEAP32[i1 + 12 >> 2] = i20;
    HEAP32[i1 + 16 >> 2] = HEAP32[i6 >> 2];
    HEAPF32[i1 + 20 >> 2] = d24;
    HEAPF32[i1 + 24 >> 2] = d25;
    HEAPF32[i1 + 28 >> 2] = d24;
    HEAPF32[i1 + 32 >> 2] = d23;
    HEAPF32[i2 >> 2] = -+HEAPF32[i3 >> 2];
    HEAPF32[i2 + 4 >> 2] = -+HEAPF32[i4 >> 2];
    HEAPF32[i2 + 8 >> 2] = -((d22 - d21) * .5);
    STACKTOP = i18;
    return;
   } else {
    i27 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23303) | 0, 22571) | 0, 33655) | 0, 364) | 0, 33662) | 0, 23157) | 0;
    __ZNKSt3__28ios_base6getlocEv(i15, i27 + (HEAP32[(HEAP32[i27 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i20 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58792) | 0;
    i20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i20 >> 2] | 0) + 28 >> 2] & 63](i20, 10) | 0;
    __ZNSt3__26localeD2Ev(i15);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i27, i20) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i27) | 0;
    _abort();
   }
  }
  i27 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23025) | 0, 22571) | 0, 33655) | 0, 360) | 0, 33662) | 0, 23084) | 0;
  __ZNKSt3__28ios_base6getlocEv(i15, i27 + (HEAP32[(HEAP32[i27 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i20 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58792) | 0;
  i20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i20 >> 2] | 0) + 28 >> 2] & 63](i20, 10) | 0;
  __ZNSt3__26localeD2Ev(i15);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i27, i20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i27) | 0;
  _abort();
 }
 i27 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 22951) | 0, 22571) | 0, 33655) | 0, 359) | 0, 33662) | 0, 23009) | 0;
 __ZNKSt3__28ios_base6getlocEv(i15, i27 + (HEAP32[(HEAP32[i27 >> 2] | 0) + -12 >> 2] | 0) | 0);
 i20 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58792) | 0;
 i20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i20 >> 2] | 0) + 28 >> 2] & 63](i20, 10) | 0;
 __ZNSt3__26localeD2Ev(i15);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i27, i20) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i27) | 0;
 _abort();
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPNS_4NodeILi96EEEPKhiPKii(i10, i15, i11, i12, i8, i9) {
 i10 = i10 | 0;
 i15 = i15 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i13 = 0, i14 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i13 = i16 + 20 | 0;
 i14 = i16;
 i1 = i10 + 12 | 0;
 i7 = __ZNK6vision14BinarykMedoidsILi96EE1kEv(i1) | 0;
 if ((__ZN6vision4max2IiEET_S1_S1_(i7, HEAP32[i10 + 108 >> 2] | 0) | 0) >= (i9 | 0)) {
  __ZN6vision4NodeILi96EE4leafEb(i15, 1);
  __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm(__ZN6vision4NodeILi96EE12reverseIndexEv(i15) | 0, i9);
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i9 | 0)) break;
   i13 = HEAP32[i8 + (i1 << 2) >> 2] | 0;
   i14 = __ZN6vision4NodeILi96EE12reverseIndexEv(i15) | 0;
   HEAP32[(HEAP32[i14 >> 2] | 0) + (i1 << 2) >> 2] = i13;
   i1 = i1 + 1 | 0;
  }
  STACKTOP = i16;
  return;
 }
 HEAP32[i14 >> 2] = 0;
 HEAP32[i14 + 4 >> 2] = 0;
 HEAP32[i14 + 8 >> 2] = 0;
 HEAP32[i14 + 12 >> 2] = 0;
 HEAP32[i14 + 16 >> 2] = 1065353216;
 __ZN6vision14BinarykMedoidsILi96EE6assignEPKhiPKii(i1, i11, i12, i8, i9);
 i6 = __ZNK6vision14BinarykMedoidsILi96EE10assignmentEv(i1) | 0;
 i7 = i6 + 4 | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 if ((i2 - i1 >> 2 | 0) != (i9 | 0)) {
  i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 27357) | 0, 27413) | 0, 33655) | 0, 363) | 0, 33662) | 0, 27543) | 0;
  __ZNKSt3__28ios_base6getlocEv(i13, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i13, 58792) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 i5 = 0;
 while (1) {
  if (i5 >>> 0 >= i2 - i1 >> 2 >>> 0) {
   i1 = 10;
   break;
  }
  i1 = HEAP32[i1 + (i5 << 2) >> 2] | 0;
  if ((i1 | 0) == -1) {
   i1 = 12;
   break;
  }
  if ((i1 | 0) >= (i9 | 0)) {
   i1 = 14;
   break;
  }
  i1 = i8 + (i1 << 2) | 0;
  if ((HEAP32[i1 >> 2] | 0) >= (i12 | 0)) {
   i1 = 16;
   break;
  }
  i1 = __ZNSt3__213unordered_mapIiNS_6vectorIiNS_9allocatorIiEEEENS_4hashIiEENS_8equal_toIiEENS2_INS_4pairIKiS4_EEEEEixERSA_(i14, i1) | 0;
  i2 = i8 + (i5 << 2) | 0;
  i3 = i1 + 4 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) == (HEAP32[i1 + 8 >> 2] | 0)) __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_(i1, i2); else {
   HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i3 >> 2] = i4 + 4;
  }
  i5 = i5 + 1 | 0;
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = HEAP32[i7 >> 2] | 0;
 }
 if ((i1 | 0) == 10) {
  i1 = i14 + 12 | 0;
  L23 : do if ((HEAP32[i1 >> 2] | 0) == 1) {
   __ZN6vision4NodeILi96EE4leafEb(i15, 1);
   __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm(__ZN6vision4NodeILi96EE12reverseIndexEv(i15) | 0, i9);
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i9 | 0)) break L23;
    i12 = HEAP32[i8 + (i1 << 2) >> 2] | 0;
    i13 = __ZN6vision4NodeILi96EE12reverseIndexEv(i15) | 0;
    HEAP32[(HEAP32[i13 >> 2] | 0) + (i1 << 2) >> 2] = i12;
    i1 = i1 + 1 | 0;
   }
  } else {
   i9 = __ZN6vision4NodeILi96EE8childrenEv(i15) | 0;
   __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE7reserveEm(i9, HEAP32[i1 >> 2] | 0);
   i1 = i14 + 8 | 0;
   while (1) {
    i1 = HEAP32[i1 >> 2] | 0;
    if (!i1) break L23;
    i2 = i1;
    i5 = i2 + 12 | 0;
    i6 = i2 + 16 | 0;
    if ((HEAP32[i6 >> 2] | 0) == (HEAP32[i5 >> 2] | 0)) break;
    i3 = __Znwm(128) | 0;
    i4 = __ZN6vision28BinaryHierarchicalClusteringILi96EE10nextNodeIdEv(i10) | 0;
    __ZN6vision4NodeILi96EEC2EiPKh(i3, i4, i11 + ((HEAP32[i2 + 8 >> 2] | 0) * 96 | 0) | 0);
    HEAP32[i13 >> 2] = i3;
    __ZN6vision4NodeILi96EE4leafEb(i3, 0);
    i2 = __ZN6vision4NodeILi96EE8childrenEv(i15) | 0;
    i3 = i2 + 4 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i2 + 8 >> 2] | 0)) __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(i2, i13); else {
     HEAP32[i4 >> 2] = HEAP32[i13 >> 2];
     HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 4;
    }
    i9 = HEAP32[i5 >> 2] | 0;
    __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPNS_4NodeILi96EEEPKhiPKii(i10, HEAP32[i13 >> 2] | 0, i11, i12, i9, (HEAP32[i6 >> 2] | 0) - i9 >> 2);
   }
   i15 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 27766) | 0, 27413) | 0, 33655) | 0, 387) | 0, 33662) | 0, 27812) | 0;
   __ZNKSt3__28ios_base6getlocEv(i13, i15 + (HEAP32[(HEAP32[i15 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i13, 58792) | 0;
   i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
   __ZNSt3__26localeD2Ev(i13);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i12) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
   _abort();
  } while (0);
  __ZNSt3__213unordered_mapIiNS_6vectorIiNS_9allocatorIiEEEENS_4hashIiEENS_8equal_toIiEENS2_INS_4pairIKiS4_EEEEED2Ev(i14);
  STACKTOP = i16;
  return;
 } else if ((i1 | 0) == 12) {
  i16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 27565) | 0, 27413) | 0, 33655) | 0, 365) | 0, 33662) | 0, 27608) | 0;
  __ZNKSt3__28ios_base6getlocEv(i13, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i13, 58792) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 } else if ((i1 | 0) == 14) {
  i16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 27630) | 0, 27413) | 0, 33655) | 0, 366) | 0, 33662) | 0, 27681) | 0;
  __ZNKSt3__28ios_base6getlocEv(i13, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i13, 58792) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 } else if ((i1 | 0) == 16) {
  i16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 27705) | 0, 27413) | 0, 33655) | 0, 367) | 0, 33662) | 0, 27681) | 0;
  __ZNKSt3__28ios_base6getlocEv(i13, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i13, 58792) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 }
}

function __ZN10__cxxabiv112_GLOBAL__N_128parse_pointer_to_member_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 var i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i11 = i15 + 96 | 0;
 i13 = i15 + 72 | 0;
 i14 = i15 + 48 | 0;
 i10 = i15 + 36 | 0;
 i6 = i15 + 24 | 0;
 i7 = i15 + 12 | 0;
 i8 = i15;
 if (((((i1 | 0) != (i2 | 0) ? (HEAP8[i1 >> 0] | 0) == 77 : 0) ? (i16 = i1 + 1 | 0, i3 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i16, i2, i5) | 0, (i3 | 0) != (i16 | 0)) : 0) ? (i12 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i3, i2, i5) | 0, (i12 | 0) != (i3 | 0)) : 0) ? (i9 = i5 + 4 | 0, i4 = HEAP32[i9 >> 2] | 0, ((i4 - (HEAP32[i5 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i13, i4 + -24 | 0);
  i2 = HEAP32[i9 >> 2] | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == -1) break;
   i16 = i1 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i16 * 24 | 0) | 0);
   i1 = i16;
  }
  HEAP32[i9 >> 2] = i2 + -24;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i14, i2 + -48 | 0);
  i4 = i13 + 12 | 0;
  L11 : do if ((HEAP8[((HEAP8[i4 + 11 >> 0] | 0) < 0 ? HEAP32[i4 >> 2] | 0 : i4) >> 0] | 0) == 40) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i13, 50526) | 0;
   HEAP32[i7 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i7 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i7 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i13 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i14);
   i1 = HEAP8[i8 + 11 >> 0] | 0;
   i16 = i1 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i7, i16 ? HEAP32[i8 >> 2] | 0 : i8, i16 ? HEAP32[i8 + 4 >> 2] | 0 : i1 & 255) | 0;
   HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
   HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i7 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 51948) | 0;
   HEAP32[i10 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i10 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i10 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i6 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i1 = HEAP32[i9 >> 2] | 0;
   i2 = i1 + -24 | 0;
   i3 = i2 + 11 | 0;
   if ((HEAP8[i3 >> 0] | 0) < 0) {
    i16 = HEAP32[i2 >> 2] | 0;
    HEAP8[i11 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i16, i11);
    HEAP32[i1 + -20 >> 2] = 0;
   } else {
    HEAP8[i11 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i11);
    HEAP8[i3 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
   HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i2 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i2 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i10 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i4, 0, 50524) | 0;
   HEAP32[i10 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i10 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
   HEAP32[i10 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i4 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i1 = HEAP32[i9 >> 2] | 0;
   i2 = i1 + -12 | 0;
   i3 = i2 + 11 | 0;
   if ((HEAP8[i3 >> 0] | 0) < 0) {
    i16 = HEAP32[i2 >> 2] | 0;
    HEAP8[i11 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i16, i11);
    HEAP32[i1 + -8 >> 2] = 0;
   } else {
    HEAP8[i11 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i11);
    HEAP8[i3 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
   HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i2 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i2 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i10 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  } else {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i13, 50558) | 0;
   HEAP32[i7 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i7 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i7 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i13 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i14);
   i1 = HEAP8[i8 + 11 >> 0] | 0;
   i16 = i1 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i7, i16 ? HEAP32[i8 >> 2] | 0 : i8, i16 ? HEAP32[i8 + 4 >> 2] | 0 : i1 & 255) | 0;
   HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
   HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i7 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 51948) | 0;
   HEAP32[i10 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i10 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i10 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i6 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i1 = HEAP32[i9 >> 2] | 0;
   i2 = i1 + -24 | 0;
   i3 = i2 + 11 | 0;
   if ((HEAP8[i3 >> 0] | 0) < 0) {
    i16 = HEAP32[i2 >> 2] | 0;
    HEAP8[i11 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i16, i11);
    HEAP32[i1 + -20 >> 2] = 0;
   } else {
    HEAP8[i11 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i11);
    HEAP8[i3 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
   HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i2 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i2 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i10 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   i1 = HEAP32[i9 >> 2] | 0;
   i2 = i1 + -12 | 0;
   i3 = i2 + 11 | 0;
   if ((HEAP8[i3 >> 0] | 0) < 0) {
    i16 = HEAP32[i2 >> 2] | 0;
    HEAP8[i11 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i16, i11);
    HEAP32[i1 + -8 >> 2] = 0;
   } else {
    HEAP8[i11 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i11);
    HEAP8[i3 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
   HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i2 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
   HEAP32[i2 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break L11;
    HEAP32[i4 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
  } while (0);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i14);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i13);
  i1 = i12;
 }
 STACKTOP = i15;
 return i1 | 0;
}

function _ar2Tracking(i21, i25, i16, i26, i24) {
 i21 = i21 | 0;
 i25 = i25 | 0;
 i16 = i16 | 0;
 i26 = i26 | 0;
 i24 = i24 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i27 = 0, i28 = 0, d29 = 0.0;
 i27 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i17 = i27;
 i18 = i27 + 40 | 0;
 i19 = i27 + 32 | 0;
 L1 : do if ((i21 | 0) != 0 & (i25 | 0) != 0 & (i16 | 0) != 0 & (i26 | 0) != 0 & (i24 | 0) != 0) {
  i23 = i25 + 152 | 0;
  if ((HEAP32[i23 >> 2] | 0) < 1) i1 = -2; else {
   HEAPF32[i24 >> 2] = 0.0;
   i2 = i25 + 4 | 0;
   i22 = i25 + 8 | 0;
   i3 = i25 + 56 | 0;
   i4 = i25 + 104 | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (HEAP32[i2 >> 2] | 0)) break;
    _arUtilMatMulf(i22, (HEAP32[i25 >> 2] | 0) + (i1 * 112 | 0) + 12 | 0, i21 + 48 + (i1 * 48 | 0) | 0) | 0;
    if ((HEAP32[i23 >> 2] | 0) > 1 ? (_arUtilMatMulf(i3, (HEAP32[i25 >> 2] | 0) + (i1 * 112 | 0) + 12 | 0, i21 + 528 + (i1 * 48 | 0) | 0) | 0, (HEAP32[i23 >> 2] | 0) > 2) : 0) _arUtilMatMulf(i4, (HEAP32[i25 >> 2] | 0) + (i1 * 112 | 0) + 12 | 0, i21 + 1008 + (i1 * 48 | 0) | 0) | 0;
    i1 = i1 + 1 | 0;
   }
   if ((HEAP32[i21 >> 2] | 0) == 1) {
    i9 = i21 + 12 | 0;
    i10 = i21 + 2672 | 0;
    i6 = i21 + 7496 | 0;
    _extractVisibleFeatures(HEAP32[i9 >> 2] | 0, i21 + 48 | 0, i25, i10, i6);
    i7 = i21 + 4 | 0;
    i8 = i21 + 8 | 0;
   } else {
    i7 = i21 + 4 | 0;
    i8 = i21 + 8 | 0;
    i10 = i21 + 2672 | 0;
    i6 = i21 + 7496 | 0;
    _extractVisibleFeaturesHomography(HEAP32[i7 >> 2] | 0, HEAP32[i8 >> 2] | 0, i21 + 48 | 0, i25, i10, i6);
    i9 = i21 + 12 | 0;
   }
   i11 = i21 + 36 | 0;
   i12 = i21 + 13280 | 0;
   i13 = i25 + 156 | 0;
   i14 = i21 + 1488 | 0;
   i15 = i21 + 40 | 0;
   i20 = 0;
   i1 = i10;
   i2 = 0;
   while (1) {
    if ((i2 | 0) >= (HEAP32[i11 >> 2] | 0)) break;
    i5 = 0;
    i4 = i20;
    i3 = i1;
    while (1) {
     if ((i5 | 0) >= (HEAP32[i12 >> 2] | 0)) break;
     if ((i2 | 0) == (HEAP32[i11 >> 2] | 0)) break;
     i1 = _ar2SelectTemplate(i3, i13, i4, i14, HEAP32[i7 >> 2] | 0, HEAP32[i8 >> 2] | 0) | 0;
     if ((i1 | 0) < 0) {
      if ((i3 | 0) != (i10 | 0)) break;
      i1 = _ar2SelectTemplate(i6, i13, i4, i14, HEAP32[i7 >> 2] | 0, HEAP32[i8 >> 2] | 0) | 0;
      if ((i1 | 0) < 0) {
       i3 = i6;
       break;
      } else i3 = i6;
     }
     i28 = i3 + (i1 * 24 | 0) | 0;
     HEAP32[i17 + (i5 << 2) >> 2] = i28;
     HEAP32[i21 + 1488 + (i4 << 3) >> 2] = HEAP32[i3 + (i1 * 24 | 0) + 16 >> 2];
     HEAP32[i21 + 1488 + (i4 << 3) + 4 >> 2] = HEAP32[i3 + (i1 * 24 | 0) + 20 >> 2];
     HEAP32[i21 + 13284 + (i5 * 52 | 0) >> 2] = i21;
     HEAP32[i21 + 13284 + (i5 * 52 | 0) + 4 >> 2] = i25;
     HEAP32[i21 + 13284 + (i5 * 52 | 0) + 8 >> 2] = i28;
     HEAP32[i21 + 13284 + (i5 * 52 | 0) + 12 >> 2] = i16;
     _threadStartSignal(HEAP32[i21 + 13700 + (i5 << 2) >> 2] | 0) | 0;
     i1 = i4 + 1 | 0;
     i5 = i5 + 1 | 0;
     i4 = (i1 | 0) == 5 ? i20 : i1;
     i2 = i2 + 1 | 0;
    }
    if (!i5) break;
    i4 = 0;
    i1 = i20;
    while (1) {
     if ((i4 | 0) == (i5 | 0)) break;
     _threadEndWait(HEAP32[i21 + 13700 + (i4 << 2) >> 2] | 0) | 0;
     if ((HEAP32[i21 + 13284 + (i4 * 52 | 0) + 48 >> 2] | 0) == 0 ? +HEAPF32[i21 + 13284 + (i4 * 52 | 0) + 24 >> 2] > +HEAPF32[i15 >> 2] : 0) {
      if ((HEAP32[i21 >> 2] | 0) == 1) {
       i28 = HEAP32[i9 >> 2] | 0;
       _arParamObserv2Ideal(i28 + 104 | 0, +HEAPF32[i21 + 13284 + (i4 * 52 | 0) + 28 >> 2], +HEAPF32[i21 + 13284 + (i4 * 52 | 0) + 32 >> 2], i18, i19, HEAP32[i28 + 176 >> 2] | 0) | 0;
       HEAPF32[i21 + 1872 + (i1 << 3) >> 2] = +HEAPF64[i18 >> 3];
       HEAPF32[i21 + 1872 + (i1 << 3) + 4 >> 2] = +HEAPF64[i19 >> 3];
      } else {
       HEAP32[i21 + 1872 + (i1 << 3) >> 2] = HEAP32[i21 + 13284 + (i4 * 52 | 0) + 28 >> 2];
       HEAP32[i21 + 1872 + (i1 << 3) + 4 >> 2] = HEAP32[i21 + 13284 + (i4 * 52 | 0) + 32 >> 2];
      }
      HEAP32[i21 + 2192 + (i1 * 12 | 0) >> 2] = HEAP32[i21 + 13284 + (i4 * 52 | 0) + 36 >> 2];
      HEAP32[i21 + 2192 + (i1 * 12 | 0) + 4 >> 2] = HEAP32[i21 + 13284 + (i4 * 52 | 0) + 40 >> 2];
      HEAP32[i21 + 2192 + (i1 * 12 | 0) + 8 >> 2] = HEAP32[i21 + 13284 + (i4 * 52 | 0) + 44 >> 2];
      i28 = HEAP32[i17 + (i4 << 2) >> 2] | 0;
      HEAP32[i21 + 1488 + (i1 << 3) >> 2] = HEAP32[i28 + 16 >> 2];
      HEAP32[i21 + 1488 + (i1 << 3) + 4 >> 2] = HEAP32[i28 + 20 >> 2];
      HEAP32[i21 + 12320 + (i1 * 24 | 0) >> 2] = HEAP32[i28 >> 2];
      HEAP32[i21 + 12320 + (i1 * 24 | 0) + 4 >> 2] = HEAP32[i28 + 4 >> 2];
      HEAP32[i21 + 12320 + (i1 * 24 | 0) + 8 >> 2] = HEAP32[i28 + 8 >> 2];
      HEAP32[i21 + 12320 + (i1 * 24 | 0) + 12 >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
    i20 = i1;
    i1 = i3;
   }
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i20 | 0)) break;
    i28 = i25 + 156 + (i1 * 24 | 0) | 0;
    i19 = i21 + 12320 + (i1 * 24 | 0) | 0;
    HEAP32[i28 >> 2] = HEAP32[i19 >> 2];
    HEAP32[i28 + 4 >> 2] = HEAP32[i19 + 4 >> 2];
    HEAP32[i28 + 8 >> 2] = HEAP32[i19 + 8 >> 2];
    HEAP32[i28 + 12 >> 2] = HEAP32[i19 + 12 >> 2];
    HEAP32[i28 + 16 >> 2] = HEAP32[i19 + 16 >> 2];
    HEAP32[i28 + 20 >> 2] = HEAP32[i19 + 20 >> 2];
    i1 = i1 + 1 | 0;
   }
   HEAP32[i25 + 156 + (i20 * 24 | 0) + 12 >> 2] = -1;
   i1 = (i20 | 0) < 3;
   if ((HEAP32[i21 >> 2] | 0) == 1) {
    if (i1) {
     HEAP32[i23 >> 2] = 0;
     i1 = -3;
     break;
    }
    i2 = i21 + 16 | 0;
    i3 = i21 + 1872 | 0;
    i4 = i21 + 2192 | 0;
    d29 = +_ar2GetTransMat(HEAP32[i2 >> 2] | 0, i22, i3, i4, i20, i26, 0);
    HEAPF32[i24 >> 2] = d29;
    i1 = i21 + 44 | 0;
    if ((((d29 > +HEAPF32[i1 >> 2] ? (_icpSetInlierProbability(HEAP32[i2 >> 2] | 0, .800000011920929) | 0, d29 = +_ar2GetTransMat(HEAP32[i2 >> 2] | 0, i26, i3, i4, i20, i26, 1), HEAPF32[i24 >> 2] = d29, d29 > +HEAPF32[i1 >> 2]) : 0) ? (_icpSetInlierProbability(HEAP32[i2 >> 2] | 0, .6000000238418579) | 0, d29 = +_ar2GetTransMat(HEAP32[i2 >> 2] | 0, i26, i3, i4, i20, i26, 1), HEAPF32[i24 >> 2] = d29, d29 > +HEAPF32[i1 >> 2]) : 0) ? (_icpSetInlierProbability(HEAP32[i2 >> 2] | 0, .4000000059604645) | 0, d29 = +_ar2GetTransMat(HEAP32[i2 >> 2] | 0, i26, i3, i4, i20, i26, 1), HEAPF32[i24 >> 2] = d29, d29 > +HEAPF32[i1 >> 2]) : 0) ? (_icpSetInlierProbability(HEAP32[i2 >> 2] | 0, 0.0) | 0, d29 = +_ar2GetTransMat(HEAP32[i2 >> 2] | 0, i26, i3, i4, i20, i26, 1), HEAPF32[i24 >> 2] = d29, d29 > +HEAPF32[i1 >> 2]) : 0) {
     HEAP32[i23 >> 2] = 0;
     i1 = -4;
     break;
    }
   } else {
    if (i1) {
     HEAP32[i23 >> 2] = 0;
     i1 = -3;
     break;
    }
    i2 = i21 + 1872 | 0;
    i3 = i21 + 2192 | 0;
    d29 = +_ar2GetTransMatHomography(i22, i2, i3, i20, i26, 0, 1.0);
    HEAPF32[i24 >> 2] = d29;
    i1 = i21 + 44 | 0;
    if ((((d29 > +HEAPF32[i1 >> 2] ? (d29 = +_ar2GetTransMatHomography(i26, i2, i3, i20, i26, 1, .800000011920929), HEAPF32[i24 >> 2] = d29, d29 > +HEAPF32[i1 >> 2]) : 0) ? (d29 = +_ar2GetTransMatHomography(i26, i2, i3, i20, i26, 1, .6000000238418579), HEAPF32[i24 >> 2] = d29, d29 > +HEAPF32[i1 >> 2]) : 0) ? (d29 = +_ar2GetTransMatHomography(i26, i2, i3, i20, i26, 1, .4000000059604645), HEAPF32[i24 >> 2] = d29, d29 > +HEAPF32[i1 >> 2]) : 0) ? (d29 = +_ar2GetTransMatHomography(i26, i2, i3, i20, i26, 1, 0.0), HEAPF32[i24 >> 2] = d29, d29 > +HEAPF32[i1 >> 2]) : 0) {
     HEAP32[i23 >> 2] = 0;
     i1 = -4;
     break;
    }
   }
   HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + 1;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 4) break;
     HEAP32[i25 + 104 + (i1 << 4) + (i2 << 2) >> 2] = HEAP32[i25 + 56 + (i1 << 4) + (i2 << 2) >> 2];
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 1 | 0;
   }
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 4) break;
     HEAP32[i25 + 56 + (i1 << 4) + (i2 << 2) >> 2] = HEAP32[i25 + 8 + (i1 << 4) + (i2 << 2) >> 2];
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 1 | 0;
   }
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) {
     i1 = 0;
     break L1;
    }
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 4) break;
     HEAP32[i25 + 8 + (i1 << 4) + (i2 << 2) >> 2] = HEAP32[i26 + (i1 << 4) + (i2 << 2) >> 2];
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 1 | 0;
   }
  }
 } else i1 = -1; while (0);
 STACKTOP = i27;
 return i1 | 0;
}

function _jpgread(i12, i18, i19, i20, i21) {
 i12 = i12 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i22 = 0, i23 = 0, i24 = 0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 800 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(800);
 i16 = i24 + 504 | 0;
 i15 = i24 + 496 | 0;
 i14 = i24 + 488 | 0;
 i17 = 4;
 i23 = _malloc(40) | 0;
 HEAP32[i23 >> 2] = 0;
 i22 = i24 + 24 | 0;
 i3 = i24 + 512 | 0;
 i13 = i24;
 _memset(i22 | 0, 0, 464) | 0;
 __THREW__ = 0;
 i4 = invoke_ii(63, i3 | 0) | 0;
 i1 = __THREW__;
 __THREW__ = 0;
 if ((i1 | 0) != 0 & (threwValue | 0) != 0) {
  i2 = _testSetjmp(HEAP32[i1 >> 2] | 0, i23 | 0, i17 | 0) | 0;
  if (!i2) _longjmp(i1 | 0, threwValue | 0);
  setTempRet0(threwValue | 0);
 } else i2 = -1;
 i1 = getTempRet0() | 0;
 if ((i2 | 0) != 1) {
  HEAP32[i22 >> 2] = i4;
  HEAP32[i3 >> 2] = 112;
  i23 = _saveSetjmp(i3 + 132 | 0, 1, i23 | 0, i17 | 0) | 0;
  i17 = getTempRet0() | 0;
  __THREW__ = 0;
  i1 = __THREW__;
  __THREW__ = 0;
  if ((i1 | 0) != 0 & (threwValue | 0) != 0) {
   i2 = _testSetjmp(HEAP32[i1 >> 2] | 0, i23 | 0, i17 | 0) | 0;
   if (!i2) _longjmp(i1 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i2 = -1;
  i1 = getTempRet0() | 0;
  if ((i2 | 0) == 1) i2 = i1; else i2 = 0;
 } else i2 = i1;
 L4 : while (1) {
  if (i2 | 0) {
   __THREW__ = 0;
   invoke_vi(113, i22 | 0);
   i1 = __THREW__;
   __THREW__ = 0;
   if ((i1 | 0) != 0 & (threwValue | 0) != 0) {
    i2 = _testSetjmp(HEAP32[i1 >> 2] | 0, i23 | 0, i17 | 0) | 0;
    if (!i2) _longjmp(i1 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else i2 = -1;
   i1 = getTempRet0() | 0;
   if ((i2 | 0) == 1) {
    i2 = i1;
    continue;
   }
   __THREW__ = 0;
   invoke_viiii(8, 0, 3, 19590, i14 | 0);
   i1 = __THREW__;
   __THREW__ = 0;
   if ((i1 | 0) != 0 & (threwValue | 0) != 0) {
    i2 = _testSetjmp(HEAP32[i1 >> 2] | 0, i23 | 0, i17 | 0) | 0;
    if (!i2) _longjmp(i1 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else i2 = -1;
   i1 = getTempRet0() | 0;
   if ((i2 | 0) == 1) {
    i2 = i1;
    continue;
   } else {
    i2 = 7;
    break;
   }
  }
  __THREW__ = 0;
  invoke_viii(1, i22 | 0, 62, 464);
  i1 = __THREW__;
  __THREW__ = 0;
  if ((i1 | 0) != 0 & (threwValue | 0) != 0) {
   i2 = _testSetjmp(HEAP32[i1 >> 2] | 0, i23 | 0, i17 | 0) | 0;
   if (!i2) _longjmp(i1 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i2 = -1;
  i1 = getTempRet0() | 0;
  if ((i2 | 0) == 1) {
   i2 = i1;
   continue;
  }
  __THREW__ = 0;
  invoke_vii(39, i22 | 0, i12 | 0);
  i1 = __THREW__;
  __THREW__ = 0;
  if ((i1 | 0) != 0 & (threwValue | 0) != 0) {
   i2 = _testSetjmp(HEAP32[i1 >> 2] | 0, i23 | 0, i17 | 0) | 0;
   if (!i2) _longjmp(i1 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i2 = -1;
  i1 = getTempRet0() | 0;
  if ((i2 | 0) == 1) {
   i2 = i1;
   continue;
  }
  __THREW__ = 0;
  i2 = invoke_iii(19, i22 | 0, 1) | 0;
  i1 = __THREW__;
  __THREW__ = 0;
  if ((i1 | 0) != 0 & (threwValue | 0) != 0) {
   i3 = _testSetjmp(HEAP32[i1 >> 2] | 0, i23 | 0, i17 | 0) | 0;
   if (!i3) _longjmp(i1 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i3 = -1;
  i1 = getTempRet0() | 0;
  if ((i3 | 0) == 1) {
   i2 = i1;
   continue;
  }
  if ((i2 | 0) != 1) {
   __THREW__ = 0;
   invoke_viiii(8, 0, 3, 19616, i15 | 0);
   i1 = __THREW__;
   __THREW__ = 0;
   if ((i1 | 0) != 0 & (threwValue | 0) != 0) {
    i2 = _testSetjmp(HEAP32[i1 >> 2] | 0, i23 | 0, i17 | 0) | 0;
    if (!i2) _longjmp(i1 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else i2 = -1;
   i1 = getTempRet0() | 0;
   if ((i2 | 0) == 1) {
    i2 = i1;
    continue;
   }
   __THREW__ = 0;
   invoke_vi(113, i22 | 0);
   i1 = __THREW__;
   __THREW__ = 0;
   if ((i1 | 0) != 0 & (threwValue | 0) != 0) {
    i2 = _testSetjmp(HEAP32[i1 >> 2] | 0, i23 | 0, i17 | 0) | 0;
    if (!i2) _longjmp(i1 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else i2 = -1;
   i1 = getTempRet0() | 0;
   if ((i2 | 0) == 1) {
    i2 = i1;
    continue;
   } else {
    i2 = 14;
    break;
   }
  }
  __THREW__ = 0;
  invoke_ii(64, i22 | 0) | 0;
  i1 = __THREW__;
  __THREW__ = 0;
  if ((i1 | 0) != 0 & (threwValue | 0) != 0) {
   i2 = _testSetjmp(HEAP32[i1 >> 2] | 0, i23 | 0, i17 | 0) | 0;
   if (!i2) _longjmp(i1 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i2 = -1;
  i1 = getTempRet0() | 0;
  if ((i2 | 0) == 1) {
   i2 = i1;
   continue;
  }
  i9 = i22 + 36 | 0;
  i10 = i22 + 28 | 0;
  i8 = Math_imul(HEAP32[i10 >> 2] | 0, HEAP32[i9 >> 2] | 0) | 0;
  i11 = i22 + 32 | 0;
  i1 = Math_imul(i8, HEAP32[i11 >> 2] | 0) | 0;
  __THREW__ = 0;
  i1 = invoke_ii(65, i1 | 0) | 0;
  i2 = __THREW__;
  __THREW__ = 0;
  if ((i2 | 0) != 0 & (threwValue | 0) != 0) {
   i3 = _testSetjmp(HEAP32[i2 >> 2] | 0, i23 | 0, i17 | 0) | 0;
   if (!i3) _longjmp(i2 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i3 = -1;
  i2 = getTempRet0() | 0;
  if ((i3 | 0) == 1) continue;
  if (!i1) {
   __THREW__ = 0;
   invoke_viiii(8, 0, 3, 20581, i16 | 0);
   i1 = __THREW__;
   __THREW__ = 0;
   if ((i1 | 0) != 0 & (threwValue | 0) != 0) {
    i2 = _testSetjmp(HEAP32[i1 >> 2] | 0, i23 | 0, i17 | 0) | 0;
    if (!i2) _longjmp(i1 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else i2 = -1;
   i1 = getTempRet0() | 0;
   if ((i2 | 0) == 1) {
    i2 = i1;
    continue;
   }
   __THREW__ = 0;
   invoke_vi(113, i22 | 0);
   i1 = __THREW__;
   __THREW__ = 0;
   if ((i1 | 0) != 0 & (threwValue | 0) != 0) {
    i2 = _testSetjmp(HEAP32[i1 >> 2] | 0, i23 | 0, i17 | 0) | 0;
    if (!i2) _longjmp(i1 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else i2 = -1;
   i1 = getTempRet0() | 0;
   if ((i2 | 0) == 1) {
    i2 = i1;
    continue;
   } else {
    i2 = 20;
    break;
   }
  }
  i6 = i22 + 140 | 0;
  i7 = i22 + 116 | 0;
  i5 = 0;
  while (1) {
   if ((HEAP32[i6 >> 2] | 0) >>> 0 >= (HEAP32[i7 >> 2] | 0) >>> 0) break;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 5) break;
    i4 = i1 + (Math_imul(i2 + i5 | 0, i8) | 0) | 0;
    HEAP32[i13 + (i2 << 2) >> 2] = i4;
    i2 = i2 + 1 | 0;
   }
   __THREW__ = 0;
   i3 = invoke_iiii(26, i22 | 0, i13 | 0, 5) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if ((i2 | 0) != 0 & (threwValue | 0) != 0) {
    i4 = _testSetjmp(HEAP32[i2 >> 2] | 0, i23 | 0, i17 | 0) | 0;
    if (!i4) _longjmp(i2 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else i4 = -1;
   i2 = getTempRet0() | 0;
   if ((i4 | 0) == 1) continue L4;
   i5 = i3 + i5 | 0;
  }
  __THREW__ = 0;
  invoke_ii(66, i22 | 0) | 0;
  i2 = __THREW__;
  __THREW__ = 0;
  if ((i2 | 0) != 0 & (threwValue | 0) != 0) {
   i3 = _testSetjmp(HEAP32[i2 >> 2] | 0, i23 | 0, i17 | 0) | 0;
   if (!i3) _longjmp(i2 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i3 = -1;
  i2 = getTempRet0() | 0;
  if ((i3 | 0) == 1) continue;
  __THREW__ = 0;
  invoke_vi(113, i22 | 0);
  i2 = __THREW__;
  __THREW__ = 0;
  if ((i2 | 0) != 0 & (threwValue | 0) != 0) {
   i3 = _testSetjmp(HEAP32[i2 >> 2] | 0, i23 | 0, i17 | 0) | 0;
   if (!i3) _longjmp(i2 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i3 = -1;
  i2 = getTempRet0() | 0;
  if ((i3 | 0) != 1) {
   i2 = 30;
   break;
  }
 }
 L33 : do if ((i2 | 0) == 7) i1 = 0; else if ((i2 | 0) == 14) i1 = 0; else if ((i2 | 0) == 20) i1 = 0; else if ((i2 | 0) == 30) {
  if (i18 | 0) HEAP32[i18 >> 2] = HEAP32[i10 >> 2];
  if (i19 | 0) HEAP32[i19 >> 2] = HEAP32[i11 >> 2];
  if (i20 | 0) HEAP32[i20 >> 2] = HEAP32[i9 >> 2];
  if (i21) {
   i2 = HEAP8[i22 + 286 >> 0] | 0;
   switch (i2 << 24 >> 24) {
   case 1:
    {
     i2 = HEAP16[i22 + 288 >> 1] | 0;
     if (i2 << 16 >> 16 == (HEAP16[i22 + 290 >> 1] | 0)) {
      HEAPF32[i21 >> 2] = +(i2 & 65535);
      break L33;
     }
     break;
    }
   case 2:
    {
     i2 = HEAP16[i22 + 288 >> 1] | 0;
     if (i2 << 16 >> 16 == (HEAP16[i22 + 290 >> 1] | 0)) {
      HEAPF32[i21 >> 2] = +(i2 & 65535) * 2.5399999618530273;
      break L33;
     }
     break;
    }
   default:
    if (((i2 & 255) > 2 ? (HEAP16[i22 + 288 >> 1] | 0) == 0 : 0) ? (HEAP16[i22 + 290 >> 1] | 0) == 0 : 0) {
     HEAPF32[i21 >> 2] = +(i2 & 255);
     break L33;
    }
   }
   HEAPF32[i21 >> 2] = 0.0;
  }
 } while (0);
 _free(i23 | 0);
 STACKTOP = i24;
 return i1 | 0;
}

function __ZNSt3__213__nth_elementIRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEvT0_S9_S9_T_(i21, i1, i25, i26) {
 i21 = i21 | 0;
 i1 = i1 | 0;
 i25 = i25 | 0;
 i26 = i26 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, d10 = 0.0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i24 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0;
 i35 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i20 = i35 + 40 | 0;
 i19 = i35 + 36 | 0;
 i18 = i35 + 32 | 0;
 i27 = i35 + 28 | 0;
 i28 = i35 + 24 | 0;
 i29 = i35 + 20 | 0;
 i31 = i35 + 16 | 0;
 i32 = i35 + 12 | 0;
 i33 = i35 + 8 | 0;
 i22 = i35 + 4 | 0;
 i23 = i35;
 i17 = HEAP32[i1 >> 2] | 0;
 L1 : while (1) {
  i16 = HEAP32[i25 >> 2] | 0;
  i9 = i16;
  i15 = i16 + -8 | 0;
  i12 = i15;
  i14 = i16 + -4 | 0;
  if ((i17 | 0) == (i16 | 0)) break;
  i13 = HEAP32[i21 >> 2] | 0;
  i6 = i13;
  L4 : while (1) {
   i1 = i9 - i6 | 0;
   i2 = i1 >> 3;
   switch (i2 | 0) {
   case 1:
   case 0:
    break L1;
   case 2:
    {
     i34 = 5;
     break L1;
    }
   case 3:
    {
     i34 = 10;
     break L1;
    }
   default:
    {}
   }
   if ((i1 | 0) < 64) {
    i34 = 12;
    break L1;
   }
   i2 = i2 >>> 1;
   i11 = i13 + (i2 << 3) | 0;
   HEAP32[i33 >> 2] = i6;
   HEAP32[i22 >> 2] = i11;
   HEAP32[i23 >> 2] = i12;
   HEAP32[i18 >> 2] = HEAP32[i33 >> 2];
   HEAP32[i19 >> 2] = HEAP32[i22 >> 2];
   HEAP32[i20 >> 2] = HEAP32[i23 >> 2];
   i1 = __ZNSt3__27__sort3IRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEjT0_S9_S9_T_(i18, i19, i20, i26) | 0;
   i7 = i6;
   d5 = +HEAPF32[i11 >> 2];
   d4 = +HEAPF32[i7 >> 2];
   if (d5 < d4) {
    i34 = 53;
    break;
   }
   i3 = i13 + (i2 << 3) + 4 | 0;
   if (!(d4 < d5) ? (HEAP32[i3 >> 2] | 0) >>> 0 < (HEAP32[i7 + 4 >> 2] | 0) >>> 0 : 0) {
    i34 = 53;
    break;
   }
   i2 = i15;
   while (1) {
    i8 = i2 + -8 | 0;
    if ((i8 | 0) == (i7 | 0)) break;
    d4 = +HEAPF32[i8 >> 2];
    if (d5 < d4) {
     i34 = 47;
     break L4;
    }
    if (!(d4 < d5) ? (i24 = HEAP32[i2 + -4 >> 2] | 0, (HEAP32[i3 >> 2] | 0) >>> 0 < i24 >>> 0) : 0) {
     i34 = 51;
     break L4;
    }
    i2 = i8;
   }
   i3 = i7 + 8 | 0;
   i1 = i3;
   d10 = +HEAPF32[i15 >> 2];
   d5 = +HEAPF32[i13 >> 2];
   do if (!(d10 < d5)) {
    if (!(d5 < d10)) {
     i2 = i13 + 4 | 0;
     if ((HEAP32[i14 >> 2] | 0) >>> 0 < (HEAP32[i2 >> 2] | 0) >>> 0) break;
    } else i2 = i13 + 4 | 0;
    while (1) {
     if ((i3 | 0) == (i15 | 0)) break L1;
     d4 = +HEAPF32[i3 >> 2];
     if (d4 < d5) {
      i34 = 25;
      break;
     }
     if (!(d5 < d4) ? (i30 = HEAP32[i3 + 4 >> 2] | 0, i30 >>> 0 < (HEAP32[i2 >> 2] | 0) >>> 0) : 0) {
      i34 = 28;
      break;
     }
     i3 = i3 + 8 | 0;
    }
    if ((i34 | 0) == 25) {
     i34 = 0;
     i2 = i3 + 4 | 0;
     i1 = i2;
     i2 = HEAP32[i2 >> 2] | 0;
    } else if ((i34 | 0) == 28) {
     i34 = 0;
     i1 = i3 + 4 | 0;
     i2 = i30;
    }
    HEAPF32[i3 >> 2] = d10;
    HEAPF32[i15 >> 2] = d4;
    HEAP32[i1 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i14 >> 2] = i2;
    i1 = i3 + 8 | 0;
   } while (0);
   if ((i15 | 0) == (i1 | 0)) break L1;
   i7 = i13 + 4 | 0;
   i2 = i12;
   while (1) {
    d5 = +HEAPF32[i13 >> 2];
    i6 = i1;
    while (1) {
     i1 = i6;
     d4 = +HEAPF32[i1 >> 2];
     if (d4 < d5) break;
     if (!(d5 < d4) ? (HEAP32[i1 + 4 >> 2] | 0) >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0 : 0) break;
     i6 = i1 + 8 | 0;
    }
    i3 = i6;
    while (1) {
     i1 = i2 + -8 | 0;
     d4 = +HEAPF32[i1 >> 2];
     if (!(d4 < d5)) {
      if (d5 < d4) break;
      if ((HEAP32[i2 + -4 >> 2] | 0) >>> 0 >= (HEAP32[i7 >> 2] | 0) >>> 0) break;
     }
     i2 = i1;
    }
    if (i1 >>> 0 <= i3 >>> 0) break;
    i8 = HEAP32[i6 >> 2] | 0;
    HEAPF32[i6 >> 2] = d4;
    HEAP32[i1 >> 2] = i8;
    i8 = i3 + 4 | 0;
    i2 = i2 + -4 | 0;
    i11 = HEAP32[i8 >> 2] | 0;
    HEAP32[i8 >> 2] = HEAP32[i2 >> 2];
    HEAP32[i2 >> 2] = i11;
    i2 = i1;
    i1 = i3 + 8 | 0;
   }
   i1 = i6;
   if (i17 >>> 0 < i1 >>> 0) break L1;
   HEAP32[i21 >> 2] = i6;
   i13 = i1;
  }
  if ((i34 | 0) == 47) {
   i3 = i2 + -4 | 0;
   i2 = i3;
   i3 = HEAP32[i3 >> 2] | 0;
   i34 = 52;
  } else if ((i34 | 0) == 51) {
   i2 = i2 + -4 | 0;
   i3 = i24;
   i34 = 52;
  } else if ((i34 | 0) == 53) {
   i34 = 0;
   i3 = i15;
   i14 = i6;
  }
  if ((i34 | 0) == 52) {
   i34 = 0;
   i14 = i6;
   i13 = HEAP32[i6 >> 2] | 0;
   HEAPF32[i6 >> 2] = d4;
   HEAP32[i8 >> 2] = i13;
   i13 = i14 + 4 | 0;
   i15 = HEAP32[i13 >> 2] | 0;
   HEAP32[i13 >> 2] = i3;
   HEAP32[i2 >> 2] = i15;
   i1 = i1 + 1 | 0;
   i3 = i8;
  }
  i2 = i14 + 8 | 0;
  i6 = i2;
  if (i2 >>> 0 < i3 >>> 0) {
   i12 = i11;
   i2 = i6;
   while (1) {
    i11 = i12;
    i9 = i11 + 4 | 0;
    d5 = +HEAPF32[i11 >> 2];
    while (1) {
     i6 = i2;
     d4 = +HEAPF32[i6 >> 2];
     if (!(d5 < d4)) {
      if (d4 < d5) break;
      if ((HEAP32[i9 >> 2] | 0) >>> 0 >= (HEAP32[i6 + 4 >> 2] | 0) >>> 0) break;
     }
     i2 = i6 + 8 | 0;
    }
    i8 = i2;
    while (1) {
     i7 = i3 + -8 | 0;
     d4 = +HEAPF32[i7 >> 2];
     if (d5 < d4) break;
     if (!(d4 < d5) ? (HEAP32[i9 >> 2] | 0) >>> 0 < (HEAP32[i3 + -4 >> 2] | 0) >>> 0 : 0) break;
     i3 = i7;
    }
    i6 = i7;
    if (i7 >>> 0 <= i8 >>> 0) break;
    i15 = HEAP32[i2 >> 2] | 0;
    HEAPF32[i2 >> 2] = d4;
    HEAP32[i7 >> 2] = i15;
    i15 = i8 + 4 | 0;
    i3 = i3 + -4 | 0;
    i2 = HEAP32[i15 >> 2] | 0;
    HEAP32[i15 >> 2] = HEAP32[i3 >> 2];
    HEAP32[i3 >> 2] = i2;
    i1 = i1 + 1 | 0;
    i3 = i6;
    i12 = (i11 | 0) == (i8 | 0) ? i6 : i12;
    i2 = i8 + 8 | 0;
   }
   i13 = i2;
   i11 = i12;
   i6 = i2;
  } else i13 = i2;
  i9 = i6;
  do if ((i11 | 0) != (i13 | 0)) {
   d4 = +HEAPF32[i13 >> 2];
   d5 = +HEAPF32[i11 >> 2];
   if (!(d4 < d5)) {
    if (d5 < d4) break;
    i7 = i13 + 4 | 0;
    i3 = HEAP32[i7 >> 2] | 0;
    i2 = i11 + 4 | 0;
    i8 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 >= i8 >>> 0) break;
   } else {
    i3 = i13 + 4 | 0;
    i8 = i11 + 4 | 0;
    i2 = i8;
    i7 = i3;
    i8 = HEAP32[i8 >> 2] | 0;
    i3 = HEAP32[i3 >> 2] | 0;
   }
   i15 = HEAP32[i6 >> 2] | 0;
   HEAPF32[i6 >> 2] = d5;
   HEAP32[i11 >> 2] = i15;
   HEAP32[i7 >> 2] = i8;
   HEAP32[i2 >> 2] = i3;
   i1 = i1 + 1 | 0;
  } while (0);
  if ((i17 | 0) == (i13 | 0)) break;
  L95 : do if (!i1) if (i17 >>> 0 < i13 >>> 0) {
   i1 = i14;
   while (1) {
    i2 = i1 + 8 | 0;
    if ((i2 | 0) == (i13 | 0)) break L1;
    d4 = +HEAPF32[i1 >> 2];
    d5 = +HEAPF32[i2 >> 2];
    if (d4 < d5) break L95;
    if (!(d5 < d4) ? (HEAP32[i1 + 4 >> 2] | 0) >>> 0 < (HEAP32[i1 + 12 >> 2] | 0) >>> 0 : 0) break L95;
    i1 = i2;
   }
  } else {
   i1 = i9;
   while (1) {
    i2 = i1 + 8 | 0;
    if ((i2 | 0) == (i16 | 0)) break L1;
    d4 = +HEAPF32[i1 >> 2];
    d5 = +HEAPF32[i2 >> 2];
    if (d4 < d5) break L95;
    if (!(d5 < d4) ? (HEAP32[i1 + 4 >> 2] | 0) >>> 0 < (HEAP32[i1 + 12 >> 2] | 0) >>> 0 : 0) break L95;
    i1 = i2;
   }
  } while (0);
  if (i17 >>> 0 < i13 >>> 0) HEAP32[i25 >> 2] = i6; else HEAP32[i21 >> 2] = i13 + 8;
 }
 do if ((i34 | 0) == 5) {
  HEAP32[i25 >> 2] = i15;
  d4 = +HEAPF32[i13 >> 2];
  d5 = +HEAPF32[i15 >> 2];
  if (!(d4 < d5)) {
   if (d5 < d4) break;
   i1 = i13 + 4 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   i3 = HEAP32[i14 >> 2] | 0;
   if (i2 >>> 0 >= i3 >>> 0) break;
  } else {
   i2 = i13 + 4 | 0;
   i1 = i2;
   i3 = HEAP32[i14 >> 2] | 0;
   i2 = HEAP32[i2 >> 2] | 0;
  }
  HEAPF32[i13 >> 2] = d5;
  HEAPF32[i15 >> 2] = d4;
  HEAP32[i1 >> 2] = i3;
  HEAP32[i14 >> 2] = i2;
 } else if ((i34 | 0) == 10) {
  HEAP32[i27 >> 2] = i6;
  HEAP32[i28 >> 2] = i6 + 8;
  HEAP32[i25 >> 2] = i15;
  HEAP32[i29 >> 2] = i15;
  HEAP32[i18 >> 2] = HEAP32[i27 >> 2];
  HEAP32[i19 >> 2] = HEAP32[i28 >> 2];
  HEAP32[i20 >> 2] = HEAP32[i29 >> 2];
  __ZNSt3__27__sort3IRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEjT0_S9_S9_T_(i18, i19, i20, i26) | 0;
 } else if ((i34 | 0) == 12) {
  HEAP32[i31 >> 2] = i6;
  HEAP32[i32 >> 2] = i16;
  HEAP32[i19 >> 2] = HEAP32[i31 >> 2];
  HEAP32[i20 >> 2] = HEAP32[i32 >> 2];
  __ZNSt3__216__selection_sortIRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEvT0_S9_T_(i19, i20, i26);
 } while (0);
 STACKTOP = i35;
 return;
}

function __ZN6vision32ComputeSubpixelHessianSameOctaveEPfS0_RKNS_5ImageES3_S3_ii(i1, i2, i6, i7, i10, i11, i12) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, i24 = 0, i25 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i13 = i16 + 20 | 0;
 i14 = i16 + 16 | 0;
 i15 = i16 + 12 | 0;
 i3 = i16 + 8 | 0;
 i4 = i16 + 4 | 0;
 i5 = i16;
 if ((i11 | 0) > 0 ? (i11 + 1 | 0) >>> 0 < (__ZNK6vision5Image5widthEv(i7) | 0) >>> 0 : 0) {
  i8 = i12 + -1 | 0;
  if ((i12 | 0) > 0 ? (i9 = i12 + 1 | 0, i9 >>> 0 < (__ZNK6vision5Image6heightEv(i7) | 0) >>> 0) : 0) {
   i17 = __ZNK6vision5Image5widthEv(i6) | 0;
   if ((i17 | 0) != (__ZNK6vision5Image5widthEv(i7) | 0)) {
    i17 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24261) | 0, 22571) | 0, 33655) | 0, 311) | 0, 33662) | 0, 23157) | 0;
    __ZNKSt3__28ios_base6getlocEv(i13, i17 + (HEAP32[(HEAP32[i17 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i18 = __ZNKSt3__26locale9use_facetERNS0_2idE(i13, 58792) | 0;
    i18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 28 >> 2] & 63](i18, 10) | 0;
    __ZNSt3__26localeD2Ev(i13);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i17, i18) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i17) | 0;
    _abort();
   }
   i18 = __ZNK6vision5Image5widthEv(i6) | 0;
   if ((i18 | 0) != (__ZNK6vision5Image5widthEv(i10) | 0)) {
    i18 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24660) | 0, 22571) | 0, 33655) | 0, 312) | 0, 33662) | 0, 23157) | 0;
    __ZNKSt3__28ios_base6getlocEv(i13, i18 + (HEAP32[(HEAP32[i18 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i17 = __ZNKSt3__26locale9use_facetERNS0_2idE(i13, 58792) | 0;
    i17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 63](i17, 10) | 0;
    __ZNSt3__26localeD2Ev(i13);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i18, i17) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i18) | 0;
    _abort();
   }
   i18 = __ZNK6vision5Image6heightEv(i6) | 0;
   if ((i18 | 0) != (__ZNK6vision5Image6heightEv(i7) | 0)) {
    i18 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24313) | 0, 22571) | 0, 33655) | 0, 313) | 0, 33662) | 0, 23157) | 0;
    __ZNKSt3__28ios_base6getlocEv(i13, i18 + (HEAP32[(HEAP32[i18 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i17 = __ZNKSt3__26locale9use_facetERNS0_2idE(i13, 58792) | 0;
    i17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 63](i17, 10) | 0;
    __ZNSt3__26localeD2Ev(i13);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i18, i17) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i18) | 0;
    _abort();
   }
   i18 = __ZNK6vision5Image6heightEv(i6) | 0;
   if ((i18 | 0) == (__ZNK6vision5Image6heightEv(i10) | 0)) {
    i24 = (__ZNK6vision5Image3getIfEEPKT_m(i6, i8) | 0) + (i11 << 2) | 0;
    i25 = (__ZNK6vision5Image3getIfEEPKT_m(i6, i12) | 0) + (i11 << 2) | 0;
    i13 = (__ZNK6vision5Image3getIfEEPKT_m(i6, i9) | 0) + (i11 << 2) | 0;
    i6 = (__ZNK6vision5Image3getIfEEPKT_m(i7, i12) | 0) + (i11 << 2) | 0;
    i18 = (__ZNK6vision5Image3getIfEEPKT_m(i10, i8) | 0) + (i11 << 2) | 0;
    i8 = (__ZNK6vision5Image3getIfEEPKT_m(i10, i12) | 0) + (i11 << 2) | 0;
    i17 = (__ZNK6vision5Image3getIfEEPKT_m(i10, i9) | 0) + (i11 << 2) | 0;
    __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii(i14, i15, i3, i4, i5, i7, i11, i12);
    d20 = +HEAPF32[i8 >> 2];
    d19 = +HEAPF32[i25 >> 2];
    d21 = d20 + (d19 - +HEAPF32[i6 >> 2] * 2.0);
    d23 = (+HEAPF32[i25 + -4 >> 2] - +HEAPF32[i25 + 4 >> 2] + (+HEAPF32[i8 + 4 >> 2] - +HEAPF32[i8 + -4 >> 2])) * .25;
    d22 = (+HEAPF32[i24 >> 2] - +HEAPF32[i13 >> 2] + (+HEAPF32[i17 >> 2] - +HEAPF32[i18 >> 2])) * .25;
    HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
    i18 = HEAP32[i5 >> 2] | 0;
    HEAP32[i1 + 4 >> 2] = i18;
    HEAPF32[i1 + 8 >> 2] = d23;
    HEAP32[i1 + 12 >> 2] = i18;
    HEAP32[i1 + 16 >> 2] = HEAP32[i4 >> 2];
    HEAPF32[i1 + 20 >> 2] = d22;
    HEAPF32[i1 + 24 >> 2] = d23;
    HEAPF32[i1 + 28 >> 2] = d22;
    HEAPF32[i1 + 32 >> 2] = d21;
    HEAPF32[i2 >> 2] = -+HEAPF32[i14 >> 2];
    HEAPF32[i2 + 4 >> 2] = -+HEAPF32[i15 >> 2];
    HEAPF32[i2 + 8 >> 2] = -((d20 - d19) * .5);
    STACKTOP = i16;
    return;
   } else {
    i25 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24712) | 0, 22571) | 0, 33655) | 0, 314) | 0, 33662) | 0, 23157) | 0;
    __ZNKSt3__28ios_base6getlocEv(i13, i25 + (HEAP32[(HEAP32[i25 >> 2] | 0) + -12 >> 2] | 0) | 0);
    i24 = __ZNKSt3__26locale9use_facetERNS0_2idE(i13, 58792) | 0;
    i24 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i24 >> 2] | 0) + 28 >> 2] & 63](i24, 10) | 0;
    __ZNSt3__26localeD2Ev(i13);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i25, i24) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i25) | 0;
    _abort();
   }
  }
  i25 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 23025) | 0, 22571) | 0, 33655) | 0, 310) | 0, 33662) | 0, 23084) | 0;
  __ZNKSt3__28ios_base6getlocEv(i13, i25 + (HEAP32[(HEAP32[i25 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i24 = __ZNKSt3__26locale9use_facetERNS0_2idE(i13, 58792) | 0;
  i24 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i24 >> 2] | 0) + 28 >> 2] & 63](i24, 10) | 0;
  __ZNSt3__26localeD2Ev(i13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i25, i24) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i25) | 0;
  _abort();
 }
 i25 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 22951) | 0, 22571) | 0, 33655) | 0, 309) | 0, 33662) | 0, 23009) | 0;
 __ZNKSt3__28ios_base6getlocEv(i13, i25 + (HEAP32[(HEAP32[i25 >> 2] | 0) + -12 >> 2] | 0) | 0);
 i24 = __ZNKSt3__26locale9use_facetERNS0_2idE(i13, 58792) | 0;
 i24 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i24 >> 2] | 0) + 28 >> 2] & 63](i24, 10) | 0;
 __ZNSt3__26localeD2Ev(i13);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i25, i24) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i25) | 0;
 _abort();
}

function __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri(i1, i2, i3, i6, i7, i8, i10, i5, i4, i12) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i12 = i12 | 0;
 var i9 = 0, i11 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i13 + 12 | 0;
 i11 = i13;
 if (i1) {
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 59024) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 63](i9, i2);
  i1 = HEAP32[i9 >> 2] | 0;
  HEAP8[i3 >> 0] = i1;
  HEAP8[i3 + 1 >> 0] = i1 >> 8;
  HEAP8[i3 + 2 >> 0] = i1 >> 16;
  HEAP8[i3 + 3 >> 0] = i1 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 63](i11, i2);
  i1 = i4 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i4 >> 2] | 0;
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i9);
   HEAP32[i4 + 4 >> 2] = 0;
   i1 = i4;
  } else {
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i4, i9);
   HEAP8[i1 >> 0] = 0;
   i1 = i4;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i4, 0);
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i11, i2);
  i1 = i5 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i5 >> 2] | 0;
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i9);
   HEAP32[i5 + 4 >> 2] = 0;
   i1 = i5;
  } else {
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i5, i9);
   HEAP8[i1 >> 0] = 0;
   i1 = i5;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i5, 0);
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP8[i6 >> 0] = i1;
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  HEAP8[i7 >> 0] = i1;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i11, i2);
  i1 = i8 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i8 >> 2] | 0;
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i9);
   HEAP32[i8 + 4 >> 2] = 0;
   i1 = i8;
  } else {
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i9);
   HEAP8[i1 >> 0] = 0;
   i1 = i8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i8, 0);
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i11, i2);
  i1 = i10 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i10 >> 2] | 0;
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i9);
   HEAP32[i10 + 4 >> 2] = 0;
   i1 = i10;
  } else {
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i10, i9);
   HEAP8[i1 >> 0] = 0;
   i1 = i10;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i10, 0);
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 } else {
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 59016) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 63](i9, i2);
  i1 = HEAP32[i9 >> 2] | 0;
  HEAP8[i3 >> 0] = i1;
  HEAP8[i3 + 1 >> 0] = i1 >> 8;
  HEAP8[i3 + 2 >> 0] = i1 >> 16;
  HEAP8[i3 + 3 >> 0] = i1 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 63](i11, i2);
  i1 = i4 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i4 >> 2] | 0;
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i9);
   HEAP32[i4 + 4 >> 2] = 0;
   i1 = i4;
  } else {
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i4, i9);
   HEAP8[i1 >> 0] = 0;
   i1 = i4;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i4, 0);
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i11, i2);
  i1 = i5 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i5 >> 2] | 0;
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i9);
   HEAP32[i5 + 4 >> 2] = 0;
   i1 = i5;
  } else {
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i5, i9);
   HEAP8[i1 >> 0] = 0;
   i1 = i5;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i5, 0);
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP8[i6 >> 0] = i1;
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  HEAP8[i7 >> 0] = i1;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i11, i2);
  i1 = i8 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i8 >> 2] | 0;
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i9);
   HEAP32[i8 + 4 >> 2] = 0;
   i1 = i8;
  } else {
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i9);
   HEAP8[i1 >> 0] = 0;
   i1 = i8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i8, 0);
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i11, i2);
  i1 = i10 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i10 >> 2] | 0;
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i9);
   HEAP32[i10 + 4 >> 2] = 0;
   i1 = i10;
  } else {
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i10, i9);
   HEAP8[i1 >> 0] = 0;
   i1 = i10;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i10, 0);
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 }
 HEAP32[i12 >> 2] = i1;
 STACKTOP = i13;
 return;
}

function __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri(i1, i2, i3, i6, i7, i8, i10, i5, i4, i12) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i12 = i12 | 0;
 var i9 = 0, i11 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i13 + 12 | 0;
 i11 = i13;
 if (i1) {
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 59040) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 63](i9, i2);
  i1 = HEAP32[i9 >> 2] | 0;
  HEAP8[i3 >> 0] = i1;
  HEAP8[i3 + 1 >> 0] = i1 >> 8;
  HEAP8[i3 + 2 >> 0] = i1 >> 16;
  HEAP8[i3 + 3 >> 0] = i1 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 63](i11, i2);
  i1 = i4 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i3 = HEAP32[i4 >> 2] | 0;
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i3, i9);
   HEAP32[i4 + 4 >> 2] = 0;
  } else {
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i4, i9);
   HEAP8[i1 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i4, 0);
  HEAP32[i4 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i4 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i4 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i11, i2);
  i1 = i5 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i4, i9);
   HEAP32[i5 + 4 >> 2] = 0;
  } else {
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i5, i9);
   HEAP8[i1 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i5, 0);
  HEAP32[i5 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i11);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i6 >> 2] = i1;
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  HEAP32[i7 >> 2] = i1;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i11, i2);
  i1 = i8 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i8 >> 2] | 0;
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i9);
   HEAP32[i8 + 4 >> 2] = 0;
   i1 = i8;
  } else {
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i9);
   HEAP8[i1 >> 0] = 0;
   i1 = i8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i8, 0);
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i11, i2);
  i1 = i10 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i8 = HEAP32[i10 >> 2] | 0;
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i8, i9);
   HEAP32[i10 + 4 >> 2] = 0;
  } else {
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i10, i9);
   HEAP8[i1 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i10, 0);
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i11);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 } else {
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 59032) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 63](i9, i2);
  i1 = HEAP32[i9 >> 2] | 0;
  HEAP8[i3 >> 0] = i1;
  HEAP8[i3 + 1 >> 0] = i1 >> 8;
  HEAP8[i3 + 2 >> 0] = i1 >> 16;
  HEAP8[i3 + 3 >> 0] = i1 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 63](i11, i2);
  i1 = i4 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i3 = HEAP32[i4 >> 2] | 0;
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i3, i9);
   HEAP32[i4 + 4 >> 2] = 0;
  } else {
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i4, i9);
   HEAP8[i1 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i4, 0);
  HEAP32[i4 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i4 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i4 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i11, i2);
  i1 = i5 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i4, i9);
   HEAP32[i5 + 4 >> 2] = 0;
  } else {
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i5, i9);
   HEAP8[i1 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i5, 0);
  HEAP32[i5 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i11);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i6 >> 2] = i1;
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  HEAP32[i7 >> 2] = i1;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i11, i2);
  i1 = i8 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i1 = HEAP32[i8 >> 2] | 0;
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i9);
   HEAP32[i8 + 4 >> 2] = 0;
   i1 = i8;
  } else {
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i9);
   HEAP8[i1 >> 0] = 0;
   i1 = i8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i8, 0);
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i11, i2);
  i1 = i10 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i8 = HEAP32[i10 >> 2] | 0;
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i8, i9);
   HEAP32[i10 + 4 >> 2] = 0;
  } else {
   HEAP32[i9 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i10, i9);
   HEAP8[i1 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i10, 0);
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i11);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 }
 HEAP32[i12 >> 2] = i1;
 STACKTOP = i13;
 return;
}

function __ZN6vision25bilinear_histogram_updateEPfffi(i5, d1, d6, i3) {
 i5 = i5 | 0;
 d1 = +d1;
 d6 = +d6;
 i3 = i3 | 0;
 var d2 = 0.0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i8;
 if (!i5) {
  i4 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 26635) | 0, 26671) | 0, 33655) | 0, 139) | 0, 33662) | 0, 26794) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 if (d1 + .5 > 0.0 ? (d2 = d1 + -.5, d2 < +(i3 | 0)) : 0) {
  if (!(d6 >= 0.0)) {
   i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 26925) | 0, 26671) | 0, 33655) | 0, 141) | 0, 33662) | 0, 26963) | 0;
   __ZNKSt3__28ios_base6getlocEv(i7, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
   i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
   __ZNSt3__26localeD2Ev(i7);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i4) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
   _abort();
  }
  if ((i3 | 0) <= -1) {
   i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 26992) | 0, 26671) | 0, 33655) | 0, 142) | 0, 33662) | 0, 27029) | 0;
   __ZNKSt3__28ios_base6getlocEv(i7, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
   i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
   __ZNSt3__26localeD2Ev(i7);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i4) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
   _abort();
  }
  i9 = ~~+Math_floor(+d2);
  d1 = d1 - +(i9 | 0) + -.5;
  d2 = 1.0 - d1;
  i4 = (i9 + i3 | 0) % (i3 | 0) | 0;
  i3 = (i9 + 1 | 0) % (i3 | 0) | 0;
  if (!(d2 >= 0.0)) {
   i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 27058) | 0, 26671) | 0, 33655) | 0, 150) | 0, 33662) | 0, 27089) | 0;
   __ZNKSt3__28ios_base6getlocEv(i7, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
   i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
   __ZNSt3__26localeD2Ev(i7);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i10) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
   _abort();
  }
  if (!(d1 >= 0.0)) {
   i10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 27109) | 0, 26671) | 0, 33655) | 0, 151) | 0, 33662) | 0, 27140) | 0;
   __ZNKSt3__28ios_base6getlocEv(i7, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
   i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
   __ZNSt3__26localeD2Ev(i7);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i9) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
   _abort();
  }
  if ((i4 | 0) <= -1) {
   i10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 27160) | 0, 26671) | 0, 33655) | 0, 152) | 0, 33662) | 0, 27208) | 0;
   __ZNKSt3__28ios_base6getlocEv(i7, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
   i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
   __ZNSt3__26localeD2Ev(i7);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i9) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
   _abort();
  }
  if ((i3 | 0) > -1) {
   i10 = i5 + (i4 << 2) | 0;
   HEAPF32[i10 >> 2] = d2 * d6 + +HEAPF32[i10 >> 2];
   i10 = i5 + (i3 << 2) | 0;
   HEAPF32[i10 >> 2] = d1 * d6 + +HEAPF32[i10 >> 2];
   STACKTOP = i8;
   return;
  } else {
   i10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 27234) | 0, 26671) | 0, 33655) | 0, 153) | 0, 33662) | 0, 27282) | 0;
   __ZNKSt3__28ios_base6getlocEv(i7, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
   i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
   __ZNSt3__26localeD2Ev(i7);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i9) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
   _abort();
  }
 }
 i10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 26820) | 0, 26671) | 0, 33655) | 0, 140) | 0, 33662) | 0, 26885) | 0;
 __ZNKSt3__28ios_base6getlocEv(i7, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
 i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
 i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
 __ZNSt3__26localeD2Ev(i7);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i9) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
 _abort();
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_vector_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i10, i11) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i12 = i15 + 40 | 0;
 i14 = i15 + 12 | 0;
 i13 = i15;
 i7 = i15 + 24 | 0;
 L1 : do if (((i10 - i1 | 0) > 3 ? (HEAP8[i1 >> 0] | 0) == 68 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 118 : 0) {
  i2 = i1 + 2 | 0;
  i4 = HEAP8[i2 >> 0] | 0;
  if ((i4 + -49 & 255) < 9) {
   i3 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i2, i10) | 0;
   if ((i3 | 0) == (i10 | 0)) break;
   if ((HEAP8[i3 >> 0] | 0) != 95) break;
   i6 = i3 - i2 | 0;
   i4 = i3 + 1 | 0;
   if ((i4 | 0) == (i10 | 0)) break;
   if ((HEAP8[i4 >> 0] | 0) != 112) {
    i5 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i4, i10, i11) | 0;
    if ((i5 | 0) == (i4 | 0)) break;
    i3 = i11 + 4 | 0;
    if ((HEAP32[i11 >> 2] | 0) == (HEAP32[i3 >> 2] | 0)) break;
    HEAP32[i13 >> 2] = 0;
    HEAP32[i13 + 4 >> 2] = 0;
    HEAP32[i13 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i13, i2, i6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i13, 0, 50564) | 0;
    HEAP32[i14 >> 2] = HEAP32[i13 >> 2];
    HEAP32[i14 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
    HEAP32[i14 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i13 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i14, 50573) | 0;
    HEAP32[i12 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i12 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
    HEAP32[i12 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i14 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    i1 = HEAP8[i12 + 11 >> 0] | 0;
    i11 = i1 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i3 >> 2] | 0) + -24 | 0, i11 ? HEAP32[i12 >> 2] | 0 : i12, i11 ? HEAP32[i12 + 4 >> 2] | 0 : i1 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
    i1 = i5;
    break;
   }
   i1 = i3 + 2 | 0;
   HEAP32[i13 >> 2] = 0;
   HEAP32[i13 + 4 >> 2] = 0;
   HEAP32[i13 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i13, i2, i6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i13, 0, 50575) | 0;
   HEAP32[i14 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i14 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i13 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i14, 50573) | 0;
   HEAP32[i7 >> 2] = HEAP32[i14 >> 2];
   HEAP32[i7 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
   HEAP32[i7 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i14 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i12, i7);
   i2 = i11 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i11 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i12);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i11, i12);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i12);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
   break;
  };
  HEAP32[i14 >> 2] = 0;
  HEAP32[i14 + 4 >> 2] = 0;
  HEAP32[i14 + 8 >> 2] = 0;
  i3 = 0;
  while (1) {
   if ((i3 | 0) == 3) break;
   HEAP32[i14 + (i3 << 2) >> 2] = 0;
   i3 = i3 + 1 | 0;
  }
  if (i4 << 24 >> 24 != 95 ? (i6 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i10, i11) | 0, (i6 | 0) != (i2 | 0)) : 0) {
   i4 = i11 + 4 | 0;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((HEAP32[i11 >> 2] | 0) != (i2 | 0)) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i13, i2 + -24 | 0);
    i2 = i14 + 11 | 0;
    if ((HEAP8[i2 >> 0] | 0) < 0) {
     i7 = HEAP32[i14 >> 2] | 0;
     HEAP8[i12 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc(i7, i12);
     HEAP32[i14 + 4 >> 2] = 0;
    } else {
     HEAP8[i12 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc(i14, i12);
     HEAP8[i2 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i14);
    HEAP32[i14 >> 2] = HEAP32[i13 >> 2];
    HEAP32[i14 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
    HEAP32[i14 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i13 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
    i3 = HEAP32[i4 >> 2] | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == -1) break;
     i7 = i2 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i7 * 24 | 0) | 0);
     i2 = i7;
    }
    HEAP32[i4 >> 2] = i3 + -24;
    i2 = i6;
    i5 = 44;
   }
  } else i5 = 44;
  do if ((i5 | 0) == 44) {
   if ((((i2 | 0) != (i10 | 0) ? (HEAP8[i2 >> 0] | 0) == 95 : 0) ? (i8 = i2 + 1 | 0, (i8 | 0) != (i10 | 0)) : 0) ? (i9 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i8, i10, i11) | 0, (i9 | 0) != (i8 | 0)) : 0) {
    i2 = i11 + 4 | 0;
    if ((HEAP32[i11 >> 2] | 0) == (HEAP32[i2 >> 2] | 0)) break;
    __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i13, 50564, i14);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i13, 50573) | 0;
    HEAP32[i12 >> 2] = HEAP32[i13 >> 2];
    HEAP32[i12 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
    HEAP32[i12 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i13 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    i1 = HEAP8[i12 + 11 >> 0] | 0;
    i11 = i1 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i2 >> 2] | 0) + -24 | 0, i11 ? HEAP32[i12 >> 2] | 0 : i12, i11 ? HEAP32[i12 + 4 >> 2] | 0 : i1 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
    i1 = i9;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
   break L1;
  } while (0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
 } while (0);
 STACKTOP = i15;
 return i1 | 0;
}

function ___intscan(i13, i4, i6, i1, i2) {
 i13 = i13 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0;
 L1 : do if (i4 >>> 0 > 36) {
  i2 = ___errno_location() | 0;
  HEAP32[i2 >> 2] = 22;
  i2 = 0;
  i1 = 0;
 } else {
  i15 = i13 + 4 | 0;
  i14 = i13 + 104 | 0;
  do {
   i3 = HEAP32[i15 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
    HEAP32[i15 >> 2] = i3 + 1;
    i3 = HEAPU8[i3 >> 0] | 0;
   } else i3 = ___shgetc(i13) | 0;
  } while ((_isspace(i3) | 0) != 0);
  L11 : do switch (i3 | 0) {
  case 43:
  case 45:
   {
    i3 = ((i3 | 0) == 45) << 31 >> 31;
    i5 = HEAP32[i15 >> 2] | 0;
    if (i5 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
     HEAP32[i15 >> 2] = i5 + 1;
     i12 = i3;
     i3 = HEAPU8[i5 >> 0] | 0;
     break L11;
    } else {
     i12 = i3;
     i3 = ___shgetc(i13) | 0;
     break L11;
    }
   }
  default:
   i12 = 0;
  } while (0);
  i5 = (i4 | 0) == 0;
  do if ((i4 | 16 | 0) == 16 & (i3 | 0) == 48) {
   i3 = HEAP32[i15 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
    HEAP32[i15 >> 2] = i3 + 1;
    i3 = HEAPU8[i3 >> 0] | 0;
   } else i3 = ___shgetc(i13) | 0;
   if ((i3 | 32 | 0) != 120) if (i5) {
    i11 = 8;
    i10 = 47;
    break;
   } else {
    i10 = 32;
    break;
   }
   i3 = HEAP32[i15 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
    HEAP32[i15 >> 2] = i3 + 1;
    i3 = HEAPU8[i3 >> 0] | 0;
   } else i3 = ___shgetc(i13) | 0;
   if ((HEAPU8[3713 + i3 >> 0] | 0) > 15) {
    i1 = (HEAP32[i14 >> 2] | 0) == 0;
    if (!i1) HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
    if (!i6) {
     ___shlim(i13, 0, 0);
     i2 = 0;
     i1 = 0;
     break L1;
    }
    if (i1) {
     i2 = 0;
     i1 = 0;
     break L1;
    }
    HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
    i2 = 0;
    i1 = 0;
    break L1;
   } else {
    i11 = 16;
    i10 = 47;
   }
  } else {
   i4 = i5 ? 10 : i4;
   if (i4 >>> 0 > (HEAPU8[3713 + i3 >> 0] | 0) >>> 0) i10 = 32; else {
    if (HEAP32[i14 >> 2] | 0) HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
    ___shlim(i13, 0, 0);
    i2 = ___errno_location() | 0;
    HEAP32[i2 >> 2] = 22;
    i2 = 0;
    i1 = 0;
    break L1;
   }
  } while (0);
  L43 : do if ((i10 | 0) == 32) if ((i4 | 0) == 10) {
   i4 = i3 + -48 | 0;
   if (i4 >>> 0 < 10) {
    i3 = 0;
    do {
     i3 = (i3 * 10 | 0) + i4 | 0;
     i4 = HEAP32[i15 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i4 + 1;
      i5 = HEAPU8[i4 >> 0] | 0;
     } else i5 = ___shgetc(i13) | 0;
     i4 = i5 + -48 | 0;
    } while (i4 >>> 0 < 10 & i3 >>> 0 < 429496729);
    if (i4 >>> 0 < 10) {
     i9 = 0;
     do {
      i6 = ___muldi3(i3 | 0, i9 | 0, 10, 0) | 0;
      i7 = getTempRet0() | 0;
      i8 = ((i4 | 0) < 0) << 31 >> 31;
      i11 = ~i8;
      if (i7 >>> 0 > i11 >>> 0 | (i7 | 0) == (i11 | 0) & i6 >>> 0 > ~i4 >>> 0) {
       i6 = 10;
       i4 = i9;
       i10 = 76;
       break L43;
      }
      i3 = _i64Add(i6 | 0, i7 | 0, i4 | 0, i8 | 0) | 0;
      i9 = getTempRet0() | 0;
      i4 = HEAP32[i15 >> 2] | 0;
      if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
       HEAP32[i15 >> 2] = i4 + 1;
       i5 = HEAPU8[i4 >> 0] | 0;
      } else i5 = ___shgetc(i13) | 0;
      i4 = i5 + -48 | 0;
     } while (i4 >>> 0 < 10 & (i9 >>> 0 < 429496729 | (i9 | 0) == 429496729 & i3 >>> 0 < 2576980378));
     if (i4 >>> 0 > 9) {
      i5 = i12;
      i4 = i9;
     } else {
      i6 = 10;
      i4 = i9;
      i10 = 76;
     }
    } else {
     i5 = i12;
     i4 = 0;
    }
   } else {
    i5 = i12;
    i4 = 0;
    i3 = 0;
   }
  } else {
   i11 = i4;
   i10 = 47;
  } while (0);
  L63 : do if ((i10 | 0) == 47) {
   if (!(i11 + -1 & i11)) {
    i10 = HEAP8[46947 + ((i11 * 23 | 0) >>> 5 & 7) >> 0] | 0;
    i6 = HEAP8[3713 + i3 >> 0] | 0;
    i4 = i6 & 255;
    if (i11 >>> 0 > i4 >>> 0) {
     i3 = 0;
     do {
      i3 = i4 | i3 << i10;
      i4 = HEAP32[i15 >> 2] | 0;
      if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
       HEAP32[i15 >> 2] = i4 + 1;
       i5 = HEAPU8[i4 >> 0] | 0;
      } else i5 = ___shgetc(i13) | 0;
      i6 = HEAP8[3713 + i5 >> 0] | 0;
      i4 = i6 & 255;
     } while (i3 >>> 0 < 134217728 & i11 >>> 0 > i4 >>> 0);
     i7 = i4;
     i4 = 0;
    } else {
     i5 = i3;
     i7 = i4;
     i4 = 0;
     i3 = 0;
    }
    i8 = _bitshift64Lshr(-1, -1, i10 | 0) | 0;
    i9 = getTempRet0() | 0;
    if (i11 >>> 0 <= i7 >>> 0 | (i9 >>> 0 < i4 >>> 0 | (i9 | 0) == (i4 | 0) & i8 >>> 0 < i3 >>> 0)) {
     i6 = i11;
     i10 = 76;
     break;
    }
    while (1) {
     i3 = _bitshift64Shl(i3 | 0, i4 | 0, i10 | 0) | 0;
     i4 = getTempRet0() | 0;
     i3 = i3 | i6 & 255;
     i5 = HEAP32[i15 >> 2] | 0;
     if (i5 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i5 + 1;
      i5 = HEAPU8[i5 >> 0] | 0;
     } else i5 = ___shgetc(i13) | 0;
     i6 = HEAP8[3713 + i5 >> 0] | 0;
     if (i11 >>> 0 <= (i6 & 255) >>> 0 | (i4 >>> 0 > i9 >>> 0 | (i4 | 0) == (i9 | 0) & i3 >>> 0 > i8 >>> 0)) {
      i6 = i11;
      i10 = 76;
      break L63;
     }
    }
   }
   i4 = HEAP8[3713 + i3 >> 0] | 0;
   i6 = i4 & 255;
   if (i11 >>> 0 > i6 >>> 0) {
    i3 = 0;
    do {
     i3 = i6 + (Math_imul(i3, i11) | 0) | 0;
     i4 = HEAP32[i15 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i4 + 1;
      i5 = HEAPU8[i4 >> 0] | 0;
     } else i5 = ___shgetc(i13) | 0;
     i4 = HEAP8[3713 + i5 >> 0] | 0;
     i6 = i4 & 255;
    } while (i3 >>> 0 < 119304647 & i11 >>> 0 > i6 >>> 0);
    i7 = i4;
    i4 = 0;
   } else {
    i5 = i3;
    i7 = i4;
    i3 = 0;
    i4 = 0;
   }
   if (i11 >>> 0 > i6 >>> 0) {
    i9 = ___udivdi3(-1, -1, i11 | 0, 0) | 0;
    i10 = getTempRet0() | 0;
    i6 = i7;
    while (1) {
     if (i4 >>> 0 > i10 >>> 0 | (i4 | 0) == (i10 | 0) & i3 >>> 0 > i9 >>> 0) {
      i6 = i11;
      i10 = 76;
      break L63;
     }
     i7 = ___muldi3(i3 | 0, i4 | 0, i11 | 0, 0) | 0;
     i8 = getTempRet0() | 0;
     i6 = i6 & 255;
     if (i8 >>> 0 > 4294967295 | (i8 | 0) == -1 & i7 >>> 0 > ~i6 >>> 0) {
      i6 = i11;
      i10 = 76;
      break L63;
     }
     i3 = _i64Add(i7 | 0, i8 | 0, i6 | 0, 0) | 0;
     i4 = getTempRet0() | 0;
     i5 = HEAP32[i15 >> 2] | 0;
     if (i5 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i5 + 1;
      i5 = HEAPU8[i5 >> 0] | 0;
     } else i5 = ___shgetc(i13) | 0;
     i6 = HEAP8[3713 + i5 >> 0] | 0;
     if (i11 >>> 0 <= (i6 & 255) >>> 0) {
      i6 = i11;
      i10 = 76;
      break;
     }
    }
   } else {
    i6 = i11;
    i10 = 76;
   }
  } while (0);
  if ((i10 | 0) == 76) if (i6 >>> 0 > (HEAPU8[3713 + i5 >> 0] | 0) >>> 0) {
   do {
    i3 = HEAP32[i15 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
     HEAP32[i15 >> 2] = i3 + 1;
     i3 = HEAPU8[i3 >> 0] | 0;
    } else i3 = ___shgetc(i13) | 0;
   } while (i6 >>> 0 > (HEAPU8[3713 + i3 >> 0] | 0) >>> 0);
   i5 = ___errno_location() | 0;
   HEAP32[i5 >> 2] = 34;
   i5 = (i1 & 1 | 0) == 0 & 0 == 0 ? i12 : 0;
   i4 = i2;
   i3 = i1;
  } else i5 = i12;
  if (HEAP32[i14 >> 2] | 0) HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
  if (!(i4 >>> 0 < i2 >>> 0 | (i4 | 0) == (i2 | 0) & i3 >>> 0 < i1 >>> 0)) {
   if (!((i1 & 1 | 0) != 0 | 0 != 0 | (i5 | 0) != 0)) {
    i15 = ___errno_location() | 0;
    HEAP32[i15 >> 2] = 34;
    i1 = _i64Add(i1 | 0, i2 | 0, -1, -1) | 0;
    i2 = getTempRet0() | 0;
    break;
   }
   if (i4 >>> 0 > i2 >>> 0 | (i4 | 0) == (i2 | 0) & i3 >>> 0 > i1 >>> 0) {
    i15 = ___errno_location() | 0;
    HEAP32[i15 >> 2] = 34;
    break;
   }
  }
  i1 = ((i5 | 0) < 0) << 31 >> 31;
  i1 = _i64Subtract(i3 ^ i5 | 0, i4 ^ i1 | 0, i5 | 0, i1 | 0) | 0;
  i2 = getTempRet0() | 0;
 } while (0);
 setTempRet0(i2 | 0);
 return i1 | 0;
}

function _decompress_smooth_data(i57, i58) {
 i57 = i57 | 0;
 i58 = i58 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0;
 i64 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 i60 = i64;
 i61 = HEAP32[i57 + 428 >> 2] | 0;
 i62 = i57 + 320 | 0;
 i63 = (HEAP32[i62 >> 2] | 0) + -1 | 0;
 i7 = i57 + 144 | 0;
 i8 = i57 + 152 | 0;
 i1 = i57 + 436 | 0;
 i2 = i57 + 400 | 0;
 i3 = i57 + 148 | 0;
 i59 = i57 + 156 | 0;
 while (1) {
  i4 = HEAP32[i7 >> 2] | 0;
  i5 = HEAP32[i8 >> 2] | 0;
  if ((i4 | 0) > (i5 | 0)) {
   i9 = 7;
   break;
  }
  i6 = HEAP32[i1 >> 2] | 0;
  if (HEAP32[i6 + 20 >> 2] | 0) {
   i9 = 7;
   break;
  }
  if ((i4 | 0) == (i5 | 0) ? (HEAP32[i3 >> 2] | 0) >>> 0 > ((HEAP32[i59 >> 2] | 0) + ((HEAP32[i2 >> 2] | 0) == 0 & 1) | 0) >>> 0 : 0) {
   i9 = 7;
   break;
  }
  if (!(FUNCTION_TABLE_ii[HEAP32[i6 >> 2] & 127](i57) | 0)) {
   i1 = 0;
   break;
  }
 }
 if ((i9 | 0) == 7) {
  i48 = i57 + 36 | 0;
  i49 = i57 + 4 | 0;
  i50 = i61 + 112 | 0;
  i51 = i57 + 448 | 0;
  i52 = i60 + 2 | 0;
  i53 = i60 + 16 | 0;
  i54 = i60 + 32 | 0;
  i55 = i60 + 18 | 0;
  i56 = i60 + 4 | 0;
  i45 = 0;
  i46 = HEAP32[i57 + 216 >> 2] | 0;
  while (1) {
   if ((i45 | 0) >= (HEAP32[i48 >> 2] | 0)) break;
   L13 : do if (HEAP32[i46 + 48 >> 2] | 0) {
    i2 = HEAP32[i59 >> 2] | 0;
    if (i2 >>> 0 < i63 >>> 0) {
     i3 = HEAP32[i46 + 12 >> 2] | 0;
     i1 = i3 << 1;
     i4 = 0;
     i47 = i3;
    } else {
     i3 = HEAP32[i46 + 12 >> 2] | 0;
     i47 = ((HEAP32[i46 + 32 >> 2] | 0) >>> 0) % (i3 >>> 0) | 0;
     i47 = (i47 | 0) == 0 ? i3 : i47;
     i1 = i47;
     i4 = 1;
    }
    if (!i2) {
     i42 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i49 >> 2] | 0) + 32 >> 2] & 31](i57, HEAP32[i61 + 72 + (i45 << 2) >> 2] | 0, 0, i1, 0) | 0;
     i43 = 1;
    } else {
     i42 = Math_imul(i3, i2 + -1 | 0) | 0;
     i42 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i49 >> 2] | 0) + 32 >> 2] & 31](i57, HEAP32[i61 + 72 + (i45 << 2) >> 2] | 0, i42, i3 + i1 | 0, 0) | 0;
     i42 = i42 + (HEAP32[i46 + 12 >> 2] << 2) | 0;
     i43 = 0;
    }
    i30 = (HEAP32[i50 >> 2] | 0) + (i45 * 6 << 2) | 0;
    i40 = HEAP32[i46 + 76 >> 2] | 0;
    i35 = HEAPU16[i40 >> 1] | 0;
    i29 = HEAPU16[i40 + 2 >> 1] | 0;
    i33 = HEAPU16[i40 + 16 >> 1] | 0;
    i37 = HEAPU16[i40 + 32 >> 1] | 0;
    i39 = HEAPU16[i40 + 18 >> 1] | 0;
    i40 = HEAPU16[i40 + 4 >> 1] | 0;
    i44 = HEAP32[(HEAP32[i51 >> 2] | 0) + 4 + (i45 << 2) >> 2] | 0;
    i19 = (i4 | 0) != 0;
    i20 = i47 + -1 | 0;
    i21 = i46 + 28 | 0;
    i22 = i30 + 4 | 0;
    i23 = i30 + 8 | 0;
    i24 = i30 + 12 | 0;
    i25 = i35 * 36 | 0;
    i26 = i29 << 7;
    i27 = i30 + 16 | 0;
    i28 = i33 << 7;
    i29 = i29 << 8;
    i30 = i30 + 20 | 0;
    i31 = i35 * 9 | 0;
    i32 = i37 << 7;
    i33 = i33 << 8;
    i34 = i46 + 36 | 0;
    i35 = i35 * 5 | 0;
    i36 = i39 << 7;
    i37 = i37 << 8;
    i38 = i40 << 7;
    i39 = i39 << 8;
    i40 = i40 << 8;
    i17 = 0;
    i18 = HEAP32[i58 + (i45 << 2) >> 2] | 0;
    while (1) {
     if ((i17 | 0) >= (i47 | 0)) break L13;
     i1 = HEAP32[i42 + (i17 << 2) >> 2] | 0;
     if (i43 & (i17 | 0) == 0) i2 = i1; else i2 = HEAP32[i42 + (i17 + -1 << 2) >> 2] | 0;
     if (i19 & (i17 | 0) == (i20 | 0)) i3 = i1; else i3 = HEAP32[i42 + (i17 + 1 << 2) >> 2] | 0;
     i6 = HEAP16[i2 >> 1] | 0;
     i11 = HEAP16[i1 >> 1] | 0;
     i5 = HEAP16[i3 >> 1] | 0;
     i41 = (HEAP32[i21 >> 2] | 0) + -1 | 0;
     i13 = i5;
     i14 = i11;
     i15 = i6;
     i16 = 0;
     i12 = 0;
     i10 = i3;
     while (1) {
      if (i16 >>> 0 > i41 >>> 0) break;
      _jcopy_block_row(i1, i60, 1);
      if (i16 >>> 0 < i41 >>> 0) {
       i7 = HEAP16[i10 + 128 >> 1] | 0;
       i8 = HEAP16[i1 + 128 >> 1] | 0;
       i9 = HEAP16[i2 + 128 >> 1] | 0;
      } else {
       i7 = i13;
       i8 = i14;
       i9 = i15;
      }
      i3 = HEAP32[i22 >> 2] | 0;
      if ((i3 | 0) != 0 & (HEAP16[i52 >> 1] | 0) == 0) {
       i4 = Math_imul(i25, i11 - i8 | 0) | 0;
       if ((i4 | 0) > -1) {
        i4 = (i4 + i26 | 0) / (i29 | 0) | 0;
        i65 = 1 << i3;
        i3 = (i3 | 0) > 0 ? ((i4 | 0) < (i65 | 0) ? i4 : i65 + -1 | 0) : i4;
       } else {
        i65 = (i26 - i4 | 0) / (i29 | 0) | 0;
        i4 = 1 << i3;
        i3 = 0 - ((i3 | 0) > 0 ? ((i65 | 0) < (i4 | 0) ? i65 : i4 + -1 | 0) : i65) | 0;
       }
       HEAP16[i52 >> 1] = i3;
      }
      i3 = HEAP32[i23 >> 2] | 0;
      if ((i3 | 0) != 0 & (HEAP16[i53 >> 1] | 0) == 0) {
       i4 = Math_imul(i25, i15 - i13 | 0) | 0;
       if ((i4 | 0) > -1) {
        i65 = (i4 + i28 | 0) / (i33 | 0) | 0;
        i4 = 1 << i3;
        i3 = (i3 | 0) > 0 ? ((i65 | 0) < (i4 | 0) ? i65 : i4 + -1 | 0) : i65;
       } else {
        i65 = (i28 - i4 | 0) / (i33 | 0) | 0;
        i4 = 1 << i3;
        i3 = 0 - ((i3 | 0) > 0 ? ((i65 | 0) < (i4 | 0) ? i65 : i4 + -1 | 0) : i65) | 0;
       }
       HEAP16[i53 >> 1] = i3;
      }
      i3 = HEAP32[i24 >> 2] | 0;
      if ((i3 | 0) != 0 & (HEAP16[i54 >> 1] | 0) == 0) {
       i4 = Math_imul(i31, i15 - (i14 << 1) + i13 | 0) | 0;
       if ((i4 | 0) > -1) {
        i65 = (i4 + i32 | 0) / (i37 | 0) | 0;
        i4 = 1 << i3;
        i3 = (i3 | 0) > 0 ? ((i65 | 0) < (i4 | 0) ? i65 : i4 + -1 | 0) : i65;
       } else {
        i65 = (i32 - i4 | 0) / (i37 | 0) | 0;
        i4 = 1 << i3;
        i3 = 0 - ((i3 | 0) > 0 ? ((i65 | 0) < (i4 | 0) ? i65 : i4 + -1 | 0) : i65) | 0;
       }
       HEAP16[i54 >> 1] = i3;
      }
      i4 = HEAP32[i27 >> 2] | 0;
      if ((i4 | 0) != 0 & (HEAP16[i55 >> 1] | 0) == 0) {
       i3 = Math_imul(i35, i6 - i5 - i9 + i7 | 0) | 0;
       if ((i3 | 0) > -1) {
        i3 = (i3 + i36 | 0) / (i39 | 0) | 0;
        i65 = 1 << i4;
        i3 = (i4 | 0) > 0 ? ((i3 | 0) < (i65 | 0) ? i3 : i65 + -1 | 0) : i3;
       } else {
        i3 = (i36 - i3 | 0) / (i39 | 0) | 0;
        i65 = 1 << i4;
        i3 = 0 - ((i4 | 0) > 0 ? ((i3 | 0) < (i65 | 0) ? i3 : i65 + -1 | 0) : i3) | 0;
       }
       HEAP16[i55 >> 1] = i3;
      }
      i4 = HEAP32[i30 >> 2] | 0;
      if ((i4 | 0) != 0 & (HEAP16[i56 >> 1] | 0) == 0) {
       i3 = Math_imul(i31, i11 - (i14 << 1) + i8 | 0) | 0;
       if ((i3 | 0) > -1) {
        i3 = (i3 + i38 | 0) / (i40 | 0) | 0;
        i65 = 1 << i4;
        i3 = (i4 | 0) > 0 ? ((i3 | 0) < (i65 | 0) ? i3 : i65 + -1 | 0) : i3;
       } else {
        i3 = (i38 - i3 | 0) / (i40 | 0) | 0;
        i65 = 1 << i4;
        i3 = 0 - ((i4 | 0) > 0 ? ((i3 | 0) < (i65 | 0) ? i3 : i65 + -1 | 0) : i3) | 0;
       }
       HEAP16[i56 >> 1] = i3;
      }
      FUNCTION_TABLE_viiiii[i44 & 31](i57, i46, i60, i18, i12);
      i6 = i15;
      i11 = i14;
      i5 = i13;
      i13 = i7;
      i14 = i8;
      i15 = i9;
      i16 = i16 + 1 | 0;
      i1 = i1 + 128 | 0;
      i12 = (HEAP32[i34 >> 2] | 0) + i12 | 0;
      i2 = i2 + 128 | 0;
      i10 = i10 + 128 | 0;
     }
     i17 = i17 + 1 | 0;
     i18 = i18 + (HEAP32[i34 >> 2] << 2) | 0;
    }
   } while (0);
   i45 = i45 + 1 | 0;
   i46 = i46 + 84 | 0;
  }
  i1 = (HEAP32[i59 >> 2] | 0) + 1 | 0;
  HEAP32[i59 >> 2] = i1;
  i1 = i1 >>> 0 < (HEAP32[i62 >> 2] | 0) >>> 0 ? 3 : 4;
 }
 STACKTOP = i64;
 return i1 | 0;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_8KeyframeILi96EEE(i6, i7) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i27 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 i16 = i27 + 104 | 0;
 i20 = i27;
 i21 = i27 + 72 | 0;
 i22 = i27 + 40 | 0;
 i23 = i6 + 12 | 0;
 i24 = i6 + 16 | 0;
 HEAP32[i24 >> 2] = HEAP32[i23 >> 2];
 i25 = i6 + 24 | 0;
 HEAP32[i25 >> 2] = -1;
 i8 = __ZNK6vision18BinaryFeatureStore6pointsEv(__ZNK6vision8KeyframeILi96EE5storeEv(i7) | 0) | 0;
 i9 = i6 + 8 | 0;
 i10 = i6 + 636 | 0;
 i11 = i6 + 652 | 0;
 i12 = i16 + 4 | 0;
 i13 = i16 + 8 | 0;
 i14 = i6 + 788 | 0;
 i15 = i21 + 4 | 0;
 i17 = i21 + 8 | 0;
 i18 = i6 + 4 | 0;
 i19 = i6 + 28 | 0;
 i1 = i6 + 80 | 0;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  if (!i1) break;
  __ZN6vision11ScopedTimerC2EPKc(i16, 29267);
  do if (__ZN6vision11ScopedTimercvbEv(i16) | 0) {
   i28 = (HEAP8[i9 >> 0] | 0) == 0;
   i2 = __ZNK6vision8KeyframeILi96EE5storeEv(i7) | 0;
   i5 = i1;
   i3 = i5 + 12 | 0;
   i4 = __ZN6vision8KeyframeILi96EE5storeEv(HEAP32[i3 >> 2] | 0) | 0;
   if (i28) {
    i28 = __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_(i10, i2, i4) | 0;
    if (i28 >>> 0 >= (HEAP32[i6 >> 2] | 0) >>> 0) {
     i26 = 9;
     break;
    }
   } else {
    i28 = __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_RKNS_28BinaryHierarchicalClusteringILi96EEE(i10, i2, i4, __ZNK6vision8KeyframeILi96EE5indexEv(HEAP32[i3 >> 2] | 0) | 0) | 0;
    if (i28 >>> 0 >= (HEAP32[i6 >> 2] | 0) >>> 0) {
     i26 = 9;
     break;
    }
   }
   __ZN6vision11ScopedTimerD2Ev(i16);
  } else {
   i5 = i1;
   i3 = i5 + 12 | 0;
   i26 = 9;
  } while (0);
  do if ((i26 | 0) == 9) {
   i26 = 0;
   __ZN6vision11ScopedTimerD2Ev(i16);
   i4 = __ZN6vision18BinaryFeatureStore6pointsEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[i3 >> 2] | 0) | 0) | 0;
   __ZN6vision11ScopedTimerC2EPKc(i16, 29284);
   if (__ZN6vision11ScopedTimercvbEv(i16) | 0) {
    i30 = __ZNK6vision20BinaryFeatureMatcherILi96EE7matchesEv(i10) | 0;
    i29 = __ZNK6vision8KeyframeILi96EE5widthEv(i7) | 0;
    i28 = __ZNK6vision8KeyframeILi96EE6heightEv(i7) | 0;
    i2 = __ZNK6vision8KeyframeILi96EE5widthEv(HEAP32[i3 >> 2] | 0) | 0;
    i2 = __ZN6vision19FindHoughSimilarityERNS_21HoughSimilarityVotingERKNSt3__26vectorINS_12FeaturePointENS2_9allocatorIS4_EEEES9_RKNS3_INS_7match_tENS5_ISA_EEEEiiii(i11, i8, i4, i30, i29, i28, i2, __ZNK6vision8KeyframeILi96EE6heightEv(HEAP32[i3 >> 2] | 0) | 0) | 0;
    if ((i2 | 0) < 0) {
     __ZN6vision11ScopedTimerD2Ev(i16);
     break;
    }
   } else i2 = -1;
   __ZN6vision11ScopedTimerD2Ev(i16);
   HEAP32[i16 >> 2] = 0;
   HEAP32[i12 >> 2] = 0;
   HEAP32[i13 >> 2] = 0;
   __ZN6vision11ScopedTimerC2EPKc(i20, 29301);
   if (__ZN6vision11ScopedTimercvbEv(i20) | 0) __ZN6vision16FindHoughMatchesERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEERKNS_21HoughSimilarityVotingERKS5_if(i16, i11, __ZNK6vision20BinaryFeatureMatcherILi96EE7matchesEv(i10) | 0, i2, 1.0);
   __ZN6vision11ScopedTimerD2Ev(i20);
   __ZN6vision11ScopedTimerC2EPKc(i21, 29324);
   if (__ZN6vision11ScopedTimercvbEv(i21) | 0 ? (i30 = __ZNK6vision8KeyframeILi96EE5widthEv(HEAP32[i3 >> 2] | 0) | 0, !(__ZN6vision18EstimateHomographyEPfRKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEES8_RKNS2_INS_7match_tENS4_IS9_EEEERNS_16RobustHomographyIfEEii(i20, i8, i4, i16, i14, i30, __ZNK6vision8KeyframeILi96EE6heightEv(HEAP32[i3 >> 2] | 0) | 0) | 0)) : 0) __ZN6vision11ScopedTimerD2Ev(i21); else {
    __ZN6vision11ScopedTimerD2Ev(i21);
    HEAP32[i21 >> 2] = 0;
    HEAP32[i15 >> 2] = 0;
    HEAP32[i17 >> 2] = 0;
    __ZN6vision11ScopedTimerC2EPKc(i22, 29348);
    if (__ZN6vision11ScopedTimercvbEv(i22) | 0 ? (__ZN6vision11FindInliersERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEEPKfRKNS1_INS_12FeaturePointENS3_IS9_EEEESD_RKS5_f(i21, i20, i8, i4, i16, +HEAPF32[i18 >> 2]), (HEAP32[i15 >> 2] | 0) - (HEAP32[i21 >> 2] | 0) >> 3 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0) : 0) __ZN6vision11ScopedTimerD2Ev(i22); else i26 = 20;
    do if ((i26 | 0) == 20) {
     i26 = 0;
     __ZN6vision11ScopedTimerD2Ev(i22);
     __ZN6vision11ScopedTimerC2EPKc(i22, 29365);
     if (__ZN6vision11ScopedTimercvbEv(i22) | 0 ? (i30 = __ZNK6vision8KeyframeILi96EE5storeEv(i7) | 0, i30 = __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_PKff(i10, i30, __ZN6vision8KeyframeILi96EE5storeEv(HEAP32[i3 >> 2] | 0) | 0, i20, 10.0) | 0, i30 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0) : 0) {
      __ZN6vision11ScopedTimerD2Ev(i22);
      break;
     }
     __ZN6vision11ScopedTimerD2Ev(i22);
     __ZN6vision11ScopedTimerC2EPKc(i22, 29382);
     if (__ZN6vision11ScopedTimercvbEv(i22) | 0) {
      i28 = __ZNK6vision20BinaryFeatureMatcherILi96EE7matchesEv(i10) | 0;
      i29 = __ZNK6vision8KeyframeILi96EE5widthEv(i7) | 0;
      i30 = __ZNK6vision8KeyframeILi96EE6heightEv(i7) | 0;
      i2 = __ZNK6vision8KeyframeILi96EE5widthEv(HEAP32[i3 >> 2] | 0) | 0;
      i2 = __ZN6vision19FindHoughSimilarityERNS_21HoughSimilarityVotingERKNSt3__26vectorINS_12FeaturePointENS2_9allocatorIS4_EEEES9_RKNS3_INS_7match_tENS5_ISA_EEEEiiii(i11, i8, i4, i28, i29, i30, i2, __ZNK6vision8KeyframeILi96EE6heightEv(HEAP32[i3 >> 2] | 0) | 0) | 0;
      if ((i2 | 0) < 0) {
       __ZN6vision11ScopedTimerD2Ev(i22);
       break;
      }
     }
     __ZN6vision11ScopedTimerD2Ev(i22);
     __ZN6vision11ScopedTimerC2EPKc(i22, 29399);
     if (__ZN6vision11ScopedTimercvbEv(i22) | 0) __ZN6vision16FindHoughMatchesERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEERKNS_21HoughSimilarityVotingERKS5_if(i16, i11, __ZNK6vision20BinaryFeatureMatcherILi96EE7matchesEv(i10) | 0, i2, 1.0);
     __ZN6vision11ScopedTimerD2Ev(i22);
     __ZN6vision11ScopedTimerC2EPKc(i22, 29422);
     if (__ZN6vision11ScopedTimercvbEv(i22) | 0 ? (i30 = __ZNK6vision8KeyframeILi96EE5widthEv(HEAP32[i3 >> 2] | 0) | 0, !(__ZN6vision18EstimateHomographyEPfRKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEES8_RKNS2_INS_7match_tENS4_IS9_EEEERNS_16RobustHomographyIfEEii(i20, i8, i4, i16, i14, i30, __ZNK6vision8KeyframeILi96EE6heightEv(HEAP32[i3 >> 2] | 0) | 0) | 0)) : 0) {
      __ZN6vision11ScopedTimerD2Ev(i22);
      break;
     }
     __ZN6vision11ScopedTimerD2Ev(i22);
     HEAP32[i15 >> 2] = HEAP32[i21 >> 2];
     __ZN6vision11ScopedTimerC2EPKc(i22, 29446);
     if (__ZN6vision11ScopedTimercvbEv(i22) | 0) __ZN6vision11FindInliersERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEEPKfRKNS1_INS_12FeaturePointENS3_IS9_EEEESD_RKS5_f(i21, i20, i8, i4, i16, +HEAPF32[i18 >> 2]);
     __ZN6vision11ScopedTimerD2Ev(i22);
     i30 = (HEAP32[i15 >> 2] | 0) - (HEAP32[i21 >> 2] | 0) >> 3;
     if (i30 >>> 0 >= (HEAP32[i6 >> 2] | 0) >>> 0 ? i30 >>> 0 > (HEAP32[i24 >> 2] | 0) - (HEAP32[i23 >> 2] | 0) >> 3 >>> 0 : 0) {
      __ZN6vision11CopyVector9IfEEvPT_PKS1_(i19, i20);
      __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE4swapERS5_(i23, i21);
      HEAP32[i25 >> 2] = HEAP32[i5 + 8 >> 2];
     }
    } while (0);
    __ZNSt3__213__vector_baseIN6vision7match_tENS_9allocatorIS2_EEED2Ev(i21);
   }
   __ZNSt3__213__vector_baseIN6vision7match_tENS_9allocatorIS2_EEED2Ev(i16);
  } while (0);
 }
 STACKTOP = i27;
 return (HEAP32[i25 >> 2] | 0) > -1 | 0;
}

function _kpmSetRefDataSet(i18, i6) {
 i18 = i18 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i23 = i24 + 48 | 0;
 i12 = i24 + 40 | 0;
 i10 = i24 + 32 | 0;
 i8 = i24 + 24 | 0;
 i3 = i24 + 16 | 0;
 i2 = i24 + 8 | 0;
 i1 = i24;
 i19 = i24 + 96 | 0;
 i20 = i24 + 84 | 0;
 i21 = i24 + 72 | 0;
 i22 = i24 + 52 | 0;
 L1 : do if ((i18 | 0) != 0 & (i6 | 0) != 0) {
  i4 = i6 + 4 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  if (!i1) {
   _arLog(0, 3, 20453, i2);
   i1 = -1;
   break;
  }
  i17 = i18 + 28 | 0;
  i2 = HEAP32[i17 >> 2] | 0;
  if (i2) {
   _free(i2);
   i1 = HEAP32[i4 >> 2] | 0;
   if (!i1) {
    HEAP32[i17 >> 2] = 0;
    i1 = 0;
   } else i5 = 7;
  } else i5 = 7;
  L9 : do if ((i5 | 0) == 7) {
   i16 = _malloc(i1 * 132 | 0) | 0;
   HEAP32[i17 >> 2] = i16;
   if (!i16) {
    _arLog(0, 3, 20581, i3);
    _exit(1);
   }
   i2 = 0;
   while (1) {
    if ((i2 | 0) >= (i1 | 0)) break L9;
    _memcpy((HEAP32[i17 >> 2] | 0) + (i2 * 132 | 0) | 0, (HEAP32[i6 >> 2] | 0) + (i2 * 132 | 0) | 0, 132) | 0;
    i2 = i2 + 1 | 0;
    i1 = HEAP32[i4 >> 2] | 0;
   }
  } while (0);
  i9 = i18 + 32 | 0;
  HEAP32[i9 >> 2] = i1;
  i16 = i18 + 36 | 0;
  i1 = HEAP32[i16 >> 2] | 0;
  if (i1 | 0) {
   i4 = i18 + 40 | 0;
   i3 = 0;
   while (1) {
    if ((i3 | 0) >= (HEAP32[i4 >> 2] | 0)) break;
    i2 = HEAP32[i1 + (i3 * 12 | 0) >> 2] | 0;
    if (i2) {
     _free(i2);
     i1 = HEAP32[i16 >> 2] | 0;
    }
    i3 = i3 + 1 | 0;
   }
   _free(i1);
  }
  i7 = i6 + 12 | 0;
  i1 = HEAP32[i7 >> 2] | 0;
  L28 : do if (!i1) {
   HEAP32[i16 >> 2] = 0;
   i11 = 0;
  } else {
   i15 = _malloc(i1 * 12 | 0) | 0;
   HEAP32[i16 >> 2] = i15;
   if (!i15) {
    _arLog(0, 3, 20581, i8);
    _exit(1);
   }
   i6 = i6 + 8 | 0;
   i5 = 0;
   while (1) {
    if ((i5 | 0) >= (i1 | 0)) {
     i11 = i1;
     break L28;
    }
    i4 = HEAP32[i6 >> 2] | 0;
    i2 = HEAP32[i16 >> 2] | 0;
    HEAP32[i2 + (i5 * 12 | 0) + 8 >> 2] = HEAP32[i4 + (i5 * 12 | 0) + 8 >> 2];
    i3 = i4 + (i5 * 12 | 0) + 4 | 0;
    HEAP32[i2 + (i5 * 12 | 0) + 4 >> 2] = HEAP32[i3 >> 2];
    i3 = HEAP32[i3 >> 2] | 0;
    if (!i3) HEAP32[i4 + (i5 * 12 | 0) >> 2] = 0; else {
     i15 = _malloc(i3 * 12 | 0) | 0;
     HEAP32[i2 + (i5 * 12 | 0) >> 2] = i15;
     if (!i15) break;
     i2 = 0;
     i1 = i4;
     while (1) {
      if ((i2 | 0) >= (HEAP32[i1 + (i5 * 12 | 0) + 4 >> 2] | 0)) break;
      i14 = (HEAP32[i1 + (i5 * 12 | 0) >> 2] | 0) + (i2 * 12 | 0) | 0;
      i15 = (HEAP32[(HEAP32[i16 >> 2] | 0) + (i5 * 12 | 0) >> 2] | 0) + (i2 * 12 | 0) | 0;
      HEAP32[i15 >> 2] = HEAP32[i14 >> 2];
      HEAP32[i15 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
      HEAP32[i15 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
      i2 = i2 + 1 | 0;
      i1 = HEAP32[i6 >> 2] | 0;
     }
     i1 = HEAP32[i7 >> 2] | 0;
    }
    i5 = i5 + 1 | 0;
   }
   _arLog(0, 3, 20581, i10);
   _exit(1);
  } while (0);
  i15 = i18 + 40 | 0;
  HEAP32[i15 >> 2] = i11;
  i4 = i18 + 52 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  if (i1 | 0) {
   _free(i1);
   HEAP32[i4 >> 2] = 0;
   HEAP32[i18 + 56 >> 2] = 0;
  }
  i2 = HEAP32[i7 >> 2] | 0;
  L51 : do if ((i2 | 0) > 0) {
   HEAP32[i18 + 56 >> 2] = i2;
   i3 = _malloc(i2 * 68 | 0) | 0;
   HEAP32[i4 >> 2] = i3;
   if (!i3) {
    _arLog(0, 3, 20581, i12);
    _exit(1);
   }
   i1 = 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break L51;
    HEAP32[i3 + (i1 * 68 | 0) + 64 >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
  } while (0);
  i8 = HEAP32[i9 >> 2] | 0;
  if (!i8) i1 = 0; else {
   i9 = i19 + 4 | 0;
   i10 = i19 + 8 | 0;
   i11 = i20 + 4 | 0;
   i12 = i20 + 8 | 0;
   i13 = i21 + 4 | 0;
   i14 = i21 + 8 | 0;
   i7 = 0;
   i1 = 0;
   while (1) {
    if ((i7 | 0) >= (HEAP32[i15 >> 2] | 0)) {
     i1 = 0;
     break L1;
    }
    i6 = 0;
    while (1) {
     if ((i6 | 0) >= (HEAP32[(HEAP32[i16 >> 2] | 0) + (i7 * 12 | 0) + 4 >> 2] | 0)) break;
     HEAP32[i19 >> 2] = 0;
     HEAP32[i9 >> 2] = 0;
     HEAP32[i10 >> 2] = 0;
     HEAP32[i20 >> 2] = 0;
     HEAP32[i11 >> 2] = 0;
     HEAP32[i12 >> 2] = 0;
     HEAP32[i21 >> 2] = 0;
     HEAP32[i13 >> 2] = 0;
     HEAP32[i14 >> 2] = 0;
     i5 = 0;
     while (1) {
      if ((i5 | 0) >= (i8 | 0)) break;
      i2 = HEAP32[i17 >> 2] | 0;
      i4 = HEAP32[i16 >> 2] | 0;
      L70 : do if ((HEAP32[i2 + (i5 * 132 | 0) + 128 >> 2] | 0) == (HEAP32[(HEAP32[i4 + (i7 * 12 | 0) >> 2] | 0) + (i6 * 12 | 0) + 8 >> 2] | 0) ? (HEAP32[i2 + (i5 * 132 | 0) + 124 >> 2] | 0) == (HEAP32[i4 + (i7 * 12 | 0) + 8 >> 2] | 0) : 0) {
       __ZN6vision12FeaturePointC2Effffb(i22, +HEAPF32[i2 + (i5 * 132 | 0) >> 2], +HEAPF32[i2 + (i5 * 132 | 0) + 4 >> 2], +HEAPF32[i2 + (i5 * 132 | 0) + 112 >> 2], +HEAPF32[i2 + (i5 * 132 | 0) + 116 >> 2], (HEAP32[i2 + (i5 * 132 | 0) + 120 >> 2] | 0) != 0);
       i2 = HEAP32[i9 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
        HEAP32[i2 >> 2] = HEAP32[i22 >> 2];
        HEAP32[i2 + 4 >> 2] = HEAP32[i22 + 4 >> 2];
        HEAP32[i2 + 8 >> 2] = HEAP32[i22 + 8 >> 2];
        HEAP32[i2 + 12 >> 2] = HEAP32[i22 + 12 >> 2];
        HEAP32[i2 + 16 >> 2] = HEAP32[i22 + 16 >> 2];
        HEAP32[i9 >> 2] = i2 + 20;
       } else __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i19, i22);
       __ZN6vision12FeaturePointD2Ev(i22);
       i2 = HEAP32[i17 >> 2] | 0;
       __ZN6vision7Point3dIfEC2Efff(i22, +HEAPF32[i2 + (i5 * 132 | 0) + 8 >> 2], +HEAPF32[i2 + (i5 * 132 | 0) + 12 >> 2], 0.0);
       i2 = HEAP32[i11 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i12 >> 2] | 0) >>> 0) {
        HEAP32[i2 >> 2] = HEAP32[i22 >> 2];
        HEAP32[i2 + 4 >> 2] = HEAP32[i22 + 4 >> 2];
        HEAP32[i2 + 8 >> 2] = HEAP32[i22 + 8 >> 2];
        HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 12;
       } else __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i20, i22);
       i2 = 0;
       while (1) {
        if (i2 >>> 0 >= 96) break L70;
        i3 = (HEAP32[i17 >> 2] | 0) + (i5 * 132 | 0) + 16 + i2 | 0;
        i4 = HEAP32[i13 >> 2] | 0;
        if ((i4 | 0) == (HEAP32[i14 >> 2] | 0)) __ZNSt3__26vectorIhNS_9allocatorIhEEE21__push_back_slow_pathIRKhEEvOT_(i21, i3); else {
         HEAP8[i4 >> 0] = HEAP8[i3 >> 0] | 0;
         HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 1;
        }
        i2 = i2 + 1 | 0;
       }
      } while (0);
      i5 = i5 + 1 | 0;
     }
     HEAP32[i23 >> 2] = ((HEAP32[i9 >> 2] | 0) - (HEAP32[i19 >> 2] | 0) | 0) / 20 | 0;
     _arLog(0, 1, 20486, i23);
     i5 = HEAP32[i16 >> 2] | 0;
     HEAP32[i18 + 60 + (i1 << 2) >> 2] = HEAP32[i5 + (i7 * 12 | 0) + 8 >> 2];
     i5 = HEAP32[i5 + (i7 * 12 | 0) >> 2] | 0;
     __ZN6vision20VisualDatabaseFacade30addFreakFeaturesAndDescriptorsERKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEERKNS2_IhNS4_IhEEEERKNS2_INS_7Point3dIfEENS4_ISE_EEEEmmi(HEAP32[i18 >> 2] | 0, i19, i21, i20, HEAP32[i5 + (i6 * 12 | 0) >> 2] | 0, HEAP32[i5 + (i6 * 12 | 0) + 4 >> 2] | 0, i1);
     __ZNSt3__213__vector_baseIhNS_9allocatorIhEEED2Ev(i21);
     __ZNSt3__213__vector_baseIN6vision7Point3dIfEENS_9allocatorIS3_EEED2Ev(i20);
     __ZNSt3__213__vector_baseIN6vision12FeaturePointENS_9allocatorIS2_EEED2Ev(i19);
     i6 = i6 + 1 | 0;
     i1 = i1 + 1 | 0;
    }
    i7 = i7 + 1 | 0;
   }
  }
 } else {
  _arLog(0, 3, 20405, i1);
  i1 = -1;
 } while (0);
 STACKTOP = i24;
 return i1 | 0;
}

function _ar2GetBestMatching(i26, i13, i39, i41, i42, i43, i15, i16, i17, i44, i27, i28) {
 i26 = i26 | 0;
 i13 = i13 | 0;
 i39 = i39 | 0;
 i41 = i41 | 0;
 i42 = i42 | 0;
 i43 = i43 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i17 = i17 | 0;
 i44 = i44 | 0;
 i27 = i27 | 0;
 i28 = i28 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i40 = 0, i45 = 0;
 i45 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 i19 = i45 + 8 | 0;
 i18 = i45;
 i29 = i45 + 72 | 0;
 i32 = i45 + 60 | 0;
 i34 = i45 + 48 | 0;
 i14 = i45 + 36 | 0;
 i35 = i45 + 32 | 0;
 i36 = i45 + 24 | 0;
 i37 = i45 + 16 | 0;
 i38 = i43 + 16 | 0;
 i11 = HEAP32[i38 >> 2] | 0;
 i40 = i43 + 20 | 0;
 i8 = HEAP32[i40 >> 2] | 0;
 i9 = i39 + -1 | 0;
 i10 = i41 + -1 | 0;
 i7 = 0;
 while (1) {
  if (i7 >>> 0 >= 3) break;
  i1 = HEAP32[i17 + (i7 << 3) >> 2] | 0;
  if ((i1 | 0) < 0) break;
  i5 = i1 & -4 | 2;
  i1 = ((HEAP32[i17 + (i7 << 3) + 4 >> 2] | 0) / 4 | 0) << 2 | 2;
  i6 = i5 - i15 | 0;
  i6 = (i6 | 0) > 0 ? i6 : 0;
  i5 = i5 + i15 | 0;
  i5 = (i5 | 0) < (i39 | 0) ? i5 : i9;
  i4 = i1 - i16 | 0;
  i1 = i1 + i16 | 0;
  i1 = (i1 | 0) < (i41 | 0) ? i1 : i10;
  i4 = (i4 | 0) > 0 ? i4 : 0;
  while (1) {
   if ((i4 | 0) > (i1 | 0)) break;
   i2 = i6;
   i3 = i13 + ((Math_imul(i4, i39) | 0) + i6) | 0;
   while (1) {
    if ((i2 | 0) > (i5 | 0)) break;
    HEAP8[i3 >> 0] = 0;
    i2 = i2 + 1 | 0;
    i3 = i3 + 1 | 0;
   }
   i4 = i4 + 1 | 0;
  }
  i7 = i7 + 1 | 0;
 }
 HEAP32[i29 >> 2] = 0;
 i12 = i8 << 1;
 i10 = i11 << 1;
 i24 = i43 + 12 | 0;
 i25 = i43 + 8 | 0;
 i2 = 1;
 i9 = 0;
 while (1) {
  if (i9 >>> 0 >= 3) {
   i23 = 28;
   break;
  }
  i1 = HEAP32[i17 + (i9 << 3) >> 2] | 0;
  if ((i1 | 0) < 0) {
   i23 = 14;
   break;
  }
  i8 = i1 & -4 | 2;
  i5 = ((HEAP32[i17 + (i9 << 3) + 4 >> 2] | 0) / 4 | 0) << 2 | 2;
  i6 = i5 + i16 | 0;
  i7 = i8 - i15 | 0;
  i8 = i8 + i15 | 0;
  i1 = i2;
  i5 = i5 - i16 | 0;
  L18 : while (1) {
   if ((i5 | 0) > (i6 | 0)) break;
   L21 : do if ((i5 | 0) >= (i10 | 0)) {
    if ((i5 + i12 | 0) >= (i41 | 0)) break L18;
    i4 = Math_imul(i5, i39) | 0;
    i3 = i7;
    while (1) {
     if ((i3 | 0) > (i8 | 0)) break L21;
     if ((i3 | 0) >= (HEAP32[i25 >> 2] << 1 | 0)) {
      if (((HEAP32[i24 >> 2] << 1) + i3 | 0) >= (i39 | 0)) break L21;
      i2 = i13 + (i3 + i4) | 0;
      if (!(HEAP8[i2 >> 0] | 0)) {
       HEAP8[i2 >> 0] = 1;
       _ar2GetBestMatchingSubFine(i26, i39, i42, i43, i3, i5, i35);
       _updateCandidate(i3, i5, HEAP32[i35 >> 2] | 0, i29, i32, i34, i14);
       i1 = 0;
      }
     }
     i3 = i3 + 4 | 0;
    }
   } while (0);
   i5 = i5 + 4 | 0;
  }
  i2 = i1;
  i9 = i9 + 1 | 0;
 }
 if ((i23 | 0) == 14) if (!i2) i23 = 28; else i1 = -1;
 if ((i23 | 0) == 28) {
  i22 = i43 + 4 | 0;
  i1 = Math_imul((HEAP32[i43 >> 2] << 3) + 32 | 0, (HEAP32[i22 >> 2] << 1) + 8 | 0) | 0;
  i21 = _malloc(i1) | 0;
  if (!i21) {
   _arLog(0, 3, 20581, i18);
   _exit(1);
  }
  i20 = _malloc(i1) | 0;
  if (!i20) {
   _arLog(0, 3, 20581, i19);
   _exit(1);
  }
  i19 = i43 + 36 | 0;
  i2 = 0;
  i18 = 0;
  i1 = -1;
  while (1) {
   if ((i18 | 0) >= (HEAP32[i29 >> 2] | 0)) break;
   i5 = HEAP32[i43 >> 2] | 0;
   i3 = HEAP32[i22 >> 2] | 0;
   L47 : do if ((HEAP32[i19 >> 2] | 0) == (Math_imul(i3, i5) | 0)) {
    switch (i42 | 0) {
    case 5:
    case 12:
    case 13:
    case 14:
     break;
    default:
     {
      i23 = 40;
      break L47;
     }
    }
    i16 = i34 + (i18 << 2) | 0;
    i15 = HEAP32[i16 >> 2] | 0;
    i17 = i15 + -3 - (HEAP32[i38 >> 2] << 1) | 0;
    if ((((i17 | 0) >= 0 ? (i15 + 3 + (HEAP32[i40 >> 2] << 1) | 0) < (i41 | 0) : 0) ? (i30 = i32 + (i18 << 2) | 0, i31 = HEAP32[i30 >> 2] | 0, i33 = i31 + -3 - (HEAP32[i25 >> 2] << 1) | 0, (i33 | 0) >= 0) : 0) ? (i31 + 3 + (HEAP32[i24 >> 2] << 1) | 0) < (i39 | 0) : 0) {
     i15 = (i3 << 1) + 6 | 0;
     i4 = (i5 << 2) + 16 | 0;
     i6 = i20;
     i7 = i21;
     i3 = 0;
     while (1) {
      if ((i3 | 0) >= (i4 | 0)) break;
      HEAP32[i7 >> 2] = 0;
      HEAP32[i6 >> 2] = 0;
      i6 = i6 + 4 | 0;
      i7 = i7 + 4 | 0;
      i3 = i3 + 1 | 0;
     }
     i14 = (i5 << 1) + 6 | 0;
     i13 = i26 + (i33 + (Math_imul(i17, i39) | 0)) | 0;
     i10 = i20;
     i11 = i21;
     i3 = i7;
     i12 = 0;
     while (1) {
      if ((i12 | 0) >= (i15 | 0)) break;
      i9 = i3 + 8 | 0;
      i5 = i6;
      i4 = 0;
      while (1) {
       if ((i4 | 0) == 2) break;
       HEAP32[i3 >> 2] = 0;
       HEAP32[i5 >> 2] = 0;
       HEAP32[i36 + (i4 << 2) >> 2] = 0;
       HEAP32[i37 + (i4 << 2) >> 2] = 0;
       i5 = i5 + 4 | 0;
       i3 = i3 + 4 | 0;
       i4 = i4 + 1 | 0;
      }
      i8 = i13;
      i5 = i10 + 8 | 0;
      i7 = i11 + 8 | 0;
      i6 = i6 + 8 | 0;
      i3 = i9;
      i4 = 0;
      while (1) {
       if ((i4 | 0) >= (i14 | 0)) break;
       i9 = i4 & 1;
       i11 = i36 + (i9 << 2) | 0;
       i10 = (HEAP32[i11 >> 2] | 0) + (HEAPU8[i8 >> 0] | 0) | 0;
       HEAP32[i11 >> 2] = i10;
       i11 = HEAPU8[i8 >> 0] | 0;
       i11 = Math_imul(i11, i11) | 0;
       i9 = i37 + (i9 << 2) | 0;
       i11 = i11 + (HEAP32[i9 >> 2] | 0) | 0;
       HEAP32[i9 >> 2] = i11;
       HEAP32[i3 >> 2] = (HEAP32[i7 >> 2] | 0) + i10;
       HEAP32[i6 >> 2] = (HEAP32[i5 >> 2] | 0) + i11;
       i8 = i8 + 1 | 0;
       i5 = i5 + 4 | 0;
       i7 = i7 + 4 | 0;
       i6 = i6 + 4 | 0;
       i3 = i3 + 4 | 0;
       i4 = i4 + 1 | 0;
      }
      i13 = i13 + i39 | 0;
      i10 = i5;
      i11 = i7;
      i12 = i12 + 1 | 0;
     }
     i5 = 0;
     while (1) {
      if ((i5 | 0) == 7) break L47;
      i6 = i5 + i17 | 0;
      i7 = i5 + 2 | 0;
      i8 = i5 + -3 | 0;
      i4 = 0;
      while (1) {
       if ((i4 | 0) == 7) break;
       _ar2GetBestMatchingSubFineOpt(i26, i39, i4 + i33 | 0, i6, i43, i21, i20, i4 + 2 | 0, i7, i35);
       i3 = HEAP32[i35 >> 2] | 0;
       if ((i3 | 0) > (i2 | 0)) {
        HEAP32[i44 >> 2] = i4 + -3 + (HEAP32[i30 >> 2] | 0);
        HEAP32[i27 >> 2] = i8 + (HEAP32[i16 >> 2] | 0);
        HEAPF32[i28 >> 2] = +(i3 | 0) / 1.0e4;
        i1 = 0;
        i2 = i3;
       }
       i4 = i4 + 1 | 0;
      }
      i5 = i5 + 1 | 0;
     }
    } else i23 = 40;
   } else i23 = 40; while (0);
   L80 : do if ((i23 | 0) == 40) {
    i23 = 0;
    i6 = HEAP32[i34 + (i18 << 2) >> 2] | 0;
    i7 = i6 + 3 | 0;
    i8 = i32 + (i18 << 2) | 0;
    i6 = i6 + -3 | 0;
    while (1) {
     if ((i6 | 0) > (i7 | 0)) break L80;
     L85 : do if ((i6 | 0) >= (HEAP32[i38 >> 2] << 1 | 0)) {
      if (((HEAP32[i40 >> 2] << 1) + i6 | 0) >= (i41 | 0)) break L80;
      i4 = HEAP32[i8 >> 2] | 0;
      i5 = i4 + 3 | 0;
      i4 = i4 + -3 | 0;
      while (1) {
       if ((i4 | 0) > (i5 | 0)) break L85;
       if ((i4 | 0) >= (HEAP32[i25 >> 2] << 1 | 0)) {
        if (((HEAP32[i24 >> 2] << 1) + i4 | 0) >= (i39 | 0)) break L85;
        _ar2GetBestMatchingSubFine(i26, i39, i42, i43, i4, i6, i35);
        i3 = HEAP32[i35 >> 2] | 0;
        if ((i3 | 0) > (i2 | 0)) {
         HEAP32[i44 >> 2] = i4;
         HEAP32[i27 >> 2] = i6;
         HEAPF32[i28 >> 2] = +(i3 | 0) / 1.0e4;
         i2 = i3;
         i1 = 0;
        }
       }
       i4 = i4 + 1 | 0;
      }
     } while (0);
     i6 = i6 + 1 | 0;
    }
   } while (0);
   i18 = i18 + 1 | 0;
  }
  _free(i21);
  _free(i20);
 }
 STACKTOP = i45;
 return i1 | 0;
}

function _ar2SelectTemplate(i30, i15, i1, i29, i3, i20) {
 i30 = i30 | 0;
 i15 = i15 | 0;
 i1 = i1 | 0;
 i29 = i29 | 0;
 i3 = i3 | 0;
 i20 = i20 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, i21 = 0, i22 = 0, i23 = 0, d24 = 0.0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i31 = 0;
 i31 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i31 + 20 | 0;
 i4 = i31 + 16 | 0;
 i2 = i31 + 12 | 0;
 i5 = i31 + 8 | 0;
 i25 = i31 + 4 | 0;
 i26 = i31;
 L1 : do if ((i1 | 0) < 0) i1 = -1; else switch (i1 | 0) {
 case 0:
  {
   d11 = +((i3 | 0) / 8 | 0 | 0);
   d12 = +((i3 * 7 | 0) / 8 | 0 | 0);
   d13 = +((i20 | 0) / 8 | 0 | 0);
   d14 = +((i20 * 7 | 0) / 8 | 0 | 0);
   d10 = +((i3 | 0) / 2 | 0 | 0);
   d9 = +((i20 | 0) / 2 | 0 | 0);
   d7 = 0.0;
   i2 = 0;
   i1 = -1;
   L38 : while (1) {
    switch (HEAP32[i30 + (i2 * 24 | 0) + 12 >> 2] | 0) {
    case -1:
     break L38;
    case 0:
     {
      d8 = +HEAPF32[i30 + (i2 * 24 | 0) + 16 >> 2];
      if ((!(d8 < d11 | d8 > d12) ? (d16 = +HEAPF32[i30 + (i2 * 24 | 0) + 20 >> 2], !(d16 < d13 | d16 > d14)) : 0) ? (d24 = d8 - d10, d17 = d16 - d9, d17 = d24 * d24 + d17 * d17, d17 > d7) : 0) {
       d7 = d17;
       i1 = i2;
      }
      break;
     }
    default:
     {}
    }
    i2 = i2 + 1 | 0;
   }
   if ((i1 | 0) == -1) {
    i1 = -1;
    break L1;
   }
   HEAP32[i30 + (i1 * 24 | 0) + 12 >> 2] = 1;
   break L1;
  }
 case 1:
  {
   d12 = +((i3 | 0) / 8 | 0 | 0);
   d10 = +((i3 * 7 | 0) / 8 | 0 | 0);
   d11 = +((i20 | 0) / 8 | 0 | 0);
   d9 = +((i20 * 7 | 0) / 8 | 0 | 0);
   i3 = i29 + 4 | 0;
   i1 = -1;
   i2 = 0;
   d7 = 0.0;
   L49 : while (1) {
    switch (HEAP32[i30 + (i2 * 24 | 0) + 12 >> 2] | 0) {
    case -1:
     break L49;
    case 0:
     {
      d8 = +HEAPF32[i30 + (i2 * 24 | 0) + 16 >> 2];
      if ((!(d8 < d12 | d8 > d10) ? (d13 = +HEAPF32[i30 + (i2 * 24 | 0) + 20 >> 2], !(d13 < d11 | d13 > d9)) : 0) ? (d24 = d8 - +HEAPF32[i29 >> 2], d14 = d13 - +HEAPF32[i3 >> 2], d14 = d24 * d24 + d14 * d14, d14 > d7) : 0) {
       i1 = i2;
       d7 = d14;
      }
      break;
     }
    default:
     {}
    }
    i2 = i2 + 1 | 0;
   }
   if ((i1 | 0) == -1) {
    i1 = -1;
    break L1;
   }
   HEAP32[i30 + (i1 * 24 | 0) + 12 >> 2] = 1;
   break L1;
  }
 case 2:
  {
   d12 = +((i3 | 0) / 8 | 0 | 0);
   d10 = +((i3 * 7 | 0) / 8 | 0 | 0);
   d11 = +((i20 | 0) / 8 | 0 | 0);
   d9 = +((i20 * 7 | 0) / 8 | 0 | 0);
   i3 = i29 + 12 | 0;
   i4 = i29 + 4 | 0;
   i5 = i29 + 8 | 0;
   i1 = -1;
   i2 = 0;
   d7 = 0.0;
   L60 : while (1) {
    switch (HEAP32[i30 + (i2 * 24 | 0) + 12 >> 2] | 0) {
    case -1:
     break L60;
    case 0:
     {
      d8 = +HEAPF32[i30 + (i2 * 24 | 0) + 16 >> 2];
      if ((!(d8 < d12 | d8 > d10) ? (d19 = +HEAPF32[i30 + (i2 * 24 | 0) + 20 >> 2], !(d19 < d11 | d19 > d9)) : 0) ? (d18 = +HEAPF32[i29 >> 2], d24 = +HEAPF32[i4 >> 2], d18 = (d8 - d18) * (+HEAPF32[i3 >> 2] - d24) - (d19 - d24) * (+HEAPF32[i5 >> 2] - d18), d18 = d18 * d18, d18 > d7) : 0) {
       i1 = i2;
       d7 = d18;
      }
      break;
     }
    default:
     {}
    }
    i2 = i2 + 1 | 0;
   }
   if ((i1 | 0) == -1) {
    i1 = -1;
    break L1;
   }
   HEAP32[i30 + (i1 * 24 | 0) + 12 >> 2] = 1;
   break L1;
  }
 case 3:
  {
   _ar2GetVectorAngle(i29, i29 + 8 | 0, i6, i4);
   _ar2GetVectorAngle(i29, i29 + 16 | 0, i2, i5);
   d24 = +((i3 | 0) / 8 | 0 | 0);
   d18 = +((i3 * 7 | 0) / 8 | 0 | 0);
   d19 = +((i20 | 0) / 8 | 0 | 0);
   d17 = +((i20 * 7 | 0) / 8 | 0 | 0);
   i22 = i29 + 24 | 0;
   i23 = i29 + 28 | 0;
   d16 = +HEAPF32[i2 >> 2];
   d14 = +HEAPF32[i4 >> 2];
   d7 = d16 * d14;
   d13 = +HEAPF32[i5 >> 2];
   d12 = +HEAPF32[i6 >> 2];
   d11 = d13 * d12;
   i20 = !(d7 - d11 >= 0.0);
   i21 = !(d11 - d7 >= 0.0);
   i6 = i20 ? 2 : 1;
   i15 = i20 ? 1 : 2;
   i1 = -1;
   i5 = 0;
   d7 = 0.0;
   L71 : while (1) {
    L73 : do switch (HEAP32[i30 + (i5 * 24 | 0) + 12 >> 2] | 0) {
    case -1:
     break L71;
    case 0:
     {
      d8 = +HEAPF32[i30 + (i5 * 24 | 0) + 16 >> 2];
      if (!(d8 < d24 | d8 > d18) ? (i27 = i30 + (i5 * 24 | 0) + 20 | 0, d11 = +HEAPF32[i27 >> 2], !(d11 < d19 | d11 > d17)) : 0) {
       HEAPF32[i22 >> 2] = d8;
       HEAP32[i23 >> 2] = HEAP32[i27 >> 2];
       _ar2GetVectorAngle(i29, i22, i25, i26);
       d11 = +HEAPF32[i25 >> 2];
       if (!i20) {
        d8 = +HEAPF32[i26 >> 2];
        if (!(d14 * d11 - d12 * d8 >= 0.0)) i28 = 39; else {
         i3 = !(d13 * d11 - d16 * d8 >= 0.0);
         i2 = i3 ? 2 : 3;
         i3 = i3 ? 3 : 2;
         i4 = 1;
        }
       } else {
        d8 = +HEAPF32[i26 >> 2];
        i28 = 39;
       }
       do if ((i28 | 0) == 39) {
        i28 = 0;
        d9 = d13 * d11;
        d10 = d16 * d8;
        if (i21 | !(d9 - d10 >= 0.0)) if (d10 - d9 >= 0.0 ? !(d12 * d8 - d14 * d11 >= 0.0) : 1) break L73; else {
         i2 = i15;
         i3 = i6;
         i4 = 3;
         break;
        } else {
         i3 = !(d14 * d11 - d12 * d8 >= 0.0);
         i2 = i3 ? 1 : 3;
         i3 = i3 ? 3 : 1;
         i4 = 2;
         break;
        }
       } while (0);
       d8 = +_ar2GetRegionArea(i29, i4, i3, i2);
       if (d8 > d7) {
        i1 = i5;
        d7 = d8;
       }
      }
      break;
     }
    default:
     {}
    } while (0);
    i5 = i5 + 1 | 0;
   }
   if ((i1 | 0) != -1) HEAP32[i30 + (i1 * 24 | 0) + 12 >> 2] = 1;
   break L1;
  }
 default:
  {
   i6 = 0;
   L5 : while (1) {
    i1 = i15 + (i6 * 24 | 0) + 12 | 0;
    L7 : do switch (HEAP32[i1 >> 2] | 0) {
    case -1:
     break L5;
    case 0:
     {
      HEAP32[i1 >> 2] = 1;
      i2 = i15 + (i6 * 24 | 0) | 0;
      i3 = i15 + (i6 * 24 | 0) + 4 | 0;
      i4 = i15 + (i6 * 24 | 0) + 8 | 0;
      i1 = 0;
      while (1) {
       i5 = i30 + (i1 * 24 | 0) + 12 | 0;
       switch (HEAP32[i5 >> 2] | 0) {
       case -1:
        break L7;
       case 0:
        {
         if (((HEAP32[i2 >> 2] | 0) == (HEAP32[i30 + (i1 * 24 | 0) >> 2] | 0) ? (HEAP32[i3 >> 2] | 0) == (HEAP32[i30 + (i1 * 24 | 0) + 4 >> 2] | 0) : 0) ? (HEAP32[i4 >> 2] | 0) == (HEAP32[i30 + (i1 * 24 | 0) + 8 >> 2] | 0) : 0) {
          i28 = 55;
          break L5;
         }
         break;
        }
       default:
        {}
       }
       i1 = i1 + 1 | 0;
      }
     }
    default:
     {}
    } while (0);
    i6 = i6 + 1 | 0;
   }
   if ((i28 | 0) == 55) {
    HEAP32[i5 >> 2] = 1;
    break L1;
   }
   HEAP32[i15 + 12 >> 2] = -1;
   i1 = HEAP32[14257] | 0;
   if (!i1) {
    _srand(_time(0) | 0);
    i1 = HEAP32[14257] | 0;
   }
   i1 = i1 + 1 | 0;
   HEAP32[14257] = (i1 | 0) == 128 ? 0 : i1;
   i1 = 0;
   i2 = 0;
   L23 : while (1) {
    switch (HEAP32[i30 + (i2 * 24 | 0) + 12 >> 2] | 0) {
    case -1:
     break L23;
    case 0:
     {
      i1 = i1 + 1 | 0;
      break;
     }
    default:
     {}
    }
    i2 = i2 + 1 | 0;
   }
   if (!i1) {
    i1 = -1;
    break L1;
   }
   i5 = ~~(+(i1 | 0) * +(_rand() | 0) * 4.656612873077393e-10);
   i1 = 0;
   i2 = 0;
   L30 : while (1) {
    i3 = i30 + (i1 * 24 | 0) + 12 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    switch (i4 | 0) {
    case -1:
     {
      i1 = i4;
      break L1;
     }
    case 0:
     {
      if ((i2 | 0) == (i5 | 0)) break L30;
      i2 = i2 + 1 | 0;
      break;
     }
    default:
     {}
    }
    i1 = i1 + 1 | 0;
   }
   HEAP32[i3 >> 2] = 1;
   break L1;
  }
 } while (0);
 STACKTOP = i31;
 return i1 | 0;
}

function _ar2GetTransMatHomographyRobust(i6, i28, i31, i32, i33, d1) {
 i6 = i6 | 0;
 i28 = i28 | 0;
 i31 = i31 | 0;
 i32 = i32 | 0;
 i33 = i33 | 0;
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, d29 = 0.0, i30 = 0, i34 = 0, i35 = 0, d36 = 0.0, d37 = 0.0, d38 = 0.0, i39 = 0, i40 = 0;
 i35 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i35 + 56 | 0;
 i4 = i35 + 48 | 0;
 i3 = i35 + 40 | 0;
 i2 = i35 + 32 | 0;
 i34 = i35;
 do if ((i32 | 0) >= 4 ? (i7 = i6 + 44 | 0, !(+HEAPF32[i7 >> 2] == 0.0)) : 0) {
  d29 = +(i32 | 0);
  i8 = ~~(d29 * d1) + -1 | 0;
  i8 = (i8 | 0) > 4 ? i8 : 4;
  i30 = _malloc(i32 << 6) | 0;
  if (!i30) {
   _arLog(0, 3, 19966, i2);
   d1 = -1.0;
   break;
  }
  i27 = _malloc(i32 << 3) | 0;
  if (!i27) {
   _arLog(0, 3, 19966, i3);
   _free(i30);
   d1 = -1.0;
   break;
  }
  i2 = i32 << 2;
  i26 = _malloc(i2) | 0;
  if (!i26) {
   _arLog(0, 3, 19966, i4);
   _free(i30);
   _free(i27);
   d1 = -1.0;
   break;
  }
  i25 = _malloc(i2) | 0;
  if (!i25) {
   _arLog(0, 3, 19966, i5);
   _free(i30);
   _free(i27);
   _free(i26);
   d1 = -1.0;
   break;
  }
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 4) break;
    HEAPF32[i33 + (i2 << 4) + (i3 << 2) >> 2] = +HEAPF32[i6 + (i2 << 4) + (i3 << 2) >> 2] / +HEAPF32[i7 >> 2];
    i3 = i3 + 1 | 0;
   }
   i2 = i2 + 1 | 0;
  }
  i18 = i33 + 4 | 0;
  i19 = i33 + 12 | 0;
  i20 = i33 + 16 | 0;
  i21 = i33 + 20 | 0;
  i22 = i33 + 28 | 0;
  i23 = i33 + 32 | 0;
  i24 = i33 + 36 | 0;
  i5 = i25 + (i8 << 2) | 0;
  i6 = i34 + 4 | 0;
  i7 = i34 + 8 | 0;
  i8 = i34 + 12 | 0;
  i14 = i34 + 16 | 0;
  i15 = i34 + 20 | 0;
  i16 = i34 + 24 | 0;
  i17 = i34 + 28 | 0;
  d13 = 0.0;
  i4 = 0;
  L24 : while (1) {
   i2 = 0;
   while (1) {
    if ((i2 | 0) >= (i32 | 0)) break;
    d1 = +HEAPF32[i31 + (i2 * 12 | 0) >> 2];
    d9 = +HEAPF32[i31 + (i2 * 12 | 0) + 4 >> 2];
    d10 = +HEAPF32[i19 >> 2] + (+HEAPF32[i33 >> 2] * d1 + +HEAPF32[i18 >> 2] * d9);
    d11 = +HEAPF32[i22 >> 2] + (d1 * +HEAPF32[i20 >> 2] + d9 * +HEAPF32[i21 >> 2]);
    d12 = d1 * +HEAPF32[i23 >> 2] + d9 * +HEAPF32[i24 >> 2] + 1.0;
    if (d12 == 0.0) {
     i2 = 21;
     break L24;
    }
    d36 = d12 * d12;
    d37 = +HEAPF32[i28 + (i2 << 3) >> 2] - d10 / d12;
    d38 = +HEAPF32[i28 + (i2 << 3) + 4 >> 2] - d11 / d12;
    i3 = i2 << 1;
    HEAPF32[i27 + (i3 << 2) >> 2] = d37;
    HEAPF32[i27 + ((i3 | 1) << 2) >> 2] = d38;
    d38 = d37 * d37 + d38 * d38;
    HEAPF32[i25 + (i2 << 2) >> 2] = d38;
    HEAPF32[i26 + (i2 << 2) >> 2] = d38;
    d38 = d1 / d12;
    i3 = i2 << 4;
    HEAPF32[i30 + (i3 << 2) >> 2] = d38;
    d37 = d9 / d12;
    HEAPF32[i30 + ((i3 | 1) << 2) >> 2] = d37;
    d12 = 1.0 / d12;
    HEAPF32[i30 + ((i3 | 2) << 2) >> 2] = d12;
    HEAPF32[i30 + ((i3 | 3) << 2) >> 2] = 0.0;
    HEAPF32[i30 + ((i3 | 4) << 2) >> 2] = 0.0;
    HEAPF32[i30 + ((i3 | 5) << 2) >> 2] = 0.0;
    HEAPF32[i30 + ((i3 | 6) << 2) >> 2] = -(d1 * d10) / d36;
    HEAPF32[i30 + ((i3 | 7) << 2) >> 2] = -(d9 * d10) / d36;
    HEAPF32[i30 + ((i3 | 8) << 2) >> 2] = 0.0;
    HEAPF32[i30 + ((i3 | 9) << 2) >> 2] = 0.0;
    HEAPF32[i30 + ((i3 | 10) << 2) >> 2] = 0.0;
    HEAPF32[i30 + ((i3 | 11) << 2) >> 2] = d38;
    HEAPF32[i30 + ((i3 | 12) << 2) >> 2] = d37;
    HEAPF32[i30 + ((i3 | 13) << 2) >> 2] = d12;
    HEAPF32[i30 + ((i3 | 14) << 2) >> 2] = -(d1 * d11) / d36;
    HEAPF32[i30 + ((i3 | 15) << 2) >> 2] = -(d9 * d11) / d36;
    i2 = i2 + 1 | 0;
   }
   _qsort(i25, i32, 4, 20);
   d11 = +HEAPF32[i5 >> 2] * 4.0;
   d11 = d11 < 16.0 ? 16.0 : d11;
   d10 = d11 / 6.0;
   d9 = 0.0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == (i32 | 0)) break;
    d1 = +HEAPF32[i25 + (i2 << 2) >> 2];
    if (d1 > d11) d1 = d10; else {
     d1 = 1.0 - d1 / d11;
     d1 = d10 * (1.0 - d1 * (d1 * d1));
    }
    d9 = d9 + d1;
    i2 = i2 + 1 | 0;
   }
   d1 = d9 / d29;
   if (d1 < .10000000149011612) {
    i2 = 42;
    break;
   }
   if ((i4 | 0) != 0 & d1 < 4.0) {
    if ((i4 | 0) == 10 | d1 / d13 > .9900000095367432) {
     i2 = 42;
     break;
    }
   } else if ((i4 | 0) == 10) {
    i2 = 42;
    break;
   }
   i2 = 0;
   i3 = 0;
   while (1) {
    if ((i3 | 0) == (i32 | 0)) break;
    d9 = +HEAPF32[i26 + (i3 << 2) >> 2];
    if (d9 <= d11) {
     d38 = 1.0 - d9 / d11;
     d38 = d38 * d38;
     i40 = i3 << 4;
     i39 = i2 << 3;
     HEAPF32[i30 + (i39 << 2) >> 2] = d38 * +HEAPF32[i30 + (i40 << 2) >> 2];
     HEAPF32[i30 + ((i39 | 1) << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 1) << 2) >> 2];
     HEAPF32[i30 + ((i39 | 2) << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 2) << 2) >> 2];
     HEAPF32[i30 + ((i39 | 3) << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 3) << 2) >> 2];
     HEAPF32[i30 + ((i39 | 4) << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 4) << 2) >> 2];
     HEAPF32[i30 + ((i39 | 5) << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 5) << 2) >> 2];
     HEAPF32[i30 + ((i39 | 6) << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 6) << 2) >> 2];
     HEAPF32[i30 + ((i39 | 7) << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 7) << 2) >> 2];
     HEAPF32[i30 + (i39 + 8 << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 8) << 2) >> 2];
     HEAPF32[i30 + (i39 + 9 << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 9) << 2) >> 2];
     HEAPF32[i30 + (i39 + 10 << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 10) << 2) >> 2];
     HEAPF32[i30 + (i39 + 11 << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 11) << 2) >> 2];
     HEAPF32[i30 + (i39 + 12 << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 12) << 2) >> 2];
     HEAPF32[i30 + (i39 + 13 << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 13) << 2) >> 2];
     HEAPF32[i30 + (i39 + 14 << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 14) << 2) >> 2];
     HEAPF32[i30 + (i39 + 15 << 2) >> 2] = d38 * +HEAPF32[i30 + ((i40 | 15) << 2) >> 2];
     i39 = i3 << 1;
     HEAPF32[i27 + (i2 << 2) >> 2] = d38 * +HEAPF32[i27 + (i39 << 2) >> 2];
     HEAPF32[i27 + (i2 + 1 << 2) >> 2] = d38 * +HEAPF32[i27 + ((i39 | 1) << 2) >> 2];
     i2 = i2 + 2 | 0;
    }
    i3 = i3 + 1 | 0;
   }
   if ((i2 | 0) < 6) {
    i2 = 38;
    break;
   }
   if ((_getDeltaS(i34, i27, i30, i2) | 0) < 0) {
    i2 = 40;
    break;
   }
   HEAPF32[i33 >> 2] = +HEAPF32[i34 >> 2] + +HEAPF32[i33 >> 2];
   HEAPF32[i18 >> 2] = +HEAPF32[i6 >> 2] + +HEAPF32[i18 >> 2];
   HEAPF32[i19 >> 2] = +HEAPF32[i7 >> 2] + +HEAPF32[i19 >> 2];
   HEAPF32[i20 >> 2] = +HEAPF32[i8 >> 2] + +HEAPF32[i20 >> 2];
   HEAPF32[i21 >> 2] = +HEAPF32[i14 >> 2] + +HEAPF32[i21 >> 2];
   HEAPF32[i22 >> 2] = +HEAPF32[i15 >> 2] + +HEAPF32[i22 >> 2];
   HEAPF32[i23 >> 2] = +HEAPF32[i16 >> 2] + +HEAPF32[i23 >> 2];
   HEAPF32[i24 >> 2] = +HEAPF32[i17 >> 2] + +HEAPF32[i24 >> 2];
   d13 = d1;
   i4 = i4 + 1 | 0;
  }
  if ((i2 | 0) == 21) {
   _free(i30);
   _free(i27);
   _free(i26);
   _free(i25);
   d1 = 1.0e8;
   break;
  } else if ((i2 | 0) == 38) {
   _free(i30);
   _free(i27);
   _free(i26);
   _free(i25);
   d1 = -1.0;
   break;
  } else if ((i2 | 0) == 40) {
   _free(i30);
   _free(i27);
   _free(i26);
   _free(i25);
   d1 = 1.0e8;
   break;
  } else if ((i2 | 0) == 42) {
   _free(i30);
   _free(i27);
   _free(i26);
   _free(i25);
   break;
  }
 } else d1 = 1.0e8; while (0);
 STACKTOP = i35;
 return +d1;
}

function _decode_bch(i1, i3, i6, i2, i28) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i28 = i28 | 0;
 var i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i29 = 0, i30 = 0;
 i30 = STACKTOP;
 STACKTOP = STACKTOP + 2384 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2384);
 i8 = i30 + 2320 | 0;
 i25 = i30 + 880 | 0;
 i23 = i30 + 800 | 0;
 i29 = i30 + 720 | 0;
 i24 = i30 + 640 | 0;
 i21 = i30 + 560 | 0;
 i27 = i30 + 48 | 0;
 i26 = i30;
 switch (i1 | 0) {
 case 2830:
  {
   i8 = i2;
   i17 = 1200;
   i20 = 688;
   i9 = 120;
   i10 = 127;
   i19 = 64;
   i11 = 9;
   i4 = 8;
   break;
  }
 case 772:
  {
   i5 = 624;
   i7 = 432;
   i9 = 13;
   i10 = 15;
   i1 = 9;
   i11 = 1;
   i4 = 5;
   break;
  }
 case 1028:
  {
   i5 = 624;
   i7 = 432;
   i9 = 13;
   i10 = 15;
   i1 = 5;
   i11 = 2;
   i4 = 5;
   break;
  }
 case 1029:
  {
   i1 = 12;
   i2 = 2;
   i4 = 4;
   break;
  }
 case 1285:
  {
   i1 = 7;
   i2 = 3;
   i4 = 4;
   break;
  }
 default:
  i1 = -1;
 }
 if ((i4 | 0) == 4) {
  i5 = 496;
  i7 = 304;
  i9 = 22;
  i10 = 31;
  i11 = i2;
  i4 = 5;
 }
 L6 : do if ((i4 | 0) == 5) {
  i4 = 0;
  i2 = i6;
  while (1) {
   if ((i4 | 0) == (i9 | 0)) {
    i17 = i5;
    i20 = i7;
    i19 = i1;
    i4 = 8;
    break L6;
   }
   HEAP8[i8 + i4 >> 0] = i3 & 1;
   i20 = _bitshift64Lshr(i3 | 0, i2 | 0, 1) | 0;
   i4 = i4 + 1 | 0;
   i3 = i20;
   i2 = getTempRet0() | 0;
  }
 } while (0);
 L11 : do if ((i4 | 0) == 8) {
  i16 = i11 << 1;
  i2 = 0;
  i4 = 1;
  while (1) {
   if ((i4 | 0) > (i16 | 0)) break;
   i5 = i21 + (i4 << 2) | 0;
   HEAP32[i5 >> 2] = 0;
   i3 = 0;
   i1 = 0;
   while (1) {
    if ((i3 | 0) >= (i9 | 0)) break;
    if (HEAP8[i8 + i3 >> 0] | 0) {
     i18 = i20 + (((Math_imul(i3, i4) | 0) % (i10 | 0) | 0) << 2) | 0;
     i1 = i1 ^ HEAP32[i18 >> 2];
     HEAP32[i5 >> 2] = i1;
    }
    i3 = i3 + 1 | 0;
   }
   HEAP32[i5 >> 2] = HEAP32[i17 + (i1 << 2) >> 2];
   i2 = (i1 | 0) == 0 ? i2 : 1;
   i4 = i4 + 1 | 0;
  }
  i18 = (i2 | 0) != 0;
  L24 : do if (i18) {
   HEAP32[i23 >> 2] = 0;
   i2 = HEAP32[i21 + 4 >> 2] | 0;
   HEAP32[i23 + 4 >> 2] = i2;
   HEAP32[i25 >> 2] = 0;
   HEAP32[i25 + 72 >> 2] = 1;
   i1 = 1;
   while (1) {
    if ((i1 | 0) >= (i16 | 0)) break;
    HEAP32[i25 + (i1 << 2) >> 2] = -1;
    HEAP32[i25 + 72 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   HEAP32[i29 >> 2] = 0;
   HEAP32[i29 + 4 >> 2] = 0;
   HEAP32[i24 >> 2] = -1;
   HEAP32[i24 + 4 >> 2] = 0;
   i15 = 0;
   i14 = 0;
   while (1) {
    i6 = i15;
    i15 = i15 + 1 | 0;
    L32 : do if ((i2 | 0) == -1) {
     i6 = i6 + 2 | 0;
     HEAP32[i29 + (i6 << 2) >> 2] = i14;
     i1 = 0;
     while (1) {
      if ((i1 | 0) > (i14 | 0)) {
       i13 = i14;
       break L32;
      }
      i13 = i25 + (i15 * 72 | 0) + (i1 << 2) | 0;
      i12 = HEAP32[i13 >> 2] | 0;
      HEAP32[i25 + (i6 * 72 | 0) + (i1 << 2) >> 2] = i12;
      HEAP32[i13 >> 2] = HEAP32[i17 + (i12 << 2) >> 2];
      i1 = i1 + 1 | 0;
     }
    } else {
     i3 = i6;
     while (1) {
      i1 = (i3 | 0) > 0;
      if (i1 & (HEAP32[i23 + (i3 << 2) >> 2] | 0) == -1) i3 = i3 + -1 | 0; else break;
     }
     if (i1) {
      i1 = i3;
      i4 = i3;
      while (1) {
       i5 = i4;
       i4 = i4 + -1 | 0;
       if ((HEAP32[i23 + (i4 << 2) >> 2] | 0) == -1) i3 = i1; else i3 = (HEAP32[i24 + (i1 << 2) >> 2] | 0) < (HEAP32[i24 + (i4 << 2) >> 2] | 0) ? i4 : i1;
       if ((i5 | 0) <= 1) break; else i1 = i3;
      }
     }
     i4 = i29 + (i3 << 2) | 0;
     i12 = i15 - i3 | 0;
     i13 = i12 + (HEAP32[i4 >> 2] | 0) | 0;
     i6 = i6 + 2 | 0;
     i13 = (i14 | 0) > (i13 | 0) ? i14 : i13;
     HEAP32[i29 + (i6 << 2) >> 2] = i13;
     i1 = 0;
     while (1) {
      if ((i1 | 0) >= (i16 | 0)) break;
      HEAP32[i25 + (i6 * 72 | 0) + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     i5 = i2 + i10 | 0;
     i7 = i23 + (i3 << 2) | 0;
     i2 = HEAP32[i4 >> 2] | 0;
     i1 = 0;
     while (1) {
      if ((i1 | 0) > (i2 | 0)) break;
      i4 = HEAP32[i25 + (i3 * 72 | 0) + (i1 << 2) >> 2] | 0;
      if ((i4 | 0) != -1) HEAP32[i25 + (i6 * 72 | 0) + (i12 + i1 << 2) >> 2] = HEAP32[i20 + (((i5 + i4 - (HEAP32[i7 >> 2] | 0) | 0) % (i10 | 0) | 0) << 2) >> 2];
      i1 = i1 + 1 | 0;
     }
     i1 = 0;
     while (1) {
      if ((i1 | 0) > (i14 | 0)) break L32;
      i12 = i25 + (i15 * 72 | 0) + (i1 << 2) | 0;
      i7 = HEAP32[i12 >> 2] | 0;
      i5 = i25 + (i6 * 72 | 0) + (i1 << 2) | 0;
      HEAP32[i5 >> 2] = HEAP32[i5 >> 2] ^ i7;
      HEAP32[i12 >> 2] = HEAP32[i17 + (i7 << 2) >> 2];
      i1 = i1 + 1 | 0;
     }
    } while (0);
    HEAP32[i24 + (i6 << 2) >> 2] = i15 - i13;
    if ((i15 | 0) >= (i16 | 0)) break;
    i1 = HEAP32[i21 + (i6 << 2) >> 2] | 0;
    if ((i1 | 0) == -1) i1 = 0; else i1 = HEAP32[i20 + (i1 << 2) >> 2] | 0;
    i4 = i23 + (i6 << 2) | 0;
    HEAP32[i4 >> 2] = i1;
    i3 = 1;
    while (1) {
     if ((i3 | 0) > (i13 | 0)) break;
     i2 = HEAP32[i21 + (i6 - i3 << 2) >> 2] | 0;
     if ((i2 | 0) != -1 ? (i22 = HEAP32[i25 + (i6 * 72 | 0) + (i3 << 2) >> 2] | 0, (i22 | 0) != 0) : 0) {
      i1 = i1 ^ HEAP32[i20 + ((((HEAP32[i17 + (i22 << 2) >> 2] | 0) + i2 | 0) % (i10 | 0) | 0) << 2) >> 2];
      HEAP32[i4 >> 2] = i1;
     }
     i3 = i3 + 1 | 0;
    }
    i2 = HEAP32[i17 + (i1 << 2) >> 2] | 0;
    HEAP32[i4 >> 2] = i2;
    if ((i13 | 0) > (i11 | 0)) break; else i14 = i13;
   }
   if ((i13 | 0) > (i11 | 0)) {
    i1 = -1;
    break L11;
   }
   i1 = 0;
   while (1) {
    if ((i1 | 0) > (i13 | 0)) break;
    i24 = i25 + (i6 * 72 | 0) + (i1 << 2) | 0;
    HEAP32[i24 >> 2] = HEAP32[i17 + (HEAP32[i24 >> 2] << 2) >> 2];
    i1 = i1 + 1 | 0;
   }
   i1 = 1;
   while (1) {
    if ((i1 | 0) > (i13 | 0)) break;
    HEAP32[i26 + (i1 << 2) >> 2] = HEAP32[i25 + (i6 * 72 | 0) + (i1 << 2) >> 2];
    i1 = i1 + 1 | 0;
   }
   i1 = 0;
   i7 = 1;
   while (1) {
    if ((i10 | 0) < (i7 | 0)) break;
    i5 = 1;
    i2 = 1;
    while (1) {
     if ((i5 | 0) > (i13 | 0)) break;
     i3 = i26 + (i5 << 2) | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if ((i4 | 0) != -1) {
      i25 = (i4 + i5 | 0) % (i10 | 0) | 0;
      HEAP32[i3 >> 2] = i25;
      i2 = HEAP32[i20 + (i25 << 2) >> 2] ^ i2;
     }
     i5 = i5 + 1 | 0;
    }
    if (!i2) {
     HEAP32[i27 + (i1 << 2) >> 2] = i10 - i7;
     i1 = i1 + 1 | 0;
    }
    i7 = i7 + 1 | 0;
   }
   if ((i1 | 0) != (i13 | 0)) {
    i1 = -1;
    break L11;
   }
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i13 | 0)) break L24;
    i26 = i8 + (HEAP32[i27 + (i1 << 2) >> 2] | 0) | 0;
    HEAP8[i26 >> 0] = HEAP8[i26 >> 0] ^ 1;
    i1 = i1 + 1 | 0;
   }
  } else i6 = 0; while (0);
  i1 = i28;
  HEAP32[i1 >> 2] = 0;
  HEAP32[i1 + 4 >> 2] = 0;
  i1 = i9 - i19 | 0;
  i2 = 1;
  i3 = 0;
  i4 = 0;
  i5 = 0;
  while (1) {
   if ((i1 | 0) >= (i9 | 0)) break;
   i26 = ___muldi3(i2 | 0, i3 | 0, HEAPU8[i8 + i1 >> 0] | 0, 0) | 0;
   i26 = _i64Add(i26 | 0, getTempRet0() | 0, i4 | 0, i5 | 0) | 0;
   i27 = getTempRet0() | 0;
   i25 = i28;
   HEAP32[i25 >> 2] = i26;
   HEAP32[i25 + 4 >> 2] = i27;
   i25 = _bitshift64Shl(i2 | 0, i3 | 0, 1) | 0;
   i1 = i1 + 1 | 0;
   i2 = i25;
   i3 = getTempRet0() | 0;
   i4 = i26;
   i5 = i27;
  }
  if (i18) i1 = HEAP32[i29 + (i6 << 2) >> 2] | 0; else i1 = 0;
 } while (0);
 STACKTOP = i30;
 return i1 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i10, i19, i20, i13, i21, i14, i1, i15) {
 i10 = i10 | 0;
 i19 = i19 | 0;
 i20 = i20 | 0;
 i13 = i13 | 0;
 i21 = i21 | 0;
 i14 = i14 | 0;
 i1 = i1 | 0;
 i15 = i15 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i16 = 0, i17 = 0, i18 = 0, i22 = 0, i23 = 0;
 i23 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i23 + 12 | 0;
 i8 = i23 + 8 | 0;
 i17 = i23 + 4 | 0;
 i18 = i23;
 __ZNKSt3__28ios_base6getlocEv(i9, i13);
 i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58792) | 0;
 __ZNSt3__26localeD2Ev(i9);
 HEAP32[i21 >> 2] = 0;
 i12 = i11 + 8 | 0;
 i3 = 0;
 L1 : while (1) {
  i2 = HEAP32[i19 >> 2] | 0;
  if (!((i1 | 0) != (i15 | 0) & (i3 | 0) == 0)) break;
  i4 = i2;
  if (i2) {
   i3 = HEAP32[i2 + 12 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i3 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i3, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i19 >> 2] = 0;
    i2 = 0;
    i5 = 1;
    i7 = 0;
   } else {
    i5 = 0;
    i7 = i4;
   }
  } else {
   i2 = 0;
   i5 = 1;
   i7 = i4;
  }
  i6 = HEAP32[i20 >> 2] | 0;
  i3 = i6;
  do if (i6) {
   i4 = HEAP32[i6 + 12 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i4 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i4 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i4, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i5) break; else {
    i22 = 63;
    break L1;
   } else {
    HEAP32[i20 >> 2] = 0;
    i3 = 0;
    i22 = 15;
    break;
   }
  } else i22 = 15; while (0);
  if ((i22 | 0) == 15) {
   i22 = 0;
   if (i5) {
    i22 = 63;
    break;
   } else i6 = 0;
  }
  L24 : do if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] & 63](i11, HEAP8[i1 >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
   i6 = i1 + 1 | 0;
   if ((i6 | 0) == (i15 | 0)) {
    i22 = 63;
    break L1;
   }
   i4 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] & 63](i11, HEAP8[i6 >> 0] | 0, 0) | 0;
   switch (i4 << 24 >> 24) {
   case 48:
   case 69:
    {
     i1 = i1 + 2 | 0;
     if ((i1 | 0) == (i15 | 0)) {
      i22 = 63;
      break L1;
     }
     i5 = i4;
     i2 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] & 63](i11, HEAP8[i1 >> 0] | 0, 0) | 0;
     i1 = i6;
     break;
    }
   default:
    {
     i5 = 0;
     i2 = i4;
    }
   }
   i6 = HEAP32[(HEAP32[i10 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[i17 >> 2] = i7;
   HEAP32[i18 >> 2] = i3;
   HEAP32[i8 >> 2] = HEAP32[i17 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i18 >> 2];
   i7 = FUNCTION_TABLE_iiiiiiiii[i6 & 15](i10, i8, i9, i13, i21, i14, i2, i5) | 0;
   HEAP32[i19 >> 2] = i7;
   i1 = i1 + 2 | 0;
  } else {
   i3 = HEAP8[i1 >> 0] | 0;
   if (i3 << 24 >> 24 > -1 ? (i16 = HEAP32[i12 >> 2] | 0, HEAP16[i16 + (i3 << 24 >> 24 << 1) >> 1] & 8192) : 0) {
    do {
     i1 = i1 + 1 | 0;
     if ((i1 | 0) == (i15 | 0)) {
      i1 = i15;
      break;
     }
     i3 = HEAP8[i1 >> 0] | 0;
     if (i3 << 24 >> 24 <= -1) break;
    } while ((HEAP16[i16 + (i3 << 24 >> 24 << 1) >> 1] & 8192) != 0);
    while (1) {
     if (i2) {
      i3 = HEAP32[i2 + 12 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i3 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i3, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[i19 >> 2] = 0;
       i2 = 0;
       i4 = 1;
      } else i4 = 0;
     } else {
      i2 = 0;
      i4 = 1;
     }
     do if (i6) {
      i3 = HEAP32[i6 + 12 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i3 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i3, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i4) break; else break L24; else {
       HEAP32[i20 >> 2] = 0;
       i22 = 42;
       break;
      }
     } else i22 = 42; while (0);
     if ((i22 | 0) == 42) {
      i22 = 0;
      if (i4) break L24; else i6 = 0;
     }
     i4 = i2 + 12 | 0;
     i3 = HEAP32[i4 >> 2] | 0;
     i5 = i2 + 16 | 0;
     if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i3 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
     if ((i3 & 255) << 24 >> 24 <= -1) break L24;
     if (!(HEAP16[(HEAP32[i12 >> 2] | 0) + (i3 << 24 >> 24 << 1) >> 1] & 8192)) break L24;
     i3 = HEAP32[i4 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0; else {
      HEAP32[i4 >> 2] = i3 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
     }
    }
   }
   i4 = i2 + 12 | 0;
   i3 = HEAP32[i4 >> 2] | 0;
   i5 = i2 + 16 | 0;
   if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i3 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
   i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 12 >> 2] & 63](i11, i3 & 255) | 0;
   if (i7 << 24 >> 24 != (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 12 >> 2] & 63](i11, HEAP8[i1 >> 0] | 0) | 0) << 24 >> 24) {
    HEAP32[i21 >> 2] = 4;
    break;
   }
   i3 = HEAP32[i4 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0; else {
    HEAP32[i4 >> 2] = i3 + 1;
    __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
   }
   i1 = i1 + 1 | 0;
  } while (0);
  i3 = HEAP32[i21 >> 2] | 0;
 }
 if ((i22 | 0) == 63) HEAP32[i21 >> 2] = 4;
 if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i19 >> 2] = 0;
   i2 = 0;
   i4 = 1;
  } else i4 = 0;
 } else {
  i2 = 0;
  i4 = 1;
 }
 i1 = HEAP32[i20 >> 2] | 0;
 do if (i1) {
  i3 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i4) break; else {
   i22 = 78;
   break;
  } else {
   HEAP32[i20 >> 2] = 0;
   i22 = 76;
   break;
  }
 } else i22 = 76; while (0);
 if ((i22 | 0) == 76 ? i4 : 0) i22 = 78;
 if ((i22 | 0) == 78) HEAP32[i21 >> 2] = HEAP32[i21 >> 2] | 2;
 STACKTOP = i23;
 return i2 | 0;
}

function __ZN46EmscriptenBindingInitializer_constant_bindingsC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i1;
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(38853, 29);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38859, 76);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38868, 77);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38877, 78);
 __ZN10emscripten8functionIiJiNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_(38893, 30);
 __ZN10emscripten8functionIiJiNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_(38904, 31);
 __ZN10emscripten8functionIiJiNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_(38920, 32);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(38934, 33);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38952, 79);
 __ZN10emscripten8functionIiJNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_(38972, 80);
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(38984, 30);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(39001, 34);
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(39021, 31);
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(39039, 32);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(39061, 35);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(39084, 36);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39113, 81);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39126, 82);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39139, 83);
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(39155, 33);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(39174, 37);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(39184, 38);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(39197, 39);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39210, 84);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39223, 85);
 __ZN10emscripten8functionIvJiEJEEEvPKcPFT_DpT0_EDpT1_(39242, 140);
 __ZN10emscripten8functionIiJEJEEEvPKcPFT_DpT0_EDpT1_(39254, 1);
 __ZN10emscripten8functionIvJidEJEEEvPKcPFT_DpT0_EDpT1_(39266, 1);
 __ZN10emscripten8functionIdJiEJEEEvPKcPFT_DpT0_EDpT1_(39289, 1);
 __ZN10emscripten8functionIvJidEJEEEvPKcPFT_DpT0_EDpT1_(39312, 2);
 __ZN10emscripten8functionIdJiEJEEEvPKcPFT_DpT0_EDpT1_(39334, 2);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(39356, 49);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39373, 86);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(39390, 50);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39403, 87);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(39416, 51);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39440, 88);
 __ZN10emscripten8functionIvJifEJEEEvPKcPFT_DpT0_EDpT1_(39464, 3);
 __ZN10emscripten8functionIdJiEJEEEvPKcPFT_DpT0_EDpT1_(39477, 3);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(39490, 52);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39508, 89);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(39526, 53);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39542, 90);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(39558, 54);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39575, 91);
 __ZN10emscripten8constantIiEEvPKcRKT_(39592, 13652);
 __ZN10emscripten8constantIiEEvPKcRKT_(39621, 13656);
 __ZN10emscripten8constantIiEEvPKcRKT_(39649, 13660);
 HEAP32[i2 >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39682, i2);
 HEAP32[i2 >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(39699, i2);
 HEAP32[i2 >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39715, i2);
 HEAP32[i2 >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39737, i2);
 HEAP32[i2 >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(39762, i2);
 HEAP32[i2 >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(39787, i2);
 HEAP32[i2 >> 2] = 100;
 __ZN10emscripten8constantIiEEvPKcRKT_(39812, i2);
 HEAP32[i2 >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39839, i2);
 HEAP32[i2 >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(39865, i2);
 HEAP32[i2 >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39891, i2);
 HEAP32[i2 >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39918, i2);
 HEAP32[i2 >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(39945, i2);
 HEAP32[i2 >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(39971, i2);
 HEAP32[i2 >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(39996, i2);
 HEAP32[i2 >> 2] = 4;
 __ZN10emscripten8constantIiEEvPKcRKT_(40034, i2);
 HEAP32[i2 >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40071, i2);
 HEAP32[i2 >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40105, i2);
 HEAP32[i2 >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(40129, i2);
 HEAP32[i2 >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(40155, i2);
 HEAP32[i2 >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(40182, i2);
 HEAP32[i2 >> 2] = 5;
 __ZN10emscripten8constantIiEEvPKcRKT_(40216, i2);
 HEAPF64[i2 >> 3] = .5;
 __ZN10emscripten8constantIdEEvPKcRKT_(40234, i2);
 HEAP32[i2 >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40255, i2);
 HEAP32[i2 >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(40274, i2);
 HEAP32[i2 >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(40292, i2);
 HEAP32[i2 >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(40310, i2);
 HEAP32[i2 >> 2] = 4;
 __ZN10emscripten8constantIiEEvPKcRKT_(40329, i2);
 HEAP32[i2 >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(40351, i2);
 HEAP32[i2 >> 2] = 515;
 __ZN10emscripten8constantIiEEvPKcRKT_(40370, i2);
 HEAP32[i2 >> 2] = 259;
 __ZN10emscripten8constantIiEEvPKcRKT_(40399, i2);
 HEAP32[i2 >> 2] = 4;
 __ZN10emscripten8constantIiEEvPKcRKT_(40427, i2);
 HEAP32[i2 >> 2] = 772;
 __ZN10emscripten8constantIiEEvPKcRKT_(40446, i2);
 HEAP32[i2 >> 2] = 1028;
 __ZN10emscripten8constantIiEEvPKcRKT_(40476, i2);
 HEAP32[i2 >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40506, i2);
 HEAP32[i2 >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(40537, i2);
 HEAP32[i2 >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(40573, i2);
 HEAP32[i2 >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(40607, i2);
 HEAP32[i2 >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40645, i2);
 HEAP32[i2 >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(40678, i2);
 HEAP32[i2 >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(40725, i2);
 HEAP32[i2 >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(40767, i2);
 HEAP32[i2 >> 2] = 4;
 __ZN10emscripten8constantIiEEvPKcRKT_(40810, i2);
 HEAP32[i2 >> 2] = 5;
 __ZN10emscripten8constantIiEEvPKcRKT_(40862, i2);
 HEAP32[i2 >> 2] = 6;
 __ZN10emscripten8constantIiEEvPKcRKT_(40913, i2);
 HEAP32[i2 >> 2] = 7;
 __ZN10emscripten8constantIiEEvPKcRKT_(40958, i2);
 HEAP32[i2 >> 2] = 8;
 __ZN10emscripten8constantIiEEvPKcRKT_(40997, i2);
 HEAP32[i2 >> 2] = 9;
 __ZN10emscripten8constantIiEEvPKcRKT_(41042, i2);
 STACKTOP = i1;
 return;
}

function _free(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 if (!i1) return;
 i3 = i1 + -8 | 0;
 i5 = HEAP32[14311] | 0;
 i1 = HEAP32[i1 + -4 >> 2] | 0;
 i2 = i1 & -8;
 i9 = i3 + i2 | 0;
 do if (!(i1 & 1)) {
  i4 = HEAP32[i3 >> 2] | 0;
  if (!(i1 & 3)) return;
  i7 = i3 + (0 - i4) | 0;
  i6 = i4 + i2 | 0;
  if (i7 >>> 0 < i5 >>> 0) return;
  if ((HEAP32[14312] | 0) == (i7 | 0)) {
   i1 = i9 + 4 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if ((i2 & 3 | 0) != 3) {
    i8 = i7;
    i2 = i6;
    break;
   }
   HEAP32[14309] = i6;
   HEAP32[i1 >> 2] = i2 & -2;
   HEAP32[i7 + 4 >> 2] = i6 | 1;
   HEAP32[i7 + i6 >> 2] = i6;
   return;
  }
  i3 = i4 >>> 3;
  if (i4 >>> 0 < 256) {
   i1 = HEAP32[i7 + 8 >> 2] | 0;
   i2 = HEAP32[i7 + 12 >> 2] | 0;
   if ((i2 | 0) == (i1 | 0)) {
    HEAP32[14307] = HEAP32[14307] & ~(1 << i3);
    i8 = i7;
    i2 = i6;
    break;
   } else {
    HEAP32[i1 + 12 >> 2] = i2;
    HEAP32[i2 + 8 >> 2] = i1;
    i8 = i7;
    i2 = i6;
    break;
   }
  }
  i5 = HEAP32[i7 + 24 >> 2] | 0;
  i1 = HEAP32[i7 + 12 >> 2] | 0;
  do if ((i1 | 0) == (i7 | 0)) {
   i2 = i7 + 16 | 0;
   i3 = i2 + 4 | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if (!i1) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = 0;
     break;
    }
   } else i2 = i3;
   while (1) {
    i4 = i1 + 20 | 0;
    i3 = HEAP32[i4 >> 2] | 0;
    if (!i3) {
     i4 = i1 + 16 | 0;
     i3 = HEAP32[i4 >> 2] | 0;
     if (!i3) break; else {
      i1 = i3;
      i2 = i4;
     }
    } else {
     i1 = i3;
     i2 = i4;
    }
   }
   HEAP32[i2 >> 2] = 0;
  } else {
   i8 = HEAP32[i7 + 8 >> 2] | 0;
   HEAP32[i8 + 12 >> 2] = i1;
   HEAP32[i1 + 8 >> 2] = i8;
  } while (0);
  if (i5) {
   i2 = HEAP32[i7 + 28 >> 2] | 0;
   i3 = 57532 + (i2 << 2) | 0;
   if ((HEAP32[i3 >> 2] | 0) == (i7 | 0)) {
    HEAP32[i3 >> 2] = i1;
    if (!i1) {
     HEAP32[14308] = HEAP32[14308] & ~(1 << i2);
     i8 = i7;
     i2 = i6;
     break;
    }
   } else {
    i8 = i5 + 16 | 0;
    HEAP32[((HEAP32[i8 >> 2] | 0) == (i7 | 0) ? i8 : i5 + 20 | 0) >> 2] = i1;
    if (!i1) {
     i8 = i7;
     i2 = i6;
     break;
    }
   }
   HEAP32[i1 + 24 >> 2] = i5;
   i2 = i7 + 16 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 | 0) {
    HEAP32[i1 + 16 >> 2] = i3;
    HEAP32[i3 + 24 >> 2] = i1;
   }
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   if (i2) {
    HEAP32[i1 + 20 >> 2] = i2;
    HEAP32[i2 + 24 >> 2] = i1;
    i8 = i7;
    i2 = i6;
   } else {
    i8 = i7;
    i2 = i6;
   }
  } else {
   i8 = i7;
   i2 = i6;
  }
 } else {
  i8 = i3;
  i7 = i3;
 } while (0);
 if (i7 >>> 0 >= i9 >>> 0) return;
 i1 = i9 + 4 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 if (!(i4 & 1)) return;
 if (!(i4 & 2)) {
  if ((HEAP32[14313] | 0) == (i9 | 0)) {
   i9 = (HEAP32[14310] | 0) + i2 | 0;
   HEAP32[14310] = i9;
   HEAP32[14313] = i8;
   HEAP32[i8 + 4 >> 2] = i9 | 1;
   if ((i8 | 0) != (HEAP32[14312] | 0)) return;
   HEAP32[14312] = 0;
   HEAP32[14309] = 0;
   return;
  }
  if ((HEAP32[14312] | 0) == (i9 | 0)) {
   i9 = (HEAP32[14309] | 0) + i2 | 0;
   HEAP32[14309] = i9;
   HEAP32[14312] = i7;
   HEAP32[i8 + 4 >> 2] = i9 | 1;
   HEAP32[i7 + i9 >> 2] = i9;
   return;
  }
  i5 = (i4 & -8) + i2 | 0;
  i3 = i4 >>> 3;
  do if (i4 >>> 0 < 256) {
   i2 = HEAP32[i9 + 8 >> 2] | 0;
   i1 = HEAP32[i9 + 12 >> 2] | 0;
   if ((i1 | 0) == (i2 | 0)) {
    HEAP32[14307] = HEAP32[14307] & ~(1 << i3);
    break;
   } else {
    HEAP32[i2 + 12 >> 2] = i1;
    HEAP32[i1 + 8 >> 2] = i2;
    break;
   }
  } else {
   i6 = HEAP32[i9 + 24 >> 2] | 0;
   i1 = HEAP32[i9 + 12 >> 2] | 0;
   do if ((i1 | 0) == (i9 | 0)) {
    i2 = i9 + 16 | 0;
    i3 = i2 + 4 | 0;
    i1 = HEAP32[i3 >> 2] | 0;
    if (!i1) {
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i3 = 0;
      break;
     }
    } else i2 = i3;
    while (1) {
     i4 = i1 + 20 | 0;
     i3 = HEAP32[i4 >> 2] | 0;
     if (!i3) {
      i4 = i1 + 16 | 0;
      i3 = HEAP32[i4 >> 2] | 0;
      if (!i3) break; else {
       i1 = i3;
       i2 = i4;
      }
     } else {
      i1 = i3;
      i2 = i4;
     }
    }
    HEAP32[i2 >> 2] = 0;
    i3 = i1;
   } else {
    i3 = HEAP32[i9 + 8 >> 2] | 0;
    HEAP32[i3 + 12 >> 2] = i1;
    HEAP32[i1 + 8 >> 2] = i3;
    i3 = i1;
   } while (0);
   if (i6 | 0) {
    i1 = HEAP32[i9 + 28 >> 2] | 0;
    i2 = 57532 + (i1 << 2) | 0;
    if ((HEAP32[i2 >> 2] | 0) == (i9 | 0)) {
     HEAP32[i2 >> 2] = i3;
     if (!i3) {
      HEAP32[14308] = HEAP32[14308] & ~(1 << i1);
      break;
     }
    } else {
     i4 = i6 + 16 | 0;
     HEAP32[((HEAP32[i4 >> 2] | 0) == (i9 | 0) ? i4 : i6 + 20 | 0) >> 2] = i3;
     if (!i3) break;
    }
    HEAP32[i3 + 24 >> 2] = i6;
    i1 = i9 + 16 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    if (i2 | 0) {
     HEAP32[i3 + 16 >> 2] = i2;
     HEAP32[i2 + 24 >> 2] = i3;
    }
    i1 = HEAP32[i1 + 4 >> 2] | 0;
    if (i1 | 0) {
     HEAP32[i3 + 20 >> 2] = i1;
     HEAP32[i1 + 24 >> 2] = i3;
    }
   }
  } while (0);
  HEAP32[i8 + 4 >> 2] = i5 | 1;
  HEAP32[i7 + i5 >> 2] = i5;
  if ((i8 | 0) == (HEAP32[14312] | 0)) {
   HEAP32[14309] = i5;
   return;
  }
 } else {
  HEAP32[i1 >> 2] = i4 & -2;
  HEAP32[i8 + 4 >> 2] = i2 | 1;
  HEAP32[i7 + i2 >> 2] = i2;
  i5 = i2;
 }
 i1 = i5 >>> 3;
 if (i5 >>> 0 < 256) {
  i3 = 57268 + (i1 << 1 << 2) | 0;
  i2 = HEAP32[14307] | 0;
  i1 = 1 << i1;
  if (!(i2 & i1)) {
   HEAP32[14307] = i2 | i1;
   i1 = i3;
   i2 = i3 + 8 | 0;
  } else {
   i2 = i3 + 8 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
  }
  HEAP32[i2 >> 2] = i8;
  HEAP32[i1 + 12 >> 2] = i8;
  HEAP32[i8 + 8 >> 2] = i1;
  HEAP32[i8 + 12 >> 2] = i3;
  return;
 }
 i1 = i5 >>> 8;
 if (i1) if (i5 >>> 0 > 16777215) i4 = 31; else {
  i7 = (i1 + 1048320 | 0) >>> 16 & 8;
  i9 = i1 << i7;
  i6 = (i9 + 520192 | 0) >>> 16 & 4;
  i9 = i9 << i6;
  i4 = (i9 + 245760 | 0) >>> 16 & 2;
  i4 = 14 - (i6 | i7 | i4) + (i9 << i4 >>> 15) | 0;
  i4 = i5 >>> (i4 + 7 | 0) & 1 | i4 << 1;
 } else i4 = 0;
 i1 = 57532 + (i4 << 2) | 0;
 HEAP32[i8 + 28 >> 2] = i4;
 HEAP32[i8 + 20 >> 2] = 0;
 HEAP32[i8 + 16 >> 2] = 0;
 i2 = HEAP32[14308] | 0;
 i3 = 1 << i4;
 L112 : do if (!(i2 & i3)) {
  HEAP32[14308] = i2 | i3;
  HEAP32[i1 >> 2] = i8;
  HEAP32[i8 + 24 >> 2] = i1;
  HEAP32[i8 + 12 >> 2] = i8;
  HEAP32[i8 + 8 >> 2] = i8;
 } else {
  i1 = HEAP32[i1 >> 2] | 0;
  L115 : do if ((HEAP32[i1 + 4 >> 2] & -8 | 0) != (i5 | 0)) {
   i4 = i5 << ((i4 | 0) == 31 ? 0 : 25 - (i4 >>> 1) | 0);
   while (1) {
    i3 = i1 + 16 + (i4 >>> 31 << 2) | 0;
    i2 = HEAP32[i3 >> 2] | 0;
    if (!i2) break;
    if ((HEAP32[i2 + 4 >> 2] & -8 | 0) == (i5 | 0)) {
     i1 = i2;
     break L115;
    } else {
     i4 = i4 << 1;
     i1 = i2;
    }
   }
   HEAP32[i3 >> 2] = i8;
   HEAP32[i8 + 24 >> 2] = i1;
   HEAP32[i8 + 12 >> 2] = i8;
   HEAP32[i8 + 8 >> 2] = i8;
   break L112;
  } while (0);
  i7 = i1 + 8 | 0;
  i9 = HEAP32[i7 >> 2] | 0;
  HEAP32[i9 + 12 >> 2] = i8;
  HEAP32[i7 >> 2] = i8;
  HEAP32[i8 + 8 >> 2] = i9;
  HEAP32[i8 + 12 >> 2] = i1;
  HEAP32[i8 + 24 >> 2] = 0;
 } while (0);
 i9 = (HEAP32[14315] | 0) + -1 | 0;
 HEAP32[14315] = i9;
 if (i9 | 0) return;
 i1 = 57684;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  if (!i1) break; else i1 = i1 + 8 | 0;
 }
 HEAP32[14315] = -1;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i10, i17, i18, i12, i19, i13, i1, i14) {
 i10 = i10 | 0;
 i17 = i17 | 0;
 i18 = i18 | 0;
 i12 = i12 | 0;
 i19 = i19 | 0;
 i13 = i13 | 0;
 i1 = i1 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i15 = 0, i16 = 0, i20 = 0, i21 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i21 + 12 | 0;
 i8 = i21 + 8 | 0;
 i15 = i21 + 4 | 0;
 i16 = i21;
 __ZNKSt3__28ios_base6getlocEv(i9, i12);
 i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58824) | 0;
 __ZNSt3__26localeD2Ev(i9);
 HEAP32[i19 >> 2] = 0;
 i3 = 0;
 L1 : while (1) {
  i2 = HEAP32[i17 >> 2] | 0;
  if (!((i1 | 0) != (i14 | 0) & (i3 | 0) == 0)) break;
  i4 = i2;
  if (i2) {
   i3 = HEAP32[i2 + 12 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i3 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i3, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i17 >> 2] = 0;
    i2 = 0;
    i5 = 1;
    i7 = 0;
   } else {
    i5 = 0;
    i7 = i4;
   }
  } else {
   i2 = 0;
   i5 = 1;
   i7 = i4;
  }
  i6 = HEAP32[i18 >> 2] | 0;
  i3 = i6;
  do if (i6) {
   i4 = HEAP32[i6 + 12 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i4 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i4 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i4, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i5) break; else {
    i20 = 60;
    break L1;
   } else {
    HEAP32[i18 >> 2] = 0;
    i3 = 0;
    i20 = 15;
    break;
   }
  } else i20 = 15; while (0);
  if ((i20 | 0) == 15) {
   i20 = 0;
   if (i5) {
    i20 = 60;
    break;
   } else i6 = 0;
  }
  L24 : do if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 52 >> 2] & 63](i11, HEAP32[i1 >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
   i6 = i1 + 4 | 0;
   if ((i6 | 0) == (i14 | 0)) {
    i20 = 60;
    break L1;
   }
   i4 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 52 >> 2] & 63](i11, HEAP32[i6 >> 2] | 0, 0) | 0;
   switch (i4 << 24 >> 24) {
   case 48:
   case 69:
    {
     i1 = i1 + 8 | 0;
     if ((i1 | 0) == (i14 | 0)) {
      i20 = 60;
      break L1;
     }
     i5 = i4;
     i2 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 52 >> 2] & 63](i11, HEAP32[i1 >> 2] | 0, 0) | 0;
     i1 = i6;
     break;
    }
   default:
    {
     i5 = 0;
     i2 = i4;
    }
   }
   i6 = HEAP32[(HEAP32[i10 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[i15 >> 2] = i7;
   HEAP32[i16 >> 2] = i3;
   HEAP32[i8 >> 2] = HEAP32[i15 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i16 >> 2];
   i7 = FUNCTION_TABLE_iiiiiiiii[i6 & 15](i10, i8, i9, i12, i19, i13, i2, i5) | 0;
   HEAP32[i17 >> 2] = i7;
   i1 = i1 + 8 | 0;
  } else {
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 12 >> 2] & 63](i11, 8192, HEAP32[i1 >> 2] | 0) | 0)) {
    i4 = i2 + 12 | 0;
    i3 = HEAP32[i4 >> 2] | 0;
    i5 = i2 + 16 | 0;
    if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i3 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
    i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, i3) | 0;
    if ((i7 | 0) != (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, HEAP32[i1 >> 2] | 0) | 0)) {
     HEAP32[i19 >> 2] = 4;
     break;
    }
    i3 = HEAP32[i4 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0; else {
     HEAP32[i4 >> 2] = i3 + 4;
     __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
    }
    i1 = i1 + 4 | 0;
    break;
   }
   do {
    i1 = i1 + 4 | 0;
    if ((i1 | 0) == (i14 | 0)) {
     i1 = i14;
     break;
    }
   } while (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 12 >> 2] & 63](i11, 8192, HEAP32[i1 >> 2] | 0) | 0);
   while (1) {
    if (i2) {
     i3 = HEAP32[i2 + 12 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i3 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i3, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[i17 >> 2] = 0;
      i2 = 0;
      i4 = 1;
     } else i4 = 0;
    } else {
     i2 = 0;
     i4 = 1;
    }
    do if (i6) {
     i3 = HEAP32[i6 + 12 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i3 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i3, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i4) break; else break L24; else {
      HEAP32[i18 >> 2] = 0;
      i20 = 40;
      break;
     }
    } else i20 = 40; while (0);
    if ((i20 | 0) == 40) {
     i20 = 0;
     if (i4) break L24; else i6 = 0;
    }
    i4 = i2 + 12 | 0;
    i3 = HEAP32[i4 >> 2] | 0;
    i5 = i2 + 16 | 0;
    if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i3 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 12 >> 2] & 63](i11, 8192, i3) | 0)) break L24;
    i3 = HEAP32[i4 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0; else {
     HEAP32[i4 >> 2] = i3 + 4;
     __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
    }
   }
  } while (0);
  i3 = HEAP32[i19 >> 2] | 0;
 }
 if ((i20 | 0) == 60) HEAP32[i19 >> 2] = 4;
 if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i17 >> 2] = 0;
   i2 = 0;
   i4 = 1;
  } else i4 = 0;
 } else {
  i2 = 0;
  i4 = 1;
 }
 i1 = HEAP32[i18 >> 2] | 0;
 do if (i1) {
  i3 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i4) break; else {
   i20 = 75;
   break;
  } else {
   HEAP32[i18 >> 2] = 0;
   i20 = 73;
   break;
  }
 } else i20 = 73; while (0);
 if ((i20 | 0) == 73 ? i4 : 0) i20 = 75;
 if ((i20 | 0) == 75) HEAP32[i19 >> 2] = HEAP32[i19 >> 2] | 2;
 STACKTOP = i21;
 return i2 | 0;
}

function _ar2ReadSurfaceSet(i4, i1, i14) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0;
 i36 = STACKTOP;
 STACKTOP = STACKTOP + 1248 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1248);
 i35 = i36 + 1232 | 0;
 i34 = i36 + 1224 | 0;
 i33 = i36 + 1208 | 0;
 i32 = i36 + 1200 | 0;
 i31 = i36 + 1184 | 0;
 i30 = i36 + 1176 | 0;
 i29 = i36 + 1160 | 0;
 i28 = i36 + 1152 | 0;
 i27 = i36 + 1144 | 0;
 i26 = i36 + 1136 | 0;
 i25 = i36 + 1128 | 0;
 i24 = i36 + 1120 | 0;
 i23 = i36 + 1112 | 0;
 i22 = i36 + 1104 | 0;
 i21 = i36 + 1096 | 0;
 i20 = i36 + 1088 | 0;
 i19 = i36 + 1080 | 0;
 i18 = i36 + 1072 | 0;
 i12 = i36 + 1064 | 0;
 i8 = i36 + 1056 | 0;
 i7 = i36 + 1048 | 0;
 i6 = i36 + 1040 | 0;
 i5 = i36 + 1032 | 0;
 i3 = i36 + 1024 | 0;
 i15 = i36 + 768 | 0;
 i16 = i36 + 512 | 0;
 i17 = i36 + 1236 | 0;
 i2 = i36;
 do if (((i1 | 0) != 0 ? (HEAP8[i1 >> 0] | 0) != 0 : 0) ? (_strcmp(i1, 44862) | 0) != 0 : 0) {
  HEAP32[i3 >> 2] = i4;
  HEAP32[i3 + 4 >> 2] = i1;
  _sprintf(i2, 20598, i3) | 0;
  i1 = _fopen(i2, 19687) | 0;
  if (!i1) {
   HEAP32[i5 >> 2] = i4;
   _arLog(0, 3, 19689, i5);
   i13 = ___errno_location() | 0;
   i13 = _strerror(HEAP32[i13 >> 2] | 0) | 0;
   HEAP32[i6 >> 2] = 59242;
   HEAP32[i6 + 4 >> 2] = i13;
   _arLog(0, 3, 19715, i6);
   i13 = 0;
   break;
  } else {
   i10 = i1;
   i1 = 1;
   i9 = 8;
   break;
  }
 } else i9 = 4; while (0);
 if ((i9 | 0) == 4) {
  _strncpy(i16, i4, 255) | 0;
  HEAP8[i16 + 255 >> 0] = 0;
  i10 = 0;
  i1 = 0;
  i9 = 8;
 }
 do if ((i9 | 0) == 8) {
  i11 = _malloc(1140) | 0;
  if (!i11) {
   _arLog(0, 3, 20581, i7);
   _exit(1);
  }
  i7 = (i1 | 0) != 0;
  if (i7) {
   if (!(_get_buff_380(i15, i10) | 0)) {
    _fclose(i10) | 0;
    _free(i11);
    i13 = 0;
    break;
   }
   HEAP32[i8 >> 2] = i17;
   if ((_sscanf(i15, 19721, i8) | 0) != 1) {
    _fclose(i10) | 0;
    _free(i11);
    i13 = 0;
    break;
   }
   i1 = HEAP32[i17 >> 2] | 0;
   if ((i1 | 0) < 1) {
    _fclose(i10) | 0;
    _free(i11);
    i13 = 0;
    break;
   }
  } else i1 = 1;
  HEAP32[i11 + 4 >> 2] = i1;
  HEAP32[i11 + 152 >> 2] = 0;
  i6 = _malloc(i1 * 112 | 0) | 0;
  HEAP32[i11 >> 2] = i6;
  if (!i6) {
   _arLog(0, 3, 20581, i12);
   _exit(1);
  }
  i5 = (i14 | 0) == 0;
  i2 = 0;
  L28 : while (1) {
   HEAP32[i17 >> 2] = i2;
   if ((i2 | 0) >= (i1 | 0)) {
    i9 = 57;
    break;
   }
   HEAP32[i18 >> 2] = i2 + 1;
   _arLog(0, 1, 19724, i18);
   if (i7) {
    if (!(_get_buff_380(i15, i10) | 0)) {
     i9 = 57;
     break;
    }
    HEAP32[i19 >> 2] = i16;
    if ((_sscanf(i15, 19748, i19) | 0) != 1) {
     i9 = 57;
     break;
    }
    _ar2UtilRemoveExt(i16) | 0;
   }
   _arLog(0, 1, 19751, i20);
   i12 = _ar2ReadImageSet(i16) | 0;
   HEAP32[i6 + ((HEAP32[i17 >> 2] | 0) * 112 | 0) >> 2] = i12;
   if (!i12) {
    i9 = 26;
    break;
   }
   _arLog(0, 1, 19800, i22);
   _arLog(0, 1, 19810, i23);
   i12 = _ar2ReadFeatureSet(i16, 44862) | 0;
   HEAP32[i6 + ((HEAP32[i17 >> 2] | 0) * 112 | 0) + 4 >> 2] = i12;
   if (!i12) {
    i9 = 29;
    break;
   }
   _arLog(0, 1, 19800, i25);
   if (i5) HEAP32[i6 + ((HEAP32[i17 >> 2] | 0) * 112 | 0) + 8 >> 2] = 0; else {
    _arLog(0, 1, 19861, i26);
    _ar2UtilRemoveExt(i16) | 0;
    i12 = _ar2ReadMarkerSet(i16, 19880, i14) | 0;
    HEAP32[i6 + ((HEAP32[i17 >> 2] | 0) * 112 | 0) + 8 >> 2] = i12;
    if (!i12) {
     i9 = 33;
     break;
    }
    _arLog(0, 1, 19800, i28);
   }
   L43 : do if (i7) {
    if (!(_get_buff_380(i15, i10) | 0)) {
     i9 = 57;
     break L28;
    }
    i12 = HEAP32[i17 >> 2] | 0;
    HEAP32[i29 >> 2] = i6 + (i12 * 112 | 0) + 12;
    HEAP32[i29 + 4 >> 2] = i6 + (i12 * 112 | 0) + 16;
    HEAP32[i29 + 8 >> 2] = i6 + (i12 * 112 | 0) + 20;
    HEAP32[i29 + 12 >> 2] = i6 + (i12 * 112 | 0) + 24;
    if ((_sscanf(i15, 19914, i29) | 0) != 4) {
     i9 = 40;
     break L28;
    }
    if (!(_get_buff_380(i15, i10) | 0)) {
     i9 = 57;
     break L28;
    }
    i12 = HEAP32[i17 >> 2] | 0;
    HEAP32[i31 >> 2] = i6 + (i12 * 112 | 0) + 28;
    HEAP32[i31 + 4 >> 2] = i6 + (i12 * 112 | 0) + 32;
    HEAP32[i31 + 8 >> 2] = i6 + (i12 * 112 | 0) + 36;
    HEAP32[i31 + 12 >> 2] = i6 + (i12 * 112 | 0) + 40;
    if ((_sscanf(i15, 19914, i31) | 0) != 4) {
     i9 = 43;
     break L28;
    }
    if (!(_get_buff_380(i15, i10) | 0)) {
     i9 = 57;
     break L28;
    }
    i12 = HEAP32[i17 >> 2] | 0;
    HEAP32[i33 >> 2] = i6 + (i12 * 112 | 0) + 44;
    HEAP32[i33 + 4 >> 2] = i6 + (i12 * 112 | 0) + 48;
    HEAP32[i33 + 8 >> 2] = i6 + (i12 * 112 | 0) + 52;
    HEAP32[i33 + 12 >> 2] = i6 + (i12 * 112 | 0) + 56;
    if ((_sscanf(i15, 19914, i33) | 0) != 4) {
     i9 = 47;
     break L28;
    }
    i2 = HEAP32[i17 >> 2] | 0;
   } else {
    i2 = HEAP32[i17 >> 2] | 0;
    i4 = 0;
    while (1) {
     if ((i4 | 0) == 3) break L43;
     i3 = 0;
     while (1) {
      if ((i3 | 0) == 4) break;
      HEAPF32[i6 + (i2 * 112 | 0) + 12 + (i4 << 4) + (i3 << 2) >> 2] = (i4 | 0) == (i3 | 0) ? 1.0 : 0.0;
      i3 = i3 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   } while (0);
   _arUtilMatInvf(i6 + (i2 * 112 | 0) + 12 | 0, i6 + (i2 * 112 | 0) + 60 | 0) | 0;
   _ar2UtilReplaceExt(i16, 256, 19962) | 0;
   i2 = _malloc(256) | 0;
   HEAP32[i6 + ((HEAP32[i17 >> 2] | 0) * 112 | 0) + 108 >> 2] = i2;
   if (!i2) {
    i9 = 55;
    break;
   }
   _strncpy(i2, i16, 256) | 0;
   i2 = (HEAP32[i17 >> 2] | 0) + 1 | 0;
  }
  if ((i9 | 0) == 26) {
   HEAP32[i21 >> 2] = i16;
   _arLog(0, 3, 19769, i21);
   _free(i6);
   _free(i11);
   if (!i10) {
    i13 = 0;
    break;
   }
   _fclose(i10) | 0;
   i13 = 0;
   break;
  } else if ((i9 | 0) == 29) {
   HEAP32[i24 >> 2] = i16;
   _arLog(0, 3, 19830, i24);
   _ar2FreeImageSet(i6 + ((HEAP32[i17 >> 2] | 0) * 112 | 0) | 0) | 0;
   _free(i6);
   _free(i11);
   if (!i10) {
    i13 = 0;
    break;
   }
   _fclose(i10) | 0;
   i13 = 0;
   break;
  } else if ((i9 | 0) == 33) {
   HEAP32[i27 >> 2] = i16;
   _arLog(0, 3, 19884, i27);
   _ar2FreeFeatureSet(i6 + ((HEAP32[i17 >> 2] | 0) * 112 | 0) + 4 | 0) | 0;
   _ar2FreeImageSet(i6 + ((HEAP32[i17 >> 2] | 0) * 112 | 0) | 0) | 0;
   _free(i6);
   _free(i11);
   if (!i10) {
    i13 = 0;
    break;
   }
   _fclose(i10) | 0;
   i13 = 0;
   break;
  } else if ((i9 | 0) == 40) {
   _arLog(0, 3, 19926, i30);
   _fclose(i10) | 0;
   _exit(0);
  } else if ((i9 | 0) == 43) {
   _arLog(0, 3, 19926, i32);
   _fclose(i10) | 0;
   _exit(0);
  } else if ((i9 | 0) == 47) {
   _arLog(0, 3, 19926, i34);
   _fclose(i10) | 0;
   _exit(0);
  } else if ((i9 | 0) == 55) {
   _arLog(0, 3, 20581, i35);
   _exit(1);
  } else if ((i9 | 0) == 57) {
   if (i10 | 0) _fclose(i10) | 0;
   if ((HEAP32[i17 >> 2] | 0) >= (i1 | 0)) {
    i13 = i11;
    break;
   }
   _exit(0);
  }
 } while (0);
 STACKTOP = i36;
 return i13 | 0;
}

function __ZN6vision26PreemptiveRobustHomographyIfEEbPT_PKS1_S4_iS4_iRNSt3__26vectorIS1_NS5_9allocatorIS1_EEEERNS6_IiNS7_IiEEEERNS6_INS5_4pairIS1_iEENS7_ISF_EEEES1_iii(i23, i17, i19, i20, i14, i15, i24, i1, i22, d2, i10, i12, i4) {
 i23 = i23 | 0;
 i17 = i17 | 0;
 i19 = i19 | 0;
 i20 = i20 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i24 = i24 | 0;
 i1 = i1 | 0;
 i22 = i22 | 0;
 d2 = +d2;
 i10 = i10 | 0;
 i12 = i12 | 0;
 i4 = i4 | 0;
 var d3 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i13 = 0, i16 = 0, i18 = 0, i21 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0;
 i25 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i18 = i25 + 8 | 0;
 i13 = i25;
 if ((HEAP32[i24 + 4 >> 2] | 0) - (HEAP32[i24 >> 2] | 0) >> 2 >>> 0 < (i10 * 9 | 0) >>> 0) {
  i21 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 29827) | 0, 29885) | 0, 33655) | 0, 119) | 0, 33662) | 0, 30015) | 0;
  __ZNKSt3__28ios_base6getlocEv(i18, i21 + (HEAP32[(HEAP32[i21 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i16 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 28 >> 2] & 63](i16, 10) | 0;
  __ZNSt3__26localeD2Ev(i18);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i21, i16) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i21) | 0;
  _abort();
 }
 i16 = HEAP32[i1 >> 2] | 0;
 i21 = i16;
 if ((HEAP32[i1 + 4 >> 2] | 0) - i16 >> 2 >>> 0 < i20 >>> 0) {
  i16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30065) | 0, 29885) | 0, 33655) | 0, 120) | 0, 33662) | 0, 30115) | 0;
  __ZNKSt3__28ios_base6getlocEv(i18, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i18);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 }
 if ((HEAP32[i22 + 4 >> 2] | 0) - (HEAP32[i22 >> 2] | 0) >> 3 >>> 0 < i10 >>> 0) {
  i16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30157) | 0, 29885) | 0, 33655) | 0, 121) | 0, 33662) | 0, 30219) | 0;
  __ZNKSt3__28ios_base6getlocEv(i18, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i18);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 }
 if ((i20 | 0) >= 4) {
  HEAP32[i13 >> 2] = 1234;
  d2 = +__ZN6vision3sqrIfEET_S1_(d2);
  i16 = __ZN6vision4min2IiEET_S1_S1_(i4, i20) | 0;
  __ZN6vision16SequentialVectorIiEEvPT_iS1_(i21, i20, 0);
  __ZN6vision12ArrayShuffleIiEEvPT_iiRi(i21, i20, i20, i13);
  i5 = i21 + 4 | 0;
  i6 = i21 + 8 | 0;
  i7 = i21 + 12 | 0;
  i8 = (i15 | 0) > 0;
  i4 = 0;
  i9 = 0;
  while (1) {
   if (!((i9 | 0) < (i10 | 0) & (i4 | 0) < (i12 | 0))) break;
   __ZN6vision12ArrayShuffleIiEEvPT_iiRi(i21, i20, 4, i13);
   i28 = HEAP32[i21 >> 2] << 1;
   i27 = HEAP32[i5 >> 2] << 1;
   i26 = HEAP32[i6 >> 2] << 1;
   i1 = HEAP32[i7 >> 2] << 1;
   do if (__ZN6vision40Homography4PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_S3_S3_(i17 + (i28 << 2) | 0, i17 + (i27 << 2) | 0, i17 + (i26 << 2) | 0, i17 + (i1 << 2) | 0, i19 + (i28 << 2) | 0, i19 + (i27 << 2) | 0, i19 + (i26 << 2) | 0, i19 + (i1 << 2) | 0) | 0 ? (i11 = i9 * 9 | 0, i1 = HEAP32[i21 >> 2] << 1, i26 = HEAP32[i5 >> 2] << 1, i27 = HEAP32[i6 >> 2] << 1, i28 = HEAP32[i7 >> 2] << 1, __ZN6vision22SolveHomography4PointsIfEEbPT_PKS1_S4_S4_S4_S4_S4_S4_S4_((HEAP32[i24 >> 2] | 0) + (i11 << 2) | 0, i17 + (i1 << 2) | 0, i17 + (i26 << 2) | 0, i17 + (i27 << 2) | 0, i17 + (i28 << 2) | 0, i19 + (i1 << 2) | 0, i19 + (i26 << 2) | 0, i19 + (i27 << 2) | 0, i19 + (i28 << 2) | 0) | 0) : 0) {
    if (i8 ? !(__ZN6vision39HomographyPointsGeometricallyConsistentIfEEbPKT_S3_i((HEAP32[i24 >> 2] | 0) + (i11 << 2) | 0, i14, i15) | 0) : 0) {
     i1 = i9;
     break;
    }
    i1 = i9 + 1 | 0;
   } else i1 = i9; while (0);
   i4 = i4 + 1 | 0;
   i9 = i1;
  }
  d2 = 1.0 / d2;
  if (i9) {
   i4 = HEAP32[i22 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i9 | 0)) break;
    HEAPF32[i4 + (i1 << 3) >> 2] = 0.0;
    HEAP32[i4 + (i1 << 3) + 4 >> 2] = i1;
    i1 = i1 + 1 | 0;
   }
   i8 = 0;
   while (1) {
    if (!((i9 | 0) > 2 & (i8 | 0) < (i20 | 0))) break;
    i6 = (__ZN6vision4min2IiEET_S1_S1_(i16, i20 - i8 | 0) | 0) + i8 | 0;
    i5 = 0;
    i1 = HEAP32[i22 >> 2] | 0;
    while (1) {
     if ((i5 | 0) == (i9 | 0)) break;
     i7 = (HEAP32[i24 >> 2] | 0) + ((HEAP32[i1 + (i5 << 3) + 4 >> 2] | 0) * 9 << 2) | 0;
     i4 = i8;
     while (1) {
      if ((i4 | 0) >= (i6 | 0)) break;
      i1 = HEAP32[i21 + (i4 << 2) >> 2] << 1;
      d3 = +__ZN6vision32CauchyProjectiveReprojectionCostIfEET_PKS1_S3_S3_S1_(i7, i17 + (i1 << 2) | 0, i19 + (i1 << 2) | 0, d2);
      i1 = HEAP32[i22 >> 2] | 0;
      i28 = i1 + (i5 << 3) | 0;
      HEAPF32[i28 >> 2] = d3 + +HEAPF32[i28 >> 2];
      i4 = i4 + 1 | 0;
     }
     i5 = i5 + 1 | 0;
    }
    __ZN6vision10FastMedianIfiEENSt3__24pairIT_T0_EEPS5_i(i18, i1, i9);
    i8 = i6;
    i9 = i9 >> 1;
   }
   i5 = HEAP32[i22 >> 2] | 0;
   i4 = 1;
   d2 = +HEAPF32[i5 >> 2];
   i1 = HEAP32[i5 + 4 >> 2] | 0;
   while (1) {
    if ((i4 | 0) >= (i9 | 0)) break;
    d3 = +HEAPF32[i5 + (i4 << 3) >> 2];
    if (d3 < d2) {
     d2 = d3;
     i1 = HEAP32[i5 + (i4 << 3) + 4 >> 2] | 0;
    }
    i4 = i4 + 1 | 0;
   }
   __ZN6vision11CopyVector9IfEEvPT_PKS1_(i23, (HEAP32[i24 >> 2] | 0) + (i1 * 9 << 2) | 0);
   __ZN6vision19NormalizeHomographyIfEEvPT_(i23);
   i1 = 1;
  } else i1 = 0;
 } else i1 = 0;
 STACKTOP = i25;
 return i1 | 0;
}

function __ZN6vision12FindFeaturesINS_14FREAKExtractorELi96EEEvPNS_8KeyframeIXT0_EEEPKNS_25GaussianScaleSpacePyramidEPNS_25DoGScaleInvariantDetectorEPT_(i2, i3, i4, i5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i8 + 20 | 0;
 i7 = i8;
 if (!i3) {
  i1 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32099) | 0, 28362) | 0, 33655) | 0, 212) | 0, 33662) | 0, 32235) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58792) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i1, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i1) | 0;
  _abort();
 }
 if (!i4) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 28477) | 0, 28362) | 0, 33655) | 0, 213) | 0, 33662) | 0, 28509) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58792) | 0;
  i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i1, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i1) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 i9 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv(i3) | 0;
 if ((HEAP32[i9 + 4 >> 2] | 0) == (HEAP32[i9 >> 2] | 0)) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 28526) | 0, 28362) | 0, 33655) | 0, 214) | 0, 33662) | 0, 28578) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58792) | 0;
  i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i1, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i1) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 i9 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv(i3) | 0;
 i9 = __ZNK6vision5Image5widthEv(HEAP32[i9 >> 2] | 0) | 0;
 if ((i9 | 0) != (__ZNK6vision25DoGScaleInvariantDetector5widthEv(i4) | 0)) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 28595) | 0, 28362) | 0, 33655) | 0, 215) | 0, 33662) | 0, 28668) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58792) | 0;
  i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i1, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i1) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 i9 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv(i3) | 0;
 i9 = __ZNK6vision5Image6heightEv(HEAP32[i9 >> 2] | 0) | 0;
 if ((i9 | 0) != (__ZNK6vision25DoGScaleInvariantDetector6heightEv(i4) | 0)) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 28703) | 0, 28362) | 0, 33655) | 0, 216) | 0, 33662) | 0, 28668) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58792) | 0;
  i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i1, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i1) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 __ZN6vision25DoGScaleInvariantDetector6detectEPKNS_25GaussianScaleSpacePyramidE(i4, i3);
 i1 = __ZNK6vision25DoGScaleInvariantDetector8featuresEv(i4) | 0;
 __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEEC2Em(i6, ((HEAP32[i1 + 4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) | 0) / 36 | 0);
 i1 = 0;
 while (1) {
  i9 = __ZNK6vision25DoGScaleInvariantDetector8featuresEv(i4) | 0;
  if (i1 >>> 0 >= (((HEAP32[i9 + 4 >> 2] | 0) - (HEAP32[i9 >> 2] | 0) | 0) / 36 | 0) >>> 0) break;
  i9 = __ZNK6vision25DoGScaleInvariantDetector8featuresEv(i4) | 0;
  i9 = HEAP32[i9 >> 2] | 0;
  __ZN6vision12FeaturePointC2Effffb(i7, +HEAPF32[i9 + (i1 * 36 | 0) >> 2], +HEAPF32[i9 + (i1 * 36 | 0) + 4 >> 2], +HEAPF32[i9 + (i1 * 36 | 0) + 8 >> 2], +HEAPF32[i9 + (i1 * 36 | 0) + 28 >> 2], +HEAPF32[i9 + (i1 * 36 | 0) + 24 >> 2] > 0.0);
  i9 = (HEAP32[i6 >> 2] | 0) + (i1 * 20 | 0) | 0;
  HEAP32[i9 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  HEAP32[i9 + 12 >> 2] = HEAP32[i7 + 12 >> 2];
  HEAP8[i9 + 16 >> 0] = HEAP8[i7 + 16 >> 0] | 0;
  __ZN6vision12FeaturePointD2Ev(i7);
  i1 = i1 + 1 | 0;
 }
 __ZN6vision14FREAKExtractor7extractERNS_18BinaryFeatureStoreEPKNS_25GaussianScaleSpacePyramidERKNSt3__26vectorINS_12FeaturePointENS6_9allocatorIS8_EEEE(i5, __ZN6vision8KeyframeILi96EE5storeEv(i2) | 0, i3, i6);
 __ZNSt3__213__vector_baseIN6vision12FeaturePointENS_9allocatorIS2_EEED2Ev(i6);
 STACKTOP = i8;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i1, i18, i23) {
 i1 = i1 | 0;
 i18 = i18 | 0;
 i23 = i23 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0;
 i27 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i24 = i27 + 32 | 0;
 i25 = i27 + 16 | 0;
 i21 = i27 + 12 | 0;
 i26 = i27;
 do if ((i18 - i1 | 0) > 1 ? (HEAP8[i1 >> 0] | 0) == 73 : 0) {
  i19 = i23 + 61 | 0;
  i17 = i23 + 36 | 0;
  if (HEAP8[i19 >> 0] | 0) {
   i4 = HEAP32[i17 >> 2] | 0;
   i3 = HEAP32[i4 + -16 >> 2] | 0;
   i4 = i4 + -12 | 0;
   i2 = HEAP32[i4 >> 2] | 0;
   while (1) {
    if ((i2 | 0) == (i3 | 0)) break;
    i20 = i2 + -16 | 0;
    __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i20);
    i2 = i20;
   }
   HEAP32[i4 >> 2] = i3;
  }
  HEAP32[i25 >> 2] = 0;
  HEAP32[i25 + 4 >> 2] = 0;
  HEAP32[i25 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i25, 50560, __ZNSt3__211char_traitsIcE6lengthEPKc(50560) | 0);
  i20 = i23 + 4 | 0;
  i10 = i23 + 12 | 0;
  i11 = i23 + 40 | 0;
  i12 = i23 + 32 | 0;
  i15 = i25 + 11 | 0;
  i16 = i25 + 4 | 0;
  i13 = i24 + 11 | 0;
  i14 = i24 + 4 | 0;
  i5 = i1 + 1 | 0;
  while (1) {
   if ((HEAP8[i5 >> 0] | 0) == 69) break;
   if (HEAP8[i19 >> 0] | 0) {
    HEAP32[i21 >> 2] = HEAP32[i10 >> 2];
    i2 = HEAP32[i17 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[i11 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2IS4_EERKNS1_IT_Lm4096EEE(i24, i21);
     HEAP32[i2 >> 2] = 0;
     HEAP32[i2 + 4 >> 2] = 0;
     HEAP32[i2 + 8 >> 2] = 0;
     HEAP32[i2 + 12 >> 2] = HEAP32[i24 >> 2];
     HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i12, i21);
   }
   i8 = ((HEAP32[i20 >> 2] | 0) - (HEAP32[i23 >> 2] | 0) | 0) / 24 | 0;
   i9 = __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_(i5, i18, i23) | 0;
   i3 = ((HEAP32[i20 >> 2] | 0) - (HEAP32[i23 >> 2] | 0) | 0) / 24 | 0;
   if (HEAP8[i19 >> 0] | 0) {
    i4 = HEAP32[i17 >> 2] | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == -1) break;
     i7 = i2 + -1 | 0;
     __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev(i4 + (i7 << 4) | 0);
     i2 = i7;
    }
    HEAP32[i17 >> 2] = i4 + -16;
   }
   if ((i9 | 0) == (i5 | 0) | (i9 | 0) == (i18 | 0)) {
    i22 = 53;
    break;
   }
   L29 : do if (HEAP8[i19 >> 0] | 0) {
    i4 = HEAP32[i17 >> 2] | 0;
    i2 = HEAP32[i10 >> 2] | 0;
    HEAP32[i24 >> 2] = i2;
    i5 = i4 + -12 | 0;
    i6 = HEAP32[i5 >> 2] | 0;
    if (i6 >>> 0 < (HEAP32[i4 + -8 >> 2] | 0) >>> 0) {
     HEAP32[i6 >> 2] = 0;
     HEAP32[i6 + 4 >> 2] = 0;
     HEAP32[i6 + 8 >> 2] = 0;
     HEAP32[i6 + 12 >> 2] = i2;
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i4 + -16 | 0, i24);
    i2 = i8;
    while (1) {
     if (i2 >>> 0 >= i3 >>> 0) break L29;
     i4 = HEAP32[(HEAP32[i17 >> 2] | 0) + -12 >> 2] | 0;
     i5 = (HEAP32[i23 >> 2] | 0) + (i2 * 24 | 0) | 0;
     i6 = i4 + -12 | 0;
     i7 = HEAP32[i6 >> 2] | 0;
     if ((i7 | 0) == (HEAP32[i4 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i4 + -16 | 0, i5); else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i7, i5);
      HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 24;
     }
     i2 = i2 + 1 | 0;
    }
   } while (0);
   i2 = i8;
   while (1) {
    if (i2 >>> 0 >= i3 >>> 0) break;
    i7 = HEAP8[i15 >> 0] | 0;
    if ((i7 << 24 >> 24 < 0 ? HEAP32[i16 >> 2] | 0 : i7 & 255) >>> 0 > 1) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i25, 50748) | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i24, (HEAP32[i23 >> 2] | 0) + (i2 * 24 | 0) | 0);
    i7 = HEAP8[i13 >> 0] | 0;
    i6 = i7 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i25, i6 ? HEAP32[i24 >> 2] | 0 : i24, i6 ? HEAP32[i14 >> 2] | 0 : i7 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i24);
    i2 = i2 + 1 | 0;
   }
   while (1) {
    if ((i3 | 0) == (i8 | 0)) break;
    i4 = HEAP32[i20 >> 2] | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == -1) break;
     i7 = i2 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4 + (i7 * 24 | 0) | 0);
     i2 = i7;
    }
    HEAP32[i20 >> 2] = i4 + -24;
    i3 = i3 + -1 | 0;
   }
   i5 = i9;
  }
  if ((i22 | 0) == 53) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i25);
   break;
  }
  i1 = i5 + 1 | 0;
  i22 = HEAP8[i15 >> 0] | 0;
  i21 = i22 << 24 >> 24 < 0;
  if ((HEAP8[(i21 ? HEAP32[i25 >> 2] | 0 : i25) + (i21 ? HEAP32[i16 >> 2] | 0 : i22 & 255) + -1 >> 0] | 0) == 62) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i25, 51939) | 0; else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i25, 50562) | 0;
  HEAP32[i26 >> 2] = HEAP32[i25 >> 2];
  HEAP32[i26 + 4 >> 2] = HEAP32[i25 + 4 >> 2];
  HEAP32[i26 + 8 >> 2] = HEAP32[i25 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i25 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i24, i26);
  i2 = HEAP32[i20 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i23 + 8 >> 2] | 0) >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i24);
   HEAP32[i20 >> 2] = (HEAP32[i20 >> 2] | 0) + 24;
  } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i23, i24);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i24);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i26);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i25);
 } while (0);
 STACKTOP = i27;
 return i1 | 0;
}

function _kpmMatching(i17, i2) {
 i17 = i17 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, d8 = 0.0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i14 = i18 + 16 | 0;
 i11 = i18 + 8 | 0;
 i1 = i18;
 i3 = i18 + 44 | 0;
 i4 = i18 + 40 | 0;
 do if ((i17 | 0) != 0 & (i2 | 0) != 0) {
  i5 = HEAP32[i17 + 12 >> 2] | 0;
  i6 = HEAP32[i17 + 16 >> 2] | 0;
  i9 = HEAP32[i17 + 20 >> 2] | 0;
  i10 = (i9 | 0) == 1;
  if (!i10) {
   i1 = _kpmUtilResizeImage(i2, i5, i6, i9, i3, i4) | 0;
   if (!i1) {
    i1 = -1;
    break;
   } else {
    i15 = i1;
    i16 = 1;
   }
  } else {
   i15 = i2;
   i16 = 0;
  }
  __ZN6vision20VisualDatabaseFacade5queryEPhmm(HEAP32[i17 >> 2] | 0, i15, i5, i6) | 0;
  i6 = __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv(HEAP32[i17 >> 2] | 0) | 0;
  i6 = (HEAP32[i6 + 4 >> 2] | 0) - (HEAP32[i6 >> 2] | 0) | 0;
  i1 = (i6 | 0) / 20 | 0;
  i5 = i17 + 48 | 0;
  HEAP32[i5 >> 2] = i1;
  L6 : do if (!i6) {
   i3 = HEAP32[i17 + 56 >> 2] | 0;
   i2 = i17 + 52 | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i3 | 0)) break L6;
    HEAP32[(HEAP32[i2 >> 2] | 0) + (i1 * 68 | 0) + 60 >> 2] = -1;
    i1 = i1 + 1 | 0;
   }
  } else {
   i6 = i17 + 44 | 0;
   i2 = HEAP32[i6 >> 2] | 0;
   if (i2) {
    _free(i2);
    i1 = HEAP32[i5 >> 2] | 0;
   }
   i4 = _malloc(i1 << 3) | 0;
   HEAP32[i6 >> 2] = i4;
   if (!i4) {
    _arLog(0, 3, 20581, i11);
    _exit(1);
   }
   i3 = __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv(HEAP32[i17 >> 2] | 0) | 0;
   L18 : do if (i10) {
    i4 = i17 + 4 | 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) >= (HEAP32[i5 >> 2] | 0)) break L18;
     i2 = HEAP32[i3 >> 2] | 0;
     d7 = +HEAPF32[i2 + (i1 * 20 | 0) >> 2];
     d8 = +HEAPF32[i2 + (i1 * 20 | 0) + 4 >> 2];
     i2 = HEAP32[i4 >> 2] | 0;
     if (!i2) {
      i11 = HEAP32[i6 >> 2] | 0;
      HEAPF32[i11 + (i1 << 3) >> 2] = d7;
      HEAPF32[i11 + (i1 << 3) + 4 >> 2] = d8;
     } else {
      i11 = HEAP32[i6 >> 2] | 0;
      _arParamObserv2IdealLTf(i2 + 184 | 0, d7, d8, i11 + (i1 << 3) | 0, i11 + (i1 << 3) + 4 | 0) | 0;
     }
     i1 = i1 + 1 | 0;
    }
   } else switch (i9 | 0) {
   case 5:
    {
     i4 = i17 + 4 | 0;
     i1 = 0;
     while (1) {
      if ((i1 | 0) >= (HEAP32[i5 >> 2] | 0)) break L18;
      i2 = HEAP32[i3 >> 2] | 0;
      d7 = +HEAPF32[i2 + (i1 * 20 | 0) >> 2];
      d8 = +HEAPF32[i2 + (i1 * 20 | 0) + 4 >> 2];
      i2 = HEAP32[i4 >> 2] | 0;
      if (!i2) {
       i11 = HEAP32[i6 >> 2] | 0;
       HEAPF32[i11 + (i1 << 3) >> 2] = d7 * 1.5;
       HEAPF32[i11 + (i1 << 3) + 4 >> 2] = d8 * 1.5;
      } else {
       i11 = HEAP32[i6 >> 2] | 0;
       _arParamObserv2IdealLTf(i2 + 184 | 0, d7 * 1.5, d8 * 1.5, i11 + (i1 << 3) | 0, i11 + (i1 << 3) + 4 | 0) | 0;
      }
      i1 = i1 + 1 | 0;
     }
    }
   case 2:
    {
     i4 = i17 + 4 | 0;
     i1 = 0;
     while (1) {
      if ((i1 | 0) >= (HEAP32[i5 >> 2] | 0)) break L18;
      i2 = HEAP32[i3 >> 2] | 0;
      d7 = +HEAPF32[i2 + (i1 * 20 | 0) >> 2];
      d8 = +HEAPF32[i2 + (i1 * 20 | 0) + 4 >> 2];
      i2 = HEAP32[i4 >> 2] | 0;
      if (!i2) {
       i11 = HEAP32[i6 >> 2] | 0;
       HEAPF32[i11 + (i1 << 3) >> 2] = d7 * 2.0;
       HEAPF32[i11 + (i1 << 3) + 4 >> 2] = d8 * 2.0;
      } else {
       i11 = HEAP32[i6 >> 2] | 0;
       _arParamObserv2IdealLTf(i2 + 184 | 0, d7 * 2.0, d8 * 2.0, i11 + (i1 << 3) | 0, i11 + (i1 << 3) + 4 | 0) | 0;
      }
      i1 = i1 + 1 | 0;
     }
    }
   case 4:
    {
     i4 = i17 + 4 | 0;
     i1 = 0;
     while (1) {
      if ((i1 | 0) >= (HEAP32[i5 >> 2] | 0)) break L18;
      i2 = HEAP32[i3 >> 2] | 0;
      d7 = +HEAPF32[i2 + (i1 * 20 | 0) >> 2];
      d8 = +HEAPF32[i2 + (i1 * 20 | 0) + 4 >> 2];
      i2 = HEAP32[i4 >> 2] | 0;
      if (!i2) {
       i11 = HEAP32[i6 >> 2] | 0;
       HEAPF32[i11 + (i1 << 3) >> 2] = d7 * 3.0;
       HEAPF32[i11 + (i1 << 3) + 4 >> 2] = d8 * 3.0;
      } else {
       i11 = HEAP32[i6 >> 2] | 0;
       _arParamObserv2IdealLTf(i2 + 184 | 0, d7 * 3.0, d8 * 3.0, i11 + (i1 << 3) | 0, i11 + (i1 << 3) + 4 | 0) | 0;
      }
      i1 = i1 + 1 | 0;
     }
    }
   default:
    {
     i4 = i17 + 4 | 0;
     i1 = 0;
     while (1) {
      if ((i1 | 0) >= (HEAP32[i5 >> 2] | 0)) break L18;
      i2 = HEAP32[i3 >> 2] | 0;
      d7 = +HEAPF32[i2 + (i1 * 20 | 0) >> 2];
      d8 = +HEAPF32[i2 + (i1 * 20 | 0) + 4 >> 2];
      i2 = HEAP32[i4 >> 2] | 0;
      if (!i2) {
       i11 = HEAP32[i6 >> 2] | 0;
       HEAPF32[i11 + (i1 << 3) >> 2] = d7 * 4.0;
       HEAPF32[i11 + (i1 << 3) + 4 >> 2] = d8 * 4.0;
      } else {
       i11 = HEAP32[i6 >> 2] | 0;
       _arParamObserv2IdealLTf(i2 + 184 | 0, d7 * 4.0, d8 * 4.0, i11 + (i1 << 3) | 0, i11 + (i1 << 3) + 4 | 0) | 0;
      }
      i1 = i1 + 1 | 0;
     }
    }
   } while (0);
   i5 = i17 + 56 | 0;
   i6 = i17 + 36 | 0;
   i2 = i17 + 52 | 0;
   i1 = 0;
   while (1) {
    i3 = HEAP32[i5 >> 2] | 0;
    if ((i1 | 0) >= (i3 | 0)) break L6;
    i11 = HEAP32[i2 >> 2] | 0;
    HEAP32[i11 + (i1 * 68 | 0) + 48 >> 2] = HEAP32[(HEAP32[i6 >> 2] | 0) + (i1 * 12 | 0) + 8 >> 2];
    HEAP32[i11 + (i1 * 68 | 0) + 60 >> 2] = -1;
    if (((HEAP32[i11 + (i1 * 68 | 0) + 64 >> 2] | 0) == 0 ? (i12 = __ZNK6vision20VisualDatabaseFacade7inliersEv(HEAP32[i17 >> 2] | 0) | 0, i13 = __ZN6vision20VisualDatabaseFacade9matchedIdEv(HEAP32[i17 >> 2] | 0) | 0, (i13 | 0) >= 0) : 0) ? (i3 = HEAP32[i4 >> 2] | 0, i9 = __ZNK6vision20VisualDatabaseFacade18get3DFeaturePointsEi(HEAP32[i17 >> 2] | 0, i13) | 0, i10 = __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv(HEAP32[i17 >> 2] | 0) | 0, i11 = HEAP32[i2 >> 2] | 0, (__Z21kpmUtilGetPose_binaryP9ARParamLTRKNSt3__26vectorIN6vision7match_tENS1_9allocatorIS4_EEEERKNS2_INS3_7Point3dIfEENS5_ISB_EEEERKNS2_INS3_12FeaturePointENS5_ISG_EEEEPA4_fPf(i3, i12, i9, i10, i11 + (i1 * 68 | 0) | 0, i11 + (i1 * 68 | 0) + 52 | 0) | 0) == 0) : 0) {
     i10 = HEAP32[i2 >> 2] | 0;
     HEAP32[i10 + (i1 * 68 | 0) + 60 >> 2] = 0;
     i11 = (HEAP32[i12 + 4 >> 2] | 0) - (HEAP32[i12 >> 2] | 0) >> 3;
     HEAP32[i10 + (i1 * 68 | 0) + 56 >> 2] = i11;
     HEAP32[i10 + (i1 * 68 | 0) + 48 >> 2] = HEAP32[i17 + 60 + (i13 << 2) >> 2];
     d8 = +HEAPF32[i10 + (i1 * 68 | 0) + 52 >> 2];
     HEAP32[i14 >> 2] = i1;
     HEAP32[i14 + 4 >> 2] = i11;
     HEAP32[i14 + 8 >> 2] = i11;
     HEAPF64[i14 + 16 >> 3] = d8;
     _arLog(0, 1, 20541, i14);
    }
    i1 = i1 + 1 | 0;
   }
  } while (0);
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i3 | 0)) break;
   HEAP32[(HEAP32[i2 >> 2] | 0) + (i1 * 68 | 0) + 64 >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  if (!i16) i1 = 0; else {
   _free(i15);
   i1 = 0;
  }
 } else {
  _arLog(0, 3, 20497, i1);
  i1 = -1;
 } while (0);
 STACKTOP = i18;
 return i1 | 0;
}

function __ZN6vision18BinomialPyramid32f5buildERKNS_5ImageE(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i7;
 if ((__ZNK6vision5Image4typeEv(i1) | 0) != 1) {
  i6 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 25381) | 0, 25196) | 0, 33655) | 0, 330) | 0, 33662) | 0, 25432) | 0;
  __ZNKSt3__28ios_base6getlocEv(i2, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58792) | 0;
  i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, 10) | 0;
  __ZNSt3__26localeD2Ev(i2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i5) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image8channelsEv(i1) | 0) != 1) {
  i6 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 25456) | 0, 25196) | 0, 33655) | 0, 331) | 0, 33662) | 0, 25501) | 0;
  __ZNKSt3__28ios_base6getlocEv(i2, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58792) | 0;
  i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, 10) | 0;
  __ZNSt3__26localeD2Ev(i2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i5) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 i4 = i3 + 4 | 0;
 i5 = i3 + 16 | 0;
 i6 = i3 + 20 | 0;
 if (((HEAP32[i3 + 8 >> 2] | 0) - (HEAP32[i4 >> 2] | 0) >> 5 | 0) != (Math_imul(HEAP32[i6 >> 2] | 0, HEAP32[i5 >> 2] | 0) | 0)) {
  i8 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 25527) | 0, 25196) | 0, 33655) | 0, 333) | 0, 33662) | 0, 25601) | 0;
  __ZNKSt3__28ios_base6getlocEv(i2, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58792) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
 i9 = __ZNK6vision5Image5widthEv(i1) | 0;
 if ((i9 | 0) != (__ZNK6vision5Image5widthEv(HEAP32[i4 >> 2] | 0) | 0)) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 25636) | 0, 25196) | 0, 33655) | 0, 334) | 0, 33662) | 0, 25696) | 0;
  __ZNKSt3__28ios_base6getlocEv(i2, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58792) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 i9 = __ZNK6vision5Image6heightEv(i1) | 0;
 if ((i9 | 0) != (__ZNK6vision5Image6heightEv(HEAP32[i4 >> 2] | 0) | 0)) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 25728) | 0, 25196) | 0, 33655) | 0, 335) | 0, 33662) | 0, 25696) | 0;
  __ZNKSt3__28ios_base6getlocEv(i2, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58792) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_(i3, HEAP32[i4 >> 2] | 0, i1);
 i1 = HEAP32[i4 >> 2] | 0;
 __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_(i3, i1 + 32 | 0, i1);
 i1 = HEAP32[i4 >> 2] | 0;
 __ZN6vision18BinomialPyramid32f18apply_filter_twiceERNS_5ImageERKS1_(i3, i1 + 64 | 0, i1 + 32 | 0);
 i1 = 1;
 while (1) {
  if (i1 >>> 0 >= (HEAP32[i5 >> 2] | 0) >>> 0) break;
  i10 = Math_imul(HEAP32[i6 >> 2] | 0, i1) | 0;
  i10 = __ZN6vision5Image3getEv((HEAP32[i4 >> 2] | 0) + (i10 << 5) | 0) | 0;
  i2 = (Math_imul(HEAP32[i6 >> 2] | 0, i1) | 0) + -1 | 0;
  i2 = __ZN6vision5Image3getEv((HEAP32[i4 >> 2] | 0) + (i2 << 5) | 0) | 0;
  i8 = (Math_imul(HEAP32[i6 >> 2] | 0, i1) | 0) + -1 | 0;
  i8 = __ZNK6vision5Image5widthEv((HEAP32[i4 >> 2] | 0) + (i8 << 5) | 0) | 0;
  i9 = (Math_imul(HEAP32[i6 >> 2] | 0, i1) | 0) + -1 | 0;
  __ZN6vision19downsample_bilinearEPfPKfmm(i10, i2, i8, __ZNK6vision5Image6heightEv((HEAP32[i4 >> 2] | 0) + (i9 << 5) | 0) | 0);
  i9 = Math_imul(HEAP32[i6 >> 2] | 0, i1) | 0;
  i8 = HEAP32[i4 >> 2] | 0;
  __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_(i3, i8 + (i9 + 1 << 5) | 0, i8 + (i9 << 5) | 0);
  i9 = Math_imul(HEAP32[i6 >> 2] | 0, i1) | 0;
  i8 = HEAP32[i4 >> 2] | 0;
  __ZN6vision18BinomialPyramid32f18apply_filter_twiceERNS_5ImageERKS1_(i3, i8 + (i9 + 2 << 5) | 0, i8 + (i9 + 1 << 5) | 0);
  i1 = i1 + 1 | 0;
 }
 STACKTOP = i7;
 return;
}

function _kpmMergeRefDataSet(i16, i17) {
 i16 = i16 | 0;
 i17 = i17 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i18 = 0, i19 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i15 = i18 + 40 | 0;
 i13 = i18 + 32 | 0;
 i10 = i18 + 24 | 0;
 i8 = i18 + 16 | 0;
 i3 = i18 + 8 | 0;
 i2 = i18;
 if ((i16 | 0) != 0 & (i17 | 0) != 0) {
  i2 = HEAP32[i16 >> 2] | 0;
  do if (!i2) {
   i2 = _malloc(16) | 0;
   HEAP32[i16 >> 2] = i2;
   if (!i2) {
    _arLog(0, 3, 20581, i3);
    _exit(1);
   } else {
    HEAP32[i2 + 4 >> 2] = 0;
    HEAP32[i2 >> 2] = 0;
    HEAP32[i2 + 12 >> 2] = 0;
    HEAP32[i2 + 8 >> 2] = 0;
    i9 = i2;
    i1 = i2;
    break;
   }
  } else {
   i9 = i2;
   i1 = i2;
  } while (0);
  i3 = HEAP32[i17 >> 2] | 0;
  if (!i3) i1 = 0; else {
   i4 = HEAP32[i9 + 4 >> 2] | 0;
   i5 = HEAP32[i3 + 4 >> 2] | 0;
   i6 = i5 + i4 | 0;
   i7 = _malloc(i6 * 132 | 0) | 0;
   if (!i7) {
    _arLog(0, 3, 20581, i8);
    _exit(1);
   }
   i2 = 0;
   while (1) {
    if ((i2 | 0) >= (i4 | 0)) break;
    _memcpy(i7 + (i2 * 132 | 0) | 0, (HEAP32[i9 >> 2] | 0) + (i2 * 132 | 0) | 0, 132) | 0;
    i2 = i2 + 1 | 0;
   }
   i2 = 0;
   while (1) {
    if ((i2 | 0) >= (i5 | 0)) break;
    _memcpy(i7 + ((i2 + i4 | 0) * 132 | 0) | 0, (HEAP32[i3 >> 2] | 0) + (i2 * 132 | 0) | 0, 132) | 0;
    i2 = i2 + 1 | 0;
   }
   i2 = HEAP32[i9 >> 2] | 0;
   if (i2) {
    _free(i2);
    i1 = HEAP32[i16 >> 2] | 0;
   }
   HEAP32[i1 >> 2] = i7;
   i5 = HEAP32[i16 >> 2] | 0;
   HEAP32[i5 + 4 >> 2] = i6;
   i8 = HEAP32[i5 + 12 >> 2] | 0;
   i4 = HEAP32[i17 >> 2] | 0;
   i9 = HEAP32[i4 + 12 >> 2] | 0;
   i4 = i4 + 8 | 0;
   i5 = i5 + 8 | 0;
   i1 = 0;
   i3 = 0;
   while (1) {
    if ((i3 | 0) >= (i9 | 0)) break;
    i2 = 0;
    while (1) {
     if ((i2 | 0) >= (i8 | 0)) break;
     if ((HEAP32[(HEAP32[i4 >> 2] | 0) + (i3 * 12 | 0) + 8 >> 2] | 0) == (HEAP32[(HEAP32[i5 >> 2] | 0) + (i2 * 12 | 0) + 8 >> 2] | 0)) {
      i14 = 23;
      break;
     } else i2 = i2 + 1 | 0;
    }
    if ((i14 | 0) == 23) {
     i14 = 0;
     i1 = i1 + 1 | 0;
    }
    i3 = i3 + 1 | 0;
   }
   i11 = i9 + i8 - i1 | 0;
   i12 = _malloc(i11 * 12 | 0) | 0;
   if (!i12) {
    _arLog(0, 3, 20581, i10);
    _exit(1);
   }
   i7 = 0;
   while (1) {
    if ((i7 | 0) >= (i8 | 0)) break;
    i5 = (HEAP32[i16 >> 2] | 0) + 8 | 0;
    i1 = HEAP32[i5 >> 2] | 0;
    i4 = i1 + (i7 * 12 | 0) + 8 | 0;
    HEAP32[i12 + (i7 * 12 | 0) + 8 >> 2] = HEAP32[i4 >> 2];
    i1 = HEAP32[i1 + (i7 * 12 | 0) + 4 >> 2] | 0;
    i3 = 0;
    while (1) {
     if ((i3 | 0) >= (i9 | 0)) break;
     i2 = HEAP32[(HEAP32[i17 >> 2] | 0) + 8 >> 2] | 0;
     if ((HEAP32[i2 + (i3 * 12 | 0) + 8 >> 2] | 0) == (HEAP32[i4 >> 2] | 0)) i1 = (HEAP32[i2 + (i3 * 12 | 0) + 4 >> 2] | 0) + i1 | 0;
     i3 = i3 + 1 | 0;
    }
    i6 = i12 + (i7 * 12 | 0) | 0;
    i10 = _malloc(i1 * 12 | 0) | 0;
    HEAP32[i6 >> 2] = i10;
    if (!i10) {
     i14 = 36;
     break;
    }
    i5 = HEAP32[(HEAP32[i5 >> 2] | 0) + (i7 * 12 | 0) + 4 >> 2] | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) >= (i5 | 0)) break;
     i4 = (HEAP32[(HEAP32[(HEAP32[i16 >> 2] | 0) + 8 >> 2] | 0) + (i7 * 12 | 0) >> 2] | 0) + (i2 * 12 | 0) | 0;
     i10 = (HEAP32[i6 >> 2] | 0) + (i2 * 12 | 0) | 0;
     HEAP32[i10 >> 2] = HEAP32[i4 >> 2];
     HEAP32[i10 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
     HEAP32[i10 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
     i2 = i2 + 1 | 0;
    }
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i9 | 0)) break;
     i2 = HEAP32[(HEAP32[i17 >> 2] | 0) + 8 >> 2] | 0;
     if ((HEAP32[i2 + (i4 * 12 | 0) + 8 >> 2] | 0) == (HEAP32[(HEAP32[(HEAP32[i16 >> 2] | 0) + 8 >> 2] | 0) + (i7 * 12 | 0) + 8 >> 2] | 0)) {
      i14 = 43;
      break;
     }
     i4 = i4 + 1 | 0;
    }
    L56 : do if ((i14 | 0) == 43) {
     i14 = 0;
     i3 = 0;
     while (1) {
      if ((i3 | 0) >= (HEAP32[i2 + (i4 * 12 | 0) + 4 >> 2] | 0)) break L56;
      i19 = (HEAP32[i2 + (i4 * 12 | 0) >> 2] | 0) + (i3 * 12 | 0) | 0;
      i10 = (HEAP32[i6 >> 2] | 0) + ((i3 + i5 | 0) * 12 | 0) | 0;
      HEAP32[i10 >> 2] = HEAP32[i19 >> 2];
      HEAP32[i10 + 4 >> 2] = HEAP32[i19 + 4 >> 2];
      HEAP32[i10 + 8 >> 2] = HEAP32[i19 + 8 >> 2];
      i3 = i3 + 1 | 0;
      i2 = HEAP32[(HEAP32[i17 >> 2] | 0) + 8 >> 2] | 0;
     }
    } while (0);
    HEAP32[i12 + (i7 * 12 | 0) + 4 >> 2] = i1;
    i7 = i7 + 1 | 0;
   }
   if ((i14 | 0) == 36) {
    _arLog(0, 3, 20581, i13);
    _exit(1);
   }
   i1 = 0;
   i7 = 0;
   while (1) {
    if ((i7 | 0) >= (i9 | 0)) break;
    i3 = HEAP32[(HEAP32[i17 >> 2] | 0) + 8 >> 2] | 0;
    i4 = HEAP32[i3 + (i7 * 12 | 0) + 8 >> 2] | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) >= (i8 | 0)) {
      i14 = 53;
      break;
     }
     if ((i4 | 0) == (HEAP32[(HEAP32[(HEAP32[i16 >> 2] | 0) + 8 >> 2] | 0) + (i2 * 12 | 0) + 8 >> 2] | 0)) {
      i14 = 52;
      break;
     } else i2 = i2 + 1 | 0;
    }
    if ((i14 | 0) == 52) {
     i14 = 0;
     i1 = i1 + 1 | 0;
    } else if ((i14 | 0) == 53) {
     i14 = 0;
     i5 = i7 + i8 - i1 | 0;
     i6 = i12 + (i5 * 12 | 0) | 0;
     HEAP32[i12 + (i5 * 12 | 0) + 8 >> 2] = i4;
     i3 = HEAP32[i3 + (i7 * 12 | 0) + 4 >> 2] | 0;
     i19 = _malloc(i3 * 12 | 0) | 0;
     HEAP32[i6 >> 2] = i19;
     if (!i19) {
      i14 = 55;
      break;
     }
     i2 = 0;
     while (1) {
      if ((i2 | 0) >= (i3 | 0)) break;
      i13 = (HEAP32[(HEAP32[(HEAP32[i17 >> 2] | 0) + 8 >> 2] | 0) + (i7 * 12 | 0) >> 2] | 0) + (i2 * 12 | 0) | 0;
      i19 = (HEAP32[i6 >> 2] | 0) + (i2 * 12 | 0) | 0;
      HEAP32[i19 >> 2] = HEAP32[i13 >> 2];
      HEAP32[i19 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
      HEAP32[i19 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
      i2 = i2 + 1 | 0;
     }
     HEAP32[i12 + (i5 * 12 | 0) + 4 >> 2] = i3;
    }
    i7 = i7 + 1 | 0;
   }
   if ((i14 | 0) == 55) {
    _arLog(0, 3, 20581, i15);
    _exit(1);
   }
   i2 = HEAP32[i16 >> 2] | 0;
   i1 = i2 + 8 | 0;
   i4 = HEAP32[i1 >> 2] | 0;
   if (i4) {
    i3 = 0;
    i1 = i4;
    while (1) {
     if ((i3 | 0) >= (HEAP32[i2 + 12 >> 2] | 0)) break;
     _free(HEAP32[i1 + (i3 * 12 | 0) >> 2] | 0);
     i19 = HEAP32[i16 >> 2] | 0;
     i3 = i3 + 1 | 0;
     i2 = i19;
     i1 = HEAP32[i19 + 8 >> 2] | 0;
    }
    _free(i1);
    i1 = (HEAP32[i16 >> 2] | 0) + 8 | 0;
   }
   HEAP32[i1 >> 2] = i12;
   HEAP32[(HEAP32[i16 >> 2] | 0) + 12 >> 2] = i11;
   _kpmDeleteRefDataSet(i17) | 0;
   i1 = 0;
  }
 } else {
  _arLog(0, 3, 20086, i2);
  i1 = -1;
 }
 STACKTOP = i18;
 return i1 | 0;
}

function _dispose_chunk(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = i2 + i1 | 0;
 i3 = HEAP32[i2 + 4 >> 2] | 0;
 do if (!(i3 & 1)) {
  i5 = HEAP32[i2 >> 2] | 0;
  if (!(i3 & 3)) return;
  i7 = i2 + (0 - i5) | 0;
  i1 = i5 + i1 | 0;
  if ((HEAP32[14312] | 0) == (i7 | 0)) {
   i2 = i8 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if ((i3 & 3 | 0) != 3) break;
   HEAP32[14309] = i1;
   HEAP32[i2 >> 2] = i3 & -2;
   HEAP32[i7 + 4 >> 2] = i1 | 1;
   HEAP32[i8 >> 2] = i1;
   return;
  }
  i4 = i5 >>> 3;
  if (i5 >>> 0 < 256) {
   i2 = HEAP32[i7 + 8 >> 2] | 0;
   i3 = HEAP32[i7 + 12 >> 2] | 0;
   if ((i3 | 0) == (i2 | 0)) {
    HEAP32[14307] = HEAP32[14307] & ~(1 << i4);
    break;
   } else {
    HEAP32[i2 + 12 >> 2] = i3;
    HEAP32[i3 + 8 >> 2] = i2;
    break;
   }
  }
  i6 = HEAP32[i7 + 24 >> 2] | 0;
  i2 = HEAP32[i7 + 12 >> 2] | 0;
  do if ((i2 | 0) == (i7 | 0)) {
   i3 = i7 + 16 | 0;
   i4 = i3 + 4 | 0;
   i2 = HEAP32[i4 >> 2] | 0;
   if (!i2) {
    i2 = HEAP32[i3 >> 2] | 0;
    if (!i2) {
     i2 = 0;
     break;
    }
   } else i3 = i4;
   while (1) {
    i5 = i2 + 20 | 0;
    i4 = HEAP32[i5 >> 2] | 0;
    if (!i4) {
     i5 = i2 + 16 | 0;
     i4 = HEAP32[i5 >> 2] | 0;
     if (!i4) break; else {
      i2 = i4;
      i3 = i5;
     }
    } else {
     i2 = i4;
     i3 = i5;
    }
   }
   HEAP32[i3 >> 2] = 0;
  } else {
   i5 = HEAP32[i7 + 8 >> 2] | 0;
   HEAP32[i5 + 12 >> 2] = i2;
   HEAP32[i2 + 8 >> 2] = i5;
  } while (0);
  if (i6) {
   i3 = HEAP32[i7 + 28 >> 2] | 0;
   i4 = 57532 + (i3 << 2) | 0;
   if ((HEAP32[i4 >> 2] | 0) == (i7 | 0)) {
    HEAP32[i4 >> 2] = i2;
    if (!i2) {
     HEAP32[14308] = HEAP32[14308] & ~(1 << i3);
     break;
    }
   } else {
    i5 = i6 + 16 | 0;
    HEAP32[((HEAP32[i5 >> 2] | 0) == (i7 | 0) ? i5 : i6 + 20 | 0) >> 2] = i2;
    if (!i2) break;
   }
   HEAP32[i2 + 24 >> 2] = i6;
   i3 = i7 + 16 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   if (i4 | 0) {
    HEAP32[i2 + 16 >> 2] = i4;
    HEAP32[i4 + 24 >> 2] = i2;
   }
   i3 = HEAP32[i3 + 4 >> 2] | 0;
   if (i3) {
    HEAP32[i2 + 20 >> 2] = i3;
    HEAP32[i3 + 24 >> 2] = i2;
   }
  }
 } else i7 = i2; while (0);
 i2 = i8 + 4 | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 if (!(i4 & 2)) {
  if ((HEAP32[14313] | 0) == (i8 | 0)) {
   i8 = (HEAP32[14310] | 0) + i1 | 0;
   HEAP32[14310] = i8;
   HEAP32[14313] = i7;
   HEAP32[i7 + 4 >> 2] = i8 | 1;
   if ((i7 | 0) != (HEAP32[14312] | 0)) return;
   HEAP32[14312] = 0;
   HEAP32[14309] = 0;
   return;
  }
  if ((HEAP32[14312] | 0) == (i8 | 0)) {
   i8 = (HEAP32[14309] | 0) + i1 | 0;
   HEAP32[14309] = i8;
   HEAP32[14312] = i7;
   HEAP32[i7 + 4 >> 2] = i8 | 1;
   HEAP32[i7 + i8 >> 2] = i8;
   return;
  }
  i5 = (i4 & -8) + i1 | 0;
  i3 = i4 >>> 3;
  do if (i4 >>> 0 < 256) {
   i2 = HEAP32[i8 + 8 >> 2] | 0;
   i1 = HEAP32[i8 + 12 >> 2] | 0;
   if ((i1 | 0) == (i2 | 0)) {
    HEAP32[14307] = HEAP32[14307] & ~(1 << i3);
    break;
   } else {
    HEAP32[i2 + 12 >> 2] = i1;
    HEAP32[i1 + 8 >> 2] = i2;
    break;
   }
  } else {
   i6 = HEAP32[i8 + 24 >> 2] | 0;
   i1 = HEAP32[i8 + 12 >> 2] | 0;
   do if ((i1 | 0) == (i8 | 0)) {
    i2 = i8 + 16 | 0;
    i3 = i2 + 4 | 0;
    i1 = HEAP32[i3 >> 2] | 0;
    if (!i1) {
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i3 = 0;
      break;
     }
    } else i2 = i3;
    while (1) {
     i4 = i1 + 20 | 0;
     i3 = HEAP32[i4 >> 2] | 0;
     if (!i3) {
      i4 = i1 + 16 | 0;
      i3 = HEAP32[i4 >> 2] | 0;
      if (!i3) break; else {
       i1 = i3;
       i2 = i4;
      }
     } else {
      i1 = i3;
      i2 = i4;
     }
    }
    HEAP32[i2 >> 2] = 0;
    i3 = i1;
   } else {
    i3 = HEAP32[i8 + 8 >> 2] | 0;
    HEAP32[i3 + 12 >> 2] = i1;
    HEAP32[i1 + 8 >> 2] = i3;
    i3 = i1;
   } while (0);
   if (i6 | 0) {
    i1 = HEAP32[i8 + 28 >> 2] | 0;
    i2 = 57532 + (i1 << 2) | 0;
    if ((HEAP32[i2 >> 2] | 0) == (i8 | 0)) {
     HEAP32[i2 >> 2] = i3;
     if (!i3) {
      HEAP32[14308] = HEAP32[14308] & ~(1 << i1);
      break;
     }
    } else {
     i4 = i6 + 16 | 0;
     HEAP32[((HEAP32[i4 >> 2] | 0) == (i8 | 0) ? i4 : i6 + 20 | 0) >> 2] = i3;
     if (!i3) break;
    }
    HEAP32[i3 + 24 >> 2] = i6;
    i1 = i8 + 16 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    if (i2 | 0) {
     HEAP32[i3 + 16 >> 2] = i2;
     HEAP32[i2 + 24 >> 2] = i3;
    }
    i1 = HEAP32[i1 + 4 >> 2] | 0;
    if (i1 | 0) {
     HEAP32[i3 + 20 >> 2] = i1;
     HEAP32[i1 + 24 >> 2] = i3;
    }
   }
  } while (0);
  HEAP32[i7 + 4 >> 2] = i5 | 1;
  HEAP32[i7 + i5 >> 2] = i5;
  if ((i7 | 0) == (HEAP32[14312] | 0)) {
   HEAP32[14309] = i5;
   return;
  }
 } else {
  HEAP32[i2 >> 2] = i4 & -2;
  HEAP32[i7 + 4 >> 2] = i1 | 1;
  HEAP32[i7 + i1 >> 2] = i1;
  i5 = i1;
 }
 i1 = i5 >>> 3;
 if (i5 >>> 0 < 256) {
  i3 = 57268 + (i1 << 1 << 2) | 0;
  i2 = HEAP32[14307] | 0;
  i1 = 1 << i1;
  if (!(i2 & i1)) {
   HEAP32[14307] = i2 | i1;
   i1 = i3;
   i2 = i3 + 8 | 0;
  } else {
   i2 = i3 + 8 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
  }
  HEAP32[i2 >> 2] = i7;
  HEAP32[i1 + 12 >> 2] = i7;
  HEAP32[i7 + 8 >> 2] = i1;
  HEAP32[i7 + 12 >> 2] = i3;
  return;
 }
 i1 = i5 >>> 8;
 if (i1) if (i5 >>> 0 > 16777215) i4 = 31; else {
  i6 = (i1 + 1048320 | 0) >>> 16 & 8;
  i8 = i1 << i6;
  i3 = (i8 + 520192 | 0) >>> 16 & 4;
  i8 = i8 << i3;
  i4 = (i8 + 245760 | 0) >>> 16 & 2;
  i4 = 14 - (i3 | i6 | i4) + (i8 << i4 >>> 15) | 0;
  i4 = i5 >>> (i4 + 7 | 0) & 1 | i4 << 1;
 } else i4 = 0;
 i1 = 57532 + (i4 << 2) | 0;
 HEAP32[i7 + 28 >> 2] = i4;
 HEAP32[i7 + 20 >> 2] = 0;
 HEAP32[i7 + 16 >> 2] = 0;
 i2 = HEAP32[14308] | 0;
 i3 = 1 << i4;
 if (!(i2 & i3)) {
  HEAP32[14308] = i2 | i3;
  HEAP32[i1 >> 2] = i7;
  HEAP32[i7 + 24 >> 2] = i1;
  HEAP32[i7 + 12 >> 2] = i7;
  HEAP32[i7 + 8 >> 2] = i7;
  return;
 }
 i1 = HEAP32[i1 >> 2] | 0;
 L104 : do if ((HEAP32[i1 + 4 >> 2] & -8 | 0) != (i5 | 0)) {
  i4 = i5 << ((i4 | 0) == 31 ? 0 : 25 - (i4 >>> 1) | 0);
  while (1) {
   i3 = i1 + 16 + (i4 >>> 31 << 2) | 0;
   i2 = HEAP32[i3 >> 2] | 0;
   if (!i2) break;
   if ((HEAP32[i2 + 4 >> 2] & -8 | 0) == (i5 | 0)) {
    i1 = i2;
    break L104;
   } else {
    i4 = i4 << 1;
    i1 = i2;
   }
  }
  HEAP32[i3 >> 2] = i7;
  HEAP32[i7 + 24 >> 2] = i1;
  HEAP32[i7 + 12 >> 2] = i7;
  HEAP32[i7 + 8 >> 2] = i7;
  return;
 } while (0);
 i6 = i1 + 8 | 0;
 i8 = HEAP32[i6 >> 2] | 0;
 HEAP32[i8 + 12 >> 2] = i7;
 HEAP32[i6 >> 2] = i7;
 HEAP32[i7 + 8 >> 2] = i8;
 HEAP32[i7 + 12 >> 2] = i1;
 HEAP32[i7 + 24 >> 2] = 0;
 return;
}

function _arMultiReadConfigFile(i32, i22) {
 i32 = i32 | 0;
 i22 = i22 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, d45 = 0.0, d46 = 0.0;
 i44 = STACKTOP;
 STACKTOP = STACKTOP + 2528 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2528);
 i43 = i44 + 2512 | 0;
 i41 = i44 + 2504 | 0;
 i30 = i44 + 2488 | 0;
 i40 = i44 + 2480 | 0;
 i29 = i44 + 2472 | 0;
 i28 = i44 + 2456 | 0;
 i39 = i44 + 2448 | 0;
 i27 = i44 + 2440 | 0;
 i38 = i44 + 2432 | 0;
 i37 = i44 + 2424 | 0;
 i36 = i44 + 2416 | 0;
 i26 = i44 + 2408 | 0;
 i4 = i44 + 2400 | 0;
 i3 = i44 + 2392 | 0;
 i31 = i44 + 2384 | 0;
 i2 = i44 + 2376 | 0;
 i1 = i44 + 2368 | 0;
 i23 = i44 + 2304 | 0;
 i33 = i44 + 2048 | 0;
 i34 = i44;
 i24 = i44 + 2524 | 0;
 i42 = i44 + 2520 | 0;
 i25 = i44 + 2516 | 0;
 i35 = _fopen(i32, 19687) | 0;
 do if (!i35) {
  HEAP32[i1 >> 2] = i32;
  _arLog(0, 3, 18675, i1);
  i1 = ___errno_location() | 0;
  i1 = _strerror(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i2 >> 2] = 59242;
  HEAP32[i2 + 4 >> 2] = i1;
  _arLog(0, 3, 19715, i2);
  i1 = 0;
 } else {
  _get_buff(i33, i35);
  HEAP32[i31 >> 2] = i42;
  if ((_sscanf(i33, 19721, i31) | 0) != 1) {
   HEAP32[i3 >> 2] = i32;
   _arLog(0, 3, 18728, i3);
   _fclose(i35) | 0;
   i1 = 0;
   break;
  }
  i1 = HEAP32[i42 >> 2] | 0;
  i21 = _malloc(i1 * 320 | 0) | 0;
  if (!i21) {
   _arLog(0, 3, 20581, i4);
   _exit(1);
  }
  i12 = (i22 | 0) == 0;
  i13 = i23 + 8 | 0;
  i14 = i23 + 16 | 0;
  i15 = i23 + 24 | 0;
  i16 = i23 + 32 | 0;
  i17 = i23 + 40 | 0;
  i18 = i23 + 48 | 0;
  i19 = i23 + 56 | 0;
  i20 = 0;
  i3 = 0;
  L10 : while (1) {
   if ((i20 | 0) >= (i1 | 0)) {
    i1 = 31;
    break;
   }
   _get_buff(i33, i35);
   i1 = i21 + (i20 * 320 | 0) | 0;
   i2 = i21 + (i20 * 320 | 0) + 312 | 0;
   HEAP32[i26 >> 2] = i2;
   HEAP32[i26 + 4 >> 2] = i24;
   if ((_sscanf(i33, 18829, i26) | 0) != 1) {
    if (i12) {
     i1 = 11;
     break;
    }
    if (!(_arUtilGetDirectoryNameFromPath(i34, i32, 2048, 1) | 0)) {
     i1 = 13;
     break;
    }
    _strncat(i34, i33, 2047 - (_strlen(i34) | 0) | 0) | 0;
    i11 = _arPattLoad(i22, i34) | 0;
    HEAP32[i1 >> 2] = i11;
    if ((i11 | 0) < 0) {
     i1 = 15;
     break;
    } else {
     i1 = 1;
     i2 = 0;
    }
   } else {
    i2 = HEAP32[i2 >> 2] | 0;
    HEAP32[i1 >> 2] = (i2 & -32768 | 0) == 0 & 0 == 0 ? i2 & 32767 : 0;
    i1 = 2;
    i2 = 1;
   }
   HEAP32[i21 + (i20 * 320 | 0) + 4 >> 2] = i2;
   i3 = i3 | i1;
   _get_buff(i33, i35);
   i2 = i21 + (i20 * 320 | 0) + 8 | 0;
   HEAP32[i27 >> 2] = i2;
   if ((_sscanf(i33, 19125, i27) | 0) != 1) {
    i1 = 18;
    break;
   }
   _get_buff(i33, i35);
   i9 = i21 + (i20 * 320 | 0) + 16 | 0;
   i10 = i21 + (i20 * 320 | 0) + 24 | 0;
   i11 = i21 + (i20 * 320 | 0) + 40 | 0;
   HEAP32[i28 >> 2] = i9;
   HEAP32[i28 + 4 >> 2] = i10;
   HEAP32[i28 + 8 >> 2] = i21 + (i20 * 320 | 0) + 32;
   HEAP32[i28 + 12 >> 2] = i11;
   if ((_sscanf(i33, 19234, i28) | 0) == 4) i1 = 1; else {
    HEAP32[i29 >> 2] = i31;
    HEAP32[i29 + 4 >> 2] = i25;
    if ((_sscanf(i33, 19250, i29) | 0) != 2) {
     i1 = 23;
     break;
    }
    i1 = 0;
   }
   do {
    _get_buff(i33, i35);
    HEAP32[i30 >> 2] = i21 + (i20 * 320 | 0) + 16 + (i1 << 5);
    HEAP32[i30 + 4 >> 2] = i21 + (i20 * 320 | 0) + 16 + (i1 << 5) + 8;
    HEAP32[i30 + 8 >> 2] = i21 + (i20 * 320 | 0) + 16 + (i1 << 5) + 16;
    HEAP32[i30 + 12 >> 2] = i21 + (i20 * 320 | 0) + 16 + (i1 << 5) + 24;
    if ((_sscanf(i33, 19234, i30) | 0) != 4) {
     i1 = 25;
     break L10;
    }
    i1 = i1 + 1 | 0;
   } while (i1 >>> 0 < 3);
   _arUtilMatInv(i9, i21 + (i20 * 320 | 0) + 112 | 0) | 0;
   d46 = +HEAPF64[i2 >> 3];
   d45 = d46 * -.5;
   HEAPF64[i23 >> 3] = d45;
   d46 = d46 * .5;
   HEAPF64[i13 >> 3] = d46;
   HEAPF64[i14 >> 3] = d46;
   HEAPF64[i15 >> 3] = d46;
   HEAPF64[i16 >> 3] = d46;
   HEAPF64[i17 >> 3] = d45;
   HEAPF64[i18 >> 3] = d45;
   HEAPF64[i19 >> 3] = d45;
   i2 = i21 + (i20 * 320 | 0) + 48 | 0;
   i4 = i21 + (i20 * 320 | 0) + 56 | 0;
   i5 = i21 + (i20 * 320 | 0) + 72 | 0;
   i6 = i21 + (i20 * 320 | 0) + 80 | 0;
   i7 = i21 + (i20 * 320 | 0) + 88 | 0;
   i8 = i21 + (i20 * 320 | 0) + 104 | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 4) break;
    d45 = +HEAPF64[i23 + (i1 << 4) >> 3];
    d46 = +HEAPF64[i23 + (i1 << 4) + 8 >> 3];
    HEAPF64[i21 + (i20 * 320 | 0) + 208 + (i1 * 24 | 0) >> 3] = +HEAPF64[i11 >> 3] + (+HEAPF64[i9 >> 3] * d45 + +HEAPF64[i10 >> 3] * d46);
    HEAPF64[i21 + (i20 * 320 | 0) + 208 + (i1 * 24 | 0) + 8 >> 3] = +HEAPF64[i5 >> 3] + (d45 * +HEAPF64[i2 >> 3] + d46 * +HEAPF64[i4 >> 3]);
    HEAPF64[i21 + (i20 * 320 | 0) + 208 + (i1 * 24 | 0) + 16 >> 3] = +HEAPF64[i8 >> 3] + (d45 * +HEAPF64[i6 >> 3] + d46 * +HEAPF64[i7 >> 3]);
    i1 = i1 + 1 | 0;
   }
   i20 = i20 + 1 | 0;
   i1 = HEAP32[i42 >> 2] | 0;
  }
  if ((i1 | 0) == 11) {
   HEAP32[i36 >> 2] = i32;
   HEAP32[i36 + 4 >> 2] = i33;
   _arLog(0, 3, 18836, i36);
  } else if ((i1 | 0) == 13) {
   HEAP32[i37 >> 2] = i32;
   _arLog(0, 3, 18964, i37);
  } else if ((i1 | 0) == 15) {
   HEAP32[i38 >> 2] = i32;
   HEAP32[i38 + 4 >> 2] = i34;
   _arLog(0, 3, 19048, i38);
  } else if ((i1 | 0) == 18) {
   HEAP32[i39 >> 2] = i32;
   HEAP32[i39 + 4 >> 2] = i20 + 1;
   _arLog(0, 3, 19129, i39);
  } else if ((i1 | 0) == 23) {
   HEAP32[i40 >> 2] = i32;
   HEAP32[i40 + 4 >> 2] = i20 + 1;
   _arLog(0, 3, 19256, i40);
  } else if ((i1 | 0) == 25) {
   HEAP32[i41 >> 2] = i32;
   HEAP32[i41 + 4 >> 2] = i20 + 1;
   _arLog(0, 3, 19256, i41);
  } else if ((i1 | 0) == 31) {
   _fclose(i35) | 0;
   i1 = _malloc(136) | 0;
   if (!i1) {
    _arLog(0, 3, 20581, i43);
    _exit(1);
   }
   HEAP32[i1 >> 2] = i21;
   HEAP32[i1 + 4 >> 2] = HEAP32[i42 >> 2];
   HEAP32[i1 + 128 >> 2] = 0;
   HEAP32[i1 + 104 >> 2] = 0;
   do if ((i3 & 3 | 0) != 3) {
    i2 = i1 + 108 | 0;
    if (!(i3 & 1)) {
     HEAP32[i2 >> 2] = 1;
     break;
    } else {
     HEAP32[i2 >> 2] = 0;
     break;
    }
   } else HEAP32[i1 + 108 >> 2] = 2; while (0);
   HEAPF64[i1 + 112 >> 3] = .5;
   HEAPF64[i1 + 120 >> 3] = .5;
   break;
  }
  _fclose(i35) | 0;
  _free(i21);
  i1 = 0;
 } while (0);
 STACKTOP = i44;
 return i1 | 0;
}

function __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_PKff(i14, i15, i17, i2, d1) {
 i14 = i14 | 0;
 i15 = i15 | 0;
 i17 = i17 | 0;
 i2 = i2 | 0;
 d1 = +d1;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, d24 = 0.0, i25 = 0;
 i23 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i18 = i23 + 40 | 0;
 i19 = i23;
 i20 = i23 + 52 | 0;
 i21 = i23 + 48 | 0;
 i16 = i14 + 4 | 0;
 HEAP32[i16 >> 2] = HEAP32[i14 >> 2];
 do if ((__ZNK6vision18BinaryFeatureStore4sizeEv(i15) | 0) != 0 ? (__ZNK6vision18BinaryFeatureStore4sizeEv(i17) | 0) != 0 : 0) {
  d1 = +__ZN6vision3sqrIfEET_S1_(d1);
  if (!(__ZN6vision16MatrixInverse3x3IfEEbPT_PKS1_S1_(i19, i2, 0.0) | 0)) {
   i12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 29463) | 0, 29488) | 0, 33655) | 0, 196) | 0, 33662) | 0, 29610) | 0;
   __ZNKSt3__28ios_base6getlocEv(i18, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
   i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
   __ZNSt3__26localeD2Ev(i18);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i11) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
   _abort();
  }
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm(i14, __ZNK6vision18BinaryFeatureStore4sizeEv(i15) | 0);
  i11 = i14 + 8 | 0;
  i12 = i14 + 12 | 0;
  i10 = 0;
  L7 : while (1) {
   if (i10 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv(i15) | 0) >>> 0) break;
   i8 = __ZNK6vision18BinaryFeatureStore7featureEm(i15, i10) | 0;
   i9 = __ZNK6vision18BinaryFeatureStore5pointEm(i15, i10) | 0;
   __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvRT_S2_PKS1_S1_S1_(i20, i21, i19, +HEAPF32[i9 >> 2], +HEAPF32[i9 + 4 >> 2]);
   i9 = i9 + 16 | 0;
   i6 = 0;
   i7 = -1;
   i4 = -1;
   i3 = 2147483647;
   while (1) {
    if (i6 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv(i17) | 0) >>> 0) break;
    i2 = __ZNK6vision18BinaryFeatureStore5pointEm(i17, i6) | 0;
    if ((HEAP8[i9 >> 0] | 0) == (HEAP8[i2 + 16 >> 0] | 0) ? (d24 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[i20 >> 2] - +HEAPF32[i2 >> 2]), !(d24 + +__ZN6vision3sqrIfEET_S1_(+HEAPF32[i21 >> 2] - +HEAPF32[i2 + 4 >> 2]) > d1)) : 0) {
     i2 = __ZN6vision18HammingDistance768EPKjS1_(i8, __ZNK6vision18BinaryFeatureStore7featureEm(i17, i6) | 0) | 0;
     i25 = i2 >>> 0 < i7 >>> 0;
     i5 = i25 ? i2 : i7;
     i2 = i25 ? i7 : i2 >>> 0 < i4 >>> 0 ? i2 : i4;
     i3 = i25 ? i6 : i3;
    } else {
     i5 = i7;
     i2 = i4;
    }
    i6 = i6 + 1 | 0;
    i7 = i5;
    i4 = i2;
   }
   do if ((i7 | 0) != -1) {
    if ((i3 | 0) == -1) {
     i22 = 16;
     break L7;
    }
    if ((i4 | 0) == -1) {
     __ZN6vision7match_tC2Eii(i18, i10, i3);
     i2 = HEAP32[i16 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i11 >> 2] | 0) >>> 0) {
      i8 = i18;
      i9 = HEAP32[i8 + 4 >> 2] | 0;
      i25 = i2;
      HEAP32[i25 >> 2] = HEAP32[i8 >> 2];
      HEAP32[i25 + 4 >> 2] = i9;
      HEAP32[i16 >> 2] = (HEAP32[i16 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i14, i18);
     break;
    }
    if (+(i7 >>> 0) / +(i4 >>> 0) < +HEAPF32[i12 >> 2]) {
     __ZN6vision7match_tC2Eii(i18, i10, i3);
     i2 = HEAP32[i16 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i11 >> 2] | 0) >>> 0) {
      i8 = i18;
      i9 = HEAP32[i8 + 4 >> 2] | 0;
      i25 = i2;
      HEAP32[i25 >> 2] = HEAP32[i8 >> 2];
      HEAP32[i25 + 4 >> 2] = i9;
      HEAP32[i16 >> 2] = (HEAP32[i16 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i14, i18);
    }
   } while (0);
   i10 = i10 + 1 | 0;
  }
  if ((i22 | 0) == 16) {
   i25 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 29643) | 0, 29488) | 0, 33655) | 0, 241) | 0, 33662) | 0, 29715) | 0;
   __ZNKSt3__28ios_base6getlocEv(i18, i25 + (HEAP32[(HEAP32[i25 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i22 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
   i22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i22 >> 2] | 0) + 28 >> 2] & 63](i22, 10) | 0;
   __ZNSt3__26localeD2Ev(i18);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i25, i22) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i25) | 0;
   _abort();
  }
  i25 = (HEAP32[i16 >> 2] | 0) - (HEAP32[i14 >> 2] | 0) >> 3;
  if (i25 >>> 0 > (__ZNK6vision18BinaryFeatureStore4sizeEv(i15) | 0) >>> 0) {
   i25 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 29733) | 0, 29488) | 0, 33655) | 0, 256) | 0, 33662) | 0, 29793) | 0;
   __ZNKSt3__28ios_base6getlocEv(i18, i25 + (HEAP32[(HEAP32[i25 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i22 = __ZNKSt3__26locale9use_facetERNS0_2idE(i18, 58792) | 0;
   i22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i22 >> 2] | 0) + 28 >> 2] & 63](i22, 10) | 0;
   __ZNSt3__26localeD2Ev(i18);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i25, i22) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i25) | 0;
   _abort();
  } else {
   i13 = (HEAP32[i16 >> 2] | 0) - (HEAP32[i14 >> 2] | 0) >> 3;
   break;
  }
 } else i13 = 0; while (0);
 STACKTOP = i23;
 return i13 | 0;
}

function _icpGetInitXw2Xc_from_PlanarData(i13, i4, i5, i6, i15) {
 i13 = i13 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, d23 = 0.0, d24 = 0.0, d25 = 0.0, d26 = 0.0, d27 = 0.0, d28 = 0.0, d29 = 0.0, d30 = 0.0, d31 = 0.0, d32 = 0.0, d33 = 0.0, d34 = 0.0, d35 = 0.0, d36 = 0.0, d37 = 0.0, d38 = 0.0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 i17 = i18 + 120 | 0;
 i12 = i18 + 112 | 0;
 i11 = i18 + 104 | 0;
 i9 = i18 + 96 | 0;
 i8 = i18 + 88 | 0;
 i3 = i18 + 80 | 0;
 i2 = i18 + 72 | 0;
 i16 = i18;
 L1 : do if ((i6 | 0) >= 4) {
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i6 | 0)) break;
   if (+HEAPF64[i5 + (i1 * 24 | 0) + 16 >> 3] != 0.0) {
    i1 = -1;
    break L1;
   } else i1 = i1 + 1 | 0;
  }
  if ((((((((!(+HEAPF64[i13 >> 3] == 0.0) ? !(+HEAPF64[i13 + 32 >> 3] != 0.0) : 0) ? (i14 = i13 + 40 | 0, !(+HEAPF64[i14 >> 3] == 0.0)) : 0) ? !(+HEAPF64[i13 + 64 >> 3] != 0.0) : 0) ? !(+HEAPF64[i13 + 72 >> 3] != 0.0) : 0) ? !(+HEAPF64[i13 + 80 >> 3] != 1.0) : 0) ? !(+HEAPF64[i13 + 24 >> 3] != 0.0) : 0) ? !(+HEAPF64[i13 + 56 >> 3] != 0.0) : 0) ? !(+HEAPF64[i13 + 88 >> 3] != 0.0) : 0) {
   i1 = i6 << 1;
   i10 = _arMatrixAlloc(i1, 8) | 0;
   if (!i10) {
    _arLog(0, 3, 18493, i2);
    i1 = -1;
    break;
   }
   i7 = _arMatrixAlloc(i1, 1) | 0;
   if (!i7) {
    _arMatrixFree(i10) | 0;
    _arLog(0, 3, 18519, i3);
    i1 = -1;
    break;
   }
   i1 = 0;
   while (1) {
    if ((i1 | 0) == (i6 | 0)) break;
    i22 = i5 + (i1 * 24 | 0) | 0;
    i3 = HEAP32[i10 >> 2] | 0;
    i2 = i1 << 4;
    HEAPF64[i3 + (i2 << 3) >> 3] = +HEAPF64[i22 >> 3];
    i21 = i5 + (i1 * 24 | 0) + 8 | 0;
    HEAPF64[i3 + ((i2 | 1) << 3) >> 3] = +HEAPF64[i21 >> 3];
    HEAPF64[i3 + ((i2 | 2) << 3) >> 3] = 1.0;
    HEAPF64[i3 + ((i2 | 3) << 3) >> 3] = 0.0;
    HEAPF64[i3 + ((i2 | 4) << 3) >> 3] = 0.0;
    HEAPF64[i3 + ((i2 | 5) << 3) >> 3] = 0.0;
    i20 = i4 + (i1 << 4) | 0;
    HEAPF64[i3 + ((i2 | 6) << 3) >> 3] = -(+HEAPF64[i22 >> 3] * +HEAPF64[i20 >> 3]);
    HEAPF64[i3 + ((i2 | 7) << 3) >> 3] = -(+HEAPF64[i21 >> 3] * +HEAPF64[i20 >> 3]);
    HEAPF64[i3 + ((i2 | 8) << 3) >> 3] = 0.0;
    HEAPF64[i3 + ((i2 | 9) << 3) >> 3] = 0.0;
    HEAPF64[i3 + ((i2 | 10) << 3) >> 3] = 0.0;
    HEAPF64[i3 + ((i2 | 11) << 3) >> 3] = +HEAPF64[i22 >> 3];
    HEAPF64[i3 + ((i2 | 12) << 3) >> 3] = +HEAPF64[i21 >> 3];
    HEAPF64[i3 + ((i2 | 13) << 3) >> 3] = 1.0;
    i19 = i4 + (i1 << 4) + 8 | 0;
    HEAPF64[i3 + ((i2 | 14) << 3) >> 3] = -(+HEAPF64[i22 >> 3] * +HEAPF64[i19 >> 3]);
    HEAPF64[i3 + ((i2 | 15) << 3) >> 3] = -(+HEAPF64[i21 >> 3] * +HEAPF64[i19 >> 3]);
    i2 = HEAP32[i7 >> 2] | 0;
    i3 = i1 << 1;
    HEAPF64[i2 + (i3 << 3) >> 3] = +HEAPF64[i20 >> 3];
    HEAPF64[i2 + ((i3 | 1) << 3) >> 3] = +HEAPF64[i19 >> 3];
    i1 = i1 + 1 | 0;
   }
   i4 = _arMatrixAllocTrans(i10) | 0;
   if (!i4) {
    _arMatrixFree(i10) | 0;
    _arMatrixFree(i7) | 0;
    _arLog(0, 3, 18545, i8);
    i1 = -1;
    break;
   }
   i3 = _arMatrixAllocMul(i4, i10) | 0;
   if (!i3) {
    _arMatrixFree(i10) | 0;
    _arMatrixFree(i7) | 0;
    _arMatrixFree(i4) | 0;
    _arLog(0, 3, 18571, i9);
    i1 = -1;
    break;
   }
   i2 = _arMatrixAllocMul(i4, i7) | 0;
   if (!i2) {
    _arMatrixFree(i10) | 0;
    _arMatrixFree(i7) | 0;
    _arMatrixFree(i4) | 0;
    _arMatrixFree(i3) | 0;
    _arLog(0, 3, 18597, i11);
    i1 = -1;
    break;
   }
   if ((_arMatrixSelfInv(i3) | 0) < 0) {
    _arMatrixFree(i10) | 0;
    _arMatrixFree(i7) | 0;
    _arMatrixFree(i4) | 0;
    _arMatrixFree(i3) | 0;
    _arMatrixFree(i2) | 0;
    _arLog(0, 3, 18623, i12);
    i1 = -1;
    break;
   }
   i1 = _arMatrixAllocMul(i3, i2) | 0;
   if (!i1) {
    _arMatrixFree(i10) | 0;
    _arMatrixFree(i7) | 0;
    _arMatrixFree(i4) | 0;
    _arMatrixFree(i3) | 0;
    _arMatrixFree(i2) | 0;
    _arLog(0, 3, 18649, i17);
    i1 = -1;
    break;
   } else {
    i12 = HEAP32[i1 >> 2] | 0;
    d31 = +HEAPF64[i12 + 48 >> 3];
    i20 = i16 + 16 | 0;
    d28 = +HEAPF64[i13 + 48 >> 3];
    d24 = +HEAPF64[i14 >> 3];
    d34 = (+HEAPF64[i12 + 24 >> 3] - d31 * d28) / d24;
    i17 = i16 + 8 | 0;
    d27 = +HEAPF64[i13 + 16 >> 3];
    d26 = +HEAPF64[i13 + 8 >> 3];
    d25 = +HEAPF64[i13 >> 3];
    d37 = (+HEAPF64[i12 >> 3] - d31 * d27 - d34 * d26) / d25;
    d32 = +HEAPF64[i12 + 56 >> 3];
    i19 = i16 + 40 | 0;
    d35 = (+HEAPF64[i12 + 32 >> 3] - d28 * d32) / d24;
    i21 = i16 + 32 | 0;
    d33 = (+HEAPF64[i12 + 8 >> 3] - d27 * d32 - d26 * d35) / d25;
    i22 = i16 + 24 | 0;
    d24 = (+HEAPF64[i12 + 40 >> 3] - d28) / d24;
    d28 = +HEAPF64[i12 + 16 >> 3];
    _arMatrixFree(i10) | 0;
    _arMatrixFree(i7) | 0;
    _arMatrixFree(i4) | 0;
    _arMatrixFree(i3) | 0;
    _arMatrixFree(i2) | 0;
    _arMatrixFree(i1) | 0;
    d36 = +Math_sqrt(+(d31 * d31 + (d34 * d34 + d37 * d37)));
    d23 = +Math_sqrt(+(d32 * d32 + (d35 * d35 + d33 * d33)));
    HEAPF64[i16 >> 3] = d37 / d36;
    HEAPF64[i17 >> 3] = d34 / d36;
    HEAPF64[i20 >> 3] = d31 / d36;
    HEAPF64[i22 >> 3] = d33 / d23;
    HEAPF64[i21 >> 3] = d35 / d23;
    HEAPF64[i19 >> 3] = d32 / d23;
    d23 = (d36 + d23) * .5;
    _check_rotation(i16);
    d36 = +HEAPF64[i17 >> 3];
    d32 = +HEAPF64[i19 >> 3];
    d35 = +HEAPF64[i20 >> 3];
    d33 = +HEAPF64[i21 >> 3];
    d31 = d36 * d32 - d35 * d33;
    d34 = +HEAPF64[i22 >> 3];
    d37 = +HEAPF64[i16 >> 3];
    d30 = d35 * d34 - d32 * d37;
    d38 = d33 * d37 - d36 * d34;
    d29 = +Math_sqrt(+(d38 * d38 + (d31 * d31 + d30 * d30)));
    d31 = d31 / d29;
    HEAPF64[i16 + 48 >> 3] = d31;
    d30 = d30 / d29;
    HEAPF64[i16 + 56 >> 3] = d30;
    d29 = d38 / d29;
    HEAPF64[i16 + 64 >> 3] = d29;
    HEAPF64[i15 >> 3] = d37;
    HEAPF64[i15 + 32 >> 3] = d36;
    HEAPF64[i15 + 64 >> 3] = d35;
    HEAPF64[i15 + 8 >> 3] = d34;
    HEAPF64[i15 + 40 >> 3] = d33;
    HEAPF64[i15 + 72 >> 3] = d32;
    HEAPF64[i15 + 16 >> 3] = d31;
    HEAPF64[i15 + 48 >> 3] = d30;
    HEAPF64[i15 + 80 >> 3] = d29;
    HEAPF64[i15 + 24 >> 3] = (d28 - d27 - d26 * d24) / d25 / d23;
    HEAPF64[i15 + 56 >> 3] = d24 / d23;
    HEAPF64[i15 + 88 >> 3] = 1.0 / d23;
    i1 = 0;
    break;
   }
  } else i1 = -1;
 } else i1 = -1; while (0);
 STACKTOP = i18;
 return i1 | 0;
}

function __ZN6vision25DoGScaleInvariantDetector21findSubpixelLocationsEPKNS_25GaussianScaleSpacePyramidE(i1, i16) {
 i1 = i1 | 0;
 i16 = i16 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, d35 = 0.0, d36 = 0.0;
 i32 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 i31 = i32 + 68 | 0;
 i24 = i32;
 i25 = i32 + 56 | 0;
 i26 = i32 + 44 | 0;
 i27 = i32 + 40 | 0;
 i28 = i32 + 36 | 0;
 d17 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[i1 + 52 >> 2]);
 i30 = i1 + 56 | 0;
 d20 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[i30 >> 2] + 1.0);
 d20 = d20 / +HEAPF32[i30 >> 2];
 i30 = i1 + 60 | 0;
 i21 = i1 + 64 | 0;
 i22 = i1 + 32 | 0;
 i23 = i26 + 4 | 0;
 i12 = i1 + 88 | 0;
 i13 = i25 + 4 | 0;
 i14 = i25 + 8 | 0;
 i15 = i26 + 8 | 0;
 i10 = 0;
 i11 = 0;
 while (1) {
  i9 = HEAP32[i30 >> 2] | 0;
  i6 = i9;
  if (i11 >>> 0 >= (((HEAP32[i21 >> 2] | 0) - i9 | 0) / 36 | 0) >>> 0) {
   i1 = 3;
   break;
  }
  i2 = i6 + (i11 * 36 | 0) | 0;
  i1 = i6 + (i11 * 36 | 0) + 16 | 0;
  i9 = HEAP32[i1 >> 2] | 0;
  if ((i9 | 0) >= (__ZNK6vision10DoGPyramid17numScalePerOctaveEv(i22) | 0)) {
   i1 = 5;
   break;
  }
  i7 = i6 + (i11 * 36 | 0) + 12 | 0;
  i9 = HEAP32[i7 >> 2] | 0;
  i9 = Math_imul(__ZNK6vision10DoGPyramid17numScalePerOctaveEv(i22) | 0, i9) | 0;
  i9 = i9 + (HEAP32[i1 >> 2] | 0) | 0;
  i8 = i6 + (i11 * 36 | 0) + 4 | 0;
  __ZN6vision25bilinear_downsample_pointERfS0_ffi(i27, i28, +HEAPF32[i2 >> 2], +HEAPF32[i8 >> 2], HEAP32[i7 >> 2] | 0);
  i3 = ~~(+HEAPF32[i27 >> 2] + .5);
  i4 = ~~(+HEAPF32[i28 >> 2] + .5);
  i34 = __ZNK6vision10DoGPyramid6imagesEv(i22) | 0;
  i34 = (HEAP32[i34 >> 2] | 0) + (i9 + -1 << 5) | 0;
  i5 = __ZNK6vision10DoGPyramid6imagesEv(i22) | 0;
  i5 = (HEAP32[i5 >> 2] | 0) + (i9 << 5) | 0;
  i33 = __ZNK6vision10DoGPyramid6imagesEv(i22) | 0;
  if (((__ZN6vision22ComputeSubpixelHessianEPfS0_RKNS_5ImageES3_S3_ii(i24, i25, i34, i5, (HEAP32[i33 >> 2] | 0) + (i9 + 1 << 5) | 0, i3, i4) | 0 ? __ZN6vision29SolveSymmetricLinearSystem3x3IfEEbPT_PKS1_S4_(i26, i24, i25) | 0 : 0) ? (d35 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[i26 >> 2]), d35 = d35 + +__ZN6vision3sqrIfEET_S1_(+HEAPF32[i23 >> 2]), !(d35 > +HEAPF32[i12 >> 2])) : 0) ? (i29 = i6 + (i11 * 36 | 0) + 32 | 0, __ZN6vision16ComputeEdgeScoreERfPKf(i29, i24) | 0) : 0) {
   i9 = i6 + (i11 * 36 | 0) + 24 | 0;
   d35 = +HEAPF32[i9 >> 2];
   i34 = (__ZNK6vision5Image3getIfEEPKT_m(i5, i4) | 0) + (i3 << 2) | 0;
   if (!(d35 == +HEAPF32[i34 >> 2])) {
    i1 = 11;
    break;
   }
   i34 = (__ZNK6vision5Image3getIfEEPKT_m(i5, i4) | 0) + (i3 << 2) | 0;
   d36 = +HEAPF32[i26 >> 2];
   d35 = +HEAPF32[i23 >> 2];
   HEAPF32[i9 >> 2] = +HEAPF32[i34 >> 2] - (+HEAPF32[i25 >> 2] * d36 + +HEAPF32[i13 >> 2] * d35 + +HEAPF32[i14 >> 2] * +HEAPF32[i15 >> 2]);
   __ZN6vision23bilinear_upsample_pointERfS0_ffi(i2, i8, d36 + +HEAPF32[i27 >> 2], d35 + +HEAPF32[i28 >> 2], HEAP32[i7 >> 2] | 0);
   d35 = +HEAPF32[i15 >> 2] + +(HEAP32[i1 >> 2] | 0);
   i1 = i6 + (i11 * 36 | 0) + 20 | 0;
   HEAPF32[i1 >> 2] = d35;
   d35 = +__ZN6vision10ClipScalarIfEET_S1_S1_S1_(d35, 0.0, +(__ZNK6vision10DoGPyramid17numScalePerOctaveEv(i22) | 0));
   HEAPF32[i1 >> 2] = d35;
   if (((((+Math_abs(+(+HEAPF32[i29 >> 2])) < d20 ? +__ZN6vision3sqrIfEET_S1_(+HEAPF32[i9 >> 2]) >= d17 : 0) ? (d18 = +HEAPF32[i2 >> 2], d18 >= 0.0) : 0) ? (i34 = __ZNK6vision10DoGPyramid6imagesEv(i22) | 0, d18 < +((__ZNK6vision5Image5widthEv(HEAP32[i34 >> 2] | 0) | 0) >>> 0)) : 0) ? (d19 = +HEAPF32[i8 >> 2], d19 >= 0.0) : 0) ? (i34 = __ZNK6vision10DoGPyramid6imagesEv(i22) | 0, d19 < +((__ZNK6vision5Image6heightEv(HEAP32[i34 >> 2] | 0) | 0) >>> 0)) : 0) {
    d36 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf(i16, HEAP32[i7 >> 2] | 0, +HEAPF32[i1 >> 2]);
    HEAPF32[i6 + (i11 * 36 | 0) + 28 >> 2] = d36;
    i1 = i10 + 1 | 0;
    i4 = (HEAP32[i30 >> 2] | 0) + (i10 * 36 | 0) | 0;
    i3 = i4 + 36 | 0;
    do {
     HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
     i4 = i4 + 4 | 0;
     i2 = i2 + 4 | 0;
    } while ((i4 | 0) < (i3 | 0));
   } else i1 = i10;
  } else i1 = i10;
  i10 = i1;
  i11 = i11 + 1 | 0;
 }
 if ((i1 | 0) == 3) {
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE6resizeEm(i30, i10);
  STACKTOP = i32;
  return;
 } else if ((i1 | 0) == 5) {
  i34 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 22291) | 0, 20647) | 0, 33655) | 0, 489) | 0, 33662) | 0, 22363) | 0;
  __ZNKSt3__28ios_base6getlocEv(i31, i34 + (HEAP32[(HEAP32[i34 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i33 = __ZNKSt3__26locale9use_facetERNS0_2idE(i31, 58792) | 0;
  i33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i33 >> 2] | 0) + 28 >> 2] & 63](i33, 10) | 0;
  __ZNSt3__26localeD2Ev(i31);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i34, i33) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i34) | 0;
  _abort();
 } else if ((i1 | 0) == 11) {
  i34 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 22400) | 0, 20647) | 0, 33655) | 0, 526) | 0, 33662) | 0, 22457) | 0;
  __ZNKSt3__28ios_base6getlocEv(i31, i34 + (HEAP32[(HEAP32[i34 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i33 = __ZNKSt3__26locale9use_facetERNS0_2idE(i31, 58792) | 0;
  i33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i33 >> 2] | 0) + 28 >> 2] & 63](i33, 10) | 0;
  __ZNSt3__26localeD2Ev(i31);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i34, i33) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i34) | 0;
  _abort();
 }
}

function __ZN6vision14BinarykMedoidsILi96EE6assignEPKhiPKii(i9, i10, i11, i12, i13) {
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i14 = i18;
 i15 = i9 + 4 | 0;
 i1 = HEAP32[i15 >> 2] | 0;
 i16 = i9 + 12 | 0;
 i17 = i9 + 16 | 0;
 if ((i1 | 0) != ((HEAP32[i17 >> 2] | 0) - (HEAP32[i16 >> 2] | 0) >> 2 | 0)) {
  i8 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 27849) | 0, 27894) | 0, 33655) | 0, 154) | 0, 33662) | 0, 28002) | 0;
  __ZNKSt3__28ios_base6getlocEv(i14, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i14, 58792) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i14);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
 if ((i11 | 0) <= 0) {
  i8 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 28047) | 0, 27894) | 0, 33655) | 0, 155) | 0, 33662) | 0, 28087) | 0;
  __ZNKSt3__28ios_base6getlocEv(i14, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i14, 58792) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i14);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
 if ((i13 | 0) > (i11 | 0)) {
  i8 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 28123) | 0, 27894) | 0, 33655) | 0, 156) | 0, 33662) | 0, 28174) | 0;
  __ZNKSt3__28ios_base6getlocEv(i14, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i14, 58792) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i14);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
 if ((i1 | 0) > (i13 | 0)) {
  i8 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 28201) | 0, 27894) | 0, 33655) | 0, 157) | 0, 33662) | 0, 28242) | 0;
  __ZNKSt3__28ios_base6getlocEv(i14, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i14, 58792) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i14);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
 i4 = i9 + 24 | 0;
 HEAP32[i14 >> 2] = -1;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEmRKi(i4, i13, i14);
 i5 = i9 + 36 | 0;
 HEAP32[i14 >> 2] = -1;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEmRKi(i5, i13, i14);
 i6 = i9 + 48 | 0;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm(i6, i13);
 i8 = HEAP32[i6 >> 2] | 0;
 i7 = i9 + 52 | 0;
 __ZN6vision16SequentialVectorIiEEvPT_iS1_(i8, (HEAP32[i7 >> 2] | 0) - i8 >> 2, 0);
 i8 = i9 + 8 | 0;
 i1 = -1;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (HEAP32[i8 >> 2] | 0)) break;
  i2 = HEAP32[i6 >> 2] | 0;
  __ZN6vision12ArrayShuffleIiEEvPT_iiRi(i2, (HEAP32[i7 >> 2] | 0) - i2 >> 2, HEAP32[i15 >> 2] | 0, HEAP32[i9 >> 2] | 0);
  i2 = __ZN6vision14BinarykMedoidsILi96EE6assignERNSt3__26vectorIiNS2_9allocatorIiEEEEPKhiPKiiSB_i(i9, i5, i10, i11, i12, i13, HEAP32[i6 >> 2] | 0, HEAP32[i15 >> 2] | 0) | 0;
  if (i2 >>> 0 < i1 >>> 0) {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE4swapERS3_(i4, i5);
   __ZN6vision10CopyVectorIiEEvPT_PKS1_m(HEAP32[i16 >> 2] | 0, HEAP32[i6 >> 2] | 0, HEAP32[i15 >> 2] | 0);
   i1 = i2;
  }
  i3 = i3 + 1 | 0;
 }
 if ((HEAP32[i15 >> 2] | 0) == ((HEAP32[i17 >> 2] | 0) - (HEAP32[i16 >> 2] | 0) >> 2 | 0)) {
  STACKTOP = i18;
  return;
 } else {
  i18 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 27849) | 0, 27894) | 0, 33655) | 0, 187) | 0, 33662) | 0, 28002) | 0;
  __ZNKSt3__28ios_base6getlocEv(i14, i18 + (HEAP32[(HEAP32[i18 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i17 = __ZNKSt3__26locale9use_facetERNS0_2idE(i14, 58792) | 0;
  i17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 63](i17, 10) | 0;
  __ZNSt3__26localeD2Ev(i14);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i18, i17) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i18) | 0;
  _abort();
 }
}

function _ar2GetBestMatchingSubFine(i14, i15, i1, i18, i16, i17, i19) {
 i14 = i14 | 0;
 i15 = i15 | 0;
 i1 = i1 | 0;
 i18 = i18 | 0;
 i16 = i16 | 0;
 i17 = i17 | 0;
 i19 = i19 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i3 = HEAP32[i18 + 24 >> 2] | 0;
 L1 : do switch (i1 | 0) {
 case 5:
 case 12:
 case 13:
 case 14:
  {
   i10 = 0 - (HEAP32[i18 + 8 >> 2] | 0) | 0;
   i11 = HEAP32[i18 + 12 >> 2] | 0;
   i8 = 0 - (HEAP32[i18 + 16 >> 2] | 0) | 0;
   i12 = HEAP32[i18 + 20 >> 2] | 0;
   i13 = i15 << 1;
   i4 = i3;
   i7 = i14 + ((i10 << 1) + i16 + (Math_imul((i8 << 1) + i17 | 0, i15) | 0)) | 0;
   i3 = 0;
   i1 = 0;
   i2 = 0;
   while (1) {
    if ((i8 | 0) > (i12 | 0)) {
     i4 = i3;
     break L1;
    }
    i9 = i10;
    i5 = i4;
    i6 = i7;
    while (1) {
     if ((i9 | 0) > (i11 | 0)) break;
     i4 = HEAP16[i5 >> 1] | 0;
     if (i4 << 16 >> 16 != 4096) {
      i17 = HEAPU8[i6 >> 0] | 0;
      i3 = i3 + i17 | 0;
      i1 = (Math_imul(i17, i17) | 0) + i1 | 0;
      i2 = (Math_imul(i17, i4 & 65535) | 0) + i2 | 0;
     }
     i9 = i9 + 1 | 0;
     i5 = i5 + 2 | 0;
     i6 = i6 + 2 | 0;
    }
    i4 = i5;
    i7 = i7 + i13 | 0;
    i8 = i8 + 1 | 0;
   }
  }
 default:
  {
   if (i1 >>> 0 < 2) {
    i10 = HEAP32[i18 + 20 >> 2] | 0;
    i11 = i18 + 8 | 0;
    i12 = i18 + 12 | 0;
    i9 = 0 - (HEAP32[i18 + 16 >> 2] | 0) | 0;
    i4 = 0;
    i1 = 0;
    i2 = 0;
    while (1) {
     if ((i9 | 0) > (i10 | 0)) break L1;
     i13 = (Math_imul((i9 << 1) + i17 | 0, i15) | 0) + i16 | 0;
     i7 = HEAP32[i11 >> 2] | 0;
     i8 = HEAP32[i12 >> 2] | 0;
     i6 = 0 - i7 | 0;
     i7 = i14 + ((i13 - (i7 << 1) | 0) * 3 | 0) | 0;
     while (1) {
      if ((i6 | 0) > (i8 | 0)) break;
      i5 = HEAP16[i3 >> 1] | 0;
      if (i5 << 16 >> 16 != 4096) {
       i13 = (((HEAPU8[i7 + 1 >> 0] | 0) + (HEAPU8[i7 >> 0] | 0) + (HEAPU8[i7 + 2 >> 0] | 0) | 0) >>> 0) / 3 | 0;
       i4 = i13 + i4 | 0;
       i1 = (Math_imul(i13, i13) | 0) + i1 | 0;
       i2 = (Math_imul(i13, i5 & 65535) | 0) + i2 | 0;
      }
      i6 = i6 + 1 | 0;
      i7 = i7 + 6 | 0;
      i3 = i3 + 2 | 0;
     }
     i9 = i9 + 1 | 0;
    }
   }
   if ((i1 | 1 | 0) == 3) {
    i10 = HEAP32[i18 + 20 >> 2] | 0;
    i11 = i18 + 8 | 0;
    i12 = i18 + 12 | 0;
    i9 = 0 - (HEAP32[i18 + 16 >> 2] | 0) | 0;
    i4 = 0;
    i1 = 0;
    i2 = 0;
    while (1) {
     if ((i9 | 0) > (i10 | 0)) break L1;
     i13 = (Math_imul((i9 << 1) + i17 | 0, i15) | 0) + i16 | 0;
     i7 = HEAP32[i11 >> 2] | 0;
     i8 = HEAP32[i12 >> 2] | 0;
     i6 = 0 - i7 | 0;
     i7 = i14 + (i13 - (i7 << 1) << 2) | 0;
     while (1) {
      if ((i6 | 0) > (i8 | 0)) break;
      i5 = HEAP16[i3 >> 1] | 0;
      if (i5 << 16 >> 16 != 4096) {
       i13 = (((HEAPU8[i7 + 1 >> 0] | 0) + (HEAPU8[i7 >> 0] | 0) + (HEAPU8[i7 + 2 >> 0] | 0) | 0) >>> 0) / 3 | 0;
       i4 = i13 + i4 | 0;
       i1 = (Math_imul(i13, i13) | 0) + i1 | 0;
       i2 = (Math_imul(i13, i5 & 65535) | 0) + i2 | 0;
      }
      i6 = i6 + 1 | 0;
      i7 = i7 + 8 | 0;
      i3 = i3 + 2 | 0;
     }
     i9 = i9 + 1 | 0;
    }
   }
   if ((i1 | 2 | 0) == 6) {
    i10 = HEAP32[i18 + 20 >> 2] | 0;
    i11 = i18 + 8 | 0;
    i12 = i18 + 12 | 0;
    i9 = 0 - (HEAP32[i18 + 16 >> 2] | 0) | 0;
    i4 = i3;
    i3 = 0;
    i1 = 0;
    i2 = 0;
    while (1) {
     if ((i9 | 0) > (i10 | 0)) {
      i4 = i3;
      break L1;
     }
     i13 = (Math_imul((i9 << 1) + i17 | 0, i15) | 0) + i16 | 0;
     i7 = HEAP32[i11 >> 2] | 0;
     i8 = HEAP32[i12 >> 2] | 0;
     i6 = 0 - i7 | 0;
     i7 = i14 + (i13 - (i7 << 1) << 2) | 0;
     while (1) {
      if ((i6 | 0) > (i8 | 0)) break;
      i5 = HEAP16[i4 >> 1] | 0;
      if (i5 << 16 >> 16 != 4096) {
       i13 = (((HEAPU8[i7 + 2 >> 0] | 0) + (HEAPU8[i7 + 1 >> 0] | 0) + (HEAPU8[i7 + 3 >> 0] | 0) | 0) >>> 0) / 3 | 0;
       i3 = i13 + i3 | 0;
       i1 = (Math_imul(i13, i13) | 0) + i1 | 0;
       i2 = (Math_imul(i13, i5 & 65535) | 0) + i2 | 0;
      }
      i6 = i6 + 1 | 0;
      i7 = i7 + 8 | 0;
      i4 = i4 + 2 | 0;
     }
     i9 = i9 + 1 | 0;
    }
   }
   switch (i1 | 0) {
   case 7:
    {
     i10 = HEAP32[i18 + 20 >> 2] | 0;
     i11 = i18 + 8 | 0;
     i12 = i18 + 12 | 0;
     i4 = 0;
     i1 = 0;
     i2 = 0;
     i9 = 0 - (HEAP32[i18 + 16 >> 2] | 0) | 0;
     while (1) {
      if ((i9 | 0) > (i10 | 0)) break L1;
      i13 = (Math_imul((i9 << 1) + i17 | 0, i15) | 0) + i16 | 0;
      i7 = HEAP32[i11 >> 2] | 0;
      i8 = HEAP32[i12 >> 2] | 0;
      i6 = 0 - i7 | 0;
      i7 = i14 + (i13 - (i7 << 1) << 1) | 0;
      while (1) {
       if ((i6 | 0) > (i8 | 0)) break;
       i5 = HEAP16[i3 >> 1] | 0;
       if (i5 << 16 >> 16 != 4096) {
        i13 = HEAPU8[i7 + 1 >> 0] | 0;
        i4 = i4 + i13 | 0;
        i1 = (Math_imul(i13, i13) | 0) + i1 | 0;
        i2 = (Math_imul(i13, i5 & 65535) | 0) + i2 | 0;
       }
       i6 = i6 + 1 | 0;
       i7 = i7 + 4 | 0;
       i3 = i3 + 2 | 0;
      }
      i9 = i9 + 1 | 0;
     }
    }
   case 8:
    {
     i10 = HEAP32[i18 + 20 >> 2] | 0;
     i11 = i18 + 8 | 0;
     i12 = i18 + 12 | 0;
     i4 = 0;
     i1 = 0;
     i2 = 0;
     i8 = 0 - (HEAP32[i18 + 16 >> 2] | 0) | 0;
     while (1) {
      if ((i8 | 0) > (i10 | 0)) break L1;
      i13 = (Math_imul((i8 << 1) + i17 | 0, i15) | 0) + i16 | 0;
      i7 = HEAP32[i11 >> 2] | 0;
      i9 = HEAP32[i12 >> 2] | 0;
      i6 = 0 - i7 | 0;
      i7 = i14 + (i13 - (i7 << 1) << 1) | 0;
      while (1) {
       if ((i6 | 0) > (i9 | 0)) break;
       i5 = HEAP16[i3 >> 1] | 0;
       if (i5 << 16 >> 16 != 4096) {
        i13 = HEAPU8[i7 >> 0] | 0;
        i4 = i4 + i13 | 0;
        i1 = (Math_imul(i13, i13) | 0) + i1 | 0;
        i2 = (Math_imul(i13, i5 & 65535) | 0) + i2 | 0;
       }
       i3 = i3 + 2 | 0;
       i6 = i6 + 1 | 0;
       i7 = i7 + 4 | 0;
      }
      i8 = i8 + 1 | 0;
     }
    }
   default:
    {
     i4 = 0;
     i1 = 0;
     i2 = 0;
     break L1;
    }
   }
  }
 } while (0);
 i3 = HEAP32[i18 + 36 >> 2] | 0;
 i1 = i1 - ((Math_imul(i4, i4) | 0) / (i3 | 0) | 0) | 0;
 if (!i1) i1 = 0; else {
  i17 = (i2 - ((Math_imul(HEAP32[i18 + 32 >> 2] | 0, i4) | 0) / (i3 | 0) | 0) | 0) * 100 | 0;
  i1 = (((i17 | 0) / (HEAP32[i18 + 28 >> 2] | 0) | 0) * 100 | 0) / (~~+Math_sqrt(+(+(i1 | 0))) | 0) | 0;
 }
 HEAP32[i19 >> 2] = i1;
 return;
}

function _decode_mcu(i11, i12) {
 i11 = i11 | 0;
 i12 = i12 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i14 = i24 + 16 | 0;
 i20 = i24;
 i23 = HEAP32[i11 + 444 >> 2] | 0;
 if (((HEAP32[i11 + 276 >> 2] | 0) != 0 ? (HEAP32[i23 + 36 >> 2] | 0) == 0 : 0) ? (_process_restart(i11) | 0) == 0 : 0) i1 = 0; else i7 = 4;
 L4 : do if ((i7 | 0) == 4) {
  if (!(HEAP32[i23 + 8 >> 2] | 0)) {
   HEAP32[i14 + 16 >> 2] = i11;
   i13 = i11 + 24 | 0;
   i16 = HEAP32[i13 >> 2] | 0;
   HEAP32[i14 >> 2] = HEAP32[i16 >> 2];
   i15 = i14 + 4 | 0;
   HEAP32[i15 >> 2] = HEAP32[i16 + 4 >> 2];
   i16 = i23 + 12 | 0;
   i2 = HEAP32[i16 >> 2] | 0;
   i17 = i23 + 16 | 0;
   i1 = HEAP32[i17 >> 2] | 0;
   i18 = i23 + 20 | 0;
   HEAP32[i20 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i20 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
   HEAP32[i20 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
   HEAP32[i20 + 12 >> 2] = HEAP32[i18 + 12 >> 2];
   i19 = i11 + 356 | 0;
   i21 = i14 + 8 | 0;
   i22 = i14 + 12 | 0;
   i10 = 0;
   while (1) {
    if ((i10 | 0) >= (HEAP32[i19 >> 2] | 0)) break;
    i8 = HEAP32[i12 + (i10 << 2) >> 2] | 0;
    i5 = HEAP32[i23 + 72 + (i10 << 2) >> 2] | 0;
    i9 = HEAP32[i23 + 112 + (i10 << 2) >> 2] | 0;
    if ((i1 | 0) < 8) {
     if (!(_jpeg_fill_bit_buffer(i14, i2, i1, 0) | 0)) {
      i1 = 0;
      break L4;
     }
     i2 = HEAP32[i21 >> 2] | 0;
     i1 = HEAP32[i22 >> 2] | 0;
     if ((i1 | 0) < 8) {
      i3 = 1;
      i7 = 12;
     } else i7 = 10;
    } else i7 = 10;
    if ((i7 | 0) == 10) {
     i7 = 0;
     i3 = i2 >> i1 + -8 & 255;
     i4 = HEAP32[i5 + 144 + (i3 << 2) >> 2] | 0;
     if (!i4) {
      i3 = 9;
      i7 = 12;
     } else {
      i5 = HEAPU8[i5 + 1168 + i3 >> 0] | 0;
      i1 = i1 - i4 | 0;
     }
    }
    if ((i7 | 0) == 12) {
     i1 = _jpeg_huff_decode(i14, i2, i1, i5, i3) | 0;
     if ((i1 | 0) < 0) {
      i1 = 0;
      break L4;
     }
     i5 = i1;
     i2 = HEAP32[i21 >> 2] | 0;
     i1 = HEAP32[i22 >> 2] | 0;
    }
    if (i5) {
     if ((i1 | 0) < (i5 | 0)) {
      if (!(_jpeg_fill_bit_buffer(i14, i2, i1, i5) | 0)) {
       i1 = 0;
       break L4;
      }
      i2 = HEAP32[i21 >> 2] | 0;
      i1 = HEAP32[i22 >> 2] | 0;
     }
     i1 = i1 - i5 | 0;
     i3 = i2 >> i1 & (1 << i5) + -1;
     if ((i3 | 0) < (HEAP32[2880 + (i5 << 2) >> 2] | 0)) i3 = (HEAP32[2944 + (i5 << 2) >> 2] | 0) + i3 | 0;
    } else i3 = 0;
    if (HEAP32[i23 + 152 + (i10 << 2) >> 2] | 0) {
     i6 = i20 + (HEAP32[i11 + 360 + (i10 << 2) >> 2] << 2) | 0;
     i7 = (HEAP32[i6 >> 2] | 0) + i3 | 0;
     HEAP32[i6 >> 2] = i7;
     HEAP16[i8 >> 1] = i7;
    }
    L32 : do if (!(HEAP32[i23 + 192 + (i10 << 2) >> 2] | 0)) {
     i6 = 1;
     while (1) {
      if ((i6 | 0) >= 64) break L32;
      if ((i1 | 0) < 8) {
       if (!(_jpeg_fill_bit_buffer(i14, i2, i1, 0) | 0)) {
        i1 = 0;
        break L4;
       }
       i2 = HEAP32[i21 >> 2] | 0;
       i1 = HEAP32[i22 >> 2] | 0;
       if ((i1 | 0) < 8) {
        i3 = 1;
        i7 = 49;
       } else i7 = 47;
      } else i7 = 47;
      if ((i7 | 0) == 47) {
       i7 = 0;
       i3 = i2 >> i1 + -8 & 255;
       i4 = HEAP32[i9 + 144 + (i3 << 2) >> 2] | 0;
       if (!i4) {
        i3 = 9;
        i7 = 49;
       } else {
        i5 = HEAPU8[i9 + 1168 + i3 >> 0] | 0;
        i1 = i1 - i4 | 0;
       }
      }
      if ((i7 | 0) == 49) {
       i1 = _jpeg_huff_decode(i14, i2, i1, i9, i3) | 0;
       if ((i1 | 0) < 0) {
        i1 = 0;
        break L4;
       }
       i5 = i1;
       i2 = HEAP32[i21 >> 2] | 0;
       i1 = HEAP32[i22 >> 2] | 0;
      }
      i3 = i5 >>> 4;
      i4 = i5 & 15;
      if (!i4) if ((i3 | 0) == 15) i3 = 15; else break L32; else {
       if ((i1 | 0) < (i4 | 0)) {
        if (!(_jpeg_fill_bit_buffer(i14, i2, i1, i4) | 0)) {
         i1 = 0;
         break L4;
        }
        i2 = HEAP32[i21 >> 2] | 0;
        i1 = HEAP32[i22 >> 2] | 0;
       }
       i1 = i1 - i4 | 0;
      }
      i6 = i6 + 1 + i3 | 0;
     }
    } else {
     i6 = 1;
     while (1) {
      if ((i6 | 0) >= 64) break L32;
      if ((i1 | 0) < 8) {
       if (!(_jpeg_fill_bit_buffer(i14, i2, i1, 0) | 0)) {
        i1 = 0;
        break L4;
       }
       i2 = HEAP32[i21 >> 2] | 0;
       i1 = HEAP32[i22 >> 2] | 0;
       if ((i1 | 0) < 8) {
        i3 = 1;
        i7 = 31;
       } else i7 = 29;
      } else i7 = 29;
      if ((i7 | 0) == 29) {
       i7 = 0;
       i4 = i2 >> i1 + -8 & 255;
       i3 = HEAP32[i9 + 144 + (i4 << 2) >> 2] | 0;
       if (!i3) {
        i3 = 9;
        i7 = 31;
       } else {
        i1 = i1 - i3 | 0;
        i3 = HEAPU8[i9 + 1168 + i4 >> 0] | 0;
       }
      }
      if ((i7 | 0) == 31) {
       i3 = _jpeg_huff_decode(i14, i2, i1, i9, i3) | 0;
       if ((i3 | 0) < 0) {
        i1 = 0;
        break L4;
       }
       i2 = HEAP32[i21 >> 2] | 0;
       i1 = HEAP32[i22 >> 2] | 0;
      }
      i4 = i3 >>> 4;
      i5 = i3 & 15;
      if (!i5) {
       if ((i4 | 0) != 15) break L32;
       i3 = i6 + 15 | 0;
      } else {
       i4 = i4 + i6 | 0;
       if ((i1 | 0) < (i5 | 0)) {
        if (!(_jpeg_fill_bit_buffer(i14, i2, i1, i5) | 0)) {
         i1 = 0;
         break L4;
        }
        i2 = HEAP32[i21 >> 2] | 0;
        i1 = HEAP32[i22 >> 2] | 0;
       }
       i1 = i1 - i5 | 0;
       i3 = i2 >> i1 & (1 << i5) + -1;
       if ((i3 | 0) < (HEAP32[2880 + (i5 << 2) >> 2] | 0)) i3 = (HEAP32[2944 + (i5 << 2) >> 2] | 0) + i3 | 0;
       HEAP16[i8 + (HEAP32[2560 + (i4 << 2) >> 2] << 1) >> 1] = i3;
       i3 = i4;
      }
      i6 = i3 + 1 | 0;
     }
    } while (0);
    i10 = i10 + 1 | 0;
   }
   i22 = HEAP32[i13 >> 2] | 0;
   HEAP32[i22 >> 2] = HEAP32[i14 >> 2];
   HEAP32[i22 + 4 >> 2] = HEAP32[i15 >> 2];
   HEAP32[i16 >> 2] = i2;
   HEAP32[i17 >> 2] = i1;
   HEAP32[i18 >> 2] = HEAP32[i20 >> 2];
   HEAP32[i18 + 4 >> 2] = HEAP32[i20 + 4 >> 2];
   HEAP32[i18 + 8 >> 2] = HEAP32[i20 + 8 >> 2];
   HEAP32[i18 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
  }
  i1 = i23 + 36 | 0;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + -1;
  i1 = 1;
 } while (0);
 STACKTOP = i24;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i1, i2, i13, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i13 = i13 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i9 = i16 + 84 | 0;
 i14 = i16 + 72 | 0;
 i15 = i16 + 60 | 0;
 i10 = i16 + 48 | 0;
 i11 = i16 + 36 | 0;
 i12 = i16 + 24 | 0;
 i6 = i16 + 12 | 0;
 i7 = i16;
 i3 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i4) | 0;
 do if ((i3 | 0) != (i1 | 0)) {
  i8 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i3, i2, i4) | 0;
  i5 = i4 + 4 | 0;
  if ((i8 | 0) == (i3 | 0)) {
   i3 = HEAP32[i5 >> 2] | 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == -1) break;
    i15 = i2 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i15 * 24 | 0) | 0);
    i2 = i15;
   }
   HEAP32[i5 >> 2] = i3 + -24;
   break;
  }
  i2 = HEAP32[i5 >> 2] | 0;
  if (((i2 - (HEAP32[i4 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i14, i2 + -24 | 0);
   i2 = HEAP32[i5 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == -1) break;
    i4 = i1 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i4 * 24 | 0) | 0);
    i1 = i4;
   }
   HEAP32[i5 >> 2] = i2 + -24;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i15, i2 + -48 | 0);
   i1 = HEAP32[i5 >> 2] | 0;
   i4 = i1 + -24 | 0;
   i2 = i4 + 11 | 0;
   if ((HEAP8[i2 >> 0] | 0) < 0) {
    i5 = HEAP32[i4 >> 2] | 0;
    HEAP8[i9 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i5, i9);
    HEAP32[i1 + -20 >> 2] = 0;
   } else {
    HEAP8[i9 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i4, i9);
    HEAP8[i2 >> 0] = 0;
   }
   i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(50562) | 0;
   i2 = i13 + 11 | 0;
   i5 = HEAP8[i2 >> 0] | 0;
   i3 = i13 + 4 | 0;
   if ((i1 | 0) == ((i5 << 24 >> 24 < 0 ? HEAP32[i3 >> 2] | 0 : i5 & 255) | 0) ? (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i13, 50562, i1) | 0) == 0 : 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i4, 40);
   __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i7, 50526, i15);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i7, 50812) | 0;
   HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
   HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i7 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i1 = HEAP8[i2 >> 0] | 0;
   i5 = i1 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i6, i5 ? HEAP32[i13 >> 2] | 0 : i13, i5 ? HEAP32[i3 >> 2] | 0 : i1 & 255) | 0;
   HEAP32[i12 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i12 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i12 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i6 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i12, 50521) | 0;
   HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i11 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
   HEAP32[i11 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i12 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i1 = HEAP8[i14 + 11 >> 0] | 0;
   i5 = i1 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i11, i5 ? HEAP32[i14 >> 2] | 0 : i14, i5 ? HEAP32[i14 + 4 >> 2] | 0 : i1 & 255) | 0;
   HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i11 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 50524) | 0;
   HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i10 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i1 = HEAP8[i9 + 11 >> 0] | 0;
   i5 = i1 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i4, i5 ? HEAP32[i9 >> 2] | 0 : i9, i5 ? HEAP32[i9 + 4 >> 2] | 0 : i1 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(50562) | 0;
   i12 = HEAP8[i2 >> 0] | 0;
   if ((i1 | 0) == ((i12 << 24 >> 24 < 0 ? HEAP32[i3 >> 2] | 0 : i12 & 255) | 0) ? (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i13, 50562, i1) | 0) == 0 : 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i4, 41);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
   i1 = i8;
  }
 } while (0);
 STACKTOP = i16;
 return i1 | 0;
}

function __ZN6vision18binomial_4th_orderEPfPtPKhmm(i12, i11, i10, i14, i13) {
 i12 = i12 | 0;
 i11 = i11 | 0;
 i10 = i10 | 0;
 i14 = i14 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i15;
 if (i14 >>> 0 <= 4) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 25162) | 0, 25196) | 0, 33655) | 0, 55) | 0, 33662) | 0, 25327) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 if (i13 >>> 0 <= 4) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 25346) | 0, 25196) | 0, 33655) | 0, 56) | 0, 33662) | 0, 25327) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 i5 = i14 + -1 | 0;
 i6 = i14 + -2 | 0;
 i7 = i14 + -3 | 0;
 i8 = i14 + -4 | 0;
 i2 = i11;
 i3 = 0;
 while (1) {
  if ((i3 | 0) == (i13 | 0)) break;
  i9 = i10 + (Math_imul(i3, i14) | 0) | 0;
  i1 = HEAPU8[i9 >> 0] | 0;
  i16 = i9 + 1 | 0;
  i4 = i9 + 2 | 0;
  HEAP16[i2 >> 1] = (i1 * 7 | 0) + (HEAPU8[i4 >> 0] | 0) + ((HEAPU8[i16 >> 0] | 0) + i1 << 2);
  i1 = HEAPU8[i9 >> 0] | 0;
  HEAP16[i2 + 2 >> 1] = ((HEAPU8[i16 >> 0] | 0) * 6 | 0) + i1 + (HEAPU8[i9 + 3 >> 0] | 0) + ((HEAPU8[i4 >> 0] | 0) + i1 << 2);
  i1 = 2;
  i4 = i2 + 4 | 0;
  while (1) {
   if ((i1 | 0) == (i6 | 0)) break;
   i16 = i1 + 1 | 0;
   HEAP16[i4 >> 1] = ((HEAPU8[i9 + i1 >> 0] | 0) * 6 | 0) + (HEAPU8[i9 + (i1 + -2) >> 0] | 0) + ((HEAPU8[i9 + i16 >> 0] | 0) + (HEAPU8[i9 + (i1 + -1) >> 0] | 0) << 2) + (HEAPU8[i9 + (i1 + 2) >> 0] | 0);
   i1 = i16;
   i4 = i4 + 2 | 0;
  }
  i16 = i2 + (i6 << 1) | 0;
  i4 = i9 + i6 | 0;
  i1 = i9 + i7 | 0;
  i17 = i9 + i5 | 0;
  i18 = HEAPU8[i17 >> 0] | 0;
  HEAP16[i16 >> 1] = ((HEAPU8[i4 >> 0] | 0) * 6 | 0) + i18 + (HEAPU8[i9 + i8 >> 0] | 0) + (i18 + (HEAPU8[i1 >> 0] | 0) << 2);
  i9 = HEAPU8[i17 >> 0] | 0;
  HEAP16[i16 + 2 >> 1] = (i9 * 7 | 0) + (HEAPU8[i1 >> 0] | 0) + ((HEAPU8[i4 >> 0] | 0) + i9 << 2);
  i2 = i2 + (i14 << 1) | 0;
  i3 = i3 + 1 | 0;
 }
 i9 = i13 + -2 | 0;
 i1 = i11 + (i14 << 1) | 0;
 i7 = i1 + (i14 << 1) | 0;
 i2 = 0;
 i3 = i7;
 i4 = i1;
 i5 = i11;
 i6 = i12;
 while (1) {
  if ((i2 | 0) == (i14 | 0)) break;
  i18 = HEAPU16[i5 >> 1] | 0;
  HEAPF32[i6 >> 2] = +((i18 * 7 | 0) + ((HEAPU16[i4 >> 1] | 0) + i18 << 2) + (HEAPU16[i3 >> 1] | 0) | 0) * .00390625;
  i2 = i2 + 1 | 0;
  i3 = i3 + 2 | 0;
  i4 = i4 + 2 | 0;
  i5 = i5 + 2 | 0;
  i6 = i6 + 4 | 0;
 }
 i5 = 0;
 i6 = i7 + (i14 << 1) | 0;
 i4 = i7;
 i2 = i11;
 i3 = i12 + (i14 << 2) | 0;
 while (1) {
  if ((i5 | 0) == (i14 | 0)) break;
  i18 = HEAPU16[i2 >> 1] | 0;
  HEAPF32[i3 >> 2] = +(((HEAPU16[i1 >> 1] | 0) * 6 | 0) + i18 + ((HEAPU16[i4 >> 1] | 0) + i18 << 2) + (HEAPU16[i6 >> 1] | 0) | 0) * .00390625;
  i5 = i5 + 1 | 0;
  i6 = i6 + 2 | 0;
  i4 = i4 + 2 | 0;
  i1 = i1 + 2 | 0;
  i2 = i2 + 2 | 0;
  i3 = i3 + 4 | 0;
 }
 i2 = 2;
 while (1) {
  if ((i2 | 0) == (i9 | 0)) break;
  i7 = i11 + ((Math_imul(i2 + -2 | 0, i14) | 0) << 1) | 0;
  i6 = i7 + (i14 << 1) | 0;
  i5 = i6 + (i14 << 1) | 0;
  i4 = i5 + (i14 << 1) | 0;
  i1 = 0;
  i3 = i4 + (i14 << 1) | 0;
  i8 = i12 + ((Math_imul(i2, i14) | 0) << 2) | 0;
  while (1) {
   if ((i1 | 0) == (i14 | 0)) break;
   HEAPF32[i8 >> 2] = +(((HEAPU16[i5 >> 1] | 0) * 6 | 0) + (HEAPU16[i7 >> 1] | 0) + ((HEAPU16[i4 >> 1] | 0) + (HEAPU16[i6 >> 1] | 0) << 2) + (HEAPU16[i3 >> 1] | 0) | 0) * .00390625;
   i1 = i1 + 1 | 0;
   i3 = i3 + 2 | 0;
   i4 = i4 + 2 | 0;
   i5 = i5 + 2 | 0;
   i6 = i6 + 2 | 0;
   i7 = i7 + 2 | 0;
   i8 = i8 + 4 | 0;
  }
  i2 = i2 + 1 | 0;
 }
 i6 = i11 + ((Math_imul(i13 + -4 | 0, i14) | 0) << 1) | 0;
 i5 = i6 + (i14 << 1) | 0;
 i4 = i5 + (i14 << 1) | 0;
 i2 = 0;
 i3 = i4 + (i14 << 1) | 0;
 i1 = i12 + ((Math_imul(i9, i14) | 0) << 2) | 0;
 while (1) {
  if ((i2 | 0) == (i14 | 0)) break;
  i18 = HEAPU16[i3 >> 1] | 0;
  HEAPF32[i1 >> 2] = +(((HEAPU16[i4 >> 1] | 0) * 6 | 0) + (HEAPU16[i6 >> 1] | 0) + (i18 + (HEAPU16[i5 >> 1] | 0) << 2) + i18 | 0) * .00390625;
  i2 = i2 + 1 | 0;
  i3 = i3 + 2 | 0;
  i4 = i4 + 2 | 0;
  i5 = i5 + 2 | 0;
  i6 = i6 + 2 | 0;
  i1 = i1 + 4 | 0;
 }
 i5 = i11 + ((Math_imul(i13 + -3 | 0, i14) | 0) << 1) | 0;
 i4 = i5 + (i14 << 1) | 0;
 i2 = 0;
 i3 = i4 + (i14 << 1) | 0;
 i1 = i12 + ((Math_imul(i13 + -1 | 0, i14) | 0) << 2) | 0;
 while (1) {
  if ((i2 | 0) == (i14 | 0)) break;
  i18 = HEAPU16[i3 >> 1] | 0;
  HEAPF32[i1 >> 2] = +((i18 * 6 | 0) + (HEAPU16[i5 >> 1] | 0) + (i18 + (HEAPU16[i4 >> 1] | 0) << 2) + i18 | 0) * .00390625;
  i2 = i2 + 1 | 0;
  i3 = i3 + 2 | 0;
  i4 = i4 + 2 | 0;
  i5 = i5 + 2 | 0;
  i1 = i1 + 4 | 0;
 }
 STACKTOP = i15;
 return;
}

function __ZN6vision18binomial_4th_orderEPfS0_PKfmm(i12, i11, i10, i14, i13) {
 i12 = i12 | 0;
 i11 = i11 | 0;
 i10 = i10 | 0;
 i14 = i14 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i15 = 0, d16 = 0.0, i17 = 0, i18 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i15;
 if (i14 >>> 0 <= 4) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 25162) | 0, 25196) | 0, 33655) | 0, 168) | 0, 33662) | 0, 25327) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 if (i13 >>> 0 <= 4) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 25346) | 0, 25196) | 0, 33655) | 0, 169) | 0, 33662) | 0, 25327) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 i5 = i14 + -1 | 0;
 i6 = i14 + -2 | 0;
 i7 = i14 + -3 | 0;
 i8 = i14 + -4 | 0;
 i2 = i11;
 i3 = 0;
 while (1) {
  if ((i3 | 0) == (i13 | 0)) break;
  i9 = i10 + ((Math_imul(i3, i14) | 0) << 2) | 0;
  d16 = +HEAPF32[i9 >> 2];
  i4 = i9 + 4 | 0;
  i1 = i9 + 8 | 0;
  HEAPF32[i2 >> 2] = +HEAPF32[i1 >> 2] + (d16 + (d16 * 6.0 + (d16 + +HEAPF32[i4 >> 2]) * 4.0));
  d16 = +HEAPF32[i9 >> 2];
  HEAPF32[i2 + 4 >> 2] = +HEAPF32[i9 + 12 >> 2] + (d16 + (+HEAPF32[i4 >> 2] * 6.0 + (d16 + +HEAPF32[i1 >> 2]) * 4.0));
  i1 = 2;
  i4 = i2 + 8 | 0;
  while (1) {
   if ((i1 | 0) == (i6 | 0)) break;
   i17 = i1 + 1 | 0;
   HEAPF32[i4 >> 2] = +HEAPF32[i9 + (i1 + 2 << 2) >> 2] + (+HEAPF32[i9 + (i1 + -2 << 2) >> 2] + (+HEAPF32[i9 + (i1 << 2) >> 2] * 6.0 + (+HEAPF32[i9 + (i1 + -1 << 2) >> 2] + +HEAPF32[i9 + (i17 << 2) >> 2]) * 4.0));
   i1 = i17;
   i4 = i4 + 4 | 0;
  }
  i17 = i2 + (i6 << 2) | 0;
  i4 = i9 + (i6 << 2) | 0;
  i1 = i9 + (i7 << 2) | 0;
  i18 = i9 + (i5 << 2) | 0;
  d16 = +HEAPF32[i18 >> 2];
  HEAPF32[i17 >> 2] = d16 + (+HEAPF32[i9 + (i8 << 2) >> 2] + (+HEAPF32[i4 >> 2] * 6.0 + (+HEAPF32[i1 >> 2] + d16) * 4.0));
  d16 = +HEAPF32[i18 >> 2];
  HEAPF32[i17 + 4 >> 2] = d16 + (+HEAPF32[i1 >> 2] + (d16 * 6.0 + (d16 + +HEAPF32[i4 >> 2]) * 4.0));
  i2 = i2 + (i14 << 2) | 0;
  i3 = i3 + 1 | 0;
 }
 i9 = i13 + -2 | 0;
 i1 = i11 + (i14 << 2) | 0;
 i7 = i1 + (i14 << 2) | 0;
 i2 = 0;
 i3 = i7;
 i4 = i1;
 i5 = i11;
 i6 = i12;
 while (1) {
  if ((i2 | 0) == (i14 | 0)) break;
  d16 = +HEAPF32[i5 >> 2];
  HEAPF32[i6 >> 2] = (+HEAPF32[i3 >> 2] + (d16 + (d16 * 6.0 + (d16 + +HEAPF32[i4 >> 2]) * 4.0))) * .00390625;
  i2 = i2 + 1 | 0;
  i3 = i3 + 4 | 0;
  i4 = i4 + 4 | 0;
  i5 = i5 + 4 | 0;
  i6 = i6 + 4 | 0;
 }
 i5 = 0;
 i6 = i7 + (i14 << 2) | 0;
 i4 = i7;
 i2 = i11;
 i3 = i12 + (i14 << 2) | 0;
 while (1) {
  if ((i5 | 0) == (i14 | 0)) break;
  d16 = +HEAPF32[i2 >> 2];
  HEAPF32[i3 >> 2] = (+HEAPF32[i6 >> 2] + (d16 + (+HEAPF32[i1 >> 2] * 6.0 + (d16 + +HEAPF32[i4 >> 2]) * 4.0))) * .00390625;
  i5 = i5 + 1 | 0;
  i6 = i6 + 4 | 0;
  i4 = i4 + 4 | 0;
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
  i3 = i3 + 4 | 0;
 }
 i2 = 2;
 while (1) {
  if ((i2 | 0) == (i9 | 0)) break;
  i7 = i11 + ((Math_imul(i2 + -2 | 0, i14) | 0) << 2) | 0;
  i6 = i7 + (i14 << 2) | 0;
  i5 = i6 + (i14 << 2) | 0;
  i4 = i5 + (i14 << 2) | 0;
  i1 = 0;
  i3 = i4 + (i14 << 2) | 0;
  i8 = i12 + ((Math_imul(i2, i14) | 0) << 2) | 0;
  while (1) {
   if ((i1 | 0) == (i14 | 0)) break;
   HEAPF32[i8 >> 2] = (+HEAPF32[i3 >> 2] + (+HEAPF32[i7 >> 2] + (+HEAPF32[i5 >> 2] * 6.0 + (+HEAPF32[i6 >> 2] + +HEAPF32[i4 >> 2]) * 4.0))) * .00390625;
   i1 = i1 + 1 | 0;
   i3 = i3 + 4 | 0;
   i4 = i4 + 4 | 0;
   i5 = i5 + 4 | 0;
   i6 = i6 + 4 | 0;
   i7 = i7 + 4 | 0;
   i8 = i8 + 4 | 0;
  }
  i2 = i2 + 1 | 0;
 }
 i6 = i11 + ((Math_imul(i13 + -4 | 0, i14) | 0) << 2) | 0;
 i5 = i6 + (i14 << 2) | 0;
 i4 = i5 + (i14 << 2) | 0;
 i2 = 0;
 i3 = i4 + (i14 << 2) | 0;
 i1 = i12 + ((Math_imul(i9, i14) | 0) << 2) | 0;
 while (1) {
  if ((i2 | 0) == (i14 | 0)) break;
  d16 = +HEAPF32[i3 >> 2];
  HEAPF32[i1 >> 2] = (d16 + (+HEAPF32[i6 >> 2] + (+HEAPF32[i4 >> 2] * 6.0 + (+HEAPF32[i5 >> 2] + d16) * 4.0))) * .00390625;
  i2 = i2 + 1 | 0;
  i3 = i3 + 4 | 0;
  i4 = i4 + 4 | 0;
  i5 = i5 + 4 | 0;
  i6 = i6 + 4 | 0;
  i1 = i1 + 4 | 0;
 }
 i5 = i11 + ((Math_imul(i13 + -3 | 0, i14) | 0) << 2) | 0;
 i4 = i5 + (i14 << 2) | 0;
 i2 = 0;
 i3 = i4 + (i14 << 2) | 0;
 i1 = i12 + ((Math_imul(i13 + -1 | 0, i14) | 0) << 2) | 0;
 while (1) {
  if ((i2 | 0) == (i14 | 0)) break;
  d16 = +HEAPF32[i3 >> 2];
  HEAPF32[i1 >> 2] = (d16 + (+HEAPF32[i5 >> 2] + (d16 * 6.0 + (+HEAPF32[i4 >> 2] + d16) * 4.0))) * .00390625;
  i2 = i2 + 1 | 0;
  i3 = i3 + 4 | 0;
  i4 = i4 + 4 | 0;
  i5 = i5 + 4 | 0;
  i1 = i1 + 4 | 0;
 }
 STACKTOP = i15;
 return;
}

function _hexfloat(i18, i22, i21, i23, i19) {
 i18 = i18 | 0;
 i22 = i22 | 0;
 i21 = i21 | 0;
 i23 = i23 | 0;
 i19 = i19 | 0;
 var d1 = 0.0, i2 = 0, i3 = 0, d4 = 0.0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i20 = 0;
 i20 = i18 + 4 | 0;
 i2 = HEAP32[i20 >> 2] | 0;
 i17 = i18 + 104 | 0;
 if (i2 >>> 0 < (HEAP32[i17 >> 2] | 0) >>> 0) {
  HEAP32[i20 >> 2] = i2 + 1;
  i2 = HEAPU8[i2 >> 0] | 0;
 } else i2 = ___shgetc(i18) | 0;
 i3 = 0;
 L5 : while (1) {
  switch (i2 | 0) {
  case 46:
   {
    i16 = 10;
    break L5;
   }
  case 48:
   break;
  default:
   {
    i9 = 0;
    i6 = i3;
    i5 = 0;
    i3 = 0;
    break L5;
   }
  }
  i2 = HEAP32[i20 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i17 >> 2] | 0) >>> 0) {
   HEAP32[i20 >> 2] = i2 + 1;
   i2 = HEAPU8[i2 >> 0] | 0;
  } else i2 = ___shgetc(i18) | 0;
  i3 = 1;
 }
 if ((i16 | 0) == 10) {
  i2 = HEAP32[i20 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i17 >> 2] | 0) >>> 0) {
   HEAP32[i20 >> 2] = i2 + 1;
   i2 = HEAPU8[i2 >> 0] | 0;
  } else i2 = ___shgetc(i18) | 0;
  if ((i2 | 0) == 48) {
   i5 = 0;
   i3 = 0;
   do {
    i2 = HEAP32[i20 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[i17 >> 2] | 0) >>> 0) {
     HEAP32[i20 >> 2] = i2 + 1;
     i2 = HEAPU8[i2 >> 0] | 0;
    } else i2 = ___shgetc(i18) | 0;
    i5 = _i64Add(i5 | 0, i3 | 0, -1, -1) | 0;
    i3 = getTempRet0() | 0;
   } while ((i2 | 0) == 48);
   i9 = 1;
   i6 = 1;
  } else {
   i9 = 1;
   i6 = i3;
   i5 = 0;
   i3 = 0;
  }
 }
 i8 = 0;
 d7 = 1.0;
 d1 = 0.0;
 i15 = 0;
 i12 = i9;
 i13 = i6;
 i14 = 0;
 i6 = 0;
 while (1) {
  i10 = i2 + -48 | 0;
  i9 = i2 | 32;
  if (i10 >>> 0 >= 10) {
   i11 = (i2 | 0) == 46;
   if (!(i11 | (i9 + -97 | 0) >>> 0 < 6)) break;
   if (i11) if (!i12) {
    i12 = 1;
    d4 = d7;
    i10 = i15;
    i11 = i13;
    i5 = i6;
    i3 = i14;
    i9 = i14;
   } else {
    i2 = 46;
    break;
   } else i16 = 24;
  } else i16 = 24;
  if ((i16 | 0) == 24) {
   i16 = 0;
   i2 = (i2 | 0) > 57 ? i9 + -87 | 0 : i10;
   do if (!((i14 | 0) < 0 | (i14 | 0) == 0 & i6 >>> 0 < 8)) if ((i14 | 0) < 0 | (i14 | 0) == 0 & i6 >>> 0 < 14) {
    d7 = d7 * .0625;
    d4 = d7;
    d1 = d1 + d7 * +(i2 | 0);
    i2 = i15;
    break;
   } else {
    i2 = (i8 | 0) != 0 | (i2 | 0) == 0;
    i8 = i2 ? i8 : 1;
    d4 = d7;
    d1 = i2 ? d1 : d1 + d7 * .5;
    i2 = i15;
    break;
   } else {
    d4 = d7;
    i2 = i2 + (i15 << 4) | 0;
   } while (0);
   i6 = _i64Add(i6 | 0, i14 | 0, 1, 0) | 0;
   i10 = i2;
   i11 = 1;
   i9 = getTempRet0() | 0;
  }
  i2 = HEAP32[i20 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i17 >> 2] | 0) >>> 0) {
   HEAP32[i20 >> 2] = i2 + 1;
   i2 = HEAPU8[i2 >> 0] | 0;
  } else i2 = ___shgetc(i18) | 0;
  d7 = d4;
  i15 = i10;
  i13 = i11;
  i14 = i9;
 }
 do if (!i13) {
  i2 = (HEAP32[i17 >> 2] | 0) == 0;
  if (!i2) HEAP32[i20 >> 2] = (HEAP32[i20 >> 2] | 0) + -1;
  if (i19) {
   if (!i2 ? (HEAP32[i20 >> 2] = (HEAP32[i20 >> 2] | 0) + -1, !((i12 | 0) == 0 | i2)) : 0) HEAP32[i20 >> 2] = (HEAP32[i20 >> 2] | 0) + -1;
  } else ___shlim(i18, 0, 0);
  d1 = +(i23 | 0) * 0.0;
 } else {
  i8 = (i12 | 0) == 0;
  i9 = i8 ? i6 : i5;
  i8 = i8 ? i14 : i3;
  if ((i14 | 0) < 0 | (i14 | 0) == 0 & i6 >>> 0 < 8) {
   i3 = i15;
   i5 = i14;
   do {
    i3 = i3 << 4;
    i16 = i6;
    i6 = _i64Add(i6 | 0, i5 | 0, 1, 0) | 0;
    i15 = i5;
    i5 = getTempRet0() | 0;
   } while ((i15 | 0) < 0 | (i15 | 0) == 0 & i16 >>> 0 < 7);
   i6 = i3;
  } else i6 = i15;
  if ((i2 | 32 | 0) == 112) {
   i3 = _scanexp(i18, i19) | 0;
   i2 = getTempRet0() | 0;
   if ((i3 | 0) == 0 & (i2 | 0) == -2147483648) {
    if (!i19) {
     ___shlim(i18, 0, 0);
     d1 = 0.0;
     break;
    }
    if (!(HEAP32[i17 >> 2] | 0)) {
     i3 = 0;
     i2 = 0;
    } else {
     HEAP32[i20 >> 2] = (HEAP32[i20 >> 2] | 0) + -1;
     i3 = 0;
     i2 = 0;
    }
   }
  } else if (!(HEAP32[i17 >> 2] | 0)) {
   i3 = 0;
   i2 = 0;
  } else {
   HEAP32[i20 >> 2] = (HEAP32[i20 >> 2] | 0) + -1;
   i3 = 0;
   i2 = 0;
  }
  i5 = _bitshift64Shl(i9 | 0, i8 | 0, 2) | 0;
  i5 = _i64Add(i5 | 0, getTempRet0() | 0, -32, -1) | 0;
  i5 = _i64Add(i5 | 0, getTempRet0() | 0, i3 | 0, i2 | 0) | 0;
  i2 = getTempRet0() | 0;
  if (!i6) {
   d1 = +(i23 | 0) * 0.0;
   break;
  }
  i20 = 0 - i21 | 0;
  i19 = ((i20 | 0) < 0) << 31 >> 31;
  if ((i2 | 0) > (i19 | 0) | (i2 | 0) == (i19 | 0) & i5 >>> 0 > i20 >>> 0) {
   i22 = ___errno_location() | 0;
   HEAP32[i22 >> 2] = 34;
   d1 = +(i23 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
   break;
  }
  i20 = i21 + -106 | 0;
  i19 = ((i20 | 0) < 0) << 31 >> 31;
  if ((i2 | 0) < (i19 | 0) | (i2 | 0) == (i19 | 0) & i5 >>> 0 < i20 >>> 0) {
   i22 = ___errno_location() | 0;
   HEAP32[i22 >> 2] = 34;
   d1 = +(i23 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
   break;
  }
  if ((i6 | 0) > -1) {
   i3 = i6;
   do {
    i20 = !(d1 >= .5);
    i3 = i3 << 1 | (i20 ^ 1) & 1;
    d1 = d1 + (i20 ? d1 : d1 + -1.0);
    i5 = _i64Add(i5 | 0, i2 | 0, -1, -1) | 0;
    i2 = getTempRet0() | 0;
   } while ((i3 | 0) > -1);
   d7 = d1;
   i6 = i3;
  } else d7 = d1;
  i20 = ((i22 | 0) < 0) << 31 >> 31;
  i21 = _i64Subtract(32, 0, i21 | 0, ((i21 | 0) < 0) << 31 >> 31 | 0) | 0;
  i2 = _i64Add(i21 | 0, getTempRet0() | 0, i5 | 0, i2 | 0) | 0;
  i21 = getTempRet0() | 0;
  if ((i21 | 0) < (i20 | 0) | (i21 | 0) == (i20 | 0) & i2 >>> 0 < i22 >>> 0) if ((i2 | 0) > 0) i16 = 65; else {
   i3 = 0;
   i2 = 84;
   i16 = 67;
  } else {
   i2 = i22;
   i16 = 65;
  }
  if ((i16 | 0) == 65) if ((i2 | 0) < 53) {
   i3 = i2;
   i2 = 84 - i2 | 0;
   i16 = 67;
  } else {
   d4 = 0.0;
   d1 = +(i23 | 0);
  }
  if ((i16 | 0) == 67) {
   d1 = +(i23 | 0);
   d4 = +_copysignl(+_scalbn(1.0, i2), d1);
   i2 = i3;
  }
  i23 = (i6 & 1 | 0) == 0 & (d7 != 0.0 & (i2 | 0) < 32);
  d1 = (i23 ? 0.0 : d7) * d1 + (d4 + d1 * +((i6 + (i23 & 1) | 0) >>> 0)) - d4;
  if (!(d1 != 0.0)) {
   i23 = ___errno_location() | 0;
   HEAP32[i23 >> 2] = 34;
  }
  d1 = +_scalbnl(d1, i5);
 } while (0);
 return +d1;
}

function __ZN6vision5Image5allocENS_9ImageTypeEmmim(i4, i5, i6, i7, i1, i8) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i11 + 16 | 0;
 i9 = i11 + 8 | 0;
 i10 = i11;
 if (!i6) {
  i2 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32864) | 0, 32897) | 0, 33655) | 0, 127) | 0, 33662) | 0, 33005) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i2, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i2) | 0;
  _abort();
 }
 if (!i7) {
  i12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 33026) | 0, 32897) | 0, 33655) | 0, 128) | 0, 33662) | 0, 33060) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
  i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i2, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i2) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 if (i1 >>> 0 < i6 >>> 0) {
  i12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 33082) | 0, 32897) | 0, 33655) | 0, 129) | 0, 33662) | 0, 33119) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
  i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i2, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i2) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 if (!i8) {
  i12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 33164) | 0, 32897) | 0, 33655) | 0, 130) | 0, 33662) | 0, 33200) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
  i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i2, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i2) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 if ((i1 | 0) < 0) i1 = Math_imul(Math_imul(i8, i6) | 0, __ZN6vision5Image19calculate_unit_sizeENS_9ImageTypeE(i5) | 0) | 0;
 HEAP32[i4 + 12 >> 2] = i1;
 i1 = Math_imul(i1, i7) | 0;
 i2 = i4 + 20 | 0;
 if ((HEAP32[i2 >> 2] | 0) != (i1 | 0) ? (i12 = i4 + 24 | 0, i14 = __Znam(i1) | 0, HEAP32[i10 >> 2] = 0, HEAP32[i3 >> 2] = HEAP32[i10 >> 2], __ZNSt3__210shared_ptrIhEC2IhEEPT_NS_9enable_ifIXsr14is_convertibleIS4_PhEE5valueENS1_5__natEE4typeE(i9, i14, i3), i14 = HEAP32[i9 >> 2] | 0, HEAP32[i9 >> 2] = HEAP32[i12 >> 2], HEAP32[i12 >> 2] = i14, i14 = i9 + 4 | 0, i10 = i4 + 28 | 0, i13 = HEAP32[i14 >> 2] | 0, HEAP32[i14 >> 2] = HEAP32[i10 >> 2], HEAP32[i10 >> 2] = i13, __ZNSt3__210shared_ptrIhED2Ev(i9), (HEAP32[i12 >> 2] | 0) == 0) : 0) {
  i14 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 33234) | 0, 32897) | 0, 33655) | 0, 149) | 0, 33662) | 0, 33269) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i13 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i14, i13) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i14) | 0;
  _abort();
 }
 HEAP32[i4 >> 2] = i5;
 HEAP32[i4 + 4 >> 2] = i6;
 HEAP32[i4 + 8 >> 2] = i7;
 HEAP32[i4 + 16 >> 2] = i8;
 HEAP32[i2 >> 2] = i1;
 STACKTOP = i11;
 return;
}

function _get_matrix_code(i9, i10, i13, i7, i14, i12, i15) {
 i9 = i9 | 0;
 i10 = i10 | 0;
 i13 = i13 | 0;
 i7 = i7 | 0;
 i14 = i14 | 0;
 i12 = i12 | 0;
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i11 = 0, i16 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i17 + 24 | 0;
 i4 = i17;
 i16 = i17 + 16 | 0;
 L1 : do if ((i10 + -3 | 0) >>> 0 > 5) {
  HEAP32[i13 >> 2] = -1;
  HEAP32[i7 >> 2] = 0;
  HEAPF64[i14 >> 3] = -1.0;
  i1 = -1;
 } else {
  HEAP32[i4 >> 2] = 0;
  i11 = i10 + -1 | 0;
  i6 = Math_imul(i11, i10) | 0;
  HEAP32[i4 + 4 >> 2] = i6;
  i6 = Math_imul(i10, i10) | 0;
  HEAP32[i4 + 8 >> 2] = i6 + -1;
  HEAP32[i4 + 12 >> 2] = i11;
  i1 = 0;
  i2 = 0;
  i3 = -1;
  while (1) {
   if ((i1 | 0) == 4) break;
   i8 = HEAP8[i9 + (HEAP32[i4 + (i1 << 2) >> 2] | 0) >> 0] | 0;
   i1 = i1 + 1 | 0;
   i2 = (i8 & 255) > (i2 & 255) ? i8 : i2;
   i3 = (i8 & 255) < (i3 & 255) ? i8 : i3;
  }
  i2 = i2 & 255;
  i1 = i3 & 255;
  if ((i2 - i1 | 0) < 30) {
   HEAP32[i13 >> 2] = -1;
   HEAP32[i7 >> 2] = 0;
   HEAPF64[i14 >> 3] = -1.0;
   i1 = -2;
   break;
  }
  i3 = (i2 + i1 | 0) >>> 1;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 4) break;
   HEAP8[i5 + i1 >> 0] = i3 >>> 0 > (HEAPU8[i9 + (HEAP32[i4 + (i1 << 2) >> 2] | 0) >> 0] | 0) >>> 0 & 1;
   i1 = i1 + 1 | 0;
  }
  i2 = 0;
  while (1) {
   if (i2 >>> 0 >= 4) {
    i1 = 18;
    break;
   }
   i1 = i2 + 1 | 0;
   if (((HEAP8[i5 + i2 >> 0] | 0) == 1 ? (HEAP8[i5 + (i1 & 3) >> 0] | 0) == 1 : 0) ? (HEAP8[i5 + (i2 + 2 & 3) >> 0] | 0) == 0 : 0) {
    i1 = 17;
    break;
   }
   i2 = i1;
  }
  if ((i1 | 0) == 17) HEAP32[i7 >> 2] = i2; else if ((i1 | 0) == 18 ? (i2 | 0) == 4 : 0) {
   HEAP32[i13 >> 2] = -1;
   HEAP32[i7 >> 2] = 0;
   HEAPF64[i14 >> 3] = -1.0;
   i1 = -3;
   break;
  }
  i8 = 255;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i6 | 0)) break;
   i4 = i9 + i1 | 0;
   i2 = HEAPU8[i4 >> 0] | 0;
   i5 = i2 - i3 | 0;
   i5 = (i5 | 0) < 0 ? 0 - i5 | 0 : i5;
   HEAP8[i4 >> 0] = i3 >>> 0 > i2 >>> 0 & 1;
   i8 = (i5 | 0) < (i8 | 0) ? i5 : i8;
   i1 = i1 + 1 | 0;
  }
  i1 = HEAP32[i7 >> 2] | 0;
  L31 : do switch (i1 | 0) {
  case 0:
   {
    i3 = i1;
    i2 = 0;
    i1 = 0;
    while (1) {
     if ((i3 | 0) >= (i10 | 0)) break L31;
     i5 = (i3 | 0) == (i11 | 0);
     i6 = Math_imul(i3, i10) | 0;
     i4 = 0;
     while (1) {
      if ((i4 | 0) == (i10 | 0)) break;
      if ((i4 | i3 | 0) != 0 ? !(i5 & ((i4 | 0) == 0 | (i4 | 0) == (i11 | 0))) : 0) {
       i2 = _bitshift64Shl(i2 | 0, i1 | 0, 1) | 0;
       i1 = getTempRet0() | 0;
       i2 = i2 | (HEAP8[i9 + (i4 + i6) >> 0] | 0) != 0;
      }
      i4 = i4 + 1 | 0;
     }
     i3 = i3 + 1 | 0;
    }
   }
  case 1:
   {
    i4 = 0;
    i2 = 0;
    i1 = 0;
    while (1) {
     if ((i4 | 0) >= (i10 | 0)) break L31;
     i5 = (i4 | 0) == 0;
     i6 = (i4 | 0) == (i11 | 0);
     i3 = i11;
     while (1) {
      if ((i3 | 0) <= -1) break;
      i7 = (i3 | 0) == (i11 | 0);
      if (!(i5 & i7) ? !(i6 & (i7 | (i3 | 0) == 0)) : 0) {
       i7 = _bitshift64Shl(i2 | 0, i1 | 0, 1) | 0;
       i1 = getTempRet0() | 0;
       i2 = i9 + ((Math_imul(i3, i10) | 0) + i4) | 0;
       i2 = i7 | (HEAP8[i2 >> 0] | 0) != 0;
      }
      i3 = i3 + -1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
   }
  case 2:
   {
    i3 = i11;
    i2 = 0;
    i1 = 0;
    while (1) {
     if ((i3 | 0) <= -1) break L31;
     i6 = (i3 | 0) == (i11 | 0) | (i3 | 0) == 0;
     i5 = Math_imul(i3, i10) | 0;
     i4 = i11;
     while (1) {
      if ((i4 | 0) <= -1) break;
      if (!(i6 & (i4 | 0) == (i11 | 0) | (i4 | i3 | 0) == 0)) {
       i2 = _bitshift64Shl(i2 | 0, i1 | 0, 1) | 0;
       i1 = getTempRet0() | 0;
       i2 = i2 | (HEAP8[i9 + (i4 + i5) >> 0] | 0) != 0;
      }
      i4 = i4 + -1 | 0;
     }
     i3 = i3 + -1 | 0;
    }
   }
  case 3:
   {
    i4 = i11;
    i2 = 0;
    i1 = 0;
    while (1) {
     if ((i4 | 0) <= -1) break L31;
     i5 = (i4 | 0) == (i11 | 0);
     i6 = (i4 | 0) == 0;
     i3 = 0;
     while (1) {
      if ((i3 | 0) >= (i10 | 0)) break;
      if (!(i5 & (i3 | 0) == 0 | (i3 | i4 | 0) == 0 | i6 & (i3 | 0) == (i11 | 0))) {
       i7 = _bitshift64Shl(i2 | 0, i1 | 0, 1) | 0;
       i1 = getTempRet0() | 0;
       i2 = i9 + ((Math_imul(i3, i10) | 0) + i4) | 0;
       i2 = i7 | (HEAP8[i2 >> 0] | 0) != 0;
      }
      i3 = i3 + 1 | 0;
     }
     i4 = i4 + -1 | 0;
    }
   }
  default:
   {
    i2 = 0;
    i1 = 0;
   }
  } while (0);
  HEAPF64[i14 >> 3] = (i8 | 0) > 30 ? 1.0 : +(i8 | 0) / 30.0;
  switch (i12 | 0) {
  case 259:
   {
    i15 = HEAP8[240 + i2 >> 0] | 0;
    i11 = i15 << 24 >> 24;
    i12 = i16;
    HEAP32[i12 >> 2] = i11;
    HEAP32[i12 + 4 >> 2] = ((i11 | 0) < 0) << 31 >> 31;
    if (i15 << 24 >> 24 < 0) {
     HEAP32[i13 >> 2] = -1;
     HEAPF64[i14 >> 3] = -1.0;
     i1 = -4;
     break L1;
    }
    break;
   }
  case 515:
   {
    i1 = HEAP8[112 + i2 >> 0] | 0;
    i11 = i1 << 24 >> 24;
    i12 = i16;
    HEAP32[i12 >> 2] = i11;
    HEAP32[i12 + 4 >> 2] = ((i11 | 0) < 0) << 31 >> 31;
    if (i15 | 0) HEAP32[i15 >> 2] = HEAPU8[176 + i2 >> 0];
    if (i1 << 24 >> 24 < 0) {
     HEAP32[i13 >> 2] = -1;
     HEAPF64[i14 >> 3] = -1.0;
     i1 = -4;
     break L1;
    }
    break;
   }
  case 772:
  case 1028:
  case 1029:
  case 1285:
   {
    i1 = _decode_bch(i12, i2, i1, 0, i16) | 0;
    if ((i1 | 0) < 0) {
     HEAP32[i13 >> 2] = -1;
     HEAPF64[i14 >> 3] = -1.0;
     i1 = -4;
     break L1;
    }
    if ((i15 | 0) != 0 & (i1 | 0) != 0) HEAP32[i15 >> 2] = i1;
    break;
   }
  default:
   {
    i15 = i16;
    HEAP32[i15 >> 2] = i2;
    HEAP32[i15 + 4 >> 2] = i1;
   }
  }
  HEAP32[i13 >> 2] = HEAP32[i16 >> 2];
  i1 = 0;
 } while (0);
 STACKTOP = i17;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i1, i7, i9) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i9 = i9 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i10;
 L1 : do if ((i7 - i1 | 0) > 1 ? (HEAP8[i1 >> 0] | 0) == 83 : 0) {
  i4 = HEAP8[i1 + 1 >> 0] | 0;
  switch (i4 | 0) {
  case 97:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc(i5, 51852);
    i2 = i9 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i9 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i9, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 98:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm18EEERAT__Kc(i5, 51867);
    i2 = i9 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i9 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i9, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 115:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc(i5, 51346);
    i2 = i9 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i9 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i9, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 105:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc(i5, 51442);
    i2 = i9 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i9 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i9, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 111:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc(i5, 51519);
    i2 = i9 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i9 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i9, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 100:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm14EEERAT__Kc(i5, 51596);
    i2 = i9 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i9 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i5);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i9, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 95:
   {
    i2 = HEAP32[i9 + 16 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i9 + 20 >> 2] | 0)) break L1;
    i4 = HEAP32[i2 + 4 >> 2] | 0;
    i5 = i9 + 4 | 0;
    i6 = i9 + 8 | 0;
    i2 = HEAP32[i2 >> 2] | 0;
    while (1) {
     if ((i2 | 0) == (i4 | 0)) break;
     i3 = HEAP32[i5 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i9, i2); else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i3, i2);
      HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 24;
     }
     i2 = i2 + 24 | 0;
    }
    i1 = i1 + 2 | 0;
    break L1;
   }
  default:
   {
    i3 = i4 + -48 | 0;
    i2 = i3 >>> 0 < 10;
    if (!i2 ? (_isupper(i4) | 0) == 0 : 0) break L1;
    i8 = i1 + 2 | 0;
    i2 = i2 ? i3 : i4 + -55 | 0;
    while (1) {
     if ((i8 | 0) == (i7 | 0)) break L1;
     i3 = HEAP8[i8 >> 0] | 0;
     i4 = i3 << 24 >> 24;
     i6 = i4 + -48 | 0;
     i5 = i6 >>> 0 < 10;
     if (!i5 ? (_isupper(i4) | 0) == 0 : 0) break;
     i8 = i8 + 1 | 0;
     i2 = (i5 ? i6 : i4 + -55 | 0) + (i2 * 36 | 0) | 0;
    }
    if (i3 << 24 >> 24 != 95) break L1;
    i3 = i2 + 1 | 0;
    i7 = HEAP32[i9 + 16 >> 2] | 0;
    i2 = i7;
    if (i3 >>> 0 >= (HEAP32[i9 + 20 >> 2] | 0) - i7 >> 4 >>> 0) break L1;
    i4 = HEAP32[i2 + (i3 << 4) + 4 >> 2] | 0;
    i5 = i9 + 4 | 0;
    i6 = i9 + 8 | 0;
    i1 = HEAP32[i2 + (i3 << 4) >> 2] | 0;
    while (1) {
     if ((i1 | 0) == (i4 | 0)) break;
     i2 = HEAP32[i5 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i9, i1); else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i2, i1);
      HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 24;
     }
     i1 = i1 + 24 | 0;
    }
    i1 = i8 + 1 | 0;
    break L1;
   }
  }
 } while (0);
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i25, i26, i2, i27, i21) {
 i1 = i1 | 0;
 i25 = i25 | 0;
 i26 = i26 | 0;
 i2 = i2 | 0;
 i27 = i27 | 0;
 i21 = i21 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i24 = 0, i28 = 0, d29 = 0.0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 i12 = i24 + 160 | 0;
 i13 = i24 + 328 | 0;
 i14 = i24 + 324 | 0;
 i23 = i24 + 312 | 0;
 i22 = i24 + 300 | 0;
 i15 = i24 + 296 | 0;
 i16 = i24;
 i17 = i24 + 292 | 0;
 i18 = i24 + 288 | 0;
 i19 = i24 + 333 | 0;
 i11 = i24 + 332 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i23, i2, i12, i13, i14);
 HEAP32[i22 >> 2] = 0;
 HEAP32[i22 + 4 >> 2] = 0;
 HEAP32[i22 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i22 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i22 + 11 | 0;
 i10 = i22 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i22 >> 2] | 0 : i22;
 HEAP32[i15 >> 2] = i1;
 HEAP32[i17 >> 2] = i16;
 HEAP32[i18 >> 2] = 0;
 HEAP8[i19 >> 0] = 1;
 HEAP8[i11 >> 0] = 69;
 i8 = i22 + 4 | 0;
 i4 = HEAP32[i25 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i25 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i26 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i26 >> 2] = 0;
    i28 = 19;
    break;
   }
  } else i28 = 19; while (0);
  if ((i28 | 0) == 19) {
   i28 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i15 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i22 >> 2] | 0 : i22;
   HEAP32[i15 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i2, i19, i11, i1, i15, HEAP32[i13 >> 2] | 0, HEAP32[i14 >> 2] | 0, i23, i16, i17, i18, i12) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  }
  i3 = i7;
 }
 i14 = HEAP8[i23 + 11 >> 0] | 0;
 if (!((HEAP8[i19 >> 0] | 0) == 0 ? 1 : ((i14 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i14 & 255) | 0) == 0) ? (i20 = HEAP32[i17 >> 2] | 0, (i20 - i16 | 0) < 160) : 0) {
  i19 = HEAP32[i18 >> 2] | 0;
  HEAP32[i17 >> 2] = i20 + 4;
  HEAP32[i20 >> 2] = i19;
 }
 d29 = +__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj(i1, HEAP32[i15 >> 2] | 0, i27);
 HEAPF32[i21 >> 2] = d29;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i16, HEAP32[i17 >> 2] | 0, i27);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i25 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break; else {
   i28 = 50;
   break;
  } else {
   HEAP32[i26 >> 2] = 0;
   i28 = 48;
   break;
  }
 } else i28 = 48; while (0);
 if ((i28 | 0) == 48 ? i2 : 0) i28 = 50;
 if ((i28 | 0) == 50) HEAP32[i27 >> 2] = HEAP32[i27 >> 2] | 2;
 i28 = HEAP32[i25 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i22);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i24;
 return i28 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i25, i26, i2, i27, i21) {
 i1 = i1 | 0;
 i25 = i25 | 0;
 i26 = i26 | 0;
 i2 = i2 | 0;
 i27 = i27 | 0;
 i21 = i21 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i24 = 0, i28 = 0, d29 = 0.0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 i12 = i24 + 160 | 0;
 i13 = i24 + 328 | 0;
 i14 = i24 + 324 | 0;
 i23 = i24 + 312 | 0;
 i22 = i24 + 300 | 0;
 i15 = i24 + 296 | 0;
 i16 = i24;
 i17 = i24 + 292 | 0;
 i18 = i24 + 288 | 0;
 i19 = i24 + 333 | 0;
 i11 = i24 + 332 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i23, i2, i12, i13, i14);
 HEAP32[i22 >> 2] = 0;
 HEAP32[i22 + 4 >> 2] = 0;
 HEAP32[i22 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i22 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i22 + 11 | 0;
 i10 = i22 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i22 >> 2] | 0 : i22;
 HEAP32[i15 >> 2] = i1;
 HEAP32[i17 >> 2] = i16;
 HEAP32[i18 >> 2] = 0;
 HEAP8[i19 >> 0] = 1;
 HEAP8[i11 >> 0] = 69;
 i8 = i22 + 4 | 0;
 i4 = HEAP32[i25 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i25 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i26 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i26 >> 2] = 0;
    i28 = 19;
    break;
   }
  } else i28 = 19; while (0);
  if ((i28 | 0) == 19) {
   i28 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i15 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i22 >> 2] | 0 : i22;
   HEAP32[i15 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i2, i19, i11, i1, i15, HEAP32[i13 >> 2] | 0, HEAP32[i14 >> 2] | 0, i23, i16, i17, i18, i12) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  }
  i3 = i7;
 }
 i14 = HEAP8[i23 + 11 >> 0] | 0;
 if (!((HEAP8[i19 >> 0] | 0) == 0 ? 1 : ((i14 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i14 & 255) | 0) == 0) ? (i20 = HEAP32[i17 >> 2] | 0, (i20 - i16 | 0) < 160) : 0) {
  i19 = HEAP32[i18 >> 2] | 0;
  HEAP32[i17 >> 2] = i20 + 4;
  HEAP32[i20 >> 2] = i19;
 }
 d29 = +__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj(i1, HEAP32[i15 >> 2] | 0, i27);
 HEAPF64[i21 >> 3] = d29;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i16, HEAP32[i17 >> 2] | 0, i27);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i25 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break; else {
   i28 = 50;
   break;
  } else {
   HEAP32[i26 >> 2] = 0;
   i28 = 48;
   break;
  }
 } else i28 = 48; while (0);
 if ((i28 | 0) == 48 ? i2 : 0) i28 = 50;
 if ((i28 | 0) == 50) HEAP32[i27 >> 2] = HEAP32[i27 >> 2] | 2;
 i28 = HEAP32[i25 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i22);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i24;
 return i28 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i25, i26, i2, i27, i21) {
 i1 = i1 | 0;
 i25 = i25 | 0;
 i26 = i26 | 0;
 i2 = i2 | 0;
 i27 = i27 | 0;
 i21 = i21 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i24 = 0, i28 = 0, d29 = 0.0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 i12 = i24 + 160 | 0;
 i13 = i24 + 328 | 0;
 i14 = i24 + 324 | 0;
 i23 = i24 + 312 | 0;
 i22 = i24 + 300 | 0;
 i15 = i24 + 296 | 0;
 i16 = i24;
 i17 = i24 + 292 | 0;
 i18 = i24 + 288 | 0;
 i19 = i24 + 333 | 0;
 i11 = i24 + 332 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i23, i2, i12, i13, i14);
 HEAP32[i22 >> 2] = 0;
 HEAP32[i22 + 4 >> 2] = 0;
 HEAP32[i22 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i22 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i22 + 11 | 0;
 i10 = i22 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i22 >> 2] | 0 : i22;
 HEAP32[i15 >> 2] = i1;
 HEAP32[i17 >> 2] = i16;
 HEAP32[i18 >> 2] = 0;
 HEAP8[i19 >> 0] = 1;
 HEAP8[i11 >> 0] = 69;
 i8 = i22 + 4 | 0;
 i4 = HEAP32[i25 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i25 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i26 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i26 >> 2] = 0;
    i28 = 19;
    break;
   }
  } else i28 = 19; while (0);
  if ((i28 | 0) == 19) {
   i28 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i15 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i22 >> 2] | 0 : i22;
   HEAP32[i15 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i2, i19, i11, i1, i15, HEAP32[i13 >> 2] | 0, HEAP32[i14 >> 2] | 0, i23, i16, i17, i18, i12) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  }
  i3 = i7;
 }
 i14 = HEAP8[i23 + 11 >> 0] | 0;
 if (!((HEAP8[i19 >> 0] | 0) == 0 ? 1 : ((i14 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i14 & 255) | 0) == 0) ? (i20 = HEAP32[i17 >> 2] | 0, (i20 - i16 | 0) < 160) : 0) {
  i19 = HEAP32[i18 >> 2] | 0;
  HEAP32[i17 >> 2] = i20 + 4;
  HEAP32[i20 >> 2] = i19;
 }
 d29 = +__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj(i1, HEAP32[i15 >> 2] | 0, i27);
 HEAPF64[i21 >> 3] = d29;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i16, HEAP32[i17 >> 2] | 0, i27);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i25 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break; else {
   i28 = 50;
   break;
  } else {
   HEAP32[i26 >> 2] = 0;
   i28 = 48;
   break;
  }
 } else i28 = 48; while (0);
 if ((i28 | 0) == 48 ? i2 : 0) i28 = 50;
 if ((i28 | 0) == 50) HEAP32[i27 >> 2] = HEAP32[i27 >> 2] | 2;
 i28 = HEAP32[i25 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i22);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i24;
 return i28 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i25, i26, i2, i27, i21) {
 i1 = i1 | 0;
 i25 = i25 | 0;
 i26 = i26 | 0;
 i2 = i2 | 0;
 i27 = i27 | 0;
 i21 = i21 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i24 = 0, i28 = 0, d29 = 0.0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i12 = i24 + 160 | 0;
 i13 = i24 + 231 | 0;
 i14 = i24 + 230 | 0;
 i23 = i24 + 216 | 0;
 i22 = i24 + 204 | 0;
 i15 = i24 + 200 | 0;
 i16 = i24;
 i17 = i24 + 196 | 0;
 i18 = i24 + 192 | 0;
 i19 = i24 + 229 | 0;
 i11 = i24 + 228 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i23, i2, i12, i13, i14);
 HEAP32[i22 >> 2] = 0;
 HEAP32[i22 + 4 >> 2] = 0;
 HEAP32[i22 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i22 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i22 + 11 | 0;
 i10 = i22 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i22 >> 2] | 0 : i22;
 HEAP32[i15 >> 2] = i1;
 HEAP32[i17 >> 2] = i16;
 HEAP32[i18 >> 2] = 0;
 HEAP8[i19 >> 0] = 1;
 HEAP8[i11 >> 0] = 69;
 i8 = i22 + 4 | 0;
 i4 = HEAP32[i25 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i25 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i26 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i26 >> 2] = 0;
    i28 = 19;
    break;
   }
  } else i28 = 19; while (0);
  if ((i28 | 0) == 19) {
   i28 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i15 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i22 >> 2] | 0 : i22;
   HEAP32[i15 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i2 & 255, i19, i11, i1, i15, HEAP8[i13 >> 0] | 0, HEAP8[i14 >> 0] | 0, i23, i16, i17, i18, i12) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  }
  i3 = i7;
 }
 i14 = HEAP8[i23 + 11 >> 0] | 0;
 if (!((HEAP8[i19 >> 0] | 0) == 0 ? 1 : ((i14 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i14 & 255) | 0) == 0) ? (i20 = HEAP32[i17 >> 2] | 0, (i20 - i16 | 0) < 160) : 0) {
  i19 = HEAP32[i18 >> 2] | 0;
  HEAP32[i17 >> 2] = i20 + 4;
  HEAP32[i20 >> 2] = i19;
 }
 d29 = +__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj(i1, HEAP32[i15 >> 2] | 0, i27);
 HEAPF32[i21 >> 2] = d29;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i16, HEAP32[i17 >> 2] | 0, i27);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i25 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break; else {
   i28 = 50;
   break;
  } else {
   HEAP32[i26 >> 2] = 0;
   i28 = 48;
   break;
  }
 } else i28 = 48; while (0);
 if ((i28 | 0) == 48 ? i2 : 0) i28 = 50;
 if ((i28 | 0) == 50) HEAP32[i27 >> 2] = HEAP32[i27 >> 2] | 2;
 i28 = HEAP32[i25 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i22);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i24;
 return i28 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i25, i26, i2, i27, i21) {
 i1 = i1 | 0;
 i25 = i25 | 0;
 i26 = i26 | 0;
 i2 = i2 | 0;
 i27 = i27 | 0;
 i21 = i21 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i24 = 0, i28 = 0, d29 = 0.0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i12 = i24 + 160 | 0;
 i13 = i24 + 231 | 0;
 i14 = i24 + 230 | 0;
 i23 = i24 + 216 | 0;
 i22 = i24 + 204 | 0;
 i15 = i24 + 200 | 0;
 i16 = i24;
 i17 = i24 + 196 | 0;
 i18 = i24 + 192 | 0;
 i19 = i24 + 229 | 0;
 i11 = i24 + 228 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i23, i2, i12, i13, i14);
 HEAP32[i22 >> 2] = 0;
 HEAP32[i22 + 4 >> 2] = 0;
 HEAP32[i22 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i22 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i22 + 11 | 0;
 i10 = i22 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i22 >> 2] | 0 : i22;
 HEAP32[i15 >> 2] = i1;
 HEAP32[i17 >> 2] = i16;
 HEAP32[i18 >> 2] = 0;
 HEAP8[i19 >> 0] = 1;
 HEAP8[i11 >> 0] = 69;
 i8 = i22 + 4 | 0;
 i4 = HEAP32[i25 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i25 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i26 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i26 >> 2] = 0;
    i28 = 19;
    break;
   }
  } else i28 = 19; while (0);
  if ((i28 | 0) == 19) {
   i28 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i15 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i22 >> 2] | 0 : i22;
   HEAP32[i15 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i2 & 255, i19, i11, i1, i15, HEAP8[i13 >> 0] | 0, HEAP8[i14 >> 0] | 0, i23, i16, i17, i18, i12) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  }
  i3 = i7;
 }
 i14 = HEAP8[i23 + 11 >> 0] | 0;
 if (!((HEAP8[i19 >> 0] | 0) == 0 ? 1 : ((i14 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i14 & 255) | 0) == 0) ? (i20 = HEAP32[i17 >> 2] | 0, (i20 - i16 | 0) < 160) : 0) {
  i19 = HEAP32[i18 >> 2] | 0;
  HEAP32[i17 >> 2] = i20 + 4;
  HEAP32[i20 >> 2] = i19;
 }
 d29 = +__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj(i1, HEAP32[i15 >> 2] | 0, i27);
 HEAPF64[i21 >> 3] = d29;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i16, HEAP32[i17 >> 2] | 0, i27);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i25 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break; else {
   i28 = 50;
   break;
  } else {
   HEAP32[i26 >> 2] = 0;
   i28 = 48;
   break;
  }
 } else i28 = 48; while (0);
 if ((i28 | 0) == 48 ? i2 : 0) i28 = 50;
 if ((i28 | 0) == 50) HEAP32[i27 >> 2] = HEAP32[i27 >> 2] | 2;
 i28 = HEAP32[i25 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i22);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i24;
 return i28 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i25, i26, i2, i27, i21) {
 i1 = i1 | 0;
 i25 = i25 | 0;
 i26 = i26 | 0;
 i2 = i2 | 0;
 i27 = i27 | 0;
 i21 = i21 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i24 = 0, i28 = 0, d29 = 0.0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i12 = i24 + 160 | 0;
 i13 = i24 + 231 | 0;
 i14 = i24 + 230 | 0;
 i23 = i24 + 216 | 0;
 i22 = i24 + 204 | 0;
 i15 = i24 + 200 | 0;
 i16 = i24;
 i17 = i24 + 196 | 0;
 i18 = i24 + 192 | 0;
 i19 = i24 + 229 | 0;
 i11 = i24 + 228 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i23, i2, i12, i13, i14);
 HEAP32[i22 >> 2] = 0;
 HEAP32[i22 + 4 >> 2] = 0;
 HEAP32[i22 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i22 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i22 + 11 | 0;
 i10 = i22 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i22 >> 2] | 0 : i22;
 HEAP32[i15 >> 2] = i1;
 HEAP32[i17 >> 2] = i16;
 HEAP32[i18 >> 2] = 0;
 HEAP8[i19 >> 0] = 1;
 HEAP8[i11 >> 0] = 69;
 i8 = i22 + 4 | 0;
 i4 = HEAP32[i25 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i25 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i26 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i26 >> 2] = 0;
    i28 = 19;
    break;
   }
  } else i28 = 19; while (0);
  if ((i28 | 0) == 19) {
   i28 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i15 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i22, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i22 >> 2] | 0 : i22;
   HEAP32[i15 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i2 & 255, i19, i11, i1, i15, HEAP8[i13 >> 0] | 0, HEAP8[i14 >> 0] | 0, i23, i16, i17, i18, i12) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  }
  i3 = i7;
 }
 i14 = HEAP8[i23 + 11 >> 0] | 0;
 if (!((HEAP8[i19 >> 0] | 0) == 0 ? 1 : ((i14 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i14 & 255) | 0) == 0) ? (i20 = HEAP32[i17 >> 2] | 0, (i20 - i16 | 0) < 160) : 0) {
  i19 = HEAP32[i18 >> 2] | 0;
  HEAP32[i17 >> 2] = i20 + 4;
  HEAP32[i20 >> 2] = i19;
 }
 d29 = +__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj(i1, HEAP32[i15 >> 2] | 0, i27);
 HEAPF64[i21 >> 3] = d29;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i16, HEAP32[i17 >> 2] | 0, i27);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i25 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break; else {
   i28 = 50;
   break;
  } else {
   HEAP32[i26 >> 2] = 0;
   i28 = 48;
   break;
  }
 } else i28 = 48; while (0);
 if ((i28 | 0) == 48 ? i2 : 0) i28 = 50;
 if ((i28 | 0) == 50) HEAP32[i27 >> 2] = HEAP32[i27 >> 2] | 2;
 i28 = HEAP32[i25 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i22);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i24;
 return i28 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i19) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 i12 = i26 + 300 | 0;
 i23 = i26 + 288 | 0;
 i24 = i26 + 276 | 0;
 i13 = i26 + 272 | 0;
 i14 = i26;
 i16 = i26 + 268 | 0;
 i17 = i26 + 264 | 0;
 i18 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 i11 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw(i1, i2, i26 + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw(i23, i2, i12);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 i10 = i24 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
 HEAP32[i13 >> 2] = i1;
 HEAP32[i16 >> 2] = i14;
 HEAP32[i17 >> 2] = 0;
 i8 = i24 + 4 | 0;
 i4 = HEAP32[i20 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i20 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i21 >> 2] = 0;
    i25 = 19;
    break;
   }
  } else i25 = 19; while (0);
  if ((i25 | 0) == 19) {
   i25 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i13 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
   HEAP32[i13 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i2, i18, i1, i13, i17, HEAP32[i12 >> 2] | 0, i23, i14, i16, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  }
  i3 = i7;
 }
 i12 = HEAP8[i23 + 11 >> 0] | 0;
 if ((i12 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i12 & 255) | 0 ? (i15 = HEAP32[i16 >> 2] | 0, (i15 - i14 | 0) < 160) : 0) {
  i17 = HEAP32[i17 >> 2] | 0;
  HEAP32[i16 >> 2] = i15 + 4;
  HEAP32[i15 >> 2] = i17;
 }
 i17 = __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji(i1, HEAP32[i13 >> 2] | 0, i22, i18) | 0;
 i18 = getTempRet0() | 0;
 HEAP32[i19 >> 2] = i17;
 HEAP32[i19 + 4 >> 2] = i18;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i14, HEAP32[i16 >> 2] | 0, i22);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i20 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break; else {
   i25 = 50;
   break;
  } else {
   HEAP32[i21 >> 2] = 0;
   i25 = 48;
   break;
  }
 } else i25 = 48; while (0);
 if ((i25 | 0) == 48 ? i2 : 0) i25 = 50;
 if ((i25 | 0) == 50) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i25 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i26;
 return i25 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i19) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i12 = i26 + 224 | 0;
 i23 = i26 + 212 | 0;
 i24 = i26 + 200 | 0;
 i13 = i26 + 196 | 0;
 i14 = i26;
 i16 = i26 + 192 | 0;
 i17 = i26 + 188 | 0;
 i18 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 i11 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc(i1, i2, i26 + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc(i23, i2, i12);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 i10 = i24 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
 HEAP32[i13 >> 2] = i1;
 HEAP32[i16 >> 2] = i14;
 HEAP32[i17 >> 2] = 0;
 i8 = i24 + 4 | 0;
 i4 = HEAP32[i20 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i20 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i21 >> 2] = 0;
    i25 = 19;
    break;
   }
  } else i25 = 19; while (0);
  if ((i25 | 0) == 19) {
   i25 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i13 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
   HEAP32[i13 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i2 & 255, i18, i1, i13, i17, HEAP8[i12 >> 0] | 0, i23, i14, i16, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  }
  i3 = i7;
 }
 i12 = HEAP8[i23 + 11 >> 0] | 0;
 if ((i12 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i12 & 255) | 0 ? (i15 = HEAP32[i16 >> 2] | 0, (i15 - i14 | 0) < 160) : 0) {
  i17 = HEAP32[i17 >> 2] | 0;
  HEAP32[i16 >> 2] = i15 + 4;
  HEAP32[i15 >> 2] = i17;
 }
 i17 = __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji(i1, HEAP32[i13 >> 2] | 0, i22, i18) | 0;
 i18 = getTempRet0() | 0;
 HEAP32[i19 >> 2] = i17;
 HEAP32[i19 + 4 >> 2] = i18;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i14, HEAP32[i16 >> 2] | 0, i22);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i20 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break; else {
   i25 = 50;
   break;
  } else {
   HEAP32[i21 >> 2] = 0;
   i25 = 48;
   break;
  }
 } else i25 = 48; while (0);
 if ((i25 | 0) == 48 ? i2 : 0) i25 = 50;
 if ((i25 | 0) == 50) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i25 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i26;
 return i25 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i19) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 i12 = i26 + 300 | 0;
 i23 = i26 + 288 | 0;
 i24 = i26 + 276 | 0;
 i13 = i26 + 272 | 0;
 i14 = i26;
 i16 = i26 + 268 | 0;
 i17 = i26 + 264 | 0;
 i18 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 i11 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw(i1, i2, i26 + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw(i23, i2, i12);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 i10 = i24 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
 HEAP32[i13 >> 2] = i1;
 HEAP32[i16 >> 2] = i14;
 HEAP32[i17 >> 2] = 0;
 i8 = i24 + 4 | 0;
 i4 = HEAP32[i20 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i20 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i21 >> 2] = 0;
    i25 = 19;
    break;
   }
  } else i25 = 19; while (0);
  if ((i25 | 0) == 19) {
   i25 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i13 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
   HEAP32[i13 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i2, i18, i1, i13, i17, HEAP32[i12 >> 2] | 0, i23, i14, i16, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  }
  i3 = i7;
 }
 i12 = HEAP8[i23 + 11 >> 0] | 0;
 if ((i12 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i12 & 255) | 0 ? (i15 = HEAP32[i16 >> 2] | 0, (i15 - i14 | 0) < 160) : 0) {
  i17 = HEAP32[i17 >> 2] | 0;
  HEAP32[i16 >> 2] = i15 + 4;
  HEAP32[i15 >> 2] = i17;
 }
 i17 = __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji(i1, HEAP32[i13 >> 2] | 0, i22, i18) | 0;
 i18 = getTempRet0() | 0;
 HEAP32[i19 >> 2] = i17;
 HEAP32[i19 + 4 >> 2] = i18;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i14, HEAP32[i16 >> 2] | 0, i22);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i20 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break; else {
   i25 = 50;
   break;
  } else {
   HEAP32[i21 >> 2] = 0;
   i25 = 48;
   break;
  }
 } else i25 = 48; while (0);
 if ((i25 | 0) == 48 ? i2 : 0) i25 = 50;
 if ((i25 | 0) == 50) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i25 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i26;
 return i25 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i19) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i12 = i26 + 224 | 0;
 i23 = i26 + 212 | 0;
 i24 = i26 + 200 | 0;
 i13 = i26 + 196 | 0;
 i14 = i26;
 i16 = i26 + 192 | 0;
 i17 = i26 + 188 | 0;
 i18 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 i11 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc(i1, i2, i26 + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc(i23, i2, i12);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 i10 = i24 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
 HEAP32[i13 >> 2] = i1;
 HEAP32[i16 >> 2] = i14;
 HEAP32[i17 >> 2] = 0;
 i8 = i24 + 4 | 0;
 i4 = HEAP32[i20 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i20 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i21 >> 2] = 0;
    i25 = 19;
    break;
   }
  } else i25 = 19; while (0);
  if ((i25 | 0) == 19) {
   i25 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i13 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
   HEAP32[i13 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i2 & 255, i18, i1, i13, i17, HEAP8[i12 >> 0] | 0, i23, i14, i16, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  }
  i3 = i7;
 }
 i12 = HEAP8[i23 + 11 >> 0] | 0;
 if ((i12 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i12 & 255) | 0 ? (i15 = HEAP32[i16 >> 2] | 0, (i15 - i14 | 0) < 160) : 0) {
  i17 = HEAP32[i17 >> 2] | 0;
  HEAP32[i16 >> 2] = i15 + 4;
  HEAP32[i15 >> 2] = i17;
 }
 i17 = __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji(i1, HEAP32[i13 >> 2] | 0, i22, i18) | 0;
 i18 = getTempRet0() | 0;
 HEAP32[i19 >> 2] = i17;
 HEAP32[i19 + 4 >> 2] = i18;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i14, HEAP32[i16 >> 2] | 0, i22);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i20 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break; else {
   i25 = 50;
   break;
  } else {
   HEAP32[i21 >> 2] = 0;
   i25 = 48;
   break;
  }
 } else i25 = 48; while (0);
 if ((i25 | 0) == 48 ? i2 : 0) i25 = 50;
 if ((i25 | 0) == 50) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i25 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i26;
 return i25 | 0;
}

function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i15, i16, i1, i17, i13, i18, i14) {
 i15 = i15 | 0;
 i16 = i16 | 0;
 i1 = i1 | 0;
 i17 = i17 | 0;
 i13 = i13 | 0;
 i18 = i18 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i19 = 0, i20 = 0, i21 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i3 = i21;
 i4 = (i17 - i1 | 0) / 12 | 0;
 if (i4 >>> 0 > 100) {
  i3 = _malloc(i4) | 0;
  if (!i3) __ZSt17__throw_bad_allocv(); else {
   i2 = i3;
   i19 = i3;
  }
 } else {
  i2 = i3;
  i19 = 0;
 }
 i6 = i1;
 i7 = i2;
 i3 = 0;
 while (1) {
  if ((i6 | 0) == (i17 | 0)) break;
  i5 = HEAP8[i6 + 11 >> 0] | 0;
  if (i5 << 24 >> 24 < 0) i5 = HEAP32[i6 + 4 >> 2] | 0; else i5 = i5 & 255;
  if (!i5) {
   HEAP8[i7 >> 0] = 2;
   i4 = i4 + -1 | 0;
   i3 = i3 + 1 | 0;
  } else HEAP8[i7 >> 0] = 1;
  i6 = i6 + 12 | 0;
  i7 = i7 + 1 | 0;
 }
 i12 = 0;
 i10 = i3;
 while (1) {
  i3 = HEAP32[i15 >> 2] | 0;
  do if (i3) {
   i5 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i3 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i5 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i3, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i15 >> 2] = 0;
    i7 = 1;
    break;
   } else {
    i7 = (HEAP32[i15 >> 2] | 0) == 0;
    break;
   }
  } else i7 = 1; while (0);
  i5 = HEAP32[i16 >> 2] | 0;
  if (i5) {
   i3 = HEAP32[i5 + 12 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i3 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i3, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i16 >> 2] = 0;
    i3 = 1;
    i5 = 0;
   } else i3 = 0;
  } else {
   i3 = 1;
   i5 = 0;
  }
  i6 = HEAP32[i15 >> 2] | 0;
  if (!((i4 | 0) != 0 & (i7 ^ i3))) break;
  i3 = HEAP32[i6 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i3 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
  i3 = i3 & 255;
  if (!i14) i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 12 >> 2] & 63](i13, i3) | 0;
  i11 = i12 + 1 | 0;
  i8 = i1;
  i7 = 0;
  i9 = i2;
  while (1) {
   if ((i8 | 0) == (i17 | 0)) break;
   do if ((HEAP8[i9 >> 0] | 0) == 1) {
    i6 = i8 + 11 | 0;
    if ((HEAP8[i6 >> 0] | 0) < 0) i5 = HEAP32[i8 >> 2] | 0; else i5 = i8;
    i5 = HEAP8[i5 + i12 >> 0] | 0;
    if (!i14) i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 12 >> 2] & 63](i13, i5) | 0;
    if (i3 << 24 >> 24 != i5 << 24 >> 24) {
     HEAP8[i9 >> 0] = 0;
     i5 = i7;
     i6 = i10;
     i4 = i4 + -1 | 0;
     break;
    }
    i5 = HEAP8[i6 >> 0] | 0;
    if (i5 << 24 >> 24 < 0) i5 = HEAP32[i8 + 4 >> 2] | 0; else i5 = i5 & 255;
    if ((i5 | 0) == (i11 | 0)) {
     HEAP8[i9 >> 0] = 2;
     i5 = 1;
     i6 = i10 + 1 | 0;
     i4 = i4 + -1 | 0;
    } else {
     i5 = 1;
     i6 = i10;
    }
   } else {
    i5 = i7;
    i6 = i10;
   } while (0);
   i8 = i8 + 12 | 0;
   i7 = i5;
   i9 = i9 + 1 | 0;
   i10 = i6;
  }
  L67 : do if (i7) {
   i3 = HEAP32[i15 >> 2] | 0;
   i5 = i3 + 12 | 0;
   i6 = HEAP32[i5 >> 2] | 0;
   if ((i6 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0; else {
    HEAP32[i5 >> 2] = i6 + 1;
    __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i6 >> 0] | 0) | 0;
   }
   if ((i10 + i4 | 0) >>> 0 > 1) {
    i6 = i1;
    i7 = i2;
    i3 = i10;
    while (1) {
     if ((i6 | 0) == (i17 | 0)) break L67;
     if ((HEAP8[i7 >> 0] | 0) == 2) {
      i5 = HEAP8[i6 + 11 >> 0] | 0;
      if (i5 << 24 >> 24 < 0) i5 = HEAP32[i6 + 4 >> 2] | 0; else i5 = i5 & 255;
      if ((i5 | 0) != (i11 | 0)) {
       HEAP8[i7 >> 0] = 0;
       i3 = i3 + -1 | 0;
      }
     }
     i6 = i6 + 12 | 0;
     i7 = i7 + 1 | 0;
    }
   } else i3 = i10;
  } else i3 = i10; while (0);
  i12 = i11;
  i10 = i3;
 }
 do if (i6) {
  i3 = HEAP32[i6 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i3 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i3, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i15 >> 2] = 0;
   i4 = 1;
   break;
  } else {
   i4 = (HEAP32[i15 >> 2] | 0) == 0;
   break;
  }
 } else i4 = 1; while (0);
 do if (i5) {
  i3 = HEAP32[i5 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i3 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i3, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i4) break; else {
   i20 = 79;
   break;
  } else {
   HEAP32[i16 >> 2] = 0;
   i20 = 41;
   break;
  }
 } else i20 = 41; while (0);
 if ((i20 | 0) == 41 ? i4 : 0) i20 = 79;
 if ((i20 | 0) == 79) HEAP32[i18 >> 2] = HEAP32[i18 >> 2] | 2;
 while (1) {
  if ((i1 | 0) == (i17 | 0)) {
   i20 = 84;
   break;
  }
  if ((HEAP8[i2 >> 0] | 0) == 2) break;
  i1 = i1 + 12 | 0;
  i2 = i2 + 1 | 0;
 }
 if ((i20 | 0) == 84) {
  HEAP32[i18 >> 2] = HEAP32[i18 >> 2] | 4;
  i1 = i17;
 }
 _free(i19);
 STACKTOP = i21;
 return i1 | 0;
}

function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i15, i16, i1, i17, i13, i18, i14) {
 i15 = i15 | 0;
 i16 = i16 | 0;
 i1 = i1 | 0;
 i17 = i17 | 0;
 i13 = i13 | 0;
 i18 = i18 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i19 = 0, i20 = 0, i21 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i3 = i21;
 i4 = (i17 - i1 | 0) / 12 | 0;
 if (i4 >>> 0 > 100) {
  i3 = _malloc(i4) | 0;
  if (!i3) __ZSt17__throw_bad_allocv(); else {
   i2 = i3;
   i19 = i3;
  }
 } else {
  i2 = i3;
  i19 = 0;
 }
 i3 = 0;
 i6 = i1;
 i7 = i2;
 while (1) {
  if ((i6 | 0) == (i17 | 0)) break;
  i5 = HEAP8[i6 + 8 + 3 >> 0] | 0;
  if (i5 << 24 >> 24 < 0) i5 = HEAP32[i6 + 4 >> 2] | 0; else i5 = i5 & 255;
  if (!i5) {
   HEAP8[i7 >> 0] = 2;
   i3 = i3 + 1 | 0;
   i4 = i4 + -1 | 0;
  } else HEAP8[i7 >> 0] = 1;
  i6 = i6 + 12 | 0;
  i7 = i7 + 1 | 0;
 }
 i12 = 0;
 i10 = i3;
 while (1) {
  i3 = HEAP32[i15 >> 2] | 0;
  do if (i3) {
   i5 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i3 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i5 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i3, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i15 >> 2] = 0;
    i7 = 1;
    break;
   } else {
    i7 = (HEAP32[i15 >> 2] | 0) == 0;
    break;
   }
  } else i7 = 1; while (0);
  i5 = HEAP32[i16 >> 2] | 0;
  if (i5) {
   i3 = HEAP32[i5 + 12 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i3 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i3, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i16 >> 2] = 0;
    i3 = 1;
    i5 = 0;
   } else i3 = 0;
  } else {
   i3 = 1;
   i5 = 0;
  }
  i6 = HEAP32[i15 >> 2] | 0;
  if (!((i4 | 0) != 0 & (i7 ^ i3))) break;
  i3 = HEAP32[i6 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i3 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
  if (!i14) i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, i3) | 0;
  i11 = i12 + 1 | 0;
  i8 = i1;
  i7 = 0;
  i9 = i2;
  while (1) {
   if ((i8 | 0) == (i17 | 0)) break;
   do if ((HEAP8[i9 >> 0] | 0) == 1) {
    i6 = i8 + 8 + 3 | 0;
    if ((HEAP8[i6 >> 0] | 0) < 0) i5 = HEAP32[i8 >> 2] | 0; else i5 = i8;
    i5 = HEAP32[i5 + (i12 << 2) >> 2] | 0;
    if (!i14) i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, i5) | 0;
    if ((i3 | 0) != (i5 | 0)) {
     HEAP8[i9 >> 0] = 0;
     i5 = i7;
     i6 = i10;
     i4 = i4 + -1 | 0;
     break;
    }
    i5 = HEAP8[i6 >> 0] | 0;
    if (i5 << 24 >> 24 < 0) i5 = HEAP32[i8 + 4 >> 2] | 0; else i5 = i5 & 255;
    if ((i5 | 0) == (i11 | 0)) {
     HEAP8[i9 >> 0] = 2;
     i5 = 1;
     i6 = i10 + 1 | 0;
     i4 = i4 + -1 | 0;
    } else {
     i5 = 1;
     i6 = i10;
    }
   } else {
    i5 = i7;
    i6 = i10;
   } while (0);
   i8 = i8 + 12 | 0;
   i7 = i5;
   i9 = i9 + 1 | 0;
   i10 = i6;
  }
  L67 : do if (i7) {
   i3 = HEAP32[i15 >> 2] | 0;
   i5 = i3 + 12 | 0;
   i6 = HEAP32[i5 >> 2] | 0;
   if ((i6 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0; else {
    HEAP32[i5 >> 2] = i6 + 4;
    __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i6 >> 2] | 0) | 0;
   }
   if ((i10 + i4 | 0) >>> 0 > 1) {
    i6 = i1;
    i7 = i2;
    i3 = i10;
    while (1) {
     if ((i6 | 0) == (i17 | 0)) break L67;
     if ((HEAP8[i7 >> 0] | 0) == 2) {
      i5 = HEAP8[i6 + 8 + 3 >> 0] | 0;
      if (i5 << 24 >> 24 < 0) i5 = HEAP32[i6 + 4 >> 2] | 0; else i5 = i5 & 255;
      if ((i5 | 0) != (i11 | 0)) {
       HEAP8[i7 >> 0] = 0;
       i3 = i3 + -1 | 0;
      }
     }
     i6 = i6 + 12 | 0;
     i7 = i7 + 1 | 0;
    }
   } else i3 = i10;
  } else i3 = i10; while (0);
  i12 = i11;
  i10 = i3;
 }
 do if (i6) {
  i3 = HEAP32[i6 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i3 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i3, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i15 >> 2] = 0;
   i4 = 1;
   break;
  } else {
   i4 = (HEAP32[i15 >> 2] | 0) == 0;
   break;
  }
 } else i4 = 1; while (0);
 do if (i5) {
  i3 = HEAP32[i5 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i3 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i3, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i4) break; else {
   i20 = 79;
   break;
  } else {
   HEAP32[i16 >> 2] = 0;
   i20 = 41;
   break;
  }
 } else i20 = 41; while (0);
 if ((i20 | 0) == 41 ? i4 : 0) i20 = 79;
 if ((i20 | 0) == 79) HEAP32[i18 >> 2] = HEAP32[i18 >> 2] | 2;
 while (1) {
  if ((i1 | 0) == (i17 | 0)) {
   i20 = 84;
   break;
  }
  if ((HEAP8[i2 >> 0] | 0) == 2) break;
  i1 = i1 + 12 | 0;
  i2 = i2 + 1 | 0;
 }
 if ((i20 | 0) == 84) {
  HEAP32[i18 >> 2] = HEAP32[i18 >> 2] | 4;
  i1 = i17;
 }
 _free(i19);
 STACKTOP = i21;
 return i1 | 0;
}

function _decode_mcu_AC_refine(i9, i1) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i29 = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 i22 = i29 + 256 | 0;
 i21 = i29;
 i28 = HEAP32[i9 + 444 >> 2] | 0;
 i19 = HEAP32[i9 + 404 >> 2] | 0;
 i16 = HEAP32[i9 + 412 >> 2] | 0;
 i15 = 1 << i16;
 i16 = -1 << i16;
 if (((HEAP32[i9 + 276 >> 2] | 0) != 0 ? (HEAP32[i28 + 40 >> 2] | 0) == 0 : 0) ? (_process_restart_49(i9) | 0) == 0 : 0) i1 = 0; else i14 = 4;
 L4 : do if ((i14 | 0) == 4) {
  do if (!(HEAP32[i28 + 8 >> 2] | 0)) {
   HEAP32[i22 + 16 >> 2] = i9;
   i23 = i9 + 24 | 0;
   i25 = HEAP32[i23 >> 2] | 0;
   HEAP32[i22 >> 2] = HEAP32[i25 >> 2];
   i24 = i22 + 4 | 0;
   HEAP32[i24 >> 2] = HEAP32[i25 + 4 >> 2];
   i25 = i28 + 12 | 0;
   i4 = HEAP32[i25 >> 2] | 0;
   i26 = i28 + 16 | 0;
   i2 = HEAP32[i26 >> 2] | 0;
   i27 = i28 + 20 | 0;
   i3 = HEAP32[i27 >> 2] | 0;
   i20 = HEAP32[i1 >> 2] | 0;
   i8 = HEAP32[i28 + 60 >> 2] | 0;
   i5 = HEAP32[i9 + 400 >> 2] | 0;
   i12 = i22 + 8 | 0;
   i13 = i22 + 12 | 0;
   L8 : do if (!i3) {
    i1 = 0;
    L10 : while (1) {
     if ((i5 | 0) > (i19 | 0)) {
      i3 = 0;
      i1 = i4;
      i14 = 56;
      break L8;
     }
     if ((i2 | 0) < 8) {
      if (!(_jpeg_fill_bit_buffer(i22, i4, i2, 0) | 0)) break L8;
      i4 = HEAP32[i12 >> 2] | 0;
      i2 = HEAP32[i13 >> 2] | 0;
      if ((i2 | 0) < 8) {
       i3 = 1;
       i14 = 13;
      } else i14 = 11;
     } else i14 = 11;
     if ((i14 | 0) == 11) {
      i14 = 0;
      i3 = i4 >> i2 + -8 & 255;
      i6 = HEAP32[i8 + 144 + (i3 << 2) >> 2] | 0;
      if (!i6) {
       i3 = 9;
       i14 = 13;
      } else {
       i3 = HEAPU8[i8 + 1168 + i3 >> 0] | 0;
       i2 = i2 - i6 | 0;
      }
     }
     if ((i14 | 0) == 13) {
      i14 = 0;
      i2 = _jpeg_huff_decode(i22, i4, i2, i8, i3) | 0;
      if ((i2 | 0) < 0) break L8;
      i3 = i2;
      i2 = HEAP32[i13 >> 2] | 0;
      i4 = HEAP32[i12 >> 2] | 0;
     }
     i6 = i3 >>> 4;
     switch (i3 & 15) {
     case 0:
      {
       if ((i6 | 0) == 15) i7 = 0; else break L10;
       break;
      }
     case 1:
      {
       i14 = 17;
       break;
      }
     default:
      {
       i14 = HEAP32[i9 >> 2] | 0;
       HEAP32[i14 + 20 >> 2] = 118;
       FUNCTION_TABLE_vii[HEAP32[i14 + 4 >> 2] & 63](i9, -1);
       i14 = 17;
      }
     }
     if ((i14 | 0) == 17) {
      i14 = 0;
      if ((i2 | 0) < 1) {
       if (!(_jpeg_fill_bit_buffer(i22, i4, i2, 1) | 0)) break L8;
       i2 = HEAP32[i13 >> 2] | 0;
       i4 = HEAP32[i12 >> 2] | 0;
      }
      i2 = i2 + -1 | 0;
      i7 = (1 << i2 & i4 | 0) == 0 ? i16 : i15;
     }
     i3 = i6;
     L33 : while (1) {
      i6 = i20 + (HEAP32[2560 + (i5 << 2) >> 2] << 1) | 0;
      do if (!(HEAP16[i6 >> 1] | 0)) if ((i3 | 0) < 1) break L33; else i3 = i3 + -1 | 0; else {
       if ((i2 | 0) < 1) {
        if (!(_jpeg_fill_bit_buffer(i22, i4, i2, 1) | 0)) break L8;
        i2 = HEAP32[i13 >> 2] | 0;
        i4 = HEAP32[i12 >> 2] | 0;
       }
       i2 = i2 + -1 | 0;
       if ((1 << i2 & i4 | 0) != 0 ? (i10 = HEAP16[i6 >> 1] | 0, i11 = i10 << 16 >> 16, (i15 & i11 | 0) == 0) : 0) if (i10 << 16 >> 16 > -1) {
        HEAP16[i6 >> 1] = i15 + i11;
        break;
       } else {
        HEAP16[i6 >> 1] = i16 + i11;
        break;
       }
      } while (0);
      i6 = i5 + 1 | 0;
      if ((i5 | 0) < (i19 | 0)) i5 = i6; else {
       i5 = i6;
       break;
      }
     }
     if (i7) {
      i6 = HEAP32[2560 + (i5 << 2) >> 2] | 0;
      HEAP16[i20 + (i6 << 1) >> 1] = i7;
      HEAP32[i21 + (i1 << 2) >> 2] = i6;
      i1 = i1 + 1 | 0;
     }
     i5 = i5 + 1 | 0;
    }
    i3 = 1 << i6;
    if (i6) {
     if ((i2 | 0) < (i6 | 0)) {
      if (!(_jpeg_fill_bit_buffer(i22, i4, i2, i6) | 0)) break;
      i2 = HEAP32[i13 >> 2] | 0;
      i4 = HEAP32[i12 >> 2] | 0;
     }
     i2 = i2 - i6 | 0;
     i3 = (i4 >> i2 & i3 + -1) + i3 | 0;
     if (!i3) {
      i3 = 0;
      i1 = i4;
      i14 = 56;
     } else i14 = 43;
    } else {
     i3 = 1;
     i14 = 43;
    }
   } else {
    i1 = 0;
    i14 = 43;
   } while (0);
   L58 : do if ((i14 | 0) == 43) {
    while (1) {
     if ((i5 | 0) > (i19 | 0)) break;
     i6 = i20 + (HEAP32[2560 + (i5 << 2) >> 2] << 1) | 0;
     do if (HEAP16[i6 >> 1] | 0) {
      if ((i2 | 0) < 1) {
       if (!(_jpeg_fill_bit_buffer(i22, i4, i2, 1) | 0)) break L58;
       i2 = HEAP32[i13 >> 2] | 0;
       i4 = HEAP32[i12 >> 2] | 0;
      }
      i2 = i2 + -1 | 0;
      if ((1 << i2 & i4 | 0) != 0 ? (i17 = HEAP16[i6 >> 1] | 0, i18 = i17 << 16 >> 16, (i15 & i18 | 0) == 0) : 0) if (i17 << 16 >> 16 > -1) {
       HEAP16[i6 >> 1] = i15 + i18;
       break;
      } else {
       HEAP16[i6 >> 1] = i16 + i18;
       break;
      }
     } while (0);
     i5 = i5 + 1 | 0;
    }
    i3 = i3 + -1 | 0;
    i1 = i4;
    i14 = 56;
   } while (0);
   if ((i14 | 0) == 56) {
    i23 = HEAP32[i23 >> 2] | 0;
    HEAP32[i23 >> 2] = HEAP32[i22 >> 2];
    HEAP32[i23 + 4 >> 2] = HEAP32[i24 >> 2];
    HEAP32[i25 >> 2] = i1;
    HEAP32[i26 >> 2] = i2;
    HEAP32[i27 >> 2] = i3;
    break;
   }
   while (1) {
    if ((i1 | 0) <= 0) {
     i1 = 0;
     break L4;
    }
    i28 = i1 + -1 | 0;
    HEAP16[i20 + (HEAP32[i21 + (i28 << 2) >> 2] << 1) >> 1] = 0;
    i1 = i28;
   }
  } while (0);
  i1 = i28 + 40 | 0;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + -1;
  i1 = 1;
 } while (0);
 STACKTOP = i29;
 return i1 | 0;
}

function _check_rotation(i34) {
 i34 = i34 | 0;
 var d1 = 0.0, d2 = 0.0, d3 = 0.0, d4 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, i12 = 0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0, d25 = 0.0, d26 = 0.0, d27 = 0.0, d28 = 0.0, d29 = 0.0, d30 = 0.0, d31 = 0.0, d32 = 0.0, d33 = 0.0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0;
 d10 = +HEAPF64[i34 >> 3];
 i36 = i34 + 8 | 0;
 d13 = +HEAPF64[i36 >> 3];
 i37 = i34 + 16 | 0;
 d14 = +HEAPF64[i37 >> 3];
 i38 = i34 + 24 | 0;
 d25 = +HEAPF64[i38 >> 3];
 i39 = i34 + 32 | 0;
 d26 = +HEAPF64[i39 >> 3];
 i35 = i34 + 40 | 0;
 d5 = +HEAPF64[i35 >> 3];
 d1 = d13 * d5 - d14 * d26;
 d2 = d14 * d25 - d10 * d5;
 d3 = d10 * d26 - d13 * d25;
 d4 = +Math_sqrt(+(d3 * d3 + (d1 * d1 + d2 * d2)));
 do if (!(d4 == 0.0)) {
  d11 = d1 / d4;
  d9 = d2 / d4;
  d8 = d3 / d4;
  d24 = d10 * d25 + d13 * d26 + d14 * d5;
  d24 = d24 < 0.0 ? -d24 : d24;
  d24 = (+Math_sqrt(+(d24 + 1.0)) + +Math_sqrt(+(1.0 - d24))) * .5;
  d3 = d10 * d9;
  d1 = d13 * d11;
  d2 = d3 - d1;
  if (d2 != 0.0) {
   i12 = 0;
   d22 = d11;
   d6 = d10;
   d7 = d13;
   d23 = d9;
   d4 = d14;
  } else {
   i40 = d10 * d8 - d14 * d11 != 0.0;
   d7 = i40 ? d14 : d13;
   d6 = i40 ? d10 : d14;
   d23 = i40 ? d8 : d9;
   d22 = i40 ? d11 : d8;
   d3 = d6 * d23;
   d2 = d7 * d22;
   i12 = i40 ? 1 : 2;
   d1 = d2;
   d2 = d3 - d2;
   d4 = i40 ? d13 : d10;
   d8 = i40 ? d9 : d11;
  }
  if (!(d2 == 0.0) ? (d18 = (d7 * d8 - d4 * d23) / d2, d19 = d24 * d23 / d2, d21 = d1 - d3, d20 = (d6 * d8 - d4 * d22) / d21, d21 = d24 * d22 / d21, d16 = d18 * d18 + d20 * d20 + 1.0, d17 = d18 * d19 + d20 * d21, d15 = d17 * d17 - d16 * (d19 * d19 + d21 * d21 + -1.0), !(d15 < 0.0)) : 0) {
   d3 = +Math_sqrt(+d15);
   d6 = (d3 - d17) / d16;
   d7 = d19 + d18 * d6;
   d4 = d21 + d20 * d6;
   d3 = (-d17 - d3) / d16;
   d2 = d19 + d18 * d3;
   d1 = d21 + d20 * d3;
   switch (i12 & 3) {
   case 1:
    {
     d18 = d1;
     d17 = d3;
     d15 = d2;
     d16 = d4;
     d14 = d6;
     d13 = d7;
     d10 = d22;
     d11 = d8;
     d1 = d23;
     break;
    }
   case 2:
    {
     d18 = d2;
     d17 = d1;
     d15 = d3;
     d16 = d7;
     d14 = d4;
     d13 = d6;
     d10 = d8;
     d11 = d23;
     d1 = d22;
     break;
    }
   default:
    {
     d18 = d3;
     d17 = d1;
     d15 = d2;
     d16 = d6;
     d14 = d4;
     d13 = d7;
     d10 = d22;
     d11 = d23;
     d1 = d8;
    }
   }
   d2 = d25 * d11;
   d3 = d26 * d10;
   d4 = d2 - d3;
   if (d4 != 0.0) {
    i12 = 0;
    d6 = d10;
    d7 = d25;
    d8 = d26;
    d9 = d11;
   } else {
    i40 = d25 * d1 - d5 * d10 != 0.0;
    d8 = i40 ? d5 : d26;
    d7 = i40 ? d25 : d5;
    d9 = i40 ? d1 : d11;
    d6 = i40 ? d10 : d1;
    d5 = d7 * d9;
    d4 = d8 * d6;
    i12 = i40 ? 1 : 2;
    d2 = d5;
    d3 = d4;
    d4 = d5 - d4;
    d5 = i40 ? d26 : d25;
    d1 = i40 ? d11 : d10;
   }
   if (!(d4 == 0.0) ? (d30 = (d8 * d1 - d5 * d9) / d4, d31 = d24 * d9 / d4, d33 = d3 - d2, d32 = (d7 * d1 - d5 * d6) / d33, d33 = d24 * d6 / d33, d28 = d30 * d30 + d32 * d32 + 1.0, d29 = d30 * d31 + d32 * d33, d27 = d29 * d29 - d28 * (d31 * d31 + d33 * d33 + -1.0), !(d27 < 0.0)) : 0) {
    d8 = +Math_sqrt(+d27);
    d6 = (d8 - d29) / d28;
    d3 = d31 + d30 * d6;
    d7 = d33 + d32 * d6;
    d8 = (-d29 - d8) / d28;
    d2 = d31 + d30 * d8;
    d1 = d33 + d32 * d8;
    switch (i12 & 3) {
    case 1:
     {
      d10 = d1;
      d1 = d8;
      d8 = d2;
      d9 = d7;
      d7 = d6;
      d6 = d3;
      break;
     }
    case 2:
     {
      d10 = d2;
      d9 = d3;
      break;
     }
    default:
     {
      d10 = d8;
      d8 = d2;
      d9 = d6;
      d6 = d3;
     }
    }
    d5 = d13 * d6 + d14 * d7 + d16 * d9;
    d5 = d5 < 0.0 ? -d5 : d5;
    d4 = d13 * d8 + d14 * d1 + d16 * d10;
    d4 = d4 < 0.0 ? -d4 : d4;
    d3 = d15 * d6 + d17 * d7 + d18 * d9;
    d3 = d3 < 0.0 ? -d3 : d3;
    d2 = d15 * d8 + d17 * d1 + d18 * d10;
    d2 = d2 < 0.0 ? -d2 : d2;
    if (d5 < d4) if (d5 < d3) if (d5 < d2) {
     HEAPF64[i34 >> 3] = d13;
     HEAPF64[i36 >> 3] = d14;
     HEAPF64[i37 >> 3] = d16;
     HEAPF64[i38 >> 3] = d6;
     HEAPF64[i39 >> 3] = d7;
     HEAPF64[i35 >> 3] = d9;
     break;
    } else {
     HEAPF64[i34 >> 3] = d15;
     HEAPF64[i36 >> 3] = d17;
     HEAPF64[i37 >> 3] = d18;
     HEAPF64[i38 >> 3] = d8;
     HEAPF64[i39 >> 3] = d1;
     HEAPF64[i35 >> 3] = d10;
     break;
    } else {
     HEAPF64[i34 >> 3] = d15;
     HEAPF64[i36 >> 3] = d17;
     HEAPF64[i37 >> 3] = d18;
     if (d3 < d2) {
      HEAPF64[i38 >> 3] = d6;
      HEAPF64[i39 >> 3] = d7;
      HEAPF64[i35 >> 3] = d9;
      break;
     } else {
      HEAPF64[i38 >> 3] = d8;
      HEAPF64[i39 >> 3] = d1;
      HEAPF64[i35 >> 3] = d10;
      break;
     }
    } else if (d4 < d3) if (d4 < d2) {
     HEAPF64[i34 >> 3] = d13;
     HEAPF64[i36 >> 3] = d14;
     HEAPF64[i37 >> 3] = d16;
     HEAPF64[i38 >> 3] = d8;
     HEAPF64[i39 >> 3] = d1;
     HEAPF64[i35 >> 3] = d10;
     break;
    } else {
     HEAPF64[i34 >> 3] = d15;
     HEAPF64[i36 >> 3] = d17;
     HEAPF64[i37 >> 3] = d18;
     HEAPF64[i38 >> 3] = d8;
     HEAPF64[i39 >> 3] = d1;
     HEAPF64[i35 >> 3] = d10;
     break;
    } else {
     HEAPF64[i34 >> 3] = d15;
     HEAPF64[i36 >> 3] = d17;
     HEAPF64[i37 >> 3] = d18;
     if (d3 < d2) {
      HEAPF64[i38 >> 3] = d6;
      HEAPF64[i39 >> 3] = d7;
      HEAPF64[i35 >> 3] = d9;
      break;
     } else {
      HEAPF64[i38 >> 3] = d8;
      HEAPF64[i39 >> 3] = d1;
      HEAPF64[i35 >> 3] = d10;
      break;
     }
    }
   }
  }
 } while (0);
 return;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i19) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 i12 = i26 + 300 | 0;
 i23 = i26 + 288 | 0;
 i24 = i26 + 276 | 0;
 i13 = i26 + 272 | 0;
 i14 = i26;
 i16 = i26 + 268 | 0;
 i17 = i26 + 264 | 0;
 i18 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 i11 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw(i1, i2, i26 + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw(i23, i2, i12);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 i10 = i24 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
 HEAP32[i13 >> 2] = i1;
 HEAP32[i16 >> 2] = i14;
 HEAP32[i17 >> 2] = 0;
 i8 = i24 + 4 | 0;
 i4 = HEAP32[i20 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i20 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i21 >> 2] = 0;
    i25 = 19;
    break;
   }
  } else i25 = 19; while (0);
  if ((i25 | 0) == 19) {
   i25 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i13 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
   HEAP32[i13 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i2, i18, i1, i13, i17, HEAP32[i12 >> 2] | 0, i23, i14, i16, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  }
  i3 = i7;
 }
 i12 = HEAP8[i23 + 11 >> 0] | 0;
 if ((i12 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i12 & 255) | 0 ? (i15 = HEAP32[i16 >> 2] | 0, (i15 - i14 | 0) < 160) : 0) {
  i17 = HEAP32[i17 >> 2] | 0;
  HEAP32[i16 >> 2] = i15 + 4;
  HEAP32[i15 >> 2] = i17;
 }
 i18 = __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji(i1, HEAP32[i13 >> 2] | 0, i22, i18) | 0;
 HEAP16[i19 >> 1] = i18;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i14, HEAP32[i16 >> 2] | 0, i22);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i20 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break; else {
   i25 = 50;
   break;
  } else {
   HEAP32[i21 >> 2] = 0;
   i25 = 48;
   break;
  }
 } else i25 = 48; while (0);
 if ((i25 | 0) == 48 ? i2 : 0) i25 = 50;
 if ((i25 | 0) == 50) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i25 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i26;
 return i25 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i19) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 i12 = i26 + 300 | 0;
 i23 = i26 + 288 | 0;
 i24 = i26 + 276 | 0;
 i13 = i26 + 272 | 0;
 i14 = i26;
 i16 = i26 + 268 | 0;
 i17 = i26 + 264 | 0;
 i18 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 i11 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw(i1, i2, i26 + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw(i23, i2, i12);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 i10 = i24 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
 HEAP32[i13 >> 2] = i1;
 HEAP32[i16 >> 2] = i14;
 HEAP32[i17 >> 2] = 0;
 i8 = i24 + 4 | 0;
 i4 = HEAP32[i20 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i20 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i21 >> 2] = 0;
    i25 = 19;
    break;
   }
  } else i25 = 19; while (0);
  if ((i25 | 0) == 19) {
   i25 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i13 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
   HEAP32[i13 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i2, i18, i1, i13, i17, HEAP32[i12 >> 2] | 0, i23, i14, i16, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  }
  i3 = i7;
 }
 i12 = HEAP8[i23 + 11 >> 0] | 0;
 if ((i12 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i12 & 255) | 0 ? (i15 = HEAP32[i16 >> 2] | 0, (i15 - i14 | 0) < 160) : 0) {
  i17 = HEAP32[i17 >> 2] | 0;
  HEAP32[i16 >> 2] = i15 + 4;
  HEAP32[i15 >> 2] = i17;
 }
 i18 = __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji(i1, HEAP32[i13 >> 2] | 0, i22, i18) | 0;
 HEAP32[i19 >> 2] = i18;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i14, HEAP32[i16 >> 2] | 0, i22);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i20 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break; else {
   i25 = 50;
   break;
  } else {
   HEAP32[i21 >> 2] = 0;
   i25 = 48;
   break;
  }
 } else i25 = 48; while (0);
 if ((i25 | 0) == 48 ? i2 : 0) i25 = 50;
 if ((i25 | 0) == 50) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i25 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i26;
 return i25 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i19) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 i12 = i26 + 300 | 0;
 i23 = i26 + 288 | 0;
 i24 = i26 + 276 | 0;
 i13 = i26 + 272 | 0;
 i14 = i26;
 i16 = i26 + 268 | 0;
 i17 = i26 + 264 | 0;
 i18 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 i11 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw(i1, i2, i26 + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw(i23, i2, i12);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 i10 = i24 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
 HEAP32[i13 >> 2] = i1;
 HEAP32[i16 >> 2] = i14;
 HEAP32[i17 >> 2] = 0;
 i8 = i24 + 4 | 0;
 i4 = HEAP32[i20 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i20 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i21 >> 2] = 0;
    i25 = 19;
    break;
   }
  } else i25 = 19; while (0);
  if ((i25 | 0) == 19) {
   i25 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i13 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
   HEAP32[i13 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i2, i18, i1, i13, i17, HEAP32[i12 >> 2] | 0, i23, i14, i16, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  }
  i3 = i7;
 }
 i12 = HEAP8[i23 + 11 >> 0] | 0;
 if ((i12 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i12 & 255) | 0 ? (i15 = HEAP32[i16 >> 2] | 0, (i15 - i14 | 0) < 160) : 0) {
  i17 = HEAP32[i17 >> 2] | 0;
  HEAP32[i16 >> 2] = i15 + 4;
  HEAP32[i15 >> 2] = i17;
 }
 i18 = __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji(i1, HEAP32[i13 >> 2] | 0, i22, i18) | 0;
 HEAP32[i19 >> 2] = i18;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i14, HEAP32[i16 >> 2] | 0, i22);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i20 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break; else {
   i25 = 50;
   break;
  } else {
   HEAP32[i21 >> 2] = 0;
   i25 = 48;
   break;
  }
 } else i25 = 48; while (0);
 if ((i25 | 0) == 48 ? i2 : 0) i25 = 50;
 if ((i25 | 0) == 50) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i25 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i26;
 return i25 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i19) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i12 = i26 + 224 | 0;
 i23 = i26 + 212 | 0;
 i24 = i26 + 200 | 0;
 i13 = i26 + 196 | 0;
 i14 = i26;
 i16 = i26 + 192 | 0;
 i17 = i26 + 188 | 0;
 i18 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 i11 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc(i1, i2, i26 + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc(i23, i2, i12);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 i10 = i24 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
 HEAP32[i13 >> 2] = i1;
 HEAP32[i16 >> 2] = i14;
 HEAP32[i17 >> 2] = 0;
 i8 = i24 + 4 | 0;
 i4 = HEAP32[i20 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i20 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i21 >> 2] = 0;
    i25 = 19;
    break;
   }
  } else i25 = 19; while (0);
  if ((i25 | 0) == 19) {
   i25 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i13 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
   HEAP32[i13 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i2 & 255, i18, i1, i13, i17, HEAP8[i12 >> 0] | 0, i23, i14, i16, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  }
  i3 = i7;
 }
 i12 = HEAP8[i23 + 11 >> 0] | 0;
 if ((i12 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i12 & 255) | 0 ? (i15 = HEAP32[i16 >> 2] | 0, (i15 - i14 | 0) < 160) : 0) {
  i17 = HEAP32[i17 >> 2] | 0;
  HEAP32[i16 >> 2] = i15 + 4;
  HEAP32[i15 >> 2] = i17;
 }
 i18 = __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji(i1, HEAP32[i13 >> 2] | 0, i22, i18) | 0;
 HEAP16[i19 >> 1] = i18;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i14, HEAP32[i16 >> 2] | 0, i22);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i20 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break; else {
   i25 = 50;
   break;
  } else {
   HEAP32[i21 >> 2] = 0;
   i25 = 48;
   break;
  }
 } else i25 = 48; while (0);
 if ((i25 | 0) == 48 ? i2 : 0) i25 = 50;
 if ((i25 | 0) == 50) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i25 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i26;
 return i25 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i19) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i12 = i26 + 224 | 0;
 i23 = i26 + 212 | 0;
 i24 = i26 + 200 | 0;
 i13 = i26 + 196 | 0;
 i14 = i26;
 i16 = i26 + 192 | 0;
 i17 = i26 + 188 | 0;
 i18 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 i11 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc(i1, i2, i26 + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc(i23, i2, i12);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 i10 = i24 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
 HEAP32[i13 >> 2] = i1;
 HEAP32[i16 >> 2] = i14;
 HEAP32[i17 >> 2] = 0;
 i8 = i24 + 4 | 0;
 i4 = HEAP32[i20 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i20 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i21 >> 2] = 0;
    i25 = 19;
    break;
   }
  } else i25 = 19; while (0);
  if ((i25 | 0) == 19) {
   i25 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i13 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
   HEAP32[i13 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i2 & 255, i18, i1, i13, i17, HEAP8[i12 >> 0] | 0, i23, i14, i16, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  }
  i3 = i7;
 }
 i12 = HEAP8[i23 + 11 >> 0] | 0;
 if ((i12 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i12 & 255) | 0 ? (i15 = HEAP32[i16 >> 2] | 0, (i15 - i14 | 0) < 160) : 0) {
  i17 = HEAP32[i17 >> 2] | 0;
  HEAP32[i16 >> 2] = i15 + 4;
  HEAP32[i15 >> 2] = i17;
 }
 i18 = __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji(i1, HEAP32[i13 >> 2] | 0, i22, i18) | 0;
 HEAP32[i19 >> 2] = i18;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i14, HEAP32[i16 >> 2] | 0, i22);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i20 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break; else {
   i25 = 50;
   break;
  } else {
   HEAP32[i21 >> 2] = 0;
   i25 = 48;
   break;
  }
 } else i25 = 48; while (0);
 if ((i25 | 0) == 48 ? i2 : 0) i25 = 50;
 if ((i25 | 0) == 50) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i25 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i26;
 return i25 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i19) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i12 = i26 + 224 | 0;
 i23 = i26 + 212 | 0;
 i24 = i26 + 200 | 0;
 i13 = i26 + 196 | 0;
 i14 = i26;
 i16 = i26 + 192 | 0;
 i17 = i26 + 188 | 0;
 i18 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 i11 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc(i1, i2, i26 + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc(i23, i2, i12);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 i10 = i24 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
 HEAP32[i13 >> 2] = i1;
 HEAP32[i16 >> 2] = i14;
 HEAP32[i17 >> 2] = 0;
 i8 = i24 + 4 | 0;
 i4 = HEAP32[i20 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i20 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i21 >> 2] = 0;
    i25 = 19;
    break;
   }
  } else i25 = 19; while (0);
  if ((i25 | 0) == 19) {
   i25 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i13 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
   HEAP32[i13 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i2 & 255, i18, i1, i13, i17, HEAP8[i12 >> 0] | 0, i23, i14, i16, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  }
  i3 = i7;
 }
 i12 = HEAP8[i23 + 11 >> 0] | 0;
 if ((i12 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i12 & 255) | 0 ? (i15 = HEAP32[i16 >> 2] | 0, (i15 - i14 | 0) < 160) : 0) {
  i17 = HEAP32[i17 >> 2] | 0;
  HEAP32[i16 >> 2] = i15 + 4;
  HEAP32[i15 >> 2] = i17;
 }
 i18 = __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji(i1, HEAP32[i13 >> 2] | 0, i22, i18) | 0;
 HEAP32[i19 >> 2] = i18;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i14, HEAP32[i16 >> 2] | 0, i22);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i20 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break; else {
   i25 = 50;
   break;
  } else {
   HEAP32[i21 >> 2] = 0;
   i25 = 48;
   break;
  }
 } else i25 = 48; while (0);
 if ((i25 | 0) == 48 ? i2 : 0) i25 = 50;
 if ((i25 | 0) == 50) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i25 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i26;
 return i25 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i19) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 i12 = i26 + 300 | 0;
 i23 = i26 + 288 | 0;
 i24 = i26 + 276 | 0;
 i13 = i26 + 272 | 0;
 i14 = i26;
 i16 = i26 + 268 | 0;
 i17 = i26 + 264 | 0;
 i18 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 i11 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw(i1, i2, i26 + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw(i23, i2, i12);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 i10 = i24 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
 HEAP32[i13 >> 2] = i1;
 HEAP32[i16 >> 2] = i14;
 HEAP32[i17 >> 2] = 0;
 i8 = i24 + 4 | 0;
 i4 = HEAP32[i20 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i20 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i21 >> 2] = 0;
    i25 = 19;
    break;
   }
  } else i25 = 19; while (0);
  if ((i25 | 0) == 19) {
   i25 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i13 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
   HEAP32[i13 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i2, i18, i1, i13, i17, HEAP32[i12 >> 2] | 0, i23, i14, i16, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  }
  i3 = i7;
 }
 i12 = HEAP8[i23 + 11 >> 0] | 0;
 if ((i12 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i12 & 255) | 0 ? (i15 = HEAP32[i16 >> 2] | 0, (i15 - i14 | 0) < 160) : 0) {
  i17 = HEAP32[i17 >> 2] | 0;
  HEAP32[i16 >> 2] = i15 + 4;
  HEAP32[i15 >> 2] = i17;
 }
 i18 = __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji(i1, HEAP32[i13 >> 2] | 0, i22, i18) | 0;
 HEAP32[i19 >> 2] = i18;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i14, HEAP32[i16 >> 2] | 0, i22);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i20 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break; else {
   i25 = 50;
   break;
  } else {
   HEAP32[i21 >> 2] = 0;
   i25 = 48;
   break;
  }
 } else i25 = 48; while (0);
 if ((i25 | 0) == 48 ? i2 : 0) i25 = 50;
 if ((i25 | 0) == 50) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i25 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i26;
 return i25 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i19) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i12 = i26 + 224 | 0;
 i23 = i26 + 212 | 0;
 i24 = i26 + 200 | 0;
 i13 = i26 + 196 | 0;
 i14 = i26;
 i16 = i26 + 192 | 0;
 i17 = i26 + 188 | 0;
 i18 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 i11 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc(i1, i2, i26 + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc(i23, i2, i12);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 i10 = i24 + 8 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
 i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
 HEAP32[i13 >> 2] = i1;
 HEAP32[i16 >> 2] = i14;
 HEAP32[i17 >> 2] = 0;
 i8 = i24 + 4 | 0;
 i4 = HEAP32[i20 >> 2] | 0;
 i3 = i4;
 L8 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i20 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i5) break; else break L8; else {
    HEAP32[i21 >> 2] = 0;
    i25 = 19;
    break;
   }
  } else i25 = 19; while (0);
  if ((i25 | 0) == 19) {
   i25 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i9 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i13 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i2 << 1, 0);
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i24, i1, 0);
   i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
   HEAP32[i13 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i2 & 255, i18, i1, i13, i17, HEAP8[i12 >> 0] | 0, i23, i14, i16, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  }
  i3 = i7;
 }
 i12 = HEAP8[i23 + 11 >> 0] | 0;
 if ((i12 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i12 & 255) | 0 ? (i15 = HEAP32[i16 >> 2] | 0, (i15 - i14 | 0) < 160) : 0) {
  i17 = HEAP32[i17 >> 2] | 0;
  HEAP32[i16 >> 2] = i15 + 4;
  HEAP32[i15 >> 2] = i17;
 }
 i18 = __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji(i1, HEAP32[i13 >> 2] | 0, i22, i18) | 0;
 HEAP32[i19 >> 2] = i18;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i14, HEAP32[i16 >> 2] | 0, i22);
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i20 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break; else {
   i25 = 50;
   break;
  } else {
   HEAP32[i21 >> 2] = 0;
   i25 = 48;
   break;
  }
 } else i25 = 48; while (0);
 if ((i25 | 0) == 48 ? i2 : 0) i25 = 50;
 if ((i25 | 0) == 50) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i25 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 STACKTOP = i26;
 return i25 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 i16 = i20 + 264 | 0;
 i14 = i20 + 160 | 0;
 i18 = i20 + 292 | 0;
 i19 = i20 + 280 | 0;
 i15 = i20 + 276 | 0;
 i11 = i20;
 i12 = i20 + 272 | 0;
 i13 = i20 + 268 | 0;
 HEAP32[i18 >> 2] = 0;
 HEAP32[i18 + 4 >> 2] = 0;
 HEAP32[i18 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNKSt3__28ios_base6getlocEv(i19, i2);
 i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i19, 58824) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 15](i1, 10736, 10762, i14) | 0;
 __ZNSt3__26localeD2Ev(i19);
 HEAP32[i19 >> 2] = 0;
 HEAP32[i19 + 4 >> 2] = 0;
 HEAP32[i19 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i19 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i10 = i19 + 11 | 0;
 i9 = i19 + 8 | 0;
 if ((HEAP8[i10 >> 0] | 0) < 0) i1 = (HEAP32[i9 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i19, i1, 0);
 i1 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i19 >> 2] | 0 : i19;
 HEAP32[i15 >> 2] = i1;
 HEAP32[i12 >> 2] = i11;
 HEAP32[i13 >> 2] = 0;
 i8 = i19 + 4 | 0;
 i4 = HEAP32[i21 >> 2] | 0;
 i3 = i4;
 L12 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i21 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i22 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i5) break; else break L12; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 22;
    break;
   }
  } else i24 = 22; while (0);
  if ((i24 | 0) == 22) {
   i24 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i10 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i15 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i19, i2 << 1, 0);
   if ((HEAP8[i10 >> 0] | 0) < 0) i1 = (HEAP32[i9 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i19, i1, 0);
   i1 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i19 >> 2] | 0 : i19;
   HEAP32[i15 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i2, 16, i1, i15, i13, 0, i18, i11, i12, i14) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  }
  i3 = i7;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i19, (HEAP32[i15 >> 2] | 0) - i1 | 0, 0);
 i14 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i19 >> 2] | 0 : i19;
 i15 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i16 >> 2] = i17;
 if ((__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z(i14, i15, 47649, i16) | 0) != 1) HEAP32[i23 >> 2] = 4;
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i21 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break; else {
   i24 = 52;
   break;
  } else {
   HEAP32[i22 >> 2] = 0;
   i24 = 50;
   break;
  }
 } else i24 = 50; while (0);
 if ((i24 | 0) == 50 ? i2 : 0) i24 = 52;
 if ((i24 | 0) == 52) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i16 = i20 + 192 | 0;
 i14 = i20 + 160 | 0;
 i18 = i20 + 220 | 0;
 i19 = i20 + 208 | 0;
 i15 = i20 + 204 | 0;
 i11 = i20;
 i12 = i20 + 200 | 0;
 i13 = i20 + 196 | 0;
 HEAP32[i18 >> 2] = 0;
 HEAP32[i18 + 4 >> 2] = 0;
 HEAP32[i18 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNKSt3__28ios_base6getlocEv(i19, i2);
 i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i19, 58792) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] & 15](i1, 10736, 10762, i14) | 0;
 __ZNSt3__26localeD2Ev(i19);
 HEAP32[i19 >> 2] = 0;
 HEAP32[i19 + 4 >> 2] = 0;
 HEAP32[i19 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i19 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i10 = i19 + 11 | 0;
 i9 = i19 + 8 | 0;
 if ((HEAP8[i10 >> 0] | 0) < 0) i1 = (HEAP32[i9 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i19, i1, 0);
 i1 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i19 >> 2] | 0 : i19;
 HEAP32[i15 >> 2] = i1;
 HEAP32[i12 >> 2] = i11;
 HEAP32[i13 >> 2] = 0;
 i8 = i19 + 4 | 0;
 i4 = HEAP32[i21 >> 2] | 0;
 i3 = i4;
 L12 : while (1) {
  if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i21 >> 2] = 0;
    i7 = 0;
    i5 = 1;
    i4 = 0;
   } else {
    i7 = i3;
    i5 = 0;
   }
  } else {
   i7 = 0;
   i5 = 1;
   i4 = 0;
  }
  i3 = HEAP32[i22 >> 2] | 0;
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i5) break; else break L12; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 22;
    break;
   }
  } else i24 = 22; while (0);
  if ((i24 | 0) == 22) {
   i24 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i2 = HEAP8[i10 >> 0] | 0;
  i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
  if ((HEAP32[i15 >> 2] | 0) == (i1 + i2 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i19, i2 << 1, 0);
   if ((HEAP8[i10 >> 0] | 0) < 0) i1 = (HEAP32[i9 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i19, i1, 0);
   i1 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i19 >> 2] | 0 : i19;
   HEAP32[i15 >> 2] = i1 + i2;
  }
  i5 = i4 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i4 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i2 & 255, 16, i1, i15, i13, 0, i18, i11, i12, i14) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0; else {
   HEAP32[i5 >> 2] = i2 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  }
  i3 = i7;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i19, (HEAP32[i15 >> 2] | 0) - i1 | 0, 0);
 i14 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i19 >> 2] | 0 : i19;
 i15 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i16 >> 2] = i17;
 if ((__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z(i14, i15, 47649, i16) | 0) != 1) HEAP32[i23 >> 2] = 4;
 if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i21 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break; else {
   i24 = 52;
   break;
  } else {
   HEAP32[i22 >> 2] = 0;
   i24 = 50;
   break;
  }
 } else i24 = 50; while (0);
 if ((i24 | 0) == 50 ? i2 : 0) i24 = 52;
 if ((i24 | 0) == 52) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZN6vision22ComputeSubpixelHessianEPfS0_RKNS_5ImageES3_S3_ii(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i9;
 i10 = __ZNK6vision5Image5widthEv(i3) | 0;
 i10 = (i10 | 0) == (__ZNK6vision5Image5widthEv(i4) | 0) & 1;
 do if ((__ZNK6vision5Image5widthEv(i5) | 0) == (i10 | 0)) {
  i10 = __ZNK6vision5Image6heightEv(i3) | 0;
  i10 = (i10 | 0) == (__ZNK6vision5Image6heightEv(i4) | 0) & 1;
  if ((__ZNK6vision5Image6heightEv(i5) | 0) == (i10 | 0)) {
   __ZN6vision32ComputeSubpixelHessianSameOctaveEPfS0_RKNS_5ImageES3_S3_ii(i1, i2, i3, i4, i5, i6, i7);
   break;
  } else {
   i10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 22500) | 0, 22571) | 0, 33655) | 0, 466) | 0, 33662) | 0, 22700) | 0;
   __ZNKSt3__28ios_base6getlocEv(i8, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58792) | 0;
   i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
   __ZNSt3__26localeD2Ev(i8);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i7) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
   _abort();
  }
 } else {
  i10 = __ZNK6vision5Image5widthEv(i3) | 0;
  if ((i10 | 0) == (__ZNK6vision5Image5widthEv(i4) | 0) ? (i10 = (__ZNK6vision5Image5widthEv(i4) | 0) >>> 1, (i10 | 0) == (__ZNK6vision5Image5widthEv(i5) | 0)) : 0) {
   i10 = __ZNK6vision5Image6heightEv(i3) | 0;
   if ((i10 | 0) == (__ZNK6vision5Image6heightEv(i4) | 0) ? (i10 = (__ZNK6vision5Image6heightEv(i4) | 0) >>> 1, (i10 | 0) == (__ZNK6vision5Image6heightEv(i5) | 0)) : 0) {
    __ZN6vision36ComputeSubpixelHessianFineOctavePairEPfS0_RKNS_5ImageES3_S3_ii(i1, i2, i3, i4, i5, i6, i7);
    break;
   }
   i10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 22732) | 0, 22571) | 0, 33655) | 0, 469) | 0, 33662) | 0, 22700) | 0;
   __ZNKSt3__28ios_base6getlocEv(i8, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58792) | 0;
   i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
   __ZNSt3__26localeD2Ev(i8);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i11) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
   _abort();
  }
  i11 = (__ZNK6vision5Image5widthEv(i3) | 0) >>> 1;
  if ((i11 | 0) == (__ZNK6vision5Image5widthEv(i4) | 0) ? (i11 = __ZNK6vision5Image5widthEv(i4) | 0, (i11 | 0) == (__ZNK6vision5Image5widthEv(i5) | 0)) : 0) {
   i11 = (__ZNK6vision5Image5widthEv(i3) | 0) >>> 1;
   if ((i11 | 0) == (__ZNK6vision5Image5widthEv(i4) | 0) ? (i11 = __ZNK6vision5Image5widthEv(i4) | 0, (i11 | 0) == (__ZNK6vision5Image5widthEv(i5) | 0)) : 0) {
    __ZN6vision38ComputeSubpixelHessianCoarseOctavePairEPfS0_RKNS_5ImageES3_S3_ii(i1, i2, i3, i4, i5, i6, i7);
    break;
   }
   i11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 22829) | 0, 22571) | 0, 33655) | 0, 472) | 0, 33662) | 0, 22700) | 0;
   __ZNKSt3__28ios_base6getlocEv(i8, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58792) | 0;
   i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
   __ZNSt3__26localeD2Ev(i8);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i10) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
   _abort();
  }
  i11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 29463) | 0, 22571) | 0, 33655) | 0, 475) | 0, 33662) | 0, 22922) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58792) | 0;
  i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i10) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 } while (0);
 STACKTOP = i9;
 return 1;
}

function __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i12, i13, i14, i9, i7) {
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i9 = i9 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i10 = 0, i11 = 0;
 i1 = HEAP32[i12 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i12 >> 2] = 0;
   i3 = 1;
   break;
  } else {
   i3 = (HEAP32[i12 >> 2] | 0) == 0;
   break;
  }
 } else i3 = 1; while (0);
 i2 = HEAP32[i13 >> 2] | 0;
 do if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i3) {
   i11 = 17;
   break;
  } else {
   i11 = 16;
   break;
  } else {
   HEAP32[i13 >> 2] = 0;
   i11 = 14;
   break;
  }
 } else i11 = 14; while (0);
 if ((i11 | 0) == 14) if (i3) i11 = 16; else {
  i2 = 0;
  i11 = 17;
 }
 L22 : do if ((i11 | 0) == 16) {
  HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 6;
  i1 = 0;
 } else if ((i11 | 0) == 17) {
  i1 = HEAP32[i12 >> 2] | 0;
  i3 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
  i3 = i1 & 255;
  if (i3 << 24 >> 24 > -1 ? (i10 = i9 + 8 | 0, HEAP16[(HEAP32[i10 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 2048) : 0) {
   i1 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 36 >> 2] & 63](i9, i3, 0) | 0) << 24 >> 24;
   i3 = HEAP32[i12 >> 2] | 0;
   i4 = i3 + 12 | 0;
   i5 = HEAP32[i4 >> 2] | 0;
   if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0; else {
    HEAP32[i4 >> 2] = i5 + 1;
    __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i5 >> 0] | 0) | 0;
   }
   i6 = i2;
   i5 = i2;
   while (1) {
    i1 = i1 + -48 | 0;
    i8 = i7 + -1 | 0;
    i2 = HEAP32[i12 >> 2] | 0;
    do if (i2) {
     i3 = HEAP32[i2 + 12 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[i12 >> 2] = 0;
      i4 = 1;
      break;
     } else {
      i4 = (HEAP32[i12 >> 2] | 0) == 0;
      break;
     }
    } else i4 = 1; while (0);
    if (i5) {
     i2 = HEAP32[i5 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[i13 >> 2] = 0;
      i2 = 1;
      i6 = 0;
      i5 = 0;
     } else i2 = 0;
    } else {
     i2 = 1;
     i5 = 0;
    }
    i3 = HEAP32[i12 >> 2] | 0;
    if (!((i7 | 0) > 1 & (i4 ^ i2))) break;
    i2 = HEAP32[i3 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
    i3 = i2 & 255;
    if (i3 << 24 >> 24 <= -1) break L22;
    if (!(HEAP16[(HEAP32[i10 >> 2] | 0) + (i2 << 24 >> 24 << 1) >> 1] & 2048)) break L22;
    i1 = (i1 * 10 | 0) + ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 36 >> 2] & 63](i9, i3, 0) | 0) << 24 >> 24) | 0;
    i2 = HEAP32[i12 >> 2] | 0;
    i3 = i2 + 12 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0; else {
     HEAP32[i3 >> 2] = i4 + 1;
     __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i4 >> 0] | 0) | 0;
    }
    i7 = i8;
   }
   do if (i3) {
    i2 = HEAP32[i3 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
    if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
     HEAP32[i12 >> 2] = 0;
     i3 = 1;
     break;
    } else {
     i3 = (HEAP32[i12 >> 2] | 0) == 0;
     break;
    }
   } else i3 = 1; while (0);
   do if (i6) {
    i2 = HEAP32[i6 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
    if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i3) break L22; else break; else {
     HEAP32[i13 >> 2] = 0;
     i11 = 63;
     break;
    }
   } else i11 = 63; while (0);
   if ((i11 | 0) == 63 ? !i3 : 0) break;
   HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 2;
   break;
  }
  HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 4;
  i1 = 0;
 } while (0);
 return i1 | 0;
}

function _icpPointRobust(i20, i21, i6, i23, i29) {
 i20 = i20 | 0;
 i21 = i21 | 0;
 i6 = i6 | 0;
 i23 = i23 | 0;
 i29 = i29 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i22 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i30 = 0;
 i30 = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(192);
 i5 = i30 + 184 | 0;
 i4 = i30 + 176 | 0;
 i3 = i30 + 168 | 0;
 i1 = i30 + 160 | 0;
 i24 = i30 + 144 | 0;
 i25 = i30 + 48 | 0;
 i26 = i30;
 i27 = i21 + 8 | 0;
 i2 = HEAP32[i27 >> 2] | 0;
 do if ((i2 | 0) >= 4) {
  i7 = ~~(+HEAPF64[i20 + 128 >> 3] * +(i2 | 0)) + -1 | 0;
  i7 = (i7 | 0) > 3 ? i7 : 3;
  i28 = _malloc(i2 * 96 | 0) | 0;
  if (!i28) {
   _arLog(0, 3, 19966, i1);
   i1 = -1;
   break;
  }
  i22 = _malloc(i2 << 4) | 0;
  if (!i22) {
   _arLog(0, 3, 19966, i3);
   _free(i28);
   i1 = -1;
   break;
  }
  i1 = i2 << 3;
  i19 = _malloc(i1) | 0;
  if (!i19) {
   _arLog(0, 3, 19966, i4);
   _free(i28);
   _free(i22);
   i1 = -1;
   break;
  }
  i18 = _malloc(i1) | 0;
  if (!i18) {
   _arLog(0, 3, 19966, i5);
   _free(i28);
   _free(i22);
   _free(i19);
   i1 = -1;
   break;
  }
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 4) break;
    HEAPF64[i23 + (i1 << 5) + (i2 << 3) >> 3] = +HEAPF64[i6 + (i1 << 5) + (i2 << 3) >> 3];
    i2 = i2 + 1 | 0;
   }
   i1 = i1 + 1 | 0;
  }
  i16 = i21 + 4 | 0;
  i17 = i24 + 8 | 0;
  i6 = i18 + (i7 << 3) | 0;
  i7 = i20 + 104 | 0;
  i13 = i20 + 96 | 0;
  i14 = i20 + 120 | 0;
  i15 = i20 + 112 | 0;
  d11 = 0.0;
  i5 = 0;
  L23 : while (1) {
   _arUtilMatMul(i20, i23, i25) | 0;
   i1 = 0;
   while (1) {
    i2 = HEAP32[i27 >> 2] | 0;
    if ((i1 | 0) >= (i2 | 0)) break;
    if ((_icpGetU_from_X_by_MatX2U(i24, i25, (HEAP32[i16 >> 2] | 0) + (i1 * 24 | 0) | 0) | 0) < 0) {
     i2 = 20;
     break L23;
    }
    i4 = HEAP32[i21 >> 2] | 0;
    d10 = +HEAPF64[i4 + (i1 << 4) >> 3] - +HEAPF64[i24 >> 3];
    d12 = +HEAPF64[i4 + (i1 << 4) + 8 >> 3] - +HEAPF64[i17 >> 3];
    i4 = i1 << 1;
    HEAPF64[i22 + (i4 << 3) >> 3] = d10;
    HEAPF64[i22 + ((i4 | 1) << 3) >> 3] = d12;
    d12 = d10 * d10 + d12 * d12;
    HEAPF64[i18 + (i1 << 3) >> 3] = d12;
    HEAPF64[i19 + (i1 << 3) >> 3] = d12;
    i1 = i1 + 1 | 0;
   }
   _qsort(i18, i2, 8, 18);
   d12 = +HEAPF64[i6 >> 3] * 4.0;
   d12 = d12 < 16.0 ? 16.0 : d12;
   i2 = HEAP32[i27 >> 2] | 0;
   d10 = d12 / 6.0;
   d9 = 0.0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break;
    d8 = +HEAPF64[i18 + (i1 << 3) >> 3];
    if (d8 > d12) d8 = d10; else {
     d8 = 1.0 - d8 / d12;
     d8 = d10 * (1.0 - d8 * (d8 * d8));
    }
    d9 = d9 + d8;
    i1 = i1 + 1 | 0;
   }
   d9 = d9 / +(i2 | 0);
   if (d9 < +HEAPF64[i7 >> 3]) {
    i2 = 44;
    break;
   }
   if ((i5 | 0 ? d9 < +HEAPF64[i14 >> 3] : 0) ? d9 / d11 > +HEAPF64[i15 >> 3] : 0) {
    i2 = 44;
    break;
   }
   if ((i5 | 0) == (HEAP32[i13 >> 2] | 0)) {
    i2 = 44;
    break;
   }
   i1 = 0;
   i4 = 0;
   while (1) {
    if ((i4 | 0) >= (i2 | 0)) break;
    d8 = +HEAPF64[i19 + (i4 << 3) >> 3];
    if (d8 <= d12) {
     i3 = i1 * 6 | 0;
     i2 = i28 + (i3 << 3) | 0;
     if ((_icpGetJ_U_S(i2, i20, i23, (HEAP32[i16 >> 2] | 0) + (i4 * 24 | 0) | 0) | 0) < 0) {
      i2 = 36;
      break L23;
     }
     d11 = 1.0 - d8 / d12;
     d11 = d11 * d11;
     HEAPF64[i2 >> 3] = d11 * +HEAPF64[i2 >> 3];
     i2 = i28 + ((i3 | 1) << 3) | 0;
     HEAPF64[i2 >> 3] = d11 * +HEAPF64[i2 >> 3];
     i2 = i28 + (i3 + 2 << 3) | 0;
     HEAPF64[i2 >> 3] = d11 * +HEAPF64[i2 >> 3];
     i2 = i28 + (i3 + 3 << 3) | 0;
     HEAPF64[i2 >> 3] = d11 * +HEAPF64[i2 >> 3];
     i2 = i28 + (i3 + 4 << 3) | 0;
     HEAPF64[i2 >> 3] = d11 * +HEAPF64[i2 >> 3];
     i2 = i28 + (i3 + 5 << 3) | 0;
     HEAPF64[i2 >> 3] = d11 * +HEAPF64[i2 >> 3];
     i2 = i28 + (i3 + 6 << 3) | 0;
     HEAPF64[i2 >> 3] = d11 * +HEAPF64[i2 >> 3];
     i2 = i28 + (i3 + 7 << 3) | 0;
     HEAPF64[i2 >> 3] = d11 * +HEAPF64[i2 >> 3];
     i2 = i28 + (i3 + 8 << 3) | 0;
     HEAPF64[i2 >> 3] = d11 * +HEAPF64[i2 >> 3];
     i2 = i28 + (i3 + 9 << 3) | 0;
     HEAPF64[i2 >> 3] = d11 * +HEAPF64[i2 >> 3];
     i2 = i28 + (i3 + 10 << 3) | 0;
     HEAPF64[i2 >> 3] = d11 * +HEAPF64[i2 >> 3];
     i2 = i28 + (i3 + 11 << 3) | 0;
     HEAPF64[i2 >> 3] = d11 * +HEAPF64[i2 >> 3];
     i2 = i4 << 1;
     HEAPF64[i22 + (i1 << 3) >> 3] = d11 * +HEAPF64[i22 + (i2 << 3) >> 3];
     HEAPF64[i22 + (i1 + 1 << 3) >> 3] = d11 * +HEAPF64[i22 + ((i2 | 1) << 3) >> 3];
     i1 = i1 + 2 | 0;
     i2 = HEAP32[i27 >> 2] | 0;
    }
    i4 = i4 + 1 | 0;
   }
   if ((i1 | 0) < 6) {
    i2 = 40;
    break;
   }
   if ((_icpGetDeltaS(i26, i22, i28, i1) | 0) < 0) {
    i2 = 42;
    break;
   }
   _icpUpdateMat(i23, i26) | 0;
   d11 = d9;
   i5 = i5 + 1 | 0;
  }
  if ((i2 | 0) == 20) {
   _icpGetXw2XcCleanup_221(i28, i22, i19, i18);
   i1 = -1;
   break;
  } else if ((i2 | 0) == 36) {
   _icpGetXw2XcCleanup_221(i28, i22, i19, i18);
   i1 = -1;
   break;
  } else if ((i2 | 0) == 40) {
   _icpGetXw2XcCleanup_221(i28, i22, i19, i18);
   i1 = -1;
   break;
  } else if ((i2 | 0) == 42) {
   _icpGetXw2XcCleanup_221(i28, i22, i19, i18);
   i1 = -1;
   break;
  } else if ((i2 | 0) == 44) {
   HEAPF64[i29 >> 3] = d9;
   _free(i28);
   _free(i22);
   _free(i19);
   _free(i18);
   i1 = 0;
   break;
  }
 } else i1 = -1; while (0);
 STACKTOP = i30;
 return i1 | 0;
}

function __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i11, i12, i13, i9, i7) {
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i9 = i9 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i10 = 0;
 i1 = HEAP32[i11 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i11 >> 2] = 0;
   i3 = 1;
   break;
  } else {
   i3 = (HEAP32[i11 >> 2] | 0) == 0;
   break;
  }
 } else i3 = 1; while (0);
 i2 = HEAP32[i12 >> 2] | 0;
 do if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i3) {
   i10 = 17;
   break;
  } else {
   i10 = 16;
   break;
  } else {
   HEAP32[i12 >> 2] = 0;
   i10 = 14;
   break;
  }
 } else i10 = 14; while (0);
 if ((i10 | 0) == 14) if (i3) i10 = 16; else {
  i2 = 0;
  i10 = 17;
 }
 L22 : do if ((i10 | 0) == 16) {
  HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | 6;
  i1 = 0;
 } else if ((i10 | 0) == 17) {
  i1 = HEAP32[i11 >> 2] | 0;
  i3 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 12 >> 2] & 63](i9, 2048, i1) | 0)) {
   HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | 4;
   i1 = 0;
   break;
  }
  i1 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 52 >> 2] & 63](i9, i1, 0) | 0) << 24 >> 24;
  i3 = HEAP32[i11 >> 2] | 0;
  i4 = i3 + 12 | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0; else {
   HEAP32[i4 >> 2] = i5 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i5 >> 2] | 0) | 0;
  }
  i6 = i2;
  i5 = i2;
  while (1) {
   i1 = i1 + -48 | 0;
   i8 = i7 + -1 | 0;
   i2 = HEAP32[i11 >> 2] | 0;
   do if (i2) {
    i3 = HEAP32[i2 + 12 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[i11 >> 2] = 0;
     i4 = 1;
     break;
    } else {
     i4 = (HEAP32[i11 >> 2] | 0) == 0;
     break;
    }
   } else i4 = 1; while (0);
   if (i5) {
    i2 = HEAP32[i5 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[i12 >> 2] = 0;
     i2 = 1;
     i6 = 0;
     i5 = 0;
    } else i2 = 0;
   } else {
    i2 = 1;
    i5 = 0;
   }
   i3 = HEAP32[i11 >> 2] | 0;
   if (!((i7 | 0) > 1 & (i4 ^ i2))) break;
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 12 >> 2] & 63](i9, 2048, i2) | 0)) break L22;
   i1 = (i1 * 10 | 0) + ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 52 >> 2] & 63](i9, i2, 0) | 0) << 24 >> 24) | 0;
   i2 = HEAP32[i11 >> 2] | 0;
   i3 = i2 + 12 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0; else {
    HEAP32[i3 >> 2] = i4 + 4;
    __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i4 >> 2] | 0) | 0;
   }
   i7 = i8;
  }
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i11 >> 2] = 0;
    i3 = 1;
    break;
   } else {
    i3 = (HEAP32[i11 >> 2] | 0) == 0;
    break;
   }
  } else i3 = 1; while (0);
  do if (i6) {
   i2 = HEAP32[i6 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i3) break L22; else break; else {
    HEAP32[i12 >> 2] = 0;
    i10 = 61;
    break;
   }
  } else i10 = 61; while (0);
  if ((i10 | 0) == 61 ? !i3 : 0) break;
  HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | 2;
 } while (0);
 return i1 | 0;
}

function __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_RKNS_28BinaryHierarchicalClusteringILi96EEE(i13, i14, i17, i18) {
 i13 = i13 | 0;
 i14 = i14 | 0;
 i17 = i17 | 0;
 i18 = i18 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i15 = 0, i16 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i19 = i22;
 i20 = i13 + 4 | 0;
 HEAP32[i20 >> 2] = HEAP32[i13 >> 2];
 do if ((__ZNK6vision18BinaryFeatureStore4sizeEv(i14) | 0) != 0 ? (__ZNK6vision18BinaryFeatureStore4sizeEv(i17) | 0) != 0 : 0) {
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm(i13, __ZNK6vision18BinaryFeatureStore4sizeEv(i14) | 0);
  i15 = i13 + 8 | 0;
  i16 = i13 + 12 | 0;
  i12 = 0;
  L4 : while (1) {
   if (i12 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv(i14) | 0) >>> 0) break;
   i7 = __ZNK6vision18BinaryFeatureStore7featureEm(i14, i12) | 0;
   __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryEPKh(i18, i7) | 0;
   i10 = __ZNK6vision18BinaryFeatureStore5pointEm(i14, i12) | 0;
   i8 = __ZNK6vision28BinaryHierarchicalClusteringILi96EE12reverseIndexEv(i18) | 0;
   i9 = i8 + 4 | 0;
   i10 = i10 + 16 | 0;
   i5 = 0;
   i6 = -1;
   i3 = -1;
   i2 = 2147483647;
   while (1) {
    i1 = HEAP32[i8 >> 2] | 0;
    if (i5 >>> 0 >= (HEAP32[i9 >> 2] | 0) - i1 >> 2 >>> 0) break;
    i23 = HEAP8[i10 >> 0] | 0;
    i4 = (__ZNK6vision18BinaryFeatureStore5pointEm(i17, HEAP32[i1 + (i5 << 2) >> 2] | 0) | 0) + 16 | 0;
    do if (i23 << 24 >> 24 == (HEAP8[i4 >> 0] | 0)) {
     i1 = __ZN6vision15HammingDistanceILi96EEEjPKhS2_(i7, __ZNK6vision18BinaryFeatureStore7featureEm(i17, HEAP32[(HEAP32[i8 >> 2] | 0) + (i5 << 2) >> 2] | 0) | 0) | 0;
     if (i1 >>> 0 < i6 >>> 0) {
      i4 = i1;
      i1 = i6;
      i2 = HEAP32[(HEAP32[i8 >> 2] | 0) + (i5 << 2) >> 2] | 0;
      break;
     } else {
      i4 = i6;
      i1 = i1 >>> 0 < i3 >>> 0 ? i1 : i3;
      break;
     }
    } else {
     i4 = i6;
     i1 = i3;
    } while (0);
    i5 = i5 + 1 | 0;
    i6 = i4;
    i3 = i1;
   }
   do if ((i6 | 0) != -1) {
    if ((i2 | 0) == -1) {
     i21 = 15;
     break L4;
    }
    if ((i3 | 0) == -1) {
     __ZN6vision7match_tC2Eii(i19, i12, i2);
     i1 = HEAP32[i20 >> 2] | 0;
     if (i1 >>> 0 < (HEAP32[i15 >> 2] | 0) >>> 0) {
      i9 = i19;
      i10 = HEAP32[i9 + 4 >> 2] | 0;
      i23 = i1;
      HEAP32[i23 >> 2] = HEAP32[i9 >> 2];
      HEAP32[i23 + 4 >> 2] = i10;
      HEAP32[i20 >> 2] = (HEAP32[i20 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i13, i19);
     break;
    }
    if (+(i6 >>> 0) / +(i3 >>> 0) < +HEAPF32[i16 >> 2]) {
     __ZN6vision7match_tC2Eii(i19, i12, i2);
     i1 = HEAP32[i20 >> 2] | 0;
     if (i1 >>> 0 < (HEAP32[i15 >> 2] | 0) >>> 0) {
      i9 = i19;
      i10 = HEAP32[i9 + 4 >> 2] | 0;
      i23 = i1;
      HEAP32[i23 >> 2] = HEAP32[i9 >> 2];
      HEAP32[i23 + 4 >> 2] = i10;
      HEAP32[i20 >> 2] = (HEAP32[i20 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i13, i19);
    }
   } while (0);
   i12 = i12 + 1 | 0;
  }
  if ((i21 | 0) == 15) {
   i23 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 29643) | 0, 29488) | 0, 33655) | 0, 160) | 0, 33662) | 0, 29715) | 0;
   __ZNKSt3__28ios_base6getlocEv(i19, i23 + (HEAP32[(HEAP32[i23 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i21 = __ZNKSt3__26locale9use_facetERNS0_2idE(i19, 58792) | 0;
   i21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i21 >> 2] | 0) + 28 >> 2] & 63](i21, 10) | 0;
   __ZNSt3__26localeD2Ev(i19);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i23, i21) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i23) | 0;
   _abort();
  }
  i23 = (HEAP32[i20 >> 2] | 0) - (HEAP32[i13 >> 2] | 0) >> 3;
  if (i23 >>> 0 > (__ZNK6vision18BinaryFeatureStore4sizeEv(i14) | 0) >>> 0) {
   i23 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 29733) | 0, 29488) | 0, 33655) | 0, 175) | 0, 33662) | 0, 29793) | 0;
   __ZNKSt3__28ios_base6getlocEv(i19, i23 + (HEAP32[(HEAP32[i23 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i21 = __ZNKSt3__26locale9use_facetERNS0_2idE(i19, 58792) | 0;
   i21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i21 >> 2] | 0) + 28 >> 2] & 63](i21, 10) | 0;
   __ZNSt3__26localeD2Ev(i19);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i23, i21) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i23) | 0;
   _abort();
  } else {
   i11 = (HEAP32[i20 >> 2] | 0) - (HEAP32[i13 >> 2] | 0) >> 3;
   break;
  }
 } else i11 = 0; while (0);
 STACKTOP = i22;
 return i11 | 0;
}

function __ZNSt3__26locale5__impC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 HEAP32[i1 + 4 >> 2] = i2 + -1;
 HEAP32[i1 >> 2] = 16836;
 i2 = i1 + 8 | 0;
 __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEEC2Em(i2, 28);
 i3 = i1 + 144 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i3, 47652, __ZNSt3__211char_traitsIcE6lengthEPKc(47652) | 0);
 HEAP32[i1 + 12 >> 2] = HEAP32[i2 >> 2];
 __ZNSt3__212_GLOBAL__N_14makeINS_7collateIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_(i1, 56536);
 __ZNSt3__212_GLOBAL__N_14makeINS_7collateIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_(i1, 56544);
 __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIcEEDnbjEERT_T0_T1_T2_();
 __ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_(i1, 56552);
 __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_(i1, 56568);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIcc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_(i1, 56576);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIwc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_(i1, 56584);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDsc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_(i1, 56600);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDic11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_(i1, 56608);
 __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_(i1, 56616);
 __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_(i1, 56640);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, 56672);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, 56680);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, 56688);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, 56696);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb0EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_(i1, 56704);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb1EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_(i1, 56712);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb0EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_(i1, 56720);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb1EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_(i1, 56728);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, 56736);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, 56744);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, 56752);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, 56760);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, 56768);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, 56784);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, 56800);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, 56816);
 __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_(i1, 56832);
 __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_(i1, 56840);
 return;
}

function __ZN6vision16PruneDoGFeaturesERNSt3__26vectorINS1_INS1_INS0_4pairIfmEENS0_9allocatorIS3_EEEENS4_IS6_EEEENS4_IS8_EEEERNS1_INS_25DoGScaleInvariantDetector12FeaturePointENS4_ISD_EEEERKSF_iiiii(i17, i18, i21, i1, i3, i2, i4, i10) {
 i17 = i17 | 0;
 i18 = i18 | 0;
 i21 = i21 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i10 = i10 | 0;
 var i5 = 0, i6 = 0, d7 = 0.0, d8 = 0.0, i9 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, d26 = 0.0;
 i25 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i24 = i25 + 8 | 0;
 i16 = i25 + 32 | 0;
 i15 = i25 + 28 | 0;
 i22 = i25 + 24 | 0;
 i23 = i25 + 20 | 0;
 i19 = i25 + 16 | 0;
 i20 = i25;
 i9 = Math_imul(i3, i1) | 0;
 d8 = +Math_ceil(+(+(i2 | 0) / +(i1 | 0)));
 d7 = +Math_ceil(+(+(i4 | 0) / +(i3 | 0)));
 i13 = i18 + 4 | 0;
 HEAP32[i13 >> 2] = HEAP32[i18 >> 2];
 __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE7reserveEm(i18, i10);
 i14 = i17 + 4 | 0;
 i3 = HEAP32[i17 >> 2] | 0;
 i4 = ((HEAP32[i14 >> 2] | 0) - i3 | 0) / 12 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  i6 = HEAP32[i3 + (i1 * 12 | 0) >> 2] | 0;
  i5 = ((HEAP32[i3 + (i1 * 12 | 0) + 4 >> 2] | 0) - i6 | 0) / 12 | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == (i5 | 0)) break;
   HEAP32[i6 + (i2 * 12 | 0) + 4 >> 2] = HEAP32[i6 + (i2 * 12 | 0) >> 2];
   i2 = i2 + 1 | 0;
  }
  i1 = i1 + 1 | 0;
 }
 i12 = (i10 | 0) / (i9 | 0) | 0;
 i9 = i21 + 4 | 0;
 d8 = +(~~d8 | 0);
 d7 = +(~~d7 | 0);
 i3 = i24 + 4 | 0;
 i6 = 0;
 while (1) {
  i11 = HEAP32[i21 >> 2] | 0;
  i1 = i11;
  if (i6 >>> 0 >= (((HEAP32[i9 >> 2] | 0) - i11 | 0) / 36 | 0) >>> 0) break;
  i4 = ~~(+HEAPF32[i1 + (i6 * 36 | 0) + 4 >> 2] / d7);
  i5 = HEAP32[(HEAP32[i17 >> 2] | 0) + (~~(+HEAPF32[i1 + (i6 * 36 | 0) >> 2] / d8) * 12 | 0) >> 2] | 0;
  d26 = +Math_abs(+(+HEAPF32[i1 + (i6 * 36 | 0) + 24 >> 2]));
  HEAPF32[i24 >> 2] = d26;
  HEAP32[i3 >> 2] = i6;
  i1 = i5 + (i4 * 12 | 0) + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i5 + (i4 * 12 | 0) + 8 >> 2] | 0) >>> 0) {
   i5 = i24;
   i10 = HEAP32[i5 + 4 >> 2] | 0;
   i11 = i2;
   HEAP32[i11 >> 2] = HEAP32[i5 >> 2];
   HEAP32[i11 + 4 >> 2] = i10;
   HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 8;
  } else __ZNSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i5 + (i4 * 12 | 0) | 0, i24);
  i6 = i6 + 1 | 0;
 }
 i11 = i18 + 8 | 0;
 i1 = HEAP32[i17 >> 2] | 0;
 i3 = i1;
 i10 = 0;
 i2 = i3;
 L17 : while (1) {
  if (i10 >>> 0 >= (((HEAP32[i14 >> 2] | 0) - i1 | 0) / 12 | 0) >>> 0) {
   i1 = 16;
   break;
  }
  i9 = 0;
  i4 = i3;
  while (1) {
   i6 = HEAP32[i4 + (i10 * 12 | 0) >> 2] | 0;
   i1 = i6;
   if (i9 >>> 0 >= (((HEAP32[i4 + (i10 * 12 | 0) + 4 >> 2] | 0) - i6 | 0) / 12 | 0) >>> 0) break;
   i6 = i1 + (i9 * 12 | 0) | 0;
   i1 = i1 + (i9 * 12 | 0) + 4 | 0;
   i3 = HEAP32[i1 >> 2] | 0;
   i4 = HEAP32[i6 >> 2] | 0;
   i5 = i3 - i4 >> 3;
   i5 = i12 >>> 0 < i5 >>> 0 ? i12 : i5;
   if (!i5) i1 = i2; else {
    HEAP32[i22 >> 2] = i4;
    HEAP32[i23 >> 2] = i4 + (i5 << 3);
    HEAP32[i19 >> 2] = i3;
    HEAP32[i15 >> 2] = HEAP32[i22 >> 2];
    HEAP32[i16 >> 2] = HEAP32[i23 >> 2];
    HEAP32[i24 >> 2] = HEAP32[i19 >> 2];
    __ZNSt3__213__nth_elementIRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEvT0_S9_S9_T_(i15, i16, i24, i20);
    i3 = HEAP32[i6 >> 2] | 0;
    i4 = i3;
    if (i5 >>> 0 > (HEAP32[i1 >> 2] | 0) - i3 >> 3 >>> 0 ? !(+HEAPF32[i4 >> 2] >= +HEAPF32[i4 + (i5 << 3) >> 2]) : 0) {
     i1 = 23;
     break L17;
    }
    i4 = 0;
    while (1) {
     if (i4 >>> 0 >= i5 >>> 0) break;
     i2 = (HEAP32[i21 >> 2] | 0) + ((HEAP32[(HEAP32[i6 >> 2] | 0) + (i4 << 3) + 4 >> 2] | 0) * 36 | 0) | 0;
     i1 = HEAP32[i13 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i11 >> 2] | 0)) __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i18, i2); else {
      i3 = i1 + 36 | 0;
      do {
       HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
       i1 = i1 + 4 | 0;
       i2 = i2 + 4 | 0;
      } while ((i1 | 0) < (i3 | 0));
      HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 36;
     }
     i4 = i4 + 1 | 0;
    }
    i1 = HEAP32[i17 >> 2] | 0;
   }
   i9 = i9 + 1 | 0;
   i2 = i1;
   i4 = i1;
  }
  i10 = i10 + 1 | 0;
  i3 = i4;
  i1 = i4;
 }
 if ((i1 | 0) == 16) {
  STACKTOP = i25;
  return;
 } else if ((i1 | 0) == 23) {
  i25 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 22214) | 0, 20647) | 0, 33655) | 0, 661) | 0, 33662) | 0, 22272) | 0;
  __ZNKSt3__28ios_base6getlocEv(i24, i25 + (HEAP32[(HEAP32[i25 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i23 = __ZNKSt3__26locale9use_facetERNS0_2idE(i24, 58792) | 0;
  i23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i23 >> 2] | 0) + 28 >> 2] & 63](i23, 10) | 0;
  __ZNSt3__26localeD2Ev(i24);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i25, i23) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i25) | 0;
  _abort();
 }
}

function __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(i28, i29, i30, i31, i1, i21, i22, i23, i24, i25, i10, i11, i12, i26, i13) {
 i28 = i28 | 0;
 i29 = i29 | 0;
 i30 = i30 | 0;
 i31 = i31 | 0;
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i25 = i25 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i26 = i26 | 0;
 i13 = i13 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i27 = 0, i32 = 0;
 HEAP32[i30 >> 2] = i28;
 i14 = i26 + 8 + 3 | 0;
 i27 = i26 + 4 | 0;
 i15 = i12 + 8 + 3 | 0;
 i16 = i12 + 4 | 0;
 i17 = (i31 & 512 | 0) == 0;
 i18 = (i13 | 0) > 0;
 i19 = i11 + 11 | 0;
 i20 = i11 + 4 | 0;
 i9 = 0;
 while (1) {
  if ((i9 | 0) == 4) break;
  L4 : do switch (HEAP8[i24 + i9 >> 0] | 0) {
  case 0:
   {
    HEAP32[i29 >> 2] = HEAP32[i30 >> 2];
    break;
   }
  case 1:
   {
    HEAP32[i29 >> 2] = HEAP32[i30 >> 2];
    i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i22 >> 2] | 0) + 44 >> 2] & 63](i22, 32) | 0;
    i8 = HEAP32[i30 >> 2] | 0;
    HEAP32[i30 >> 2] = i8 + 4;
    HEAP32[i8 >> 2] = i7;
    break;
   }
  case 3:
   {
    i8 = HEAP8[i14 >> 0] | 0;
    i2 = i8 << 24 >> 24 < 0;
    if ((i2 ? HEAP32[i27 >> 2] | 0 : i8 & 255) | 0) {
     i7 = HEAP32[(i2 ? HEAP32[i26 >> 2] | 0 : i26) >> 2] | 0;
     i8 = HEAP32[i30 >> 2] | 0;
     HEAP32[i30 >> 2] = i8 + 4;
     HEAP32[i8 >> 2] = i7;
    }
    break;
   }
  case 2:
   {
    i6 = HEAP8[i15 >> 0] | 0;
    i2 = i6 << 24 >> 24 < 0;
    i6 = i2 ? HEAP32[i16 >> 2] | 0 : i6 & 255;
    if (!(i17 | (i6 | 0) == 0)) {
     i5 = i2 ? HEAP32[i12 >> 2] | 0 : i12;
     i3 = i5 + (i6 << 2) | 0;
     i4 = HEAP32[i30 >> 2] | 0;
     i2 = i4;
     while (1) {
      if ((i5 | 0) == (i3 | 0)) break;
      HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
      i2 = i2 + 4 | 0;
      i5 = i5 + 4 | 0;
     }
     HEAP32[i30 >> 2] = i4 + (i6 << 2);
    }
    break;
   }
  case 4:
   {
    i3 = HEAP32[i30 >> 2] | 0;
    i1 = i23 ? i1 + 4 | 0 : i1;
    i2 = i1;
    while (1) {
     if (i2 >>> 0 >= i21 >>> 0) break;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i22 >> 2] | 0) + 12 >> 2] & 63](i22, 2048, HEAP32[i2 >> 2] | 0) | 0)) break;
     i2 = i2 + 4 | 0;
    }
    if (i18) {
     i5 = i13;
     while (1) {
      i4 = (i5 | 0) > 0;
      if (!(i2 >>> 0 > i1 >>> 0 & i4)) break;
      i8 = i2 + -4 | 0;
      i6 = HEAP32[i8 >> 2] | 0;
      i7 = HEAP32[i30 >> 2] | 0;
      HEAP32[i30 >> 2] = i7 + 4;
      HEAP32[i7 >> 2] = i6;
      i5 = i5 + -1 | 0;
      i2 = i8;
     }
     if (i4) i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i22 >> 2] | 0) + 44 >> 2] & 63](i22, 48) | 0; else i7 = 0;
     i6 = HEAP32[i30 >> 2] | 0;
     while (1) {
      i4 = i6 + 4 | 0;
      if ((i5 | 0) <= 0) break;
      HEAP32[i6 >> 2] = i7;
      i5 = i5 + -1 | 0;
      i6 = i4;
     }
     HEAP32[i30 >> 2] = i4;
     HEAP32[i6 >> 2] = i25;
     i4 = i2;
    } else i4 = i2;
    if ((i4 | 0) == (i1 | 0)) {
     i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i22 >> 2] | 0) + 44 >> 2] & 63](i22, 48) | 0;
     i8 = HEAP32[i30 >> 2] | 0;
     i2 = i8 + 4 | 0;
     HEAP32[i30 >> 2] = i2;
     HEAP32[i8 >> 2] = i7;
    } else {
     i8 = HEAP8[i19 >> 0] | 0;
     i2 = i8 << 24 >> 24 < 0;
     if (!((i2 ? HEAP32[i20 >> 2] | 0 : i8 & 255) | 0)) i2 = -1; else i2 = HEAP8[(i2 ? HEAP32[i11 >> 2] | 0 : i11) >> 0] | 0;
     i5 = 0;
     i6 = 0;
     i8 = i4;
     while (1) {
      if ((i8 | 0) == (i1 | 0)) break;
      i4 = HEAP32[i30 >> 2] | 0;
      if ((i6 | 0) == (i2 | 0)) {
       i7 = i4 + 4 | 0;
       HEAP32[i30 >> 2] = i7;
       HEAP32[i4 >> 2] = i10;
       i4 = i5 + 1 | 0;
       i5 = HEAP8[i19 >> 0] | 0;
       i2 = i5 << 24 >> 24 < 0;
       if (i4 >>> 0 < (i2 ? HEAP32[i20 >> 2] | 0 : i5 & 255) >>> 0) {
        i2 = HEAP8[(i2 ? HEAP32[i11 >> 2] | 0 : i11) + i4 >> 0] | 0;
        i2 = i2 << 24 >> 24 == 127 ? -1 : i2 << 24 >> 24;
        i5 = i4;
        i6 = 0;
        i4 = i7;
       } else {
        i2 = i6;
        i5 = i4;
        i6 = 0;
        i4 = i7;
       }
      }
      i7 = i8 + -4 | 0;
      i32 = HEAP32[i7 >> 2] | 0;
      HEAP32[i30 >> 2] = i4 + 4;
      HEAP32[i4 >> 2] = i32;
      i6 = i6 + 1 | 0;
      i8 = i7;
     }
     i2 = HEAP32[i30 >> 2] | 0;
    }
    if ((i3 | 0) != (i2 | 0)) while (1) {
     i2 = i2 + -4 | 0;
     if (i3 >>> 0 >= i2 >>> 0) break L4;
     i32 = HEAP32[i3 >> 2] | 0;
     HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
     HEAP32[i2 >> 2] = i32;
     i3 = i3 + 4 | 0;
    }
    break;
   }
  default:
   {}
  } while (0);
  i9 = i9 + 1 | 0;
 }
 i2 = HEAP8[i14 >> 0] | 0;
 i1 = i2 << 24 >> 24 < 0;
 i2 = i1 ? HEAP32[i27 >> 2] | 0 : i2 & 255;
 if (i2 >>> 0 > 1) {
  i3 = HEAP32[i26 >> 2] | 0;
  i5 = i1 ? i3 + 4 | 0 : i27;
  i2 = (i1 ? i3 : i26) + (i2 << 2) | 0;
  i3 = HEAP32[i30 >> 2] | 0;
  i4 = i2 - i5 | 0;
  i1 = i3;
  while (1) {
   if ((i5 | 0) == (i2 | 0)) break;
   HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
   i1 = i1 + 4 | 0;
   i5 = i5 + 4 | 0;
  }
  HEAP32[i30 >> 2] = i3 + (i4 >>> 2 << 2);
 }
 switch ((i31 & 176) << 24 >> 24) {
 case 32:
  {
   HEAP32[i29 >> 2] = HEAP32[i30 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[i29 >> 2] = i28;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i3, i9) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i9 = i9 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i10 = i11 + 8 | 0;
 i8 = i11;
 L1 : do if ((i1 | 0) != (i3 | 0)) switch (HEAP8[i1 >> 0] | 0) {
 case 84:
  {
   i7 = i9 + 4 | 0;
   i6 = ((HEAP32[i7 >> 2] | 0) - (HEAP32[i9 >> 2] | 0) | 0) / 24 | 0;
   i5 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i3, i9) | 0;
   i3 = HEAP32[i7 >> 2] | 0;
   i4 = (i3 - (HEAP32[i9 >> 2] | 0) | 0) / 24 | 0;
   if ((i5 | 0) != (i1 | 0) & (i4 | 0) == (i6 + 1 | 0)) {
    HEAP32[i8 >> 2] = HEAP32[i9 + 12 >> 2];
    __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i10, i3 + -24 | 0, i8);
    i1 = i9 + 20 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[i9 + 24 >> 2] | 0) >>> 0) {
     HEAP32[i2 >> 2] = 0;
     i8 = i2 + 4 | 0;
     HEAP32[i8 >> 2] = 0;
     i7 = i2 + 8 | 0;
     HEAP32[i7 >> 2] = 0;
     HEAP32[i2 + 12 >> 2] = HEAP32[i10 + 12 >> 2];
     HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
     i9 = i10 + 4 | 0;
     HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
     i8 = i10 + 8 | 0;
     HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
     HEAP32[i8 >> 2] = 0;
     HEAP32[i9 >> 2] = 0;
     HEAP32[i10 >> 2] = 0;
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i9 + 16 | 0, i10);
    __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i10);
    i1 = i5;
    break L1;
   }
   while (1) {
    if ((i4 | 0) == (i6 | 0)) break L1;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == -1) break;
     i10 = i2 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i10 * 24 | 0) | 0);
     i2 = i10;
    }
    i10 = i3 + -24 | 0;
    HEAP32[i7 >> 2] = i10;
    i4 = i4 + -1 | 0;
    i3 = i10;
   }
  }
 case 68:
  {
   i3 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_(i1, i3, i9) | 0;
   if ((i3 | 0) == (i1 | 0)) break L1;
   i2 = HEAP32[i9 + 4 >> 2] | 0;
   if ((HEAP32[i9 >> 2] | 0) == (i2 | 0)) break L1;
   HEAP32[i8 >> 2] = HEAP32[i9 + 12 >> 2];
   __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i10, i2 + -24 | 0, i8);
   i1 = i9 + 20 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[i9 + 24 >> 2] | 0) >>> 0) {
    HEAP32[i2 >> 2] = 0;
    i8 = i2 + 4 | 0;
    HEAP32[i8 >> 2] = 0;
    i7 = i2 + 8 | 0;
    HEAP32[i7 >> 2] = 0;
    HEAP32[i2 + 12 >> 2] = HEAP32[i10 + 12 >> 2];
    HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
    i9 = i10 + 4 | 0;
    HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
    i8 = i10 + 8 | 0;
    HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
    HEAP32[i8 >> 2] = 0;
    HEAP32[i9 >> 2] = 0;
    HEAP32[i10 >> 2] = 0;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 16;
   } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i9 + 16 | 0, i10);
   __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i10);
   i1 = i3;
   break L1;
  }
 case 83:
  {
   i2 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i1, i3, i9) | 0;
   if ((i2 | 0) != (i1 | 0)) {
    i1 = i2;
    break L1;
   }
   if ((i3 - i1 | 0) <= 2) break L1;
   if ((HEAP8[i1 + 1 >> 0] | 0) != 116) break L1;
   i7 = i1 + 2 | 0;
   i4 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_(i7, i3, i9) | 0;
   if ((i4 | 0) == (i7 | 0)) break L1;
   i2 = i9 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if ((HEAP32[i9 >> 2] | 0) == (i3 | 0)) break L1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i3 + -24 | 0, 0, 50820) | 0;
   i1 = (HEAP32[i2 >> 2] | 0) + -24 | 0;
   HEAP32[i8 >> 2] = HEAP32[i9 + 12 >> 2];
   __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i10, i1, i8);
   i1 = i9 + 20 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[i9 + 24 >> 2] | 0) >>> 0) {
    HEAP32[i2 >> 2] = 0;
    i8 = i2 + 4 | 0;
    HEAP32[i8 >> 2] = 0;
    i7 = i2 + 8 | 0;
    HEAP32[i7 >> 2] = 0;
    HEAP32[i2 + 12 >> 2] = HEAP32[i10 + 12 >> 2];
    HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
    i9 = i10 + 4 | 0;
    HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
    i8 = i10 + 8 | 0;
    HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
    HEAP32[i8 >> 2] = 0;
    HEAP32[i9 >> 2] = 0;
    HEAP32[i10 >> 2] = 0;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 16;
   } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i9 + 16 | 0, i10);
   __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i10);
   i1 = i4;
   break L1;
  }
 default:
  break L1;
 } while (0);
 STACKTOP = i11;
 return i1 | 0;
}

function _get_sof(i11, i3, i4) {
 i11 = i11 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0;
 i12 = HEAP32[i11 + 24 >> 2] | 0;
 i2 = HEAP32[i12 >> 2] | 0;
 i13 = i12 + 4 | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 HEAP32[i11 + 220 >> 2] = i3;
 HEAP32[i11 + 224 >> 2] = i4;
 if (!i1) if (!(FUNCTION_TABLE_ii[HEAP32[i12 + 12 >> 2] & 127](i11) | 0)) i1 = 0; else {
  i1 = HEAP32[i13 >> 2] | 0;
  i2 = HEAP32[i12 >> 2] | 0;
  i5 = 4;
 } else i5 = 4;
 L4 : do if ((i5 | 0) == 4) {
  i1 = i1 + -1 | 0;
  i3 = i2 + 1 | 0;
  i4 = (HEAPU8[i2 >> 0] | 0) << 8;
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i12 + 12 >> 2] & 127](i11) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i13 >> 2] | 0;
   i2 = HEAP32[i12 >> 2] | 0;
  } else i2 = i3;
  i1 = i1 + -1 | 0;
  i3 = i2 + 1 | 0;
  i7 = i4 | (HEAPU8[i2 >> 0] | 0);
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i12 + 12 >> 2] & 127](i11) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i13 >> 2] | 0;
   i2 = HEAP32[i12 >> 2] | 0;
  } else i2 = i3;
  i1 = i1 + -1 | 0;
  i3 = i2 + 1 | 0;
  HEAP32[i11 + 212 >> 2] = HEAPU8[i2 >> 0];
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i12 + 12 >> 2] & 127](i11) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i13 >> 2] | 0;
   i2 = HEAP32[i12 >> 2] | 0;
  } else i2 = i3;
  i1 = i1 + -1 | 0;
  i3 = i2 + 1 | 0;
  i2 = (HEAPU8[i2 >> 0] | 0) << 8;
  i6 = i11 + 32 | 0;
  HEAP32[i6 >> 2] = i2;
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i12 + 12 >> 2] & 127](i11) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i13 >> 2] | 0;
   i3 = HEAP32[i12 >> 2] | 0;
   i4 = HEAP32[i6 >> 2] | 0;
  } else i4 = i2;
  i1 = i1 + -1 | 0;
  i2 = i3 + 1 | 0;
  HEAP32[i6 >> 2] = i4 + (HEAPU8[i3 >> 0] | 0);
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i12 + 12 >> 2] & 127](i11) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i13 >> 2] | 0;
   i2 = HEAP32[i12 >> 2] | 0;
  }
  i1 = i1 + -1 | 0;
  i3 = i2 + 1 | 0;
  i2 = (HEAPU8[i2 >> 0] | 0) << 8;
  i5 = i11 + 28 | 0;
  HEAP32[i5 >> 2] = i2;
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i12 + 12 >> 2] & 127](i11) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i13 >> 2] | 0;
   i4 = HEAP32[i12 >> 2] | 0;
   i2 = HEAP32[i5 >> 2] | 0;
  } else i4 = i3;
  i1 = i1 + -1 | 0;
  i3 = i4 + 1 | 0;
  HEAP32[i5 >> 2] = i2 + (HEAPU8[i4 >> 0] | 0);
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i12 + 12 >> 2] & 127](i11) | 0)) {
    i1 = 0;
    break;
   }
   i4 = HEAP32[i13 >> 2] | 0;
   i3 = HEAP32[i12 >> 2] | 0;
  } else i4 = i1;
  i10 = i11 + 36 | 0;
  HEAP32[i10 >> 2] = HEAPU8[i3 >> 0];
  i2 = i7 + -8 | 0;
  i9 = HEAP32[i11 >> 2] | 0;
  HEAP32[i9 + 24 >> 2] = HEAP32[i11 + 416 >> 2];
  HEAP32[i9 + 28 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i9 + 32 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i9 + 36 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 20 >> 2] = 100;
  FUNCTION_TABLE_vii[HEAP32[i9 + 4 >> 2] & 63](i11, 1);
  i9 = i11 + 440 | 0;
  if (HEAP32[(HEAP32[i9 >> 2] | 0) + 16 >> 2] | 0) {
   i7 = HEAP32[i11 >> 2] | 0;
   HEAP32[i7 + 20 >> 2] = 58;
   FUNCTION_TABLE_vi[HEAP32[i7 >> 2] & 255](i11);
  }
  if (((HEAP32[i6 >> 2] | 0) != 0 ? (HEAP32[i5 >> 2] | 0) != 0 : 0) ? (i8 = HEAP32[i10 >> 2] | 0, (i8 | 0) >= 1) : 0) i1 = i8; else {
   i1 = HEAP32[i11 >> 2] | 0;
   HEAP32[i1 + 20 >> 2] = 32;
   FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i11);
   i1 = HEAP32[i10 >> 2] | 0;
  }
  if ((i2 | 0) != (i1 * 3 | 0)) {
   i8 = HEAP32[i11 >> 2] | 0;
   HEAP32[i8 + 20 >> 2] = 11;
   FUNCTION_TABLE_vi[HEAP32[i8 >> 2] & 255](i11);
  }
  i1 = i11 + 216 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (!i2) {
   i2 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i11 + 4 >> 2] >> 2] & 63](i11, 1, (HEAP32[i10 >> 2] | 0) * 84 | 0) | 0;
   HEAP32[i1 >> 2] = i2;
  }
  i8 = i12 + 12 | 0;
  i7 = 0;
  i1 = i4;
  while (1) {
   i1 = i1 + -1 | 0;
   i3 = i3 + 1 | 0;
   if ((i7 | 0) >= (HEAP32[i10 >> 2] | 0)) break;
   HEAP32[i2 + 4 >> 2] = i7;
   if (!i1) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i8 >> 2] & 127](i11) | 0)) {
     i1 = 0;
     break L4;
    }
    i1 = HEAP32[i13 >> 2] | 0;
    i3 = HEAP32[i12 >> 2] | 0;
   }
   i1 = i1 + -1 | 0;
   i4 = i3 + 1 | 0;
   HEAP32[i2 >> 2] = HEAPU8[i3 >> 0];
   if (!i1) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i8 >> 2] & 127](i11) | 0)) {
     i1 = 0;
     break L4;
    }
    i1 = HEAP32[i13 >> 2] | 0;
    i3 = HEAP32[i12 >> 2] | 0;
   } else i3 = i4;
   i1 = i1 + -1 | 0;
   i4 = i3 + 1 | 0;
   i3 = HEAPU8[i3 >> 0] | 0;
   i5 = i2 + 8 | 0;
   HEAP32[i5 >> 2] = i3 >>> 4;
   i6 = i2 + 12 | 0;
   HEAP32[i6 >> 2] = i3 & 15;
   if (!i1) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i8 >> 2] & 127](i11) | 0)) {
     i1 = 0;
     break L4;
    }
    i1 = HEAP32[i13 >> 2] | 0;
    i3 = HEAP32[i12 >> 2] | 0;
   } else i3 = i4;
   i14 = i2 + 16 | 0;
   HEAP32[i14 >> 2] = HEAPU8[i3 >> 0];
   i4 = HEAP32[i11 >> 2] | 0;
   HEAP32[i4 + 24 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i4 + 28 >> 2] = HEAP32[i5 >> 2];
   HEAP32[i4 + 32 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i4 + 36 >> 2] = HEAP32[i14 >> 2];
   HEAP32[i4 + 20 >> 2] = 101;
   FUNCTION_TABLE_vii[HEAP32[i4 + 4 >> 2] & 63](i11, 1);
   i7 = i7 + 1 | 0;
   i2 = i2 + 84 | 0;
  }
  HEAP32[(HEAP32[i9 >> 2] | 0) + 16 >> 2] = 1;
  HEAP32[i12 >> 2] = i3;
  HEAP32[i13 >> 2] = i1;
  i1 = 1;
 } while (0);
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_conversion_exprINS0_2DbEEEPKcS4_S4_RT_(i5, i3, i6) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i7 = i14 + 88 | 0;
 i8 = i14 + 64 | 0;
 i9 = i14 + 36 | 0;
 i10 = i14 + 48 | 0;
 i11 = i14 + 24 | 0;
 i12 = i14 + 12 | 0;
 i13 = i14;
 L1 : do if ((((i3 - i5 | 0) > 2 ? (HEAP8[i5 >> 0] | 0) == 99 : 0) ? (HEAP8[i5 + 1 >> 0] | 0) == 118 : 0) ? (i1 = i6 + 63 | 0, i15 = HEAP8[i1 >> 0] | 0, HEAP8[i1 >> 0] = 0, i4 = i5 + 2 | 0, i2 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i4, i3, i6) | 0, HEAP8[i1 >> 0] = i15, !((i2 | 0) == (i4 | 0) | (i2 | 0) == (i3 | 0))) : 0) {
  if ((HEAP8[i2 >> 0] | 0) != 95) {
   i1 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i3, i6) | 0;
   if ((i1 | 0) == (i2 | 0)) {
    i1 = i5;
    break;
   }
  } else {
   i1 = i2 + 1 | 0;
   if ((i1 | 0) == (i3 | 0)) {
    i1 = i5;
    break;
   }
   i2 = HEAP8[i1 >> 0] | 0;
   L9 : do if (i2 << 24 >> 24 == 69) {
    i2 = i6 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i6 + 8 >> 2] | 0) >>> 0) {
     HEAP32[i3 >> 2] = 0;
     HEAP32[i3 + 4 >> 2] = 0;
     HEAP32[i3 + 8 >> 2] = 0;
     HEAP32[i3 + 12 >> 2] = 0;
     HEAP32[i3 + 16 >> 2] = 0;
     HEAP32[i3 + 20 >> 2] = 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev(i3);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     break;
    } else {
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_(i6);
     break;
    }
   } else while (1) {
    if (i2 << 24 >> 24 == 69) break L9;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i1, i3, i6) | 0;
    if ((i2 | 0) == (i1 | 0) | (i2 | 0) == (i3 | 0)) {
     i1 = i5;
     break L1;
    }
    i1 = i2;
    i2 = HEAP8[i2 >> 0] | 0;
   } while (0);
   i1 = i1 + 1 | 0;
  }
  i4 = i6 + 4 | 0;
  i2 = HEAP32[i4 >> 2] | 0;
  if (((i2 - (HEAP32[i6 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, i2 + -24 | 0);
   i3 = HEAP32[i4 >> 2] | 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == -1) break;
    i15 = i2 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i15 * 24 | 0) | 0);
    i2 = i15;
   }
   HEAP32[i4 >> 2] = i3 + -24;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i13, i3 + -48 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i13, 0, 50526) | 0;
   HEAP32[i12 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i12 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i12 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i13 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i12, 51690) | 0;
   HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i11 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
   HEAP32[i11 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i12 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   i2 = HEAP8[i7 + 11 >> 0] | 0;
   i15 = i2 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i11, i15 ? HEAP32[i7 >> 2] | 0 : i7, i15 ? HEAP32[i7 + 4 >> 2] | 0 : i2 & 255) | 0;
   HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i11 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 50524) | 0;
   HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i10 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i8, i9);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i4 >> 2] | 0) + -24 | 0, i8);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  } else i1 = i5;
 } else i1 = i5; while (0);
 STACKTOP = i14;
 return i1 | 0;
}

function _jpeg_idct_islow(i1, i3, i4, i9, i10) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i2 = i12;
 i8 = HEAP32[i1 + 324 >> 2] | 0;
 i6 = 8;
 i7 = i2;
 i5 = HEAP32[i3 + 80 >> 2] | 0;
 while (1) {
  if (!i6) break;
  i3 = HEAP16[i4 + 16 >> 1] | 0;
  i1 = HEAP16[i4 + 32 >> 1] | 0;
  if (!((i3 | i1) << 16 >> 16)) if (((((HEAP16[i4 + 48 >> 1] | 0) == 0 ? (HEAP16[i4 + 64 >> 1] | 0) == 0 : 0) ? (HEAP16[i4 + 80 >> 1] | 0) == 0 : 0) ? (HEAP16[i4 + 96 >> 1] | 0) == 0 : 0) ? (HEAP16[i4 + 112 >> 1] | 0) == 0 : 0) {
   i1 = Math_imul(HEAP16[i4 >> 1] << 2, HEAP32[i5 >> 2] | 0) | 0;
   HEAP32[i7 >> 2] = i1;
   HEAP32[i7 + 32 >> 2] = i1;
   HEAP32[i7 + 64 >> 2] = i1;
   HEAP32[i7 + 96 >> 2] = i1;
   HEAP32[i7 + 128 >> 2] = i1;
   HEAP32[i7 + 160 >> 2] = i1;
   HEAP32[i7 + 192 >> 2] = i1;
   i3 = 56;
  } else {
   i1 = 0;
   i11 = 10;
  } else i11 = 10;
  if ((i11 | 0) == 10) {
   i11 = 0;
   i13 = Math_imul(HEAP32[i5 + 64 >> 2] | 0, i1 << 16 >> 16) | 0;
   i15 = Math_imul(HEAP32[i5 + 192 >> 2] | 0, HEAP16[i4 + 96 >> 1] | 0) | 0;
   i1 = (i15 + i13 | 0) * 4433 | 0;
   i15 = i1 + (Math_imul(i15, -15137) | 0) | 0;
   i13 = i1 + (i13 * 6270 | 0) | 0;
   i1 = Math_imul(HEAP32[i5 >> 2] | 0, HEAP16[i4 >> 1] | 0) | 0;
   i16 = Math_imul(HEAP32[i5 + 128 >> 2] | 0, HEAP16[i4 + 64 >> 1] | 0) | 0;
   i14 = i16 + i1 << 13;
   i16 = i1 - i16 << 13;
   i1 = Math_imul(HEAP32[i5 + 224 >> 2] | 0, HEAP16[i4 + 112 >> 1] | 0) | 0;
   i23 = Math_imul(HEAP32[i5 + 160 >> 2] | 0, HEAP16[i4 + 80 >> 1] | 0) | 0;
   i21 = Math_imul(HEAP32[i5 + 96 >> 2] | 0, HEAP16[i4 + 48 >> 1] | 0) | 0;
   i19 = Math_imul(HEAP32[i5 + 32 >> 2] | 0, i3 << 16 >> 16) | 0;
   i17 = i21 + i1 | 0;
   i18 = i19 + i23 | 0;
   i3 = (i18 + i17 | 0) * 9633 | 0;
   i20 = Math_imul(i19 + i1 | 0, -7373) | 0;
   i22 = Math_imul(i21 + i23 | 0, -20995) | 0;
   i17 = i3 + (Math_imul(i17, -16069) | 0) | 0;
   i18 = i3 + (Math_imul(i18, -3196) | 0) | 0;
   i1 = i20 + (i1 * 2446 | 0) + i17 | 0;
   i3 = i22 + (i23 * 16819 | 0) + i18 | 0;
   i17 = i22 + (i21 * 25172 | 0) + i17 | 0;
   i18 = i20 + (i19 * 12299 | 0) + i18 | 0;
   i19 = i14 + i13 + 1024 | 0;
   HEAP32[i7 >> 2] = i19 + i18 >> 11;
   HEAP32[i7 + 224 >> 2] = i19 - i18 >> 11;
   i18 = i16 + i15 + 1024 | 0;
   HEAP32[i7 + 32 >> 2] = i18 + i17 >> 11;
   HEAP32[i7 + 192 >> 2] = i18 - i17 >> 11;
   i15 = i16 - i15 + 1024 | 0;
   HEAP32[i7 + 64 >> 2] = i15 + i3 >> 11;
   HEAP32[i7 + 160 >> 2] = i15 - i3 >> 11;
   i3 = i14 - i13 + 1024 | 0;
   HEAP32[i7 + 96 >> 2] = i3 + i1 >> 11;
   i1 = i3 - i1 >> 11;
   i3 = 32;
  }
  HEAP32[i7 + (i3 << 2) >> 2] = i1;
  i6 = i6 + -1 | 0;
  i7 = i7 + 4 | 0;
  i5 = i5 + 4 | 0;
  i4 = i4 + 2 | 0;
 }
 i6 = i8 + 128 | 0;
 i5 = 0;
 while (1) {
  if ((i5 | 0) == 8) break;
  i3 = (HEAP32[i9 + (i5 << 2) >> 2] | 0) + i10 | 0;
  i4 = HEAP32[i2 + 4 >> 2] | 0;
  i1 = HEAP32[i2 + 8 >> 2] | 0;
  if (!(i4 | i1)) if (((((HEAP32[i2 + 12 >> 2] | 0) == 0 ? (HEAP32[i2 + 16 >> 2] | 0) == 0 : 0) ? (HEAP32[i2 + 20 >> 2] | 0) == 0 : 0) ? (HEAP32[i2 + 24 >> 2] | 0) == 0 : 0) ? (HEAP32[i2 + 28 >> 2] | 0) == 0 : 0) {
   i23 = HEAP8[i6 + (((HEAP32[i2 >> 2] | 0) + 16 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i3 >> 0] = i23;
   _memset(i3 + 1 | 0, i23 | 0, 7) | 0;
  } else {
   i1 = 0;
   i11 = 21;
  } else i11 = 21;
  if ((i11 | 0) == 21) {
   i11 = 0;
   i19 = HEAP32[i2 + 24 >> 2] | 0;
   i22 = (i19 + i1 | 0) * 4433 | 0;
   i19 = i22 + (Math_imul(i19, -15137) | 0) | 0;
   i22 = i22 + (i1 * 6270 | 0) | 0;
   i23 = HEAP32[i2 >> 2] | 0;
   i18 = HEAP32[i2 + 16 >> 2] | 0;
   i21 = i18 + i23 << 13;
   i18 = i23 - i18 << 13;
   i23 = HEAP32[i2 + 28 >> 2] | 0;
   i20 = HEAP32[i2 + 20 >> 2] | 0;
   i14 = HEAP32[i2 + 12 >> 2] | 0;
   i17 = i14 + i23 | 0;
   i16 = i20 + i4 | 0;
   i8 = (i17 + i16 | 0) * 9633 | 0;
   i15 = Math_imul(i23 + i4 | 0, -7373) | 0;
   i13 = Math_imul(i14 + i20 | 0, -20995) | 0;
   i17 = i8 + (Math_imul(i17, -16069) | 0) | 0;
   i16 = i8 + (Math_imul(i16, -3196) | 0) | 0;
   i23 = i15 + (i23 * 2446 | 0) + i17 | 0;
   i20 = i13 + (i20 * 16819 | 0) + i16 | 0;
   i17 = i13 + (i14 * 25172 | 0) + i17 | 0;
   i16 = i15 + (i4 * 12299 | 0) + i16 | 0;
   i15 = i21 + i22 + 131072 | 0;
   HEAP8[i3 >> 0] = HEAP8[i6 + ((i15 + i16 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[i3 + 7 >> 0] = HEAP8[i6 + ((i15 - i16 | 0) >>> 18 & 1023) >> 0] | 0;
   i16 = i18 + i19 + 131072 | 0;
   HEAP8[i3 + 1 >> 0] = HEAP8[i6 + ((i16 + i17 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[i3 + 6 >> 0] = HEAP8[i6 + ((i16 - i17 | 0) >>> 18 & 1023) >> 0] | 0;
   i19 = i18 - i19 + 131072 | 0;
   HEAP8[i3 + 2 >> 0] = HEAP8[i6 + ((i19 + i20 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[i3 + 5 >> 0] = HEAP8[i6 + ((i19 - i20 | 0) >>> 18 & 1023) >> 0] | 0;
   i22 = i21 - i22 + 131072 | 0;
   HEAP8[i3 + 3 >> 0] = HEAP8[i6 + ((i22 + i23 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[i3 + 4 >> 0] = HEAP8[i6 + ((i22 - i23 | 0) >>> 18 & 1023) >> 0] | 0;
  }
  i5 = i5 + 1 | 0;
  i2 = i2 + 32 | 0;
 }
 STACKTOP = i12;
 return;
}

function _mbsrtowcs(i5, i9, i1, i3) {
 i5 = i5 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0;
 i2 = HEAP32[i9 >> 2] | 0;
 if ((i3 | 0) != 0 ? (i4 = HEAP32[i3 >> 2] | 0, (i4 | 0) != 0) : 0) if (!i5) {
  i6 = i2;
  i3 = i1;
  i8 = 26;
 } else {
  HEAP32[i3 >> 2] = 0;
  i7 = i1;
  i6 = i2;
  i8 = 48;
 } else i8 = 5;
 L5 : do if ((i8 | 0) == 5) {
  i8 = (___pthread_self_300() | 0) + 188 | 0;
  i3 = (i5 | 0) != 0;
  if (HEAP32[HEAP32[i8 >> 2] >> 2] | 0) if (i3) {
   i3 = i1;
   i8 = 33;
   break;
  } else {
   i3 = i1;
   i8 = 15;
   break;
  }
  if (!i3) {
   i1 = _strlen(i2) | 0;
   i8 = 63;
   break;
  }
  L13 : do if (i1) {
   i3 = i1;
   while (1) {
    i4 = HEAP8[i2 >> 0] | 0;
    if (!(i4 << 24 >> 24)) break;
    i2 = i2 + 1 | 0;
    HEAP32[i5 >> 2] = i4 << 24 >> 24 & 57343;
    i3 = i3 + -1 | 0;
    if (!i3) break L13; else i5 = i5 + 4 | 0;
   }
   HEAP32[i5 >> 2] = 0;
   HEAP32[i9 >> 2] = 0;
   i1 = i1 - i3 | 0;
   i8 = 63;
   break L5;
  } while (0);
  HEAP32[i9 >> 2] = i2;
  i8 = 63;
 } while (0);
 L20 : while (1) {
  L21 : do if ((i8 | 0) == 15) {
   while (1) {
    i4 = HEAP8[i2 >> 0] | 0;
    if (((i4 & 255) + -1 | 0) >>> 0 < 127 ? (i2 & 3 | 0) == 0 : 0) {
     i8 = HEAP32[i2 >> 2] | 0;
     i4 = i8 & 255;
     if (!((i8 + -16843009 | i8) & -2139062144)) {
      do {
       i2 = i2 + 4 | 0;
       i3 = i3 + -4 | 0;
       i4 = HEAP32[i2 >> 2] | 0;
      } while (!((i4 + -16843009 | i4) & -2139062144 | 0));
      i4 = i4 & 255;
     }
    }
    i4 = i4 & 255;
    if ((i4 + -1 | 0) >>> 0 >= 127) break;
    i3 = i3 + -1 | 0;
    i2 = i2 + 1 | 0;
   }
   i4 = i4 + -194 | 0;
   if (i4 >>> 0 > 50) i8 = 57; else {
    i4 = HEAP32[3472 + (i4 << 2) >> 2] | 0;
    i6 = i2 + 1 | 0;
    i8 = 26;
    continue L20;
   }
  } else if ((i8 | 0) == 26) {
   i8 = (HEAPU8[i6 >> 0] | 0) >>> 3;
   if ((i8 + -16 | i8 + (i4 >> 26)) >>> 0 > 7) {
    i2 = i6;
    i8 = 56;
   } else {
    i2 = i6 + 1 | 0;
    if (i4 & 33554432) {
     if ((HEAP8[i2 >> 0] & -64) << 24 >> 24 != -128) {
      i2 = i6;
      i8 = 56;
      break;
     }
     i2 = i6 + 2 | 0;
     if (i4 & 524288) {
      if ((HEAP8[i2 >> 0] & -64) << 24 >> 24 != -128) {
       i2 = i6;
       i8 = 56;
       break;
      }
      i2 = i6 + 3 | 0;
     }
    }
    i3 = i3 + -1 | 0;
    i8 = 15;
    continue L20;
   }
  } else if ((i8 | 0) == 33) {
   i8 = 0;
   L23 : do if (i3) {
    while (1) {
     i4 = HEAPU8[i2 >> 0] | 0;
     i6 = i4 + -1 | 0;
     if (i6 >>> 0 < 127) {
      if ((i2 & 3 | 0) == 0 & i3 >>> 0 > 4) {
       while (1) {
        i4 = HEAP32[i2 >> 2] | 0;
        if ((i4 + -16843009 | i4) & -2139062144 | 0) {
         i8 = 42;
         break;
        }
        HEAP32[i5 >> 2] = i4 & 255;
        HEAP32[i5 + 4 >> 2] = HEAPU8[i2 + 1 >> 0];
        HEAP32[i5 + 8 >> 2] = HEAPU8[i2 + 2 >> 0];
        i6 = i2 + 4 | 0;
        i4 = i5 + 16 | 0;
        HEAP32[i5 + 12 >> 2] = HEAPU8[i2 + 3 >> 0];
        i3 = i3 + -4 | 0;
        if (i3 >>> 0 > 4) {
         i5 = i4;
         i2 = i6;
        } else {
         i8 = 41;
         break;
        }
       }
       if ((i8 | 0) == 41) {
        i5 = i4;
        i2 = i6;
        i4 = HEAP8[i6 >> 0] | 0;
       } else if ((i8 | 0) == 42) i4 = i4 & 255;
       i4 = i4 & 255;
       i6 = i4 + -1 | 0;
       i8 = 44;
      }
     } else i8 = 44;
     if ((i8 | 0) == 44) {
      i8 = 0;
      if (i6 >>> 0 >= 127) break;
     }
     i2 = i2 + 1 | 0;
     HEAP32[i5 >> 2] = i4;
     i3 = i3 + -1 | 0;
     if (!i3) break L23; else i5 = i5 + 4 | 0;
    }
    i4 = i4 + -194 | 0;
    if (i4 >>> 0 > 50) {
     i8 = 57;
     break L21;
    }
    i4 = HEAP32[3472 + (i4 << 2) >> 2] | 0;
    i7 = i3;
    i6 = i2 + 1 | 0;
    i8 = 48;
    continue L20;
   } while (0);
   HEAP32[i9 >> 2] = i2;
   i8 = 63;
   continue L20;
  } else if ((i8 | 0) == 48) {
   i8 = 0;
   i3 = HEAPU8[i6 >> 0] | 0;
   i2 = i3 >>> 3;
   if ((i2 + -16 | i2 + (i4 >> 26)) >>> 0 > 7) {
    i2 = i6;
    i3 = i7;
    i8 = 56;
   } else {
    i2 = i6 + 1 | 0;
    i3 = i3 + -128 | i4 << 6;
    do if ((i3 | 0) < 0) {
     i4 = (HEAPU8[i2 >> 0] | 0) + -128 | 0;
     if (i4 >>> 0 <= 63) {
      i2 = i6 + 2 | 0;
      i3 = i4 | i3 << 6;
      if ((i3 | 0) >= 0) break;
      i4 = (HEAPU8[i2 >> 0] | 0) + -128 | 0;
      if (i4 >>> 0 <= 63) {
       i2 = i6 + 3 | 0;
       i3 = i4 | i3 << 6;
       break;
      }
     }
     i2 = ___errno_location() | 0;
     HEAP32[i2 >> 2] = 84;
     i2 = i6 + -1 | 0;
     break L21;
    } while (0);
    HEAP32[i5 >> 2] = i3;
    i5 = i5 + 4 | 0;
    i3 = i7 + -1 | 0;
    i8 = 33;
    continue L20;
   }
  } else if ((i8 | 0) == 63) return i1 | 0; while (0);
  if ((i8 | 0) == 56) {
   i2 = i2 + -1 | 0;
   if (!i4) i8 = 57; else {
    i1 = i5;
    i8 = 61;
   }
  }
  if ((i8 | 0) == 57) if (!(HEAP8[i2 >> 0] | 0)) {
   if (i5 | 0) {
    HEAP32[i5 >> 2] = 0;
    HEAP32[i9 >> 2] = 0;
   }
   i1 = i1 - i3 | 0;
   i8 = 63;
   continue;
  } else {
   i1 = i5;
   i8 = 61;
  }
  if ((i8 | 0) == 61) {
   i8 = ___errno_location() | 0;
   HEAP32[i8 >> 2] = 84;
   if (!i1) {
    i1 = -1;
    i8 = 63;
    continue;
   }
  }
  HEAP32[i9 >> 2] = i2;
  i1 = -1;
  i8 = 63;
 }
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_function_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i12, i16) {
 i1 = i1 | 0;
 i12 = i12 | 0;
 i16 = i16 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0, i15 = 0, i17 = 0, i18 = 0, i19 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i17 = i18 + 12 | 0;
 i13 = i18;
 do if (((i1 | 0) != (i12 | 0) ? (HEAP8[i1 >> 0] | 0) == 70 : 0) ? (i2 = i1 + 1 | 0, (i2 | 0) != (i12 | 0)) : 0) {
  if ((HEAP8[i2 >> 0] | 0) == 89) {
   i2 = i1 + 2 | 0;
   if ((i2 | 0) == (i12 | 0)) break;
  }
  i3 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i2, i12, i16) | 0;
  if ((i3 | 0) != (i2 | 0)) {
   HEAP32[i17 >> 2] = 0;
   HEAP32[i17 + 4 >> 2] = 0;
   HEAP32[i17 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i17, 50526, __ZNSt3__211char_traitsIcE6lengthEPKc(50526) | 0);
   i15 = i16 + 4 | 0;
   i10 = i17 + 11 | 0;
   i11 = i17 + 4 | 0;
   i8 = i13 + 11 | 0;
   i9 = i13 + 4 | 0;
   i7 = 0;
   i2 = i3;
   L9 : while (1) {
    L11 : while (1) {
     if ((i2 | 0) == (i12 | 0)) {
      i14 = 11;
      break L9;
     }
     switch (HEAP8[i2 >> 0] | 0) {
     case 69:
      {
       i14 = 16;
       break L9;
      }
     case 118:
      {
       i2 = i2 + 1 | 0;
       break;
      }
     case 82:
      {
       i4 = i2 + 1 | 0;
       if ((i4 | 0) != (i12 | 0) ? (HEAP8[i4 >> 0] | 0) == 69 : 0) {
        i3 = 1;
        i2 = i4;
        break L11;
       } else i14 = 23;
       break;
      }
     case 79:
      {
       i4 = i2 + 1 | 0;
       if ((i4 | 0) != (i12 | 0) ? (HEAP8[i4 >> 0] | 0) == 69 : 0) {
        i3 = 2;
        i2 = i4;
        break L11;
       } else i14 = 23;
       break;
      }
     default:
      i14 = 23;
     }
     L20 : do if ((i14 | 0) == 23) {
      i14 = 0;
      i3 = ((HEAP32[i15 >> 2] | 0) - (HEAP32[i16 >> 2] | 0) | 0) / 24 | 0;
      i5 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i2, i12, i16) | 0;
      i6 = ((HEAP32[i15 >> 2] | 0) - (HEAP32[i16 >> 2] | 0) | 0) / 24 | 0;
      if ((i5 | 0) == (i2 | 0) | (i5 | 0) == (i12 | 0)) break L9;
      i2 = i3;
      while (1) {
       if (i2 >>> 0 >= i6 >>> 0) break;
       i4 = HEAP8[i10 >> 0] | 0;
       if ((i4 << 24 >> 24 < 0 ? HEAP32[i11 >> 2] | 0 : i4 & 255) >>> 0 > 1) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i17, 50748) | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i13, (HEAP32[i16 >> 2] | 0) + (i2 * 24 | 0) | 0);
       i4 = HEAP8[i8 >> 0] | 0;
       i19 = i4 << 24 >> 24 < 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i17, i19 ? HEAP32[i13 >> 2] | 0 : i13, i19 ? HEAP32[i9 >> 2] | 0 : i4 & 255) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
       i2 = i2 + 1 | 0;
      }
      i2 = i3;
      while (1) {
       if (i2 >>> 0 >= i6 >>> 0) {
        i2 = i5;
        break L20;
       }
       i4 = HEAP32[i15 >> 2] | 0;
       i3 = 0;
       while (1) {
        if ((i3 | 0) == -1) break;
        i19 = i3 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4 + (i19 * 24 | 0) | 0);
        i3 = i19;
       }
       HEAP32[i15 >> 2] = i4 + -24;
       i2 = i2 + 1 | 0;
      }
     } while (0);
    }
    i7 = i3;
   }
   if ((i14 | 0) == 11) {
    i3 = HEAP32[i15 >> 2] | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == -1) break;
     i19 = i2 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i19 * 24 | 0) | 0);
     i2 = i19;
    }
    HEAP32[i15 >> 2] = i3 + -24;
   } else if ((i14 | 0) == 16) {
    i3 = i2 + 1 | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i17, 50524) | 0;
    switch (i7 & 3) {
    case 1:
     {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i17, 51952) | 0;
      break;
     }
    case 2:
     {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i17, 51955) | 0;
      break;
     }
    default:
     {}
    }
    i2 = HEAP32[i15 >> 2] | 0;
    if ((HEAP32[i16 >> 2] | 0) != (i2 | 0)) {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i2 + -24 | 0, 50558) | 0;
     i1 = HEAP8[i10 >> 0] | 0;
     i19 = i1 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm((HEAP32[i15 >> 2] | 0) + -12 | 0, 0, i19 ? HEAP32[i17 >> 2] | 0 : i17, i19 ? HEAP32[i11 >> 2] | 0 : i1 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     i1 = i3;
     break;
    }
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
  }
 } while (0);
 STACKTOP = i18;
 return i1 | 0;
}

function __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(i27, i28, i29, i30, i1, i20, i21, i22, i23, i24, i8, i9, i10, i26, i11) {
 i27 = i27 | 0;
 i28 = i28 | 0;
 i29 = i29 | 0;
 i30 = i30 | 0;
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i26 = i26 | 0;
 i11 = i11 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i25 = 0, i31 = 0, i32 = 0, i33 = 0;
 HEAP32[i29 >> 2] = i27;
 i12 = i26 + 11 | 0;
 i25 = i26 + 4 | 0;
 i13 = i10 + 11 | 0;
 i14 = i10 + 4 | 0;
 i15 = (i30 & 512 | 0) == 0;
 i16 = i21 + 8 | 0;
 i17 = (i11 | 0) > 0;
 i18 = i9 + 11 | 0;
 i19 = i9 + 4 | 0;
 i7 = 0;
 while (1) {
  if ((i7 | 0) == 4) break;
  L4 : do switch (HEAP8[i23 + i7 >> 0] | 0) {
  case 0:
   {
    HEAP32[i28 >> 2] = HEAP32[i29 >> 2];
    break;
   }
  case 1:
   {
    HEAP32[i28 >> 2] = HEAP32[i29 >> 2];
    i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i21 >> 2] | 0) + 28 >> 2] & 63](i21, 32) | 0;
    i6 = HEAP32[i29 >> 2] | 0;
    HEAP32[i29 >> 2] = i6 + 1;
    HEAP8[i6 >> 0] = i5;
    break;
   }
  case 3:
   {
    i6 = HEAP8[i12 >> 0] | 0;
    i2 = i6 << 24 >> 24 < 0;
    if ((i2 ? HEAP32[i25 >> 2] | 0 : i6 & 255) | 0) {
     i5 = HEAP8[(i2 ? HEAP32[i26 >> 2] | 0 : i26) >> 0] | 0;
     i6 = HEAP32[i29 >> 2] | 0;
     HEAP32[i29 >> 2] = i6 + 1;
     HEAP8[i6 >> 0] = i5;
    }
    break;
   }
  case 2:
   {
    i3 = HEAP8[i13 >> 0] | 0;
    i2 = i3 << 24 >> 24 < 0;
    i3 = i2 ? HEAP32[i14 >> 2] | 0 : i3 & 255;
    if (!(i15 | (i3 | 0) == 0)) {
     i6 = i2 ? HEAP32[i10 >> 2] | 0 : i10;
     i4 = i6 + i3 | 0;
     i2 = HEAP32[i29 >> 2] | 0;
     i3 = i6;
     while (1) {
      if ((i3 | 0) == (i4 | 0)) break;
      HEAP8[i2 >> 0] = HEAP8[i3 >> 0] | 0;
      i2 = i2 + 1 | 0;
      i3 = i3 + 1 | 0;
     }
     HEAP32[i29 >> 2] = i2;
    }
    break;
   }
  case 4:
   {
    i3 = HEAP32[i29 >> 2] | 0;
    i1 = i22 ? i1 + 1 | 0 : i1;
    i4 = i1;
    while (1) {
     if (i4 >>> 0 >= i20 >>> 0) break;
     i2 = HEAP8[i4 >> 0] | 0;
     if (i2 << 24 >> 24 <= -1) break;
     if (!(HEAP16[(HEAP32[i16 >> 2] | 0) + (i2 << 24 >> 24 << 1) >> 1] & 2048)) break;
     i4 = i4 + 1 | 0;
    }
    if (i17) {
     i5 = i11;
     while (1) {
      i2 = (i5 | 0) > 0;
      if (!(i4 >>> 0 > i1 >>> 0 & i2)) break;
      i6 = i4 + -1 | 0;
      i31 = HEAP8[i6 >> 0] | 0;
      i2 = HEAP32[i29 >> 2] | 0;
      HEAP32[i29 >> 2] = i2 + 1;
      HEAP8[i2 >> 0] = i31;
      i5 = i5 + -1 | 0;
      i4 = i6;
     }
     if (i2) i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i21 >> 2] | 0) + 28 >> 2] & 63](i21, 48) | 0; else i6 = 0;
     i2 = i5;
     while (1) {
      i5 = HEAP32[i29 >> 2] | 0;
      HEAP32[i29 >> 2] = i5 + 1;
      if ((i2 | 0) <= 0) break;
      HEAP8[i5 >> 0] = i6;
      i2 = i2 + -1 | 0;
     }
     HEAP8[i5 >> 0] = i24;
    }
    L36 : do if ((i4 | 0) == (i1 | 0)) {
     i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i21 >> 2] | 0) + 28 >> 2] & 63](i21, 48) | 0;
     i31 = HEAP32[i29 >> 2] | 0;
     HEAP32[i29 >> 2] = i31 + 1;
     HEAP8[i31 >> 0] = i6;
    } else {
     i31 = HEAP8[i18 >> 0] | 0;
     i2 = i31 << 24 >> 24 < 0;
     if (!((i2 ? HEAP32[i19 >> 2] | 0 : i31 & 255) | 0)) i2 = -1; else i2 = HEAP8[(i2 ? HEAP32[i9 >> 2] | 0 : i9) >> 0] | 0;
     i5 = 0;
     i6 = 0;
     while (1) {
      if ((i4 | 0) == (i1 | 0)) break L36;
      if ((i6 | 0) == (i2 | 0)) {
       i31 = HEAP32[i29 >> 2] | 0;
       HEAP32[i29 >> 2] = i31 + 1;
       HEAP8[i31 >> 0] = i8;
       i5 = i5 + 1 | 0;
       i31 = HEAP8[i18 >> 0] | 0;
       i2 = i31 << 24 >> 24 < 0;
       if (i5 >>> 0 < (i2 ? HEAP32[i19 >> 2] | 0 : i31 & 255) >>> 0) {
        i2 = HEAP8[(i2 ? HEAP32[i9 >> 2] | 0 : i9) + i5 >> 0] | 0;
        i2 = i2 << 24 >> 24 == 127 ? -1 : i2 << 24 >> 24;
        i6 = 0;
       } else {
        i2 = i6;
        i6 = 0;
       }
      }
      i31 = i4 + -1 | 0;
      i33 = HEAP8[i31 >> 0] | 0;
      i32 = HEAP32[i29 >> 2] | 0;
      HEAP32[i29 >> 2] = i32 + 1;
      HEAP8[i32 >> 0] = i33;
      i6 = i6 + 1 | 0;
      i4 = i31;
     }
    } while (0);
    i2 = HEAP32[i29 >> 2] | 0;
    if ((i3 | 0) != (i2 | 0)) while (1) {
     i2 = i2 + -1 | 0;
     if (i3 >>> 0 >= i2 >>> 0) break L4;
     i33 = HEAP8[i3 >> 0] | 0;
     HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
     HEAP8[i2 >> 0] = i33;
     i3 = i3 + 1 | 0;
    }
    break;
   }
  default:
   {}
  } while (0);
  i7 = i7 + 1 | 0;
 }
 i1 = HEAP8[i12 >> 0] | 0;
 i2 = i1 << 24 >> 24 < 0;
 i1 = i2 ? HEAP32[i25 >> 2] | 0 : i1 & 255;
 if (i1 >>> 0 > 1) {
  i33 = i2 ? HEAP32[i26 >> 2] | 0 : i26;
  i3 = i33 + i1 | 0;
  i2 = HEAP32[i29 >> 2] | 0;
  i1 = i33;
  while (1) {
   i1 = i1 + 1 | 0;
   if ((i1 | 0) == (i3 | 0)) break;
   HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
   i2 = i2 + 1 | 0;
  }
  HEAP32[i29 >> 2] = i2;
 }
 switch ((i30 & 176) << 24 >> 24) {
 case 32:
  {
   HEAP32[i28 >> 2] = HEAP32[i29 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[i28 >> 2] = i27;
 }
 return;
}

function _pattern_match(i7, i1, i5, i6, i18, i19, i20) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 i20 = i20 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, d15 = 0.0, i16 = 0, i17 = 0, i21 = 0, i22 = 0, d23 = 0.0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i22 + 8 | 0;
 i2 = i22;
 L1 : do if ((i7 | 0) == 0 | (i6 | 0) < 1) {
  HEAP32[i18 >> 2] = 0;
  HEAP32[i19 >> 2] = 0;
  HEAPF64[i20 >> 3] = -1.0;
  i1 = -1;
 } else switch (i1 | 0) {
 case 0:
  {
   i17 = Math_imul(i6, i6) | 0;
   i16 = i17 * 3 | 0;
   i17 = _malloc(i17 * 12 | 0) | 0;
   if (!i17) {
    _arLog(0, 3, 20581, i2);
    _exit(1);
   }
   i1 = 0;
   i2 = 0;
   while (1) {
    if ((i1 | 0) == (i16 | 0)) break;
    i14 = i2 + (~HEAP8[i5 + i1 >> 0] & 255) | 0;
    i1 = i1 + 1 | 0;
    i2 = i14;
   }
   i3 = (i2 >>> 0) / (i16 >>> 0) | 0;
   i1 = 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == (i16 | 0)) break;
    i14 = (~HEAP8[i5 + i2 >> 0] & 255) - i3 | 0;
    HEAP32[i17 + (i2 << 2) >> 2] = i14;
    i1 = (Math_imul(i14, i14) | 0) + i1 | 0;
    i2 = i2 + 1 | 0;
   }
   d15 = +Math_sqrt(+(+(i1 | 0)));
   if (d15 / (+(i6 | 0) * 1.7320508) < 15.0) {
    HEAP32[i18 >> 2] = 0;
    HEAP32[i19 >> 2] = 0;
    HEAPF64[i20 >> 3] = -1.0;
    _free(i17);
    i1 = -2;
    break L1;
   }
   i12 = HEAP32[i7 >> 2] | 0;
   i13 = i7 + 8 | 0;
   i14 = i7 + 12 | 0;
   i11 = i7 + 16 | 0;
   d4 = 0.0;
   i10 = 0;
   i1 = -1;
   i5 = -1;
   i2 = -1;
   while (1) {
    if ((i10 | 0) >= (i12 | 0)) break;
    i3 = HEAP32[i13 >> 2] | 0;
    L23 : while (1) {
     i1 = i1 + 1 | 0;
     switch (HEAP32[i3 + (i1 << 2) >> 2] | 0) {
     case 0:
      break;
     case 2:
      {
       i3 = i5;
       break L23;
      }
     default:
      {
       i21 = 18;
       break L23;
      }
     }
    }
    L25 : do if ((i21 | 0) == 18) {
     i21 = 0;
     i9 = i1 << 2;
     i8 = 0;
     i3 = i5;
     while (1) {
      if ((i8 | 0) == 4) break L25;
      i7 = i8 + i9 | 0;
      i5 = 0;
      i6 = 0;
      while (1) {
       if ((i6 | 0) == (i16 | 0)) break;
       i5 = (Math_imul(HEAP32[(HEAP32[(HEAP32[i14 >> 2] | 0) + (i7 << 2) >> 2] | 0) + (i6 << 2) >> 2] | 0, HEAP32[i17 + (i6 << 2) >> 2] | 0) | 0) + i5 | 0;
       i6 = i6 + 1 | 0;
      }
      d23 = +(i5 | 0) / +HEAPF64[(HEAP32[i11 >> 2] | 0) + (i7 << 3) >> 3] / d15;
      i6 = d23 > d4;
      i7 = i6 ? i8 : i2;
      i8 = i8 + 1 | 0;
      d4 = i6 ? d23 : d4;
      i3 = i6 ? i1 : i3;
      i2 = i7;
     }
    } while (0);
    i10 = i10 + 1 | 0;
    i5 = i3;
   }
   HEAP32[i19 >> 2] = i2;
   HEAP32[i18 >> 2] = i5;
   HEAPF64[i20 >> 3] = d4;
   _free(i17);
   i1 = 0;
   break L1;
  }
 case 1:
  {
   i16 = Math_imul(i6, i6) | 0;
   i17 = _malloc(i16 << 2) | 0;
   if (!i17) {
    _arLog(0, 3, 20581, i3);
    _exit(1);
   }
   i1 = 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == (i16 | 0)) break;
    i1 = i1 + (~HEAP8[i5 + i2 >> 0] & 255) | 0;
    i2 = i2 + 1 | 0;
   }
   i3 = (i1 >>> 0) / (i16 >>> 0) | 0;
   i1 = 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == (i16 | 0)) break;
    i14 = (~HEAP8[i5 + i2 >> 0] & 255) - i3 | 0;
    HEAP32[i17 + (i2 << 2) >> 2] = i14;
    i1 = (Math_imul(i14, i14) | 0) + i1 | 0;
    i2 = i2 + 1 | 0;
   }
   d15 = +Math_sqrt(+(+(i1 | 0)));
   if (d15 / +(i6 | 0) < 15.0) {
    HEAP32[i18 >> 2] = 0;
    HEAP32[i19 >> 2] = 0;
    HEAPF64[i20 >> 3] = -1.0;
    _free(i17);
    i1 = -2;
    break L1;
   }
   i12 = HEAP32[i7 >> 2] | 0;
   i13 = i7 + 8 | 0;
   i14 = i7 + 20 | 0;
   i11 = i7 + 24 | 0;
   i10 = 0;
   i1 = -1;
   d4 = 0.0;
   i5 = -1;
   i2 = -1;
   while (1) {
    if ((i10 | 0) >= (i12 | 0)) break;
    i3 = HEAP32[i13 >> 2] | 0;
    L54 : while (1) {
     i1 = i1 + 1 | 0;
     switch (HEAP32[i3 + (i1 << 2) >> 2] | 0) {
     case 0:
      break;
     case 2:
      {
       i3 = i5;
       break L54;
      }
     default:
      {
       i21 = 40;
       break L54;
      }
     }
    }
    L56 : do if ((i21 | 0) == 40) {
     i21 = 0;
     i9 = i1 << 2;
     i8 = 0;
     i3 = i5;
     while (1) {
      if ((i8 | 0) == 4) break L56;
      i7 = i8 + i9 | 0;
      i5 = 0;
      i6 = 0;
      while (1) {
       if ((i6 | 0) == (i16 | 0)) break;
       i5 = (Math_imul(HEAP32[(HEAP32[(HEAP32[i14 >> 2] | 0) + (i7 << 2) >> 2] | 0) + (i6 << 2) >> 2] | 0, HEAP32[i17 + (i6 << 2) >> 2] | 0) | 0) + i5 | 0;
       i6 = i6 + 1 | 0;
      }
      d23 = +(i5 | 0) / +HEAPF64[(HEAP32[i11 >> 2] | 0) + (i7 << 3) >> 3] / d15;
      i6 = d23 > d4;
      i7 = i6 ? i8 : i2;
      i8 = i8 + 1 | 0;
      d4 = i6 ? d23 : d4;
      i3 = i6 ? i1 : i3;
      i2 = i7;
     }
    } while (0);
    i10 = i10 + 1 | 0;
    i5 = i3;
   }
   HEAP32[i19 >> 2] = i2;
   HEAP32[i18 >> 2] = i5;
   HEAPF64[i20 >> 3] = d4;
   _free(i17);
   i1 = 0;
   break L1;
  }
 default:
  {
   i1 = -1;
   break L1;
  }
 } while (0);
 STACKTOP = i22;
 return i1 | 0;
}

function _get_global_id_code(i14, i18, i15, i16, i19) {
 i14 = i14 | 0;
 i18 = i18 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i19 = i19 | 0;
 var i1 = 0, d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i17 = 0, i20 = 0, i21 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(160);
 i6 = i21 + 152 | 0;
 i5 = i21 + 128 | 0;
 i20 = i21 + 144 | 0;
 i17 = i21;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i5 + 4 >> 2] = 182;
 HEAP32[i5 + 8 >> 2] = 195;
 HEAP32[i5 + 12 >> 2] = 13;
 i1 = 0;
 i3 = 0;
 i4 = -1;
 while (1) {
  if ((i1 | 0) == 4) break;
  i13 = HEAP8[i14 + (HEAP32[i5 + (i1 << 2) >> 2] | 0) >> 0] | 0;
  i1 = i1 + 1 | 0;
  i3 = (i13 & 255) > (i3 & 255) ? i13 : i3;
  i4 = (i13 & 255) < (i4 & 255) ? i13 : i4;
 }
 i3 = i3 & 255;
 i1 = i4 & 255;
 L5 : do if ((i3 - i1 | 0) >= 30) {
  i13 = (i3 + i1 | 0) >>> 1;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 4) break;
   HEAP8[i6 + i1 >> 0] = i13 >>> 0 > (HEAPU8[i14 + (HEAP32[i5 + (i1 << 2) >> 2] | 0) >> 0] | 0) >>> 0 & 1;
   i1 = i1 + 1 | 0;
  }
  i12 = 0;
  while (1) {
   if (i12 >>> 0 >= 4) break;
   i1 = i12 + 1 | 0;
   if (((HEAP8[i6 + i12 >> 0] | 0) == 1 ? (HEAP8[i6 + (i1 & 3) >> 0] | 0) == 1 : 0) ? (HEAP8[i6 + (i12 + 2 & 3) >> 0] | 0) == 0 : 0) break;
   i12 = i1;
  }
  L20 : do switch (i12 & 2147483647 | 0) {
  case 4:
   {
    HEAP32[i15 >> 2] = 0;
    HEAPF64[i16 >> 3] = -1.0;
    i1 = -3;
    break L5;
   }
  case 0:
   {
    i3 = 119;
    i5 = 0;
    i1 = 255;
    while (1) {
     if ((i5 | 0) == 14) {
      i7 = 57;
      break L20;
     }
     i6 = i5 + -3 | 0;
     i7 = (i5 & 2147483646 | 0) == 12;
     i8 = i5 * 14 | 0;
     i4 = 0;
     while (1) {
      if ((i4 | 0) == 14) break;
      if (((i4 + -3 | i6) >>> 0 >= 8 ? (i9 = i4 & 2147483646, ((i4 | i5) & 2147483646 | 0) != 0) : 0) ? !(i7 & ((i9 | 0) == 0 | (i9 | 0) == 12)) : 0) {
       i11 = (HEAPU8[i14 + (i4 + i8) >> 0] | 0) - i13 | 0;
       HEAP8[i17 + i3 >> 0] = i11 >>> 31;
       i11 = (i11 | 0) > -1 ? i11 : 0 - i11 | 0;
       i3 = i3 + -1 | 0;
       i1 = (i11 | 0) < (i1 | 0) ? i11 : i1;
      }
      i4 = i4 + 1 | 0;
     }
     i5 = i5 + 1 | 0;
    }
   }
  case 1:
   {
    i3 = 119;
    i1 = 255;
    i5 = 0;
    while (1) {
     if ((i5 | 0) == 14) {
      i7 = 57;
      break L20;
     }
     i6 = i5 + -3 | 0;
     i8 = i5 & 2147483646;
     i7 = (i8 | 0) == 0;
     i8 = (i8 | 0) == 12;
     i4 = 13;
     while (1) {
      if ((i4 | 0) <= -1) break;
      if (((i4 + -3 | i6) >>> 0 >= 8 ? (i10 = (i4 & -2 | 0) == 12, !(i7 & i10)) : 0) ? !(i8 & (i4 >>> 0 < 2 | i10)) : 0) {
       i11 = (HEAPU8[i14 + ((i4 * 14 | 0) + i5) >> 0] | 0) - i13 | 0;
       HEAP8[i17 + i3 >> 0] = i11 >>> 31;
       i11 = (i11 | 0) > -1 ? i11 : 0 - i11 | 0;
       i3 = i3 + -1 | 0;
       i1 = (i11 | 0) < (i1 | 0) ? i11 : i1;
      }
      i4 = i4 + -1 | 0;
     }
     i5 = i5 + 1 | 0;
    }
   }
  case 2:
   {
    i4 = 13;
    i3 = 119;
    i1 = 255;
    while (1) {
     if ((i4 | 0) <= -1) {
      i7 = 57;
      break L20;
     }
     i5 = i4 + -3 | 0;
     i8 = i4 >>> 0 < 2 | (i4 & -2 | 0) == 12;
     i7 = i4 * 14 | 0;
     i6 = 13;
     while (1) {
      if ((i6 | 0) <= -1) break;
      if ((i6 + -3 | i5) >>> 0 >= 8 ? !((i6 | i4) >>> 0 < 2 | i8 & (i6 & -2 | 0) == 12) : 0) {
       i11 = (HEAPU8[i14 + (i6 + i7) >> 0] | 0) - i13 | 0;
       HEAP8[i17 + i3 >> 0] = i11 >>> 31;
       i11 = (i11 | 0) > -1 ? i11 : 0 - i11 | 0;
       i3 = i3 + -1 | 0;
       i1 = (i11 | 0) < (i1 | 0) ? i11 : i1;
      }
      i6 = i6 + -1 | 0;
     }
     i4 = i4 + -1 | 0;
    }
   }
  case 3:
   {
    i5 = 13;
    i3 = 119;
    i1 = 255;
    while (1) {
     if ((i5 | 0) <= -1) {
      i7 = 57;
      break L20;
     }
     i6 = i5 + -3 | 0;
     i7 = i5 & -2;
     i8 = (i7 | 0) == 12;
     i9 = (i7 | 0) == 0;
     i4 = 0;
     while (1) {
      if ((i4 | 0) == 14) break;
      if (((i4 + -3 | i6) >>> 0 >= 8 ? (i11 = i4 & 2147483646, !(i8 & (i11 | 0) == 0)) : 0) ? !((i11 | i7 | 0) == 0 | i9 & (i11 | 0) == 12) : 0) {
       i10 = (HEAPU8[i14 + ((i4 * 14 | 0) + i5) >> 0] | 0) - i13 | 0;
       HEAP8[i17 + i3 >> 0] = i10 >>> 31;
       i10 = (i10 | 0) > -1 ? i10 : 0 - i10 | 0;
       i3 = i3 + -1 | 0;
       i1 = (i10 | 0) < (i1 | 0) ? i10 : i1;
      }
      i4 = i4 + 1 | 0;
     }
     i5 = i5 + -1 | 0;
    }
   }
  default:
   {
    HEAP32[i15 >> 2] = i12;
    d2 = 1.0;
   }
  } while (0);
  if ((i7 | 0) == 57) {
   HEAP32[i15 >> 2] = i12;
   d2 = (i1 | 0) > 30 ? 1.0 : +(i1 | 0) / 30.0;
  }
  HEAPF64[i16 >> 3] = d2;
  i1 = _decode_bch(2830, 0, 0, i17, i20) | 0;
  if ((i1 | 0) < 0) i1 = -4; else {
   if (i19 | 0) HEAP32[i19 >> 2] = i1;
   i19 = i20;
   i20 = HEAP32[i19 + 4 >> 2] | 0;
   i1 = i18;
   HEAP32[i1 >> 2] = HEAP32[i19 >> 2];
   HEAP32[i1 + 4 >> 2] = i20;
   i1 = 0;
  }
 } else {
  HEAP32[i15 >> 2] = 0;
  HEAPF64[i16 >> 3] = -1.0;
  i1 = -2;
 } while (0);
 STACKTOP = i21;
 return i1 | 0;
}

function ___floatscan(i11, i2, i9) {
 i11 = i11 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 var d1 = 0.0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i12 = 0;
 switch (i2 | 0) {
 case 0:
  {
   i7 = -149;
   i8 = 24;
   i5 = 4;
   break;
  }
 case 1:
  {
   i7 = -1074;
   i8 = 53;
   i5 = 4;
   break;
  }
 case 2:
  {
   i7 = -1074;
   i8 = 53;
   i5 = 4;
   break;
  }
 default:
  d1 = 0.0;
 }
 L4 : do if ((i5 | 0) == 4) {
  i12 = i11 + 4 | 0;
  i10 = i11 + 104 | 0;
  do {
   i2 = HEAP32[i12 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
    HEAP32[i12 >> 2] = i2 + 1;
    i2 = HEAPU8[i2 >> 0] | 0;
   } else i2 = ___shgetc(i11) | 0;
  } while ((_isspace(i2) | 0) != 0);
  L13 : do switch (i2 | 0) {
  case 43:
  case 45:
   {
    i4 = 1 - (((i2 | 0) == 45 & 1) << 1) | 0;
    i2 = HEAP32[i12 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
     HEAP32[i12 >> 2] = i2 + 1;
     i3 = HEAPU8[i2 >> 0] | 0;
     break L13;
    } else {
     i3 = ___shgetc(i11) | 0;
     break L13;
    }
   }
  default:
   {
    i3 = i2;
    i4 = 1;
   }
  } while (0);
  i2 = 0;
  while (1) {
   if ((i3 | 32 | 0) != (HEAP8[47004 + i2 >> 0] | 0)) break;
   do if (i2 >>> 0 < 7) {
    i3 = HEAP32[i12 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
     HEAP32[i12 >> 2] = i3 + 1;
     i3 = HEAPU8[i3 >> 0] | 0;
     break;
    } else {
     i3 = ___shgetc(i11) | 0;
     break;
    }
   } while (0);
   i2 = i2 + 1 | 0;
   if (i2 >>> 0 >= 8) {
    i2 = 8;
    break;
   }
  }
  L29 : do switch (i2 & 2147483647 | 0) {
  case 8:
   break;
  case 3:
   {
    i5 = 23;
    break;
   }
  default:
   {
    i6 = (i9 | 0) != 0;
    if (i6 & i2 >>> 0 > 3) if ((i2 | 0) == 8) break L29; else {
     i5 = 23;
     break L29;
    }
    L34 : do if (!i2) {
     i2 = 0;
     while (1) {
      if ((i3 | 32 | 0) != (HEAP8[47013 + i2 >> 0] | 0)) break L34;
      do if (i2 >>> 0 < 2) {
       i3 = HEAP32[i12 >> 2] | 0;
       if (i3 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
        HEAP32[i12 >> 2] = i3 + 1;
        i3 = HEAPU8[i3 >> 0] | 0;
        break;
       } else {
        i3 = ___shgetc(i11) | 0;
        break;
       }
      } while (0);
      i2 = i2 + 1 | 0;
      if (i2 >>> 0 >= 3) {
       i2 = 3;
       break;
      }
     }
    } while (0);
    switch (i2 | 0) {
    case 3:
     {
      i2 = HEAP32[i12 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
       HEAP32[i12 >> 2] = i2 + 1;
       i2 = HEAPU8[i2 >> 0] | 0;
      } else i2 = ___shgetc(i11) | 0;
      if ((i2 | 0) != 40) {
       if (!(HEAP32[i10 >> 2] | 0)) {
        d1 = nan;
        break L4;
       }
       HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + -1;
       d1 = nan;
       break L4;
      }
      i2 = 1;
      while (1) {
       i3 = HEAP32[i12 >> 2] | 0;
       if (i3 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
        HEAP32[i12 >> 2] = i3 + 1;
        i3 = HEAPU8[i3 >> 0] | 0;
       } else i3 = ___shgetc(i11) | 0;
       if (!((i3 + -48 | 0) >>> 0 < 10 | (i3 + -65 | 0) >>> 0 < 26) ? !((i3 | 0) == 95 | (i3 + -97 | 0) >>> 0 < 26) : 0) break;
       i2 = i2 + 1 | 0;
      }
      if ((i3 | 0) == 41) {
       d1 = nan;
       break L4;
      }
      i3 = (HEAP32[i10 >> 2] | 0) == 0;
      if (!i3) HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + -1;
      if (!i6) {
       i12 = ___errno_location() | 0;
       HEAP32[i12 >> 2] = 22;
       ___shlim(i11, 0, 0);
       d1 = 0.0;
       break L4;
      }
      if (!i2) {
       d1 = nan;
       break L4;
      }
      while (1) {
       i2 = i2 + -1 | 0;
       if (!i3) HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + -1;
       if (!i2) {
        d1 = nan;
        break L4;
       }
      }
     }
    case 0:
     {
      if ((i3 | 0) == 48) {
       i2 = HEAP32[i12 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
        HEAP32[i12 >> 2] = i2 + 1;
        i2 = HEAPU8[i2 >> 0] | 0;
       } else i2 = ___shgetc(i11) | 0;
       if ((i2 | 32 | 0) == 120) {
        d1 = +_hexfloat(i11, i8, i7, i4, i9);
        break L4;
       }
       if (!(HEAP32[i10 >> 2] | 0)) i2 = 48; else {
        HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + -1;
        i2 = 48;
       }
      } else i2 = i3;
      d1 = +_decfloat(i11, i2, i8, i7, i4, i9);
      break L4;
     }
    default:
     {
      if (HEAP32[i10 >> 2] | 0) HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + -1;
      i12 = ___errno_location() | 0;
      HEAP32[i12 >> 2] = 22;
      ___shlim(i11, 0, 0);
      d1 = 0.0;
      break L4;
     }
    }
   }
  } while (0);
  if ((i5 | 0) == 23) {
   i3 = (HEAP32[i10 >> 2] | 0) == 0;
   if (!i3) HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + -1;
   if ((i9 | 0) != 0 & i2 >>> 0 > 3) do {
    if (!i3) HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + -1;
    i2 = i2 + -1 | 0;
   } while (i2 >>> 0 > 3);
  }
  d1 = +(i4 | 0) * inf;
 } while (0);
 return +d1;
}

function _get_dht(i25) {
 i25 = i25 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0;
 i30 = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 i26 = i30 + 256 | 0;
 i27 = i30;
 i28 = HEAP32[i25 + 24 >> 2] | 0;
 i29 = i28 + 4 | 0;
 i1 = HEAP32[i29 >> 2] | 0;
 if (!i1) if (!(FUNCTION_TABLE_ii[HEAP32[i28 + 12 >> 2] & 127](i25) | 0)) i1 = 0; else {
  i1 = HEAP32[i29 >> 2] | 0;
  i2 = 4;
 } else i2 = 4;
 L4 : do if ((i2 | 0) == 4) {
  i2 = HEAP32[i28 >> 2] | 0;
  i1 = i1 + -1 | 0;
  i3 = (HEAPU8[i2 >> 0] | 0) << 8;
  if (!i1) {
   i2 = i28 + 12 | 0;
   if (!(FUNCTION_TABLE_ii[HEAP32[i2 >> 2] & 127](i25) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i29 >> 2] | 0;
   i4 = HEAP32[i28 >> 2] | 0;
  } else {
   i4 = i2 + 1 | 0;
   i2 = i28 + 12 | 0;
  }
  i9 = i26 + 1 | 0;
  i10 = i26 + 2 | 0;
  i11 = i26 + 3 | 0;
  i12 = i26 + 4 | 0;
  i13 = i26 + 5 | 0;
  i14 = i26 + 6 | 0;
  i15 = i26 + 7 | 0;
  i16 = i26 + 8 | 0;
  i17 = i26 + 9 | 0;
  i18 = i26 + 10 | 0;
  i19 = i26 + 11 | 0;
  i20 = i26 + 12 | 0;
  i21 = i26 + 13 | 0;
  i22 = i26 + 14 | 0;
  i23 = i26 + 15 | 0;
  i24 = i26 + 16 | 0;
  i5 = (i3 | (HEAPU8[i4 >> 0] | 0)) + -2 | 0;
  i3 = i1 + -1 | 0;
  i1 = i4 + 1 | 0;
  while (1) {
   if ((i5 | 0) <= 16) break;
   if (!i3) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i2 >> 2] & 127](i25) | 0)) {
     i1 = 0;
     break L4;
    }
    i3 = HEAP32[i29 >> 2] | 0;
    i1 = HEAP32[i28 >> 2] | 0;
   }
   i7 = HEAPU8[i1 >> 0] | 0;
   i4 = HEAP32[i25 >> 2] | 0;
   HEAP32[i4 + 20 >> 2] = 80;
   HEAP32[i4 + 24 >> 2] = i7;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i25 >> 2] | 0) + 4 >> 2] & 63](i25, 1);
   HEAP8[i26 >> 0] = 0;
   i4 = 1;
   i8 = 0;
   while (1) {
    i3 = i3 + -1 | 0;
    i1 = i1 + 1 | 0;
    if (i4 >>> 0 >= 17) break;
    if (!i3) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i2 >> 2] & 127](i25) | 0)) {
      i1 = 0;
      break L4;
     }
     i3 = HEAP32[i29 >> 2] | 0;
     i1 = HEAP32[i28 >> 2] | 0;
    }
    i6 = HEAP8[i1 >> 0] | 0;
    HEAP8[i26 + i4 >> 0] = i6;
    i4 = i4 + 1 | 0;
    i8 = i8 + (i6 & 255) | 0;
   }
   i6 = i5 + -17 | 0;
   i5 = HEAP32[i25 >> 2] | 0;
   HEAP32[i5 + 24 >> 2] = HEAPU8[i9 >> 0];
   HEAP32[i5 + 28 >> 2] = HEAPU8[i10 >> 0];
   HEAP32[i5 + 32 >> 2] = HEAPU8[i11 >> 0];
   HEAP32[i5 + 36 >> 2] = HEAPU8[i12 >> 0];
   HEAP32[i5 + 40 >> 2] = HEAPU8[i13 >> 0];
   HEAP32[i5 + 44 >> 2] = HEAPU8[i14 >> 0];
   HEAP32[i5 + 48 >> 2] = HEAPU8[i15 >> 0];
   HEAP32[i5 + 52 >> 2] = HEAPU8[i16 >> 0];
   HEAP32[i5 + 20 >> 2] = 86;
   FUNCTION_TABLE_vii[HEAP32[i5 + 4 >> 2] & 63](i25, 2);
   i5 = HEAP32[i25 >> 2] | 0;
   HEAP32[i5 + 24 >> 2] = HEAPU8[i17 >> 0];
   HEAP32[i5 + 28 >> 2] = HEAPU8[i18 >> 0];
   HEAP32[i5 + 32 >> 2] = HEAPU8[i19 >> 0];
   HEAP32[i5 + 36 >> 2] = HEAPU8[i20 >> 0];
   HEAP32[i5 + 40 >> 2] = HEAPU8[i21 >> 0];
   HEAP32[i5 + 44 >> 2] = HEAPU8[i22 >> 0];
   HEAP32[i5 + 48 >> 2] = HEAPU8[i23 >> 0];
   HEAP32[i5 + 52 >> 2] = HEAPU8[i24 >> 0];
   HEAP32[i5 + 20 >> 2] = 86;
   FUNCTION_TABLE_vii[HEAP32[i5 + 4 >> 2] & 63](i25, 2);
   if (i8 >>> 0 > 256 | (i6 | 0) < (i8 | 0)) {
    i5 = HEAP32[i25 >> 2] | 0;
    HEAP32[i5 + 20 >> 2] = 8;
    FUNCTION_TABLE_vi[HEAP32[i5 >> 2] & 255](i25);
   }
   i4 = 0;
   while (1) {
    if (i4 >>> 0 >= i8 >>> 0) break;
    if (!i3) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i2 >> 2] & 127](i25) | 0)) {
      i1 = 0;
      break L4;
     }
     i3 = HEAP32[i29 >> 2] | 0;
     i1 = HEAP32[i28 >> 2] | 0;
    }
    HEAP8[i27 + i4 >> 0] = HEAP8[i1 >> 0] | 0;
    i4 = i4 + 1 | 0;
    i3 = i3 + -1 | 0;
    i1 = i1 + 1 | 0;
   }
   i31 = (i7 & 16 | 0) == 0;
   i5 = i7 + -16 | 0;
   i4 = i31 ? i7 : i5;
   i5 = i31 ? i25 + 180 + (i7 << 2) | 0 : i25 + 196 + (i5 << 2) | 0;
   if (i4 >>> 0 > 3) {
    i31 = HEAP32[i25 >> 2] | 0;
    HEAP32[i31 + 20 >> 2] = 30;
    HEAP32[i31 + 24 >> 2] = i4;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i25 >> 2] >> 2] & 255](i25);
   }
   i4 = HEAP32[i5 >> 2] | 0;
   if (!i4) {
    i4 = _jpeg_alloc_huff_table(i25) | 0;
    HEAP32[i5 >> 2] = i4;
   };
   HEAP32[i4 >> 2] = HEAP32[i26 >> 2];
   HEAP32[i4 + 4 >> 2] = HEAP32[i26 + 4 >> 2];
   HEAP32[i4 + 8 >> 2] = HEAP32[i26 + 8 >> 2];
   HEAP32[i4 + 12 >> 2] = HEAP32[i26 + 12 >> 2];
   HEAP8[i4 + 16 >> 0] = HEAP8[i26 + 16 >> 0] | 0;
   _memcpy((HEAP32[i5 >> 2] | 0) + 17 | 0, i27 | 0, 256) | 0;
   i5 = i6 - i8 | 0;
  }
  if (i5 | 0) {
   i31 = HEAP32[i25 >> 2] | 0;
   HEAP32[i31 + 20 >> 2] = 11;
   FUNCTION_TABLE_vi[HEAP32[i31 >> 2] & 255](i25);
  }
  HEAP32[i28 >> 2] = i1;
  HEAP32[i29 >> 2] = i3;
  i1 = 1;
 } while (0);
 STACKTOP = i30;
 return i1 | 0;
}

function __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i9, i6, i5, d2) {
 i9 = i9 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 d2 = +d2;
 var i1 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i10 = i11;
 i1 = ~~+Math_floor(+(+__ZN6vision4log2IfEET_S1_(d2)));
 HEAP32[i6 >> 2] = i1;
 d2 = +Math_log(+(d2 / +(1 << i1 | 0)));
 i1 = ~~+__ZN6vision5roundIfEET_S1_(+HEAPF32[i9 + 28 >> 2] * d2);
 HEAP32[i5 >> 2] = i1;
 i7 = i9 + 20 | 0;
 if (((HEAP32[i7 >> 2] | 0) + -1 | 0) == (i1 | 0)) {
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
  HEAP32[i5 >> 2] = 0;
  i1 = 0;
 }
 i3 = HEAP32[i6 >> 2] | 0;
 if ((i3 | 0) >= 0) {
  i4 = HEAP32[i9 + 16 >> 2] | 0;
  if ((i3 | 0) < (i4 | 0)) i3 = i1; else {
   HEAP32[i6 >> 2] = i4 + -1;
   i1 = (HEAP32[i7 >> 2] | 0) + -1 | 0;
   i8 = 7;
  }
 } else {
  HEAP32[i6 >> 2] = 0;
  i1 = 0;
  i8 = 7;
 }
 if ((i8 | 0) == 7) {
  HEAP32[i5 >> 2] = i1;
  i3 = i1;
 }
 i1 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) <= -1) {
  i8 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32412) | 0, 32447) | 0, 33655) | 0, 268) | 0, 33662) | 0, 32576) | 0;
  __ZNKSt3__28ios_base6getlocEv(i10, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58792) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i10);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
 if ((i1 | 0) >= (HEAP32[i9 + 16 >> 2] | 0)) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32600) | 0, 32447) | 0, 33655) | 0, 269) | 0, 33662) | 0, 32644) | 0;
  __ZNKSt3__28ios_base6getlocEv(i10, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58792) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i10);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 if ((i3 | 0) <= -1) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32687) | 0, 32447) | 0, 33655) | 0, 270) | 0, 33662) | 0, 32721) | 0;
  __ZNKSt3__28ios_base6getlocEv(i10, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58792) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i10);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 if ((i3 | 0) < (HEAP32[i7 >> 2] | 0)) {
  STACKTOP = i11;
  return;
 } else {
  i11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32744) | 0, 32447) | 0, 33655) | 0, 271) | 0, 33662) | 0, 32795) | 0;
  __ZNKSt3__28ios_base6getlocEv(i10, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58792) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i10);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
}

function __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_(i9, i7) {
 i9 = i9 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i5 = i7 + 11 | 0;
 i4 = HEAP8[i5 >> 0] | 0;
 i6 = i7 + 4 | 0;
 L1 : do if (!((i4 << 24 >> 24 < 0 ? HEAP32[i6 >> 2] | 0 : i4 & 255) | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i9, i7); else {
  i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(51346) | 0;
  i4 = HEAP8[i5 >> 0] | 0;
  if ((i1 | 0) == ((i4 << 24 >> 24 < 0 ? HEAP32[i6 >> 2] | 0 : i4 & 255) | 0) ? (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i7, 51346, i1) | 0) == 0 : 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc(i7, 51358);
   HEAP32[i9 >> 2] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
   HEAP32[i9 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i9, 51429, __ZNSt3__211char_traitsIcE6lengthEPKc(51429) | 0);
   break;
  }
  i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(51442) | 0;
  i4 = HEAP8[i5 >> 0] | 0;
  if ((i1 | 0) == ((i4 << 24 >> 24 < 0 ? HEAP32[i6 >> 2] | 0 : i4 & 255) | 0) ? (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i7, 51442, i1) | 0) == 0 : 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc(i7, 51455);
   HEAP32[i9 >> 2] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
   HEAP32[i9 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i9, 51505, __ZNSt3__211char_traitsIcE6lengthEPKc(51505) | 0);
   break;
  }
  i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(51519) | 0;
  i4 = HEAP8[i5 >> 0] | 0;
  if ((i1 | 0) == ((i4 << 24 >> 24 < 0 ? HEAP32[i6 >> 2] | 0 : i4 & 255) | 0) ? (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i7, 51519, i1) | 0) == 0 : 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc(i7, 51532);
   HEAP32[i9 >> 2] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
   HEAP32[i9 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i9, 51582, __ZNSt3__211char_traitsIcE6lengthEPKc(51582) | 0);
   break;
  }
  i3 = __ZNSt3__211char_traitsIcE6lengthEPKc(51596) | 0;
  i2 = HEAP8[i5 >> 0] | 0;
  i1 = HEAP32[i6 >> 2] | 0;
  i4 = i2 & 255;
  do if ((i3 | 0) == ((i2 << 24 >> 24 < 0 ? i1 : i4) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i7, 51596, i3) | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc(i7, 51610);
   HEAP32[i9 >> 2] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
   HEAP32[i9 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i9, 51661, __ZNSt3__211char_traitsIcE6lengthEPKc(51661) | 0);
   break L1;
  } else {
   i2 = HEAP8[i5 >> 0] | 0;
   i4 = i2 & 255;
   i1 = HEAP32[i6 >> 2] | 0;
   break;
  } while (0);
  i2 = i2 << 24 >> 24 < 0;
  i5 = i2 ? HEAP32[i7 >> 2] | 0 : i7;
  i2 = i5 + (i2 ? i1 : i4) | 0;
  do if ((HEAP8[i2 + -1 >> 0] | 0) == 62) {
   i1 = 1;
   L24 : while (1) {
    L26 : while (1) {
     i3 = i2 + -1 | 0;
     if ((i3 | 0) == (i5 | 0)) break L24;
     switch (HEAP8[i2 + -2 >> 0] | 0) {
     case 60:
      {
       i8 = 24;
       break L26;
      }
     case 62:
      {
       i8 = 25;
       break L26;
      }
     default:
      i2 = i3;
     }
    }
    if ((i8 | 0) == 24) {
     i8 = 0;
     i1 = i1 + -1 | 0;
     if (!i1) {
      i8 = 27;
      break;
     }
    } else if ((i8 | 0) == 25) {
     i8 = 0;
     i1 = i1 + 1 | 0;
    }
    i2 = i3;
   }
   if ((i8 | 0) == 27) {
    i3 = i2 + -2 | 0;
    break;
   };
   HEAP32[i9 >> 2] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
   HEAP32[i9 + 8 >> 2] = 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break L1;
    HEAP32[i9 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
  } else i3 = i2; while (0);
  i1 = i3;
  while (1) {
   i2 = i1 + -1 | 0;
   if ((i2 | 0) == (i5 | 0)) {
    i1 = i5;
    break;
   }
   if ((HEAP8[i2 >> 0] | 0) == 58) break; else i1 = i2;
  }
  HEAP32[i9 >> 2] = 0;
  HEAP32[i9 + 4 >> 2] = 0;
  HEAP32[i9 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i9, i1, i3);
 } while (0);
 return;
}

function __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(i11, i12, i13, i14, i15, i16, i1) {
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i17 = i20;
 i18 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58824) | 0;
 i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58832) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i9 >> 2] | 0) + 20 >> 2] & 63](i17, i9);
 HEAP32[i16 >> 2] = i14;
 i1 = HEAP8[i11 >> 0] | 0;
 switch (i1 << 24 >> 24) {
 case 43:
 case 45:
  {
   i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 44 >> 2] & 63](i18, i1) | 0;
   i1 = HEAP32[i16 >> 2] | 0;
   HEAP32[i16 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i10;
   i1 = i11 + 1 | 0;
   break;
  }
 default:
  i1 = i11;
 }
 i10 = i13;
 L4 : do if ((i10 - i1 | 0) > 1 ? (HEAP8[i1 >> 0] | 0) == 48 : 0) {
  i2 = i1 + 1 | 0;
  switch (HEAP8[i2 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    i19 = 4;
    break L4;
   }
  }
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 44 >> 2] & 63](i18, 48) | 0;
  i8 = HEAP32[i16 >> 2] | 0;
  HEAP32[i16 >> 2] = i8 + 4;
  HEAP32[i8 >> 2] = i7;
  i1 = i1 + 2 | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 44 >> 2] & 63](i18, HEAP8[i2 >> 0] | 0) | 0;
  i2 = HEAP32[i16 >> 2] | 0;
  HEAP32[i16 >> 2] = i2 + 4;
  HEAP32[i2 >> 2] = i8;
  i2 = i1;
  while (1) {
   if (i2 >>> 0 >= i13 >>> 0) break L4;
   i8 = HEAP8[i2 >> 0] | 0;
   if (!(_isxdigit_l(i8, __ZNSt3__26__clocEv() | 0) | 0)) break L4;
   i2 = i2 + 1 | 0;
  }
 } else i19 = 4; while (0);
 L12 : do if ((i19 | 0) == 4) {
  i2 = i1;
  while (1) {
   if (i2 >>> 0 >= i13 >>> 0) break L12;
   i8 = HEAP8[i2 >> 0] | 0;
   if (!(_isdigit_l(i8, __ZNSt3__26__clocEv() | 0) | 0)) break L12;
   i2 = i2 + 1 | 0;
  }
 } while (0);
 i7 = i17 + 11 | 0;
 i6 = HEAP8[i7 >> 0] | 0;
 i8 = i17 + 4 | 0;
 L19 : do if ((i6 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i6 & 255) | 0) {
  L22 : do if ((i1 | 0) != (i2 | 0)) {
   i3 = i2;
   i4 = i1;
   while (1) {
    i3 = i3 + -1 | 0;
    if (i4 >>> 0 >= i3 >>> 0) break L22;
    i6 = HEAP8[i4 >> 0] | 0;
    HEAP8[i4 >> 0] = HEAP8[i3 >> 0] | 0;
    HEAP8[i3 >> 0] = i6;
    i4 = i4 + 1 | 0;
   }
  } while (0);
  i6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 16 >> 2] & 127](i9) | 0;
  i5 = i1;
  i3 = 0;
  i4 = 0;
  while (1) {
   if (i5 >>> 0 >= i2 >>> 0) break;
   i21 = HEAP8[((HEAP8[i7 >> 0] | 0) < 0 ? HEAP32[i17 >> 2] | 0 : i17) + i3 >> 0] | 0;
   if (i21 << 24 >> 24 > 0 & (i4 | 0) == (i21 << 24 >> 24 | 0)) {
    i4 = HEAP32[i16 >> 2] | 0;
    HEAP32[i16 >> 2] = i4 + 4;
    HEAP32[i4 >> 2] = i6;
    i4 = HEAP8[i7 >> 0] | 0;
    i3 = i3 + (i3 >>> 0 < ((i4 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i4 & 255) + -1 | 0) >>> 0 & 1) | 0;
    i4 = 0;
   }
   i22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 44 >> 2] & 63](i18, HEAP8[i5 >> 0] | 0) | 0;
   i21 = HEAP32[i16 >> 2] | 0;
   HEAP32[i16 >> 2] = i21 + 4;
   HEAP32[i21 >> 2] = i22;
   i5 = i5 + 1 | 0;
   i4 = i4 + 1 | 0;
  }
  i1 = i14 + (i1 - i11 << 2) | 0;
  i4 = HEAP32[i16 >> 2] | 0;
  if ((i1 | 0) == (i4 | 0)) i3 = i18; else {
   i3 = i4;
   while (1) {
    i3 = i3 + -4 | 0;
    if (i1 >>> 0 >= i3 >>> 0) {
     i3 = i18;
     i1 = i4;
     break L19;
    }
    i22 = HEAP32[i1 >> 2] | 0;
    HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
    HEAP32[i3 >> 2] = i22;
    i1 = i1 + 4 | 0;
   }
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 48 >> 2] & 15](i18, i1, i2, HEAP32[i16 >> 2] | 0) | 0;
  i1 = (HEAP32[i16 >> 2] | 0) + (i2 - i1 << 2) | 0;
  HEAP32[i16 >> 2] = i1;
  i3 = i18;
 } while (0);
 while (1) {
  if (i2 >>> 0 >= i13 >>> 0) break;
  i1 = HEAP8[i2 >> 0] | 0;
  if (i1 << 24 >> 24 == 46) {
   i19 = 32;
   break;
  }
  i21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 44 >> 2] & 63](i18, i1) | 0;
  i22 = HEAP32[i16 >> 2] | 0;
  i1 = i22 + 4 | 0;
  HEAP32[i16 >> 2] = i1;
  HEAP32[i22 >> 2] = i21;
  i2 = i2 + 1 | 0;
 }
 if ((i19 | 0) == 32) {
  i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 12 >> 2] & 127](i9) | 0;
  i22 = HEAP32[i16 >> 2] | 0;
  i1 = i22 + 4 | 0;
  HEAP32[i16 >> 2] = i1;
  HEAP32[i22 >> 2] = i21;
  i2 = i2 + 1 | 0;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 48 >> 2] & 15](i18, i2, i13, i1) | 0;
 i22 = (HEAP32[i16 >> 2] | 0) + (i10 - i2 << 2) | 0;
 HEAP32[i16 >> 2] = i22;
 HEAP32[i15 >> 2] = (i12 | 0) == (i13 | 0) ? i22 : i14 + (i12 - i11 << 2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i17);
 STACKTOP = i20;
 return;
}

function __ZN6vision14BinarykMedoidsILi96EE6assignERNSt3__26vectorIiNS2_9allocatorIiEEEEPKhiPKiiSB_i(i1, i9, i10, i2, i11, i12, i13, i14) {
 i1 = i1 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i8;
 if (((HEAP32[i9 + 4 >> 2] | 0) - (HEAP32[i9 >> 2] | 0) >> 2 | 0) != (i12 | 0)) {
  i7 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 27357) | 0, 27894) | 0, 33655) | 0, 198) | 0, 33662) | 0, 28262) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 if ((i2 | 0) <= 0) {
  i7 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 28047) | 0, 27894) | 0, 33655) | 0, 199) | 0, 33662) | 0, 28087) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 if ((i12 | 0) > (i2 | 0)) {
  i7 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 28123) | 0, 27894) | 0, 33655) | 0, 200) | 0, 33662) | 0, 28174) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 if ((i14 | 0) <= 0) {
  i7 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 28291) | 0, 27894) | 0, 33655) | 0, 201) | 0, 33662) | 0, 28330) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 i4 = 0;
 i6 = 0;
 while (1) {
  if ((i6 | 0) >= (i12 | 0)) break;
  i7 = i11 + (i6 << 2) | 0;
  i5 = 0;
  i1 = -1;
  while (1) {
   if ((i5 | 0) == (i14 | 0)) break;
   i2 = i13 + (i5 << 2) | 0;
   i3 = __ZN6vision15HammingDistanceILi96EEEjPKhS2_(i10 + ((HEAP32[i7 >> 2] | 0) * 96 | 0) | 0, i10 + ((HEAP32[i11 + (HEAP32[i2 >> 2] << 2) >> 2] | 0) * 96 | 0) | 0) | 0;
   if (i3 >>> 0 < i1 >>> 0) {
    HEAP32[(HEAP32[i9 >> 2] | 0) + (i6 << 2) >> 2] = HEAP32[i2 >> 2];
    i1 = i3;
   }
   i5 = i5 + 1 | 0;
  }
  i4 = i1 + i4 | 0;
  i6 = i6 + 1 | 0;
 }
 STACKTOP = i8;
 return i4 | 0;
}

function _QRM(i22, i23) {
 i22 = i22 | 0;
 i23 = i23 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d4 = 0.0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, d9 = 0.0, d10 = 0.0, d11 = 0.0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, d28 = 0.0, d29 = 0.0, d30 = 0.0, i31 = 0, i32 = 0;
 i27 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i27;
 i26 = HEAP32[i22 + 4 >> 2] | 0;
 do if ((!((i26 | 0) < 2 ? 1 : (i26 | 0) != (HEAP32[i22 + 8 >> 2] | 0)) ? (HEAP32[i23 + 4 >> 2] | 0) == (i26 | 0) : 0) ? (i24 = _arVecAlloc(i26) | 0, (i24 | 0) != 0) : 0) {
  i25 = i26 + -1 | 0;
  HEAP32[i1 + 4 >> 2] = i25;
  HEAP32[i1 >> 2] = (HEAP32[i24 >> 2] | 0) + 8;
  if ((_arVecTridiagonalize(i22, i23, i1) | 0) < 0) {
   _arVecFree(i24) | 0;
   i1 = -1;
   break;
  }
  i21 = HEAP32[i24 >> 2] | 0;
  HEAPF64[i21 >> 3] = 0.0;
  i19 = i25;
  while (1) {
   if ((i19 | 0) <= 0) break;
   i20 = i19;
   while (1) {
    if ((i20 | 0) <= 0) break;
    d10 = +Math_abs(+(+HEAPF64[i21 + (i20 << 3) >> 3]));
    i18 = HEAP32[i23 >> 2] | 0;
    i1 = i20 + -1 | 0;
    d11 = +Math_abs(+(+HEAPF64[i18 + (i1 << 3) >> 3]));
    if (d10 > (d11 + +Math_abs(+(+HEAPF64[i18 + (i20 << 3) >> 3]))) * 1.0e-06) i20 = i1; else break;
   }
   i13 = i19 + -1 | 0;
   L15 : do if ((i20 | 0) != (i19 | 0)) {
    i14 = i21 + (i19 << 3) | 0;
    i15 = i21 + (i20 + 1 << 3) | 0;
    i12 = 0;
    do {
     if (i12 >>> 0 > 99) break L15;
     i12 = i12 + 1 | 0;
     i16 = HEAP32[i23 >> 2] | 0;
     i17 = i16 + (i13 << 3) | 0;
     i18 = i16 + (i19 << 3) | 0;
     d4 = +HEAPF64[i18 >> 3];
     d11 = (+HEAPF64[i17 >> 3] - d4) * .5;
     d9 = +HEAPF64[i14 >> 3];
     d9 = d9 * d9;
     d6 = +Math_sqrt(+(d9 + d11 * d11));
     i8 = i20;
     d10 = +HEAPF64[i15 >> 3];
     d6 = +HEAPF64[i16 + (i20 << 3) >> 3] - d4 + d9 / (d11 + (d11 < 0.0 ? -d6 : d6));
     while (1) {
      if ((i8 | 0) >= (i19 | 0)) break;
      d4 = +Math_abs(+d6);
      if (d4 >= +Math_abs(+d10)) if (d4 > 1.0e-16) {
       d4 = -d10 / d6;
       d11 = 1.0 / +Math_sqrt(+(d4 * d4 + 1.0));
       d9 = d11;
       d11 = d4 * d11;
      } else {
       d9 = 1.0;
       d11 = 0.0;
      } else {
       d9 = -d6 / d10;
       d11 = 1.0 / +Math_sqrt(+(d9 * d9 + 1.0));
       d9 = d9 * d11;
      }
      i3 = i16 + (i8 << 3) | 0;
      d30 = +HEAPF64[i3 >> 3];
      i7 = i8 + 1 | 0;
      i1 = i16 + (i7 << 3) | 0;
      d29 = +HEAPF64[i1 >> 3];
      d4 = d30 - d29;
      i5 = i21 + (i7 << 3) | 0;
      d28 = d11 * (d11 * d4 + d9 * 2.0 * +HEAPF64[i5 >> 3]);
      HEAPF64[i3 >> 3] = d30 - d28;
      HEAPF64[i1 >> 3] = d29 + d28;
      i1 = i21 + (i8 << 3) | 0;
      if ((i8 | 0) > (i20 | 0)) HEAPF64[i1 >> 3] = d9 * +HEAPF64[i1 >> 3] - d10 * d11;
      d30 = +HEAPF64[i5 >> 3];
      HEAPF64[i5 >> 3] = d30 + d11 * (d9 * d4 - d11 * 2.0 * d30);
      i2 = Math_imul(i8, i26) | 0;
      i3 = Math_imul(i7, i26) | 0;
      i1 = 0;
      d4 = d10;
      while (1) {
       if ((i1 | 0) == (i26 | 0)) break;
       i31 = HEAP32[i22 >> 2] | 0;
       i32 = i31 + (i1 + i2 << 3) | 0;
       d6 = +HEAPF64[i32 >> 3];
       i31 = i31 + (i1 + i3 << 3) | 0;
       d4 = +HEAPF64[i31 >> 3];
       HEAPF64[i32 >> 3] = d9 * d6 - d11 * d4;
       HEAPF64[i31 >> 3] = d11 * d6 + d9 * d4;
       i1 = i1 + 1 | 0;
      }
      if ((i8 | 0) < (i13 | 0)) {
       d6 = +HEAPF64[i5 >> 3];
       i32 = i21 + (i8 + 2 << 3) | 0;
       d4 = +HEAPF64[i32 >> 3];
       HEAPF64[i32 >> 3] = d9 * d4;
       d4 = -(d11 * d4);
      }
      i8 = i7;
      d10 = d4;
     }
     d29 = +Math_abs(+(+HEAPF64[i14 >> 3]));
     d30 = +Math_abs(+(+HEAPF64[i17 >> 3]));
    } while (d29 > (d30 + +Math_abs(+(+HEAPF64[i18 >> 3]))) * 1.0e-06);
   } while (0);
   i19 = i13;
  }
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i25 | 0)) break;
   i3 = HEAP32[i23 >> 2] | 0;
   i5 = i3 + (i1 << 3) | 0;
   d6 = +HEAPF64[i5 >> 3];
   i8 = i1 + 1 | 0;
   d4 = d6;
   i7 = i1;
   i2 = i8;
   while (1) {
    if ((i2 | 0) >= (i26 | 0)) break;
    d30 = +HEAPF64[i3 + (i2 << 3) >> 3];
    i32 = d30 > d4;
    d4 = i32 ? d30 : d4;
    i7 = i32 ? i2 : i7;
    i2 = i2 + 1 | 0;
   }
   HEAPF64[i3 + (i7 << 3) >> 3] = d6;
   HEAPF64[i5 >> 3] = d4;
   i2 = HEAP32[i22 >> 2] | 0;
   i3 = i2 + ((Math_imul(i1, i26) | 0) << 3) | 0;
   i1 = i2 + ((Math_imul(i7, i26) | 0) << 3) | 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == (i26 | 0)) break;
    d30 = +HEAPF64[i1 >> 3];
    HEAPF64[i1 >> 3] = +HEAPF64[i3 >> 3];
    HEAPF64[i3 >> 3] = d30;
    i3 = i3 + 8 | 0;
    i1 = i1 + 8 | 0;
    i2 = i2 + 1 | 0;
   }
   i1 = i8;
  }
  _arVecFree(i24) | 0;
  i1 = 0;
 } else i1 = -1; while (0);
 STACKTOP = i27;
 return i1 | 0;
}

function _jpeg_idct_ifast(i1, i3, i4, i9, i10) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i2 = i12;
 i8 = HEAP32[i1 + 324 >> 2] | 0;
 i6 = 8;
 i7 = i2;
 i5 = HEAP32[i3 + 80 >> 2] | 0;
 while (1) {
  if (!i6) break;
  i3 = HEAP16[i4 + 16 >> 1] | 0;
  i1 = HEAP16[i4 + 32 >> 1] | 0;
  if (!((i3 | i1) << 16 >> 16)) if (((((HEAP16[i4 + 48 >> 1] | 0) == 0 ? (HEAP16[i4 + 64 >> 1] | 0) == 0 : 0) ? (HEAP16[i4 + 80 >> 1] | 0) == 0 : 0) ? (HEAP16[i4 + 96 >> 1] | 0) == 0 : 0) ? (HEAP16[i4 + 112 >> 1] | 0) == 0 : 0) {
   i1 = Math_imul(HEAP32[i5 >> 2] | 0, HEAP16[i4 >> 1] | 0) | 0;
   HEAP32[i7 >> 2] = i1;
   HEAP32[i7 + 32 >> 2] = i1;
   HEAP32[i7 + 64 >> 2] = i1;
   HEAP32[i7 + 96 >> 2] = i1;
   HEAP32[i7 + 128 >> 2] = i1;
   HEAP32[i7 + 160 >> 2] = i1;
   HEAP32[i7 + 192 >> 2] = i1;
   i3 = 56;
  } else {
   i1 = 0;
   i11 = 10;
  } else i11 = 10;
  if ((i11 | 0) == 10) {
   i11 = 0;
   i13 = Math_imul(HEAP32[i5 >> 2] | 0, HEAP16[i4 >> 1] | 0) | 0;
   i18 = Math_imul(HEAP32[i5 + 64 >> 2] | 0, i1 << 16 >> 16) | 0;
   i17 = Math_imul(HEAP32[i5 + 128 >> 2] | 0, HEAP16[i4 + 64 >> 1] | 0) | 0;
   i14 = Math_imul(HEAP32[i5 + 192 >> 2] | 0, HEAP16[i4 + 96 >> 1] | 0) | 0;
   i16 = i17 + i13 | 0;
   i17 = i13 - i17 | 0;
   i13 = i14 + i18 | 0;
   i14 = ((i18 - i14 | 0) * 362 >> 8) - i13 | 0;
   i18 = i13 + i16 | 0;
   i13 = i16 - i13 | 0;
   i16 = i14 + i17 | 0;
   i14 = i17 - i14 | 0;
   i17 = Math_imul(HEAP32[i5 + 32 >> 2] | 0, i3 << 16 >> 16) | 0;
   i15 = Math_imul(HEAP32[i5 + 96 >> 2] | 0, HEAP16[i4 + 48 >> 1] | 0) | 0;
   i20 = Math_imul(HEAP32[i5 + 160 >> 2] | 0, HEAP16[i4 + 80 >> 1] | 0) | 0;
   i19 = Math_imul(HEAP32[i5 + 224 >> 2] | 0, HEAP16[i4 + 112 >> 1] | 0) | 0;
   i3 = i20 + i15 | 0;
   i15 = i20 - i15 | 0;
   i20 = i19 + i17 | 0;
   i19 = i17 - i19 | 0;
   i17 = i20 + i3 | 0;
   i1 = (i19 + i15 | 0) * 473 >> 8;
   i15 = ((Math_imul(i15, -669) | 0) >> 8) - i17 + i1 | 0;
   i3 = ((i20 - i3 | 0) * 362 >> 8) - i15 | 0;
   i1 = i3 + ((i19 * 277 >> 8) - i1) | 0;
   HEAP32[i7 >> 2] = i17 + i18;
   HEAP32[i7 + 224 >> 2] = i18 - i17;
   HEAP32[i7 + 32 >> 2] = i15 + i16;
   HEAP32[i7 + 192 >> 2] = i16 - i15;
   HEAP32[i7 + 64 >> 2] = i3 + i14;
   HEAP32[i7 + 160 >> 2] = i14 - i3;
   HEAP32[i7 + 128 >> 2] = i1 + i13;
   i1 = i13 - i1 | 0;
   i3 = 24;
  }
  HEAP32[i7 + (i3 << 2) >> 2] = i1;
  i6 = i6 + -1 | 0;
  i7 = i7 + 4 | 0;
  i5 = i5 + 4 | 0;
  i4 = i4 + 2 | 0;
 }
 i6 = i8 + 128 | 0;
 i5 = 0;
 while (1) {
  if ((i5 | 0) == 8) break;
  i3 = (HEAP32[i9 + (i5 << 2) >> 2] | 0) + i10 | 0;
  i4 = HEAP32[i2 + 4 >> 2] | 0;
  i1 = HEAP32[i2 + 8 >> 2] | 0;
  if (!(i4 | i1)) if (((((HEAP32[i2 + 12 >> 2] | 0) == 0 ? (HEAP32[i2 + 16 >> 2] | 0) == 0 : 0) ? (HEAP32[i2 + 20 >> 2] | 0) == 0 : 0) ? (HEAP32[i2 + 24 >> 2] | 0) == 0 : 0) ? (HEAP32[i2 + 28 >> 2] | 0) == 0 : 0) {
   i20 = HEAP8[i6 + ((HEAP32[i2 >> 2] | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i3 >> 0] = i20;
   _memset(i3 + 1 | 0, i20 | 0, 7) | 0;
  } else {
   i1 = 0;
   i11 = 21;
  } else i11 = 21;
  if ((i11 | 0) == 21) {
   i11 = 0;
   i17 = HEAP32[i2 >> 2] | 0;
   i8 = HEAP32[i2 + 16 >> 2] | 0;
   i15 = i8 + i17 | 0;
   i8 = i17 - i8 | 0;
   i17 = HEAP32[i2 + 24 >> 2] | 0;
   i19 = i17 + i1 | 0;
   i17 = ((i1 - i17 | 0) * 362 >> 8) - i19 | 0;
   i13 = i19 + i15 | 0;
   i19 = i15 - i19 | 0;
   i15 = i17 + i8 | 0;
   i17 = i8 - i17 | 0;
   i8 = HEAP32[i2 + 20 >> 2] | 0;
   i16 = HEAP32[i2 + 12 >> 2] | 0;
   i18 = i16 + i8 | 0;
   i16 = i8 - i16 | 0;
   i8 = HEAP32[i2 + 28 >> 2] | 0;
   i7 = i8 + i4 | 0;
   i8 = i4 - i8 | 0;
   i14 = i7 + i18 | 0;
   i20 = (i8 + i16 | 0) * 473 >> 8;
   i16 = ((Math_imul(i16, -669) | 0) >> 8) - i14 + i20 | 0;
   i18 = ((i7 - i18 | 0) * 362 >> 8) - i16 | 0;
   i20 = i18 + ((i8 * 277 >> 8) - i20) | 0;
   HEAP8[i3 >> 0] = HEAP8[i6 + ((i14 + i13 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i3 + 7 >> 0] = HEAP8[i6 + ((i13 - i14 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i3 + 1 >> 0] = HEAP8[i6 + ((i16 + i15 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i3 + 6 >> 0] = HEAP8[i6 + ((i15 - i16 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i3 + 2 >> 0] = HEAP8[i6 + ((i18 + i17 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i3 + 5 >> 0] = HEAP8[i6 + ((i17 - i18 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i3 + 4 >> 0] = HEAP8[i6 + ((i20 + i19 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i3 + 3 >> 0] = HEAP8[i6 + ((i19 - i20 | 0) >>> 5 & 1023) >> 0] | 0;
  }
  i5 = i5 + 1 | 0;
  i2 = i2 + 32 | 0;
 }
 STACKTOP = i12;
 return;
}

function __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i11, i12, i13, i14, i15, i16, i1) {
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i17 = i20;
 i18 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
 i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58808) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i10 >> 2] | 0) + 20 >> 2] & 63](i17, i10);
 HEAP32[i16 >> 2] = i14;
 i1 = HEAP8[i11 >> 0] | 0;
 switch (i1 << 24 >> 24) {
 case 43:
 case 45:
  {
   i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 28 >> 2] & 63](i18, i1) | 0;
   i2 = HEAP32[i16 >> 2] | 0;
   HEAP32[i16 >> 2] = i2 + 1;
   HEAP8[i2 >> 0] = i9;
   i2 = i11 + 1 | 0;
   break;
  }
 default:
  i2 = i11;
 }
 i9 = i13;
 L4 : do if ((i9 - i2 | 0) > 1 ? (HEAP8[i2 >> 0] | 0) == 48 : 0) {
  i1 = i2 + 1 | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    i19 = 4;
    break L4;
   }
  }
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 28 >> 2] & 63](i18, 48) | 0;
  i8 = HEAP32[i16 >> 2] | 0;
  HEAP32[i16 >> 2] = i8 + 1;
  HEAP8[i8 >> 0] = i7;
  i2 = i2 + 2 | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 28 >> 2] & 63](i18, HEAP8[i1 >> 0] | 0) | 0;
  i1 = HEAP32[i16 >> 2] | 0;
  HEAP32[i16 >> 2] = i1 + 1;
  HEAP8[i1 >> 0] = i8;
  i1 = i2;
  while (1) {
   if (i1 >>> 0 >= i13 >>> 0) break L4;
   i8 = HEAP8[i1 >> 0] | 0;
   if (!(_isxdigit_l(i8, __ZNSt3__26__clocEv() | 0) | 0)) break L4;
   i1 = i1 + 1 | 0;
  }
 } else i19 = 4; while (0);
 L12 : do if ((i19 | 0) == 4) {
  i1 = i2;
  while (1) {
   if (i1 >>> 0 >= i13 >>> 0) break L12;
   i8 = HEAP8[i1 >> 0] | 0;
   if (!(_isdigit_l(i8, __ZNSt3__26__clocEv() | 0) | 0)) break L12;
   i1 = i1 + 1 | 0;
  }
 } while (0);
 i7 = i17 + 11 | 0;
 i6 = HEAP8[i7 >> 0] | 0;
 i8 = i17 + 4 | 0;
 L19 : do if ((i6 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i6 & 255) | 0) {
  L22 : do if ((i2 | 0) != (i1 | 0)) {
   i3 = i1;
   i4 = i2;
   while (1) {
    i3 = i3 + -1 | 0;
    if (i4 >>> 0 >= i3 >>> 0) break L22;
    i6 = HEAP8[i4 >> 0] | 0;
    HEAP8[i4 >> 0] = HEAP8[i3 >> 0] | 0;
    HEAP8[i3 >> 0] = i6;
    i4 = i4 + 1 | 0;
   }
  } while (0);
  i6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 16 >> 2] & 127](i10) | 0;
  i5 = i2;
  i4 = 0;
  i3 = 0;
  while (1) {
   if (i5 >>> 0 >= i1 >>> 0) break;
   i21 = HEAP8[((HEAP8[i7 >> 0] | 0) < 0 ? HEAP32[i17 >> 2] | 0 : i17) + i3 >> 0] | 0;
   if (i21 << 24 >> 24 > 0 & (i4 | 0) == (i21 << 24 >> 24 | 0)) {
    i4 = HEAP32[i16 >> 2] | 0;
    HEAP32[i16 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i6;
    i4 = HEAP8[i7 >> 0] | 0;
    i3 = i3 + (i3 >>> 0 < ((i4 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i4 & 255) + -1 | 0) >>> 0 & 1) | 0;
    i4 = 0;
   }
   i22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 28 >> 2] & 63](i18, HEAP8[i5 >> 0] | 0) | 0;
   i21 = HEAP32[i16 >> 2] | 0;
   HEAP32[i16 >> 2] = i21 + 1;
   HEAP8[i21 >> 0] = i22;
   i5 = i5 + 1 | 0;
   i4 = i4 + 1 | 0;
  }
  i3 = i14 + (i2 - i11) | 0;
  i2 = HEAP32[i16 >> 2] | 0;
  if ((i3 | 0) == (i2 | 0)) i3 = i18; else while (1) {
   i2 = i2 + -1 | 0;
   if (i3 >>> 0 >= i2 >>> 0) {
    i3 = i18;
    break L19;
   }
   i22 = HEAP8[i3 >> 0] | 0;
   HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
   HEAP8[i2 >> 0] = i22;
   i3 = i3 + 1 | 0;
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 32 >> 2] & 15](i18, i2, i1, HEAP32[i16 >> 2] | 0) | 0;
  HEAP32[i16 >> 2] = (HEAP32[i16 >> 2] | 0) + (i1 - i2);
  i3 = i18;
 } while (0);
 while (1) {
  if (i1 >>> 0 >= i13 >>> 0) break;
  i2 = HEAP8[i1 >> 0] | 0;
  if (i2 << 24 >> 24 == 46) {
   i19 = 32;
   break;
  }
  i21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 63](i18, i2) | 0;
  i22 = HEAP32[i16 >> 2] | 0;
  HEAP32[i16 >> 2] = i22 + 1;
  HEAP8[i22 >> 0] = i21;
  i1 = i1 + 1 | 0;
 }
 if ((i19 | 0) == 32) {
  i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 127](i10) | 0;
  i22 = HEAP32[i16 >> 2] | 0;
  HEAP32[i16 >> 2] = i22 + 1;
  HEAP8[i22 >> 0] = i21;
  i1 = i1 + 1 | 0;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 32 >> 2] & 15](i18, i1, i13, HEAP32[i16 >> 2] | 0) | 0;
 i22 = (HEAP32[i16 >> 2] | 0) + (i9 - i1) | 0;
 HEAP32[i16 >> 2] = i22;
 HEAP32[i15 >> 2] = (i12 | 0) == (i13 | 0) ? i22 : i14 + (i12 - i11) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i17);
 STACKTOP = i20;
 return;
}

function __ZNK6vision4NodeILi96EE7nearestERNSt3__26vectorIPKS1_NS2_9allocatorIS5_EEEERNS2_14priority_queueINS_17PriorityQueueItemILi96EEENS3_ISC_NS6_ISC_EEEENS2_4lessISC_EEEEPKh(i1, i12, i13, i3) {
 i1 = i1 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i11 = i19 + 8 | 0;
 i10 = i19 + 36 | 0;
 i14 = i19 + 32 | 0;
 i15 = i19 + 28 | 0;
 i16 = i19;
 i17 = i19 + 16 | 0;
 i18 = i1 + 104 | 0;
 __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEEC2Em(i17, (HEAP32[i1 + 108 >> 2] | 0) - (HEAP32[i18 >> 2] | 0) >> 2);
 i9 = i17 + 4 | 0;
 i1 = -1;
 i2 = 0;
 i8 = -1;
 while (1) {
  if (i2 >>> 0 >= (HEAP32[i9 >> 2] | 0) - (HEAP32[i17 >> 2] | 0) >> 3 >>> 0) break;
  i6 = __ZN6vision15HammingDistanceILi96EEEjPKhS2_((HEAP32[(HEAP32[i18 >> 2] | 0) + (i2 << 2) >> 2] | 0) + 4 | 0, i3) | 0;
  __ZN6vision17PriorityQueueItemILi96EEC2EPKNS_4NodeILi96EEEj(i11, HEAP32[(HEAP32[i18 >> 2] | 0) + (i2 << 2) >> 2] | 0, i6);
  i4 = i11;
  i7 = HEAP32[i4 + 4 >> 2] | 0;
  i5 = (HEAP32[i17 >> 2] | 0) + (i2 << 3) | 0;
  HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i5 + 4 >> 2] = i7;
  __ZN6vision17PriorityQueueItemILi96EED2Ev(i11);
  i5 = i6 >>> 0 < i1 >>> 0;
  i7 = i5 ? i2 : i8;
  i1 = i5 ? i6 : i1;
  i2 = i2 + 1 | 0;
  i8 = i7;
 }
 if ((i8 | 0) == -1) {
  i7 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30468) | 0, 27413) | 0, 33655) | 0, 155) | 0, 33662) | 0, 30502) | 0;
  __ZNKSt3__28ios_base6getlocEv(i11, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i11, 58792) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i11);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 i1 = HEAP32[(HEAP32[i18 >> 2] | 0) + (i8 << 2) >> 2] | 0;
 HEAP32[i11 >> 2] = i1;
 i6 = i12 + 4 | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 i7 = i12 + 8 | 0;
 if (i2 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
  HEAP32[i2 >> 2] = i1;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(i12, i11);
 i4 = i13 + 4 | 0;
 i5 = i13 + 8 | 0;
 i3 = 0;
 while (1) {
  i1 = HEAP32[i17 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i9 >> 2] | 0) - i1 >> 3 >>> 0) break;
  do if ((i3 | 0) != (i8 | 0)) {
   i2 = __ZNK6vision17PriorityQueueItemILi96EE4distEv(i1 + (i3 << 3) | 0) | 0;
   if ((i2 | 0) == (__ZNK6vision17PriorityQueueItemILi96EE4distEv((HEAP32[i17 >> 2] | 0) + (i8 << 3) | 0) | 0)) {
    i1 = HEAP32[(HEAP32[i18 >> 2] | 0) + (i3 << 2) >> 2] | 0;
    HEAP32[i11 >> 2] = i1;
    i2 = HEAP32[i6 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
     HEAP32[i2 >> 2] = i1;
     HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
    } else __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(i12, i11);
    break;
   } else {
    i1 = (HEAP32[i17 >> 2] | 0) + (i3 << 3) | 0;
    i2 = HEAP32[i4 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i5 >> 2] | 0)) {
     __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i13, i1);
     i1 = HEAP32[i4 >> 2] | 0;
    } else {
     i21 = i1;
     i20 = HEAP32[i21 + 4 >> 2] | 0;
     i1 = i2;
     HEAP32[i1 >> 2] = HEAP32[i21 >> 2];
     HEAP32[i1 + 4 >> 2] = i20;
     i1 = (HEAP32[i4 >> 2] | 0) + 8 | 0;
     HEAP32[i4 >> 2] = i1;
    }
    i21 = HEAP32[i13 >> 2] | 0;
    HEAP32[i14 >> 2] = i21;
    HEAP32[i15 >> 2] = i1;
    HEAP32[i10 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i11 >> 2] = HEAP32[i15 >> 2];
    __ZNSt3__29__sift_upIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeE(i10, i11, i16, i1 - i21 >> 3);
    break;
   }
  } while (0);
  i3 = i3 + 1 | 0;
 }
 __ZNSt3__213__vector_baseIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEED2Ev(i17);
 STACKTOP = i19;
 return;
}

function __ZN6vision14ExtractFREAK84ERNS_18BinaryFeatureStoreEPKNS_25GaussianScaleSpacePyramidERKNSt3__26vectorINS_12FeaturePointENS5_9allocatorIS7_EEEEPKfSE_SE_SE_SE_SE_ffffffff(i5, i6, i15, i16, i18, i19, i20, i21, i22, d23, d7, d8, d9, d10, d11, d12, d13) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 d23 = +d23;
 d7 = +d7;
 d8 = +d8;
 d9 = +d9;
 d10 = +d10;
 d11 = +d11;
 d12 = +d12;
 d13 = +d13;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i14 = 0, i17 = 0, i24 = 0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i14 = i24;
 if (!i6) {
  i17 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32099) | 0, 32130) | 0, 33655) | 0, 537) | 0, 33662) | 0, 32235) | 0;
  __ZNKSt3__28ios_base6getlocEv(i14, i17 + (HEAP32[(HEAP32[i17 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i14, 58792) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i14);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i17, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i17) | 0;
  _abort();
 }
 i4 = __ZNK6vision18BinaryFeatureStore4sizeEv(i5) | 0;
 i17 = i15 + 4 | 0;
 i3 = HEAP32[i17 >> 2] | 0;
 i2 = HEAP32[i15 >> 2] | 0;
 if ((i4 | 0) != ((i3 - i2 | 0) / 20 | 0 | 0)) {
  i4 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32251) | 0, 32130) | 0, 33655) | 0, 538) | 0, 33662) | 0, 32304) | 0;
  __ZNKSt3__28ios_base6getlocEv(i14, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i14, 58792) | 0;
  i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i1, 10) | 0;
  __ZNSt3__26localeD2Ev(i14);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i1) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 i4 = 0;
 i1 = 0;
 while (1) {
  i2 = (i3 - i2 | 0) / 20 | 0;
  if (i4 >>> 0 >= i2 >>> 0) break;
  i3 = __ZN6vision18BinaryFeatureStore7featureEm(i5, i1) | 0;
  if (__ZN6vision14ExtractFREAK84EPhPKNS_25GaussianScaleSpacePyramidERKNS_12FeaturePointEPKfS8_S8_S8_S8_S8_ffffffff(i3, i6, (HEAP32[i15 >> 2] | 0) + (i4 * 20 | 0) | 0, i16, i18, i19, i20, i21, i22, d23, d7, d8, d9, d10, d11, d12, d13) | 0) {
   i2 = (HEAP32[i15 >> 2] | 0) + (i4 * 20 | 0) | 0;
   i3 = __ZN6vision18BinaryFeatureStore5pointEm(i5, i1) | 0;
   HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i3 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i3 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
   HEAP32[i3 + 12 >> 2] = HEAP32[i2 + 12 >> 2];
   HEAP8[i3 + 16 >> 0] = HEAP8[i2 + 16 >> 0] | 0;
   i1 = i1 + 1 | 0;
  }
  i4 = i4 + 1 | 0;
  i2 = HEAP32[i15 >> 2] | 0;
  i3 = HEAP32[i17 >> 2] | 0;
 }
 if ((i1 | 0) == (i2 | 0)) {
  __ZN6vision18BinaryFeatureStore6resizeEm(i5, i1);
  STACKTOP = i24;
  return;
 } else {
  i24 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32341) | 0, 32130) | 0, 33655) | 0, 617) | 0, 33662) | 0, 32392) | 0;
  __ZNKSt3__28ios_base6getlocEv(i14, i24 + (HEAP32[(HEAP32[i24 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i22 = __ZNKSt3__26locale9use_facetERNS0_2idE(i14, 58792) | 0;
  i22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i22 >> 2] | 0) + 28 >> 2] & 63](i22, 10) | 0;
  __ZNSt3__26localeD2Ev(i14);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i24, i22) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i24) | 0;
  _abort();
 }
}

function __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i5, i8) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i9 = i10 + 8 | 0;
 i4 = i10;
 L1 : do if ((i5 - i1 | 0) > 1) {
  i3 = (HEAP8[i1 >> 0] | 0) == 76 ? i1 + 1 | 0 : i1;
  switch (HEAP8[i3 >> 0] | 0) {
  case 78:
   {
    i9 = __ZN10__cxxabiv112_GLOBAL__N_117parse_nested_nameINS0_2DbEEEPKcS4_S4_RT_(i3, i5, i8) | 0;
    i1 = (i9 | 0) == (i3 | 0) ? i1 : i9;
    break L1;
   }
  case 90:
   {
    i9 = __ZN10__cxxabiv112_GLOBAL__N_116parse_local_nameINS0_2DbEEEPKcS4_S4_RT_(i3, i5, i8) | 0;
    i1 = (i9 | 0) == (i3 | 0) ? i1 : i9;
    break L1;
   }
  default:
   {
    i6 = __ZN10__cxxabiv112_GLOBAL__N_119parse_unscoped_nameINS0_2DbEEEPKcS4_S4_RT_(i3, i5, i8) | 0;
    if ((i6 | 0) == (i3 | 0)) {
     i2 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i3, i5, i8) | 0;
     if ((i2 | 0) == (i3 | 0) | (i2 | 0) == (i5 | 0)) break L1;
     if ((HEAP8[i2 >> 0] | 0) != 73) break L1;
     i4 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i2, i5, i8) | 0;
     if ((i4 | 0) == (i2 | 0)) break L1;
     i3 = i8 + 4 | 0;
     i2 = HEAP32[i3 >> 2] | 0;
     if (((i2 - (HEAP32[i8 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i9, i2 + -24 | 0);
     i2 = HEAP32[i3 >> 2] | 0;
     i1 = 0;
     while (1) {
      if ((i1 | 0) == -1) break;
      i8 = i1 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i8 * 24 | 0) | 0);
      i1 = i8;
     }
     HEAP32[i3 >> 2] = i2 + -24;
     i1 = HEAP8[i9 + 11 >> 0] | 0;
     i8 = i1 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i2 + -48 | 0, i8 ? HEAP32[i9 >> 2] | 0 : i9, i8 ? HEAP32[i9 + 4 >> 2] | 0 : i1 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
     i1 = i4;
     break L1;
    }
    if ((i6 | 0) == (i5 | 0)) {
     i1 = i5;
     break L1;
    }
    if ((HEAP8[i6 >> 0] | 0) != 73) {
     i1 = i6;
     break L1;
    }
    i7 = i8 + 4 | 0;
    i2 = HEAP32[i7 >> 2] | 0;
    if ((HEAP32[i8 >> 2] | 0) == (i2 | 0)) break L1;
    HEAP32[i4 >> 2] = HEAP32[i8 + 12 >> 2];
    __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i9, i2 + -24 | 0, i4);
    i2 = i8 + 20 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i8 + 24 >> 2] | 0) >>> 0) {
     HEAP32[i3 >> 2] = 0;
     i12 = i3 + 4 | 0;
     HEAP32[i12 >> 2] = 0;
     i11 = i3 + 8 | 0;
     HEAP32[i11 >> 2] = 0;
     HEAP32[i3 + 12 >> 2] = HEAP32[i9 + 12 >> 2];
     HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
     i4 = i9 + 4 | 0;
     HEAP32[i12 >> 2] = HEAP32[i4 >> 2];
     i3 = i9 + 8 | 0;
     HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
     HEAP32[i3 >> 2] = 0;
     HEAP32[i4 >> 2] = 0;
     HEAP32[i9 >> 2] = 0;
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i8 + 16 | 0, i9);
    __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i9);
    i3 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i6, i5, i8) | 0;
    if ((i3 | 0) == (i6 | 0)) break L1;
    i2 = HEAP32[i7 >> 2] | 0;
    if (((i2 - (HEAP32[i8 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i9, i2 + -24 | 0);
    i2 = HEAP32[i7 >> 2] | 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == -1) break;
     i12 = i1 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i12 * 24 | 0) | 0);
     i1 = i12;
    }
    HEAP32[i7 >> 2] = i2 + -24;
    i1 = HEAP8[i9 + 11 >> 0] | 0;
    i12 = i1 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i2 + -48 | 0, i12 ? HEAP32[i9 >> 2] | 0 : i9, i12 ? HEAP32[i9 + 4 >> 2] | 0 : i1 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
    i1 = i3;
    break L1;
   }
  }
 } while (0);
 STACKTOP = i10;
 return i1 | 0;
}

function _extractVisibleFeatures(i10, i11, i19, i37, i38) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i19 = i19 | 0;
 i37 = i37 | 0;
 i38 = i38 | 0;
 var i1 = 0, i2 = 0, d3 = 0.0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i12 = 0, d13 = 0.0, d14 = 0.0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, d32 = 0.0, i33 = 0, d34 = 0.0, i35 = 0, i36 = 0, i39 = 0, i40 = 0, d41 = 0.0, d42 = 0.0;
 i40 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 i39 = i40 + 48 | 0;
 i30 = i40;
 i31 = i40 + 76 | 0;
 i33 = i40 + 72 | 0;
 i35 = i40 + 64 | 0;
 i36 = i40 + 56 | 0;
 i12 = i19 + 4 | 0;
 d13 = +(HEAP32[i10 >> 2] | 0);
 d14 = +(HEAP32[i10 + 4 >> 2] | 0);
 i15 = i30 + 4 | 0;
 i16 = i30 + 12 | 0;
 i17 = i30 + 16 | 0;
 i18 = i30 + 20 | 0;
 i20 = i30 + 28 | 0;
 i21 = i30 + 32 | 0;
 i22 = i30 + 36 | 0;
 i23 = i30 + 44 | 0;
 i24 = i30 + 8 | 0;
 i25 = i30 + 24 | 0;
 i26 = i30 + 40 | 0;
 i27 = i35 + 4 | 0;
 i28 = i36 + 4 | 0;
 i29 = i38 + 4812 | 0;
 i4 = 0;
 i5 = 0;
 i9 = 0;
 L1 : while (1) {
  if ((i9 | 0) >= (HEAP32[i12 >> 2] | 0)) {
   i2 = 29;
   break;
  }
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 4) break;
    HEAP32[i30 + (i2 << 4) + (i1 << 2) >> 2] = HEAP32[i11 + (i9 * 48 | 0) + (i2 << 4) + (i1 << 2) >> 2];
    i1 = i1 + 1 | 0;
   }
   i2 = i2 + 1 | 0;
  }
  i1 = i4;
  i2 = i5;
  i8 = 0;
  i4 = HEAP32[(HEAP32[i19 >> 2] | 0) + (i9 * 112 | 0) + 4 >> 2] | 0;
  while (1) {
   if ((i8 | 0) >= (HEAP32[i4 + 4 >> 2] | 0)) break;
   i7 = 0;
   i5 = i4;
   while (1) {
    i4 = HEAP32[i5 >> 2] | 0;
    if ((i7 | 0) >= (HEAP32[i4 + (i8 * 20 | 0) + 4 >> 2] | 0)) break;
    i5 = HEAP32[i4 + (i8 * 20 | 0) >> 2] | 0;
    i5 = (_ar2MarkerCoord2ScreenCoord2(i10, i30, +HEAPF32[i5 + (i7 * 20 | 0) + 8 >> 2], +HEAPF32[i5 + (i7 * 20 | 0) + 12 >> 2], i31, i33) | 0) < 0;
    d3 = +HEAPF32[i31 >> 2];
    do if ((!(i5 | d3 < 0.0) ? (d6 = +HEAPF32[i33 >> 2], !(d6 >= d14) & (!(d3 >= d13) & !(d6 < 0.0))) : 0) ? (i5 = HEAP32[(HEAP32[HEAP32[(HEAP32[i19 >> 2] | 0) + (i9 * 112 | 0) + 4 >> 2] >> 2] | 0) + (i8 * 20 | 0) >> 2] | 0, d32 = +HEAPF32[i5 + (i7 * 20 | 0) + 8 >> 2], d34 = +HEAPF32[i5 + (i7 * 20 | 0) + 12 >> 2], d41 = +HEAPF32[i16 >> 2] + (+HEAPF32[i30 >> 2] * d32 + +HEAPF32[i15 >> 2] * d34), d3 = +HEAPF32[i20 >> 2] + (d32 * +HEAPF32[i17 >> 2] + d34 * +HEAPF32[i18 >> 2]), d42 = +HEAPF32[i23 >> 2] + (d32 * +HEAPF32[i21 >> 2] + d34 * +HEAPF32[i22 >> 2]), d6 = +Math_sqrt(+(d41 * d41 + d3 * d3 + d42 * d42)), !(+HEAPF32[i26 >> 2] * (d42 / d6) + (+HEAPF32[i24 >> 2] * (d41 / d6) + +HEAPF32[i25 >> 2] * (d3 / d6)) > -.10000000149011612)) : 0) {
     HEAPF32[i35 >> 2] = d32;
     HEAPF32[i27 >> 2] = d34;
     _ar2GetResolution(i10, i30, i35, i36) | 0;
     d3 = +HEAPF32[i28 >> 2];
     i4 = HEAP32[HEAP32[(HEAP32[i19 >> 2] | 0) + (i9 * 112 | 0) + 4 >> 2] >> 2] | 0;
     d6 = +HEAPF32[i4 + (i8 * 20 | 0) + 12 >> 2];
     if (d3 <= d6 ? d3 >= +HEAPF32[i4 + (i8 * 20 | 0) + 16 >> 2] : 0) {
      if ((i2 | 0) == 200) {
       i2 = 19;
       break L1;
      }
      HEAP32[i37 + (i2 * 24 | 0) >> 2] = i9;
      HEAP32[i37 + (i2 * 24 | 0) + 4 >> 2] = i8;
      HEAP32[i37 + (i2 * 24 | 0) + 8 >> 2] = i7;
      HEAP32[i37 + (i2 * 24 | 0) + 16 >> 2] = HEAP32[i31 >> 2];
      HEAP32[i37 + (i2 * 24 | 0) + 20 >> 2] = HEAP32[i33 >> 2];
      HEAP32[i37 + (i2 * 24 | 0) + 12 >> 2] = 0;
      i2 = i2 + 1 | 0;
      break;
     }
     if (d3 <= d6 * 2.0 ? d3 >= +HEAPF32[i4 + (i8 * 20 | 0) + 16 >> 2] * .5 : 0) if ((i1 | 0) == 200) {
      HEAP32[i29 >> 2] = -1;
      i1 = 200;
      break;
     } else {
      HEAP32[i38 + (i1 * 24 | 0) >> 2] = i9;
      HEAP32[i38 + (i1 * 24 | 0) + 4 >> 2] = i8;
      HEAP32[i38 + (i1 * 24 | 0) + 8 >> 2] = i7;
      HEAP32[i38 + (i1 * 24 | 0) + 16 >> 2] = HEAP32[i31 >> 2];
      HEAP32[i38 + (i1 * 24 | 0) + 20 >> 2] = HEAP32[i33 >> 2];
      HEAP32[i38 + (i1 * 24 | 0) + 12 >> 2] = 0;
      i1 = i1 + 1 | 0;
      break;
     }
    } while (0);
    i7 = i7 + 1 | 0;
    i5 = HEAP32[(HEAP32[i19 >> 2] | 0) + (i9 * 112 | 0) + 4 >> 2] | 0;
   }
   i8 = i8 + 1 | 0;
   i4 = i5;
  }
  i4 = i1;
  i5 = i2;
  i9 = i9 + 1 | 0;
 }
 if ((i2 | 0) == 19) {
  _arLog(0, 3, 19981, i39);
  i1 = i37 + 4812 | 0;
 } else if ((i2 | 0) == 29) {
  HEAP32[i37 + (i5 * 24 | 0) + 12 >> 2] = -1;
  i1 = i38 + (i4 * 24 | 0) + 12 | 0;
 }
 HEAP32[i1 >> 2] = -1;
 STACKTOP = i40;
 return;
}

function _get_sos(i14) {
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i15 = HEAP32[i14 + 24 >> 2] | 0;
 i2 = HEAP32[i15 >> 2] | 0;
 i16 = i15 + 4 | 0;
 i1 = HEAP32[i16 >> 2] | 0;
 i17 = i14 + 440 | 0;
 if (!(HEAP32[(HEAP32[i17 >> 2] | 0) + 16 >> 2] | 0)) {
  i12 = HEAP32[i14 >> 2] | 0;
  HEAP32[i12 + 20 >> 2] = 62;
  FUNCTION_TABLE_vi[HEAP32[i12 >> 2] & 255](i14);
 }
 if (!i1) if (!(FUNCTION_TABLE_ii[HEAP32[i15 + 12 >> 2] & 127](i14) | 0)) i1 = 0; else {
  i1 = HEAP32[i16 >> 2] | 0;
  i2 = HEAP32[i15 >> 2] | 0;
  i13 = 6;
 } else i13 = 6;
 L7 : do if ((i13 | 0) == 6) {
  i1 = i1 + -1 | 0;
  i3 = i2 + 1 | 0;
  i4 = (HEAPU8[i2 >> 0] | 0) << 8;
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i15 + 12 >> 2] & 127](i14) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i16 >> 2] | 0;
   i2 = HEAP32[i15 >> 2] | 0;
  } else i2 = i3;
  i1 = i1 + -1 | 0;
  i3 = i2 + 1 | 0;
  i2 = i4 | (HEAPU8[i2 >> 0] | 0);
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i15 + 12 >> 2] & 127](i14) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i16 >> 2] | 0;
   i3 = HEAP32[i15 >> 2] | 0;
  }
  i12 = HEAP8[i3 >> 0] | 0;
  i11 = i12 & 255;
  i10 = HEAP32[i14 >> 2] | 0;
  HEAP32[i10 + 20 >> 2] = 103;
  HEAP32[i10 + 24 >> 2] = i11;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i14 >> 2] | 0) + 4 >> 2] & 63](i14, 1);
  if ((i12 + -1 & 255) > 3 | (i2 | 0) != ((i11 << 1) + 6 | 0)) {
   i12 = HEAP32[i14 >> 2] | 0;
   HEAP32[i12 + 20 >> 2] = 11;
   FUNCTION_TABLE_vi[HEAP32[i12 >> 2] & 255](i14);
  }
  HEAP32[i14 + 328 >> 2] = i11;
  i12 = i15 + 12 | 0;
  i9 = i14 + 216 | 0;
  i10 = i14 + 36 | 0;
  i8 = 0;
  while (1) {
   i1 = i1 + -1 | 0;
   i2 = i3 + 1 | 0;
   i3 = (i1 | 0) == 0;
   if (i8 >>> 0 >= i11 >>> 0) break;
   if (i3) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i12 >> 2] & 127](i14) | 0)) {
     i1 = 0;
     break L7;
    }
    i1 = HEAP32[i16 >> 2] | 0;
    i2 = HEAP32[i15 >> 2] | 0;
   }
   i1 = i1 + -1 | 0;
   i3 = i2 + 1 | 0;
   i7 = HEAPU8[i2 >> 0] | 0;
   if (!i1) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i12 >> 2] & 127](i14) | 0)) {
     i1 = 0;
     break L7;
    }
    i1 = HEAP32[i16 >> 2] | 0;
    i3 = HEAP32[i15 >> 2] | 0;
   }
   i5 = HEAPU8[i3 >> 0] | 0;
   i6 = HEAP32[i10 >> 2] | 0;
   i2 = HEAP32[i9 >> 2] | 0;
   i4 = 0;
   while (1) {
    if ((i4 | 0) >= (i6 | 0)) {
     i13 = 26;
     break;
    }
    if ((HEAP32[i2 >> 2] | 0) == (i7 | 0)) break;
    i2 = i2 + 84 | 0;
    i4 = i4 + 1 | 0;
   }
   if ((i13 | 0) == 26) {
    i13 = 0;
    i6 = HEAP32[i14 >> 2] | 0;
    HEAP32[i6 + 20 >> 2] = 5;
    HEAP32[i6 + 24 >> 2] = i7;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i14 >> 2] >> 2] & 255](i14);
   }
   HEAP32[i14 + 332 + (i8 << 2) >> 2] = i2;
   i18 = i2 + 20 | 0;
   HEAP32[i18 >> 2] = i5 >>> 4;
   i4 = i2 + 24 | 0;
   HEAP32[i4 >> 2] = i5 & 15;
   i6 = HEAP32[i14 >> 2] | 0;
   HEAP32[i6 + 24 >> 2] = i7;
   HEAP32[i6 + 28 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i6 + 32 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i6 + 20 >> 2] = 104;
   FUNCTION_TABLE_vii[HEAP32[i6 + 4 >> 2] & 63](i14, 1);
   i8 = i8 + 1 | 0;
  }
  if (i3) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i12 >> 2] & 127](i14) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i16 >> 2] | 0;
   i2 = HEAP32[i15 >> 2] | 0;
  }
  i1 = i1 + -1 | 0;
  i3 = i2 + 1 | 0;
  i5 = i14 + 400 | 0;
  HEAP32[i5 >> 2] = HEAPU8[i2 >> 0];
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i12 >> 2] & 127](i14) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i16 >> 2] | 0;
   i3 = HEAP32[i15 >> 2] | 0;
  }
  i2 = i1 + -1 | 0;
  i1 = i3 + 1 | 0;
  i4 = i14 + 404 | 0;
  HEAP32[i4 >> 2] = HEAPU8[i3 >> 0];
  if (!i2) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i12 >> 2] & 127](i14) | 0)) {
    i1 = 0;
    break;
   }
   i2 = HEAP32[i16 >> 2] | 0;
   i1 = HEAP32[i15 >> 2] | 0;
  }
  i18 = HEAPU8[i1 >> 0] | 0;
  i12 = i14 + 408 | 0;
  HEAP32[i12 >> 2] = i18 >>> 4;
  i13 = i14 + 412 | 0;
  HEAP32[i13 >> 2] = i18 & 15;
  i18 = HEAP32[i14 >> 2] | 0;
  HEAP32[i18 + 24 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i18 + 28 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i18 + 32 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i18 + 36 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i18 + 20 >> 2] = 105;
  FUNCTION_TABLE_vii[HEAP32[i18 + 4 >> 2] & 63](i14, 1);
  HEAP32[(HEAP32[i17 >> 2] | 0) + 20 >> 2] = 0;
  i18 = i14 + 144 | 0;
  HEAP32[i18 >> 2] = (HEAP32[i18 >> 2] | 0) + 1;
  HEAP32[i15 >> 2] = i1 + 1;
  HEAP32[i16 >> 2] = i2 + -1;
  i1 = 1;
 } while (0);
 return i1 | 0;
}

function _ar2GetTransMatHomography2(i4, i26, i28, i29, i30) {
 i4 = i4 | 0;
 i26 = i26 | 0;
 i28 = i28 | 0;
 i29 = i29 | 0;
 i30 = i30 | 0;
 var d1 = 0.0, i2 = 0, i3 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, d17 = 0.0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i27 = 0, i31 = 0, i32 = 0, i33 = 0, d34 = 0.0, d35 = 0.0, i36 = 0, d37 = 0.0, d38 = 0.0, d39 = 0.0;
 i33 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i3 = i33 + 40 | 0;
 i2 = i33 + 32 | 0;
 i31 = i33;
 do if ((i29 | 0) >= 4 ? (i5 = i4 + 44 | 0, !(+HEAPF32[i5 >> 2] == 0.0)) : 0) {
  i32 = _malloc(i29 << 6) | 0;
  if (!i32) {
   _arLog(0, 3, 19966, i2);
   d1 = -1.0;
   break;
  }
  i27 = _malloc(i29 << 3) | 0;
  if (!i27) {
   _arLog(0, 3, 19966, i3);
   _free(i32);
   d1 = -1.0;
   break;
  }
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 4) break;
    HEAPF32[i30 + (i2 << 4) + (i3 << 2) >> 2] = +HEAPF32[i4 + (i2 << 4) + (i3 << 2) >> 2] / +HEAPF32[i5 >> 2];
    i3 = i3 + 1 | 0;
   }
   i2 = i2 + 1 | 0;
  }
  i4 = i30 + 4 | 0;
  i5 = i30 + 12 | 0;
  i12 = i30 + 16 | 0;
  i13 = i30 + 20 | 0;
  i14 = i30 + 28 | 0;
  i15 = i30 + 32 | 0;
  i16 = i30 + 36 | 0;
  d17 = +(i29 | 0);
  i18 = i29 << 1;
  i19 = i31 + 4 | 0;
  i20 = i31 + 8 | 0;
  i21 = i31 + 12 | 0;
  i22 = i31 + 16 | 0;
  i23 = i31 + 20 | 0;
  i24 = i31 + 24 | 0;
  i25 = i31 + 28 | 0;
  d11 = 0.0;
  i3 = 0;
  L18 : while (1) {
   d1 = 0.0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) >= (i29 | 0)) break;
    d6 = +HEAPF32[i28 + (i2 * 12 | 0) >> 2];
    d7 = +HEAPF32[i28 + (i2 * 12 | 0) + 4 >> 2];
    d8 = +HEAPF32[i5 >> 2] + (+HEAPF32[i30 >> 2] * d6 + +HEAPF32[i4 >> 2] * d7);
    d9 = +HEAPF32[i14 >> 2] + (d6 * +HEAPF32[i12 >> 2] + d7 * +HEAPF32[i13 >> 2]);
    d10 = d6 * +HEAPF32[i15 >> 2] + d7 * +HEAPF32[i16 >> 2] + 1.0;
    if (d10 == 0.0) {
     i2 = 17;
     break L18;
    }
    d37 = d10 * d10;
    d35 = +HEAPF32[i26 + (i2 << 3) >> 2] - d8 / d10;
    d34 = +HEAPF32[i26 + (i2 << 3) + 4 >> 2] - d9 / d10;
    i36 = i2 << 1;
    HEAPF32[i27 + (i36 << 2) >> 2] = d35;
    HEAPF32[i27 + ((i36 | 1) << 2) >> 2] = d34;
    d39 = d6 / d10;
    i36 = i2 << 4;
    HEAPF32[i32 + (i36 << 2) >> 2] = d39;
    d38 = d7 / d10;
    HEAPF32[i32 + ((i36 | 1) << 2) >> 2] = d38;
    d10 = 1.0 / d10;
    HEAPF32[i32 + ((i36 | 2) << 2) >> 2] = d10;
    HEAPF32[i32 + ((i36 | 3) << 2) >> 2] = 0.0;
    HEAPF32[i32 + ((i36 | 4) << 2) >> 2] = 0.0;
    HEAPF32[i32 + ((i36 | 5) << 2) >> 2] = 0.0;
    HEAPF32[i32 + ((i36 | 6) << 2) >> 2] = -(d6 * d8) / d37;
    HEAPF32[i32 + ((i36 | 7) << 2) >> 2] = -(d7 * d8) / d37;
    HEAPF32[i32 + ((i36 | 8) << 2) >> 2] = 0.0;
    HEAPF32[i32 + ((i36 | 9) << 2) >> 2] = 0.0;
    HEAPF32[i32 + ((i36 | 10) << 2) >> 2] = 0.0;
    HEAPF32[i32 + ((i36 | 11) << 2) >> 2] = d39;
    HEAPF32[i32 + ((i36 | 12) << 2) >> 2] = d38;
    HEAPF32[i32 + ((i36 | 13) << 2) >> 2] = d10;
    HEAPF32[i32 + ((i36 | 14) << 2) >> 2] = -(d6 * d9) / d37;
    HEAPF32[i32 + ((i36 | 15) << 2) >> 2] = -(d7 * d9) / d37;
    d1 = d1 + (d35 * d35 + d34 * d34);
    i2 = i2 + 1 | 0;
   }
   d1 = d1 / d17;
   if (d1 < .10000000149011612) {
    i2 = 26;
    break;
   }
   if ((i3 | 0) != 0 & d1 < 4.0) {
    if ((i3 | 0) == 10 | d1 / d11 > .9900000095367432) {
     i2 = 26;
     break;
    }
   } else if ((i3 | 0) == 10) {
    i2 = 26;
    break;
   }
   if ((_getDeltaS(i31, i27, i32, i18) | 0) < 0) {
    i2 = 24;
    break;
   }
   HEAPF32[i30 >> 2] = +HEAPF32[i31 >> 2] + +HEAPF32[i30 >> 2];
   HEAPF32[i4 >> 2] = +HEAPF32[i19 >> 2] + +HEAPF32[i4 >> 2];
   HEAPF32[i5 >> 2] = +HEAPF32[i20 >> 2] + +HEAPF32[i5 >> 2];
   HEAPF32[i12 >> 2] = +HEAPF32[i21 >> 2] + +HEAPF32[i12 >> 2];
   HEAPF32[i13 >> 2] = +HEAPF32[i22 >> 2] + +HEAPF32[i13 >> 2];
   HEAPF32[i14 >> 2] = +HEAPF32[i23 >> 2] + +HEAPF32[i14 >> 2];
   HEAPF32[i15 >> 2] = +HEAPF32[i24 >> 2] + +HEAPF32[i15 >> 2];
   HEAPF32[i16 >> 2] = +HEAPF32[i25 >> 2] + +HEAPF32[i16 >> 2];
   d11 = d1;
   i3 = i3 + 1 | 0;
  }
  if ((i2 | 0) == 17) {
   _free(i32);
   _free(i27);
   d1 = 1.0e8;
   break;
  } else if ((i2 | 0) == 24) {
   _free(i32);
   _free(i27);
   d1 = 1.0e8;
   break;
  } else if ((i2 | 0) == 26) {
   _free(i32);
   _free(i27);
   break;
  }
 } else d1 = 1.0e8; while (0);
 STACKTOP = i33;
 return +d1;
}

function __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i15, i14, i2) {
 i15 = i15 | 0;
 i14 = i14 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, d5 = 0.0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i16 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i1 = i17 + 8 | 0;
 i10 = i17;
 if ((i14 | 0) <= -1) {
  i16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31002) | 0, 30558) | 0, 33655) | 0, 290) | 0, 33662) | 0, 31036) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i13 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i13) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 }
 i16 = i15 + 92 | 0;
 HEAP32[i1 >> 2] = i14;
 i3 = __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE4findIjEENS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(i16, i1) | 0;
 if (!i3) {
  HEAP32[i10 >> 2] = i14;
  HEAP32[i10 + 4 >> 2] = i2;
  i12 = i15 + 96 | 0;
  i7 = HEAP32[i12 >> 2] | 0;
  i13 = (i7 | 0) == 0;
  L6 : do if (!i13) {
   i8 = i7 + -1 | 0;
   i9 = (i8 & i7 | 0) == 0;
   if (!i9) if (i7 >>> 0 > i14 >>> 0) i2 = i14; else i2 = (i14 >>> 0) % (i7 >>> 0) | 0; else i2 = i8 & i14;
   i3 = HEAP32[(HEAP32[i16 >> 2] | 0) + (i2 << 2) >> 2] | 0;
   if (!i3) i11 = 19; else do {
    i3 = HEAP32[i3 >> 2] | 0;
    if (!i3) {
     i11 = 19;
     break L6;
    }
    i4 = HEAP32[i3 + 4 >> 2] | 0;
    if ((i4 | 0) != (i14 | 0)) {
     if (!i9) {
      if (i4 >>> 0 >= i7 >>> 0) i4 = (i4 >>> 0) % (i7 >>> 0) | 0;
     } else i4 = i4 & i8;
     if ((i4 | 0) != (i2 | 0)) {
      i11 = 19;
      break L6;
     }
    }
   } while ((HEAP32[i3 + 8 >> 2] | 0) != (i14 | 0));
  } else {
   i2 = 0;
   i11 = 19;
  } while (0);
  if ((i11 | 0) == 19) {
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE21__construct_node_hashINS_4pairIjjEEJEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISK_EEEEEEmOT_DpOT0_(i1, i16, i14, i10);
   i8 = i15 + 104 | 0;
   d5 = +(((HEAP32[i8 >> 2] | 0) + 1 | 0) >>> 0);
   d6 = +HEAPF32[i15 + 108 >> 2];
   do if (i13 | d6 * +(i7 >>> 0) < d5) {
    i2 = i7 << 1 | (i7 >>> 0 < 3 | (i7 + -1 & i7 | 0) != 0) & 1;
    i3 = ~~+Math_ceil(+(d5 / d6)) >>> 0;
    __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE6rehashEm(i16, i2 >>> 0 < i3 >>> 0 ? i3 : i2);
    i2 = HEAP32[i12 >> 2] | 0;
    i3 = i2 + -1 | 0;
    if (!(i3 & i2)) {
     i7 = i2;
     i2 = i3 & i14;
     break;
    }
    if (i2 >>> 0 > i14 >>> 0) {
     i7 = i2;
     i2 = i14;
    } else {
     i7 = i2;
     i2 = (i14 >>> 0) % (i2 >>> 0) | 0;
    }
   } while (0);
   i3 = HEAP32[(HEAP32[i16 >> 2] | 0) + (i2 << 2) >> 2] | 0;
   if (!i3) {
    i4 = i15 + 100 | 0;
    HEAP32[HEAP32[i1 >> 2] >> 2] = HEAP32[i4 >> 2];
    HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
    HEAP32[(HEAP32[i16 >> 2] | 0) + (i2 << 2) >> 2] = i4;
    i4 = HEAP32[i1 >> 2] | 0;
    i2 = HEAP32[i4 >> 2] | 0;
    if (i2) {
     i2 = HEAP32[i2 + 4 >> 2] | 0;
     i3 = i7 + -1 | 0;
     if (i3 & i7) {
      if (i2 >>> 0 >= i7 >>> 0) i2 = (i2 >>> 0) % (i7 >>> 0) | 0;
     } else i2 = i2 & i3;
     HEAP32[(HEAP32[i16 >> 2] | 0) + (i2 << 2) >> 2] = i4;
    }
   } else {
    HEAP32[HEAP32[i1 >> 2] >> 2] = HEAP32[i3 >> 2];
    HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
   }
   HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
   HEAP32[i1 >> 2] = 0;
  }
 } else {
  i16 = i3 + 12 | 0;
  HEAP32[i16 >> 2] = (HEAP32[i16 >> 2] | 0) + i2;
 }
 STACKTOP = i17;
 return;
}

function _arVecTridiagonalize(i15, i13, i8) {
 i15 = i15 | 0;
 i13 = i13 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, i6 = 0, i7 = 0, i9 = 0, d10 = 0.0, d11 = 0.0, i12 = 0, i14 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i19 = i22 + 8 | 0;
 i20 = i22;
 i21 = HEAP32[i15 + 8 >> 2] | 0;
 L1 : do if (((i21 | 0) == (HEAP32[i15 + 4 >> 2] | 0) ? (i21 | 0) == (HEAP32[i13 + 4 >> 2] | 0) : 0) ? (i21 | 0) == ((HEAP32[i8 + 4 >> 2] | 0) + 1 | 0) : 0) {
  i16 = i21 + -2 | 0;
  i17 = i19 + 4 | 0;
  i18 = i20 + 4 | 0;
  i7 = 0;
  while (1) {
   if ((i7 | 0) >= (i16 | 0)) break;
   i9 = (HEAP32[i15 >> 2] | 0) + ((Math_imul(i7, i21) | 0) << 3) | 0;
   HEAPF64[(HEAP32[i13 >> 2] | 0) + (i7 << 3) >> 3] = +HEAPF64[i9 + (i7 << 3) >> 3];
   i4 = i21 - i7 + -1 | 0;
   HEAP32[i17 >> 2] = i4;
   i12 = i7 + 1 | 0;
   i6 = i9 + (i12 << 3) | 0;
   HEAP32[i19 >> 2] = i6;
   d11 = +_arVecHousehold(i19);
   HEAPF64[(HEAP32[i8 >> 2] | 0) + (i7 << 3) >> 3] = d11;
   L8 : do if (!(d11 == 0.0)) {
    i3 = i12;
    while (1) {
     if ((i3 | 0) >= (i21 | 0)) break;
     i1 = i12;
     d5 = 0.0;
     while (1) {
      if (i1 >>> 0 >= i3 >>> 0) break;
      i2 = (HEAP32[i15 >> 2] | 0) + ((Math_imul(i1, i21) | 0) + i3 << 3) | 0;
      d11 = d5 + +HEAPF64[i2 >> 3] * +HEAPF64[i9 + (i1 << 3) >> 3];
      i1 = i1 + 1 | 0;
      d5 = d11;
     }
     i2 = Math_imul(i3, i21) | 0;
     i1 = i3;
     while (1) {
      if ((i1 | 0) >= (i21 | 0)) break;
      d11 = d5 + +HEAPF64[(HEAP32[i15 >> 2] | 0) + (i1 + i2 << 3) >> 3] * +HEAPF64[i9 + (i1 << 3) >> 3];
      i1 = i1 + 1 | 0;
      d5 = d11;
     }
     HEAPF64[(HEAP32[i13 >> 2] | 0) + (i3 << 3) >> 3] = d5;
     i3 = i3 + 1 | 0;
    }
    HEAP32[i18 >> 2] = i4;
    HEAP32[i17 >> 2] = i4;
    HEAP32[i19 >> 2] = i6;
    HEAP32[i20 >> 2] = (HEAP32[i13 >> 2] | 0) + (i12 << 3);
    d11 = +_arVecInnerproduct(i19, i20) * .5;
    i1 = i21;
    while (1) {
     i1 = i1 + -1 | 0;
     if ((i1 | 0) <= (i7 | 0)) break L8;
     d5 = +HEAPF64[i9 + (i1 << 3) >> 3];
     i3 = HEAP32[i13 >> 2] | 0;
     i4 = i3 + (i1 << 3) | 0;
     d10 = +HEAPF64[i4 >> 3] - d11 * d5;
     HEAPF64[i4 >> 3] = d10;
     i4 = Math_imul(i1, i21) | 0;
     i2 = i1;
     while (1) {
      if ((i2 | 0) >= (i21 | 0)) break;
      i6 = (HEAP32[i15 >> 2] | 0) + (i2 + i4 << 3) | 0;
      HEAPF64[i6 >> 3] = +HEAPF64[i6 >> 3] - (d5 * +HEAPF64[i3 + (i2 << 3) >> 3] + d10 * +HEAPF64[i9 + (i2 << 3) >> 3]);
      i2 = i2 + 1 | 0;
     }
    }
   } while (0);
   i7 = i12;
  }
  if ((i21 | 0) <= 1) if ((i21 | 0) == 1) {
   i3 = 0;
   i1 = HEAP32[i15 >> 2] | 0;
   i2 = HEAP32[i13 >> 2] | 0;
   i14 = 27;
  } else i4 = i21; else {
   i1 = HEAP32[i15 >> 2] | 0;
   i14 = Math_imul(i16, i21) | 0;
   i2 = HEAP32[i13 >> 2] | 0;
   HEAPF64[i2 + (i16 << 3) >> 3] = +HEAPF64[i1 + (i14 + i16 << 3) >> 3];
   i3 = i21 + -1 | 0;
   HEAPF64[(HEAP32[i8 >> 2] | 0) + (i16 << 3) >> 3] = +HEAPF64[i1 + (i3 + i14 << 3) >> 3];
   i14 = 27;
  }
  if ((i14 | 0) == 27) {
   i1 = i1 + ((Math_imul(i3, i21) | 0) + i3 << 3) | 0;
   i4 = i21;
   d5 = +HEAPF64[i1 >> 3];
   i1 = i2 + (i3 << 3) | 0;
   i14 = 28;
  }
  while (1) {
   if ((i14 | 0) == 28) HEAPF64[i1 >> 3] = d5;
   i8 = i4 + -1 | 0;
   if ((i4 | 0) <= 0) {
    i1 = 0;
    break L1;
   }
   i9 = (HEAP32[i15 >> 2] | 0) + ((Math_imul(i8, i21) | 0) << 3) | 0;
   L42 : do if ((i4 | 0) <= (i16 | 0)) {
    i3 = i21 - i8 + -1 | 0;
    i6 = i9 + (i4 << 3) | 0;
    i1 = i4;
    while (1) {
     if ((i1 | 0) >= (i21 | 0)) break L42;
     HEAP32[i18 >> 2] = i3;
     HEAP32[i17 >> 2] = i3;
     HEAP32[i19 >> 2] = i6;
     i7 = Math_imul(i1, i21) | 0;
     HEAP32[i20 >> 2] = (HEAP32[i15 >> 2] | 0) + (i7 + i4 << 3);
     d5 = +_arVecInnerproduct(i19, i20);
     i2 = i4;
     while (1) {
      if ((i2 | 0) >= (i21 | 0)) break;
      i14 = (HEAP32[i15 >> 2] | 0) + (i2 + i7 << 3) | 0;
      HEAPF64[i14 >> 3] = +HEAPF64[i14 >> 3] - d5 * +HEAPF64[i9 + (i2 << 3) >> 3];
      i2 = i2 + 1 | 0;
     }
     i1 = i1 + 1 | 0;
    }
   } while (0);
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i21 | 0)) break;
    HEAPF64[i9 + (i1 << 3) >> 3] = 0.0;
    i1 = i1 + 1 | 0;
   }
   i4 = i8;
   d5 = 1.0;
   i1 = i9 + (i8 << 3) | 0;
   i14 = 28;
  }
 } else i1 = -1; while (0);
 STACKTOP = i22;
 return i1 | 0;
}

function __ZN6vision21HoughSimilarityVoting19autoAdjustXYNumBinsEPKfS2_i(i5, i6, i7, i8) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i1 = 0, d2 = 0.0, i3 = 0, i4 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, d13 = 0.0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i10 + 12 | 0;
 i9 = i10;
 i3 = i5 + 4 | 0;
 i4 = __ZN6vision4max2IiEET_S1_S1_(HEAP32[i5 >> 2] | 0, HEAP32[i3 >> 2] | 0) | 0;
 __ZNSt3__26vectorIfNS_9allocatorIfEEEC2Em(i9, i8);
 if ((i8 | 0) <= 0) {
  i11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31583) | 0, 31615) | 0, 33655) | 0, 208) | 0, 33662) | 0, 31740) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 if ((HEAP32[i5 >> 2] | 0) <= 0) {
  i12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31762) | 0, 31615) | 0, 33655) | 0, 209) | 0, 33662) | 0, 31804) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 if ((HEAP32[i3 >> 2] | 0) <= 0) {
  i12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31827) | 0, 31615) | 0, 33655) | 0, 210) | 0, 33662) | 0, 31870) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 d2 = +(i4 | 0);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == (i8 | 0)) break;
  i12 = i1 << 2;
  d13 = +__ZN6vision12SafeDivisionIfEET_S1_S1_(+HEAPF32[i6 + (i12 << 2) + 12 >> 2], +HEAPF32[i7 + (i12 << 2) + 12 >> 2]) * d2;
  HEAPF32[(HEAP32[i9 >> 2] | 0) + (i1 << 2) >> 2] = d13;
  i1 = i1 + 1 | 0;
 }
 i12 = HEAP32[i9 >> 2] | 0;
 d13 = +__ZN6vision10FastMedianIfEET_PS1_i(i12, (HEAP32[i9 + 4 >> 2] | 0) - i12 >> 2) * .25;
 i12 = __ZN6vision4max2IiEET_S1_S1_(5, ~~+Math_ceil(+((+HEAPF32[i5 + 24 >> 2] - +HEAPF32[i5 + 20 >> 2]) / d13))) | 0;
 i11 = i5 + 52 | 0;
 HEAP32[i11 >> 2] = i12;
 i12 = __ZN6vision4max2IiEET_S1_S1_(5, ~~+Math_ceil(+((+HEAPF32[i5 + 32 >> 2] - +HEAPF32[i5 + 28 >> 2]) / d13))) | 0;
 HEAP32[i5 + 56 >> 2] = i12;
 i12 = Math_imul(HEAP32[i11 >> 2] | 0, i12) | 0;
 HEAP32[i5 + 84 >> 2] = i12;
 i12 = Math_imul(HEAP32[i5 + 60 >> 2] | 0, i12) | 0;
 HEAP32[i5 + 88 >> 2] = i12;
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev(i9);
 STACKTOP = i10;
 return;
}

function _update_box(i1, i18) {
 i1 = i1 | 0;
 i18 = i18 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i17 = HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 24 >> 2] | 0;
 i5 = HEAP32[i18 >> 2] | 0;
 i7 = i18 + 4 | 0;
 i9 = HEAP32[i7 >> 2] | 0;
 i12 = i18 + 8 | 0;
 i11 = HEAP32[i12 >> 2] | 0;
 i13 = i18 + 12 | 0;
 i10 = HEAP32[i13 >> 2] | 0;
 i14 = i18 + 16 | 0;
 i8 = HEAP32[i14 >> 2] | 0;
 i15 = i18 + 20 | 0;
 i16 = HEAP32[i15 >> 2] | 0;
 L1 : do if ((i9 | 0) > (i5 | 0)) {
  i6 = i5;
  L3 : while (1) {
   if ((i6 | 0) > (i9 | 0)) {
    i6 = i5;
    break L1;
   }
   i4 = i17 + (i6 << 2) | 0;
   i2 = i11;
   while (1) {
    if ((i2 | 0) > (i10 | 0)) break;
    i1 = (HEAP32[i4 >> 2] | 0) + (i2 << 6) + (i8 << 1) | 0;
    i3 = i8;
    while (1) {
     if ((i3 | 0) > (i16 | 0)) break;
     if (HEAP16[i1 >> 1] | 0) break L3;
     i1 = i1 + 2 | 0;
     i3 = i3 + 1 | 0;
    }
    i2 = i2 + 1 | 0;
   }
   i6 = i6 + 1 | 0;
  }
  HEAP32[i18 >> 2] = i6;
 } else i6 = i5; while (0);
 L17 : do if ((i9 | 0) > (i6 | 0)) {
  i2 = i9;
  L19 : while (1) {
   if ((i2 | 0) < (i6 | 0)) break L17;
   i5 = i17 + (i2 << 2) | 0;
   i3 = i11;
   while (1) {
    if ((i3 | 0) > (i10 | 0)) break;
    i1 = (HEAP32[i5 >> 2] | 0) + (i3 << 6) + (i8 << 1) | 0;
    i4 = i8;
    while (1) {
     if ((i4 | 0) > (i16 | 0)) break;
     if (HEAP16[i1 >> 1] | 0) break L19;
     i1 = i1 + 2 | 0;
     i4 = i4 + 1 | 0;
    }
    i3 = i3 + 1 | 0;
   }
   i2 = i2 + -1 | 0;
  }
  HEAP32[i7 >> 2] = i2;
  i9 = i2;
 } while (0);
 L33 : do if ((i10 | 0) > (i11 | 0)) {
  i3 = i11;
  L35 : while (1) {
   if ((i3 | 0) > (i10 | 0)) break L33;
   i2 = i6;
   while (1) {
    if ((i2 | 0) > (i9 | 0)) break;
    i1 = (HEAP32[i17 + (i2 << 2) >> 2] | 0) + (i3 << 6) + (i8 << 1) | 0;
    i4 = i8;
    while (1) {
     if ((i4 | 0) > (i16 | 0)) break;
     if (HEAP16[i1 >> 1] | 0) break L35;
     i1 = i1 + 2 | 0;
     i4 = i4 + 1 | 0;
    }
    i2 = i2 + 1 | 0;
   }
   i3 = i3 + 1 | 0;
  }
  HEAP32[i12 >> 2] = i3;
  i11 = i3;
 } while (0);
 L49 : do if ((i10 | 0) > (i11 | 0)) {
  i3 = i10;
  L51 : while (1) {
   if ((i3 | 0) < (i11 | 0)) break L49;
   i2 = i6;
   while (1) {
    if ((i2 | 0) > (i9 | 0)) break;
    i1 = (HEAP32[i17 + (i2 << 2) >> 2] | 0) + (i3 << 6) + (i8 << 1) | 0;
    i4 = i8;
    while (1) {
     if ((i4 | 0) > (i16 | 0)) break;
     if (HEAP16[i1 >> 1] | 0) break L51;
     i1 = i1 + 2 | 0;
     i4 = i4 + 1 | 0;
    }
    i2 = i2 + 1 | 0;
   }
   i3 = i3 + -1 | 0;
  }
  HEAP32[i13 >> 2] = i3;
  i10 = i3;
 } while (0);
 L65 : do if ((i16 | 0) > (i8 | 0)) {
  i4 = i8;
  L67 : while (1) {
   if ((i4 | 0) > (i16 | 0)) break L65;
   i2 = i6;
   while (1) {
    if ((i2 | 0) > (i9 | 0)) break;
    i1 = (HEAP32[i17 + (i2 << 2) >> 2] | 0) + (i11 << 6) + (i4 << 1) | 0;
    i3 = i11;
    while (1) {
     if ((i3 | 0) > (i10 | 0)) break;
     if (HEAP16[i1 >> 1] | 0) break L67;
     i1 = i1 + 64 | 0;
     i3 = i3 + 1 | 0;
    }
    i2 = i2 + 1 | 0;
   }
   i4 = i4 + 1 | 0;
  }
  HEAP32[i14 >> 2] = i4;
  i8 = i4;
 } while (0);
 L81 : do if ((i16 | 0) > (i8 | 0)) {
  i4 = i16;
  L83 : while (1) {
   if ((i4 | 0) < (i8 | 0)) {
    i4 = i16;
    break L81;
   }
   i2 = i6;
   while (1) {
    if ((i2 | 0) > (i9 | 0)) break;
    i1 = (HEAP32[i17 + (i2 << 2) >> 2] | 0) + (i11 << 6) + (i4 << 1) | 0;
    i3 = i11;
    while (1) {
     if ((i3 | 0) > (i10 | 0)) break;
     if (HEAP16[i1 >> 1] | 0) break L83;
     i1 = i1 + 64 | 0;
     i3 = i3 + 1 | 0;
    }
    i2 = i2 + 1 | 0;
   }
   i4 = i4 + -1 | 0;
  }
  HEAP32[i15 >> 2] = i4;
 } else i4 = i16; while (0);
 i16 = i9 - i6 << 4;
 i15 = (i10 - i11 | 0) * 12 | 0;
 i1 = i4 - i8 << 3;
 i1 = (Math_imul(i15, i15) | 0) + (Math_imul(i16, i16) | 0) + (Math_imul(i1, i1) | 0) | 0;
 HEAP32[i18 + 24 >> 2] = i1;
 i1 = 0;
 while (1) {
  if ((i6 | 0) > (i9 | 0)) break;
  i7 = i17 + (i6 << 2) | 0;
  i5 = i11;
  while (1) {
   if ((i5 | 0) > (i10 | 0)) break;
   i2 = (HEAP32[i7 >> 2] | 0) + (i5 << 6) + (i8 << 1) | 0;
   i3 = i8;
   while (1) {
    if ((i3 | 0) > (i4 | 0)) break;
    i1 = i1 + ((HEAP16[i2 >> 1] | 0) != 0 & 1) | 0;
    i2 = i2 + 2 | 0;
    i3 = i3 + 1 | 0;
   }
   i5 = i5 + 1 | 0;
  }
  i6 = i6 + 1 | 0;
 }
 HEAP32[i18 + 28 >> 2] = i1;
 return;
}

function ___udivmoddi4(i5, i6, i8, i11, i13) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 i11 = i11 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i9 = 0, i10 = 0, i12 = 0, i14 = 0, i15 = 0;
 i9 = i5;
 i4 = i6;
 i7 = i4;
 i2 = i8;
 i12 = i11;
 i3 = i12;
 if (!i7) {
  i1 = (i13 | 0) != 0;
  if (!i3) {
   if (i1) {
    HEAP32[i13 >> 2] = (i9 >>> 0) % (i2 >>> 0);
    HEAP32[i13 + 4 >> 2] = 0;
   }
   i12 = 0;
   i13 = (i9 >>> 0) / (i2 >>> 0) >>> 0;
   return (setTempRet0(i12 | 0), i13) | 0;
  } else {
   if (!i1) {
    i12 = 0;
    i13 = 0;
    return (setTempRet0(i12 | 0), i13) | 0;
   }
   HEAP32[i13 >> 2] = i5 | 0;
   HEAP32[i13 + 4 >> 2] = i6 & 0;
   i12 = 0;
   i13 = 0;
   return (setTempRet0(i12 | 0), i13) | 0;
  }
 }
 i1 = (i3 | 0) == 0;
 do if (i2) {
  if (!i1) {
   i1 = (Math_clz32(i3 | 0) | 0) - (Math_clz32(i7 | 0) | 0) | 0;
   if (i1 >>> 0 <= 31) {
    i10 = i1 + 1 | 0;
    i3 = 31 - i1 | 0;
    i6 = i1 - 31 >> 31;
    i2 = i10;
    i5 = i9 >>> (i10 >>> 0) & i6 | i7 << i3;
    i6 = i7 >>> (i10 >>> 0) & i6;
    i1 = 0;
    i3 = i9 << i3;
    break;
   }
   if (!i13) {
    i12 = 0;
    i13 = 0;
    return (setTempRet0(i12 | 0), i13) | 0;
   }
   HEAP32[i13 >> 2] = i5 | 0;
   HEAP32[i13 + 4 >> 2] = i4 | i6 & 0;
   i12 = 0;
   i13 = 0;
   return (setTempRet0(i12 | 0), i13) | 0;
  }
  i1 = i2 - 1 | 0;
  if (i1 & i2 | 0) {
   i3 = (Math_clz32(i2 | 0) | 0) + 33 - (Math_clz32(i7 | 0) | 0) | 0;
   i15 = 64 - i3 | 0;
   i10 = 32 - i3 | 0;
   i4 = i10 >> 31;
   i14 = i3 - 32 | 0;
   i6 = i14 >> 31;
   i2 = i3;
   i5 = i10 - 1 >> 31 & i7 >>> (i14 >>> 0) | (i7 << i10 | i9 >>> (i3 >>> 0)) & i6;
   i6 = i6 & i7 >>> (i3 >>> 0);
   i1 = i9 << i15 & i4;
   i3 = (i7 << i15 | i9 >>> (i14 >>> 0)) & i4 | i9 << i10 & i3 - 33 >> 31;
   break;
  }
  if (i13 | 0) {
   HEAP32[i13 >> 2] = i1 & i9;
   HEAP32[i13 + 4 >> 2] = 0;
  }
  if ((i2 | 0) == 1) {
   i14 = i4 | i6 & 0;
   i15 = i5 | 0 | 0;
   return (setTempRet0(i14 | 0), i15) | 0;
  } else {
   i15 = _llvm_cttz_i32(i2 | 0) | 0;
   i14 = i7 >>> (i15 >>> 0) | 0;
   i15 = i7 << 32 - i15 | i9 >>> (i15 >>> 0) | 0;
   return (setTempRet0(i14 | 0), i15) | 0;
  }
 } else {
  if (i1) {
   if (i13 | 0) {
    HEAP32[i13 >> 2] = (i7 >>> 0) % (i2 >>> 0);
    HEAP32[i13 + 4 >> 2] = 0;
   }
   i14 = 0;
   i15 = (i7 >>> 0) / (i2 >>> 0) >>> 0;
   return (setTempRet0(i14 | 0), i15) | 0;
  }
  if (!i9) {
   if (i13 | 0) {
    HEAP32[i13 >> 2] = 0;
    HEAP32[i13 + 4 >> 2] = (i7 >>> 0) % (i3 >>> 0);
   }
   i14 = 0;
   i15 = (i7 >>> 0) / (i3 >>> 0) >>> 0;
   return (setTempRet0(i14 | 0), i15) | 0;
  }
  i1 = i3 - 1 | 0;
  if (!(i1 & i3)) {
   if (i13 | 0) {
    HEAP32[i13 >> 2] = i5 | 0;
    HEAP32[i13 + 4 >> 2] = i1 & i7 | i6 & 0;
   }
   i14 = 0;
   i15 = i7 >>> ((_llvm_cttz_i32(i3 | 0) | 0) >>> 0);
   return (setTempRet0(i14 | 0), i15) | 0;
  }
  i1 = (Math_clz32(i3 | 0) | 0) - (Math_clz32(i7 | 0) | 0) | 0;
  if (i1 >>> 0 <= 30) {
   i6 = i1 + 1 | 0;
   i3 = 31 - i1 | 0;
   i2 = i6;
   i5 = i7 << i3 | i9 >>> (i6 >>> 0);
   i6 = i7 >>> (i6 >>> 0);
   i1 = 0;
   i3 = i9 << i3;
   break;
  }
  if (!i13) {
   i14 = 0;
   i15 = 0;
   return (setTempRet0(i14 | 0), i15) | 0;
  }
  HEAP32[i13 >> 2] = i5 | 0;
  HEAP32[i13 + 4 >> 2] = i4 | i6 & 0;
  i14 = 0;
  i15 = 0;
  return (setTempRet0(i14 | 0), i15) | 0;
 } while (0);
 if (!i2) {
  i7 = i3;
  i4 = 0;
  i3 = 0;
 } else {
  i10 = i8 | 0 | 0;
  i9 = i12 | i11 & 0;
  i7 = _i64Add(i10 | 0, i9 | 0, -1, -1) | 0;
  i8 = getTempRet0() | 0;
  i4 = i3;
  i3 = 0;
  do {
   i11 = i4;
   i4 = i1 >>> 31 | i4 << 1;
   i1 = i3 | i1 << 1;
   i11 = i5 << 1 | i11 >>> 31 | 0;
   i12 = i5 >>> 31 | i6 << 1 | 0;
   _i64Subtract(i7 | 0, i8 | 0, i11 | 0, i12 | 0) | 0;
   i15 = getTempRet0() | 0;
   i14 = i15 >> 31 | ((i15 | 0) < 0 ? -1 : 0) << 1;
   i3 = i14 & 1;
   i5 = _i64Subtract(i11 | 0, i12 | 0, i14 & i10 | 0, (((i15 | 0) < 0 ? -1 : 0) >> 31 | ((i15 | 0) < 0 ? -1 : 0) << 1) & i9 | 0) | 0;
   i6 = getTempRet0() | 0;
   i2 = i2 - 1 | 0;
  } while ((i2 | 0) != 0);
  i7 = i4;
  i4 = 0;
 }
 i2 = 0;
 if (i13 | 0) {
  HEAP32[i13 >> 2] = i5;
  HEAP32[i13 + 4 >> 2] = i6;
 }
 i14 = (i1 | 0) >>> 31 | (i7 | i2) << 1 | (i2 << 1 | i1 >>> 31) & 0 | i4;
 i15 = (i1 << 1 | 0 >>> 31) & -2 | i3;
 return (setTempRet0(i14 | 0), i15) | 0;
}

function __ZN6vision25DoGScaleInvariantDetector13pruneFeaturesEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i11 + 12 | 0;
 i7 = i11;
 i8 = i2 + 60 | 0;
 i9 = i2 + 64 | 0;
 i10 = i2 + 84 | 0;
 i4 = HEAP32[i10 >> 2] | 0;
 do if ((((HEAP32[i9 >> 2] | 0) - (HEAP32[i8 >> 2] | 0) | 0) / 36 | 0) >>> 0 > i4 >>> 0) {
  i5 = i2 + 16 | 0;
  i1 = HEAP32[i5 >> 2] | 0;
  i6 = ((HEAP32[i2 + 20 >> 2] | 0) - i1 | 0) / 12 | 0;
  if ((i6 | 0) != (HEAP32[i2 + 8 >> 2] | 0)) {
   i12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 21982) | 0, 20647) | 0, 33655) | 0, 454) | 0, 33662) | 0, 22037) | 0;
   __ZNKSt3__28ios_base6getlocEv(i3, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i13 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
   i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, 10) | 0;
   __ZNSt3__26localeD2Ev(i3);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i13) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
   _abort();
  }
  i1 = ((HEAP32[i1 + 4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) | 0) / 12 | 0;
  if ((i1 | 0) != (HEAP32[i2 + 12 >> 2] | 0)) {
   i13 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 22063) | 0, 20647) | 0, 33655) | 0, 455) | 0, 33662) | 0, 22037) | 0;
   __ZNKSt3__28ios_base6getlocEv(i3, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
   i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
   __ZNSt3__26localeD2Ev(i3);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i12) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
   _abort();
  }
  HEAP32[i7 >> 2] = 0;
  HEAP32[i7 + 4 >> 2] = 0;
  HEAP32[i7 + 8 >> 2] = 0;
  __ZN6vision16PruneDoGFeaturesERNSt3__26vectorINS1_INS1_INS0_4pairIfmEENS0_9allocatorIS3_EEEENS4_IS6_EEEENS4_IS8_EEEERNS1_INS_25DoGScaleInvariantDetector12FeaturePointENS4_ISD_EEEERKSF_iiiii(i5, i7, i8, i6, i1, HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0, i4);
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE4swapERS6_(i8, i7);
  if ((((HEAP32[i9 >> 2] | 0) - (HEAP32[i8 >> 2] | 0) | 0) / 36 | 0) >>> 0 > (HEAP32[i10 >> 2] | 0) >>> 0) {
   i13 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 22121) | 0, 20647) | 0, 33655) | 0, 469) | 0, 33662) | 0, 22190) | 0;
   __ZNKSt3__28ios_base6getlocEv(i3, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
   i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
   __ZNSt3__26localeD2Ev(i3);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i12) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
   _abort();
  } else {
   __ZNSt3__213__vector_baseIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEED2Ev(i7);
   break;
  }
 } while (0);
 STACKTOP = i11;
 return;
}

function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe(i1, i21, i9, i25, i26, d5) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i9 = i9 | 0;
 i25 = i25 | 0;
 i26 = i26 | 0;
 d5 = +d5;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i24 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0;
 i28 = STACKTOP;
 STACKTOP = STACKTOP + 992 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(992);
 i11 = i28 + 912 | 0;
 i3 = i28 + 904 | 0;
 i1 = i28 + 800 | 0;
 i4 = i28 + 984 | 0;
 i2 = i28 + 400 | 0;
 i27 = i28 + 980 | 0;
 i12 = i28 + 988 | 0;
 i13 = i28 + 976 | 0;
 i14 = i28 + 972 | 0;
 i22 = i28 + 960 | 0;
 i23 = i28 + 948 | 0;
 i24 = i28 + 936 | 0;
 i8 = i28 + 932 | 0;
 i10 = i28;
 i15 = i28 + 928 | 0;
 i16 = i28 + 920 | 0;
 i17 = i28 + 924 | 0;
 HEAP32[i4 >> 2] = i1;
 HEAPF64[i11 >> 3] = d5;
 i1 = _snprintf(i1, 100, 49131, i11) | 0;
 if (i1 >>> 0 > 99) {
  i1 = __ZNSt3__26__clocEv() | 0;
  HEAPF64[i3 >> 3] = d5;
  i1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i4, i1, 49131, i3) | 0;
  i2 = HEAP32[i4 >> 2] | 0;
  if (!i2) __ZSt17__throw_bad_allocv();
  i3 = _malloc(i1 << 2) | 0;
  if (!i3) __ZSt17__throw_bad_allocv(); else {
   i18 = i3;
   i20 = i1;
   i30 = i3;
   i31 = i2;
  }
 } else {
  i18 = i2;
  i20 = i1;
  i30 = 0;
  i31 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv(i27, i25);
 i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i27, 58824) | 0;
 i6 = HEAP32[i4 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 48 >> 2] & 15](i7, i6, i6 + i20 | 0, i18) | 0;
 if (!i20) i6 = 0; else i6 = (HEAP8[HEAP32[i4 >> 2] >> 0] | 0) == 45;
 HEAP32[i22 >> 2] = 0;
 HEAP32[i22 + 4 >> 2] = 0;
 HEAP32[i22 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i22 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i23 >> 2] = 0;
 HEAP32[i23 + 4 >> 2] = 0;
 HEAP32[i23 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i23 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(i9, i6, i27, i12, i13, i14, i22, i23, i24, i8);
 i4 = HEAP32[i8 >> 2] | 0;
 if ((i20 | 0) > (i4 | 0)) {
  i3 = HEAP8[i24 + 8 + 3 >> 0] | 0;
  i1 = HEAP8[i23 + 8 + 3 >> 0] | 0;
  i1 = i1 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i1 & 255;
  i2 = i4 + 1 + (i20 - i4 << 1) | 0;
  i3 = i3 << 24 >> 24 < 0 ? HEAP32[i24 + 4 >> 2] | 0 : i3 & 255;
 } else {
  i3 = HEAP8[i24 + 8 + 3 >> 0] | 0;
  i1 = HEAP8[i23 + 8 + 3 >> 0] | 0;
  i1 = i1 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i1 & 255;
  i2 = i4 + 2 | 0;
  i3 = i3 << 24 >> 24 < 0 ? HEAP32[i24 + 4 >> 2] | 0 : i3 & 255;
 }
 i1 = i2 + i3 + i1 | 0;
 if (i1 >>> 0 > 100) {
  i1 = _malloc(i1 << 2) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i19 = i1;
   i29 = i1;
  }
 } else {
  i19 = i10;
  i29 = 0;
 }
 __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(i19, i15, i16, HEAP32[i25 + 4 >> 2] | 0, i18, i18 + (i20 << 2) | 0, i7, i6, i12, HEAP32[i13 >> 2] | 0, HEAP32[i14 >> 2] | 0, i22, i23, i24, i4);
 HEAP32[i17 >> 2] = HEAP32[i21 >> 2];
 i21 = HEAP32[i15 >> 2] | 0;
 i1 = HEAP32[i16 >> 2] | 0;
 HEAP32[i11 >> 2] = HEAP32[i17 >> 2];
 i1 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i11, i19, i21, i1, i25, i26) | 0;
 if (i29 | 0) _free(i29);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i24);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i23);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i22);
 __ZNSt3__26localeD2Ev(i27);
 if (i30 | 0) _free(i30);
 if (i31 | 0) _free(i31);
 STACKTOP = i28;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_128parse_sizeof_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i3, i9) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i9 = i9 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i11 = i14 + 48 | 0;
 i12 = i14 + 24 | 0;
 i6 = i14;
 i13 = i14 + 12 | 0;
 if (((((i3 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 90 : 0) ? (i4 = i1 + 2 | 0, (HEAP8[i4 >> 0] | 0) == 84) : 0) ? (i8 = i9 + 4 | 0, i7 = ((HEAP32[i8 >> 2] | 0) - (HEAP32[i9 >> 2] | 0) | 0) / 24 | 0, i10 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i4, i3, i9) | 0, i2 = ((HEAP32[i8 >> 2] | 0) - (HEAP32[i9 >> 2] | 0) | 0) / 24 | 0, (i10 | 0) != (i4 | 0)) : 0) {
  HEAP32[i11 >> 2] = 0;
  HEAP32[i11 + 4 >> 2] = 0;
  HEAP32[i11 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i11, 50737, __ZNSt3__211char_traitsIcE6lengthEPKc(50737) | 0);
  L7 : do if ((i7 | 0) != (i2 | 0)) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i12, (HEAP32[i9 >> 2] | 0) + (i7 * 24 | 0) | 0);
   i4 = HEAP8[i12 + 11 >> 0] | 0;
   i5 = i4 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i11, i5 ? HEAP32[i12 >> 2] | 0 : i12, i5 ? HEAP32[i12 + 4 >> 2] | 0 : i4 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
   i4 = i12 + 11 | 0;
   i5 = i12 + 4 | 0;
   i1 = i7;
   while (1) {
    i1 = i1 + 1 | 0;
    if ((i1 | 0) == (i2 | 0)) break L7;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, (HEAP32[i9 >> 2] | 0) + (i1 * 24 | 0) | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i6, 0, 50748) | 0;
    HEAP32[i12 >> 2] = HEAP32[i6 >> 2];
    HEAP32[i12 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
    HEAP32[i12 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
    i3 = 0;
    while (1) {
     if ((i3 | 0) == 3) break;
     HEAP32[i6 + (i3 << 2) >> 2] = 0;
     i3 = i3 + 1 | 0;
    }
    i3 = HEAP8[i4 >> 0] | 0;
    i15 = i3 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i11, i15 ? HEAP32[i12 >> 2] | 0 : i12, i15 ? HEAP32[i5 >> 2] | 0 : i3 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   }
  } while (0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i11, 50524) | 0;
  while (1) {
   if ((i2 | 0) == (i7 | 0)) break;
   i3 = HEAP32[i8 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == -1) break;
    i15 = i1 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i15 * 24 | 0) | 0);
    i1 = i15;
   }
   HEAP32[i8 >> 2] = i3 + -24;
   i2 = i2 + -1 | 0;
  }
  HEAP32[i13 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i13 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i12, i13);
  i1 = HEAP32[i8 >> 2] | 0;
  if (i1 >>> 0 < (HEAP32[i9 + 8 >> 2] | 0) >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i1, i12);
   HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 24;
  } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i9, i12);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i12);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
  i1 = i10;
 }
 STACKTOP = i14;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i5, i9) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i9 = i9 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 i3 = i12 + 64 | 0;
 i10 = i12 + 40 | 0;
 i8 = i12 + 12 | 0;
 i11 = i12 + 24 | 0;
 i7 = i12;
 L1 : do if ((i5 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 102 : 0) {
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 112:
   {
    i2 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i1 + 2 | 0, i5, i3) | 0;
    i3 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i2, i5) | 0;
    if ((i3 | 0) != (i5 | 0) ? (HEAP8[i3 >> 0] | 0) == 95 : 0) {
     HEAP32[i11 >> 2] = 0;
     HEAP32[i11 + 4 >> 2] = 0;
     HEAP32[i11 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i11, i2, i3);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i11, 0, 51715) | 0;
     HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
     HEAP32[i8 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
     HEAP32[i8 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i11 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i10, i8);
     i1 = i9 + 4 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i9 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i10);
      HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i9, i10);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i10);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
     i1 = i3 + 1 | 0;
    }
    break L1;
   }
  case 76:
   break;
  default:
   break L1;
  }
  i2 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i1 + 2 | 0, i5) | 0;
  if ((((i2 | 0) != (i5 | 0) ? (HEAP8[i2 >> 0] | 0) == 112 : 0) ? (i4 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i2 + 1 | 0, i5, i3) | 0, i6 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i4, i5) | 0, (i6 | 0) != (i5 | 0)) : 0) ? (HEAP8[i6 >> 0] | 0) == 95 : 0) {
   HEAP32[i11 >> 2] = 0;
   HEAP32[i11 + 4 >> 2] = 0;
   HEAP32[i11 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i11, i4, i6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i11, 0, 51715) | 0;
   HEAP32[i7 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i7 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i7 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i11 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i10, i7);
   i1 = i9 + 4 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[i9 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i10);
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i9, i10);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
   i1 = i6 + 1 | 0;
  }
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function _arParamObserv2Ideal(i23, d2, d3, i24, i25, i1) {
 i23 = i23 | 0;
 d2 = +d2;
 d3 = +d3;
 i24 = i24 | 0;
 i25 = i25 | 0;
 i1 = i1 | 0;
 var i4 = 0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d26 = 0.0, d27 = 0.0, d28 = 0.0;
 switch (i1 | 0) {
 case 4:
  {
   d16 = +HEAPF64[i23 >> 3];
   d17 = +HEAPF64[i23 + 8 >> 3];
   d14 = +HEAPF64[i23 + 16 >> 3];
   d15 = +HEAPF64[i23 + 24 >> 3];
   d19 = +HEAPF64[i23 + 32 >> 3];
   d20 = +HEAPF64[i23 + 40 >> 3];
   d21 = +HEAPF64[i23 + 48 >> 3];
   d22 = +HEAPF64[i23 + 56 >> 3];
   d18 = +HEAPF64[i23 + 64 >> 3];
   d13 = (d2 - d21) / d19;
   d8 = (d3 - d22) / d20;
   d9 = d14 * 2.0;
   d10 = d15 * 6.0;
   d11 = d15 * 2.0;
   d12 = d14 * 6.0;
   d5 = d13;
   d6 = d8;
   d7 = d13 * d13;
   d2 = d8 * d8;
   i1 = 1;
   while (1) {
    if (!(d2 != 0.0 | d7 != 0.0)) {
     d3 = 0.0;
     d2 = 0.0;
     break;
    }
    d28 = d2 + d7;
    d27 = d16 * d28 + 1.0 + d28 * (d17 * d28);
    d3 = d7 * 3.0;
    d26 = d2 * d3;
    d3 = d5 - (d15 * (d28 + d7 * 2.0) + (d6 * (d9 * d5) + d5 * d27) - d13) / (d10 * d5 + (d9 * d6 + (d16 * (d2 + d3) + 1.0 + d17 * (d2 * d2 + (d7 * (d7 * 5.0) + d26)))));
    d5 = d11 * d3;
    d2 = d6 - (d14 * (d2 * 2.0 + d28) + d6 * d27 + d6 * d5 - d8) / (d12 * d6 + (d16 * (d7 + d2 * 3.0) + 1.0 + d17 * (d2 * (d2 * 5.0) + (d7 * d7 + d26))) + d5);
    if ((i1 | 0) == 4) break;
    d5 = d3;
    d6 = d2;
    d7 = d3 * d3;
    d2 = d2 * d2;
    i1 = i1 + 1 | 0;
   }
   HEAPF64[i24 >> 3] = d21 + d19 * d3 / d18;
   d2 = d22 + d20 * d2 / d18;
   i4 = 22;
   break;
  }
 case 3:
  {
   d12 = +HEAPF64[i23 >> 3];
   d2 = (d2 - d12) / +HEAPF64[i23 + 24 >> 3];
   i4 = i23 + 8 | 0;
   d3 = d3 - +HEAPF64[i4 >> 3];
   d7 = +HEAPF64[i23 + 32 >> 3] / 1.0e8;
   d8 = +HEAPF64[i23 + 40 >> 3] / 1.0e8 / 1.0e5;
   d5 = d2 * d2 + d3 * d3;
   d9 = +Math_sqrt(+d5);
   d10 = d7 * 3.0;
   d11 = d8 * 5.0;
   i1 = 1;
   d6 = d9;
   while (1) {
    if (!(d6 != 0.0)) {
     d3 = 0.0;
     d2 = 0.0;
     break;
    }
    d28 = d6 - (d6 * (1.0 - d7 * d5 - d5 * (d8 * d5)) - d9) / (1.0 - d10 * d5 - d5 * (d11 * d5));
    d2 = d2 * d28 / d6;
    d3 = d3 * d28 / d6;
    if ((i1 | 0) == 3) break;
    d6 = d2 * d2 + d3 * d3;
    d5 = d6;
    i1 = i1 + 1 | 0;
    d6 = +Math_sqrt(+d6);
   }
   i23 = i23 + 16 | 0;
   HEAPF64[i24 >> 3] = d12 + d2 / +HEAPF64[i23 >> 3];
   d2 = d3 / +HEAPF64[i23 >> 3] + +HEAPF64[i4 >> 3];
   i4 = 22;
   break;
  }
 case 2:
  {
   d12 = +HEAPF64[i23 >> 3];
   d2 = d2 - d12;
   i4 = i23 + 8 | 0;
   d3 = d3 - +HEAPF64[i4 >> 3];
   d7 = +HEAPF64[i23 + 24 >> 3] / 1.0e8;
   d8 = +HEAPF64[i23 + 32 >> 3] / 1.0e8 / 1.0e5;
   d5 = d2 * d2 + d3 * d3;
   d9 = +Math_sqrt(+d5);
   d10 = d7 * 3.0;
   d11 = d8 * 5.0;
   i1 = 1;
   d6 = d9;
   while (1) {
    if (!(d6 != 0.0)) {
     d3 = 0.0;
     d2 = 0.0;
     break;
    }
    d28 = d6 - (d6 * (1.0 - d7 * d5 - d5 * (d8 * d5)) - d9) / (1.0 - d10 * d5 - d5 * (d11 * d5));
    d2 = d2 * d28 / d6;
    d3 = d3 * d28 / d6;
    if ((i1 | 0) == 3) break;
    d5 = d2 * d2 + d3 * d3;
    i1 = i1 + 1 | 0;
    d6 = +Math_sqrt(+d5);
   }
   i23 = i23 + 16 | 0;
   HEAPF64[i24 >> 3] = d12 + d2 / +HEAPF64[i23 >> 3];
   d2 = d3 / +HEAPF64[i23 >> 3] + +HEAPF64[i4 >> 3];
   i4 = 22;
   break;
  }
 case 1:
  {
   d10 = +HEAPF64[i23 >> 3];
   d2 = d2 - d10;
   i4 = i23 + 8 | 0;
   d3 = d3 - +HEAPF64[i4 >> 3];
   d7 = +HEAPF64[i23 + 24 >> 3] / 1.0e8;
   d5 = d2 * d2 + d3 * d3;
   d8 = +Math_sqrt(+d5);
   d9 = d7 * 3.0;
   i1 = 1;
   d6 = d8;
   while (1) {
    if (!(d6 != 0.0)) {
     d3 = 0.0;
     d2 = 0.0;
     break;
    }
    d28 = d6 - (d6 * (1.0 - d7 * d5) - d8) / (1.0 - d9 * d5);
    d2 = d2 * d28 / d6;
    d3 = d3 * d28 / d6;
    if ((i1 | 0) == 3) break;
    d5 = d2 * d2 + d3 * d3;
    i1 = i1 + 1 | 0;
    d6 = +Math_sqrt(+d5);
   }
   i23 = i23 + 16 | 0;
   HEAPF64[i24 >> 3] = d10 + d2 / +HEAPF64[i23 >> 3];
   d2 = d3 / +HEAPF64[i23 >> 3] + +HEAPF64[i4 >> 3];
   i4 = 22;
   break;
  }
 default:
  i1 = -1;
 }
 if ((i4 | 0) == 22) {
  HEAPF64[i25 >> 3] = d2;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce(i1, i21, i9, i25, i26, d5) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i9 = i9 | 0;
 i25 = i25 | 0;
 i26 = i26 | 0;
 d5 = +d5;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i24 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0;
 i28 = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(416);
 i11 = i28 + 336 | 0;
 i3 = i28 + 328 | 0;
 i1 = i28 + 224 | 0;
 i4 = i28 + 400 | 0;
 i2 = i28 + 112 | 0;
 i27 = i28 + 396 | 0;
 i12 = i28 + 408 | 0;
 i13 = i28 + 405 | 0;
 i14 = i28 + 404 | 0;
 i22 = i28 + 384 | 0;
 i23 = i28 + 372 | 0;
 i24 = i28 + 360 | 0;
 i8 = i28 + 356 | 0;
 i10 = i28;
 i15 = i28 + 352 | 0;
 i16 = i28 + 344 | 0;
 i17 = i28 + 348 | 0;
 HEAP32[i4 >> 2] = i1;
 HEAPF64[i11 >> 3] = d5;
 i1 = _snprintf(i1, 100, 49131, i11) | 0;
 if (i1 >>> 0 > 99) {
  i1 = __ZNSt3__26__clocEv() | 0;
  HEAPF64[i3 >> 3] = d5;
  i1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i4, i1, 49131, i3) | 0;
  i2 = HEAP32[i4 >> 2] | 0;
  if (!i2) __ZSt17__throw_bad_allocv();
  i3 = _malloc(i1) | 0;
  if (!i3) __ZSt17__throw_bad_allocv(); else {
   i18 = i3;
   i20 = i1;
   i30 = i3;
   i31 = i2;
  }
 } else {
  i18 = i2;
  i20 = i1;
  i30 = 0;
  i31 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv(i27, i25);
 i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i27, 58792) | 0;
 i6 = HEAP32[i4 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 32 >> 2] & 15](i7, i6, i6 + i20 | 0, i18) | 0;
 if (!i20) i6 = 0; else i6 = (HEAP8[HEAP32[i4 >> 2] >> 0] | 0) == 45;
 HEAP32[i22 >> 2] = 0;
 HEAP32[i22 + 4 >> 2] = 0;
 HEAP32[i22 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i22 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i23 >> 2] = 0;
 HEAP32[i23 + 4 >> 2] = 0;
 HEAP32[i23 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i23 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(i9, i6, i27, i12, i13, i14, i22, i23, i24, i8);
 i4 = HEAP32[i8 >> 2] | 0;
 if ((i20 | 0) > (i4 | 0)) {
  i3 = HEAP8[i24 + 11 >> 0] | 0;
  i1 = HEAP8[i23 + 11 >> 0] | 0;
  i1 = i1 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i1 & 255;
  i2 = i4 + 1 + (i20 - i4 << 1) | 0;
  i3 = i3 << 24 >> 24 < 0 ? HEAP32[i24 + 4 >> 2] | 0 : i3 & 255;
 } else {
  i3 = HEAP8[i24 + 11 >> 0] | 0;
  i1 = HEAP8[i23 + 11 >> 0] | 0;
  i1 = i1 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i1 & 255;
  i2 = i4 + 2 | 0;
  i3 = i3 << 24 >> 24 < 0 ? HEAP32[i24 + 4 >> 2] | 0 : i3 & 255;
 }
 i1 = i2 + i3 + i1 | 0;
 if (i1 >>> 0 > 100) {
  i1 = _malloc(i1) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i19 = i1;
   i29 = i1;
  }
 } else {
  i19 = i10;
  i29 = 0;
 }
 __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(i19, i15, i16, HEAP32[i25 + 4 >> 2] | 0, i18, i18 + i20 | 0, i7, i6, i12, HEAP8[i13 >> 0] | 0, HEAP8[i14 >> 0] | 0, i22, i23, i24, i4);
 HEAP32[i17 >> 2] = HEAP32[i21 >> 2];
 i21 = HEAP32[i15 >> 2] | 0;
 i1 = HEAP32[i16 >> 2] | 0;
 HEAP32[i11 >> 2] = HEAP32[i17 >> 2];
 i1 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i11, i19, i21, i1, i25, i26) | 0;
 if (i29 | 0) _free(i29);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i22);
 __ZNSt3__26localeD2Ev(i27);
 if (i30 | 0) _free(i30);
 if (i31 | 0) _free(i31);
 STACKTOP = i28;
 return i1 | 0;
}

function _arGetContour(i10, i11, i1, i3, i4, i2, i20) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i20 = i20 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i21 = 0, i22 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 80032 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80032);
 i9 = i21 + 80016 | 0;
 i8 = i21 + 80008 | 0;
 i5 = i21 + 8e4 | 0;
 i18 = i21 + 4e4 | 0;
 i19 = i21;
 i16 = HEAP32[i2 + 8 >> 2] | 0;
 i17 = Math_imul(i16, i11) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i2 = HEAP32[i2 + 4 >> 2] | 0;
 i15 = i1;
 i1 = i10 + (i17 + i1 << 1) | 0;
 while (1) {
  if ((i15 | 0) > (i2 | 0)) {
   i17 = 7;
   break;
  }
  i17 = HEAP16[i1 >> 1] | 0;
  if (i17 << 16 >> 16 > 0 ? (HEAP32[i3 + ((i17 << 16 >> 16) + -1 << 2) >> 2] | 0) == (i4 | 0) : 0) {
   i17 = 6;
   break;
  }
  i15 = i15 + 1 | 0;
  i1 = i1 + 2 | 0;
 }
 do if ((i17 | 0) == 6) if ((i15 | 0) != -1) {
  i12 = i20 + 24 | 0;
  HEAP32[i12 >> 2] = 1;
  i13 = i20 + 28 | 0;
  HEAP32[i13 >> 2] = i15;
  i14 = i20 + 40028 | 0;
  HEAP32[i14 >> 2] = i16;
  i4 = 5;
  i1 = i16;
  i7 = i15;
  i3 = 1;
  while (1) {
   i6 = i10 + ((Math_imul(i1, i11) | 0) + i7 << 1) | 0;
   i5 = 0;
   i1 = i4 + 5 | 0;
   while (1) {
    i4 = (i1 | 0) % 8 | 0;
    if (i5 >>> 0 >= 8) {
     i17 = 13;
     break;
    }
    i1 = HEAP32[48 + (i4 << 2) >> 2] | 0;
    i22 = Math_imul(i1, i11) | 0;
    i2 = HEAP32[80 + (i4 << 2) >> 2] | 0;
    if ((HEAP16[i6 + (i22 + i2 << 1) >> 1] | 0) > 0) break;
    i5 = i5 + 1 | 0;
    i1 = i4 + 1 | 0;
   }
   if ((i17 | 0) == 13) {
    i17 = 0;
    if ((i5 | 0) == 8) {
     i17 = 15;
     break;
    }
    i2 = HEAP32[80 + (i4 << 2) >> 2] | 0;
    i1 = HEAP32[48 + (i4 << 2) >> 2] | 0;
   }
   HEAP32[i20 + 28 + (i3 << 2) >> 2] = i2 + i7;
   i5 = HEAP32[i12 >> 2] | 0;
   HEAP32[i20 + 40028 + (i5 << 2) >> 2] = i1 + (HEAP32[i20 + 40028 + (i5 + -1 << 2) >> 2] | 0);
   i5 = HEAP32[i12 >> 2] | 0;
   i2 = i20 + 28 + (i5 << 2) | 0;
   if ((HEAP32[i2 >> 2] | 0) == (i15 | 0) ? (HEAP32[i20 + 40028 + (i5 << 2) >> 2] | 0) == (i16 | 0) : 0) {
    i17 = 18;
    break;
   }
   i3 = i5 + 1 | 0;
   HEAP32[i12 >> 2] = i3;
   if ((i3 | 0) == 9999) {
    i17 = 21;
    break;
   }
   i1 = HEAP32[i20 + 40028 + (i5 << 2) >> 2] | 0;
   i7 = HEAP32[i2 >> 2] | 0;
  }
  if ((i17 | 0) == 15) {
   _arLog(0, 3, 17964, i8);
   i1 = -1;
   break;
  } else if ((i17 | 0) == 18) {
   i3 = 0;
   i1 = 0;
   i2 = 1;
   while (1) {
    if ((i2 | 0) >= (i5 | 0)) break;
    i22 = (HEAP32[i20 + 28 + (i2 << 2) >> 2] | 0) - i15 | 0;
    i22 = Math_imul(i22, i22) | 0;
    i11 = (HEAP32[i20 + 40028 + (i2 << 2) >> 2] | 0) - i16 | 0;
    i22 = (Math_imul(i11, i11) | 0) + i22 | 0;
    i11 = (i22 | 0) > (i1 | 0);
    i3 = i11 ? i2 : i3;
    i1 = i11 ? i22 : i1;
    i2 = i2 + 1 | 0;
   }
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i3 | 0)) break;
    HEAP32[i18 + (i1 << 2) >> 2] = HEAP32[i20 + 28 + (i1 << 2) >> 2];
    HEAP32[i19 + (i1 << 2) >> 2] = HEAP32[i20 + 40028 + (i1 << 2) >> 2];
    i1 = i1 + 1 | 0;
   }
   i2 = i3;
   i1 = i5;
   while (1) {
    if ((i2 | 0) >= (i1 | 0)) break;
    i1 = i2 - i3 | 0;
    HEAP32[i20 + 28 + (i1 << 2) >> 2] = HEAP32[i20 + 28 + (i2 << 2) >> 2];
    HEAP32[i20 + 40028 + (i1 << 2) >> 2] = HEAP32[i20 + 40028 + (i2 << 2) >> 2];
    i2 = i2 + 1 | 0;
    i1 = HEAP32[i12 >> 2] | 0;
   }
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i3 | 0)) break;
    i22 = i1 - i3 | 0;
    HEAP32[i20 + 28 + ((HEAP32[i12 >> 2] | 0) + i22 << 2) >> 2] = HEAP32[i18 + (i1 << 2) >> 2];
    HEAP32[i20 + 40028 + ((HEAP32[i12 >> 2] | 0) + i22 << 2) >> 2] = HEAP32[i19 + (i1 << 2) >> 2];
    i1 = i1 + 1 | 0;
   }
   HEAP32[i20 + 28 + (HEAP32[i12 >> 2] << 2) >> 2] = HEAP32[i13 >> 2];
   HEAP32[i20 + 40028 + (HEAP32[i12 >> 2] << 2) >> 2] = HEAP32[i14 >> 2];
   HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 1;
   i1 = 0;
   break;
  } else if ((i17 | 0) == 21) {
   _arLog(0, 3, 17971, i9);
   i1 = -1;
   break;
  }
 } else i17 = 7; while (0);
 if ((i17 | 0) == 7) {
  _arLog(0, 3, 17957, i5);
  i1 = -1;
 }
 STACKTOP = i21;
 return i1 | 0;
}

function _jpeg_idct_float(i2, i3, i5, i11, i12) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 var i1 = 0, d4 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i13 = 0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i1 = i13;
 i9 = HEAP32[i2 + 324 >> 2] | 0;
 i7 = 8;
 i8 = i1;
 i6 = HEAP32[i3 + 80 >> 2] | 0;
 while (1) {
  if (!i7) break;
  i3 = HEAP16[i5 + 16 >> 1] | 0;
  i2 = HEAP16[i5 + 32 >> 1] | 0;
  if (!((i3 | i2) << 16 >> 16)) if (((((HEAP16[i5 + 48 >> 1] | 0) == 0 ? (HEAP16[i5 + 64 >> 1] | 0) == 0 : 0) ? (HEAP16[i5 + 80 >> 1] | 0) == 0 : 0) ? (HEAP16[i5 + 96 >> 1] | 0) == 0 : 0) ? (HEAP16[i5 + 112 >> 1] | 0) == 0 : 0) {
   d4 = +HEAPF32[i6 >> 2] * +(HEAP16[i5 >> 1] | 0);
   HEAPF32[i8 >> 2] = d4;
   HEAPF32[i8 + 32 >> 2] = d4;
   HEAPF32[i8 + 64 >> 2] = d4;
   HEAPF32[i8 + 96 >> 2] = d4;
   HEAPF32[i8 + 128 >> 2] = d4;
   HEAPF32[i8 + 160 >> 2] = d4;
   HEAPF32[i8 + 192 >> 2] = d4;
   i2 = 56;
  } else {
   i2 = 0;
   i10 = 10;
  } else i10 = 10;
  if ((i10 | 0) == 10) {
   i10 = 0;
   d14 = +HEAPF32[i6 >> 2] * +(HEAP16[i5 >> 1] | 0);
   d20 = +HEAPF32[i6 + 64 >> 2] * +(i2 << 16 >> 16);
   d19 = +HEAPF32[i6 + 128 >> 2] * +(HEAP16[i5 + 64 >> 1] | 0);
   d16 = +HEAPF32[i6 + 192 >> 2] * +(HEAP16[i5 + 96 >> 1] | 0);
   d18 = d14 + d19;
   d19 = d14 - d19;
   d14 = d20 + d16;
   d16 = (d20 - d16) * 1.4142135381698608 - d14;
   d20 = d18 + d14;
   d14 = d18 - d14;
   d18 = d19 + d16;
   d16 = d19 - d16;
   d19 = +HEAPF32[i6 + 32 >> 2] * +(i3 << 16 >> 16);
   d17 = +HEAPF32[i6 + 96 >> 2] * +(HEAP16[i5 + 48 >> 1] | 0);
   d22 = +HEAPF32[i6 + 160 >> 2] * +(HEAP16[i5 + 80 >> 1] | 0);
   d21 = +HEAPF32[i6 + 224 >> 2] * +(HEAP16[i5 + 112 >> 1] | 0);
   d15 = d17 + d22;
   d17 = d22 - d17;
   d22 = d19 + d21;
   d21 = d19 - d21;
   d19 = d15 + d22;
   d4 = (d17 + d21) * 1.8477590084075928;
   d17 = d4 - d17 * 2.613126039505005 - d19;
   d15 = (d22 - d15) * 1.4142135381698608 - d17;
   d4 = d21 * 1.0823922157287598 - d4 + d15;
   HEAPF32[i8 >> 2] = d20 + d19;
   HEAPF32[i8 + 224 >> 2] = d20 - d19;
   HEAPF32[i8 + 32 >> 2] = d18 + d17;
   HEAPF32[i8 + 192 >> 2] = d18 - d17;
   HEAPF32[i8 + 64 >> 2] = d16 + d15;
   HEAPF32[i8 + 160 >> 2] = d16 - d15;
   HEAPF32[i8 + 128 >> 2] = d14 + d4;
   d4 = d14 - d4;
   i2 = 24;
  }
  HEAPF32[i8 + (i2 << 2) >> 2] = d4;
  i7 = i7 + -1 | 0;
  i8 = i8 + 4 | 0;
  i6 = i6 + 4 | 0;
  i5 = i5 + 2 | 0;
 }
 i3 = i9 + 128 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 8) break;
  i10 = (HEAP32[i11 + (i2 << 2) >> 2] | 0) + i12 | 0;
  d15 = +HEAPF32[i1 >> 2];
  d16 = +HEAPF32[i1 + 16 >> 2];
  d17 = d15 + d16;
  d16 = d15 - d16;
  d15 = +HEAPF32[i1 + 8 >> 2];
  d19 = +HEAPF32[i1 + 24 >> 2];
  d21 = d15 + d19;
  d19 = (d15 - d19) * 1.4142135381698608 - d21;
  d15 = d17 + d21;
  d21 = d17 - d21;
  d17 = d16 + d19;
  d19 = d16 - d19;
  d16 = +HEAPF32[i1 + 20 >> 2];
  d18 = +HEAPF32[i1 + 12 >> 2];
  d20 = d16 + d18;
  d18 = d16 - d18;
  d16 = +HEAPF32[i1 + 4 >> 2];
  d14 = +HEAPF32[i1 + 28 >> 2];
  d4 = d16 + d14;
  d14 = d16 - d14;
  d16 = d20 + d4;
  d22 = (d18 + d14) * 1.8477590084075928;
  d18 = d22 - d18 * 2.613126039505005 - d16;
  d20 = (d4 - d20) * 1.4142135381698608 - d18;
  d22 = d14 * 1.0823922157287598 - d22 + d20;
  HEAP8[i10 >> 0] = HEAP8[i3 + ((~~(d15 + d16) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[i10 + 7 >> 0] = HEAP8[i3 + ((~~(d15 - d16) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[i10 + 1 >> 0] = HEAP8[i3 + ((~~(d17 + d18) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[i10 + 6 >> 0] = HEAP8[i3 + ((~~(d17 - d18) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[i10 + 2 >> 0] = HEAP8[i3 + ((~~(d19 + d20) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[i10 + 5 >> 0] = HEAP8[i3 + ((~~(d19 - d20) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[i10 + 4 >> 0] = HEAP8[i3 + ((~~(d21 + d22) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[i10 + 3 >> 0] = HEAP8[i3 + ((~~(d21 - d22) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  i2 = i2 + 1 | 0;
  i1 = i1 + 32 | 0;
 }
 STACKTOP = i13;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_local_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i5) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i7;
 L1 : do if (((((i1 | 0) != (i4 | 0) ? (HEAP8[i1 >> 0] | 0) == 90 : 0) ? (i8 = i1 + 1 | 0, i2 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i8, i4, i5) | 0, !((i2 | 0) == (i8 | 0) | (i2 | 0) == (i4 | 0))) : 0) ? (HEAP8[i2 >> 0] | 0) == 69 : 0) ? (i3 = i2 + 1 | 0, (i3 | 0) != (i4 | 0)) : 0) switch (HEAP8[i3 >> 0] | 0) {
 case 115:
  {
   i1 = __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_(i2 + 2 | 0, i4) | 0;
   i2 = HEAP32[i5 + 4 >> 2] | 0;
   if ((HEAP32[i5 >> 2] | 0) == (i2 | 0)) break L1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i2 + -24 | 0, 51885) | 0;
   break L1;
  }
 case 100:
  {
   i2 = i2 + 2 | 0;
   if ((i2 | 0) == (i4 | 0)) break L1;
   i2 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i2, i4) | 0;
   if ((i2 | 0) == (i4 | 0)) break L1;
   if ((HEAP8[i2 >> 0] | 0) != 95) break L1;
   i8 = i2 + 1 | 0;
   i3 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i8, i4, i5) | 0;
   i4 = i5 + 4 | 0;
   if ((i3 | 0) == (i8 | 0)) {
    i3 = HEAP32[i4 >> 2] | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == -1) break;
     i8 = i2 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i8 * 24 | 0) | 0);
     i2 = i8;
    }
    HEAP32[i4 >> 2] = i3 + -24;
    break L1;
   }
   i2 = HEAP32[i4 >> 2] | 0;
   if (((i2 - (HEAP32[i5 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, i2 + -24 | 0);
   i2 = HEAP32[i4 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == -1) break;
    i8 = i1 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i8 * 24 | 0) | 0);
    i1 = i8;
   }
   HEAP32[i4 >> 2] = i2 + -24;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i2 + -48 | 0, 50598) | 0;
   i1 = HEAP8[i6 + 11 >> 0] | 0;
   i8 = i1 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i4 >> 2] | 0) + -24 | 0, i8 ? HEAP32[i6 >> 2] | 0 : i6, i8 ? HEAP32[i6 + 4 >> 2] | 0 : i1 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   i1 = i3;
   break L1;
  }
 default:
  {
   i2 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i3, i4, i5) | 0;
   if ((i2 | 0) == (i3 | 0)) {
    i3 = i5 + 4 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == -1) break;
     i8 = i2 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4 + (i8 * 24 | 0) | 0);
     i2 = i8;
    }
    HEAP32[i3 >> 2] = i4 + -24;
    break L1;
   }
   i1 = __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_(i2, i4) | 0;
   i4 = i5 + 4 | 0;
   i2 = HEAP32[i4 >> 2] | 0;
   if (((i2 - (HEAP32[i5 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, i2 + -24 | 0);
   i3 = HEAP32[i4 >> 2] | 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == -1) break;
    i8 = i2 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i8 * 24 | 0) | 0);
    i2 = i8;
   }
   HEAP32[i4 >> 2] = i3 + -24;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i3 + -48 | 0, 50598) | 0;
   i8 = HEAP8[i6 + 11 >> 0] | 0;
   i5 = i8 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i4 >> 2] | 0) + -24 | 0, i5 ? HEAP32[i6 >> 2] | 0 : i6, i5 ? HEAP32[i6 + 4 >> 2] | 0 : i8 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   break L1;
  }
 } while (0);
 STACKTOP = i7;
 return i1 | 0;
}

function ___cxa_demangle(i8, i1, i11, i14) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i11 = i11 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 4192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(4192);
 i12 = i17 + 4176 | 0;
 i15 = i17;
 i16 = i17 + 4112 | 0;
 if ((i8 | 0) != 0 ? (i2 = (i1 | 0) != 0, i13 = (i11 | 0) == 0, !(i2 & i13)) : 0) {
  if (i2) i9 = HEAP32[i11 >> 2] | 0; else i9 = 0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EEC2Ev(i15);
  __ZN10__cxxabiv112_GLOBAL__N_12DbC2ILm4096EEERNS0_5arenaIXT_EEE(i16, i15);
  i4 = i16 + 48 | 0;
  i3 = i16 + 61 | 0;
  HEAP32[i4 >> 2] = 0;
  HEAP32[i4 + 4 >> 2] = 0;
  HEAP32[i4 + 8 >> 2] = 0;
  HEAP8[i4 + 12 >> 0] = 0;
  HEAP8[i3 >> 0] = 1;
  i4 = i16 + 32 | 0;
  i5 = i16 + 36 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i16 + 40 >> 2] | 0) >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE(i12, i15);
   HEAP32[i2 >> 2] = 0;
   HEAP32[i2 + 4 >> 2] = 0;
   HEAP32[i2 + 8 >> 2] = 0;
   HEAP32[i2 + 12 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 16;
  } else __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE24__emplace_back_slow_pathIJRNS2_5arenaILm4096EEEEEEvDpOT_(i4, i15);
  i6 = i16 + 62 | 0;
  HEAP8[i6 >> 0] = 0;
  HEAP8[i16 + 63 >> 0] = 1;
  HEAP32[i12 >> 2] = 0;
  i7 = i8 + (_strlen(i8) | 0) | 0;
  __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri(i8, i7, i16, i12);
  i2 = HEAP32[i12 >> 2] | 0;
  do if (!((i2 | 0) != 0 | (HEAP8[i6 >> 0] | 0) == 0)) {
   i4 = HEAP32[i4 >> 2] | 0;
   if ((i4 | 0) != (HEAP32[i5 >> 2] | 0) ? (HEAP32[i4 >> 2] | 0) != (HEAP32[i4 + 4 >> 2] | 0) : 0) {
    HEAP8[i6 >> 0] = 0;
    HEAP8[i3 >> 0] = 0;
    i3 = HEAP32[i16 >> 2] | 0;
    i4 = i16 + 4 | 0;
    i2 = HEAP32[i4 >> 2] | 0;
    while (1) {
     if ((i2 | 0) == (i3 | 0)) break;
     i5 = i2 + -24 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i2 = i5;
    }
    HEAP32[i4 >> 2] = i3;
    i3 = HEAP32[i16 + 16 >> 2] | 0;
    i4 = i16 + 20 | 0;
    i2 = HEAP32[i4 >> 2] | 0;
    while (1) {
     if ((i2 | 0) == (i3 | 0)) break;
     i5 = i2 + -16 | 0;
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
     i2 = i5;
    }
    HEAP32[i4 >> 2] = i3;
    __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri(i8, i7, i16, i12);
    if (!(HEAP8[i6 >> 0] | 0)) {
     i2 = HEAP32[i12 >> 2] | 0;
     i10 = 22;
     break;
    } else {
     HEAP32[i12 >> 2] = -2;
     i1 = 0;
     i2 = -2;
     break;
    }
   } else i10 = 23;
  } else i10 = 22; while (0);
  if ((i10 | 0) == 22) if (!i2) i10 = 23; else i1 = 0;
  do if ((i10 | 0) == 23) {
   i3 = i16 + 4 | 0;
   i4 = __ZNK10__cxxabiv112_GLOBAL__N_111string_pair4sizeEv((HEAP32[i3 >> 2] | 0) + -24 | 0) | 0;
   i2 = i4 + 1 | 0;
   if (i2 >>> 0 > i9 >>> 0) {
    i1 = _realloc(i1, i2) | 0;
    if (!i1) {
     HEAP32[i12 >> 2] = -1;
     i1 = 0;
     i2 = -1;
     break;
    }
    if (!i13) HEAP32[i11 >> 2] = i2;
   } else if (!i1) {
    i1 = 0;
    i2 = 0;
    break;
   }
   i13 = HEAP32[i3 >> 2] | 0;
   i11 = i13 + -12 | 0;
   i2 = HEAP8[i11 + 11 >> 0] | 0;
   i12 = i2 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i13 + -24 | 0, i12 ? HEAP32[i11 >> 2] | 0 : i11, i12 ? HEAP32[i13 + -8 >> 2] | 0 : i2 & 255) | 0;
   i2 = (HEAP32[i3 >> 2] | 0) + -24 | 0;
   if ((HEAP8[i2 + 11 >> 0] | 0) < 0) i2 = HEAP32[i2 >> 2] | 0;
   _memcpy(i1 | 0, i2 | 0, i4 | 0) | 0;
   HEAP8[i1 + i4 >> 0] = 0;
   i2 = 0;
  } while (0);
  if (i14 | 0) HEAP32[i14 >> 2] = i2;
  __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev(i16);
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EED2Ev(i15);
 } else if (!i14) i1 = 0; else {
  HEAP32[i14 >> 2] = -3;
  i1 = 0;
 }
 STACKTOP = i17;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i5, i11) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i11 = i11 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i10 = i12 + 16 | 0;
 i9 = i12;
 L1 : do if ((i5 - i1 | 0) > 1 ? (HEAP8[i1 >> 0] | 0) == 84 : 0) {
  i2 = HEAP8[i1 + 1 >> 0] | 0;
  if (i2 << 24 >> 24 == 95) {
   i2 = HEAP32[i11 + 36 >> 2] | 0;
   if ((HEAP32[i11 + 32 >> 2] | 0) == (i2 | 0)) break;
   i3 = HEAP32[i2 + -16 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i2 + -12 >> 2] | 0)) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm3EEERAT__Kc(i10);
    i2 = i11 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i11 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i10);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i11, i10);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i10);
    HEAP8[i11 + 62 >> 0] = 1;
    i1 = i1 + 2 | 0;
    break;
   }
   i4 = HEAP32[i3 + 4 >> 2] | 0;
   i5 = i11 + 4 | 0;
   i6 = i11 + 8 | 0;
   i2 = HEAP32[i3 >> 2] | 0;
   while (1) {
    if ((i2 | 0) == (i4 | 0)) break;
    i3 = HEAP32[i5 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i11, i2); else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i3, i2);
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 24;
    }
    i2 = i2 + 24 | 0;
   }
   i1 = i1 + 2 | 0;
   break;
  }
  i2 = (i2 << 24 >> 24) + -48 | 0;
  if (i2 >>> 0 < 10) {
   i8 = i1 + 2 | 0;
   while (1) {
    if ((i8 | 0) == (i5 | 0)) break L1;
    i3 = HEAP8[i8 >> 0] | 0;
    i4 = (i3 << 24 >> 24) + -48 | 0;
    if (i4 >>> 0 >= 10) break;
    i2 = i4 + (i2 * 10 | 0) | 0;
    i8 = i8 + 1 | 0;
   }
   if (i3 << 24 >> 24 == 95 ? (i7 = HEAP32[i11 + 36 >> 2] | 0, (HEAP32[i11 + 32 >> 2] | 0) != (i7 | 0)) : 0) {
    i2 = i2 + 1 | 0;
    i5 = HEAP32[i7 + -16 >> 2] | 0;
    i6 = i5;
    if (i2 >>> 0 >= (HEAP32[i7 + -12 >> 2] | 0) - i5 >> 4 >>> 0) {
     i3 = i8 + 1 | 0;
     HEAP32[i9 >> 2] = 0;
     HEAP32[i9 + 4 >> 2] = 0;
     HEAP32[i9 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i9, i1, i3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i10, i9);
     i1 = i11 + 4 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i11 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i10);
      HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i11, i10);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i10);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
     HEAP8[i11 + 62 >> 0] = 1;
     i1 = i3;
     break;
    }
    i3 = HEAP32[i6 + (i2 << 4) + 4 >> 2] | 0;
    i4 = i11 + 4 | 0;
    i5 = i11 + 8 | 0;
    i1 = HEAP32[i6 + (i2 << 4) >> 2] | 0;
    while (1) {
     if ((i1 | 0) == (i3 | 0)) break;
     i2 = HEAP32[i4 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i5 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i11, i1); else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i2, i1);
      HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 24;
     }
     i1 = i1 + 24 | 0;
    }
    i1 = i8 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_127parse_reinterpret_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i8 = i15 + 88 | 0;
 i9 = i15 + 64 | 0;
 i10 = i15 + 36 | 0;
 i11 = i15 + 48 | 0;
 i12 = i15 + 24 | 0;
 i13 = i15 + 12 | 0;
 i14 = i15;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 114 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 99 : 0) ? (i16 = i1 + 2 | 0, i4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i16, i2, i3) | 0, (i4 | 0) != (i16 | 0)) : 0) ? (i6 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i4, i2, i3) | 0, (i6 | 0) != (i4 | 0)) : 0) ? (i7 = i3 + 4 | 0, i5 = HEAP32[i7 >> 2] | 0, ((i5 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i5 + -24 | 0);
  i2 = HEAP32[i7 >> 2] | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == -1) break;
   i16 = i1 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i16 * 24 | 0) | 0);
   i1 = i16;
  }
  HEAP32[i7 >> 2] = i2 + -24;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i14, i2 + -48 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i14, 0, 50776) | 0;
  HEAP32[i13 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
  HEAP32[i13 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i14 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i13, 50773) | 0;
  HEAP32[i12 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i12 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i12 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i13 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i1 = HEAP8[i8 + 11 >> 0] | 0;
  i16 = i1 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i12, i16 ? HEAP32[i8 >> 2] | 0 : i8, i16 ? HEAP32[i8 + 4 >> 2] | 0 : i1 & 255) | 0;
  HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i11 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
  HEAP32[i11 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i12 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i11, 50524) | 0;
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i9, i10);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i7 >> 2] | 0) + -24 | 0, i9);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  i1 = i6;
 }
 STACKTOP = i15;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_dynamic_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i8 = i15 + 88 | 0;
 i9 = i15 + 64 | 0;
 i10 = i15 + 36 | 0;
 i11 = i15 + 48 | 0;
 i12 = i15 + 24 | 0;
 i13 = i15 + 12 | 0;
 i14 = i15;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 100 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 99 : 0) ? (i16 = i1 + 2 | 0, i4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i16, i2, i3) | 0, (i4 | 0) != (i16 | 0)) : 0) ? (i6 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i4, i2, i3) | 0, (i6 | 0) != (i4 | 0)) : 0) ? (i7 = i3 + 4 | 0, i5 = HEAP32[i7 >> 2] | 0, ((i5 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i5 + -24 | 0);
  i2 = HEAP32[i7 >> 2] | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == -1) break;
   i16 = i1 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i16 * 24 | 0) | 0);
   i1 = i16;
  }
  HEAP32[i7 >> 2] = i2 + -24;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i14, i2 + -48 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i14, 0, 51676) | 0;
  HEAP32[i13 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
  HEAP32[i13 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i14 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i13, 50773) | 0;
  HEAP32[i12 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i12 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i12 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i13 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i1 = HEAP8[i8 + 11 >> 0] | 0;
  i16 = i1 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i12, i16 ? HEAP32[i8 >> 2] | 0 : i8, i16 ? HEAP32[i8 + 4 >> 2] | 0 : i1 & 255) | 0;
  HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i11 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
  HEAP32[i11 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i12 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i11, 50524) | 0;
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i9, i10);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i7 >> 2] | 0) + -24 | 0, i9);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  i1 = i6;
 }
 STACKTOP = i15;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_static_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i8 = i15 + 88 | 0;
 i9 = i15 + 64 | 0;
 i10 = i15 + 36 | 0;
 i11 = i15 + 48 | 0;
 i12 = i15 + 24 | 0;
 i13 = i15 + 12 | 0;
 i14 = i15;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 99 : 0) ? (i16 = i1 + 2 | 0, i4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i16, i2, i3) | 0, (i4 | 0) != (i16 | 0)) : 0) ? (i6 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i4, i2, i3) | 0, (i6 | 0) != (i4 | 0)) : 0) ? (i7 = i3 + 4 | 0, i5 = HEAP32[i7 >> 2] | 0, ((i5 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i5 + -24 | 0);
  i2 = HEAP32[i7 >> 2] | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == -1) break;
   i16 = i1 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i16 * 24 | 0) | 0);
   i1 = i16;
  }
  HEAP32[i7 >> 2] = i2 + -24;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i14, i2 + -48 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i14, 0, 50760) | 0;
  HEAP32[i13 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
  HEAP32[i13 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i14 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i13, 50773) | 0;
  HEAP32[i12 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i12 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i12 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i13 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i1 = HEAP8[i8 + 11 >> 0] | 0;
  i16 = i1 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i12, i16 ? HEAP32[i8 >> 2] | 0 : i8, i16 ? HEAP32[i8 + 4 >> 2] | 0 : i1 & 255) | 0;
  HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i11 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
  HEAP32[i11 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i12 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i11, 50524) | 0;
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i9, i10);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i7 >> 2] | 0) + -24 | 0, i9);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  i1 = i6;
 }
 STACKTOP = i15;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_const_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i8 = i15 + 88 | 0;
 i9 = i15 + 64 | 0;
 i10 = i15 + 36 | 0;
 i11 = i15 + 48 | 0;
 i12 = i15 + 24 | 0;
 i13 = i15 + 12 | 0;
 i14 = i15;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 99 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 99 : 0) ? (i16 = i1 + 2 | 0, i4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i16, i2, i3) | 0, (i4 | 0) != (i16 | 0)) : 0) ? (i6 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i4, i2, i3) | 0, (i6 | 0) != (i4 | 0)) : 0) ? (i7 = i3 + 4 | 0, i5 = HEAP32[i7 >> 2] | 0, ((i5 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i5 + -24 | 0);
  i2 = HEAP32[i7 >> 2] | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == -1) break;
   i16 = i1 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i16 * 24 | 0) | 0);
   i1 = i16;
  }
  HEAP32[i7 >> 2] = i2 + -24;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i14, i2 + -48 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i14, 0, 51693) | 0;
  HEAP32[i13 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
  HEAP32[i13 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i14 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i13, 50773) | 0;
  HEAP32[i12 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i12 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i12 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i13 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i1 = HEAP8[i8 + 11 >> 0] | 0;
  i16 = i1 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i12, i16 ? HEAP32[i8 >> 2] | 0 : i8, i16 ? HEAP32[i8 + 4 >> 2] | 0 : i1 & 255) | 0;
  HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i11 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
  HEAP32[i11 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i12 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i11, 50524) | 0;
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i9, i10);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i7 >> 2] | 0) + -24 | 0, i9);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  i1 = i6;
 }
 STACKTOP = i15;
 return i1 | 0;
}

function _ar2SetTemplateSub(i1, i15, i21, i6, i2, i22) {
 i1 = i1 | 0;
 i15 = i15 | 0;
 i21 = i21 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0, d8 = 0.0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i23 = 0;
 i23 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 i3 = i23 + 60 | 0;
 i4 = i23 + 56 | 0;
 i18 = i23 + 52 | 0;
 i19 = i23 + 48 | 0;
 i16 = i23;
 i20 = i23 + 64 | 0;
 L1 : do if (!i1) {
  i16 = HEAP32[i6 >> 2] | 0;
  i17 = HEAP32[i16 + (i2 * 20 | 0) + 8 >> 2] | 0;
  HEAP32[i3 >> 2] = i17;
  d8 = +HEAPF32[i16 + (i2 * 20 | 0) + 12 >> 2];
  HEAPF32[i4 >> 2] = d8;
  if ((_ar2MarkerCoord2ScreenCoord(0, i15, (HEAP32[tempDoublePtr >> 2] = i17, +HEAPF32[tempDoublePtr >> 2]), d8, i18, i19) | 0) < 0) i1 = -1; else {
   i11 = ~~(+HEAPF32[i18 >> 2] + .5);
   i3 = HEAP32[i22 + 16 >> 2] | 0;
   i12 = i22 + 20 | 0;
   i13 = i22 + 8 | 0;
   i14 = i22 + 12 | 0;
   i10 = i6 + 8 | 0;
   i9 = 0 - i3 | 0;
   i6 = ~~(+HEAPF32[i19 >> 2] + .5) - (i3 << 1) | 0;
   i3 = 0;
   i2 = 0;
   i1 = 0;
   i4 = HEAP32[i22 + 24 >> 2] | 0;
   while (1) {
    if ((i9 | 0) > (HEAP32[i12 >> 2] | 0)) {
     i5 = 25;
     break L1;
    }
    i7 = HEAP32[i13 >> 2] | 0;
    d8 = +(i6 | 0);
    i5 = 0 - i7 | 0;
    i7 = i11 - (i7 << 1) | 0;
    while (1) {
     if ((i5 | 0) > (HEAP32[i14 >> 2] | 0)) break;
     if ((_ar2GetImageValue(0, i15, HEAP32[(HEAP32[i21 >> 2] | 0) + (HEAP32[i10 >> 2] << 2) >> 2] | 0, +(i7 | 0), d8, i20) | 0) < 0) HEAP16[i4 >> 1] = 4096; else {
      i19 = HEAP8[i20 >> 0] | 0;
      HEAP16[i4 >> 1] = i19 & 255;
      i19 = i19 & 255;
      i3 = i3 + 1 | 0;
      i2 = (Math_imul(i19, i19) | 0) + i2 | 0;
      i1 = i1 + i19 | 0;
     }
     i5 = i5 + 1 | 0;
     i7 = i7 + 2 | 0;
     i4 = i4 + 2 | 0;
    }
    i9 = i9 + 1 | 0;
    i6 = i6 + 2 | 0;
   }
  }
 } else {
  _arUtilMatMuldff(i1 + 8 | 0, i15, i16) | 0;
  i14 = HEAP32[i6 >> 2] | 0;
  i15 = HEAP32[i14 + (i2 * 20 | 0) + 8 >> 2] | 0;
  HEAP32[i3 >> 2] = i15;
  d8 = +HEAPF32[i14 + (i2 * 20 | 0) + 12 >> 2];
  HEAPF32[i4 >> 2] = d8;
  if ((_ar2MarkerCoord2ScreenCoord(0, i16, (HEAP32[tempDoublePtr >> 2] = i15, +HEAPF32[tempDoublePtr >> 2]), d8, i3, i4) | 0) >= 0 ? (i17 = i1 + 184 | 0, (_arParamIdeal2ObservLTf(i17, +HEAPF32[i3 >> 2], +HEAPF32[i4 >> 2], i18, i19) | 0) >= 0) : 0) {
   i11 = ~~(+HEAPF32[i18 >> 2] + .5);
   i7 = HEAP32[i22 + 16 >> 2] | 0;
   i12 = i22 + 20 | 0;
   i13 = i22 + 8 | 0;
   i14 = i22 + 12 | 0;
   i10 = i6 + 8 | 0;
   i3 = 0;
   i5 = 0 - i7 | 0;
   i7 = ~~(+HEAPF32[i19 >> 2] + .5) - (i7 << 1) | 0;
   i2 = 0;
   i1 = 0;
   i4 = HEAP32[i22 + 24 >> 2] | 0;
   while (1) {
    if ((i5 | 0) > (HEAP32[i12 >> 2] | 0)) {
     i5 = 25;
     break L1;
    }
    i9 = HEAP32[i13 >> 2] | 0;
    d8 = +(i7 | 0);
    i6 = 0 - i9 | 0;
    i9 = i11 - (i9 << 1) | 0;
    while (1) {
     if ((i6 | 0) > (HEAP32[i14 >> 2] | 0)) break;
     do if ((_arParamObserv2IdealLTf(i17, +(i9 | 0), d8, i18, i19) | 0) >= 0) if ((_ar2GetImageValue(0, i16, HEAP32[(HEAP32[i21 >> 2] | 0) + (HEAP32[i10 >> 2] << 2) >> 2] | 0, +HEAPF32[i18 >> 2], +HEAPF32[i19 >> 2], i20) | 0) < 0) {
      HEAP16[i4 >> 1] = 4096;
      break;
     } else {
      i15 = HEAP8[i20 >> 0] | 0;
      HEAP16[i4 >> 1] = i15 & 255;
      i15 = i15 & 255;
      i3 = i3 + 1 | 0;
      i2 = (Math_imul(i15, i15) | 0) + i2 | 0;
      i1 = i1 + i15 | 0;
      break;
     } else HEAP16[i4 >> 1] = 4096; while (0);
     i6 = i6 + 1 | 0;
     i9 = i9 + 2 | 0;
     i4 = i4 + 2 | 0;
    }
    i5 = i5 + 1 | 0;
    i7 = i7 + 2 | 0;
   }
  } else i1 = -1;
 } while (0);
 if ((i5 | 0) == 25) if (!i3) i1 = -1; else {
  i21 = ~~+Math_sqrt(+(+(i2 - ((Math_imul(i1, i1) | 0) / (i3 | 0) | 0) | 0)));
  HEAP32[i22 + 28 >> 2] = i21;
  HEAP32[i22 + 32 >> 2] = i1;
  HEAP32[i22 + 36 >> 2] = i3;
  i1 = 0;
 }
 STACKTOP = i23;
 return i1 | 0;
}

function __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_(i10, i11, i14) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i15 = i17;
 i16 = i10 + 4 | 0;
 HEAP32[i16 >> 2] = HEAP32[i10 >> 2];
 do if ((__ZNK6vision18BinaryFeatureStore4sizeEv(i11) | 0) != 0 ? (__ZNK6vision18BinaryFeatureStore4sizeEv(i14) | 0) != 0 : 0) {
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm(i10, __ZNK6vision18BinaryFeatureStore4sizeEv(i11) | 0);
  i12 = i10 + 8 | 0;
  i13 = i10 + 12 | 0;
  i9 = 0;
  while (1) {
   if (i9 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv(i11) | 0) >>> 0) break;
   i6 = __ZNK6vision18BinaryFeatureStore7featureEm(i11, i9) | 0;
   i7 = (__ZNK6vision18BinaryFeatureStore5pointEm(i11, i9) | 0) + 16 | 0;
   i3 = 0;
   i4 = -1;
   i1 = 2147483647;
   i2 = -1;
   while (1) {
    if (i3 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv(i14) | 0) >>> 0) break;
    i18 = HEAP8[i7 >> 0] | 0;
    i5 = (__ZNK6vision18BinaryFeatureStore5pointEm(i14, i3) | 0) + 16 | 0;
    if (i18 << 24 >> 24 == (HEAP8[i5 >> 0] | 0)) {
     i18 = __ZN6vision15HammingDistanceILi96EEEjPKhS2_(i6, __ZNK6vision18BinaryFeatureStore7featureEm(i14, i3) | 0) | 0;
     i19 = i18 >>> 0 < i4 >>> 0;
     i5 = i19 ? i18 : i4;
     i1 = i19 ? i3 : i1;
     i2 = i19 ? i4 : i18 >>> 0 < i2 >>> 0 ? i18 : i2;
    } else i5 = i4;
    i3 = i3 + 1 | 0;
    i4 = i5;
   }
   do if ((i4 | 0) != -1) {
    if ((i2 | 0) == -1) {
     __ZN6vision7match_tC2Eii(i15, i9, i1);
     i1 = HEAP32[i16 >> 2] | 0;
     if (i1 >>> 0 < (HEAP32[i12 >> 2] | 0) >>> 0) {
      i7 = i15;
      i18 = HEAP32[i7 + 4 >> 2] | 0;
      i19 = i1;
      HEAP32[i19 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i19 + 4 >> 2] = i18;
      HEAP32[i16 >> 2] = (HEAP32[i16 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i10, i15);
     break;
    }
    if (+(i4 >>> 0) / +(i2 >>> 0) < +HEAPF32[i13 >> 2]) {
     __ZN6vision7match_tC2Eii(i15, i9, i1);
     i1 = HEAP32[i16 >> 2] | 0;
     if (i1 >>> 0 < (HEAP32[i12 >> 2] | 0) >>> 0) {
      i7 = i15;
      i18 = HEAP32[i7 + 4 >> 2] | 0;
      i19 = i1;
      HEAP32[i19 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i19 + 4 >> 2] = i18;
      HEAP32[i16 >> 2] = (HEAP32[i16 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i10, i15);
    }
   } while (0);
   i9 = i9 + 1 | 0;
  }
  i19 = (HEAP32[i16 >> 2] | 0) - (HEAP32[i10 >> 2] | 0) >> 3;
  if (i19 >>> 0 > (__ZNK6vision18BinaryFeatureStore4sizeEv(i11) | 0) >>> 0) {
   i19 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 29733) | 0, 29488) | 0, 33655) | 0, 112) | 0, 33662) | 0, 29793) | 0;
   __ZNKSt3__28ios_base6getlocEv(i15, i19 + (HEAP32[(HEAP32[i19 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i18 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58792) | 0;
   i18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 28 >> 2] & 63](i18, 10) | 0;
   __ZNSt3__26localeD2Ev(i15);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i19, i18) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i19) | 0;
   _abort();
  } else {
   i8 = (HEAP32[i16 >> 2] | 0) - (HEAP32[i10 >> 2] | 0) >> 3;
   break;
  }
 } else i8 = 0; while (0);
 STACKTOP = i17;
 return i8 | 0;
}
function _try_realloc_chunk(i12, i9) {
 i12 = i12 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0;
 i10 = i12 + 4 | 0;
 i11 = HEAP32[i10 >> 2] | 0;
 i1 = i11 & -8;
 i6 = i12 + i1 | 0;
 if (!(i11 & 3)) {
  if (i9 >>> 0 < 256) {
   i12 = 0;
   return i12 | 0;
  }
  if (i1 >>> 0 >= (i9 + 4 | 0) >>> 0 ? (i1 - i9 | 0) >>> 0 <= HEAP32[14427] << 1 >>> 0 : 0) return i12 | 0;
  i12 = 0;
  return i12 | 0;
 }
 if (i1 >>> 0 >= i9 >>> 0) {
  i1 = i1 - i9 | 0;
  if (i1 >>> 0 <= 15) return i12 | 0;
  i8 = i12 + i9 | 0;
  HEAP32[i10 >> 2] = i11 & 1 | i9 | 2;
  HEAP32[i8 + 4 >> 2] = i1 | 3;
  i11 = i6 + 4 | 0;
  HEAP32[i11 >> 2] = HEAP32[i11 >> 2] | 1;
  _dispose_chunk(i8, i1);
  return i12 | 0;
 }
 if ((HEAP32[14313] | 0) == (i6 | 0)) {
  i8 = (HEAP32[14310] | 0) + i1 | 0;
  i1 = i8 - i9 | 0;
  i2 = i12 + i9 | 0;
  if (i8 >>> 0 <= i9 >>> 0) {
   i12 = 0;
   return i12 | 0;
  }
  HEAP32[i10 >> 2] = i11 & 1 | i9 | 2;
  HEAP32[i2 + 4 >> 2] = i1 | 1;
  HEAP32[14313] = i2;
  HEAP32[14310] = i1;
  return i12 | 0;
 }
 if ((HEAP32[14312] | 0) == (i6 | 0)) {
  i2 = (HEAP32[14309] | 0) + i1 | 0;
  if (i2 >>> 0 < i9 >>> 0) {
   i12 = 0;
   return i12 | 0;
  }
  i1 = i2 - i9 | 0;
  if (i1 >>> 0 > 15) {
   i8 = i12 + i9 | 0;
   i2 = i12 + i2 | 0;
   HEAP32[i10 >> 2] = i11 & 1 | i9 | 2;
   HEAP32[i8 + 4 >> 2] = i1 | 1;
   HEAP32[i2 >> 2] = i1;
   i2 = i2 + 4 | 0;
   HEAP32[i2 >> 2] = HEAP32[i2 >> 2] & -2;
   i2 = i8;
  } else {
   HEAP32[i10 >> 2] = i11 & 1 | i2 | 2;
   i2 = i12 + i2 + 4 | 0;
   HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 1;
   i2 = 0;
   i1 = 0;
  }
  HEAP32[14309] = i1;
  HEAP32[14312] = i2;
  return i12 | 0;
 }
 i2 = HEAP32[i6 + 4 >> 2] | 0;
 if (i2 & 2 | 0) {
  i12 = 0;
  return i12 | 0;
 }
 i7 = (i2 & -8) + i1 | 0;
 if (i7 >>> 0 < i9 >>> 0) {
  i12 = 0;
  return i12 | 0;
 }
 i8 = i7 - i9 | 0;
 i3 = i2 >>> 3;
 do if (i2 >>> 0 < 256) {
  i2 = HEAP32[i6 + 8 >> 2] | 0;
  i1 = HEAP32[i6 + 12 >> 2] | 0;
  if ((i1 | 0) == (i2 | 0)) {
   HEAP32[14307] = HEAP32[14307] & ~(1 << i3);
   break;
  } else {
   HEAP32[i2 + 12 >> 2] = i1;
   HEAP32[i1 + 8 >> 2] = i2;
   break;
  }
 } else {
  i5 = HEAP32[i6 + 24 >> 2] | 0;
  i1 = HEAP32[i6 + 12 >> 2] | 0;
  do if ((i1 | 0) == (i6 | 0)) {
   i2 = i6 + 16 | 0;
   i3 = i2 + 4 | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if (!i1) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i3 = 0;
     break;
    }
   } else i2 = i3;
   while (1) {
    i4 = i1 + 20 | 0;
    i3 = HEAP32[i4 >> 2] | 0;
    if (!i3) {
     i4 = i1 + 16 | 0;
     i3 = HEAP32[i4 >> 2] | 0;
     if (!i3) break; else {
      i1 = i3;
      i2 = i4;
     }
    } else {
     i1 = i3;
     i2 = i4;
    }
   }
   HEAP32[i2 >> 2] = 0;
   i3 = i1;
  } else {
   i3 = HEAP32[i6 + 8 >> 2] | 0;
   HEAP32[i3 + 12 >> 2] = i1;
   HEAP32[i1 + 8 >> 2] = i3;
   i3 = i1;
  } while (0);
  if (i5 | 0) {
   i1 = HEAP32[i6 + 28 >> 2] | 0;
   i2 = 57532 + (i1 << 2) | 0;
   if ((HEAP32[i2 >> 2] | 0) == (i6 | 0)) {
    HEAP32[i2 >> 2] = i3;
    if (!i3) {
     HEAP32[14308] = HEAP32[14308] & ~(1 << i1);
     break;
    }
   } else {
    i4 = i5 + 16 | 0;
    HEAP32[((HEAP32[i4 >> 2] | 0) == (i6 | 0) ? i4 : i5 + 20 | 0) >> 2] = i3;
    if (!i3) break;
   }
   HEAP32[i3 + 24 >> 2] = i5;
   i1 = i6 + 16 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 | 0) {
    HEAP32[i3 + 16 >> 2] = i2;
    HEAP32[i2 + 24 >> 2] = i3;
   }
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   if (i1 | 0) {
    HEAP32[i3 + 20 >> 2] = i1;
    HEAP32[i1 + 24 >> 2] = i3;
   }
  }
 } while (0);
 if (i8 >>> 0 < 16) {
  HEAP32[i10 >> 2] = i11 & 1 | i7 | 2;
  i11 = i12 + i7 + 4 | 0;
  HEAP32[i11 >> 2] = HEAP32[i11 >> 2] | 1;
  return i12 | 0;
 } else {
  i6 = i12 + i9 | 0;
  HEAP32[i10 >> 2] = i11 & 1 | i9 | 2;
  HEAP32[i6 + 4 >> 2] = i8 | 3;
  i11 = i12 + i7 + 4 | 0;
  HEAP32[i11 >> 2] = HEAP32[i11 >> 2] | 1;
  _dispose_chunk(i6, i8);
  return i12 | 0;
 }
 return 0;
}

function _getNFTMarkerInfo(i1, i14) {
 i1 = i1 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 i12 = i19 + 144 | 0;
 i4 = i19 + 136 | 0;
 i13 = i19 + 128 | 0;
 i7 = i19 + 120 | 0;
 i10 = i19 + 112 | 0;
 i9 = i19 + 104 | 0;
 i6 = i19 + 96 | 0;
 i2 = i19 + 156 | 0;
 i8 = i19 + 160 | 0;
 i15 = i19 + 152 | 0;
 i16 = i19 + 48 | 0;
 i17 = i19;
 HEAP32[i2 >> 2] = i1;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0)) i1 = HEAP32[3413] | 0; else {
  i5 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0;
  i11 = i5 + 248 | 0;
  if ((HEAP32[i11 >> 2] | 0) <= (i14 | 0)) {
   i1 = HEAP32[3415] | 0;
   break;
  }
  i2 = i5 + 240 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  L7 : do if (i3) {
   i4 = i5 + 244 | 0;
   i1 = HEAP32[i4 >> 2] | 0;
   switch (i1 | 0) {
   case -2:
    {
     _trackingInitStart(i3, HEAP32[i5 + 204 >> 2] | 0) | 0;
     HEAP32[i4 >> 2] = -1;
     i1 = HEAP32[i2 >> 2] | 0;
     i18 = 8;
     break;
    }
   case -1:
    {
     i1 = i3;
     i18 = 8;
     break;
    }
   default:
    {}
   }
   if ((i18 | 0) == 8) {
    i1 = _trackingInitGetResult(i1, i17, i8) | 0;
    do if ((i1 | 0) != 1) {
     if ((i1 | 0) < 0) {
      _arLog(0, 1, 41463, i7);
      HEAP32[i4 >> 2] = -2;
      i18 = 30;
      break L7;
     }
    } else {
     HEAP32[i6 >> 2] = 1;
     _arLog(0, 1, 41397, i6);
     i1 = HEAP32[i8 >> 2] | 0;
     if ((i1 | 0) > -1 ? (i1 | 0) < (HEAP32[i11 >> 2] | 0) : 0) {
      HEAP32[i9 >> 2] = i1;
      _arLog(0, 1, 41421, i9);
      i10 = HEAP32[i8 >> 2] | 0;
      HEAP32[i4 >> 2] = i10;
      _ar2SetInitTrans(HEAP32[i5 + 272 + (i10 << 2) >> 2] | 0, i17) | 0;
      break;
     }
     HEAP32[i10 >> 2] = i1;
     _arLog(0, 3, 41440, i10);
     HEAP32[i4 >> 2] = -2;
     i18 = 30;
     break L7;
    } while (0);
    i1 = HEAP32[i4 >> 2] | 0;
   }
   if ((i1 | 0) > -1) {
    do if ((i1 | 0) < (HEAP32[i11 >> 2] | 0)) if ((_ar2Tracking(HEAP32[i5 + 236 >> 2] | 0, HEAP32[i5 + 272 + (i1 << 2) >> 2] | 0, HEAP32[i5 + 196 >> 2] | 0, i17, i15) | 0) >= 0) {
     i1 = (HEAP32[i11 >> 2] | 0) + -1 | 0;
     HEAP32[i12 >> 2] = HEAP32[i4 >> 2];
     HEAP32[i12 + 4 >> 2] = i1;
     _arLog(0, 1, 41519, i12);
     i1 = HEAP32[i4 >> 2] | 0;
     if ((i1 | 0) > -1) break; else {
      i18 = 30;
      break L7;
     }
    } else {
     _arLog(0, 1, 41482, i13);
     HEAP32[i4 >> 2] = -2;
     i18 = 30;
     break L7;
    } while (0);
    if ((i1 | 0) < (HEAP32[i11 >> 2] | 0)) {
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      i1 = 0;
      while (1) {
       if ((i1 | 0) == 4) break;
       HEAP32[i16 + (i2 << 4) + (i1 << 2) >> 2] = HEAP32[i17 + (i2 << 4) + (i1 << 2) >> 2];
       i1 = i1 + 1 | 0;
      }
      i2 = i2 + 1 | 0;
     }
     _emscripten_asm_const_iiddddddddddddd(3, i14 | 0, +(+HEAPF32[i15 >> 2]), +(+HEAPF32[i16 >> 2]), +(+HEAPF32[i16 + 4 >> 2]), +(+HEAPF32[i16 + 8 >> 2]), +(+HEAPF32[i16 + 12 >> 2]), +(+HEAPF32[i16 + 16 >> 2]), +(+HEAPF32[i16 + 20 >> 2]), +(+HEAPF32[i16 + 24 >> 2]), +(+HEAPF32[i16 + 28 >> 2]), +(+HEAPF32[i16 + 32 >> 2]), +(+HEAPF32[i16 + 36 >> 2]), +(+HEAPF32[i16 + 40 >> 2]), +(+HEAPF32[i16 + 44 >> 2])) | 0;
    } else i18 = 30;
   } else i18 = 30;
  } else {
   _arLog(0, 3, 41498, i4);
   HEAP32[i5 + 244 >> 2] = -2;
   i18 = 30;
  } while (0);
  if ((i18 | 0) == 30) _emscripten_asm_const_ii(4, i14 | 0) | 0;
  i1 = 0;
 } while (0);
 STACKTOP = i19;
 return i1 | 0;
}
function _examine_app0(i14, i11, i2, i1) {
 i14 = i14 | 0;
 i11 = i11 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i15 = 0;
 i13 = i1 + i2 | 0;
 if (i2 >>> 0 > 13) if ((HEAP8[i11 >> 0] | 0) == 74) if ((((HEAP8[i11 + 1 >> 0] | 0) == 70 ? (HEAP8[i11 + 2 >> 0] | 0) == 73 : 0) ? (HEAP8[i11 + 3 >> 0] | 0) == 70 : 0) ? (HEAP8[i11 + 4 >> 0] | 0) == 0 : 0) {
  HEAP32[i14 + 280 >> 2] = 1;
  i3 = HEAP8[i11 + 5 >> 0] | 0;
  i4 = i14 + 284 | 0;
  HEAP8[i4 >> 0] = i3;
  i5 = HEAP8[i11 + 6 >> 0] | 0;
  i6 = i14 + 285 | 0;
  HEAP8[i6 >> 0] = i5;
  i1 = HEAP8[i11 + 7 >> 0] | 0;
  i10 = i14 + 286 | 0;
  HEAP8[i10 >> 0] = i1;
  i7 = (HEAPU8[i11 + 8 >> 0] << 8 | HEAPU8[i11 + 9 >> 0]) & 65535;
  i8 = i14 + 288 | 0;
  HEAP16[i8 >> 1] = i7;
  i2 = (HEAPU8[i11 + 10 >> 0] << 8 | HEAPU8[i11 + 11 >> 0]) & 65535;
  i9 = i14 + 290 | 0;
  HEAP16[i9 >> 1] = i2;
  if (i3 << 24 >> 24 == 1) {
   i12 = i14;
   i4 = 1;
   i3 = i7;
  } else {
   i12 = HEAP32[i14 >> 2] | 0;
   HEAP32[i12 + 20 >> 2] = 119;
   HEAP32[i12 + 24 >> 2] = i3 & 255;
   HEAP32[(HEAP32[i14 >> 2] | 0) + 28 >> 2] = HEAPU8[i6 >> 0];
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i14 >> 2] | 0) + 4 >> 2] & 63](i14, -1);
   i12 = i14;
   i4 = HEAP8[i4 >> 0] | 0;
   i5 = HEAP8[i6 >> 0] | 0;
   i3 = HEAP16[i8 >> 1] | 0;
   i2 = HEAP16[i9 >> 1] | 0;
   i1 = HEAP8[i10 >> 0] | 0;
  }
  i10 = HEAP32[i14 >> 2] | 0;
  HEAP32[i10 + 24 >> 2] = i4 & 255;
  HEAP32[i10 + 28 >> 2] = i5 & 255;
  HEAP32[i10 + 32 >> 2] = i3 & 65535;
  HEAP32[i10 + 36 >> 2] = i2 & 65535;
  HEAP32[i10 + 40 >> 2] = i1 & 255;
  HEAP32[i10 + 20 >> 2] = 87;
  FUNCTION_TABLE_vii[HEAP32[i10 + 4 >> 2] & 63](i12, 1);
  i1 = i11 + 12 | 0;
  i3 = HEAP8[i1 >> 0] | 0;
  i4 = i11 + 13 | 0;
  i2 = HEAP8[i4 >> 0] | 0;
  if ((i2 | i3) << 24 >> 24) {
   i3 = HEAP32[i14 >> 2] | 0;
   HEAP32[i3 + 20 >> 2] = 90;
   HEAP32[i3 + 24 >> 2] = HEAPU8[i1 >> 0];
   HEAP32[(HEAP32[i14 >> 2] | 0) + 28 >> 2] = HEAPU8[i4 >> 0];
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i14 >> 2] | 0) + 4 >> 2] & 63](i12, 1);
   i3 = HEAP8[i1 >> 0] | 0;
   i2 = HEAP8[i4 >> 0] | 0;
  }
  i1 = i13 + -14 | 0;
  if ((i1 | 0) != (Math_imul((i3 & 255) * 3 | 0, i2 & 255) | 0)) {
   i13 = HEAP32[i14 >> 2] | 0;
   HEAP32[i13 + 20 >> 2] = 88;
   HEAP32[i13 + 24 >> 2] = i1;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i14 >> 2] | 0) + 4 >> 2] & 63](i12, 1);
  }
 } else i15 = 16; else i15 = 25; else if (i2 >>> 0 > 5 ? (HEAP8[i11 >> 0] | 0) == 74 : 0) i15 = 16; else i15 = 25;
 L18 : do if ((i15 | 0) == 16) if ((((HEAP8[i11 + 1 >> 0] | 0) == 70 ? (HEAP8[i11 + 2 >> 0] | 0) == 88 : 0) ? (HEAP8[i11 + 3 >> 0] | 0) == 88 : 0) ? (HEAP8[i11 + 4 >> 0] | 0) == 0 : 0) {
  i1 = i11 + 5 | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 16:
   {
    i12 = HEAP32[i14 >> 2] | 0;
    HEAP32[i12 + 20 >> 2] = 108;
    HEAP32[i12 + 24 >> 2] = i13;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i14 >> 2] | 0) + 4 >> 2] & 63](i14, 1);
    break L18;
   }
  case 17:
   {
    i12 = HEAP32[i14 >> 2] | 0;
    HEAP32[i12 + 20 >> 2] = 109;
    HEAP32[i12 + 24 >> 2] = i13;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i14 >> 2] | 0) + 4 >> 2] & 63](i14, 1);
    break L18;
   }
  case 19:
   {
    i12 = HEAP32[i14 >> 2] | 0;
    HEAP32[i12 + 20 >> 2] = 110;
    HEAP32[i12 + 24 >> 2] = i13;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i14 >> 2] | 0) + 4 >> 2] & 63](i14, 1);
    break L18;
   }
  default:
   {
    i12 = HEAP32[i14 >> 2] | 0;
    HEAP32[i12 + 20 >> 2] = 89;
    HEAP32[i12 + 24 >> 2] = HEAPU8[i1 >> 0];
    HEAP32[(HEAP32[i14 >> 2] | 0) + 28 >> 2] = i13;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i14 >> 2] | 0) + 4 >> 2] & 63](i14, 1);
    break L18;
   }
  }
 } else i15 = 25; while (0);
 if ((i15 | 0) == 25) {
  i15 = HEAP32[i14 >> 2] | 0;
  HEAP32[i15 + 20 >> 2] = 77;
  HEAP32[i15 + 24 >> 2] = i13;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i14 >> 2] | 0) + 4 >> 2] & 63](i14, 1);
 }
 return;
}

function __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh(i14, i15, i4, i17) {
 i14 = i14 | 0;
 i15 = i15 | 0;
 i4 = i4 | 0;
 i17 = i17 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i9 = i19 + 8 | 0;
 i8 = i19 + 56 | 0;
 i7 = i19 + 52 | 0;
 i10 = i19 + 44 | 0;
 i11 = i19 + 36 | 0;
 i12 = i19 + 28 | 0;
 i13 = i19;
 i2 = i19 + 48 | 0;
 i3 = i19 + 40 | 0;
 i1 = i19 + 32 | 0;
 i16 = i19 + 16 | 0;
 if (__ZNK6vision4NodeILi96EE4leafEv(i4) | 0) {
  HEAP32[i2 >> 2] = HEAP32[i14 + 76 >> 2];
  i18 = __ZNK6vision4NodeILi96EE12reverseIndexEv(i4) | 0;
  HEAP32[i3 >> 2] = HEAP32[i18 >> 2];
  i18 = (__ZNK6vision4NodeILi96EE12reverseIndexEv(i4) | 0) + 4 | 0;
  HEAP32[i1 >> 2] = HEAP32[i18 >> 2];
  HEAP32[i7 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i9 >> 2] = HEAP32[i1 >> 2];
  __ZNSt3__26vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPKiEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPiEEE4typeES8_SA_SA_(i14 + 72 | 0, i7, i8, i9) | 0;
 } else {
  HEAP32[i16 >> 2] = 0;
  i3 = i16 + 4 | 0;
  HEAP32[i3 >> 2] = 0;
  HEAP32[i16 + 8 >> 2] = 0;
  __ZNK6vision4NodeILi96EE7nearestERNSt3__26vectorIPKS1_NS2_9allocatorIS5_EEEERNS2_14priority_queueINS_17PriorityQueueItemILi96EEENS3_ISC_NS6_ISC_EEEENS2_4lessISC_EEEEPKh(i4, i16, i15, i17);
  i1 = 0;
  while (1) {
   i2 = HEAP32[i16 >> 2] | 0;
   if (i1 >>> 0 >= (HEAP32[i3 >> 2] | 0) - i2 >> 2 >>> 0) break;
   __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh(i14, i15, HEAP32[i2 + (i1 << 2) >> 2] | 0, i17);
   i1 = i1 + 1 | 0;
  }
  i5 = i14 + 100 | 0;
  if ((HEAP32[i5 >> 2] | 0) < (HEAP32[i14 + 104 >> 2] | 0) ? (i6 = HEAP32[i15 >> 2] | 0, i18 = i15 + 4 | 0, (i6 | 0) != (HEAP32[i18 >> 2] | 0)) : 0) {
   i4 = __ZNK6vision17PriorityQueueItemILi96EE4nodeEv(i6) | 0;
   i1 = HEAP32[i15 >> 2] | 0;
   i2 = HEAP32[i18 >> 2] | 0;
   i3 = i2 - i1 | 0;
   if ((i3 | 0) > 8) {
    i6 = i1;
    i2 = i2 + -8 | 0;
    i20 = i6;
    i21 = HEAP32[i20 >> 2] | 0;
    i20 = HEAP32[i20 + 4 >> 2] | 0;
    i23 = i9;
    HEAP32[i23 >> 2] = i21;
    HEAP32[i23 + 4 >> 2] = i20;
    i23 = i2;
    i22 = HEAP32[i23 + 4 >> 2] | 0;
    HEAP32[i6 >> 2] = HEAP32[i23 >> 2];
    HEAP32[i6 + 4 >> 2] = i22;
    i6 = i2;
    HEAP32[i6 >> 2] = i21;
    HEAP32[i6 + 4 >> 2] = i20;
    __ZN6vision17PriorityQueueItemILi96EED2Ev(i9);
    HEAP32[i10 >> 2] = i1;
    HEAP32[i11 >> 2] = i2;
    HEAP32[i12 >> 2] = i1;
    HEAP32[i7 >> 2] = HEAP32[i10 >> 2];
    HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
    HEAP32[i9 >> 2] = HEAP32[i12 >> 2];
    __ZNSt3__211__sift_downIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_(i7, i8, i13, (i3 >>> 3) + -1 | 0, i9);
    i2 = HEAP32[i18 >> 2] | 0;
   }
   i1 = 0;
   while (1) {
    if ((i1 | 0) == -1) break;
    i23 = i1 + -1 | 0;
    __ZN6vision17PriorityQueueItemILi96EED2Ev(i2 + (i23 << 3) | 0);
    i1 = i23;
   }
   HEAP32[i18 >> 2] = i2 + -8;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
   __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh(i14, i15, i4, i17);
  }
  __ZNSt3__213__vector_baseIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEED2Ev(i16);
 }
 STACKTOP = i19;
 return;
}

function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE(i1, i19, i3, i23, i24, i25) {
 i1 = i1 | 0;
 i19 = i19 | 0;
 i3 = i3 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i25 = i25 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i26 = 0, i27 = 0, i28 = 0;
 i27 = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(480);
 i10 = i27 + 464 | 0;
 i26 = i27 + 460 | 0;
 i15 = i27 + 468 | 0;
 i16 = i27 + 456 | 0;
 i17 = i27 + 452 | 0;
 i20 = i27 + 440 | 0;
 i21 = i27 + 428 | 0;
 i22 = i27 + 416 | 0;
 i6 = i27 + 412 | 0;
 i8 = i27;
 i11 = i27 + 408 | 0;
 i12 = i27 + 404 | 0;
 i13 = i27 + 400 | 0;
 __ZNKSt3__28ios_base6getlocEv(i26, i23);
 i14 = __ZNKSt3__26locale9use_facetERNS0_2idE(i26, 58824) | 0;
 i2 = i25 + 8 + 3 | 0;
 i9 = HEAP8[i2 >> 0] | 0;
 i1 = i9 << 24 >> 24 < 0;
 i4 = i25 + 4 | 0;
 if (!((i1 ? HEAP32[i4 >> 2] | 0 : i9 & 255) | 0)) i9 = 0; else {
  i9 = HEAP32[(i1 ? HEAP32[i25 >> 2] | 0 : i25) >> 2] | 0;
  i9 = (i9 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i14 >> 2] | 0) + 44 >> 2] & 63](i14, 45) | 0);
 };
 HEAP32[i20 >> 2] = 0;
 HEAP32[i20 + 4 >> 2] = 0;
 HEAP32[i20 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i21 >> 2] = 0;
 HEAP32[i21 + 4 >> 2] = 0;
 HEAP32[i21 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i21 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i22 >> 2] = 0;
 HEAP32[i22 + 4 >> 2] = 0;
 HEAP32[i22 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i22 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(i3, i9, i26, i15, i16, i17, i20, i21, i22, i6);
 i5 = HEAP8[i2 >> 0] | 0;
 i7 = i5 << 24 >> 24 < 0;
 i5 = i7 ? HEAP32[i4 >> 2] | 0 : i5 & 255;
 i4 = HEAP32[i6 >> 2] | 0;
 if ((i5 | 0) > (i4 | 0)) {
  i3 = HEAP8[i22 + 8 + 3 >> 0] | 0;
  i1 = HEAP8[i21 + 8 + 3 >> 0] | 0;
  i1 = i1 << 24 >> 24 < 0 ? HEAP32[i21 + 4 >> 2] | 0 : i1 & 255;
  i2 = i4 + 1 + (i5 - i4 << 1) | 0;
  i3 = i3 << 24 >> 24 < 0 ? HEAP32[i22 + 4 >> 2] | 0 : i3 & 255;
 } else {
  i3 = HEAP8[i22 + 8 + 3 >> 0] | 0;
  i1 = HEAP8[i21 + 8 + 3 >> 0] | 0;
  i1 = i1 << 24 >> 24 < 0 ? HEAP32[i21 + 4 >> 2] | 0 : i1 & 255;
  i2 = i4 + 2 | 0;
  i3 = i3 << 24 >> 24 < 0 ? HEAP32[i22 + 4 >> 2] | 0 : i3 & 255;
 }
 i1 = i2 + i3 + i1 | 0;
 if (i1 >>> 0 > 100) {
  i1 = _malloc(i1 << 2) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i18 = i1;
   i28 = i1;
  }
 } else {
  i18 = i8;
  i28 = 0;
 }
 i25 = i7 ? HEAP32[i25 >> 2] | 0 : i25;
 __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(i18, i11, i12, HEAP32[i23 + 4 >> 2] | 0, i25, i25 + (i5 << 2) | 0, i14, i9, i15, HEAP32[i16 >> 2] | 0, HEAP32[i17 >> 2] | 0, i20, i21, i22, i4);
 HEAP32[i13 >> 2] = HEAP32[i19 >> 2];
 i25 = HEAP32[i11 >> 2] | 0;
 i1 = HEAP32[i12 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i13 >> 2];
 i1 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i18, i25, i1, i23, i24) | 0;
 if (i28 | 0) _free(i28);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i22);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i21);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i20);
 __ZNSt3__26localeD2Ev(i26);
 STACKTOP = i27;
 return i1 | 0;
}
function _arPattLoadFromBuffer(i22, i3) {
 i22 = i22 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i23 = 0, i24 = 0, d25 = 0.0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i23 = i24 + 24 | 0;
 i4 = i24 + 16 | 0;
 i1 = i24 + 8 | 0;
 do if (i22) {
  if (!i3) {
   _arLog(0, 3, 18037, i1);
   i1 = -1;
   break;
  }
  i21 = i22 + 8 | 0;
  i2 = HEAP32[i22 + 4 >> 2] | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i2 | 0)) break;
   if (!(HEAP32[(HEAP32[i21 >> 2] | 0) + (i1 << 2) >> 2] | 0)) break;
   i1 = i1 + 1 | 0;
  }
  if ((i1 | 0) != (i2 | 0)) {
   i20 = ___strdup(i3) | 0;
   if (!i20) {
    _arLog(0, 3, 18082, i4);
    i1 = -1;
    break;
   }
   i13 = i22 + 28 | 0;
   i14 = i22 + 12 | 0;
   i15 = i1 << 2;
   i16 = i22 + 20 | 0;
   i17 = i22 + 16 | 0;
   i18 = i22 + 24 | 0;
   i2 = _strtok(i20, 18105) | 0;
   i12 = 0;
   L16 : while (1) {
    if (i12 >>> 0 >= 4) {
     i2 = 36;
     break;
    }
    i19 = i12 + i15 | 0;
    i3 = 0;
    i11 = 0;
    while (1) {
     if (i11 >>> 0 >= 3) break;
     i9 = (i11 | 0) == 0;
     i10 = (i11 | 0) == 2;
     i8 = 0;
     i4 = HEAP32[i13 >> 2] | 0;
     while (1) {
      if ((i8 | 0) >= (i4 | 0)) break;
      i7 = 0;
      while (1) {
       if ((i7 | 0) >= (i4 | 0)) break;
       if (!i2) {
        i2 = 21;
        break L16;
       }
       i4 = _atoi(i2) | 0;
       i2 = _strtok(0, 18105) | 0;
       i4 = 255 - i4 | 0;
       i5 = (HEAP32[(HEAP32[i14 >> 2] | 0) + (i19 << 2) >> 2] | 0) + ((((Math_imul(HEAP32[i13 >> 2] | 0, i8) | 0) + i7 | 0) * 3 | 0) + i11 << 2) | 0;
       HEAP32[i5 >> 2] = i4;
       i5 = HEAP32[(HEAP32[i16 >> 2] | 0) + (i19 << 2) >> 2] | 0;
       i6 = i5 + ((Math_imul(HEAP32[i13 >> 2] | 0, i8) | 0) + i7 << 2) | 0;
       if (!i9) {
        HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i4;
        if (i10) {
         i6 = i5 + ((Math_imul(HEAP32[i13 >> 2] | 0, i8) | 0) + i7 << 2) | 0;
         HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) / 3 | 0;
        }
       } else HEAP32[i6 >> 2] = i4;
       i7 = i7 + 1 | 0;
       i3 = i4 + i3 | 0;
       i4 = HEAP32[i13 >> 2] | 0;
      }
      i8 = i8 + 1 | 0;
     }
     i11 = i11 + 1 | 0;
    }
    i6 = HEAP32[i13 >> 2] | 0;
    i7 = (i3 | 0) / (Math_imul(i6 * 3 | 0, i6) | 0) | 0;
    i3 = 0;
    i4 = 0;
    while (1) {
     if (i4 >>> 0 >= (Math_imul(i6 * 3 | 0, i6) | 0) >>> 0) break;
     i11 = (HEAP32[(HEAP32[i14 >> 2] | 0) + (i19 << 2) >> 2] | 0) + (i4 << 2) | 0;
     i6 = (HEAP32[i11 >> 2] | 0) - i7 | 0;
     HEAP32[i11 >> 2] = i6;
     i6 = (Math_imul(i6, i6) | 0) + i3 | 0;
     i3 = i6;
     i4 = i4 + 1 | 0;
     i6 = HEAP32[i13 >> 2] | 0;
    }
    d25 = +Math_sqrt(+(+(i3 | 0)));
    HEAPF64[(HEAP32[i17 >> 2] | 0) + (i19 << 3) >> 3] = d25 == 0.0 ? 1.0e-07 : d25;
    i4 = 0;
    i5 = 0;
    i3 = i6;
    while (1) {
     if (i5 >>> 0 >= (Math_imul(i3, i3) | 0) >>> 0) break;
     i11 = (HEAP32[(HEAP32[i16 >> 2] | 0) + (i19 << 2) >> 2] | 0) + (i5 << 2) | 0;
     i3 = (HEAP32[i11 >> 2] | 0) - i7 | 0;
     HEAP32[i11 >> 2] = i3;
     i3 = (Math_imul(i3, i3) | 0) + i4 | 0;
     i4 = i3;
     i5 = i5 + 1 | 0;
     i3 = HEAP32[i13 >> 2] | 0;
    }
    d25 = +Math_sqrt(+(+(i4 | 0)));
    HEAPF64[(HEAP32[i18 >> 2] | 0) + (i19 << 3) >> 3] = d25 == 0.0 ? 1.0e-07 : d25;
    i12 = i12 + 1 | 0;
   }
   if ((i2 | 0) == 21) {
    _arLog(0, 3, 18110, i23);
    _free(i20);
    i1 = -1;
    break;
   } else if ((i2 | 0) == 36) {
    _free(i20);
    HEAP32[(HEAP32[i21 >> 2] | 0) + (i1 << 2) >> 2] = 1;
    HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + 1;
    break;
   }
  } else i1 = -1;
 } else {
  _arLog(0, 3, 18012, i24);
  i1 = -1;
 } while (0);
 STACKTOP = i24;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_115parse_call_exprINS0_2DbEEEPKcS4_S4_RT_(i13, i10, i14) {
 i13 = i13 | 0;
 i10 = i10 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i12 = i15 + 12 | 0;
 i4 = i15;
 L1 : do if (((((i10 - i13 | 0) > 3 ? (HEAP8[i13 >> 0] | 0) == 99 : 0) ? (HEAP8[i13 + 1 >> 0] | 0) == 108 : 0) ? (i9 = i13 + 2 | 0, i5 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i9, i10, i14) | 0, !((i5 | 0) == (i9 | 0) | (i5 | 0) == (i10 | 0))) : 0) ? (i11 = i14 + 4 | 0, i1 = HEAP32[i11 >> 2] | 0, (HEAP32[i14 >> 2] | 0) != (i1 | 0)) : 0) {
  i7 = i1 + -12 | 0;
  i9 = HEAP8[i7 + 11 >> 0] | 0;
  i8 = i9 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i1 + -24 | 0, i8 ? HEAP32[i7 >> 2] | 0 : i7, i8 ? HEAP32[i1 + -8 >> 2] | 0 : i9 & 255) | 0;
  HEAP32[i4 >> 2] = 0;
  HEAP32[i4 + 4 >> 2] = 0;
  HEAP32[i4 + 8 >> 2] = 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i4 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i1 = HEAP32[i11 >> 2] | 0;
  i2 = i1 + -12 | 0;
  i3 = i2 + 11 | 0;
  if ((HEAP8[i3 >> 0] | 0) < 0) {
   i9 = HEAP32[i2 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i9, i12);
   HEAP32[i1 + -8 >> 2] = 0;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i12);
   HEAP8[i3 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i4 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i4);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i11 >> 2] | 0) + -24 | 0, 50526) | 0;
  i8 = i12 + 11 | 0;
  i9 = i12 + 4 | 0;
  i1 = 0;
  i2 = i5;
  while (1) {
   if ((HEAP8[i2 >> 0] | 0) == 69) break;
   i7 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i10, i14) | 0;
   if ((i7 | 0) == (i2 | 0) | (i7 | 0) == (i10 | 0)) {
    i1 = i13;
    break L1;
   }
   i3 = HEAP32[i11 >> 2] | 0;
   if ((HEAP32[i14 >> 2] | 0) == (i3 | 0)) {
    i1 = i13;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i12, i3 + -24 | 0);
   i6 = HEAP32[i11 >> 2] | 0;
   i3 = 0;
   while (1) {
    if ((i3 | 0) == -1) break;
    i5 = i3 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6 + (i5 * 24 | 0) | 0);
    i3 = i5;
   }
   i3 = i6 + -24 | 0;
   HEAP32[i11 >> 2] = i3;
   i5 = HEAP8[i8 >> 0] | 0;
   i4 = i5 << 24 >> 24 < 0;
   i5 = i4 ? HEAP32[i9 >> 2] | 0 : i5 & 255;
   if (i5) if ((HEAP32[i14 >> 2] | 0) == (i3 | 0)) {
    i3 = 0;
    i1 = i13;
   } else {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i6 + -48 | 0, i4 ? HEAP32[i12 >> 2] | 0 : i12, i5) | 0;
    i3 = 1;
    i2 = i7;
   } else {
    i3 = 1;
    i2 = i7;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
   if (!i3) break L1;
  }
  i1 = HEAP32[i11 >> 2] | 0;
  if ((HEAP32[i14 >> 2] | 0) != (i1 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i1 + -24 | 0, 50524) | 0;
   i1 = i2 + 1 | 0;
  } else i1 = i13;
 } else i1 = i13; while (0);
 STACKTOP = i15;
 return i1 | 0;
}

function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE(i1, i19, i3, i23, i24, i25) {
 i1 = i1 | 0;
 i19 = i19 | 0;
 i3 = i3 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i25 = i25 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i26 = 0, i27 = 0, i28 = 0;
 i27 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 i10 = i27 + 156 | 0;
 i26 = i27 + 152 | 0;
 i15 = i27 + 164 | 0;
 i16 = i27 + 161 | 0;
 i17 = i27 + 160 | 0;
 i20 = i27 + 140 | 0;
 i21 = i27 + 128 | 0;
 i22 = i27 + 116 | 0;
 i6 = i27 + 112 | 0;
 i8 = i27;
 i11 = i27 + 108 | 0;
 i12 = i27 + 104 | 0;
 i13 = i27 + 100 | 0;
 __ZNKSt3__28ios_base6getlocEv(i26, i23);
 i14 = __ZNKSt3__26locale9use_facetERNS0_2idE(i26, 58792) | 0;
 i2 = i25 + 11 | 0;
 i9 = HEAP8[i2 >> 0] | 0;
 i1 = i9 << 24 >> 24 < 0;
 i4 = i25 + 4 | 0;
 if (!((i1 ? HEAP32[i4 >> 2] | 0 : i9 & 255) | 0)) i9 = 0; else {
  i9 = HEAP8[(i1 ? HEAP32[i25 >> 2] | 0 : i25) >> 0] | 0;
  i9 = i9 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i14 >> 2] | 0) + 28 >> 2] & 63](i14, 45) | 0) << 24 >> 24;
 };
 HEAP32[i20 >> 2] = 0;
 HEAP32[i20 + 4 >> 2] = 0;
 HEAP32[i20 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i21 >> 2] = 0;
 HEAP32[i21 + 4 >> 2] = 0;
 HEAP32[i21 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i21 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i22 >> 2] = 0;
 HEAP32[i22 + 4 >> 2] = 0;
 HEAP32[i22 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i22 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(i3, i9, i26, i15, i16, i17, i20, i21, i22, i6);
 i5 = HEAP8[i2 >> 0] | 0;
 i7 = i5 << 24 >> 24 < 0;
 i5 = i7 ? HEAP32[i4 >> 2] | 0 : i5 & 255;
 i4 = HEAP32[i6 >> 2] | 0;
 if ((i5 | 0) > (i4 | 0)) {
  i3 = HEAP8[i22 + 11 >> 0] | 0;
  i1 = HEAP8[i21 + 11 >> 0] | 0;
  i1 = i1 << 24 >> 24 < 0 ? HEAP32[i21 + 4 >> 2] | 0 : i1 & 255;
  i2 = i4 + 1 + (i5 - i4 << 1) | 0;
  i3 = i3 << 24 >> 24 < 0 ? HEAP32[i22 + 4 >> 2] | 0 : i3 & 255;
 } else {
  i3 = HEAP8[i22 + 11 >> 0] | 0;
  i1 = HEAP8[i21 + 11 >> 0] | 0;
  i1 = i1 << 24 >> 24 < 0 ? HEAP32[i21 + 4 >> 2] | 0 : i1 & 255;
  i2 = i4 + 2 | 0;
  i3 = i3 << 24 >> 24 < 0 ? HEAP32[i22 + 4 >> 2] | 0 : i3 & 255;
 }
 i1 = i2 + i3 + i1 | 0;
 if (i1 >>> 0 > 100) {
  i1 = _malloc(i1) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i18 = i1;
   i28 = i1;
  }
 } else {
  i18 = i8;
  i28 = 0;
 }
 i25 = i7 ? HEAP32[i25 >> 2] | 0 : i25;
 __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(i18, i11, i12, HEAP32[i23 + 4 >> 2] | 0, i25, i25 + i5 | 0, i14, i9, i15, HEAP8[i16 >> 0] | 0, HEAP8[i17 >> 0] | 0, i20, i21, i22, i4);
 HEAP32[i13 >> 2] = HEAP32[i19 >> 2];
 i25 = HEAP32[i11 >> 2] | 0;
 i1 = HEAP32[i12 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i13 >> 2];
 i1 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i18, i25, i1, i23, i24) | 0;
 if (i28 | 0) _free(i28);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i22);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i20);
 __ZNSt3__26localeD2Ev(i26);
 STACKTOP = i27;
 return i1 | 0;
}

function __ZN6vision10DoGPyramid7computeEPKNS_25GaussianScaleSpacePyramidE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i7;
 if ((HEAP32[i5 + 4 >> 2] | 0) == (HEAP32[i5 >> 2] | 0)) {
  i4 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 20842) | 0, 20647) | 0, 33655) | 0, 72) | 0, 33662) | 0, 20884) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 63](i3, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i3) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 if ((__ZNK6vision25GaussianScaleSpacePyramid10numOctavesEv(i6) | 0) <= 0) {
  i4 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 20925) | 0, 20647) | 0, 33655) | 0, 73) | 0, 33662) | 0, 20974) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 63](i3, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i3) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 if (i6 | 0 ? ___dynamic_cast(i6, 10992, 11e3, 0) | 0 : 0) {
  i3 = i5 + 12 | 0;
  i4 = i5 + 16 | 0;
  i2 = 0;
  while (1) {
   if (i2 >>> 0 >= (HEAP32[i3 >> 2] | 0) >>> 0) break;
   i1 = 0;
   while (1) {
    if (i1 >>> 0 >= (HEAP32[i4 >> 2] | 0) >>> 0) break;
    i10 = __ZN6vision10DoGPyramid3getEmm(i5, i2, i1) | 0;
    i9 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i6, i2, i1) | 0;
    i8 = i1 + 1 | 0;
    __ZN6vision10DoGPyramid25difference_image_binomialERNS_5ImageERKS1_S4_(0, i10, i9, __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i6, i2, i8) | 0);
    i1 = i8;
   }
   i2 = i2 + 1 | 0;
  }
  STACKTOP = i7;
  return;
 }
 i10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 21010) | 0, 20647) | 0, 33655) | 0, 74) | 0, 33662) | 0, 21082) | 0;
 __ZNKSt3__28ios_base6getlocEv(i1, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
 i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
 i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
 __ZNSt3__26localeD2Ev(i1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i9) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
 _abort();
}

function _jpeg_idct_4x4(i1, i2, i3, i9, i10) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 i8 = i12;
 i7 = HEAP32[i1 + 324 >> 2] | 0;
 i5 = 8;
 i6 = i8;
 i4 = HEAP32[i2 + 80 >> 2] | 0;
 L1 : while (1) {
  switch (i5 | 0) {
  case 0:
   break L1;
  case 4:
   break;
  default:
   {
    i2 = HEAP16[i3 + 16 >> 1] | 0;
    i1 = HEAP16[i3 + 32 >> 1] | 0;
    if (!((i2 | i1) << 16 >> 16)) if ((((HEAP16[i3 + 48 >> 1] | 0) == 0 ? (HEAP16[i3 + 80 >> 1] | 0) == 0 : 0) ? (HEAP16[i3 + 96 >> 1] | 0) == 0 : 0) ? (HEAP16[i3 + 112 >> 1] | 0) == 0 : 0) {
     i1 = Math_imul(HEAP16[i3 >> 1] << 2, HEAP32[i4 >> 2] | 0) | 0;
     HEAP32[i6 >> 2] = i1;
     HEAP32[i6 + 32 >> 2] = i1;
     HEAP32[i6 + 64 >> 2] = i1;
     i2 = 24;
    } else {
     i1 = 0;
     i11 = 9;
    } else i11 = 9;
    if ((i11 | 0) == 9) {
     i11 = 0;
     i14 = Math_imul(HEAP16[i3 >> 1] << 14, HEAP32[i4 >> 2] | 0) | 0;
     i13 = (Math_imul(Math_imul(HEAP16[i3 + 96 >> 1] | 0, -6270) | 0, HEAP32[i4 + 192 >> 2] | 0) | 0) + (Math_imul((i1 << 16 >> 16) * 15137 | 0, HEAP32[i4 + 64 >> 2] | 0) | 0) | 0;
     i16 = Math_imul(HEAP32[i4 + 224 >> 2] | 0, HEAP16[i3 + 112 >> 1] | 0) | 0;
     i17 = Math_imul(HEAP32[i4 + 160 >> 2] | 0, HEAP16[i3 + 80 >> 1] | 0) | 0;
     i15 = Math_imul(HEAP32[i4 + 96 >> 2] | 0, HEAP16[i3 + 48 >> 1] | 0) | 0;
     i2 = Math_imul(HEAP32[i4 + 32 >> 2] | 0, i2 << 16 >> 16) | 0;
     i1 = (i17 * 11893 | 0) + (Math_imul(i16, -1730) | 0) + (Math_imul(i15, -17799) | 0) + (i2 * 8697 | 0) | 0;
     i2 = (Math_imul(i17, -4926) | 0) + (Math_imul(i16, -4176) | 0) + (i15 * 7373 | 0) + (i2 * 20995 | 0) | 0;
     i15 = i13 + i14 + 2048 | 0;
     HEAP32[i6 >> 2] = i15 + i2 >> 12;
     HEAP32[i6 + 96 >> 2] = i15 - i2 >> 12;
     i2 = i14 - i13 + 2048 | 0;
     HEAP32[i6 + 32 >> 2] = i2 + i1 >> 12;
     i1 = i2 - i1 >> 12;
     i2 = 16;
    }
    HEAP32[i6 + (i2 << 2) >> 2] = i1;
   }
  }
  i5 = i5 + -1 | 0;
  i6 = i6 + 4 | 0;
  i4 = i4 + 4 | 0;
  i3 = i3 + 2 | 0;
 }
 i6 = i7 + 128 | 0;
 i5 = 0;
 i3 = i8;
 while (1) {
  if ((i5 | 0) == 4) break;
  i4 = (HEAP32[i9 + (i5 << 2) >> 2] | 0) + i10 | 0;
  i2 = HEAP32[i3 + 4 >> 2] | 0;
  i1 = HEAP32[i3 + 8 >> 2] | 0;
  if (!(i2 | i1)) if ((((HEAP32[i3 + 12 >> 2] | 0) == 0 ? (HEAP32[i3 + 20 >> 2] | 0) == 0 : 0) ? (HEAP32[i3 + 24 >> 2] | 0) == 0 : 0) ? (HEAP32[i3 + 28 >> 2] | 0) == 0 : 0) {
   i1 = HEAP8[i6 + (((HEAP32[i3 >> 2] | 0) + 16 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1;
   HEAP8[i4 + 2 >> 0] = i1;
   i2 = 3;
  } else {
   i1 = 0;
   i11 = 20;
  } else i11 = 20;
  if ((i11 | 0) == 20) {
   i11 = 0;
   i16 = HEAP32[i3 >> 2] << 14;
   i17 = (Math_imul(HEAP32[i3 + 24 >> 2] | 0, -6270) | 0) + (i1 * 15137 | 0) | 0;
   i13 = HEAP32[i3 + 28 >> 2] | 0;
   i14 = HEAP32[i3 + 20 >> 2] | 0;
   i15 = HEAP32[i3 + 12 >> 2] | 0;
   i1 = (Math_imul(i13, -1730) | 0) + (i2 * 8697 | 0) + (i14 * 11893 | 0) + (Math_imul(i15, -17799) | 0) | 0;
   i2 = (Math_imul(i13, -4176) | 0) + (i2 * 20995 | 0) + (Math_imul(i14, -4926) | 0) + (i15 * 7373 | 0) | 0;
   i15 = i17 + i16 + 262144 | 0;
   HEAP8[i4 >> 0] = HEAP8[i6 + ((i15 + i2 | 0) >>> 19 & 1023) >> 0] | 0;
   HEAP8[i4 + 3 >> 0] = HEAP8[i6 + ((i15 - i2 | 0) >>> 19 & 1023) >> 0] | 0;
   i2 = i16 - i17 + 262144 | 0;
   HEAP8[i4 + 1 >> 0] = HEAP8[i6 + ((i2 + i1 | 0) >>> 19 & 1023) >> 0] | 0;
   i1 = HEAP8[i6 + ((i2 - i1 | 0) >>> 19 & 1023) >> 0] | 0;
   i2 = 2;
  }
  HEAP8[i4 + i2 >> 0] = i1;
  i5 = i5 + 1 | 0;
  i3 = i3 + 32 | 0;
 }
 STACKTOP = i12;
 return;
}

function _get_dqt(i9) {
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0;
 i10 = HEAP32[i9 + 24 >> 2] | 0;
 i11 = i10 + 4 | 0;
 i1 = HEAP32[i11 >> 2] | 0;
 if (!i1) if (!(FUNCTION_TABLE_ii[HEAP32[i10 + 12 >> 2] & 127](i9) | 0)) i1 = 0; else {
  i1 = HEAP32[i11 >> 2] | 0;
  i2 = 4;
 } else i2 = 4;
 L4 : do if ((i2 | 0) == 4) {
  i2 = HEAP32[i10 >> 2] | 0;
  i1 = i1 + -1 | 0;
  i3 = (HEAPU8[i2 >> 0] | 0) << 8;
  if (!i1) {
   i2 = i10 + 12 | 0;
   if (!(FUNCTION_TABLE_ii[HEAP32[i2 >> 2] & 127](i9) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i11 >> 2] | 0;
   i4 = HEAP32[i10 >> 2] | 0;
  } else {
   i4 = i2 + 1 | 0;
   i2 = i10 + 12 | 0;
  }
  i8 = (i3 | (HEAPU8[i4 >> 0] | 0)) + -2 | 0;
  i3 = i1 + -1 | 0;
  i1 = i4 + 1 | 0;
  while (1) {
   if ((i8 | 0) <= 0) break;
   if (!i3) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i2 >> 2] & 127](i9) | 0)) {
     i1 = 0;
     break L4;
    }
    i3 = HEAP32[i11 >> 2] | 0;
    i1 = HEAP32[i10 >> 2] | 0;
   }
   i4 = HEAPU8[i1 >> 0] | 0;
   i6 = i4 >>> 4;
   i4 = i4 & 15;
   i7 = HEAP32[i9 >> 2] | 0;
   HEAP32[i7 + 20 >> 2] = 81;
   HEAP32[i7 + 24 >> 2] = i4;
   HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] = i6;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i9 >> 2] | 0) + 4 >> 2] & 63](i9, 1);
   if (i4 >>> 0 > 3) {
    i7 = HEAP32[i9 >> 2] | 0;
    HEAP32[i7 + 20 >> 2] = 31;
    HEAP32[i7 + 24 >> 2] = i4;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i9 >> 2] >> 2] & 255](i9);
   }
   i4 = i9 + 164 + (i4 << 2) | 0;
   i5 = HEAP32[i4 >> 2] | 0;
   if (!i5) {
    i5 = _jpeg_alloc_quant_table(i9) | 0;
    HEAP32[i4 >> 2] = i5;
   }
   i7 = (i6 | 0) == 0;
   i6 = 0;
   while (1) {
    i3 = i3 + -1 | 0;
    i1 = i1 + 1 | 0;
    if (i6 >>> 0 >= 64) break;
    i4 = (i3 | 0) == 0;
    if (i7) {
     if (i4) {
      if (!(FUNCTION_TABLE_ii[HEAP32[i2 >> 2] & 127](i9) | 0)) {
       i1 = 0;
       break L4;
      }
      i3 = HEAP32[i11 >> 2] | 0;
      i1 = HEAP32[i10 >> 2] | 0;
     }
     i4 = HEAPU8[i1 >> 0] | 0;
    } else {
     if (i4) {
      if (!(FUNCTION_TABLE_ii[HEAP32[i2 >> 2] & 127](i9) | 0)) {
       i1 = 0;
       break L4;
      }
      i3 = HEAP32[i11 >> 2] | 0;
      i4 = HEAP32[i10 >> 2] | 0;
     } else i4 = i1;
     i3 = i3 + -1 | 0;
     i1 = i4 + 1 | 0;
     i4 = (HEAPU8[i4 >> 0] | 0) << 8;
     if (!i3) {
      if (!(FUNCTION_TABLE_ii[HEAP32[i2 >> 2] & 127](i9) | 0)) {
       i1 = 0;
       break L4;
      }
      i3 = HEAP32[i11 >> 2] | 0;
      i1 = HEAP32[i10 >> 2] | 0;
     }
     i4 = i4 | (HEAPU8[i1 >> 0] | 0);
    }
    HEAP16[i5 + (HEAP32[2560 + (i6 << 2) >> 2] << 1) >> 1] = i4;
    i6 = i6 + 1 | 0;
   }
   L44 : do if ((HEAP32[(HEAP32[i9 >> 2] | 0) + 104 >> 2] | 0) > 1) {
    i4 = 0;
    while (1) {
     if (i4 >>> 0 >= 64) break L44;
     i6 = HEAP32[i9 >> 2] | 0;
     HEAP32[i6 + 24 >> 2] = HEAPU16[i5 + (i4 << 1) >> 1];
     HEAP32[i6 + 28 >> 2] = HEAPU16[i5 + ((i4 | 1) << 1) >> 1];
     HEAP32[i6 + 32 >> 2] = HEAPU16[i5 + ((i4 | 2) << 1) >> 1];
     HEAP32[i6 + 36 >> 2] = HEAPU16[i5 + ((i4 | 3) << 1) >> 1];
     HEAP32[i6 + 40 >> 2] = HEAPU16[i5 + ((i4 | 4) << 1) >> 1];
     HEAP32[i6 + 44 >> 2] = HEAPU16[i5 + ((i4 | 5) << 1) >> 1];
     HEAP32[i6 + 48 >> 2] = HEAPU16[i5 + ((i4 | 6) << 1) >> 1];
     HEAP32[i6 + 52 >> 2] = HEAPU16[i5 + ((i4 | 7) << 1) >> 1];
     HEAP32[i6 + 20 >> 2] = 93;
     FUNCTION_TABLE_vii[HEAP32[i6 + 4 >> 2] & 63](i9, 2);
     i4 = i4 + 8 | 0;
    }
   } while (0);
   i8 = (i7 ? -65 : -129) + i8 | 0;
  }
  if (i8 | 0) {
   i8 = HEAP32[i9 >> 2] | 0;
   HEAP32[i8 + 20 >> 2] = 11;
   FUNCTION_TABLE_vi[HEAP32[i8 >> 2] & 255](i9);
  }
  HEAP32[i10 >> 2] = i1;
  HEAP32[i11 >> 2] = i3;
  i1 = 1;
 } while (0);
 return i1 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i2, i14, i15, i6, i13) {
 i2 = i2 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i6 = i6 | 0;
 i13 = i13 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 L1 : do if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i2, HEAP32[i14 + 8 >> 2] | 0, i13) | 0)) {
  if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i2, HEAP32[i14 >> 2] | 0, i13) | 0)) {
   i12 = HEAP32[i2 + 12 >> 2] | 0;
   i5 = i2 + 16 + (i12 << 3) | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i2 + 16 | 0, i14, i15, i6, i13);
   i1 = i2 + 24 | 0;
   if ((i12 | 0) <= 1) break;
   i2 = HEAP32[i2 + 8 >> 2] | 0;
   if ((i2 & 2 | 0) == 0 ? (i4 = i14 + 36 | 0, (HEAP32[i4 >> 2] | 0) != 1) : 0) {
    if (!(i2 & 1)) {
     i2 = i14 + 54 | 0;
     while (1) {
      if (HEAP8[i2 >> 0] | 0) break L1;
      if ((HEAP32[i4 >> 2] | 0) == 1) break L1;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i14, i15, i6, i13);
      i1 = i1 + 8 | 0;
      if (i1 >>> 0 >= i5 >>> 0) break L1;
     }
    }
    i2 = i14 + 24 | 0;
    i3 = i14 + 54 | 0;
    while (1) {
     if (HEAP8[i3 >> 0] | 0) break L1;
     if ((HEAP32[i4 >> 2] | 0) == 1 ? (HEAP32[i2 >> 2] | 0) == 1 : 0) break L1;
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i14, i15, i6, i13);
     i1 = i1 + 8 | 0;
     if (i1 >>> 0 >= i5 >>> 0) break L1;
    }
   }
   i2 = i14 + 54 | 0;
   while (1) {
    if (HEAP8[i2 >> 0] | 0) break L1;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i14, i15, i6, i13);
    i1 = i1 + 8 | 0;
    if (i1 >>> 0 >= i5 >>> 0) break L1;
   }
  }
  if ((HEAP32[i14 + 16 >> 2] | 0) != (i15 | 0) ? (i12 = i14 + 20 | 0, (HEAP32[i12 >> 2] | 0) != (i15 | 0)) : 0) {
   HEAP32[i14 + 32 >> 2] = i6;
   i11 = i14 + 44 | 0;
   if ((HEAP32[i11 >> 2] | 0) == 4) break;
   i5 = i2 + 16 + (HEAP32[i2 + 12 >> 2] << 3) | 0;
   i6 = i14 + 52 | 0;
   i7 = i14 + 53 | 0;
   i9 = i14 + 54 | 0;
   i8 = i2 + 8 | 0;
   i10 = i14 + 24 | 0;
   i1 = 0;
   i3 = i2 + 16 | 0;
   i4 = 0;
   L32 : while (1) {
    if (i3 >>> 0 >= i5 >>> 0) {
     i2 = 18;
     break;
    }
    HEAP8[i6 >> 0] = 0;
    HEAP8[i7 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i3, i14, i15, i15, 1, i13);
    if (HEAP8[i9 >> 0] | 0) {
     i2 = 18;
     break;
    }
    do if (HEAP8[i7 >> 0] | 0) {
     if (!(HEAP8[i6 >> 0] | 0)) if (!(HEAP32[i8 >> 2] & 1)) {
      i1 = 1;
      i2 = 18;
      break L32;
     } else {
      i1 = 1;
      i2 = i4;
      break;
     }
     if ((HEAP32[i10 >> 2] | 0) == 1) {
      i2 = 23;
      break L32;
     }
     if (!(HEAP32[i8 >> 2] & 2)) {
      i2 = 23;
      break L32;
     } else {
      i1 = 1;
      i2 = 1;
     }
    } else i2 = i4; while (0);
    i3 = i3 + 8 | 0;
    i4 = i2;
   }
   do if ((i2 | 0) == 18) {
    if ((!i4 ? (HEAP32[i12 >> 2] = i15, i15 = i14 + 40 | 0, HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + 1, (HEAP32[i14 + 36 >> 2] | 0) == 1) : 0) ? (HEAP32[i10 >> 2] | 0) == 2 : 0) {
     HEAP8[i9 >> 0] = 1;
     if (i1) {
      i2 = 23;
      break;
     } else {
      i1 = 4;
      break;
     }
    }
    if (i1) i2 = 23; else i1 = 4;
   } while (0);
   if ((i2 | 0) == 23) i1 = 3;
   HEAP32[i11 >> 2] = i1;
   break;
  }
  if ((i6 | 0) == 1) HEAP32[i14 + 32 >> 2] = 1;
 } else __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, i14, i15, i6); while (0);
 return;
}

function _ar2ReadFeatureSet(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 640 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(640);
 i18 = i21 + 624 | 0;
 i17 = i21 + 616 | 0;
 i16 = i21 + 608 | 0;
 i15 = i21 + 600 | 0;
 i14 = i21 + 592 | 0;
 i13 = i21 + 584 | 0;
 i12 = i21 + 576 | 0;
 i11 = i21 + 568 | 0;
 i10 = i21 + 560 | 0;
 i9 = i21 + 552 | 0;
 i6 = i21 + 544 | 0;
 i5 = i21 + 536 | 0;
 i4 = i21 + 528 | 0;
 i3 = i21 + 520 | 0;
 i8 = i21 + 512 | 0;
 i19 = i21;
 HEAP32[i8 >> 2] = i2;
 HEAP32[i8 + 4 >> 2] = i1;
 _sprintf(i19, 20598, i8) | 0;
 i19 = _fopen(i19, 20190) | 0;
 if (!i19) {
  HEAP32[i3 >> 2] = i2;
  _arLog(0, 3, 19652, i3);
  i1 = 0;
 } else {
  i1 = _malloc(8) | 0;
  if (!i1) {
   _arLog(0, 3, 20581, i4);
   _exit(1);
  }
  i2 = i1 + 4 | 0;
  L7 : do if ((_fread(i2, 4, 1, i19) | 0) == 1) {
   i7 = HEAP32[i2 >> 2] | 0;
   i8 = _malloc(i7 * 20 | 0) | 0;
   HEAP32[i1 >> 2] = i8;
   if (!i8) {
    _arLog(0, 3, 20581, i6);
    _exit(1);
   }
   i6 = 0;
   L12 : while (1) {
    if ((i6 | 0) >= (i7 | 0)) break L7;
    if ((_fread(i8 + (i6 * 20 | 0) + 8 | 0, 4, 1, i19) | 0) != 1) {
     i20 = 12;
     break;
    }
    if ((_fread(i8 + (i6 * 20 | 0) + 12 | 0, 4, 1, i19) | 0) != 1) {
     i20 = 15;
     break;
    }
    if ((_fread(i8 + (i6 * 20 | 0) + 16 | 0, 4, 1, i19) | 0) != 1) {
     i20 = 17;
     break;
    }
    i4 = i8 + (i6 * 20 | 0) + 4 | 0;
    if ((_fread(i4, 4, 1, i19) | 0) != 1) {
     i20 = 19;
     break;
    }
    i2 = HEAP32[i4 >> 2] | 0;
    i3 = _malloc(i2 * 20 | 0) | 0;
    i5 = i8 + (i6 * 20 | 0) | 0;
    HEAP32[i5 >> 2] = i3;
    if (!i3) {
     i20 = 22;
     break;
    }
    i3 = 0;
    while (1) {
     if ((i3 | 0) >= (i2 | 0)) break;
     if ((_fread((HEAP32[i5 >> 2] | 0) + (i3 * 20 | 0) | 0, 4, 1, i19) | 0) != 1) {
      i20 = 25;
      break L12;
     }
     if ((_fread((HEAP32[i5 >> 2] | 0) + (i3 * 20 | 0) + 4 | 0, 4, 1, i19) | 0) != 1) {
      i20 = 27;
      break L12;
     }
     if ((_fread((HEAP32[i5 >> 2] | 0) + (i3 * 20 | 0) + 8 | 0, 4, 1, i19) | 0) != 1) {
      i20 = 29;
      break L12;
     }
     if ((_fread((HEAP32[i5 >> 2] | 0) + (i3 * 20 | 0) + 12 | 0, 4, 1, i19) | 0) != 1) {
      i20 = 31;
      break L12;
     }
     if ((_fread((HEAP32[i5 >> 2] | 0) + (i3 * 20 | 0) + 16 | 0, 4, 1, i19) | 0) != 1) {
      i20 = 34;
      break L12;
     }
     i3 = i3 + 1 | 0;
     i2 = HEAP32[i4 >> 2] | 0;
    }
    i6 = i6 + 1 | 0;
   }
   switch (i20 | 0) {
   case 12:
    {
     _arLog(0, 3, 19673, i9);
     break;
    }
   case 15:
    {
     _arLog(0, 3, 19673, i10);
     break;
    }
   case 17:
    {
     _arLog(0, 3, 19673, i11);
     break;
    }
   case 19:
    {
     _arLog(0, 3, 19673, i12);
     break;
    }
   case 22:
    {
     _arLog(0, 3, 20581, i13);
     _exit(1);
     break;
    }
   case 25:
    {
     _arLog(0, 3, 19673, i14);
     break;
    }
   case 27:
    {
     _arLog(0, 3, 19673, i15);
     break;
    }
   case 29:
    {
     _arLog(0, 3, 19673, i16);
     break;
    }
   case 31:
    {
     _arLog(0, 3, 19673, i17);
     break;
    }
   case 34:
    {
     _arLog(0, 3, 19673, i18);
     break;
    }
   }
   i2 = 0;
   while (1) {
    if ((i2 | 0) == (i6 | 0)) break;
    _free(HEAP32[i8 + (i2 * 20 | 0) >> 2] | 0);
    i2 = i2 + 1 | 0;
   }
   _free(i8);
   i20 = 39;
  } else {
   _arLog(0, 3, 19673, i5);
   i20 = 39;
  } while (0);
  if ((i20 | 0) == 39) {
   _free(i1);
   i1 = 0;
  }
  _fclose(i19) | 0;
 }
 STACKTOP = i21;
 return i1 | 0;
}

function _extractVisibleFeaturesHomography(i1, i2, i17, i18, i23, i24) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i17 = i17 | 0;
 i18 = i18 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 var d3 = 0.0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, d10 = 0.0, i11 = 0, i12 = 0, i13 = 0, d14 = 0.0, i15 = 0, i16 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i25 = 0, i26 = 0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 i25 = i26 + 48 | 0;
 i19 = i26;
 i20 = i26 + 76 | 0;
 i21 = i26 + 72 | 0;
 i22 = i26 + 64 | 0;
 i15 = i26 + 56 | 0;
 i16 = i18 + 4 | 0;
 d14 = +(i1 | 0);
 d10 = +(i2 | 0);
 i11 = i22 + 4 | 0;
 i12 = i15 + 4 | 0;
 i13 = i24 + 4812 | 0;
 i4 = 0;
 i5 = 0;
 i9 = 0;
 L1 : while (1) {
  if ((i9 | 0) >= (HEAP32[i16 >> 2] | 0)) {
   i2 = 28;
   break;
  }
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 4) break;
    HEAP32[i19 + (i2 << 4) + (i1 << 2) >> 2] = HEAP32[i17 + (i9 * 48 | 0) + (i2 << 4) + (i1 << 2) >> 2];
    i1 = i1 + 1 | 0;
   }
   i2 = i2 + 1 | 0;
  }
  i1 = i4;
  i2 = i5;
  i8 = 0;
  i4 = HEAP32[(HEAP32[i18 >> 2] | 0) + (i9 * 112 | 0) + 4 >> 2] | 0;
  while (1) {
   if ((i8 | 0) >= (HEAP32[i4 + 4 >> 2] | 0)) break;
   i7 = 0;
   i5 = i4;
   while (1) {
    i4 = HEAP32[i5 >> 2] | 0;
    if ((i7 | 0) >= (HEAP32[i4 + (i8 * 20 | 0) + 4 >> 2] | 0)) break;
    i5 = HEAP32[i4 + (i8 * 20 | 0) >> 2] | 0;
    i5 = (_ar2MarkerCoord2ScreenCoord2(0, i19, +HEAPF32[i5 + (i7 * 20 | 0) + 8 >> 2], +HEAPF32[i5 + (i7 * 20 | 0) + 12 >> 2], i20, i21) | 0) < 0;
    d3 = +HEAPF32[i20 >> 2];
    do if (!(i5 | d3 < 0.0) ? (d6 = +HEAPF32[i21 >> 2], !(d6 >= d10) & (!(d3 >= d14) & !(d6 < 0.0))) : 0) {
     i4 = HEAP32[(HEAP32[HEAP32[(HEAP32[i18 >> 2] | 0) + (i9 * 112 | 0) + 4 >> 2] >> 2] | 0) + (i8 * 20 | 0) >> 2] | 0;
     HEAP32[i22 >> 2] = HEAP32[i4 + (i7 * 20 | 0) + 8 >> 2];
     HEAP32[i11 >> 2] = HEAP32[i4 + (i7 * 20 | 0) + 12 >> 2];
     _ar2GetResolution(0, i19, i22, i15) | 0;
     d3 = +HEAPF32[i12 >> 2];
     i4 = HEAP32[HEAP32[(HEAP32[i18 >> 2] | 0) + (i9 * 112 | 0) + 4 >> 2] >> 2] | 0;
     d6 = +HEAPF32[i4 + (i8 * 20 | 0) + 12 >> 2];
     if (d3 <= d6 ? d3 >= +HEAPF32[i4 + (i8 * 20 | 0) + 16 >> 2] : 0) {
      if ((i2 | 0) == 200) {
       i2 = 18;
       break L1;
      }
      HEAP32[i23 + (i2 * 24 | 0) >> 2] = i9;
      HEAP32[i23 + (i2 * 24 | 0) + 4 >> 2] = i8;
      HEAP32[i23 + (i2 * 24 | 0) + 8 >> 2] = i7;
      HEAP32[i23 + (i2 * 24 | 0) + 16 >> 2] = HEAP32[i20 >> 2];
      HEAP32[i23 + (i2 * 24 | 0) + 20 >> 2] = HEAP32[i21 >> 2];
      HEAP32[i23 + (i2 * 24 | 0) + 12 >> 2] = 0;
      i2 = i2 + 1 | 0;
      break;
     }
     if (d3 <= d6 * 2.0 ? d3 >= +HEAPF32[i4 + (i8 * 20 | 0) + 16 >> 2] * .5 : 0) if ((i1 | 0) == 200) {
      HEAP32[i13 >> 2] = -1;
      i1 = 200;
      break;
     } else {
      HEAP32[i24 + (i1 * 24 | 0) >> 2] = i9;
      HEAP32[i24 + (i1 * 24 | 0) + 4 >> 2] = i8;
      HEAP32[i24 + (i1 * 24 | 0) + 8 >> 2] = i7;
      HEAP32[i24 + (i1 * 24 | 0) + 16 >> 2] = HEAP32[i20 >> 2];
      HEAP32[i24 + (i1 * 24 | 0) + 20 >> 2] = HEAP32[i21 >> 2];
      HEAP32[i24 + (i1 * 24 | 0) + 12 >> 2] = 0;
      i1 = i1 + 1 | 0;
      break;
     }
    } while (0);
    i7 = i7 + 1 | 0;
    i5 = HEAP32[(HEAP32[i18 >> 2] | 0) + (i9 * 112 | 0) + 4 >> 2] | 0;
   }
   i8 = i8 + 1 | 0;
   i4 = i5;
  }
  i4 = i1;
  i5 = i2;
  i9 = i9 + 1 | 0;
 }
 if ((i2 | 0) == 18) {
  _arLog(0, 3, 19981, i25);
  i1 = i23 + 4812 | 0;
 } else if ((i2 | 0) == 28) {
  HEAP32[i23 + (i5 * 24 | 0) + 12 >> 2] = -1;
  i1 = i24 + (i4 * 24 | 0) + 12 | 0;
 }
 HEAP32[i1 >> 2] = -1;
 STACKTOP = i26;
 return;
}

function _decode_mcu_DC_first(i8, i9) {
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i10 = i24 + 20 | 0;
 i15 = i24;
 i22 = HEAP32[i8 + 444 >> 2] | 0;
 i23 = HEAP32[i8 + 412 >> 2] | 0;
 if (((HEAP32[i8 + 276 >> 2] | 0) != 0 ? (HEAP32[i22 + 40 >> 2] | 0) == 0 : 0) ? (_process_restart_49(i8) | 0) == 0 : 0) i1 = 0; else i6 = 4;
 L4 : do if ((i6 | 0) == 4) {
  if (!(HEAP32[i22 + 8 >> 2] | 0)) {
   HEAP32[i10 + 16 >> 2] = i8;
   i11 = i8 + 24 | 0;
   i13 = HEAP32[i11 >> 2] | 0;
   HEAP32[i10 >> 2] = HEAP32[i13 >> 2];
   i12 = i10 + 4 | 0;
   HEAP32[i12 >> 2] = HEAP32[i13 + 4 >> 2];
   i13 = i22 + 12 | 0;
   i2 = HEAP32[i13 >> 2] | 0;
   i14 = i22 + 16 | 0;
   i1 = HEAP32[i14 >> 2] | 0;
   i16 = i22 + 20 | 0;
   HEAP32[i15 >> 2] = HEAP32[i16 >> 2];
   HEAP32[i15 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
   HEAP32[i15 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
   HEAP32[i15 + 12 >> 2] = HEAP32[i16 + 12 >> 2];
   HEAP32[i15 + 16 >> 2] = HEAP32[i16 + 16 >> 2];
   i17 = i8 + 356 | 0;
   i18 = i10 + 8 | 0;
   i19 = i10 + 12 | 0;
   i7 = 0;
   while (1) {
    if ((i7 | 0) >= (HEAP32[i17 >> 2] | 0)) break;
    i20 = HEAP32[i9 + (i7 << 2) >> 2] | 0;
    i21 = HEAP32[i8 + 360 + (i7 << 2) >> 2] | 0;
    i5 = HEAP32[i22 + 44 + (HEAP32[(HEAP32[i8 + 332 + (i21 << 2) >> 2] | 0) + 20 >> 2] << 2) >> 2] | 0;
    if ((i1 | 0) < 8) {
     if (!(_jpeg_fill_bit_buffer(i10, i2, i1, 0) | 0)) {
      i1 = 0;
      break L4;
     }
     i2 = HEAP32[i18 >> 2] | 0;
     i1 = HEAP32[i19 >> 2] | 0;
     if ((i1 | 0) < 8) {
      i3 = 1;
      i6 = 12;
     } else {
      i4 = i1;
      i6 = 10;
     }
    } else {
     i4 = i1;
     i6 = 10;
    }
    if ((i6 | 0) == 10) {
     i6 = 0;
     i1 = i2 >> i4 + -8 & 255;
     i3 = HEAP32[i5 + 144 + (i1 << 2) >> 2] | 0;
     if (!i3) {
      i3 = 9;
      i1 = i4;
      i6 = 12;
     } else {
      i1 = HEAPU8[i5 + 1168 + i1 >> 0] | 0;
      i3 = i4 - i3 | 0;
     }
    }
    if ((i6 | 0) == 12) {
     i1 = _jpeg_huff_decode(i10, i2, i1, i5, i3) | 0;
     if ((i1 | 0) < 0) {
      i1 = 0;
      break L4;
     }
     i3 = HEAP32[i19 >> 2] | 0;
     i2 = HEAP32[i18 >> 2] | 0;
    }
    if (i1) {
     if ((i3 | 0) < (i1 | 0)) {
      if (!(_jpeg_fill_bit_buffer(i10, i2, i3, i1) | 0)) {
       i1 = 0;
       break L4;
      }
      i3 = HEAP32[i19 >> 2] | 0;
      i2 = HEAP32[i18 >> 2] | 0;
     }
     i4 = i3 - i1 | 0;
     i3 = i2 >> i4 & (1 << i1) + -1;
     if ((i3 | 0) < (HEAP32[2880 + (i1 << 2) >> 2] | 0)) {
      i5 = (HEAP32[2944 + (i1 << 2) >> 2] | 0) + i3 | 0;
      i1 = i4;
     } else {
      i5 = i3;
      i1 = i4;
     }
    } else {
     i5 = 0;
     i1 = i3;
    }
    i6 = i15 + 4 + (i21 << 2) | 0;
    i21 = (HEAP32[i6 >> 2] | 0) + i5 | 0;
    HEAP32[i6 >> 2] = i21;
    HEAP16[i20 >> 1] = i21 << i23;
    i7 = i7 + 1 | 0;
   }
   i23 = HEAP32[i11 >> 2] | 0;
   HEAP32[i23 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i23 + 4 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i13 >> 2] = i2;
   HEAP32[i14 >> 2] = i1;
   HEAP32[i16 >> 2] = HEAP32[i15 >> 2];
   HEAP32[i16 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
   HEAP32[i16 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
   HEAP32[i16 + 12 >> 2] = HEAP32[i15 + 12 >> 2];
   HEAP32[i16 + 16 >> 2] = HEAP32[i15 + 16 >> 2];
  }
  i1 = i22 + 40 | 0;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + -1;
  i1 = 1;
 } while (0);
 STACKTOP = i24;
 return i1 | 0;
}

function _fmod(d12, d1) {
 d12 = +d12;
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0;
 HEAPF64[tempDoublePtr >> 3] = d12;
 i6 = HEAP32[tempDoublePtr >> 2] | 0;
 i8 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i10 = HEAP32[tempDoublePtr >> 2] | 0;
 i11 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i3 = _bitshift64Lshr(i6 | 0, i8 | 0, 52) | 0;
 getTempRet0() | 0;
 i3 = i3 & 2047;
 i9 = _bitshift64Lshr(i10 | 0, i11 | 0, 52) | 0;
 getTempRet0() | 0;
 i9 = i9 & 2047;
 i13 = i8 & -2147483648;
 i5 = _bitshift64Shl(i10 | 0, i11 | 0, 1) | 0;
 i7 = getTempRet0() | 0;
 L1 : do if (!((i5 | 0) == 0 & (i7 | 0) == 0) ? (i4 = ___DOUBLE_BITS_102(d1) | 0, i2 = (getTempRet0() | 0) & 2147483647, !((i3 | 0) == 2047 | (i2 >>> 0 > 2146435072 | (i2 | 0) == 2146435072 & i4 >>> 0 > 0))) : 0) {
  i2 = _bitshift64Shl(i6 | 0, i8 | 0, 1) | 0;
  i4 = getTempRet0() | 0;
  if (!(i4 >>> 0 > i7 >>> 0 | (i4 | 0) == (i7 | 0) & i2 >>> 0 > i5 >>> 0)) return +((i2 | 0) == (i5 | 0) & (i4 | 0) == (i7 | 0) ? d12 * 0.0 : d12);
  if (!i3) {
   i2 = _bitshift64Shl(i6 | 0, i8 | 0, 12) | 0;
   i4 = getTempRet0() | 0;
   if ((i4 | 0) > -1 | (i4 | 0) == -1 & i2 >>> 0 > 4294967295) {
    i3 = 0;
    do {
     i3 = i3 + -1 | 0;
     i2 = _bitshift64Shl(i2 | 0, i4 | 0, 1) | 0;
     i4 = getTempRet0() | 0;
    } while ((i4 | 0) > -1 | (i4 | 0) == -1 & i2 >>> 0 > 4294967295);
   } else i3 = 0;
   i6 = _bitshift64Shl(i6 | 0, i8 | 0, 1 - i3 | 0) | 0;
   i5 = getTempRet0() | 0;
  } else i5 = i8 & 1048575 | 1048576;
  if (!i9) {
   i4 = _bitshift64Shl(i10 | 0, i11 | 0, 12) | 0;
   i7 = getTempRet0() | 0;
   if ((i7 | 0) > -1 | (i7 | 0) == -1 & i4 >>> 0 > 4294967295) {
    i2 = 0;
    do {
     i2 = i2 + -1 | 0;
     i4 = _bitshift64Shl(i4 | 0, i7 | 0, 1) | 0;
     i7 = getTempRet0() | 0;
    } while ((i7 | 0) > -1 | (i7 | 0) == -1 & i4 >>> 0 > 4294967295);
   } else i2 = 0;
   i10 = _bitshift64Shl(i10 | 0, i11 | 0, 1 - i2 | 0) | 0;
   i9 = i2;
   i8 = getTempRet0() | 0;
  } else i8 = i11 & 1048575 | 1048576;
  i4 = _i64Subtract(i6 | 0, i5 | 0, i10 | 0, i8 | 0) | 0;
  i2 = getTempRet0() | 0;
  i7 = (i2 | 0) > -1 | (i2 | 0) == -1 & i4 >>> 0 > 4294967295;
  L25 : do if ((i3 | 0) > (i9 | 0)) {
   while (1) {
    if (i7) {
     if ((i4 | 0) == 0 & (i2 | 0) == 0) break;
    } else {
     i4 = i6;
     i2 = i5;
    }
    i6 = _bitshift64Shl(i4 | 0, i2 | 0, 1) | 0;
    i5 = getTempRet0() | 0;
    i3 = i3 + -1 | 0;
    i4 = _i64Subtract(i6 | 0, i5 | 0, i10 | 0, i8 | 0) | 0;
    i2 = getTempRet0() | 0;
    i7 = (i2 | 0) > -1 | (i2 | 0) == -1 & i4 >>> 0 > 4294967295;
    if ((i3 | 0) <= (i9 | 0)) break L25;
   }
   d1 = d12 * 0.0;
   break L1;
  } while (0);
  if (i7) {
   if ((i4 | 0) == 0 & (i2 | 0) == 0) {
    d1 = d12 * 0.0;
    break;
   }
  } else {
   i2 = i5;
   i4 = i6;
  }
  if (i2 >>> 0 < 1048576 | (i2 | 0) == 1048576 & i4 >>> 0 < 0) do {
   i4 = _bitshift64Shl(i4 | 0, i2 | 0, 1) | 0;
   i2 = getTempRet0() | 0;
   i3 = i3 + -1 | 0;
  } while (i2 >>> 0 < 1048576 | (i2 | 0) == 1048576 & i4 >>> 0 < 0);
  if ((i3 | 0) > 0) {
   i11 = _i64Add(i4 | 0, i2 | 0, 0, -1048576) | 0;
   i2 = getTempRet0() | 0;
   i3 = _bitshift64Shl(i3 | 0, 0, 52) | 0;
   i2 = i2 | (getTempRet0() | 0);
   i3 = i11 | i3;
  } else {
   i3 = _bitshift64Lshr(i4 | 0, i2 | 0, 1 - i3 | 0) | 0;
   i2 = getTempRet0() | 0;
  }
  HEAP32[tempDoublePtr >> 2] = i3;
  HEAP32[tempDoublePtr + 4 >> 2] = i2 | i13;
  d1 = +HEAPF64[tempDoublePtr >> 3];
 } else i14 = 3; while (0);
 if ((i14 | 0) == 3) {
  d1 = d12 * d1;
  d1 = d1 / d1;
 }
 return +d1;
}

function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe(i1, i14, i16, i2, i3, i17, i13) {
 i1 = i1 | 0;
 i14 = i14 | 0;
 i16 = i16 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i17 = i17 | 0;
 i13 = i13 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i15 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 592 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(592);
 i8 = i20 + 512 | 0;
 i11 = i20 + 552 | 0;
 i7 = i20 + 112 | 0;
 i19 = i20 + 568 | 0;
 i10 = i20 + 564 | 0;
 i15 = i20 + 560 | 0;
 i4 = i20 + 576 | 0;
 i21 = i20 + 556 | 0;
 i9 = i20;
 HEAP32[i19 >> 2] = i7;
 HEAP32[i19 + 4 >> 2] = 143;
 __ZNKSt3__28ios_base6getlocEv(i15, i3);
 i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58824) | 0;
 HEAP8[i4 >> 0] = 0;
 HEAP32[i21 >> 2] = HEAP32[i16 >> 2];
 i6 = HEAP32[i3 + 4 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i21 >> 2];
 if (__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(i14, i8, i2, i15, i6, i17, i4, i1, i19, i10, i7 + 400 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 15](i1, 49025, 49035, i8) | 0;
  i6 = HEAP32[i10 >> 2] | 0;
  i2 = HEAP32[i19 >> 2] | 0;
  i1 = i6 - i2 | 0;
  if ((i1 | 0) > 392) {
   i1 = _malloc((i1 >>> 2) + 2 | 0) | 0;
   if (!i1) __ZSt17__throw_bad_allocv(); else {
    i5 = i1;
    i12 = i1;
   }
  } else {
   i5 = i9;
   i12 = 0;
  }
  if (!(HEAP8[i4 >> 0] | 0)) i1 = i5; else {
   HEAP8[i5 >> 0] = 45;
   i1 = i5 + 1 | 0;
  }
  i5 = i8 + 40 | 0;
  i7 = i8;
  i4 = i2;
  i3 = i1;
  i1 = i6;
  while (1) {
   if (i4 >>> 0 >= i1 >>> 0) break;
   i2 = HEAP32[i4 >> 2] | 0;
   i1 = i8;
   while (1) {
    if ((i1 | 0) == (i5 | 0)) {
     i1 = i5;
     break;
    }
    if ((HEAP32[i1 >> 2] | 0) == (i2 | 0)) break;
    i1 = i1 + 4 | 0;
   }
   HEAP8[i3 >> 0] = HEAP8[49025 + (i1 - i7 >> 2) >> 0] | 0;
   i4 = i4 + 4 | 0;
   i3 = i3 + 1 | 0;
   i1 = HEAP32[i10 >> 2] | 0;
  }
  HEAP8[i3 >> 0] = 0;
  HEAP32[i11 >> 2] = i13;
  if ((_sscanf(i9, 48926, i11) | 0) != 1) __ZNSt3__221__throw_runtime_errorEPKc(0);
  if (i12 | 0) _free(i12);
 }
 i1 = HEAP32[i14 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i14 >> 2] = 0;
   i3 = 1;
   break;
  } else {
   i3 = (HEAP32[i14 >> 2] | 0) == 0;
   break;
  }
 } else i3 = 1; while (0);
 i1 = HEAP32[i16 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i3) break; else {
   i18 = 34;
   break;
  } else {
   HEAP32[i16 >> 2] = 0;
   i18 = 32;
   break;
  }
 } else i18 = 32; while (0);
 if ((i18 | 0) == 32 ? i3 : 0) i18 = 34;
 if ((i18 | 0) == 34) HEAP32[i17 >> 2] = HEAP32[i17 >> 2] | 2;
 i2 = HEAP32[i14 >> 2] | 0;
 __ZNSt3__26localeD2Ev(i15);
 i1 = HEAP32[i19 >> 2] | 0;
 HEAP32[i19 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i19 + 4 >> 2] & 255](i1);
 STACKTOP = i20;
 return i2 | 0;
}

function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe(i1, i14, i16, i2, i3, i17, i13) {
 i1 = i1 | 0;
 i14 = i14 | 0;
 i16 = i16 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i17 = i17 | 0;
 i13 = i13 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i15 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i8 = i20 + 240 | 0;
 i11 = i20 + 216 | 0;
 i7 = i20 + 112 | 0;
 i19 = i20 + 232 | 0;
 i10 = i20 + 228 | 0;
 i15 = i20 + 224 | 0;
 i4 = i20 + 250 | 0;
 i21 = i20 + 220 | 0;
 i9 = i20;
 HEAP32[i19 >> 2] = i7;
 HEAP32[i19 + 4 >> 2] = 143;
 __ZNKSt3__28ios_base6getlocEv(i15, i3);
 i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58792) | 0;
 HEAP8[i4 >> 0] = 0;
 HEAP32[i21 >> 2] = HEAP32[i16 >> 2];
 i6 = HEAP32[i3 + 4 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i21 >> 2];
 if (__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(i14, i8, i2, i15, i6, i17, i4, i1, i19, i10, i7 + 100 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] & 15](i1, 48915, 48925, i8) | 0;
  i6 = HEAP32[i10 >> 2] | 0;
  i2 = HEAP32[i19 >> 2] | 0;
  i1 = i6 - i2 | 0;
  if ((i1 | 0) > 98) {
   i1 = _malloc(i1 + 2 | 0) | 0;
   if (!i1) __ZSt17__throw_bad_allocv(); else {
    i5 = i1;
    i12 = i1;
   }
  } else {
   i5 = i9;
   i12 = 0;
  }
  if (!(HEAP8[i4 >> 0] | 0)) i1 = i5; else {
   HEAP8[i5 >> 0] = 45;
   i1 = i5 + 1 | 0;
  }
  i5 = i8 + 10 | 0;
  i7 = i8;
  i4 = i2;
  i3 = i1;
  i1 = i6;
  while (1) {
   if (i4 >>> 0 >= i1 >>> 0) break;
   i2 = HEAP8[i4 >> 0] | 0;
   i1 = i8;
   while (1) {
    if ((i1 | 0) == (i5 | 0)) {
     i1 = i5;
     break;
    }
    if ((HEAP8[i1 >> 0] | 0) == i2 << 24 >> 24) break;
    i1 = i1 + 1 | 0;
   }
   HEAP8[i3 >> 0] = HEAP8[48915 + (i1 - i7) >> 0] | 0;
   i4 = i4 + 1 | 0;
   i3 = i3 + 1 | 0;
   i1 = HEAP32[i10 >> 2] | 0;
  }
  HEAP8[i3 >> 0] = 0;
  HEAP32[i11 >> 2] = i13;
  if ((_sscanf(i9, 48926, i11) | 0) != 1) __ZNSt3__221__throw_runtime_errorEPKc(0);
  if (i12 | 0) _free(i12);
 }
 i1 = HEAP32[i14 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i14 >> 2] = 0;
   i3 = 1;
   break;
  } else {
   i3 = (HEAP32[i14 >> 2] | 0) == 0;
   break;
  }
 } else i3 = 1; while (0);
 i1 = HEAP32[i16 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i3) break; else {
   i18 = 34;
   break;
  } else {
   HEAP32[i16 >> 2] = 0;
   i18 = 32;
   break;
  }
 } else i18 = 32; while (0);
 if ((i18 | 0) == 32 ? i3 : 0) i18 = 34;
 if ((i18 | 0) == 34) HEAP32[i17 >> 2] = HEAP32[i17 >> 2] | 2;
 i2 = HEAP32[i14 >> 2] | 0;
 __ZNSt3__26localeD2Ev(i15);
 i1 = HEAP32[i19 >> 2] | 0;
 HEAP32[i19 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i19 + 4 >> 2] & 255](i1);
 STACKTOP = i20;
 return i2 | 0;
}

function _decode_mcu_AC_first(i4, i2) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i19 = i22;
 i21 = HEAP32[i4 + 444 >> 2] | 0;
 i12 = HEAP32[i4 + 404 >> 2] | 0;
 i13 = HEAP32[i4 + 412 >> 2] | 0;
 if (((HEAP32[i4 + 276 >> 2] | 0) != 0 ? (HEAP32[i21 + 40 >> 2] | 0) == 0 : 0) ? (_process_restart_49(i4) | 0) == 0 : 0) i1 = 0; else i14 = 4;
 L4 : do if ((i14 | 0) == 4) {
  if (!(HEAP32[i21 + 8 >> 2] | 0)) {
   i20 = i21 + 20 | 0;
   i1 = HEAP32[i20 >> 2] | 0;
   if (!i1) {
    HEAP32[i19 + 16 >> 2] = i4;
    i15 = i4 + 24 | 0;
    i17 = HEAP32[i15 >> 2] | 0;
    HEAP32[i19 >> 2] = HEAP32[i17 >> 2];
    i16 = i19 + 4 | 0;
    HEAP32[i16 >> 2] = HEAP32[i17 + 4 >> 2];
    i17 = i21 + 12 | 0;
    i18 = i21 + 16 | 0;
    i8 = HEAP32[i2 >> 2] | 0;
    i9 = HEAP32[i21 + 60 >> 2] | 0;
    i11 = i19 + 8 | 0;
    i10 = i19 + 12 | 0;
    i3 = HEAP32[i18 >> 2] | 0;
    i2 = HEAP32[i17 >> 2] | 0;
    i7 = HEAP32[i4 + 400 >> 2] | 0;
    while (1) {
     if ((i7 | 0) > (i12 | 0)) {
      i1 = 0;
      break;
     }
     if ((i3 | 0) < 8) {
      if (!(_jpeg_fill_bit_buffer(i19, i2, i3, 0) | 0)) {
       i1 = 0;
       break L4;
      }
      i2 = HEAP32[i11 >> 2] | 0;
      i3 = HEAP32[i10 >> 2] | 0;
      if ((i3 | 0) < 8) {
       i1 = 1;
       i14 = 14;
      } else i14 = 12;
     } else i14 = 12;
     if ((i14 | 0) == 12) {
      i14 = 0;
      i1 = i2 >> i3 + -8 & 255;
      i4 = HEAP32[i9 + 144 + (i1 << 2) >> 2] | 0;
      if (!i4) {
       i1 = 9;
       i14 = 14;
      } else {
       i1 = HEAPU8[i9 + 1168 + i1 >> 0] | 0;
       i3 = i3 - i4 | 0;
      }
     }
     if ((i14 | 0) == 14) {
      i14 = 0;
      i1 = _jpeg_huff_decode(i19, i2, i3, i9, i1) | 0;
      if ((i1 | 0) < 0) {
       i1 = 0;
       break L4;
      }
      i3 = HEAP32[i10 >> 2] | 0;
      i2 = HEAP32[i11 >> 2] | 0;
     }
     i5 = i1 >>> 4;
     i6 = i1 & 15;
     if (!i6) {
      if ((i5 | 0) != 15) {
       i14 = 25;
       break;
      }
      i1 = i7 + 15 | 0;
     } else {
      i4 = i5 + i7 | 0;
      if ((i3 | 0) < (i6 | 0)) {
       if (!(_jpeg_fill_bit_buffer(i19, i2, i3, i6) | 0)) {
        i1 = 0;
        break L4;
       }
       i3 = HEAP32[i10 >> 2] | 0;
       i2 = HEAP32[i11 >> 2] | 0;
      }
      i3 = i3 - i6 | 0;
      i1 = i2 >> i3 & (1 << i6) + -1;
      if ((i1 | 0) < (HEAP32[2880 + (i6 << 2) >> 2] | 0)) i1 = (HEAP32[2944 + (i6 << 2) >> 2] | 0) + i1 | 0;
      HEAP16[i8 + (HEAP32[2560 + (i4 << 2) >> 2] << 1) >> 1] = i1 << i13;
      i1 = i4;
     }
     i7 = i1 + 1 | 0;
    }
    if ((i14 | 0) == 25) {
     i4 = 1 << i5;
     if (!i5) i1 = 0; else {
      if ((i3 | 0) < (i5 | 0)) {
       if (!(_jpeg_fill_bit_buffer(i19, i2, i3, i5) | 0)) {
        i1 = 0;
        break;
       }
       i1 = HEAP32[i10 >> 2] | 0;
       i2 = HEAP32[i11 >> 2] | 0;
      } else i1 = i3;
      i3 = i1 - i5 | 0;
      i1 = i4 + -1 | 0;
      i1 = i1 + (i2 >> i3 & i1) | 0;
     }
    }
    i15 = HEAP32[i15 >> 2] | 0;
    HEAP32[i15 >> 2] = HEAP32[i19 >> 2];
    HEAP32[i15 + 4 >> 2] = HEAP32[i16 >> 2];
    HEAP32[i17 >> 2] = i2;
    HEAP32[i18 >> 2] = i3;
   } else i1 = i1 + -1 | 0;
   HEAP32[i20 >> 2] = i1;
  }
  i1 = i21 + 40 | 0;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + -1;
  i1 = 1;
 } while (0);
 STACKTOP = i22;
 return i1 | 0;
}

function __ZN6vision20VisualDatabaseFacade30addFreakFeaturesAndDescriptorsERKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEERKNS2_IhNS4_IhEEEERKNS2_INS_7Point3dIfEENS4_ISE_EEEEmmi(i6, i4, i5, i9, i1, i2, i3) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i12 = i11 + 24 | 0;
 i8 = i11 + 12 | 0;
 i10 = i11 + 16 | 0;
 i13 = i11 + 8 | 0;
 i7 = i11;
 HEAP32[i8 >> 2] = i3;
 i3 = __Znwm(148) | 0;
 __ZN6vision8KeyframeILi96EEC2Ev(i3);
 HEAP32[i13 >> 2] = 0;
 HEAP32[i12 >> 2] = HEAP32[i13 >> 2];
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE(i10, i3, i12);
 __ZN6vision8KeyframeILi96EE8setWidthEi(HEAP32[i10 >> 2] | 0, i1);
 __ZN6vision8KeyframeILi96EE9setHeightEi(HEAP32[i10 >> 2] | 0, i2);
 __ZN6vision18BinaryFeatureStore21setNumBytesPerFeatureEi(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[i10 >> 2] | 0) | 0, 96);
 i2 = __ZN6vision18BinaryFeatureStore6pointsEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[i10 >> 2] | 0) | 0) | 0;
 i1 = i4 + 4 | 0;
 __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6resizeEm(i2, ((HEAP32[i1 >> 2] | 0) - (HEAP32[i4 >> 2] | 0) | 0) / 20 | 0);
 i2 = __ZN6vision18BinaryFeatureStore6pointsEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[i10 >> 2] | 0) | 0) | 0;
 if ((i2 | 0) != (i4 | 0)) __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(i2, HEAP32[i4 >> 2] | 0, HEAP32[i1 >> 2] | 0);
 i2 = __ZN6vision18BinaryFeatureStore8featuresEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[i10 >> 2] | 0) | 0) | 0;
 i1 = i5 + 4 | 0;
 __ZNSt3__26vectorIhNS_9allocatorIhEEE6resizeEm(i2, (HEAP32[i1 >> 2] | 0) - (HEAP32[i5 >> 2] | 0) | 0);
 i2 = __ZN6vision18BinaryFeatureStore8featuresEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[i10 >> 2] | 0) | 0) | 0;
 if ((i2 | 0) != (i5 | 0)) __ZNSt3__26vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(i2, HEAP32[i5 >> 2] | 0, HEAP32[i1 >> 2] | 0);
 __ZN6vision8KeyframeILi96EE10buildIndexEv(HEAP32[i10 >> 2] | 0);
 i1 = HEAP32[HEAP32[i6 >> 2] >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i10 >> 2];
 i2 = HEAP32[i10 + 4 >> 2] | 0;
 HEAP32[i7 + 4 >> 2] = i2;
 if (i2 | 0) {
  i13 = i2 + 4 | 0;
  HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 1;
 }
 __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE11addKeyframeENSt3__210shared_ptrINS_8KeyframeILi96EEEEEi(i1, i7, HEAP32[i8 >> 2] | 0);
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev(i7);
 i1 = __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEEixERSD_((HEAP32[i6 >> 2] | 0) + 4 | 0, i8) | 0;
 if ((i1 | 0) != (i9 | 0)) __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(i1, HEAP32[i9 >> 2] | 0, HEAP32[i9 + 4 >> 2] | 0);
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev(i10);
 STACKTOP = i11;
 return;
}

function __ZN6vision11PartialSortIfiEENSt3__24pairIT_T0_EEPS5_ii(i14, i15, i2, i16) {
 i14 = i14 | 0;
 i15 = i15 | 0;
 i2 = i2 | 0;
 i16 = i16 | 0;
 var i1 = 0, i3 = 0, d4 = 0.0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, d9 = 0.0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i17 = 0, i18 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i17;
 if ((i2 | 0) <= 0) {
  i13 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31894) | 0, 31923) | 0, 33655) | 0, 82) | 0, 33662) | 0, 32032) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 }
 if ((i16 | 0) <= 0) {
  i13 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32051) | 0, 31923) | 0, 33655) | 0, 83) | 0, 33662) | 0, 32080) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 }
 i11 = i16 + -1 | 0;
 i12 = i15 + (i11 << 3) | 0;
 i13 = i15 + (i11 << 3) + 4 | 0;
 i7 = i2 + -1 | 0;
 i8 = 0;
 while (1) {
  if ((i8 | 0) >= (i7 | 0)) break;
  d9 = +HEAPF32[i12 >> 2];
  i10 = HEAP32[i13 >> 2] | 0;
  i1 = i8;
  i2 = i7;
  do {
   while (1) {
    i5 = i15 + (i1 << 3) | 0;
    d6 = +HEAPF32[i5 >> 2];
    if (!(d6 < d9)) {
     if (d9 < d6) break;
     if ((HEAP32[i15 + (i1 << 3) + 4 >> 2] | 0) >= (i10 | 0)) break;
    }
    i1 = i1 + 1 | 0;
   }
   while (1) {
    i3 = i15 + (i2 << 3) | 0;
    d4 = +HEAPF32[i3 >> 2];
    if (!(d9 < d4)) {
     if (d4 < d9) break;
     if ((i10 | 0) >= (HEAP32[i15 + (i2 << 3) + 4 >> 2] | 0)) break;
    }
    i2 = i2 + -1 | 0;
   }
   if ((i1 | 0) <= (i2 | 0)) {
    HEAPF32[i5 >> 2] = d4;
    HEAPF32[i3 >> 2] = d6;
    i18 = i15 + (i1 << 3) + 4 | 0;
    i5 = i15 + (i2 << 3) + 4 | 0;
    i3 = HEAP32[i18 >> 2] | 0;
    HEAP32[i18 >> 2] = HEAP32[i5 >> 2];
    HEAP32[i5 >> 2] = i3;
    i1 = i1 + 1 | 0;
    i2 = i2 + -1 | 0;
   }
  } while ((i1 | 0) <= (i2 | 0));
  i7 = (i1 | 0) < (i16 | 0) ? i7 : i2;
  i8 = (i2 | 0) < (i11 | 0) ? i1 : i8;
 }
 i15 = i12;
 i16 = HEAP32[i15 + 4 >> 2] | 0;
 i18 = i14;
 HEAP32[i18 >> 2] = HEAP32[i15 >> 2];
 HEAP32[i18 + 4 >> 2] = i16;
 STACKTOP = i17;
 return;
}

function __ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE(i1, i11, i12, i2, i13, i14, i15, i3) {
 i1 = i1 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i2 = i2 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 HEAP32[i12 >> 2] = i1;
 HEAP32[i14 >> 2] = i2;
 if (i3 & 4) {
  i1 = HEAP32[i12 >> 2] | 0;
  i2 = i11;
  if ((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == -17 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == -69 : 0) ? (HEAP8[i1 + 2 >> 0] | 0) == -65 : 0) HEAP32[i12 >> 2] = i1 + 3;
 } else i2 = i11;
 i10 = i13;
 L9 : while (1) {
  i5 = HEAP32[i12 >> 2] | 0;
  if (i5 >>> 0 >= i11 >>> 0) {
   i1 = 0;
   break;
  }
  i9 = HEAP32[i14 >> 2] | 0;
  if (i9 >>> 0 >= i13 >>> 0) {
   i1 = 1;
   break;
  }
  i4 = HEAP8[i5 >> 0] | 0;
  i8 = i4 & 255;
  if (i8 >>> 0 > i15 >>> 0) {
   i1 = 2;
   break;
  }
  do if (i4 << 24 >> 24 > -1) {
   HEAP16[i9 >> 1] = i4 & 255;
   i1 = i5 + 1 | 0;
  } else {
   if ((i4 & 255) < 194) {
    i1 = 2;
    break L9;
   }
   if ((i4 & 255) < 224) {
    if ((i2 - i5 | 0) < 2) {
     i1 = 1;
     break L9;
    }
    i1 = HEAPU8[i5 + 1 >> 0] | 0;
    if ((i1 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = i1 & 63 | i8 << 6 & 1984;
    if (i1 >>> 0 > i15 >>> 0) {
     i1 = 2;
     break L9;
    }
    HEAP16[i9 >> 1] = i1;
    i1 = i5 + 2 | 0;
    break;
   }
   if ((i4 & 255) < 240) {
    if ((i2 - i5 | 0) < 3) {
     i1 = 1;
     break L9;
    }
    i3 = HEAP8[i5 + 1 >> 0] | 0;
    i1 = HEAP8[i5 + 2 >> 0] | 0;
    switch (i4 << 24 >> 24) {
    case -32:
     {
      if ((i3 & -32) << 24 >> 24 != -96) {
       i1 = 2;
       break L9;
      }
      break;
     }
    case -19:
     {
      if ((i3 & -32) << 24 >> 24 != -128) {
       i1 = 2;
       break L9;
      }
      break;
     }
    default:
     if ((i3 & -64) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
    }
    i1 = i1 & 255;
    if ((i1 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = (i3 & 63) << 6 | i8 << 12 | i1 & 63;
    if ((i1 & 65535) >>> 0 > i15 >>> 0) {
     i1 = 2;
     break L9;
    }
    HEAP16[i9 >> 1] = i1;
    i1 = i5 + 3 | 0;
    break;
   }
   if ((i4 & 255) >= 245) {
    i1 = 2;
    break L9;
   }
   if ((i2 - i5 | 0) < 4) {
    i1 = 1;
    break L9;
   }
   i6 = HEAP8[i5 + 1 >> 0] | 0;
   i1 = HEAP8[i5 + 2 >> 0] | 0;
   i3 = HEAP8[i5 + 3 >> 0] | 0;
   switch (i4 << 24 >> 24) {
   case -16:
    {
     if ((i6 + 112 & 255) >= 48) {
      i1 = 2;
      break L9;
     }
     break;
    }
   case -12:
    {
     if ((i6 & -16) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
     break;
    }
   default:
    if ((i6 & -64) << 24 >> 24 != -128) {
     i1 = 2;
     break L9;
    }
   }
   i7 = i1 & 255;
   if ((i7 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   i1 = i3 & 255;
   if ((i1 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   if ((i10 - i9 | 0) < 4) {
    i1 = 1;
    break L9;
   }
   i5 = i8 & 7;
   i3 = i6 & 255;
   i4 = i7 << 6;
   i1 = i1 & 63;
   if ((i3 << 12 & 258048 | i5 << 18 | i4 & 4032 | i1) >>> 0 > i15 >>> 0) {
    i1 = 2;
    break L9;
   }
   HEAP16[i9 >> 1] = i3 << 2 & 60 | i7 >>> 4 & 3 | ((i3 >>> 4 & 3 | i5 << 2) << 6) + 16320 | 55296;
   i9 = i9 + 2 | 0;
   HEAP32[i14 >> 2] = i9;
   HEAP16[i9 >> 1] = i1 | i4 & 960 | 56320;
   i1 = (HEAP32[i12 >> 2] | 0) + 4 | 0;
  } while (0);
  HEAP32[i12 >> 2] = i1;
  HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 2;
 }
 return i1 | 0;
}

function __ZN6vision21ComputePolarGradientsEPfPKfmm(i1, i10, i11, i4) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i12 = 0, d13 = 0.0, d14 = 0.0, d15 = 0.0, i16 = 0;
 i12 = i11 + -1 | 0;
 i7 = i10 + (i11 << 2) | 0;
 i5 = i10 + 4 | 0;
 d13 = +HEAPF32[i10 >> 2];
 d14 = +HEAPF32[i5 >> 2] - d13;
 d13 = +HEAPF32[i7 >> 2] - d13;
 d15 = +Math_atan2(+d13, +d14) + 3.141592653589793;
 HEAPF32[i1 >> 2] = d15;
 d13 = +Math_sqrt(+(d14 * d14 + d13 * d13));
 HEAPF32[i1 + 4 >> 2] = d13;
 i3 = 1;
 i2 = i7;
 while (1) {
  i6 = i1 + 8 | 0;
  i2 = i2 + 4 | 0;
  if (i3 >>> 0 >= i12 >>> 0) break;
  i9 = i5 + 4 | 0;
  d14 = +HEAPF32[i9 >> 2] - +HEAPF32[i5 + -4 >> 2];
  d15 = +HEAPF32[i2 >> 2] - +HEAPF32[i5 >> 2];
  d13 = +Math_atan2(+d15, +d14) + 3.141592653589793;
  HEAPF32[i6 >> 2] = d13;
  d15 = +Math_sqrt(+(d14 * d14 + d15 * d15));
  HEAPF32[i1 + 12 >> 2] = d15;
  i3 = i3 + 1 | 0;
  i5 = i9;
  i1 = i6;
 }
 i9 = i4 + -1 | 0;
 d15 = +HEAPF32[i5 >> 2];
 d14 = d15 - +HEAPF32[i5 + -4 >> 2];
 d15 = +HEAPF32[i2 >> 2] - d15;
 d13 = +Math_atan2(+d15, +d14) + 3.141592653589793;
 HEAPF32[i6 >> 2] = d13;
 d15 = +Math_sqrt(+(d14 * d14 + d15 * d15));
 HEAPF32[i1 + 12 >> 2] = d15;
 i8 = 1;
 i3 = i6;
 i4 = i7 + (i11 << 2) | 0;
 i5 = i10;
 i1 = i7;
 while (1) {
  i2 = i3 + 8 | 0;
  if (i8 >>> 0 >= i9 >>> 0) break;
  i7 = i1 + 4 | 0;
  d14 = +HEAPF32[i7 >> 2] - +HEAPF32[i1 >> 2];
  d15 = +HEAPF32[i4 >> 2] - +HEAPF32[i5 >> 2];
  d13 = +Math_atan2(+d15, +d14) + 3.141592653589793;
  HEAPF32[i2 >> 2] = d13;
  d15 = +Math_sqrt(+(d14 * d14 + d15 * d15));
  HEAPF32[i3 + 12 >> 2] = d15;
  i6 = 1;
  i3 = i3 + 16 | 0;
  while (1) {
   i1 = i4 + 4 | 0;
   i2 = i5 + 4 | 0;
   if (i6 >>> 0 >= i12 >>> 0) break;
   i16 = i7 + 4 | 0;
   d14 = +HEAPF32[i16 >> 2] - +HEAPF32[i7 + -4 >> 2];
   d15 = +HEAPF32[i1 >> 2] - +HEAPF32[i2 >> 2];
   d13 = +Math_atan2(+d15, +d14) + 3.141592653589793;
   HEAPF32[i3 >> 2] = d13;
   d15 = +Math_sqrt(+(d14 * d14 + d15 * d15));
   HEAPF32[i3 + 4 >> 2] = d15;
   i6 = i6 + 1 | 0;
   i4 = i1;
   i5 = i2;
   i7 = i16;
   i3 = i3 + 8 | 0;
  }
  d14 = +HEAPF32[i7 >> 2] - +HEAPF32[i7 + -4 >> 2];
  d15 = +HEAPF32[i1 >> 2] - +HEAPF32[i2 >> 2];
  d13 = +Math_atan2(+d15, +d14) + 3.141592653589793;
  HEAPF32[i3 >> 2] = d13;
  d15 = +Math_sqrt(+(d14 * d14 + d15 * d15));
  HEAPF32[i3 + 4 >> 2] = d15;
  i8 = i8 + 1 | 0;
  i4 = i4 + 8 | 0;
  i5 = i5 + 8 | 0;
  i1 = i7 + 4 | 0;
 }
 i5 = i10 + ((Math_imul(i9, i11) | 0) << 2) | 0;
 i1 = i5 + (0 - i11 << 2) | 0;
 i16 = i5 + 4 | 0;
 d15 = +HEAPF32[i5 >> 2];
 d14 = +HEAPF32[i16 >> 2] - d15;
 d15 = d15 - +HEAPF32[i1 >> 2];
 d13 = +Math_atan2(+d15, +d14) + 3.141592653589793;
 HEAPF32[i2 >> 2] = d13;
 d15 = +Math_sqrt(+(d14 * d14 + d15 * d15));
 HEAPF32[i3 + 12 >> 2] = d15;
 i5 = 1;
 i3 = i16;
 while (1) {
  i4 = i2 + 8 | 0;
  i1 = i1 + 4 | 0;
  if (i5 >>> 0 >= i12 >>> 0) break;
  i16 = i3 + 4 | 0;
  d14 = +HEAPF32[i16 >> 2] - +HEAPF32[i3 + -4 >> 2];
  d15 = +HEAPF32[i3 >> 2] - +HEAPF32[i1 >> 2];
  d13 = +Math_atan2(+d15, +d14) + 3.141592653589793;
  HEAPF32[i4 >> 2] = d13;
  d15 = +Math_sqrt(+(d14 * d14 + d15 * d15));
  HEAPF32[i2 + 12 >> 2] = d15;
  i5 = i5 + 1 | 0;
  i2 = i4;
  i3 = i16;
 }
 d15 = +HEAPF32[i3 >> 2];
 d14 = d15 - +HEAPF32[i3 + -4 >> 2];
 d15 = d15 - +HEAPF32[i1 >> 2];
 d13 = +Math_atan2(+d15, +d14) + 3.141592653589793;
 HEAPF32[i4 >> 2] = d13;
 d15 = +Math_sqrt(+(d14 * d14 + d15 * d15));
 HEAPF32[i2 + 12 >> 2] = d15;
 return;
}

function __ZN6vision25DoGScaleInvariantDetector23findFeatureOrientationsEPKNS_25GaussianScaleSpacePyramidE(i1, i7) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, d21 = 0.0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i9 = i20 + 48 | 0;
 i16 = i20 + 44 | 0;
 i17 = i20 + 40 | 0;
 i18 = i20 + 36 | 0;
 i19 = i20;
 L1 : do if (!(HEAP8[i1 + 28 >> 0] | 0)) {
  i3 = HEAP32[i1 + 60 >> 2] | 0;
  i2 = ((HEAP32[i1 + 64 >> 2] | 0) - i3 | 0) / 36 | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i2 | 0)) break L1;
   HEAPF32[i3 + (i1 * 36 | 0) + 8 >> 2] = 0.0;
   i1 = i1 + 1 | 0;
  }
 } else {
  i8 = i1 + 72 | 0;
  i10 = i1 + 76 | 0;
  HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
  i11 = i1 + 60 | 0;
  i12 = i1 + 64 | 0;
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE7reserveEm(i8, (HEAP32[i12 >> 2] | 0) - (HEAP32[i11 >> 2] | 0) | 0);
  i13 = i1 + 92 | 0;
  __ZN6vision21OrientationAssignment16computeGradientsEPKNS_25GaussianScaleSpacePyramidE(i13, i7);
  i14 = i1 + 144 | 0;
  i15 = i19 + 8 | 0;
  i6 = i1 + 80 | 0;
  i5 = 0;
  while (1) {
   i4 = HEAP32[i11 >> 2] | 0;
   i1 = i4;
   if (i5 >>> 0 >= (((HEAP32[i12 >> 2] | 0) - i4 | 0) / 36 | 0) >>> 0) break;
   __ZN6vision25bilinear_downsample_pointERfS0_S0_fffi(i16, i17, i18, +HEAPF32[i1 + (i5 * 36 | 0) >> 2], +HEAPF32[i1 + (i5 * 36 | 0) + 4 >> 2], +HEAPF32[i1 + (i5 * 36 | 0) + 28 >> 2], HEAP32[i1 + (i5 * 36 | 0) + 12 >> 2] | 0);
   d21 = +HEAPF32[i16 >> 2];
   d21 = +__ZN6vision10ClipScalarIfEET_S1_S1_S1_(d21, 0.0, +(((__ZNK6vision5Image5widthEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm(i7, HEAP32[(HEAP32[i11 >> 2] | 0) + (i5 * 36 | 0) + 12 >> 2] | 0, 0) | 0) | 0) + -1 | 0) >>> 0));
   HEAPF32[i16 >> 2] = d21;
   d21 = +HEAPF32[i17 >> 2];
   d21 = +__ZN6vision10ClipScalarIfEET_S1_S1_S1_(d21, 0.0, +(((__ZNK6vision5Image6heightEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm(i7, HEAP32[(HEAP32[i11 >> 2] | 0) + (i5 * 36 | 0) + 12 >> 2] | 0, 0) | 0) | 0) + -1 | 0) >>> 0));
   HEAPF32[i17 >> 2] = d21;
   i4 = HEAP32[i11 >> 2] | 0;
   __ZN6vision21OrientationAssignment7computeEPfRiiifff(i13, HEAP32[i14 >> 2] | 0, i9, HEAP32[i4 + (i5 * 36 | 0) + 12 >> 2] | 0, HEAP32[i4 + (i5 * 36 | 0) + 16 >> 2] | 0, +HEAPF32[i16 >> 2], d21, +HEAPF32[i18 >> 2]);
   i4 = 0;
   while (1) {
    if ((i4 | 0) >= (HEAP32[i9 >> 2] | 0)) break;
    i1 = i19;
    i2 = (HEAP32[i11 >> 2] | 0) + (i5 * 36 | 0) | 0;
    i3 = i1 + 36 | 0;
    do {
     HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
     i1 = i1 + 4 | 0;
     i2 = i2 + 4 | 0;
    } while ((i1 | 0) < (i3 | 0));
    HEAP32[i15 >> 2] = HEAP32[(HEAP32[i14 >> 2] | 0) + (i4 << 2) >> 2];
    i1 = HEAP32[i10 >> 2] | 0;
    if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i8, i19); else {
     i2 = i19;
     i3 = i1 + 36 | 0;
     do {
      HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
      i1 = i1 + 4 | 0;
      i2 = i2 + 4 | 0;
     } while ((i1 | 0) < (i3 | 0));
     HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 36;
    }
    i4 = i4 + 1 | 0;
   }
   i5 = i5 + 1 | 0;
  }
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE4swapERS6_(i11, i8);
 } while (0);
 STACKTOP = i20;
 return;
}

function _arDetectMarker2(i2, i4, i12, i1, i5, i7, d6, i3, i16) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i12 = i12 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 d6 = +d6;
 i3 = i3 | 0;
 i16 = i16 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0, i15 = 0, i17 = 0, d18 = 0.0;
 i15 = (i1 | 0) == 1;
 if (i15) {
  i2 = (i2 | 0) / 2 | 0;
  i4 = (i4 | 0) / 2 | 0;
  i5 = (i5 | 0) / 4 | 0;
  i7 = (i7 | 0) / 4 | 0;
 }
 HEAP32[i16 >> 2] = 0;
 i10 = i12 + 8 | 0;
 i11 = i2 + -2 | 0;
 i4 = i4 + -2 | 0;
 i8 = i12 + 1179664 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (HEAP32[i10 >> 2] | 0)) {
   i14 = 5;
   break;
  }
  i9 = i12 + 12 + (i1 << 2) | 0;
  i17 = HEAP32[i9 >> 2] | 0;
  if (((((((!((i17 | 0) < (i7 | 0) | (i17 | 0) > (i5 | 0)) ? (i13 = i12 + 131084 + (i1 << 4) | 0, (HEAP32[i13 >> 2] | 0) != 1) : 0) ? (HEAP32[i12 + 131084 + (i1 << 4) + 4 >> 2] | 0) != (i11 | 0) : 0) ? (HEAP32[i12 + 131084 + (i1 << 4) + 8 >> 2] | 0) != 1 : 0) ? (HEAP32[i12 + 131084 + (i1 << 4) + 12 >> 2] | 0) != (i4 | 0) : 0) ? (_arGetContour(HEAP32[i12 >> 2] | 0, i2, 0, i8, i1 + 1 | 0, i13, i3 + ((HEAP32[i16 >> 2] | 0) * 80048 | 0) | 0) | 0) >= 0 : 0) ? (_check_square(HEAP32[i9 >> 2] | 0, i3 + ((HEAP32[i16 >> 2] | 0) * 80048 | 0) | 0, d6) | 0) >= 0 : 0) ? (HEAP32[i3 + ((HEAP32[i16 >> 2] | 0) * 80048 | 0) >> 2] = HEAP32[i9 >> 2], i17 = HEAP32[i16 >> 2] | 0, HEAPF64[i3 + (i17 * 80048 | 0) + 8 >> 3] = +HEAPF64[i12 + 655376 + (i1 << 4) >> 3], HEAPF64[i3 + (i17 * 80048 | 0) + 16 >> 3] = +HEAPF64[i12 + 655376 + (i1 << 4) + 8 >> 3], i17 = i17 + 1 | 0, HEAP32[i16 >> 2] = i17, (i17 | 0) == 60) : 0) {
   i1 = 60;
   break;
  }
  i1 = i1 + 1 | 0;
 }
 if ((i14 | 0) == 5) i1 = HEAP32[i16 >> 2] | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) >= (i1 | 0)) break;
  i8 = i2 + 1 | 0;
  i9 = i3 + (i2 * 80048 | 0) + 8 | 0;
  i10 = i3 + (i2 * 80048 | 0) + 16 | 0;
  i7 = i3 + (i2 * 80048 | 0) | 0;
  i5 = i8;
  while (1) {
   if ((i5 | 0) >= (i1 | 0)) break;
   d18 = +HEAPF64[i9 >> 3] - +HEAPF64[i3 + (i5 * 80048 | 0) + 8 >> 3];
   d6 = +HEAPF64[i10 >> 3] - +HEAPF64[i3 + (i5 * 80048 | 0) + 16 >> 3];
   d6 = d18 * d18 + d6 * d6;
   i1 = HEAP32[i7 >> 2] | 0;
   i2 = i3 + (i5 * 80048 | 0) | 0;
   i4 = HEAP32[i2 >> 2] | 0;
   if ((i1 | 0) > (i4 | 0)) {
    if (d6 < +((i1 | 0) / 4 | 0 | 0)) HEAP32[i2 >> 2] = 0;
   } else if (d6 < +((i4 | 0) / 4 | 0 | 0)) HEAP32[i7 >> 2] = 0;
   i5 = i5 + 1 | 0;
   i1 = HEAP32[i16 >> 2] | 0;
  }
  i2 = i8;
 }
 i5 = 0;
 while (1) {
  if ((i5 | 0) >= (i1 | 0)) break;
  if (!(HEAP32[i3 + (i5 * 80048 | 0) >> 2] | 0)) {
   i4 = i5;
   while (1) {
    i2 = i4 + 1 | 0;
    if ((i2 | 0) >= (i1 | 0)) break;
    _memcpy(i3 + (i4 * 80048 | 0) | 0, i3 + (i2 * 80048 | 0) | 0, 80048) | 0;
    i4 = i2;
    i1 = HEAP32[i16 >> 2] | 0;
   }
   i1 = i1 + -1 | 0;
   HEAP32[i16 >> 2] = i1;
  }
  i5 = i5 + 1 | 0;
 }
 L44 : do if (i15) {
  i4 = 0;
  while (1) {
   if ((i4 | 0) >= (i1 | 0)) break L44;
   HEAP32[i3 >> 2] = HEAP32[i3 >> 2] << 2;
   i2 = i3 + 8 | 0;
   HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] * 2.0;
   i2 = i3 + 16 | 0;
   HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] * 2.0;
   i2 = HEAP32[i3 + 24 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break;
    i17 = i3 + 28 + (i1 << 2) | 0;
    HEAP32[i17 >> 2] = HEAP32[i17 >> 2] << 1;
    i17 = i3 + 40028 + (i1 << 2) | 0;
    HEAP32[i17 >> 2] = HEAP32[i17 >> 2] << 1;
    i1 = i1 + 1 | 0;
   }
   i3 = i3 + 80048 | 0;
   i4 = i4 + 1 | 0;
   i1 = HEAP32[i16 >> 2] | 0;
  }
 } while (0);
 return 0;
}

function __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i2, i11, i12, i13, i14, i10, i1) {
 i2 = i2 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i15 = i16;
 i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58824) | 0;
 i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58832) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 63](i15, i5);
 i7 = i15 + 11 | 0;
 i6 = HEAP8[i7 >> 0] | 0;
 i8 = i15 + 4 | 0;
 if ((i6 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i6 & 255) | 0) {
  HEAP32[i10 >> 2] = i13;
  i1 = HEAP8[i2 >> 0] | 0;
  switch (i1 << 24 >> 24) {
  case 43:
  case 45:
   {
    i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 44 >> 2] & 63](i9, i1) | 0;
    i1 = HEAP32[i10 >> 2] | 0;
    HEAP32[i10 >> 2] = i1 + 4;
    HEAP32[i1 >> 2] = i6;
    i1 = i2 + 1 | 0;
    break;
   }
  default:
   i1 = i2;
  }
  L7 : do if ((i12 - i1 | 0) > 1 ? (HEAP8[i1 >> 0] | 0) == 48 : 0) {
   i3 = i1 + 1 | 0;
   switch (HEAP8[i3 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    break L7;
   }
   i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 44 >> 2] & 63](i9, 48) | 0;
   i4 = HEAP32[i10 >> 2] | 0;
   HEAP32[i10 >> 2] = i4 + 4;
   HEAP32[i4 >> 2] = i6;
   i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 44 >> 2] & 63](i9, HEAP8[i3 >> 0] | 0) | 0;
   i6 = HEAP32[i10 >> 2] | 0;
   HEAP32[i10 >> 2] = i6 + 4;
   HEAP32[i6 >> 2] = i4;
   i1 = i1 + 2 | 0;
  } while (0);
  L12 : do if ((i1 | 0) != (i12 | 0)) {
   i3 = i12;
   i4 = i1;
   while (1) {
    i3 = i3 + -1 | 0;
    if (i4 >>> 0 >= i3 >>> 0) break L12;
    i6 = HEAP8[i4 >> 0] | 0;
    HEAP8[i4 >> 0] = HEAP8[i3 >> 0] | 0;
    HEAP8[i3 >> 0] = i6;
    i4 = i4 + 1 | 0;
   }
  } while (0);
  i6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] & 127](i5) | 0;
  i5 = i1;
  i3 = 0;
  i4 = 0;
  while (1) {
   if (i5 >>> 0 >= i12 >>> 0) break;
   i17 = HEAP8[((HEAP8[i7 >> 0] | 0) < 0 ? HEAP32[i15 >> 2] | 0 : i15) + i3 >> 0] | 0;
   if (i17 << 24 >> 24 != 0 & (i4 | 0) == (i17 << 24 >> 24 | 0)) {
    i4 = HEAP32[i10 >> 2] | 0;
    HEAP32[i10 >> 2] = i4 + 4;
    HEAP32[i4 >> 2] = i6;
    i4 = HEAP8[i7 >> 0] | 0;
    i3 = i3 + (i3 >>> 0 < ((i4 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i4 & 255) + -1 | 0) >>> 0 & 1) | 0;
    i4 = 0;
   }
   i18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 44 >> 2] & 63](i9, HEAP8[i5 >> 0] | 0) | 0;
   i17 = HEAP32[i10 >> 2] | 0;
   HEAP32[i10 >> 2] = i17 + 4;
   HEAP32[i17 >> 2] = i18;
   i5 = i5 + 1 | 0;
   i4 = i4 + 1 | 0;
  }
  i1 = i13 + (i1 - i2 << 2) | 0;
  i3 = HEAP32[i10 >> 2] | 0;
  if ((i1 | 0) != (i3 | 0)) {
   while (1) {
    i3 = i3 + -4 | 0;
    if (i1 >>> 0 >= i3 >>> 0) break;
    i18 = HEAP32[i1 >> 2] | 0;
    HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
    HEAP32[i3 >> 2] = i18;
    i1 = i1 + 4 | 0;
   }
   i1 = HEAP32[i10 >> 2] | 0;
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 48 >> 2] & 15](i9, i2, i12, i13) | 0;
  i1 = i13 + (i12 - i2 << 2) | 0;
  HEAP32[i10 >> 2] = i1;
 }
 HEAP32[i14 >> 2] = (i11 | 0) == (i12 | 0) ? i1 : i13 + (i11 - i2 << 2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i15);
 STACKTOP = i16;
 return;
}

function _arParamDecompMat(i3, i6, i4) {
 i3 = i3 | 0;
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i7 = 0, d8 = 0.0, d9 = 0.0, i10 = 0, i11 = 0, i12 = 0, d13 = 0.0, d14 = 0.0, i15 = 0, i16 = 0, d17 = 0.0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, d22 = 0.0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i5 = i7;
 L1 : do if (!(+HEAPF64[i3 + 88 >> 3] >= 0.0)) {
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break L1;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 4) break;
    HEAPF64[i5 + (i1 << 5) + (i2 << 3) >> 3] = -+HEAPF64[i3 + (i1 << 5) + (i2 << 3) >> 3];
    i2 = i2 + 1 | 0;
   }
   i1 = i1 + 1 | 0;
  }
 } else {
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break L1;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 4) break;
    HEAPF64[i5 + (i1 << 5) + (i2 << 3) >> 3] = +HEAPF64[i3 + (i1 << 5) + (i2 << 3) >> 3];
    i2 = i2 + 1 | 0;
   }
   i1 = i1 + 1 | 0;
  }
 } while (0);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 4) break;
   HEAPF64[i6 + (i1 << 5) + (i2 << 3) >> 3] = 0.0;
   i2 = i2 + 1 | 0;
  }
  i1 = i1 + 1 | 0;
 }
 d8 = +HEAPF64[i5 + 64 >> 3];
 d13 = +HEAPF64[i5 + 72 >> 3];
 d14 = +HEAPF64[i5 + 80 >> 3];
 d22 = +_norm(d8, d13, d14);
 i3 = i6 + 80 | 0;
 HEAPF64[i3 >> 3] = d22;
 d22 = d8 / d22;
 i20 = i4 + 64 | 0;
 HEAPF64[i20 >> 3] = d22;
 d13 = d13 / +HEAPF64[i3 >> 3];
 i18 = i4 + 72 | 0;
 HEAPF64[i18 >> 3] = d13;
 d14 = d14 / +HEAPF64[i3 >> 3];
 i15 = i4 + 80 | 0;
 HEAPF64[i15 >> 3] = d14;
 i12 = i4 + 88 | 0;
 HEAPF64[i12 >> 3] = +HEAPF64[i5 + 88 >> 3] / +HEAPF64[i3 >> 3];
 d8 = +HEAPF64[i5 + 32 >> 3];
 d9 = +HEAPF64[i5 + 40 >> 3];
 d17 = +HEAPF64[i5 + 48 >> 3];
 d14 = +_dot(d22, d13, d14, d8, d9, d17);
 i11 = i6 + 48 | 0;
 HEAPF64[i11 >> 3] = d14;
 d8 = d8 - d14 * +HEAPF64[i20 >> 3];
 d9 = d9 - d14 * +HEAPF64[i18 >> 3];
 d14 = d17 - d14 * +HEAPF64[i15 >> 3];
 d17 = +_norm(d8, d9, d14);
 i10 = i6 + 40 | 0;
 HEAPF64[i10 >> 3] = d17;
 i21 = i4 + 32 | 0;
 HEAPF64[i21 >> 3] = d8 / d17;
 i19 = i4 + 40 | 0;
 HEAPF64[i19 >> 3] = d9 / +HEAPF64[i10 >> 3];
 i16 = i4 + 48 | 0;
 HEAPF64[i16 >> 3] = d14 / +HEAPF64[i10 >> 3];
 d14 = +HEAPF64[i5 >> 3];
 d9 = +HEAPF64[i5 + 8 >> 3];
 d17 = +HEAPF64[i5 + 16 >> 3];
 d8 = +_dot(+HEAPF64[i20 >> 3], +HEAPF64[i18 >> 3], +HEAPF64[i15 >> 3], d14, d9, d17);
 i1 = i6 + 16 | 0;
 HEAPF64[i1 >> 3] = d8;
 d13 = +_dot(+HEAPF64[i21 >> 3], +HEAPF64[i19 >> 3], +HEAPF64[i16 >> 3], d14, d9, d17);
 i2 = i6 + 8 | 0;
 HEAPF64[i2 >> 3] = d13;
 d14 = d14 - d13 * +HEAPF64[i21 >> 3] - d8 * +HEAPF64[i20 >> 3];
 d9 = d9 - d13 * +HEAPF64[i19 >> 3] - d8 * +HEAPF64[i18 >> 3];
 d8 = d17 - d13 * +HEAPF64[i16 >> 3] - d8 * +HEAPF64[i15 >> 3];
 d13 = +_norm(d14, d9, d8);
 HEAPF64[i6 >> 3] = d13;
 HEAPF64[i4 >> 3] = d14 / d13;
 HEAPF64[i4 + 8 >> 3] = d9 / +HEAPF64[i6 >> 3];
 HEAPF64[i4 + 16 >> 3] = d8 / +HEAPF64[i6 >> 3];
 d8 = +HEAPF64[i12 >> 3];
 d9 = (+HEAPF64[i5 + 56 >> 3] - +HEAPF64[i11 >> 3] * d8) / +HEAPF64[i10 >> 3];
 HEAPF64[i4 + 56 >> 3] = d9;
 HEAPF64[i4 + 24 >> 3] = (+HEAPF64[i5 + 24 >> 3] - d9 * +HEAPF64[i2 >> 3] - d8 * +HEAPF64[i1 >> 3]) / +HEAPF64[i6 >> 3];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   i21 = i6 + (i1 << 5) + (i2 << 3) | 0;
   HEAPF64[i21 >> 3] = +HEAPF64[i21 >> 3] / +HEAPF64[i3 >> 3];
   i2 = i2 + 1 | 0;
  }
  i1 = i1 + 1 | 0;
 }
 STACKTOP = i7;
 return 0;
}

function _ar2ReadImageSetOld(i9) {
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i6 = i11 + 32 | 0;
 i5 = i11 + 24 | 0;
 i4 = i11 + 16 | 0;
 i3 = i11 + 8 | 0;
 i1 = _malloc(8) | 0;
 if (!i1) {
  _arLog(0, 3, 20581, i11);
  _exit(1);
 }
 i2 = i1 + 4 | 0;
 L4 : do if ((_fread(i2, 4, 1, i9) | 0) == 1 ? (i10 = HEAP32[i2 >> 2] | 0, (i10 | 0) >= 1) : 0) {
  i8 = _malloc(i10 << 2) | 0;
  HEAP32[i1 >> 2] = i8;
  if (!i8) {
   _arLog(0, 3, 20581, i4);
   _exit(1);
  }
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (i10 | 0)) break;
   i4 = _malloc(16) | 0;
   HEAP32[i8 + (i2 << 2) >> 2] = i4;
   if (!i4) {
    i7 = 12;
    break;
   } else i2 = i2 + 1 | 0;
  }
  if ((i7 | 0) == 12) {
   _arLog(0, 3, 20581, i5);
   _exit(1);
  }
  i3 = 0;
  while (1) {
   if ((i3 | 0) >= (i10 | 0)) {
    i7 = 44;
    break;
   }
   i2 = i8 + (i3 << 2) | 0;
   if ((_fread((HEAP32[i2 >> 2] | 0) + 4 | 0, 4, 1, i9) | 0) != 1) {
    i7 = 15;
    break;
   }
   if ((_fread((HEAP32[i2 >> 2] | 0) + 8 | 0, 4, 1, i9) | 0) != 1) {
    i7 = 22;
    break;
   }
   if ((_fread((HEAP32[i2 >> 2] | 0) + 12 | 0, 4, 1, i9) | 0) != 1) {
    i7 = 29;
    break;
   }
   i7 = HEAP32[i2 >> 2] | 0;
   i7 = _malloc(Math_imul(HEAP32[i7 + 8 >> 2] | 0, HEAP32[i7 + 4 >> 2] | 0) | 0) | 0;
   HEAP32[HEAP32[i2 >> 2] >> 2] = i7;
   if (!i7) {
    i7 = 36;
    break;
   }
   i5 = HEAP32[i2 >> 2] | 0;
   i5 = _fread(HEAP32[i5 >> 2] | 0, 1, Math_imul(HEAP32[i5 + 8 >> 2] | 0, HEAP32[i5 + 4 >> 2] | 0) | 0, i9) | 0;
   i7 = HEAP32[i2 >> 2] | 0;
   i3 = i3 + 1 | 0;
   if ((i5 | 0) != (Math_imul(HEAP32[i7 + 8 >> 2] | 0, HEAP32[i7 + 4 >> 2] | 0) | 0)) {
    i7 = 38;
    break;
   }
  }
  L23 : do if ((i7 | 0) == 15) {
   i2 = 0;
   while (1) {
    if ((i2 | 0) == (i3 | 0)) break;
    _free(HEAP32[HEAP32[i8 + (i2 << 2) >> 2] >> 2] | 0);
    i2 = i2 + 1 | 0;
   }
   i2 = 0;
   while (1) {
    if ((i2 | 0) == (i10 | 0)) break L23;
    _free(HEAP32[i8 + (i2 << 2) >> 2] | 0);
    i2 = i2 + 1 | 0;
   }
  } else if ((i7 | 0) == 22) {
   i2 = 0;
   while (1) {
    if ((i2 | 0) == (i3 | 0)) break;
    _free(HEAP32[HEAP32[i8 + (i2 << 2) >> 2] >> 2] | 0);
    i2 = i2 + 1 | 0;
   }
   i2 = 0;
   while (1) {
    if ((i2 | 0) == (i10 | 0)) break L23;
    _free(HEAP32[i8 + (i2 << 2) >> 2] | 0);
    i2 = i2 + 1 | 0;
   }
  } else if ((i7 | 0) == 29) {
   i2 = 0;
   while (1) {
    if ((i2 | 0) == (i3 | 0)) break;
    _free(HEAP32[HEAP32[i8 + (i2 << 2) >> 2] >> 2] | 0);
    i2 = i2 + 1 | 0;
   }
   i2 = 0;
   while (1) {
    if ((i2 | 0) == (i10 | 0)) break L23;
    _free(HEAP32[i8 + (i2 << 2) >> 2] | 0);
    i2 = i2 + 1 | 0;
   }
  } else if ((i7 | 0) == 36) {
   _arLog(0, 3, 20581, i6);
   _exit(1);
  } else if ((i7 | 0) == 38) {
   i2 = 0;
   while (1) {
    if ((i2 | 0) == (i3 | 0)) break;
    _free(HEAP32[HEAP32[i8 + (i2 << 2) >> 2] >> 2] | 0);
    i2 = i2 + 1 | 0;
   }
   i2 = 0;
   while (1) {
    if ((i2 | 0) == (i10 | 0)) break L23;
    _free(HEAP32[i8 + (i2 << 2) >> 2] | 0);
    i2 = i2 + 1 | 0;
   }
  } else if ((i7 | 0) == 44) {
   _fclose(i9) | 0;
   break L4;
  } while (0);
  _free(i8);
  i7 = 46;
 } else i7 = 5; while (0);
 if ((i7 | 0) == 5) {
  _arLog(0, 3, 19477, i3);
  i7 = 46;
 }
 if ((i7 | 0) == 46) {
  _free(i1);
  _fclose(i9) | 0;
  i1 = 0;
 }
 STACKTOP = i11;
 return i1 | 0;
}

function __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i2, i11, i12, i13, i14, i10, i1) {
 i2 = i2 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i15 = i16;
 i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
 i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58808) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 63](i15, i5);
 i7 = i15 + 11 | 0;
 i6 = HEAP8[i7 >> 0] | 0;
 i8 = i15 + 4 | 0;
 if ((i6 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i6 & 255) | 0) {
  HEAP32[i10 >> 2] = i13;
  i1 = HEAP8[i2 >> 0] | 0;
  switch (i1 << 24 >> 24) {
  case 43:
  case 45:
   {
    i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, i1) | 0;
    i1 = HEAP32[i10 >> 2] | 0;
    HEAP32[i10 >> 2] = i1 + 1;
    HEAP8[i1 >> 0] = i6;
    i1 = i2 + 1 | 0;
    break;
   }
  default:
   i1 = i2;
  }
  L7 : do if ((i12 - i1 | 0) > 1 ? (HEAP8[i1 >> 0] | 0) == 48 : 0) {
   i3 = i1 + 1 | 0;
   switch (HEAP8[i3 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    break L7;
   }
   i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 48) | 0;
   i4 = HEAP32[i10 >> 2] | 0;
   HEAP32[i10 >> 2] = i4 + 1;
   HEAP8[i4 >> 0] = i6;
   i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, HEAP8[i3 >> 0] | 0) | 0;
   i6 = HEAP32[i10 >> 2] | 0;
   HEAP32[i10 >> 2] = i6 + 1;
   HEAP8[i6 >> 0] = i4;
   i1 = i1 + 2 | 0;
  } while (0);
  L12 : do if ((i1 | 0) != (i12 | 0)) {
   i3 = i12;
   i4 = i1;
   while (1) {
    i3 = i3 + -1 | 0;
    if (i4 >>> 0 >= i3 >>> 0) break L12;
    i6 = HEAP8[i4 >> 0] | 0;
    HEAP8[i4 >> 0] = HEAP8[i3 >> 0] | 0;
    HEAP8[i3 >> 0] = i6;
    i4 = i4 + 1 | 0;
   }
  } while (0);
  i6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] & 127](i5) | 0;
  i5 = i1;
  i3 = 0;
  i4 = 0;
  while (1) {
   if (i5 >>> 0 >= i12 >>> 0) break;
   i17 = HEAP8[((HEAP8[i7 >> 0] | 0) < 0 ? HEAP32[i15 >> 2] | 0 : i15) + i3 >> 0] | 0;
   if (i17 << 24 >> 24 != 0 & (i4 | 0) == (i17 << 24 >> 24 | 0)) {
    i4 = HEAP32[i10 >> 2] | 0;
    HEAP32[i10 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i6;
    i4 = HEAP8[i7 >> 0] | 0;
    i3 = i3 + (i3 >>> 0 < ((i4 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i4 & 255) + -1 | 0) >>> 0 & 1) | 0;
    i4 = 0;
   }
   i18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, HEAP8[i5 >> 0] | 0) | 0;
   i17 = HEAP32[i10 >> 2] | 0;
   HEAP32[i10 >> 2] = i17 + 1;
   HEAP8[i17 >> 0] = i18;
   i5 = i5 + 1 | 0;
   i4 = i4 + 1 | 0;
  }
  i1 = i13 + (i1 - i2) | 0;
  i3 = HEAP32[i10 >> 2] | 0;
  if ((i1 | 0) != (i3 | 0)) {
   while (1) {
    i3 = i3 + -1 | 0;
    if (i1 >>> 0 >= i3 >>> 0) break;
    i18 = HEAP8[i1 >> 0] | 0;
    HEAP8[i1 >> 0] = HEAP8[i3 >> 0] | 0;
    HEAP8[i3 >> 0] = i18;
    i1 = i1 + 1 | 0;
   }
   i1 = HEAP32[i10 >> 2] | 0;
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 32 >> 2] & 15](i9, i2, i12, i13) | 0;
  i1 = i13 + (i12 - i2) | 0;
  HEAP32[i10 >> 2] = i1;
 }
 HEAP32[i14 >> 2] = (i11 | 0) == (i12 | 0) ? i1 : i13 + (i11 - i2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i15);
 STACKTOP = i16;
 return;
}

function __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEEixERSD_(i15, i1) {
 i15 = i15 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i16 = i17 + 4 | 0;
 i9 = i17;
 i10 = i17 + 16 | 0;
 HEAP32[i9 >> 2] = i1;
 i14 = HEAP32[i1 >> 2] | 0;
 i12 = i15 + 4 | 0;
 i6 = HEAP32[i12 >> 2] | 0;
 i13 = (i6 | 0) == 0;
 L1 : do if (!i13) {
  i8 = i6 + -1 | 0;
  i3 = (i8 & i6 | 0) == 0;
  if (!i3) if (i14 >>> 0 < i6 >>> 0) i7 = i14; else i7 = (i14 >>> 0) % (i6 >>> 0) | 0; else i7 = i8 & i14;
  i1 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i7 << 2) >> 2] | 0;
  if (!i1) {
   i1 = i7;
   i11 = 16;
  } else do {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = i7;
    i11 = 16;
    break L1;
   }
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if ((i2 | 0) != (i14 | 0)) {
    if (!i3) {
     if (i2 >>> 0 >= i6 >>> 0) i2 = (i2 >>> 0) % (i6 >>> 0) | 0;
    } else i2 = i2 & i8;
    if ((i2 | 0) != (i7 | 0)) {
     i1 = i7;
     i11 = 16;
     break L1;
    }
   }
  } while ((HEAP32[i1 + 8 >> 2] | 0) != (i14 | 0));
 } else {
  i1 = 0;
  i11 = 16;
 } while (0);
 if ((i11 | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS6_ISW_EEEEEEmOT_DpOT0_(i16, i15, i14, 59232, i9, i10);
  i7 = i15 + 12 | 0;
  d4 = +(((HEAP32[i7 >> 2] | 0) + 1 | 0) >>> 0);
  d5 = +HEAPF32[i15 + 16 >> 2];
  do if (i13 | d5 * +(i6 >>> 0) < d4) {
   i1 = i6 << 1 | (i6 >>> 0 < 3 | (i6 + -1 & i6 | 0) != 0) & 1;
   i2 = ~~+Math_ceil(+(d4 / d5)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE6rehashEm(i15, i1 >>> 0 < i2 >>> 0 ? i2 : i1);
   i1 = HEAP32[i12 >> 2] | 0;
   i2 = i1 + -1 | 0;
   if (!(i2 & i1)) {
    i6 = i1;
    i1 = i2 & i14;
    break;
   }
   if (i14 >>> 0 < i1 >>> 0) {
    i6 = i1;
    i1 = i14;
   } else {
    i6 = i1;
    i1 = (i14 >>> 0) % (i1 >>> 0) | 0;
   }
  } while (0);
  i2 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] | 0;
  if (!i2) {
   i3 = i15 + 8 | 0;
   HEAP32[HEAP32[i16 >> 2] >> 2] = HEAP32[i3 >> 2];
   HEAP32[i3 >> 2] = HEAP32[i16 >> 2];
   HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] = i3;
   i3 = HEAP32[i16 >> 2] | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if (!i1) i1 = i16; else {
    i1 = HEAP32[i1 + 4 >> 2] | 0;
    i2 = i6 + -1 | 0;
    if (i2 & i6) {
     if (i1 >>> 0 >= i6 >>> 0) i1 = (i1 >>> 0) % (i6 >>> 0) | 0;
    } else i1 = i1 & i2;
    HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] = i3;
    i1 = i16;
   }
  } else {
   HEAP32[HEAP32[i16 >> 2] >> 2] = HEAP32[i2 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i16 >> 2];
   i1 = i16;
  }
  i16 = HEAP32[i1 >> 2] | 0;
  HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
  HEAP32[i1 >> 2] = 0;
  i1 = i16;
 }
 STACKTOP = i17;
 return i1 + 12 | 0;
}

function __ZNSt3__213unordered_mapIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS5_EEEEEixERSC_(i15, i1) {
 i15 = i15 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i16 = i17 + 4 | 0;
 i9 = i17;
 i10 = i17 + 16 | 0;
 HEAP32[i9 >> 2] = i1;
 i14 = HEAP32[i1 >> 2] | 0;
 i12 = i15 + 4 | 0;
 i6 = HEAP32[i12 >> 2] | 0;
 i13 = (i6 | 0) == 0;
 L1 : do if (!i13) {
  i8 = i6 + -1 | 0;
  i3 = (i8 & i6 | 0) == 0;
  if (!i3) if (i14 >>> 0 < i6 >>> 0) i7 = i14; else i7 = (i14 >>> 0) % (i6 >>> 0) | 0; else i7 = i8 & i14;
  i1 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i7 << 2) >> 2] | 0;
  if (!i1) {
   i1 = i7;
   i11 = 16;
  } else do {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = i7;
    i11 = 16;
    break L1;
   }
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if ((i2 | 0) != (i14 | 0)) {
    if (!i3) {
     if (i2 >>> 0 >= i6 >>> 0) i2 = (i2 >>> 0) % (i6 >>> 0) | 0;
    } else i2 = i2 & i8;
    if ((i2 | 0) != (i7 | 0)) {
     i1 = i7;
     i11 = 16;
     break L1;
    }
   }
  } while ((HEAP32[i1 + 8 >> 2] | 0) != (i14 | 0));
 } else {
  i1 = 0;
  i11 = 16;
 } while (0);
 if ((i11 | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_(i16, i15, i14, 59232, i9, i10);
  i7 = i15 + 12 | 0;
  d4 = +(((HEAP32[i7 >> 2] | 0) + 1 | 0) >>> 0);
  d5 = +HEAPF32[i15 + 16 >> 2];
  do if (i13 | d5 * +(i6 >>> 0) < d4) {
   i1 = i6 << 1 | (i6 >>> 0 < 3 | (i6 + -1 & i6 | 0) != 0) & 1;
   i2 = ~~+Math_ceil(+(d4 / d5)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE6rehashEm(i15, i1 >>> 0 < i2 >>> 0 ? i2 : i1);
   i1 = HEAP32[i12 >> 2] | 0;
   i2 = i1 + -1 | 0;
   if (!(i2 & i1)) {
    i6 = i1;
    i1 = i2 & i14;
    break;
   }
   if (i14 >>> 0 < i1 >>> 0) {
    i6 = i1;
    i1 = i14;
   } else {
    i6 = i1;
    i1 = (i14 >>> 0) % (i1 >>> 0) | 0;
   }
  } while (0);
  i2 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] | 0;
  if (!i2) {
   i3 = i15 + 8 | 0;
   HEAP32[HEAP32[i16 >> 2] >> 2] = HEAP32[i3 >> 2];
   HEAP32[i3 >> 2] = HEAP32[i16 >> 2];
   HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] = i3;
   i3 = HEAP32[i16 >> 2] | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if (!i1) i1 = i16; else {
    i1 = HEAP32[i1 + 4 >> 2] | 0;
    i2 = i6 + -1 | 0;
    if (i2 & i6) {
     if (i1 >>> 0 >= i6 >>> 0) i1 = (i1 >>> 0) % (i6 >>> 0) | 0;
    } else i1 = i1 & i2;
    HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] = i3;
    i1 = i16;
   }
  } else {
   HEAP32[HEAP32[i16 >> 2] >> 2] = HEAP32[i2 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i16 >> 2];
   i1 = i16;
  }
  i16 = HEAP32[i1 >> 2] | 0;
  HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
  HEAP32[i1 >> 2] = 0;
  i1 = i16;
 }
 STACKTOP = i17;
 return i1 + 12 | 0;
}

function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE(i1, i11, i13, i6, i2, i14, i8) {
 i1 = i1 | 0;
 i11 = i11 | 0;
 i13 = i13 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i14 = i14 | 0;
 i8 = i8 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0, i10 = 0, i12 = 0, i15 = 0, i16 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(432);
 i3 = i17 + 424 | 0;
 i1 = i17;
 i16 = i17 + 416 | 0;
 i7 = i17 + 408 | 0;
 i12 = i17 + 400 | 0;
 i4 = i17 + 428 | 0;
 i9 = i17 + 404 | 0;
 HEAP32[i16 >> 2] = i1;
 HEAP32[i16 + 4 >> 2] = 143;
 __ZNKSt3__28ios_base6getlocEv(i12, i2);
 i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58824) | 0;
 HEAP8[i4 >> 0] = 0;
 i10 = HEAP32[i13 >> 2] | 0;
 HEAP32[i9 >> 2] = i10;
 i2 = HEAP32[i2 + 4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
 i9 = i10;
 if (__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(i11, i3, i6, i12, i2, i14, i4, i5, i16, i7, i1 + 400 | 0) | 0) {
  i1 = i8 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i6 = HEAP32[i8 >> 2] | 0;
   HEAP32[i3 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i6, i3);
   HEAP32[i8 + 4 >> 2] = 0;
  } else {
   HEAP32[i3 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i8, i3);
   HEAP8[i1 >> 0] = 0;
  }
  if (HEAP8[i4 >> 0] | 0) __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i8, FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 44 >> 2] & 63](i5, 45) | 0);
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 44 >> 2] & 63](i5, 48) | 0;
  i2 = HEAP32[i7 >> 2] | 0;
  i3 = i2 + -4 | 0;
  i1 = HEAP32[i16 >> 2] | 0;
  while (1) {
   if (i1 >>> 0 >= i3 >>> 0) break;
   if ((HEAP32[i1 >> 2] | 0) != (i4 | 0)) break;
   i1 = i1 + 4 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_(i8, i1, i2) | 0;
 }
 i1 = HEAP32[i11 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i11 >> 2] = 0;
   i2 = 1;
   break;
  } else {
   i2 = (HEAP32[i11 >> 2] | 0) == 0;
   break;
  }
 } else i2 = 1; while (0);
 do if (i10) {
  i1 = HEAP32[i9 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i9 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 36 >> 2] & 127](i9) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break; else {
   i15 = 27;
   break;
  } else {
   HEAP32[i13 >> 2] = 0;
   i15 = 25;
   break;
  }
 } else i15 = 25; while (0);
 if ((i15 | 0) == 25 ? i2 : 0) i15 = 27;
 if ((i15 | 0) == 27) HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 2;
 i2 = HEAP32[i11 >> 2] | 0;
 __ZNSt3__26localeD2Ev(i12);
 i1 = HEAP32[i16 >> 2] | 0;
 HEAP32[i16 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i16 + 4 >> 2] & 255](i1);
 STACKTOP = i17;
 return i2 | 0;
}

function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE(i1, i11, i13, i6, i2, i14, i8) {
 i1 = i1 | 0;
 i11 = i11 | 0;
 i13 = i13 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i14 = i14 | 0;
 i8 = i8 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0, i10 = 0, i12 = 0, i15 = 0, i16 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 i3 = i17 + 120 | 0;
 i1 = i17;
 i16 = i17 + 112 | 0;
 i7 = i17 + 108 | 0;
 i12 = i17 + 100 | 0;
 i4 = i17 + 124 | 0;
 i9 = i17 + 104 | 0;
 HEAP32[i16 >> 2] = i1;
 HEAP32[i16 + 4 >> 2] = 143;
 __ZNKSt3__28ios_base6getlocEv(i12, i2);
 i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58792) | 0;
 HEAP8[i4 >> 0] = 0;
 i10 = HEAP32[i13 >> 2] | 0;
 HEAP32[i9 >> 2] = i10;
 i2 = HEAP32[i2 + 4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
 i9 = i10;
 if (__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(i11, i3, i6, i12, i2, i14, i4, i5, i16, i7, i1 + 100 | 0) | 0) {
  i1 = i8 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   i6 = HEAP32[i8 >> 2] | 0;
   HEAP8[i3 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i6, i3);
   HEAP32[i8 + 4 >> 2] = 0;
  } else {
   HEAP8[i3 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i3);
   HEAP8[i1 >> 0] = 0;
  }
  if (HEAP8[i4 >> 0] | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i8, FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, 45) | 0);
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, 48) | 0;
  i2 = HEAP32[i7 >> 2] | 0;
  i3 = i2 + -1 | 0;
  i1 = HEAP32[i16 >> 2] | 0;
  while (1) {
   if (i1 >>> 0 >= i3 >>> 0) break;
   if ((HEAP8[i1 >> 0] | 0) != i4 << 24 >> 24) break;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_(i8, i1, i2) | 0;
 }
 i1 = HEAP32[i11 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i11 >> 2] = 0;
   i2 = 1;
   break;
  } else {
   i2 = (HEAP32[i11 >> 2] | 0) == 0;
   break;
  }
 } else i2 = 1; while (0);
 do if (i10) {
  i1 = HEAP32[i9 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i9 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 36 >> 2] & 127](i9) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break; else {
   i15 = 27;
   break;
  } else {
   HEAP32[i13 >> 2] = 0;
   i15 = 25;
   break;
  }
 } else i15 = 25; while (0);
 if ((i15 | 0) == 25 ? i2 : 0) i15 = 27;
 if ((i15 | 0) == 27) HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 2;
 i2 = HEAP32[i11 >> 2] | 0;
 __ZNSt3__26localeD2Ev(i12);
 i1 = HEAP32[i16 >> 2] | 0;
 HEAP32[i16 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i16 + 4 >> 2] & 255](i1);
 STACKTOP = i17;
 return i2 | 0;
}

function __ZNSt3__213unordered_mapIiNS_6vectorIiNS_9allocatorIiEEEENS_4hashIiEENS_8equal_toIiEENS2_INS_4pairIKiS4_EEEEEixERSA_(i15, i1) {
 i15 = i15 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i16 = i17 + 4 | 0;
 i9 = i17;
 i10 = i17 + 16 | 0;
 HEAP32[i9 >> 2] = i1;
 i14 = HEAP32[i1 >> 2] | 0;
 i12 = i15 + 4 | 0;
 i6 = HEAP32[i12 >> 2] | 0;
 i13 = (i6 | 0) == 0;
 L1 : do if (!i13) {
  i8 = i6 + -1 | 0;
  i3 = (i8 & i6 | 0) == 0;
  if (!i3) if (i14 >>> 0 < i6 >>> 0) i7 = i14; else i7 = (i14 >>> 0) % (i6 >>> 0) | 0; else i7 = i8 & i14;
  i1 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i7 << 2) >> 2] | 0;
  if (!i1) {
   i1 = i7;
   i11 = 16;
  } else do {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = i7;
    i11 = 16;
    break L1;
   }
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if ((i2 | 0) != (i14 | 0)) {
    if (!i3) {
     if (i2 >>> 0 >= i6 >>> 0) i2 = (i2 >>> 0) % (i6 >>> 0) | 0;
    } else i2 = i2 & i8;
    if ((i2 | 0) != (i7 | 0)) {
     i1 = i7;
     i11 = 16;
     break L1;
    }
   }
  } while ((HEAP32[i1 + 8 >> 2] | 0) != (i14 | 0));
 } else {
  i1 = 0;
  i11 = 16;
 } while (0);
 if ((i11 | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_(i16, i15, i14, 59232, i9, i10);
  i7 = i15 + 12 | 0;
  d4 = +(((HEAP32[i7 >> 2] | 0) + 1 | 0) >>> 0);
  d5 = +HEAPF32[i15 + 16 >> 2];
  do if (i13 | d5 * +(i6 >>> 0) < d4) {
   i1 = i6 << 1 | (i6 >>> 0 < 3 | (i6 + -1 & i6 | 0) != 0) & 1;
   i2 = ~~+Math_ceil(+(d4 / d5)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE6rehashEm(i15, i1 >>> 0 < i2 >>> 0 ? i2 : i1);
   i1 = HEAP32[i12 >> 2] | 0;
   i2 = i1 + -1 | 0;
   if (!(i2 & i1)) {
    i6 = i1;
    i1 = i2 & i14;
    break;
   }
   if (i14 >>> 0 < i1 >>> 0) {
    i6 = i1;
    i1 = i14;
   } else {
    i6 = i1;
    i1 = (i14 >>> 0) % (i1 >>> 0) | 0;
   }
  } while (0);
  i2 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] | 0;
  if (!i2) {
   i3 = i15 + 8 | 0;
   HEAP32[HEAP32[i16 >> 2] >> 2] = HEAP32[i3 >> 2];
   HEAP32[i3 >> 2] = HEAP32[i16 >> 2];
   HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] = i3;
   i3 = HEAP32[i16 >> 2] | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if (!i1) i1 = i16; else {
    i1 = HEAP32[i1 + 4 >> 2] | 0;
    i2 = i6 + -1 | 0;
    if (i2 & i6) {
     if (i1 >>> 0 >= i6 >>> 0) i1 = (i1 >>> 0) % (i6 >>> 0) | 0;
    } else i1 = i1 & i2;
    HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] = i3;
    i1 = i16;
   }
  } else {
   HEAP32[HEAP32[i16 >> 2] >> 2] = HEAP32[i2 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i16 >> 2];
   i1 = i16;
  }
  i16 = HEAP32[i1 >> 2] | 0;
  HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
  HEAP32[i1 >> 2] = 0;
  i1 = i16;
 }
 STACKTOP = i17;
 return i1 + 12 | 0;
}

function ___get_locale(i12, i1) {
 i12 = i12 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(272);
 i10 = i13;
 i11 = i13 + 256 | 0;
 do if (!(HEAP8[i1 >> 0] | 0)) {
  i1 = _getenv(47021) | 0;
  if (i1 | 0 ? HEAP8[i1 >> 0] | 0 : 0) break;
  i1 = _getenv(6400 + (i12 * 12 | 0) | 0) | 0;
  if (i1 | 0 ? HEAP8[i1 >> 0] | 0 : 0) break;
  i1 = _getenv(47028) | 0;
  if (i1 | 0 ? HEAP8[i1 >> 0] | 0 : 0) break;
  i1 = 47033;
 } while (0);
 i2 = 0;
 L13 : while (1) {
  switch (HEAP8[i1 + i2 >> 0] | 0) {
  case 47:
  case 0:
   break L13;
  default:
   {}
  }
  i2 = i2 + 1 | 0;
  if (i2 >>> 0 >= 15) {
   i2 = 15;
   break;
  }
 }
 i3 = HEAP8[i1 >> 0] | 0;
 if (i3 << 24 >> 24 != 46 ? (HEAP8[i1 + i2 >> 0] | 0) == 0 : 0) if (i3 << 24 >> 24 == 67) i9 = 15; else {
  i8 = i1;
  i9 = 16;
 } else {
  i1 = 47033;
  i9 = 15;
 }
 if ((i9 | 0) == 15) if (!(HEAP8[i1 + 1 >> 0] | 0)) i9 = 18; else {
  i8 = i1;
  i9 = 16;
 }
 L22 : do if ((i9 | 0) == 16) if ((_strcmp(i8, 47033) | 0) != 0 ? (_strcmp(i8, 47041) | 0) != 0 : 0) {
  i1 = HEAP32[14304] | 0;
  if (i1 | 0) do {
   if (!(_strcmp(i8, i1 + 8 | 0) | 0)) break L22;
   i1 = HEAP32[i1 + 24 >> 2] | 0;
  } while ((i1 | 0) != 0);
  ___lock(57220);
  i1 = HEAP32[14304] | 0;
  L32 : do if (i1 | 0) {
   while (1) {
    if (!(_strcmp(i8, i1 + 8 | 0) | 0)) break;
    i1 = HEAP32[i1 + 24 >> 2] | 0;
    if (!i1) break L32;
   }
   ___unlock(57220);
   break L22;
  } while (0);
  L39 : do if (((HEAP32[14277] | 0) == 0 ? (i4 = _getenv(47047) | 0, (i4 | 0) != 0) : 0) ? (HEAP8[i4 >> 0] | 0) != 0 : 0) {
   i6 = 254 - i2 | 0;
   i7 = i2 + 1 | 0;
   i3 = i4;
   while (1) {
    i5 = ___strchrnul(i3, 58) | 0;
    i1 = HEAP8[i5 >> 0] | 0;
    i4 = i5 - i3 + ((i1 << 24 >> 24 != 0) << 31 >> 31) | 0;
    if (i4 >>> 0 < i6 >>> 0) {
     _memcpy(i10 | 0, i3 | 0, i4 | 0) | 0;
     i3 = i10 + i4 | 0;
     HEAP8[i3 >> 0] = 47;
     _memcpy(i3 + 1 | 0, i8 | 0, i2 | 0) | 0;
     HEAP8[i10 + (i7 + i4) >> 0] = 0;
     i3 = ___map_file(i10 | 0, i11 | 0) | 0;
     if (i3 | 0) break;
     i1 = HEAP8[i5 >> 0] | 0;
    }
    i3 = i5 + (i1 << 24 >> 24 != 0 & 1) | 0;
    if (!(HEAP8[i3 >> 0] | 0)) {
     i9 = 41;
     break L39;
    }
   }
   i1 = _malloc(28) | 0;
   if (!i1) {
    ___munmap(i3, HEAP32[i11 >> 2] | 0) | 0;
    i9 = 41;
    break;
   } else {
    HEAP32[i1 >> 2] = i3;
    HEAP32[i1 + 4 >> 2] = HEAP32[i11 >> 2];
    i11 = i1 + 8 | 0;
    _memcpy(i11 | 0, i8 | 0, i2 | 0) | 0;
    HEAP8[i11 + i2 >> 0] = 0;
    HEAP32[i1 + 24 >> 2] = HEAP32[14304];
    HEAP32[14304] = i1;
    break;
   }
  } else i9 = 41; while (0);
  if ((i9 | 0) == 41) {
   i1 = _malloc(28) | 0;
   if (i1) {
    HEAP32[i1 >> 2] = HEAP32[3440];
    HEAP32[i1 + 4 >> 2] = HEAP32[3441];
    i11 = i1 + 8 | 0;
    _memcpy(i11 | 0, i8 | 0, i2 | 0) | 0;
    HEAP8[i11 + i2 >> 0] = 0;
    HEAP32[i1 + 24 >> 2] = HEAP32[14304];
    HEAP32[14304] = i1;
   }
  }
  ___unlock(57220);
  i1 = (i12 | 0) == 0 & (i1 | 0) == 0 ? 13760 : i1;
 } else {
  i1 = i8;
  i9 = 18;
 } while (0);
 do if ((i9 | 0) == 18) {
  if ((i12 | 0) == 0 ? (HEAP8[i1 + 1 >> 0] | 0) == 46 : 0) {
   i1 = 13760;
   break;
  }
  i1 = 0;
 } while (0);
 STACKTOP = i13;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i1, i2, i10, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i10 = i10 | 0;
 i7 = i7 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i4 = i12 + 24 | 0;
 i5 = i12;
 i6 = i12 + 12 | 0;
 i11 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i1, i2) | 0;
 if (!((i11 | 0) == (i1 | 0) | (i11 | 0) == (i2 | 0)) ? (HEAP8[i11 >> 0] | 0) == 69 : 0) {
  i8 = i10 + 11 | 0;
  i3 = HEAP8[i8 >> 0] | 0;
  i9 = i10 + 4 | 0;
  do if ((i3 << 24 >> 24 < 0 ? HEAP32[i9 >> 2] | 0 : i3 & 255) >>> 0 <= 3) {
   i2 = i7 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
    HEAP32[i3 >> 2] = 0;
    HEAP32[i3 + 4 >> 2] = 0;
    HEAP32[i3 + 8 >> 2] = 0;
    HEAP32[i3 + 12 >> 2] = 0;
    HEAP32[i3 + 16 >> 2] = 0;
    HEAP32[i3 + 20 >> 2] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev(i3);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    break;
   } else {
    __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_(i7);
    break;
   }
  } else {
   __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i6, 50526, i10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 50524) | 0;
   HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i6 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i4, i5);
   i2 = i7 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i4);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i7, i4);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  } while (0);
  i3 = i7 + 4 | 0;
  if ((HEAP8[i1 >> 0] | 0) == 110) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[i3 >> 2] | 0) + -24 | 0, 45);
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE23__append_forward_unsafeIPKcEERS7_T_SC_((HEAP32[i3 >> 2] | 0) + -24 | 0, i1, i11);
  i1 = HEAP8[i8 >> 0] | 0;
  i2 = i1 << 24 >> 24 < 0;
  i1 = i2 ? HEAP32[i9 >> 2] | 0 : i1 & 255;
  if (i1 >>> 0 < 4) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i3 >> 2] | 0) + -24 | 0, i2 ? HEAP32[i10 >> 2] | 0 : i10, i1) | 0;
  i1 = i11 + 1 | 0;
 }
 STACKTOP = i12;
 return i1 | 0;
}

function __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(i15, i1) {
 i15 = i15 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i16 = i17 + 4 | 0;
 i9 = i17;
 i10 = i17 + 16 | 0;
 HEAP32[i9 >> 2] = i1;
 i14 = HEAP32[i1 >> 2] | 0;
 i12 = i15 + 4 | 0;
 i6 = HEAP32[i12 >> 2] | 0;
 i13 = (i6 | 0) == 0;
 L1 : do if (!i13) {
  i8 = i6 + -1 | 0;
  i3 = (i8 & i6 | 0) == 0;
  if (!i3) if (i14 >>> 0 < i6 >>> 0) i7 = i14; else i7 = (i14 >>> 0) % (i6 >>> 0) | 0; else i7 = i8 & i14;
  i1 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i7 << 2) >> 2] | 0;
  if (!i1) {
   i1 = i7;
   i11 = 16;
  } else do {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = i7;
    i11 = 16;
    break L1;
   }
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if ((i2 | 0) != (i14 | 0)) {
    if (!i3) {
     if (i2 >>> 0 >= i6 >>> 0) i2 = (i2 >>> 0) % (i6 >>> 0) | 0;
    } else i2 = i2 & i8;
    if ((i2 | 0) != (i7 | 0)) {
     i1 = i7;
     i11 = 16;
     break L1;
    }
   }
  } while ((HEAP32[i1 + 8 >> 2] | 0) != (i14 | 0));
 } else {
  i1 = 0;
  i11 = 16;
 } while (0);
 if ((i11 | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINSC_ISR_EEEEEEmOT_DpOT0_(i16, i15, i14, 59233, i9, i10);
  i7 = i15 + 12 | 0;
  d4 = +(((HEAP32[i7 >> 2] | 0) + 1 | 0) >>> 0);
  d5 = +HEAPF32[i15 + 16 >> 2];
  do if (i13 | d5 * +(i6 >>> 0) < d4) {
   i1 = i6 << 1 | (i6 >>> 0 < 3 | (i6 + -1 & i6 | 0) != 0) & 1;
   i2 = ~~+Math_ceil(+(d4 / d5)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm(i15, i1 >>> 0 < i2 >>> 0 ? i2 : i1);
   i1 = HEAP32[i12 >> 2] | 0;
   i2 = i1 + -1 | 0;
   if (!(i2 & i1)) {
    i6 = i1;
    i1 = i2 & i14;
    break;
   }
   if (i14 >>> 0 < i1 >>> 0) {
    i6 = i1;
    i1 = i14;
   } else {
    i6 = i1;
    i1 = (i14 >>> 0) % (i1 >>> 0) | 0;
   }
  } while (0);
  i2 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] | 0;
  if (!i2) {
   i3 = i15 + 8 | 0;
   HEAP32[HEAP32[i16 >> 2] >> 2] = HEAP32[i3 >> 2];
   HEAP32[i3 >> 2] = HEAP32[i16 >> 2];
   HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] = i3;
   i3 = HEAP32[i16 >> 2] | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if (!i1) i1 = i16; else {
    i1 = HEAP32[i1 + 4 >> 2] | 0;
    i2 = i6 + -1 | 0;
    if (i2 & i6) {
     if (i1 >>> 0 >= i6 >>> 0) i1 = (i1 >>> 0) % (i6 >>> 0) | 0;
    } else i1 = i1 & i2;
    HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] = i3;
    i1 = i16;
   }
  } else {
   HEAP32[HEAP32[i16 >> 2] >> 2] = HEAP32[i2 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i16 >> 2];
   i1 = i16;
  }
  i16 = HEAP32[i1 >> 2] | 0;
  HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
  HEAP32[i1 >> 2] = 0;
  i1 = i16;
 }
 STACKTOP = i17;
 return i1 + 16 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i8, i9, i4) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i7 >> 2] = 0;
   i3 = 1;
   break;
  } else {
   i3 = (HEAP32[i7 >> 2] | 0) == 0;
   break;
  }
 } else i3 = 1; while (0);
 i2 = HEAP32[i8 >> 2] | 0;
 do if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i3) {
   i5 = i2;
   i6 = 17;
   break;
  } else {
   i6 = 16;
   break;
  } else {
   HEAP32[i8 >> 2] = 0;
   i6 = 14;
   break;
  }
 } else i6 = 14; while (0);
 if ((i6 | 0) == 14) if (i3) i6 = 16; else {
  i5 = 0;
  i6 = 17;
 }
 L22 : do if ((i6 | 0) == 16) HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 6; else if ((i6 | 0) == 17) {
  i1 = HEAP32[i7 >> 2] | 0;
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 52 >> 2] & 63](i4, i1, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 4;
   break;
  }
  i1 = HEAP32[i7 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
   HEAP32[i2 >> 2] = i3 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
  }
  i1 = HEAP32[i7 >> 2] | 0;
  do if (i1) {
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i7 >> 2] = 0;
    i2 = 1;
    break;
   } else {
    i2 = (HEAP32[i7 >> 2] | 0) == 0;
    break;
   }
  } else i2 = 1; while (0);
  do if (i5) {
   i1 = HEAP32[i5 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break L22; else break; else {
    HEAP32[i8 >> 2] = 0;
    i6 = 38;
    break;
   }
  } else i6 = 38; while (0);
  if ((i6 | 0) == 38 ? !i2 : 0) break;
  HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 2;
 } while (0);
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i8, i9, i4) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i7 >> 2] = 0;
   i3 = 1;
   break;
  } else {
   i3 = (HEAP32[i7 >> 2] | 0) == 0;
   break;
  }
 } else i3 = 1; while (0);
 i2 = HEAP32[i8 >> 2] | 0;
 do if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i3) {
   i5 = i2;
   i6 = 17;
   break;
  } else {
   i6 = 16;
   break;
  } else {
   HEAP32[i8 >> 2] = 0;
   i6 = 14;
   break;
  }
 } else i6 = 14; while (0);
 if ((i6 | 0) == 14) if (i3) i6 = 16; else {
  i5 = 0;
  i6 = 17;
 }
 L22 : do if ((i6 | 0) == 16) HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 6; else if ((i6 | 0) == 17) {
  i1 = HEAP32[i7 >> 2] | 0;
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 63](i4, i1 & 255, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 4;
   break;
  }
  i1 = HEAP32[i7 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
   HEAP32[i2 >> 2] = i3 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
  }
  i1 = HEAP32[i7 >> 2] | 0;
  do if (i1) {
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i7 >> 2] = 0;
    i2 = 1;
    break;
   } else {
    i2 = (HEAP32[i7 >> 2] | 0) == 0;
    break;
   }
  } else i2 = 1; while (0);
  do if (i5) {
   i1 = HEAP32[i5 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break L22; else break; else {
    HEAP32[i8 >> 2] = 0;
    i6 = 38;
    break;
   }
  } else i6 = 38; while (0);
  if ((i6 | 0) == 38 ? !i2 : 0) break;
  HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 2;
 } while (0);
 return;
}

function __ZNSt3__213unordered_mapIi7ARParamNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(i15, i1) {
 i15 = i15 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i16 = i17 + 4 | 0;
 i9 = i17;
 i10 = i17 + 16 | 0;
 HEAP32[i9 >> 2] = i1;
 i14 = HEAP32[i1 >> 2] | 0;
 i12 = i15 + 4 | 0;
 i6 = HEAP32[i12 >> 2] | 0;
 i13 = (i6 | 0) == 0;
 L1 : do if (!i13) {
  i8 = i6 + -1 | 0;
  i3 = (i8 & i6 | 0) == 0;
  if (!i3) if (i14 >>> 0 < i6 >>> 0) i7 = i14; else i7 = (i14 >>> 0) % (i6 >>> 0) | 0; else i7 = i8 & i14;
  i1 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i7 << 2) >> 2] | 0;
  if (!i1) {
   i1 = i7;
   i11 = 16;
  } else do {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = i7;
    i11 = 16;
    break L1;
   }
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if ((i2 | 0) != (i14 | 0)) {
    if (!i3) {
     if (i2 >>> 0 >= i6 >>> 0) i2 = (i2 >>> 0) % (i6 >>> 0) | 0;
    } else i2 = i2 & i8;
    if ((i2 | 0) != (i7 | 0)) {
     i1 = i7;
     i11 = 16;
     break L1;
    }
   }
  } while ((HEAP32[i1 + 8 >> 2] | 0) != (i14 | 0));
 } else {
  i1 = 0;
  i11 = 16;
 } while (0);
 if ((i11 | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINSC_ISR_EEEEEEmOT_DpOT0_(i16, i15, i14, 59233, i9, i10);
  i7 = i15 + 12 | 0;
  d4 = +(((HEAP32[i7 >> 2] | 0) + 1 | 0) >>> 0);
  d5 = +HEAPF32[i15 + 16 >> 2];
  do if (i13 | d5 * +(i6 >>> 0) < d4) {
   i1 = i6 << 1 | (i6 >>> 0 < 3 | (i6 + -1 & i6 | 0) != 0) & 1;
   i2 = ~~+Math_ceil(+(d4 / d5)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm(i15, i1 >>> 0 < i2 >>> 0 ? i2 : i1);
   i1 = HEAP32[i12 >> 2] | 0;
   i2 = i1 + -1 | 0;
   if (!(i2 & i1)) {
    i6 = i1;
    i1 = i2 & i14;
    break;
   }
   if (i14 >>> 0 < i1 >>> 0) {
    i6 = i1;
    i1 = i14;
   } else {
    i6 = i1;
    i1 = (i14 >>> 0) % (i1 >>> 0) | 0;
   }
  } while (0);
  i2 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] | 0;
  if (!i2) {
   i3 = i15 + 8 | 0;
   HEAP32[HEAP32[i16 >> 2] >> 2] = HEAP32[i3 >> 2];
   HEAP32[i3 >> 2] = HEAP32[i16 >> 2];
   HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] = i3;
   i3 = HEAP32[i16 >> 2] | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if (!i1) i1 = i16; else {
    i1 = HEAP32[i1 + 4 >> 2] | 0;
    i2 = i6 + -1 | 0;
    if (i2 & i6) {
     if (i1 >>> 0 >= i6 >>> 0) i1 = (i1 >>> 0) % (i6 >>> 0) | 0;
    } else i1 = i1 & i2;
    HEAP32[(HEAP32[i15 >> 2] | 0) + (i1 << 2) >> 2] = i3;
    i1 = i16;
   }
  } else {
   HEAP32[HEAP32[i16 >> 2] >> 2] = HEAP32[i2 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i16 >> 2];
   i1 = i16;
  }
  i16 = HEAP32[i1 >> 2] | 0;
  HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
  HEAP32[i1 >> 2] = 0;
  i1 = i16;
 }
 STACKTOP = i17;
 return i1 + 16 | 0;
}

function __ZNK6vision21HoughSimilarityVoting17mapCorrespondenceERfS1_S1_S1_ffffffff(i4, i5, i10, i11, i12, d13, d14, d2, d15, d16, d6, d1, d7) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 d13 = +d13;
 d14 = +d14;
 d2 = +d2;
 d15 = +d15;
 d16 = +d16;
 d6 = +d6;
 d1 = +d1;
 d7 = +d7;
 var i3 = 0, i8 = 0, i9 = 0, i17 = 0, i18 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i8 = i17 + 16 | 0;
 i9 = i17;
 d1 = d2 - d1;
 HEAPF32[i11 >> 2] = d1;
 d2 = d1;
 if (!(d2 <= -3.141592653589793)) {
  if (d2 > 3.141592653589793) {
   d1 = d2 + -6.283185307179586;
   i3 = 5;
  }
 } else {
  d1 = d2 + 6.283185307179586;
  i3 = 5;
 }
 if ((i3 | 0) == 5) HEAPF32[i11 >> 2] = d1;
 if (!(d1 > -3.141592653589793)) {
  i3 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30811) | 0, 30558) | 0, 33655) | 0, 468) | 0, 33662) | 0, 30846) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i18 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58792) | 0;
  i18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 28 >> 2] & 63](i18, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i18) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
  _abort();
 }
 if (!(d1 <= 3.141592653589793)) {
  i18 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30865) | 0, 30558) | 0, 33655) | 0, 469) | 0, 33662) | 0, 30846) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i18 + (HEAP32[(HEAP32[i18 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i17 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58792) | 0;
  i17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 63](i17, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i18, i17) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i18) | 0;
  _abort();
 } else {
  d1 = +__ZN6vision12SafeDivisionIfEET_S1_S1_(d15, d7);
  HEAPF32[i12 >> 2] = d1;
  __ZN6vision13Similarity2x2IfEEvPT_S1_S1_(i9, +HEAPF32[i11 >> 2], d1);
  d1 = +Math_log(+(+HEAPF32[i12 >> 2]));
  HEAPF32[i12 >> 2] = d1 * +HEAPF32[i4 + 48 >> 2];
  d1 = +HEAPF32[i9 >> 2];
  d2 = +HEAPF32[i9 + 4 >> 2];
  d7 = +HEAPF32[i9 + 8 >> 2];
  d15 = +HEAPF32[i9 + 12 >> 2];
  i12 = i4 + 8 | 0;
  i18 = i4 + 12 | 0;
  HEAPF32[i5 >> 2] = d13 - (d1 * d16 + d2 * d6) + (d1 * +HEAPF32[i12 >> 2] + d2 * +HEAPF32[i18 >> 2]);
  HEAPF32[i10 >> 2] = d14 - (d7 * d16 + d15 * d6) + (d7 * +HEAPF32[i12 >> 2] + d15 * +HEAPF32[i18 >> 2]);
  STACKTOP = i17;
  return;
 }
}

function _jpeg_make_d_derived_tbl(i16, i1, i2, i3) {
 i16 = i16 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 1312 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1312);
 i7 = i17 + 1040 | 0;
 i15 = i17;
 if (i2 >>> 0 > 3) {
  i14 = HEAP32[i16 >> 2] | 0;
  HEAP32[i14 + 20 >> 2] = 50;
  HEAP32[i14 + 24 >> 2] = i2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i16 >> 2] >> 2] & 255](i16);
 }
 i13 = (i1 | 0) != 0;
 i14 = HEAP32[(i13 ? i16 + 180 + (i2 << 2) | 0 : i16 + 196 + (i2 << 2) | 0) >> 2] | 0;
 if (!i14) {
  i12 = HEAP32[i16 >> 2] | 0;
  HEAP32[i12 + 20 >> 2] = 50;
  HEAP32[i12 + 24 >> 2] = i2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i16 >> 2] >> 2] & 255](i16);
 }
 i1 = HEAP32[i3 >> 2] | 0;
 if (!i1) {
  i1 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i16 + 4 >> 2] >> 2] & 63](i16, 1, 1424) | 0;
  HEAP32[i3 >> 2] = i1;
  i12 = i16;
 } else i12 = i16;
 HEAP32[i1 + 140 >> 2] = i14;
 i11 = 0;
 i4 = 1;
 while (1) {
  if ((i4 | 0) == 17) break;
  i2 = HEAPU8[i14 + i4 >> 0] | 0;
  i5 = i11 + i2 | 0;
  if ((i5 | 0) > 256) {
   i10 = HEAP32[i16 >> 2] | 0;
   HEAP32[i10 + 20 >> 2] = 8;
   FUNCTION_TABLE_vi[HEAP32[i10 >> 2] & 255](i12);
  }
  i6 = i4 & 255;
  i3 = i2;
  i2 = i11;
  while (1) {
   if (!i3) break;
   HEAP8[i7 + i2 >> 0] = i6;
   i3 = i3 + -1 | 0;
   i2 = i2 + 1 | 0;
  }
  i11 = i5;
  i4 = i4 + 1 | 0;
 }
 HEAP8[i7 + i11 >> 0] = 0;
 i4 = HEAP8[i7 >> 0] | 0;
 i2 = 0;
 i5 = i4 << 24 >> 24;
 i3 = 0;
 while (1) {
  if (!(i4 << 24 >> 24)) break;
  while (1) {
   if ((i5 | 0) != (i4 << 24 >> 24 | 0)) break;
   i4 = i3 + 1 | 0;
   HEAP32[i15 + (i3 << 2) >> 2] = i2;
   i2 = i2 + 1 | 0;
   i3 = i4;
   i4 = HEAP8[i7 + i4 >> 0] | 0;
  }
  if ((i2 | 0) >= (1 << i5 | 0)) {
   i10 = HEAP32[i16 >> 2] | 0;
   HEAP32[i10 + 20 >> 2] = 8;
   FUNCTION_TABLE_vi[HEAP32[i10 >> 2] & 255](i12);
  }
  i2 = i2 << 1;
  i5 = i5 + 1 | 0;
 }
 i4 = 1;
 i2 = 0;
 while (1) {
  if ((i4 | 0) == 17) break;
  i3 = i14 + i4 | 0;
  if (!(HEAP8[i3 >> 0] | 0)) i3 = -1; else {
   HEAP32[i1 + 72 + (i4 << 2) >> 2] = i2 - (HEAP32[i15 + (i2 << 2) >> 2] | 0);
   i3 = i2 + (HEAPU8[i3 >> 0] | 0) | 0;
   i2 = i3;
   i3 = HEAP32[i15 + (i3 + -1 << 2) >> 2] | 0;
  }
  HEAP32[i1 + (i4 << 2) >> 2] = i3;
  i4 = i4 + 1 | 0;
 }
 HEAP32[i1 + 68 >> 2] = 1048575;
 _memset(i1 + 144 | 0, 0, 1024) | 0;
 i7 = 1;
 i2 = 0;
 while (1) {
  if ((i7 | 0) == 9) break;
  i8 = i14 + i7 | 0;
  i9 = 8 - i7 | 0;
  i10 = 1 << i9;
  i6 = 1;
  while (1) {
   if (i6 >>> 0 > (HEAPU8[i8 >> 0] | 0) >>> 0) break;
   i5 = i14 + 17 + i2 | 0;
   i3 = i10;
   i4 = HEAP32[i15 + (i2 << 2) >> 2] << i9;
   while (1) {
    if ((i3 | 0) <= 0) break;
    HEAP32[i1 + 144 + (i4 << 2) >> 2] = i7;
    HEAP8[i1 + 1168 + i4 >> 0] = HEAP8[i5 >> 0] | 0;
    i3 = i3 + -1 | 0;
    i4 = i4 + 1 | 0;
   }
   i6 = i6 + 1 | 0;
   i2 = i2 + 1 | 0;
  }
  i7 = i7 + 1 | 0;
 }
 L52 : do if (i13) {
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i11 | 0)) break L52;
   if ((HEAPU8[i14 + 17 + i1 >> 0] | 0) > 15) {
    i15 = HEAP32[i16 >> 2] | 0;
    HEAP32[i15 + 20 >> 2] = 8;
    FUNCTION_TABLE_vi[HEAP32[i15 >> 2] & 255](i12);
   }
   i1 = i1 + 1 | 0;
  }
 } while (0);
 STACKTOP = i17;
 return;
}

function _ar2GetTransMat(i10, i11, i7, i8, i9, i18, i14) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i18 = i18 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, d3 = 0.0, d4 = 0.0, d5 = 0.0, i6 = 0, i12 = 0, d13 = 0.0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i20 = 0, d21 = 0.0, d22 = 0.0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(224);
 i15 = i20 + 212 | 0;
 i16 = i20 + 96 | 0;
 i19 = i20;
 i17 = i20 + 192 | 0;
 i2 = _malloc(i9 << 4) | 0;
 HEAP32[i15 >> 2] = i2;
 if (!i2) {
  _arLog(0, 3, 20581, i20 + 200 | 0);
  _exit(1);
 }
 i6 = _malloc(i9 * 24 | 0) | 0;
 i12 = i15 + 4 | 0;
 HEAP32[i12 >> 2] = i6;
 if (!i6) {
  _arLog(0, 3, 20581, i20 + 208 | 0);
  _exit(1);
 }
 i1 = 0;
 d5 = 0.0;
 d4 = 0.0;
 d3 = 0.0;
 while (1) {
  if ((i1 | 0) >= (i9 | 0)) break;
  d13 = d3 + +HEAPF32[i8 + (i1 * 12 | 0) >> 2];
  d21 = d4 + +HEAPF32[i8 + (i1 * 12 | 0) + 4 >> 2];
  d22 = d5 + +HEAPF32[i8 + (i1 * 12 | 0) + 8 >> 2];
  i1 = i1 + 1 | 0;
  d5 = d22;
  d4 = d21;
  d3 = d13;
 }
 d22 = +(i9 | 0);
 d13 = d3 / d22;
 d4 = d4 / d22;
 d3 = d5 / d22;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (i9 | 0)) break;
  HEAPF64[i2 + (i1 << 4) >> 3] = +HEAPF32[i7 + (i1 << 3) >> 2];
  HEAPF64[i2 + (i1 << 4) + 8 >> 3] = +HEAPF32[i7 + (i1 << 3) + 4 >> 2];
  HEAPF64[i6 + (i1 * 24 | 0) >> 3] = +HEAPF32[i8 + (i1 * 12 | 0) >> 2] - d13;
  HEAPF64[i6 + (i1 * 24 | 0) + 8 >> 3] = +HEAPF32[i8 + (i1 * 12 | 0) + 4 >> 2] - d4;
  HEAPF64[i6 + (i1 * 24 | 0) + 16 >> 3] = +HEAPF32[i8 + (i1 * 12 | 0) + 8 >> 2] - d3;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i15 + 8 >> 2] = i9;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAPF64[i16 + (i1 << 5) + (i2 << 3) >> 3] = +HEAPF32[i11 + (i1 << 4) + (i2 << 2) >> 2];
   i2 = i2 + 1 | 0;
  }
  i1 = i1 + 1 | 0;
 }
 HEAPF64[i16 + 24 >> 3] = +HEAPF32[i11 + 12 >> 2] + (d13 * +HEAPF32[i11 >> 2] + d4 * +HEAPF32[i11 + 4 >> 2] + d3 * +HEAPF32[i11 + 8 >> 2]);
 HEAPF64[i16 + 56 >> 3] = +HEAPF32[i11 + 28 >> 2] + (d13 * +HEAPF32[i11 + 16 >> 2] + d4 * +HEAPF32[i11 + 20 >> 2] + d3 * +HEAPF32[i11 + 24 >> 2]);
 HEAPF64[i16 + 88 >> 3] = +HEAPF32[i11 + 44 >> 2] + (d13 * +HEAPF32[i11 + 32 >> 2] + d4 * +HEAPF32[i11 + 36 >> 2] + d3 * +HEAPF32[i11 + 40 >> 2]);
 if (!i14) {
  if ((_icpPoint(i10, i15, i16, i19, i17) | 0) < 0) HEAPF64[i17 >> 3] = 1.0e8;
 } else if ((_icpPointRobust(i10, i15, i16, i19, i17) | 0) < 0) HEAPF64[i17 >> 3] = 1.0e8;
 _free(HEAP32[i15 >> 2] | 0);
 _free(HEAP32[i12 >> 2] | 0);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAPF32[i18 + (i1 << 4) + (i2 << 2) >> 2] = +HEAPF64[i19 + (i1 << 5) + (i2 << 3) >> 3];
   i2 = i2 + 1 | 0;
  }
  i1 = i1 + 1 | 0;
 }
 d21 = d4;
 d22 = d3;
 HEAPF32[i18 + 12 >> 2] = +HEAPF64[i19 + 24 >> 3] - +HEAPF64[i19 >> 3] * d13 - +HEAPF64[i19 + 8 >> 3] * d21 - +HEAPF64[i19 + 16 >> 3] * d22;
 HEAPF32[i18 + 28 >> 2] = +HEAPF64[i19 + 56 >> 3] - +HEAPF64[i19 + 32 >> 3] * d13 - +HEAPF64[i19 + 40 >> 3] * d21 - +HEAPF64[i19 + 48 >> 3] * d22;
 HEAPF32[i18 + 44 >> 2] = +HEAPF64[i19 + 88 >> 3] - +HEAPF64[i19 + 64 >> 3] * d13 - +HEAPF64[i19 + 72 >> 3] * d21 - +HEAPF64[i19 + 80 >> 3] * d22;
 STACKTOP = i20;
 return +(+HEAPF64[i17 >> 3]);
}

function __ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i1, i7, i8, i3, i2, i9, i10, i4) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 HEAP32[i8 >> 2] = i1;
 HEAP32[i9 >> 2] = i3;
 if (i4 & 2) if ((i2 - i3 | 0) < 3) i1 = 1; else {
  HEAP32[i9 >> 2] = i3 + 1;
  HEAP8[i3 >> 0] = -17;
  i5 = HEAP32[i9 >> 2] | 0;
  HEAP32[i9 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -69;
  i5 = HEAP32[i9 >> 2] | 0;
  HEAP32[i9 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -65;
  i5 = 4;
 } else i5 = 4;
 L4 : do if ((i5 | 0) == 4) {
  i6 = i7;
  i1 = HEAP32[i8 >> 2] | 0;
  while (1) {
   if (i1 >>> 0 >= i7 >>> 0) {
    i1 = 0;
    break L4;
   }
   i3 = HEAP16[i1 >> 1] | 0;
   i5 = i3 & 65535;
   if (i5 >>> 0 > i10 >>> 0) {
    i1 = 2;
    break L4;
   }
   do if ((i3 & 65535) < 128) {
    i1 = HEAP32[i9 >> 2] | 0;
    if ((i2 - i1 | 0) < 1) {
     i1 = 1;
     break L4;
    }
    HEAP32[i9 >> 2] = i1 + 1;
    HEAP8[i1 >> 0] = i3;
   } else {
    if ((i3 & 65535) < 2048) {
     i1 = HEAP32[i9 >> 2] | 0;
     if ((i2 - i1 | 0) < 2) {
      i1 = 1;
      break L4;
     }
     HEAP32[i9 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i5 >>> 6 | 192;
     i4 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 & 63 | 128;
     break;
    }
    if ((i3 & 65535) < 55296) {
     i1 = HEAP32[i9 >> 2] | 0;
     if ((i2 - i1 | 0) < 3) {
      i1 = 1;
      break L4;
     }
     HEAP32[i9 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i5 >>> 12 | 224;
     i4 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 >>> 6 & 63 | 128;
     i4 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 & 63 | 128;
     break;
    }
    if ((i3 & 65535) >= 56320) {
     if ((i3 & 65535) < 57344) {
      i1 = 2;
      break L4;
     }
     i1 = HEAP32[i9 >> 2] | 0;
     if ((i2 - i1 | 0) < 3) {
      i1 = 1;
      break L4;
     }
     HEAP32[i9 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i5 >>> 12 | 224;
     i4 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 >>> 6 & 63 | 128;
     i4 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 & 63 | 128;
     break;
    }
    if ((i6 - i1 | 0) < 4) {
     i1 = 1;
     break L4;
    }
    i1 = i1 + 2 | 0;
    i3 = HEAPU16[i1 >> 1] | 0;
    if ((i3 & 64512 | 0) != 56320) {
     i1 = 2;
     break L4;
    }
    if ((i2 - (HEAP32[i9 >> 2] | 0) | 0) < 4) {
     i1 = 1;
     break L4;
    }
    i4 = i5 & 960;
    if (((i4 << 10) + 65536 | i5 << 10 & 64512 | i3 & 1023) >>> 0 > i10 >>> 0) {
     i1 = 2;
     break L4;
    }
    HEAP32[i8 >> 2] = i1;
    i1 = (i4 >>> 6) + 1 | 0;
    i4 = HEAP32[i9 >> 2] | 0;
    HEAP32[i9 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i1 >>> 2 | 240;
    i4 = HEAP32[i9 >> 2] | 0;
    HEAP32[i9 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i5 >>> 2 & 15 | i1 << 4 & 48 | 128;
    i4 = HEAP32[i9 >> 2] | 0;
    HEAP32[i9 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i5 << 4 & 48 | i3 >>> 6 & 15 | 128;
    i5 = HEAP32[i9 >> 2] | 0;
    HEAP32[i9 >> 2] = i5 + 1;
    HEAP8[i5 >> 0] = i3 & 63 | 128;
   } while (0);
   i1 = (HEAP32[i8 >> 2] | 0) + 2 | 0;
   HEAP32[i8 >> 2] = i1;
  }
 } while (0);
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i5) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i7;
 L1 : do if ((i4 - i1 | 0) > 1) {
  i2 = HEAP8[i1 >> 0] | 0;
  switch (i2 << 24 >> 24) {
  case 100:
  case 111:
   {
    if ((HEAP8[i1 + 1 >> 0] | 0) == 110) {
     i3 = i1 + 2 | 0;
     if (i2 << 24 >> 24 != 111) {
      i6 = __ZN10__cxxabiv112_GLOBAL__N_121parse_destructor_nameINS0_2DbEEEPKcS4_S4_RT_(i3, i4, i5) | 0;
      i1 = (i6 | 0) == (i3 | 0) ? i1 : i6;
      break L1;
     }
     i2 = __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_(i3, i4, i5) | 0;
     if ((i2 | 0) == (i3 | 0)) break L1;
     i1 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i2, i4, i5) | 0;
     if ((i1 | 0) == (i2 | 0)) {
      i1 = i2;
      break L1;
     }
     i4 = i5 + 4 | 0;
     i2 = HEAP32[i4 >> 2] | 0;
     if (((i2 - (HEAP32[i5 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, i2 + -24 | 0);
     i3 = HEAP32[i4 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == -1) break;
      i5 = i2 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i5 * 24 | 0) | 0);
      i2 = i5;
     }
     HEAP32[i4 >> 2] = i3 + -24;
     i5 = HEAP8[i6 + 11 >> 0] | 0;
     i4 = i5 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i3 + -48 | 0, i4 ? HEAP32[i6 >> 2] | 0 : i6, i4 ? HEAP32[i6 + 4 >> 2] | 0 : i5 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
     break L1;
    }
    break;
   }
  default:
   {}
  }
  i2 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i5) | 0;
  if ((i2 | 0) == (i1 | 0)) {
   i2 = __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i5) | 0;
   if ((i2 | 0) != (i1 | 0)) {
    i1 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i2, i4, i5) | 0;
    if ((i1 | 0) != (i2 | 0)) {
     i4 = i5 + 4 | 0;
     i2 = HEAP32[i4 >> 2] | 0;
     if (((i2 - (HEAP32[i5 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, i2 + -24 | 0);
      i3 = HEAP32[i4 >> 2] | 0;
      i2 = 0;
      while (1) {
       if ((i2 | 0) == -1) break;
       i5 = i2 + -1 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3 + (i5 * 24 | 0) | 0);
       i2 = i5;
      }
      HEAP32[i4 >> 2] = i3 + -24;
      i5 = HEAP8[i6 + 11 >> 0] | 0;
      i4 = i5 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i3 + -48 | 0, i4 ? HEAP32[i6 >> 2] | 0 : i6, i4 ? HEAP32[i6 + 4 >> 2] | 0 : i5 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
     }
    } else i1 = i2;
   }
  } else i1 = i2;
 } while (0);
 STACKTOP = i7;
 return i1 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE(i1, i5, i6, i7, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i8 = 0;
 L1 : while (1) {
  i1 = HEAP32[i5 >> 2] | 0;
  do if (i1) {
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i5 >> 2] = 0;
    i3 = 1;
    break;
   } else {
    i3 = (HEAP32[i5 >> 2] | 0) == 0;
    break;
   }
  } else i3 = 1; while (0);
  i2 = HEAP32[i6 >> 2] | 0;
  do if (i2) {
   i1 = HEAP32[i2 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i3) {
    i3 = i2;
    break;
   } else {
    i3 = i2;
    break L1;
   } else {
    HEAP32[i6 >> 2] = 0;
    i8 = 15;
    break;
   }
  } else i8 = 15; while (0);
  if ((i8 | 0) == 15) {
   i8 = 0;
   if (i3) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 12 >> 2] & 63](i4, 8192, i1) | 0)) break;
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
   HEAP32[i2 >> 2] = i3 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i3 >> 2] | 0) | 0;
  }
 }
 i1 = HEAP32[i5 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i5 >> 2] = 0;
   i2 = 1;
   break;
  } else {
   i2 = (HEAP32[i5 >> 2] | 0) == 0;
   break;
  }
 } else i2 = 1; while (0);
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i2) break; else {
   i8 = 40;
   break;
  } else {
   HEAP32[i6 >> 2] = 0;
   i8 = 38;
   break;
  }
 } else i8 = 38; while (0);
 if ((i8 | 0) == 38 ? i2 : 0) i8 = 40;
 if ((i8 | 0) == 40) HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 2;
 return;
}

function _kpmLoadRefDataSet(i4, i5, i10) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i13 = i14 + 56 | 0;
 i12 = i14 + 48 | 0;
 i9 = i14 + 40 | 0;
 i8 = i14 + 32 | 0;
 i7 = i14 + 24 | 0;
 i6 = i14 + 8 | 0;
 i3 = i14;
 i2 = i14 + 60 | 0;
 HEAP8[i2 >> 0] = HEAP8[20190] | 0;
 HEAP8[i2 + 1 >> 0] = HEAP8[20191] | 0;
 HEAP8[i2 + 2 >> 0] = HEAP8[20192] | 0;
 L1 : do if ((i4 | 0) != 0 & (i10 | 0) != 0) {
  i11 = _kpmFopen(i4, i5, i2) | 0;
  if (!i11) {
   i1 = (i5 | 0) != 0;
   HEAP32[i6 >> 2] = i4;
   HEAP32[i6 + 4 >> 2] = i1 ? 50815 : 59242;
   HEAP32[i6 + 8 >> 2] = i1 ? i5 : 59242;
   _arLog(0, 3, 20244, i6);
   i1 = -1;
   break;
  }
  i6 = _calloc(1, 16) | 0;
  if (!i6) {
   _arLog(0, 3, 20581, i7);
   _exit(1);
  }
  i3 = i6 + 4 | 0;
  L9 : do if ((_fread(i3, 4, 1, i11) | 0) == 1 ? (i1 = HEAP32[i3 >> 2] | 0, (i1 | 0) >= 1) : 0) {
   i7 = _malloc(i1 * 132 | 0) | 0;
   HEAP32[i6 >> 2] = i7;
   if (!i7) {
    _arLog(0, 3, 20581, i8);
    _exit(1);
   }
   i2 = 0;
   while (1) {
    if ((i2 | 0) >= (i1 | 0)) break;
    if ((_fread((HEAP32[i6 >> 2] | 0) + (i2 * 132 | 0) | 0, 8, 1, i11) | 0) != 1) break L9;
    if ((_fread((HEAP32[i6 >> 2] | 0) + (i2 * 132 | 0) + 8 | 0, 8, 1, i11) | 0) != 1) break L9;
    if ((_fread((HEAP32[i6 >> 2] | 0) + (i2 * 132 | 0) + 16 | 0, 108, 1, i11) | 0) != 1) break L9;
    if ((_fread((HEAP32[i6 >> 2] | 0) + (i2 * 132 | 0) + 124 | 0, 4, 1, i11) | 0) != 1) break L9;
    if ((_fread((HEAP32[i6 >> 2] | 0) + (i2 * 132 | 0) + 128 | 0, 4, 1, i11) | 0) != 1) break L9;
    i2 = i2 + 1 | 0;
    i1 = HEAP32[i3 >> 2] | 0;
   }
   i4 = i6 + 12 | 0;
   if ((_fread(i4, 4, 1, i11) | 0) == 1) {
    i1 = HEAP32[i4 >> 2] | 0;
    if ((i1 | 0) < 1) {
     HEAP32[i6 + 8 >> 2] = 0;
     break;
    }
    i8 = _malloc(i1 * 12 | 0) | 0;
    i5 = i6 + 8 | 0;
    HEAP32[i5 >> 2] = i8;
    if (!i8) {
     _arLog(0, 3, 20581, i9);
     _exit(1);
    }
    i3 = 0;
    while (1) {
     if ((i3 | 0) >= (i1 | 0)) {
      i1 = 32;
      break;
     }
     if ((_fread((HEAP32[i5 >> 2] | 0) + (i3 * 12 | 0) + 8 | 0, 4, 1, i11) | 0) != 1) break L9;
     if ((_fread((HEAP32[i5 >> 2] | 0) + (i3 * 12 | 0) + 4 | 0, 4, 1, i11) | 0) != 1) break L9;
     i9 = HEAP32[i5 >> 2] | 0;
     i1 = HEAP32[i9 + (i3 * 12 | 0) + 4 >> 2] | 0;
     i2 = _malloc(i1 * 12 | 0) | 0;
     HEAP32[i9 + (i3 * 12 | 0) >> 2] = i2;
     if (!i2) {
      i1 = 29;
      break;
     }
     if ((_fread(i2, 12, i1, i11) | 0) != (i1 | 0)) break L9;
     i3 = i3 + 1 | 0;
     i1 = HEAP32[i4 >> 2] | 0;
    }
    if ((i1 | 0) == 29) {
     _arLog(0, 3, 20581, i12);
     _exit(1);
    } else if ((i1 | 0) == 32) {
     HEAP32[i10 >> 2] = i6;
     _fclose(i11) | 0;
     i1 = 0;
     break L1;
    }
   }
  } while (0);
  _arLog(0, 3, 20311, i13);
  i1 = HEAP32[i6 + 8 >> 2] | 0;
  if (i1 | 0) _free(i1);
  i1 = HEAP32[i6 >> 2] | 0;
  if (i1 | 0) _free(i1);
  _free(i6);
  _fclose(i11) | 0;
  i1 = -1;
 } else {
  _arLog(0, 3, 20193, i3);
  i1 = -1;
 } while (0);
 STACKTOP = i14;
 return i1 | 0;
}

function _arParamLoad(i1, i13, i11, i12) {
 i1 = i1 | 0;
 i13 = i13 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, d18 = 0.0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i9 = i17 + 248 | 0;
 i7 = i17 + 240 | 0;
 i6 = i17 + 232 | 0;
 i5 = i17 + 224 | 0;
 i4 = i17 + 216 | 0;
 i3 = i17 + 208 | 0;
 i2 = i17 + 200 | 0;
 i14 = i17;
 i15 = i17 + 16 | 0;
 do if ((i1 | 0) != 0 & (i13 | 0) > 0 & (i11 | 0) != 0) {
  i16 = _fopen(i1, 20190) | 0;
  if (!i16) {
   i16 = ___errno_location() | 0;
   HEAP32[i2 >> 2] = HEAP32[i16 >> 2];
   HEAP32[i2 + 4 >> 2] = i1;
   _arLog(0, 3, 18171, i2);
   i1 = ___errno_location() | 0;
   i1 = _strerror(HEAP32[i1 >> 2] | 0) | 0;
   HEAP32[i3 >> 2] = 59242;
   HEAP32[i3 + 4 >> 2] = i1;
   _arLog(0, 3, 19715, i3);
   i1 = -1;
   break;
  }
  _fseek(i16, 0, 2) | 0;
  L6 : do if (!(_ferror(i16) | 0)) {
   i3 = _ftell(i16) | 0;
   _rewind(i16);
   i2 = 0;
   while (1) {
    if (i2 >>> 0 >= 4) {
     i10 = 9;
     break;
    }
    i1 = HEAP32[1712 + (i2 << 3) + 4 >> 2] | 0;
    i2 = i2 + 1 | 0;
    if (!((i3 | 0) % (i1 | 0) | 0)) {
     i8 = i2;
     break;
    }
   }
   do if ((i10 | 0) == 9) if ((i2 | 0) == 4) {
    _arLog(0, 3, 18285, i6);
    i1 = -1;
    break L6;
   } else {
    i8 = 0;
    i1 = HEAP32[1712 + (0 << 3) + 4 >> 2] | 0;
    break;
   } while (0);
   if ((_fread(i15, i1, 1, i16) | 0) != 1) {
    i1 = ___errno_location() | 0;
    HEAP32[i7 >> 2] = HEAP32[i1 >> 2];
    _arLog(0, 3, 18365, i7);
    i1 = ___errno_location() | 0;
    i1 = _strerror(HEAP32[i1 >> 2] | 0) | 0;
    HEAP32[i9 >> 2] = 59242;
    HEAP32[i9 + 4 >> 2] = i1;
    _arLog(0, 3, 19715, i9);
    i1 = -1;
    break;
   }
   i5 = i15 + 176 | 0;
   HEAP32[i5 >> 2] = i8;
   _byteswap(i15);
   i6 = (i8 | 0) == 1;
   i7 = i15 + 120 | 0;
   if (i6) {
    d18 = +HEAPF64[i7 >> 3];
    i4 = i15 + 128 | 0;
    HEAPF64[i7 >> 3] = +HEAPF64[i4 >> 3];
    HEAPF64[i4 >> 3] = d18;
   } else i4 = i15 + 128 | 0;
   _memcpy(i11 | 0, i15 | 0, 184) | 0;
   HEAP32[i14 >> 2] = i12;
   i2 = i11 + 176 | 0;
   i1 = 1;
   while (1) {
    if ((i1 | 0) >= (i13 | 0)) {
     i1 = 0;
     break L6;
    }
    i12 = (HEAP32[i14 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    i3 = HEAP32[i12 >> 2] | 0;
    HEAP32[i14 >> 2] = i12 + 4;
    HEAP32[i3 + 176 >> 2] = HEAP32[i2 >> 2];
    if ((_fread(i15, HEAP32[1712 + ((HEAP32[i2 >> 2] | 0) + -1 << 3) + 4 >> 2] | 0, 1, i16) | 0) != 1) {
     i1 = -1;
     break L6;
    }
    HEAP32[i5 >> 2] = i8;
    _byteswap(i15);
    if (i6) {
     d18 = +HEAPF64[i7 >> 3];
     HEAPF64[i7 >> 3] = +HEAPF64[i4 >> 3];
     HEAPF64[i4 >> 3] = d18;
    }
    _memcpy(i3 | 0, i15 | 0, 184) | 0;
    i1 = i1 + 1 | 0;
   }
  } else {
   i1 = ___errno_location() | 0;
   HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
   _arLog(0, 3, 18240, i4);
   i1 = ___errno_location() | 0;
   i1 = _strerror(HEAP32[i1 >> 2] | 0) | 0;
   HEAP32[i5 >> 2] = 59242;
   HEAP32[i5 + 4 >> 2] = i1;
   _arLog(0, 3, 19715, i5);
   i1 = -1;
  } while (0);
  _fclose(i16) | 0;
 } else i1 = -1; while (0);
 STACKTOP = i17;
 return i1 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE(i1, i5, i6, i7, i2) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i8 = 0;
 i4 = i2 + 8 | 0;
 L1 : while (1) {
  i1 = HEAP32[i5 >> 2] | 0;
  do if (i1) {
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i5 >> 2] = 0;
    i2 = 1;
    break;
   } else {
    i2 = (HEAP32[i5 >> 2] | 0) == 0;
    break;
   }
  } else i2 = 1; while (0);
  i3 = HEAP32[i6 >> 2] | 0;
  do if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break; else break L1; else {
    HEAP32[i6 >> 2] = 0;
    i8 = 15;
    break;
   }
  } else i8 = 15; while (0);
  if ((i8 | 0) == 15) {
   i8 = 0;
   if (i2) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if ((i1 & 255) << 24 >> 24 <= -1) break;
  if (!(HEAP16[(HEAP32[i4 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 8192)) break;
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
   HEAP32[i2 >> 2] = i3 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i3 >> 0] | 0) | 0;
  }
 }
 i1 = HEAP32[i5 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i5 >> 2] = 0;
   i2 = 1;
   break;
  } else {
   i2 = (HEAP32[i5 >> 2] | 0) == 0;
   break;
  }
 } else i2 = 1; while (0);
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i2) break; else {
   i8 = 41;
   break;
  } else {
   HEAP32[i6 >> 2] = 0;
   i8 = 39;
   break;
  }
 } else i8 = 39; while (0);
 if ((i8 | 0) == 39 ? i2 : 0) i8 = 41;
 if ((i8 | 0) == 41) HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 2;
 return;
}

function _ar2ReadImageSet(i9) {
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i11 = i15 + 72 | 0;
 i10 = i15 + 64 | 0;
 i8 = i15 + 56 | 0;
 i7 = i15 + 48 | 0;
 i6 = i15 + 40 | 0;
 i5 = i15 + 32 | 0;
 i4 = i15 + 24 | 0;
 i3 = i15 + 16 | 0;
 i1 = i15 + 8 | 0;
 i12 = i15 + 80 | 0;
 i2 = _malloc((_strlen(i9) | 0) + 6 | 0) | 0;
 if (!i2) {
  _arLog(0, 3, 20581, i15);
  _exit(1);
 }
 HEAP32[i1 >> 2] = i9;
 HEAP32[i1 + 4 >> 2] = 19423;
 _sprintf(i2, 19418, i1) | 0;
 i14 = _fopen(i2, 20190) | 0;
 _free(i2);
 L4 : do if (!i14) {
  HEAP32[i3 >> 2] = i9;
  HEAP32[i3 + 4 >> 2] = 19423;
  _arLog(0, 3, 19429, i3);
  i1 = 0;
 } else {
  i1 = _malloc(8) | 0;
  if (!i1) {
   _arLog(0, 3, 20581, i4);
   _exit(1);
  }
  i2 = i1 + 4 | 0;
  if ((_fread(i2, 4, 1, i14) | 0) == 1 ? (i13 = HEAP32[i2 >> 2] | 0, (i13 | 0) >= 1) : 0) {
   HEAP32[i6 >> 2] = i13;
   _arLog(0, 1, 19502, i6);
   i3 = i13 << 2;
   i4 = _malloc(i3) | 0;
   HEAP32[i1 >> 2] = i4;
   if (!i4) {
    _arLog(0, 3, 20581, i7);
    _exit(1);
   }
   i7 = _malloc(16) | 0;
   HEAP32[i4 >> 2] = i7;
   if (!i7) {
    _arLog(0, 3, 20581, i8);
    _exit(1);
   }
   i2 = _ar2ReadJpegImage2(i14) | 0;
   if (!i2) {
    HEAP32[i10 >> 2] = i9;
    HEAP32[i10 + 4 >> 2] = 19423;
    _arLog(0, 2, 19532, i10);
    _free(HEAP32[i4 >> 2] | 0);
    _free(i4);
    _free(i1);
    _rewind(i14);
    i1 = _ar2ReadImageSetOld(i14) | 0;
    break;
   }
   if ((HEAP32[i2 + 4 >> 2] | 0) != 1) {
    HEAP32[i11 >> 2] = i9;
    HEAP32[i11 + 4 >> 2] = 19423;
    _arLog(0, 2, 19532, i11);
    _free(HEAP32[i4 >> 2] | 0);
    _free(i4);
    _free(i1);
    _free(i2);
    _fclose(i14) | 0;
    i1 = 0;
    break;
   }
   i11 = HEAP32[i4 >> 2] | 0;
   HEAP32[i11 + 4 >> 2] = HEAP32[i2 + 8 >> 2];
   HEAP32[i11 + 8 >> 2] = HEAP32[i2 + 12 >> 2];
   HEAP32[i11 + 12 >> 2] = HEAP32[i2 + 16 >> 2];
   HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
   _free(i2);
   _fseek(i14, 4 - i3 | 0, 2) | 0;
   i3 = 1;
   while (1) {
    if ((i3 | 0) >= (i13 | 0)) {
     i2 = 29;
     break;
    }
    if ((_fread(i12, 4, 1, i14) | 0) != 1) {
     i2 = 21;
     break;
    }
    i11 = _ar2GenImageLayer2(HEAP32[i4 >> 2] | 0, +HEAPF32[i12 >> 2]) | 0;
    HEAP32[i4 + (i3 << 2) >> 2] = i11;
    if (!i11) {
     i2 = 25;
     break;
    }
    i3 = i3 + 1 | 0;
   }
   L30 : do if ((i2 | 0) == 21) {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == (i3 | 0)) break L30;
     i13 = i4 + (i2 << 2) | 0;
     _free(HEAP32[HEAP32[i13 >> 2] >> 2] | 0);
     _free(HEAP32[i13 >> 2] | 0);
     i2 = i2 + 1 | 0;
    }
   } else if ((i2 | 0) == 25) {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == (i3 | 0)) break L30;
     i13 = i4 + (i2 << 2) | 0;
     _free(HEAP32[HEAP32[i13 >> 2] >> 2] | 0);
     _free(HEAP32[i13 >> 2] | 0);
     i2 = i2 + 1 | 0;
    }
   } else if ((i2 | 0) == 29) {
    _fclose(i14) | 0;
    break L4;
   } while (0);
   _free(i4);
  } else _arLog(0, 3, 19477, i5);
  _free(i1);
  _fclose(i14) | 0;
  i1 = 0;
 } while (0);
 STACKTOP = i15;
 return i1 | 0;
}

function _ar2Tracking2dSub(i7, i8, i2, i11, i12, i13, i14) {
 i7 = i7 | 0;
 i8 = i8 | 0;
 i2 = i2 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i15 = 0, i16 = 0, i17 = 0, d18 = 0.0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i1 = i17;
 i15 = i17 + 28 | 0;
 i16 = i17 + 24 | 0;
 i9 = HEAP32[i2 >> 2] | 0;
 i10 = HEAP32[i2 + 4 >> 2] | 0;
 i6 = HEAP32[i2 + 8 >> 2] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 if (!i2) {
  i2 = _ar2GenTemplate(HEAP32[i7 + 28 >> 2] | 0, HEAP32[i7 + 32 >> 2] | 0) | 0;
  HEAP32[i13 >> 2] = i2;
 }
 i3 = i7 + 12 | 0;
 i5 = i7 + 48 + (i9 * 48 | 0) | 0;
 i4 = HEAP32[i8 >> 2] | 0;
 if ((_ar2SetTemplateSub(HEAP32[i3 >> 2] | 0, i5, HEAP32[i4 + (i9 * 112 | 0) >> 2] | 0, (HEAP32[HEAP32[i4 + (i9 * 112 | 0) + 4 >> 2] >> 2] | 0) + (i10 * 20 | 0) | 0, i6, i2) | 0) >= 0 ? (i4 = HEAP32[i13 >> 2] | 0, i2 = HEAP32[i4 + 28 >> 2] | 0, d18 = +(Math_imul(i2, i2) | 0), !(+(Math_imul((HEAP32[i4 + 16 >> 2] | 0) + 1 + (HEAP32[i4 + 20 >> 2] | 0) | 0, (HEAP32[i4 + 8 >> 2] | 0) + 1 + (HEAP32[i4 + 12 >> 2] | 0) | 0) | 0) * 5.0 * 5.0 > d18)) : 0) {
  i4 = HEAP32[i8 + 152 >> 2] | 0;
  do if ((i4 | 0) != 1) {
   i2 = HEAP32[i3 >> 2] | 0;
   i3 = i7 + 528 + (i9 * 48 | 0) | 0;
   if ((i4 | 0) == 2) {
    _ar2GetSearchPoint(i2, i5, i3, 0, (HEAP32[(HEAP32[HEAP32[(HEAP32[i8 >> 2] | 0) + (i9 * 112 | 0) + 4 >> 2] >> 2] | 0) + (i10 * 20 | 0) >> 2] | 0) + (i6 * 20 | 0) | 0, i1);
    break;
   } else {
    _ar2GetSearchPoint(i2, i5, i3, i7 + 1008 + (i9 * 48 | 0) | 0, (HEAP32[(HEAP32[HEAP32[(HEAP32[i8 >> 2] | 0) + (i9 * 112 | 0) + 4 >> 2] >> 2] | 0) + (i10 * 20 | 0) >> 2] | 0) + (i6 * 20 | 0) | 0, i1);
    break;
   }
  } else _ar2GetSearchPoint(HEAP32[i3 >> 2] | 0, i5, 0, 0, (HEAP32[(HEAP32[HEAP32[(HEAP32[i8 >> 2] | 0) + (i9 * 112 | 0) + 4 >> 2] >> 2] | 0) + (i10 * 20 | 0) >> 2] | 0) + (i6 * 20 | 0) | 0, i1); while (0);
  i5 = HEAP32[i7 + 24 >> 2] | 0;
  if ((_ar2GetBestMatching(i11, i12, HEAP32[i7 + 4 >> 2] | 0, HEAP32[i7 + 8 >> 2] | 0, HEAP32[i7 + 20 >> 2] | 0, HEAP32[i13 >> 2] | 0, i5, i5, i1, i15, i16, i14) | 0) >= 0) {
   HEAPF32[i14 + 4 >> 2] = +(HEAP32[i15 >> 2] | 0);
   HEAPF32[i14 + 8 >> 2] = +(HEAP32[i16 >> 2] | 0);
   i16 = HEAP32[i8 >> 2] | 0;
   i1 = HEAP32[(HEAP32[HEAP32[i16 + (i9 * 112 | 0) + 4 >> 2] >> 2] | 0) + (i10 * 20 | 0) >> 2] | 0;
   i15 = i1 + (i6 * 20 | 0) + 8 | 0;
   i1 = i1 + (i6 * 20 | 0) + 12 | 0;
   HEAPF32[i14 + 12 >> 2] = +HEAPF32[i16 + (i9 * 112 | 0) + 24 >> 2] + (+HEAPF32[i16 + (i9 * 112 | 0) + 12 >> 2] * +HEAPF32[i15 >> 2] + +HEAPF32[i16 + (i9 * 112 | 0) + 16 >> 2] * +HEAPF32[i1 >> 2]);
   HEAPF32[i14 + 16 >> 2] = +HEAPF32[i16 + (i9 * 112 | 0) + 40 >> 2] + (+HEAPF32[i16 + (i9 * 112 | 0) + 28 >> 2] * +HEAPF32[i15 >> 2] + +HEAPF32[i16 + (i9 * 112 | 0) + 32 >> 2] * +HEAPF32[i1 >> 2]);
   HEAPF32[i14 + 20 >> 2] = +HEAPF32[i16 + (i9 * 112 | 0) + 56 >> 2] + (+HEAPF32[i16 + (i9 * 112 | 0) + 44 >> 2] * +HEAPF32[i15 >> 2] + +HEAPF32[i16 + (i9 * 112 | 0) + 48 >> 2] * +HEAPF32[i1 >> 2]);
   i1 = 0;
  } else i1 = -1;
 } else i1 = -1;
 STACKTOP = i17;
 return i1 | 0;
}

function __ZN6vision16FindHoughMatchesERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEERKNS_21HoughSimilarityVotingERKS5_if(i8, i9, i14, i1, d15) {
 i8 = i8 | 0;
 i9 = i9 | 0;
 i14 = i14 | 0;
 i1 = i1 | 0;
 d15 = +d15;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i2 = i20 + 32 | 0;
 i16 = i20 + 28 | 0;
 i17 = i20 + 24 | 0;
 i18 = i20 + 20 | 0;
 i19 = i20 + 16 | 0;
 i10 = i20 + 12 | 0;
 i11 = i20 + 8 | 0;
 i12 = i20 + 4 | 0;
 i13 = i20;
 __ZNK6vision21HoughSimilarityVoting16getBinsFromIndexERiS1_S1_S1_i(i9, i10, i11, i12, i13, i1);
 i6 = i8 + 4 | 0;
 HEAP32[i6 >> 2] = HEAP32[i8 >> 2];
 i7 = __ZNK6vision21HoughSimilarityVoting24getSubBinLocationIndicesEv(i9) | 0;
 i7 = (HEAP32[i7 + 4 >> 2] | 0) - (HEAP32[i7 >> 2] | 0) >> 2;
 i1 = __ZNK6vision21HoughSimilarityVoting18getSubBinLocationsEv(i9) | 0;
 if (i7 >>> 0 > (HEAP32[i14 + 4 >> 2] | 0) - (HEAP32[i14 >> 2] | 0) >> 3 >>> 0) {
  i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30273) | 0, 28362) | 0, 33655) | 0, 342) | 0, 33662) | 0, 30319) | 0;
  __ZNKSt3__28ios_base6getlocEv(i2, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58792) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 i5 = i8 + 8 | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) >= (i7 | 0)) break;
  __ZNK6vision21HoughSimilarityVoting14getBinDistanceERfS1_S1_S1_ffffffff(i9, i16, i17, i18, i19, +HEAPF32[i1 >> 2], +HEAPF32[i1 + 4 >> 2], +HEAPF32[i1 + 8 >> 2], +HEAPF32[i1 + 12 >> 2], +(HEAP32[i10 >> 2] | 0) + .5, +(HEAP32[i11 >> 2] | 0) + .5, +(HEAP32[i12 >> 2] | 0) + .5, +(HEAP32[i13 >> 2] | 0) + .5);
  do if ((+HEAPF32[i16 >> 2] < d15 ? +HEAPF32[i17 >> 2] < d15 : 0) & +HEAPF32[i18 >> 2] < d15 & +HEAPF32[i19 >> 2] < d15) {
   i3 = __ZNK6vision21HoughSimilarityVoting24getSubBinLocationIndicesEv(i9) | 0;
   i3 = (HEAP32[i14 >> 2] | 0) + (HEAP32[(HEAP32[i3 >> 2] | 0) + (i2 << 2) >> 2] << 3) | 0;
   i4 = HEAP32[i6 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i5 >> 2] | 0)) {
    __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i8, i3);
    break;
   } else {
    i21 = i3;
    i3 = HEAP32[i21 + 4 >> 2] | 0;
    HEAP32[i4 >> 2] = HEAP32[i21 >> 2];
    HEAP32[i4 + 4 >> 2] = i3;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 8;
    break;
   }
  } while (0);
  i1 = i1 + 16 | 0;
  i2 = i2 + 1 | 0;
 }
 STACKTOP = i20;
 return;
}

function _ar2ReadMarkerSet(i1, i2, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i7 = i7 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 1088 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1088);
 i12 = i14 + 1072 | 0;
 i11 = i14 + 1064 | 0;
 i13 = i14 + 1056 | 0;
 i5 = i14 + 1048 | 0;
 i4 = i14 + 1040 | 0;
 i3 = i14 + 1032 | 0;
 i6 = i14 + 1024 | 0;
 i8 = i14 + 768 | 0;
 i9 = i14 + 512 | 0;
 i10 = i14;
 HEAP32[i6 >> 2] = i1;
 HEAP32[i6 + 4 >> 2] = i2;
 _sprintf(i10, 20598, i6) | 0;
 i10 = _fopen(i10, 19687) | 0;
 if (!i10) i1 = 0; else {
  i1 = _malloc(8) | 0;
  if (!i1) {
   _arLog(0, 3, 20581, i3);
   _exit(1);
  }
  L6 : do if (_get_buff_345(i8, i10) | 0) {
   i6 = i1 + 4 | 0;
   HEAP32[i4 >> 2] = i6;
   if ((_sscanf(i8, 19721, i4) | 0) != 1) {
    _free(i1);
    i1 = 0;
    break;
   }
   i2 = HEAP32[i6 >> 2] | 0;
   if ((i2 | 0) < 1) {
    _free(i1);
    i1 = 0;
    break;
   }
   i4 = _malloc(i2 * 56 | 0) | 0;
   HEAP32[i1 >> 2] = i4;
   if (!i4) {
    _arLog(0, 3, 20581, i5);
    _exit(1);
   }
   i4 = 0;
   L18 : while (1) {
    if ((i4 | 0) >= (i2 | 0)) break L6;
    if (!(_get_buff_345(i8, i10) | 0)) {
     i2 = 15;
     break;
    }
    HEAP32[i13 >> 2] = i9;
    if ((_sscanf(i8, 19748, i13) | 0) != 1) {
     i2 = 17;
     break;
    }
    i5 = _arPattLoad(i7, i9) | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    HEAP32[i3 + (i4 * 56 | 0) + 4 >> 2] = i5;
    if ((i5 | 0) < 0) {
     i2 = 19;
     break;
    }
    if (!(_get_buff_345(i8, i10) | 0)) {
     i2 = 21;
     break;
    }
    HEAP32[i11 >> 2] = (HEAP32[i1 >> 2] | 0) + (i4 * 56 | 0);
    if ((_sscanf(i8, 19649, i11) | 0) != 1) {
     i2 = 24;
     break;
    }
    i2 = 0;
    while (1) {
     if (i2 >>> 0 >= 3) break;
     if (!(_get_buff_345(i8, i10) | 0)) {
      i2 = 27;
      break L18;
     }
     i5 = HEAP32[i1 >> 2] | 0;
     HEAP32[i12 >> 2] = i5 + (i4 * 56 | 0) + 8 + (i2 << 4);
     HEAP32[i12 + 4 >> 2] = i5 + (i4 * 56 | 0) + 8 + (i2 << 4) + 4;
     HEAP32[i12 + 8 >> 2] = i5 + (i4 * 56 | 0) + 8 + (i2 << 4) + 8;
     HEAP32[i12 + 12 >> 2] = i5 + (i4 * 56 | 0) + 8 + (i2 << 4) + 12;
     if ((_sscanf(i8, 19914, i12) | 0) == 4) i2 = i2 + 1 | 0; else {
      i2 = 29;
      break L18;
     }
    }
    i4 = i4 + 1 | 0;
    i2 = HEAP32[i6 >> 2] | 0;
   }
   if ((i2 | 0) == 15) {
    _free(HEAP32[i1 >> 2] | 0);
    _free(i1);
    i1 = 0;
    break;
   } else if ((i2 | 0) == 17) {
    _free(HEAP32[i1 >> 2] | 0);
    _free(i1);
    i1 = 0;
    break;
   } else if ((i2 | 0) == 19) {
    _free(i3);
    _free(i1);
    i1 = 0;
    break;
   } else if ((i2 | 0) == 21) {
    _free(HEAP32[i1 >> 2] | 0);
    _free(i1);
    i1 = 0;
    break;
   } else if ((i2 | 0) == 24) {
    _free(HEAP32[i1 >> 2] | 0);
    _free(i1);
    i1 = 0;
    break;
   } else if ((i2 | 0) == 27) {
    _free(HEAP32[i1 >> 2] | 0);
    _free(i1);
    i1 = 0;
    break;
   } else if ((i2 | 0) == 29) {
    _free(HEAP32[i1 >> 2] | 0);
    _free(i1);
    i1 = 0;
    break;
   }
  } else {
   _free(i1);
   i1 = 0;
  } while (0);
  _fclose(i10) | 0;
 }
 STACKTOP = i14;
 return i1 | 0;
}

function __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii(i1, i2, i3, i5, i7, i8, i9, i10) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i4 = 0, i6 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i11 = i12;
 if ((i9 | 0) > 0 ? (i9 + 1 | 0) >>> 0 < (__ZNK6vision5Image5widthEv(i8) | 0) >>> 0 : 0) {
  i4 = i10 + -1 | 0;
  if ((i10 | 0) > 0 ? (i6 = i10 + 1 | 0, i6 >>> 0 < (__ZNK6vision5Image6heightEv(i8) | 0) >>> 0) : 0) {
   i4 = (__ZNK6vision5Image3getIfEEPKT_m(i8, i4) | 0) + (i9 << 2) | 0;
   i10 = (__ZNK6vision5Image3getIfEEPKT_m(i8, i10) | 0) + (i9 << 2) | 0;
   i11 = (__ZNK6vision5Image3getIfEEPKT_m(i8, i6) | 0) + (i9 << 2) | 0;
   i8 = i10 + 4 | 0;
   i9 = i10 + -4 | 0;
   HEAPF32[i1 >> 2] = (+HEAPF32[i8 >> 2] - +HEAPF32[i9 >> 2]) * .5;
   HEAPF32[i2 >> 2] = (+HEAPF32[i11 >> 2] - +HEAPF32[i4 >> 2]) * .5;
   HEAPF32[i3 >> 2] = +HEAPF32[i8 >> 2] + (+HEAPF32[i9 >> 2] - +HEAPF32[i10 >> 2] * 2.0);
   HEAPF32[i5 >> 2] = +HEAPF32[i11 >> 2] + (+HEAPF32[i4 >> 2] - +HEAPF32[i10 >> 2] * 2.0);
   HEAPF32[i7 >> 2] = (+HEAPF32[i4 + -4 >> 2] + +HEAPF32[i11 + 4 >> 2] - (+HEAPF32[i4 + 4 >> 2] + +HEAPF32[i11 + -4 >> 2])) * .25;
   STACKTOP = i12;
   return;
  }
  i12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24204) | 0, 22571) | 0, 33655) | 0, 285) | 0, 33662) | 0, 23084) | 0;
  __ZNKSt3__28ios_base6getlocEv(i11, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i11, 58792) | 0;
  i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i11);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i10) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 i12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 24148) | 0, 22571) | 0, 33655) | 0, 284) | 0, 33662) | 0, 23009) | 0;
 __ZNKSt3__28ios_base6getlocEv(i11, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
 i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i11, 58792) | 0;
 i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
 __ZNSt3__26localeD2Ev(i11);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i10) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
 _abort();
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i5, i8) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i9 = i11 + 40 | 0;
 i10 = i11 + 16 | 0;
 i6 = i11;
 L1 : do if (((i1 | 0) != (i5 | 0) ? (i2 = (HEAP8[i1 >> 0] | 0) + -48 | 0, i2 >>> 0 < 10) : 0) ? (i3 = i1 + 1 | 0, (i3 | 0) != (i5 | 0)) : 0) {
  i7 = i2;
  while (1) {
   i4 = (HEAP8[i3 >> 0] | 0) + -48 | 0;
   if (i4 >>> 0 >= 10) break;
   i2 = i3 + 1 | 0;
   if ((i2 | 0) == (i5 | 0)) break L1;
   i7 = i4 + (i7 * 10 | 0) | 0;
   i3 = i2;
  }
  if ((i5 - i3 | 0) >>> 0 >= i7 >>> 0) {
   HEAP32[i9 >> 2] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
   HEAP32[i9 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i9, i3, i7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i10, i9, 10);
   i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(51906) | 0;
   i5 = HEAP8[i10 + 11 >> 0] | 0;
   if ((i1 | 0) == ((i5 << 24 >> 24 < 0 ? HEAP32[i10 + 4 >> 2] | 0 : i5 & 255) | 0)) i1 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i10, 51906, i1) | 0) == 0; else i1 = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   if (i1) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm22EEERAT__Kc(i10);
    i1 = i8 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[i8 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i10);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i8, i10);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i10);
   } else {
    HEAP32[i6 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i6 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
    HEAP32[i6 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i9 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i10, i6);
    i1 = i8 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[i8 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i10);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i8, i10);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i10);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
   i1 = i3 + i7 | 0;
  }
 } while (0);
 STACKTOP = i11;
 return i1 | 0;
}

function __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryEPKh(i8, i9) {
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i7 = i19 + 8 | 0;
 i6 = i19 + 32 | 0;
 i5 = i19 + 28 | 0;
 i10 = i19 + 24 | 0;
 i15 = i19 + 20 | 0;
 i16 = i19 + 16 | 0;
 i17 = i19;
 i18 = i8 + 8 | 0;
 if (!(HEAP32[i18 >> 2] | 0)) {
  i14 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30413) | 0, 27413) | 0, 33655) | 0, 405) | 0, 33662) | 0, 30448) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i13 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i14, i13) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i14) | 0;
  _abort();
 }
 HEAP32[i8 + 100 >> 2] = 0;
 i11 = i8 + 72 | 0;
 i12 = i8 + 76 | 0;
 HEAP32[i12 >> 2] = HEAP32[i11 >> 2];
 i13 = i8 + 84 | 0;
 i14 = i8 + 88 | 0;
 i2 = HEAP32[i14 >> 2] | 0;
 while (1) {
  i1 = HEAP32[i13 >> 2] | 0;
  i3 = i1;
  if ((i1 | 0) == (i2 | 0)) break;
  i4 = i2 - i3 | 0;
  if ((i4 | 0) > 8) {
   i2 = i2 + -8 | 0;
   i20 = i1;
   i21 = HEAP32[i20 >> 2] | 0;
   i20 = HEAP32[i20 + 4 >> 2] | 0;
   i23 = i7;
   HEAP32[i23 >> 2] = i21;
   HEAP32[i23 + 4 >> 2] = i20;
   i23 = i2;
   i22 = HEAP32[i23 + 4 >> 2] | 0;
   HEAP32[i1 >> 2] = HEAP32[i23 >> 2];
   HEAP32[i1 + 4 >> 2] = i22;
   i1 = i2;
   HEAP32[i1 >> 2] = i21;
   HEAP32[i1 + 4 >> 2] = i20;
   __ZN6vision17PriorityQueueItemILi96EED2Ev(i7);
   HEAP32[i10 >> 2] = i3;
   HEAP32[i15 >> 2] = i2;
   HEAP32[i16 >> 2] = i3;
   HEAP32[i5 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i6 >> 2] = HEAP32[i15 >> 2];
   HEAP32[i7 >> 2] = HEAP32[i16 >> 2];
   __ZNSt3__211__sift_downIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_(i5, i6, i17, (i4 >>> 3) + -1 | 0, i7);
   i2 = HEAP32[i14 >> 2] | 0;
  }
  i1 = 0;
  while (1) {
   if ((i1 | 0) == -1) break;
   i23 = i1 + -1 | 0;
   __ZN6vision17PriorityQueueItemILi96EED2Ev(i2 + (i23 << 3) | 0);
   i1 = i23;
  }
  i2 = i2 + -8 | 0;
  HEAP32[i14 >> 2] = i2;
 }
 __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh(i8, i13, HEAP32[i18 >> 2] | 0, i9);
 STACKTOP = i19;
 return (HEAP32[i12 >> 2] | 0) - (HEAP32[i11 >> 2] | 0) >> 2 | 0;
}

function _icpGetJ_Xc_S(i6, i1, i2, i3) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, d5 = 0.0, i7 = 0, i8 = 0, i9 = 0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 864 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(864);
 i7 = i9 + 576 | 0;
 i8 = i9;
 i20 = i2 + 8 | 0;
 i4 = i3 + 8 | 0;
 d13 = +HEAPF64[i4 >> 3];
 i19 = i2 + 16 | 0;
 i21 = i3 + 16 | 0;
 d11 = +HEAPF64[i21 >> 3];
 HEAPF64[i1 >> 3] = +HEAPF64[i2 + 24 >> 3] + (+HEAPF64[i2 >> 3] * +HEAPF64[i3 >> 3] + +HEAPF64[i20 >> 3] * d13 + +HEAPF64[i19 >> 3] * d11);
 i18 = i2 + 32 | 0;
 d14 = +HEAPF64[i3 >> 3];
 i17 = i2 + 40 | 0;
 i16 = i2 + 48 | 0;
 HEAPF64[i1 + 8 >> 3] = +HEAPF64[i2 + 56 >> 3] + (+HEAPF64[i18 >> 3] * d14 + d13 * +HEAPF64[i17 >> 3] + d11 * +HEAPF64[i16 >> 3]);
 i15 = i2 + 64 | 0;
 i3 = i2 + 72 | 0;
 d13 = +HEAPF64[i4 >> 3];
 i4 = i2 + 80 | 0;
 HEAPF64[i1 + 16 >> 3] = +HEAPF64[i2 + 88 >> 3] + (d14 * +HEAPF64[i15 >> 3] + +HEAPF64[i3 >> 3] * d13 + d11 * +HEAPF64[i4 >> 3]);
 d11 = +HEAPF64[i2 >> 3];
 HEAPF64[i7 >> 3] = d14 * d11;
 HEAPF64[i7 + 8 >> 3] = d13 * d11;
 d12 = +HEAPF64[i21 >> 3];
 HEAPF64[i7 + 16 >> 3] = d11 * d12;
 d10 = +HEAPF64[i20 >> 3];
 HEAPF64[i7 + 24 >> 3] = d14 * d10;
 HEAPF64[i7 + 32 >> 3] = d13 * d10;
 HEAPF64[i7 + 40 >> 3] = d12 * d10;
 d5 = +HEAPF64[i19 >> 3];
 HEAPF64[i7 + 48 >> 3] = d14 * d5;
 HEAPF64[i7 + 56 >> 3] = d13 * d5;
 HEAPF64[i7 + 64 >> 3] = d12 * d5;
 HEAPF64[i7 + 72 >> 3] = d11;
 HEAPF64[i7 + 80 >> 3] = d10;
 HEAPF64[i7 + 88 >> 3] = d5;
 d5 = +HEAPF64[i18 >> 3];
 HEAPF64[i7 + 96 >> 3] = d14 * d5;
 HEAPF64[i7 + 104 >> 3] = d13 * d5;
 HEAPF64[i7 + 112 >> 3] = d12 * d5;
 d10 = +HEAPF64[i17 >> 3];
 HEAPF64[i7 + 120 >> 3] = d14 * d10;
 HEAPF64[i7 + 128 >> 3] = d13 * d10;
 HEAPF64[i7 + 136 >> 3] = d12 * d10;
 d11 = +HEAPF64[i16 >> 3];
 HEAPF64[i7 + 144 >> 3] = d14 * d11;
 HEAPF64[i7 + 152 >> 3] = d13 * d11;
 HEAPF64[i7 + 160 >> 3] = d12 * d11;
 HEAPF64[i7 + 168 >> 3] = d5;
 HEAPF64[i7 + 176 >> 3] = d10;
 HEAPF64[i7 + 184 >> 3] = d11;
 d11 = +HEAPF64[i15 >> 3];
 HEAPF64[i7 + 192 >> 3] = d14 * d11;
 HEAPF64[i7 + 200 >> 3] = d13 * d11;
 HEAPF64[i7 + 208 >> 3] = d12 * d11;
 d10 = +HEAPF64[i3 >> 3];
 HEAPF64[i7 + 216 >> 3] = d14 * d10;
 HEAPF64[i7 + 224 >> 3] = d13 * d10;
 HEAPF64[i7 + 232 >> 3] = d12 * d10;
 d5 = +HEAPF64[i4 >> 3];
 HEAPF64[i7 + 240 >> 3] = d14 * d5;
 HEAPF64[i7 + 248 >> 3] = d13 * d5;
 HEAPF64[i7 + 256 >> 3] = d12 * d5;
 HEAPF64[i7 + 264 >> 3] = d11;
 HEAPF64[i7 + 272 >> 3] = d10;
 HEAPF64[i7 + 280 >> 3] = d5;
 _icpGetJ_T_S(i8);
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  i3 = 0;
  while (1) {
   if ((i3 | 0) == 6) break;
   i4 = i6 + (i2 * 48 | 0) + (i3 << 3) | 0;
   HEAPF64[i4 >> 3] = 0.0;
   i1 = 0;
   d5 = 0.0;
   while (1) {
    if ((i1 | 0) == 12) break;
    d14 = d5 + +HEAPF64[i7 + (i2 * 96 | 0) + (i1 << 3) >> 3] * +HEAPF64[i8 + (i1 * 48 | 0) + (i3 << 3) >> 3];
    HEAPF64[i4 >> 3] = d14;
    i1 = i1 + 1 | 0;
    d5 = d14;
   }
   i3 = i3 + 1 | 0;
  }
  i2 = i2 + 1 | 0;
 }
 STACKTOP = i9;
 return;
}

function _minvf(i1, i12, i13) {
 i1 = i1 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i14 = 0, i15 = 0, d16 = 0.0, i17 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 2e3 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2e3);
 i14 = i15;
 L1 : do if ((i12 | 0) > 500) i1 = 0; else {
  switch (i12 | 0) {
  case 0:
   {
    i1 = 0;
    break L1;
   }
  case 1:
   {
    HEAPF32[i1 >> 2] = 1.0 / +HEAPF32[i1 >> 2];
    break L1;
   }
  default:
   {}
  }
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (i12 | 0)) break;
   HEAP32[i14 + (i2 << 2) >> 2] = i2;
   i2 = i2 + 1 | 0;
  }
  i11 = i1 + (i12 + -1 << 2) | 0;
  i8 = 0;
  i10 = i11;
  while (1) {
   if ((i8 | 0) >= (i12 | 0)) break;
   i9 = i1 + ((Math_imul(i8, i13) | 0) << 2) | 0;
   d7 = 0.0;
   i2 = i9;
   i5 = -1;
   i3 = i8;
   while (1) {
    if ((i3 | 0) == (i12 | 0)) break;
    d16 = +Math_abs(+(+HEAPF32[i2 >> 2]));
    i6 = d7 < d16;
    d7 = i6 ? d16 : d7;
    i2 = i2 + (i13 << 2) | 0;
    i5 = i6 ? i3 : i5;
    i3 = i3 + 1 | 0;
   }
   if ((i5 | 0) == -1 | d7 <= 1.000000013351432e-10) {
    i1 = 0;
    break L1;
   }
   i2 = i14 + (i5 << 2) | 0;
   i4 = HEAP32[i2 >> 2] | 0;
   i3 = i14 + (i8 << 2) | 0;
   HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i3 >> 2] = i4;
   i3 = 0;
   i4 = i9;
   i2 = i1 + ((Math_imul(i5, i13) | 0) << 2) | 0;
   while (1) {
    if ((i3 | 0) == (i12 | 0)) break;
    i6 = HEAP32[i2 >> 2] | 0;
    HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
    HEAP32[i4 >> 2] = i6;
    i3 = i3 + 1 | 0;
    i4 = i4 + 4 | 0;
    i2 = i2 + 4 | 0;
   }
   d7 = +HEAPF32[i9 >> 2];
   i2 = 1;
   i3 = i9;
   while (1) {
    if ((i2 | 0) == (i12 | 0)) break;
    i6 = i3 + 4 | 0;
    HEAPF32[i3 >> 2] = +HEAPF32[i6 >> 2] / d7;
    i2 = i2 + 1 | 0;
    i3 = i6;
   }
   HEAPF32[i10 >> 2] = 1.0 / d7;
   i2 = 0;
   i6 = i11;
   while (1) {
    if ((i2 | 0) == (i12 | 0)) break;
    if ((i2 | 0) != (i8 | 0)) {
     i5 = i1 + ((Math_imul(i2, i13) | 0) << 2) | 0;
     d7 = +HEAPF32[i5 >> 2];
     i3 = i9;
     i4 = 1;
     while (1) {
      if ((i4 | 0) == (i12 | 0)) break;
      i17 = i5 + 4 | 0;
      HEAPF32[i5 >> 2] = +HEAPF32[i17 >> 2] - d7 * +HEAPF32[i3 >> 2];
      i3 = i3 + 4 | 0;
      i4 = i4 + 1 | 0;
      i5 = i17;
     }
     HEAPF32[i6 >> 2] = -(d7 * +HEAPF32[i10 >> 2]);
    }
    i2 = i2 + 1 | 0;
    i6 = i6 + (i13 << 2) | 0;
   }
   i8 = i8 + 1 | 0;
   i10 = i10 + (i13 << 2) | 0;
  }
  i6 = 0;
  while (1) {
   if ((i6 | 0) >= (i12 | 0)) break L1;
   i5 = i6;
   while (1) {
    i2 = i14 + (i5 << 2) | 0;
    if ((i5 | 0) >= (i12 | 0)) break;
    if ((HEAP32[i2 >> 2] | 0) == (i6 | 0)) break;
    i5 = i5 + 1 | 0;
   }
   HEAP32[i2 >> 2] = HEAP32[i14 + (i6 << 2) >> 2];
   i3 = 0;
   i4 = i1 + (i6 << 2) | 0;
   i2 = i1 + (i5 << 2) | 0;
   while (1) {
    if ((i3 | 0) >= (i12 | 0)) break;
    i17 = HEAP32[i2 >> 2] | 0;
    HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
    HEAP32[i4 >> 2] = i17;
    i3 = i3 + 1 | 0;
    i4 = i4 + (i13 << 2) | 0;
    i2 = i2 + (i13 << 2) | 0;
   }
   i6 = i6 + 1 | 0;
  }
 } while (0);
 STACKTOP = i15;
 return i1 | 0;
}

function _minv(i1, i12, i13) {
 i1 = i1 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i14 = 0, i15 = 0, d16 = 0.0, i17 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 2e3 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2e3);
 i14 = i15;
 L1 : do if ((i12 | 0) > 500) i1 = 0; else {
  switch (i12 | 0) {
  case 0:
   {
    i1 = 0;
    break L1;
   }
  case 1:
   {
    HEAPF64[i1 >> 3] = 1.0 / +HEAPF64[i1 >> 3];
    break L1;
   }
  default:
   {}
  }
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (i12 | 0)) break;
   HEAP32[i14 + (i2 << 2) >> 2] = i2;
   i2 = i2 + 1 | 0;
  }
  i11 = i1 + (i12 + -1 << 3) | 0;
  i8 = 0;
  i10 = i11;
  while (1) {
   if ((i8 | 0) >= (i12 | 0)) break;
   i9 = i1 + ((Math_imul(i8, i13) | 0) << 3) | 0;
   d7 = 0.0;
   i2 = i9;
   i5 = -1;
   i3 = i8;
   while (1) {
    if ((i3 | 0) == (i12 | 0)) break;
    d16 = +Math_abs(+(+HEAPF64[i2 >> 3]));
    i6 = d7 < d16;
    d7 = i6 ? d16 : d7;
    i2 = i2 + (i13 << 3) | 0;
    i5 = i6 ? i3 : i5;
    i3 = i3 + 1 | 0;
   }
   if ((i5 | 0) == -1 | d7 <= 1.0e-10) {
    i1 = 0;
    break L1;
   }
   i2 = i14 + (i5 << 2) | 0;
   i4 = HEAP32[i2 >> 2] | 0;
   i3 = i14 + (i8 << 2) | 0;
   HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i3 >> 2] = i4;
   i3 = 0;
   i4 = i9;
   i2 = i1 + ((Math_imul(i5, i13) | 0) << 3) | 0;
   while (1) {
    if ((i3 | 0) == (i12 | 0)) break;
    d16 = +HEAPF64[i2 >> 3];
    HEAPF64[i2 >> 3] = +HEAPF64[i4 >> 3];
    HEAPF64[i4 >> 3] = d16;
    i3 = i3 + 1 | 0;
    i4 = i4 + 8 | 0;
    i2 = i2 + 8 | 0;
   }
   d7 = +HEAPF64[i9 >> 3];
   i2 = 1;
   i3 = i9;
   while (1) {
    if ((i2 | 0) == (i12 | 0)) break;
    i6 = i3 + 8 | 0;
    HEAPF64[i3 >> 3] = +HEAPF64[i6 >> 3] / d7;
    i2 = i2 + 1 | 0;
    i3 = i6;
   }
   HEAPF64[i10 >> 3] = 1.0 / d7;
   i2 = 0;
   i6 = i11;
   while (1) {
    if ((i2 | 0) == (i12 | 0)) break;
    if ((i2 | 0) != (i8 | 0)) {
     i5 = i1 + ((Math_imul(i2, i13) | 0) << 3) | 0;
     d7 = +HEAPF64[i5 >> 3];
     i3 = i9;
     i4 = 1;
     while (1) {
      if ((i4 | 0) == (i12 | 0)) break;
      i17 = i5 + 8 | 0;
      HEAPF64[i5 >> 3] = +HEAPF64[i17 >> 3] - d7 * +HEAPF64[i3 >> 3];
      i3 = i3 + 8 | 0;
      i4 = i4 + 1 | 0;
      i5 = i17;
     }
     HEAPF64[i6 >> 3] = -(d7 * +HEAPF64[i10 >> 3]);
    }
    i2 = i2 + 1 | 0;
    i6 = i6 + (i13 << 3) | 0;
   }
   i8 = i8 + 1 | 0;
   i10 = i10 + (i13 << 3) | 0;
  }
  i6 = 0;
  while (1) {
   if ((i6 | 0) >= (i12 | 0)) break L1;
   i5 = i6;
   while (1) {
    i2 = i14 + (i5 << 2) | 0;
    if ((i5 | 0) >= (i12 | 0)) break;
    if ((HEAP32[i2 >> 2] | 0) == (i6 | 0)) break;
    i5 = i5 + 1 | 0;
   }
   HEAP32[i2 >> 2] = HEAP32[i14 + (i6 << 2) >> 2];
   i3 = 0;
   i4 = i1 + (i6 << 3) | 0;
   i2 = i1 + (i5 << 3) | 0;
   while (1) {
    if ((i3 | 0) >= (i12 | 0)) break;
    d16 = +HEAPF64[i2 >> 3];
    HEAPF64[i2 >> 3] = +HEAPF64[i4 >> 3];
    HEAPF64[i4 >> 3] = d16;
    i3 = i3 + 1 | 0;
    i4 = i4 + (i13 << 3) | 0;
    i2 = i2 + (i13 << 3) | 0;
   }
   i6 = i6 + 1 | 0;
  }
 } while (0);
 STACKTOP = i15;
 return i1 | 0;
}

function _read_markers(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i3 = i2 + 416 | 0;
 i4 = i2 + 440 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 L1 : while (1) {
  if (!i1) {
   if (!(HEAP32[(HEAP32[i4 >> 2] | 0) + 12 >> 2] | 0)) {
    if (!(_first_marker(i2) | 0)) {
     i1 = 0;
     break;
    }
   } else if (!(_next_marker(i2) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i3 >> 2] | 0;
  }
  do switch (i1 | 0) {
  case 218:
   {
    i5 = 14;
    break L1;
   }
  case 217:
   {
    i5 = 16;
    break L1;
   }
  case 216:
   {
    _get_soi(i2);
    break;
   }
  case 193:
  case 192:
   {
    if (!(_get_sof(i2, 0, 0) | 0)) {
     i1 = 0;
     break L1;
    }
    break;
   }
  case 194:
   {
    if (!(_get_sof(i2, 1, 0) | 0)) {
     i1 = 0;
     break L1;
    }
    break;
   }
  case 201:
   {
    if (!(_get_sof(i2, 0, 1) | 0)) {
     i1 = 0;
     break L1;
    }
    break;
   }
  case 202:
   {
    if (!(_get_sof(i2, 1, 1) | 0)) {
     i1 = 0;
     break L1;
    }
    break;
   }
  case 207:
  case 206:
  case 205:
  case 203:
  case 200:
  case 199:
  case 198:
  case 197:
  case 195:
   {
    i6 = HEAP32[i2 >> 2] | 0;
    HEAP32[i6 + 20 >> 2] = 60;
    HEAP32[i6 + 24 >> 2] = i1;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i2 >> 2] >> 2] & 255](i2);
    break;
   }
  case 204:
   {
    if (!(_skip_variable(i2) | 0)) {
     i1 = 0;
     break L1;
    }
    break;
   }
  case 196:
   {
    if (!(_get_dht(i2) | 0)) {
     i1 = 0;
     break L1;
    }
    break;
   }
  case 219:
   {
    if (!(_get_dqt(i2) | 0)) {
     i1 = 0;
     break L1;
    }
    break;
   }
  case 221:
   {
    if (!(_get_dri(i2) | 0)) {
     i1 = 0;
     break L1;
    }
    break;
   }
  case 239:
  case 238:
  case 237:
  case 236:
  case 235:
  case 234:
  case 233:
  case 232:
  case 231:
  case 230:
  case 229:
  case 228:
  case 227:
  case 226:
  case 225:
  case 224:
   {
    if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 32 + (i1 + -224 << 2) >> 2] & 127](i2) | 0)) {
     i1 = 0;
     break L1;
    }
    break;
   }
  case 254:
   {
    if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 127](i2) | 0)) {
     i1 = 0;
     break L1;
    }
    break;
   }
  case 1:
  case 215:
  case 214:
  case 213:
  case 212:
  case 211:
  case 210:
  case 209:
  case 208:
   {
    i6 = HEAP32[i2 >> 2] | 0;
    HEAP32[i6 + 20 >> 2] = 92;
    HEAP32[i6 + 24 >> 2] = i1;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] & 63](i2, 1);
    break;
   }
  case 220:
   {
    if (!(_skip_variable(i2) | 0)) {
     i1 = 0;
     break L1;
    }
    break;
   }
  default:
   {
    i6 = HEAP32[i2 >> 2] | 0;
    HEAP32[i6 + 20 >> 2] = 68;
    HEAP32[i6 + 24 >> 2] = i1;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i2 >> 2] >> 2] & 255](i2);
   }
  } while (0);
  HEAP32[i3 >> 2] = 0;
  i1 = 0;
 }
 if ((i5 | 0) == 14) if (!(_get_sos(i2) | 0)) i1 = 0; else {
  HEAP32[i3 >> 2] = 0;
  i1 = 1;
 } else if ((i5 | 0) == 16) {
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i1 + 20 >> 2] = 85;
  FUNCTION_TABLE_vii[HEAP32[i1 + 4 >> 2] & 63](i2, 1);
  HEAP32[i3 >> 2] = 0;
  i1 = 2;
 }
 return i1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueENS_11__wrap_iterIPcEEE4typeENSD_ISA_EESC_SC_(i1, i4, i3, i14) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i14 = i14 | 0;
 var i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i12 = i16 + 16 | 0;
 i8 = i16 + 4 | 0;
 i9 = i16;
 i15 = i1 + 11 | 0;
 i2 = HEAP8[i15 >> 0] | 0;
 i6 = i2 << 24 >> 24 < 0;
 if (i6) i5 = HEAP32[i1 >> 2] | 0; else i5 = i1;
 i7 = HEAP32[i4 >> 2] | 0;
 i13 = i7 - i5 | 0;
 i11 = i14 - i3 | 0;
 do if (!i11) i10 = 27; else {
  if (i6) {
   i4 = HEAP32[i1 >> 2] | 0;
   i2 = HEAP32[i1 + 4 >> 2] | 0;
  } else {
   i4 = i1;
   i2 = i2 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_(i3, i4, i4 + i2 | 0) | 0) {
   HEAP32[i8 >> 2] = 0;
   HEAP32[i8 + 4 >> 2] = 0;
   HEAP32[i8 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i8, i3, i14);
   HEAP32[i9 >> 2] = i7;
   i15 = HEAP8[i8 + 11 >> 0] | 0;
   i13 = i15 << 24 >> 24 < 0;
   i14 = i13 ? HEAP32[i8 >> 2] | 0 : i8;
   i15 = i14 + (i13 ? HEAP32[i8 + 4 >> 2] | 0 : i15 & 255) | 0;
   HEAP32[i12 >> 2] = HEAP32[i9 >> 2];
   i1 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueENS_11__wrap_iterIPcEEE4typeENSD_ISA_EESC_SC_(i1, i12, i14, i15) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   break;
  }
  i2 = HEAP8[i15 >> 0] | 0;
  i4 = i2 << 24 >> 24 < 0;
  if (i4) {
   i5 = HEAP32[i1 + 4 >> 2] | 0;
   i2 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0;
  } else {
   i5 = i2 & 255;
   i2 = 10;
  }
  if ((i2 - i5 | 0) >>> 0 >= i11 >>> 0) {
   if (i4) i4 = HEAP32[i1 >> 2] | 0; else i4 = i1;
   i2 = i5 - i13 | 0;
   if (i2) {
    i10 = i4 + i13 | 0;
    __ZNSt3__211char_traitsIcE4moveEPcPKcm(i10 + i11 | 0, i10, i2) | 0;
   }
  } else {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEmmmmmm(i1, i2, i5 + i11 - i2 | 0, i5, i13, i11);
   i4 = HEAP32[i1 >> 2] | 0;
  }
  i2 = i5 + i11 | 0;
  if ((HEAP8[i15 >> 0] | 0) < 0) HEAP32[i1 + 4 >> 2] = i2; else HEAP8[i15 >> 0] = i2;
  HEAP8[i12 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i4 + i2 | 0, i12);
  i2 = i4 + i13 | 0;
  while (1) {
   if ((i3 | 0) == (i14 | 0)) break;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i3);
   i3 = i3 + 1 | 0;
   i2 = i2 + 1 | 0;
  }
  i2 = HEAP8[i15 >> 0] | 0;
  i10 = 27;
 } while (0);
 if ((i10 | 0) == 27) {
  if (i2 << 24 >> 24 < 0) i1 = HEAP32[i1 >> 2] | 0;
  i1 = i1 + i13 | 0;
 }
 STACKTOP = i16;
 return i1 | 0;
}

function __ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE(i1, i10, i11, i2, i12, i13, i14, i3) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i2 = i2 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 HEAP32[i11 >> 2] = i1;
 HEAP32[i13 >> 2] = i2;
 if (i3 & 4) {
  i1 = HEAP32[i11 >> 2] | 0;
  i2 = i10;
  if ((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == -17 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == -69 : 0) ? (HEAP8[i1 + 2 >> 0] | 0) == -65 : 0) HEAP32[i11 >> 2] = i1 + 3;
 } else i2 = i10;
 L9 : while (1) {
  i8 = HEAP32[i11 >> 2] | 0;
  if (i8 >>> 0 >= i10 >>> 0) {
   i1 = 0;
   break;
  }
  i9 = HEAP32[i13 >> 2] | 0;
  if (i9 >>> 0 >= i12 >>> 0) {
   i1 = 1;
   break;
  }
  i6 = HEAP8[i8 >> 0] | 0;
  i1 = i6 & 255;
  do if (i6 << 24 >> 24 > -1) if (i1 >>> 0 > i14 >>> 0) {
   i1 = 2;
   break L9;
  } else i3 = 1; else {
   if ((i6 & 255) < 194) {
    i1 = 2;
    break L9;
   }
   if ((i6 & 255) < 224) {
    if ((i2 - i8 | 0) < 2) {
     i1 = 1;
     break L9;
    }
    i3 = HEAPU8[i8 + 1 >> 0] | 0;
    if ((i3 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = i3 & 63 | i1 << 6 & 1984;
    if (i1 >>> 0 > i14 >>> 0) {
     i1 = 2;
     break L9;
    } else {
     i3 = 2;
     break;
    }
   }
   if ((i6 & 255) < 240) {
    if ((i2 - i8 | 0) < 3) {
     i1 = 1;
     break L9;
    }
    i4 = HEAP8[i8 + 1 >> 0] | 0;
    i3 = HEAP8[i8 + 2 >> 0] | 0;
    switch (i6 << 24 >> 24) {
    case -32:
     {
      if ((i4 & -32) << 24 >> 24 != -96) {
       i1 = 2;
       break L9;
      }
      break;
     }
    case -19:
     {
      if ((i4 & -32) << 24 >> 24 != -128) {
       i1 = 2;
       break L9;
      }
      break;
     }
    default:
     if ((i4 & -64) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
    }
    i3 = i3 & 255;
    if ((i3 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = (i4 & 63) << 6 | i1 << 12 & 61440 | i3 & 63;
    if (i1 >>> 0 > i14 >>> 0) {
     i1 = 2;
     break L9;
    } else {
     i3 = 3;
     break;
    }
   }
   if ((i6 & 255) >= 245) {
    i1 = 2;
    break L9;
   }
   if ((i2 - i8 | 0) < 4) {
    i1 = 1;
    break L9;
   }
   i7 = HEAP8[i8 + 1 >> 0] | 0;
   i3 = HEAP8[i8 + 2 >> 0] | 0;
   i5 = HEAP8[i8 + 3 >> 0] | 0;
   switch (i6 << 24 >> 24) {
   case -16:
    {
     if ((i7 + 112 & 255) >= 48) {
      i1 = 2;
      break L9;
     }
     break;
    }
   case -12:
    {
     if ((i7 & -16) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
     break;
    }
   default:
    if ((i7 & -64) << 24 >> 24 != -128) {
     i1 = 2;
     break L9;
    }
   }
   i4 = i3 & 255;
   if ((i4 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   i3 = i5 & 255;
   if ((i3 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   i1 = (i7 & 63) << 12 | i1 << 18 & 1835008 | i4 << 6 & 4032 | i3 & 63;
   if (i1 >>> 0 > i14 >>> 0) {
    i1 = 2;
    break L9;
   } else i3 = 4;
  } while (0);
  HEAP32[i9 >> 2] = i1;
  HEAP32[i11 >> 2] = i8 + i3;
  HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 4;
 }
 return i1 | 0;
}

function _decompress_onepass(i18, i19) {
 i18 = i18 | 0;
 i19 = i19 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0;
 i29 = HEAP32[i18 + 428 >> 2] | 0;
 i31 = (HEAP32[i18 + 348 >> 2] | 0) + -1 | 0;
 i32 = i18 + 320 | 0;
 i33 = (HEAP32[i32 >> 2] | 0) + -1 | 0;
 i20 = i29 + 24 | 0;
 i21 = i29 + 28 | 0;
 i22 = i29 + 20 | 0;
 i23 = i29 + 32 | 0;
 i24 = i18 + 356 | 0;
 i25 = i18 + 444 | 0;
 i26 = i18 + 328 | 0;
 i27 = i18 + 448 | 0;
 i28 = i18 + 148 | 0;
 i16 = HEAP32[i20 >> 2] | 0;
 L1 : while (1) {
  if ((i16 | 0) >= (HEAP32[i21 >> 2] | 0)) {
   i34 = 22;
   break;
  }
  i17 = HEAP32[i22 >> 2] | 0;
  while (1) {
   if (i17 >>> 0 > i31 >>> 0) break;
   _jzero_far(HEAP32[i23 >> 2] | 0, HEAP32[i24 >> 2] << 7);
   if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[i25 >> 2] | 0) + 4 >> 2] & 63](i18, i23) | 0)) {
    i34 = 6;
    break L1;
   }
   i30 = i17 >>> 0 < i31 >>> 0;
   i1 = 0;
   i15 = 0;
   while (1) {
    if ((i15 | 0) >= (HEAP32[i26 >> 2] | 0)) break;
    i7 = HEAP32[i18 + 332 + (i15 << 2) >> 2] | 0;
    L11 : do if (!(HEAP32[i7 + 48 >> 2] | 0)) i1 = (HEAP32[i7 + 60 >> 2] | 0) + i1 | 0; else {
     i5 = HEAP32[i7 + 4 >> 2] | 0;
     i8 = HEAP32[(HEAP32[i27 >> 2] | 0) + 4 + (i5 << 2) >> 2] | 0;
     i9 = i7 + 52 | 0;
     i10 = HEAP32[(i30 ? i9 : i7 + 68 | 0) >> 2] | 0;
     i11 = i7 + 36 | 0;
     i2 = HEAP32[i11 >> 2] | 0;
     i5 = (HEAP32[i19 + (i5 << 2) >> 2] | 0) + ((Math_imul(i2, i16) | 0) << 2) | 0;
     i12 = Math_imul(HEAP32[i7 + 64 >> 2] | 0, i17) | 0;
     i13 = i7 + 56 | 0;
     i14 = i7 + 72 | 0;
     i6 = 0;
     while (1) {
      if ((i6 | 0) >= (HEAP32[i13 >> 2] | 0)) break L11;
      if (!((HEAP32[i28 >> 2] | 0) >>> 0 >= i33 >>> 0 ? (i6 + i16 | 0) >= (HEAP32[i14 >> 2] | 0) : 0)) i34 = 15;
      L19 : do if ((i34 | 0) == 15) {
       i34 = 0;
       i3 = i12;
       i4 = 0;
       while (1) {
        if ((i4 | 0) >= (i10 | 0)) break L19;
        FUNCTION_TABLE_viiiii[i8 & 31](i18, i7, HEAP32[i29 + 32 + (i4 + i1 << 2) >> 2] | 0, i5, i3);
        i2 = HEAP32[i11 >> 2] | 0;
        i3 = i2 + i3 | 0;
        i4 = i4 + 1 | 0;
       }
      } while (0);
      i5 = i5 + (i2 << 2) | 0;
      i6 = i6 + 1 | 0;
      i1 = (HEAP32[i9 >> 2] | 0) + i1 | 0;
     }
    } while (0);
    i15 = i15 + 1 | 0;
   }
   i17 = i17 + 1 | 0;
  }
  HEAP32[i22 >> 2] = 0;
  i16 = i16 + 1 | 0;
 }
 do if ((i34 | 0) == 6) {
  HEAP32[i20 >> 2] = i16;
  HEAP32[i22 >> 2] = i17;
  i1 = 0;
 } else if ((i34 | 0) == 22) {
  i34 = i18 + 156 | 0;
  HEAP32[i34 >> 2] = (HEAP32[i34 >> 2] | 0) + 1;
  i34 = (HEAP32[i28 >> 2] | 0) + 1 | 0;
  HEAP32[i28 >> 2] = i34;
  if (i34 >>> 0 < (HEAP32[i32 >> 2] | 0) >>> 0) {
   _start_iMCU_row_28(i18);
   i1 = 3;
   break;
  } else {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[i18 + 436 >> 2] | 0) + 12 >> 2] & 255](i18);
   i1 = 4;
   break;
  }
 } while (0);
 return i1 | 0;
}

function _pass2_fs_dither(i27, i28, i33, i40) {
 i27 = i27 | 0;
 i28 = i28 | 0;
 i33 = i33 | 0;
 i40 = i40 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i41 = 0, i42 = 0, i43 = 0;
 i36 = HEAP32[i27 + 460 >> 2] | 0;
 i41 = HEAP32[i36 + 24 >> 2] | 0;
 i42 = HEAP32[i27 + 112 >> 2] | 0;
 i29 = HEAP32[i27 + 324 >> 2] | 0;
 i30 = HEAP32[i36 + 40 >> 2] | 0;
 i34 = HEAP32[i27 + 136 >> 2] | 0;
 i31 = HEAP32[i34 >> 2] | 0;
 i32 = HEAP32[i34 + 4 >> 2] | 0;
 i34 = HEAP32[i34 + 8 >> 2] | 0;
 i35 = i36 + 36 | 0;
 i36 = i36 + 32 | 0;
 i37 = i42 + -1 | 0;
 i38 = i37 * 3 | 0;
 i39 = (i42 * 3 | 0) + 3 | 0;
 i23 = 0;
 while (1) {
  if ((i23 | 0) >= (i40 | 0)) break;
  i2 = HEAP32[i28 + (i23 << 2) >> 2] | 0;
  i1 = HEAP32[i33 + (i23 << 2) >> 2] | 0;
  if (!(HEAP32[i35 >> 2] | 0)) {
   i24 = 3;
   i25 = 1;
   i26 = HEAP32[i36 >> 2] | 0;
   i3 = 1;
  } else {
   i24 = -3;
   i25 = -1;
   i26 = (HEAP32[i36 >> 2] | 0) + (i39 << 1) | 0;
   i1 = i1 + i37 | 0;
   i2 = i2 + i38 | 0;
   i3 = 0;
  }
  HEAP32[i35 >> 2] = i3;
  i20 = i24 + 1 | 0;
  i21 = i24 + 2 | 0;
  i22 = Math_imul(i42, i24) | 0;
  i3 = 0;
  i4 = 0;
  i5 = 0;
  i12 = 0;
  i13 = 0;
  i14 = 0;
  i15 = 0;
  i16 = 0;
  i17 = 0;
  i18 = i42;
  i19 = i26;
  while (1) {
   if (!i18) break;
   i11 = i19 + (i24 << 1) | 0;
   i10 = HEAPU8[i29 + ((HEAP32[i30 + (i3 + 8 + (HEAP16[i11 >> 1] | 0) >> 4 << 2) >> 2] | 0) + (HEAPU8[i2 >> 0] | 0)) >> 0] | 0;
   i9 = HEAPU8[i29 + ((HEAP32[i30 + (i4 + 8 + (HEAP16[i19 + (i20 << 1) >> 1] | 0) >> 4 << 2) >> 2] | 0) + (HEAPU8[i2 + 1 >> 0] | 0)) >> 0] | 0;
   i8 = HEAPU8[i29 + ((HEAP32[i30 + (i5 + 8 + (HEAP16[i19 + (i21 << 1) >> 1] | 0) >> 4 << 2) >> 2] | 0) + (HEAPU8[i2 + 2 >> 0] | 0)) >> 0] | 0;
   i4 = i10 >>> 3;
   i5 = i9 >>> 2;
   i6 = i8 >>> 3;
   i7 = (HEAP32[i41 + (i4 << 2) >> 2] | 0) + (i5 << 6) + (i6 << 1) | 0;
   i3 = HEAP16[i7 >> 1] | 0;
   if (!(i3 << 16 >> 16)) {
    _fill_inverse_cmap(i27, i4, i5, i6);
    i3 = HEAP16[i7 >> 1] | 0;
   }
   i7 = (i3 & 65535) + -1 | 0;
   HEAP8[i1 >> 0] = i7;
   i43 = i10 - (HEAPU8[i31 + i7 >> 0] | 0) | 0;
   i6 = i9 - (HEAPU8[i32 + i7 >> 0] | 0) | 0;
   i7 = i8 - (HEAPU8[i34 + i7 >> 0] | 0) | 0;
   HEAP16[i19 >> 1] = (i43 * 3 | 0) + i15;
   i8 = (i43 * 5 | 0) + i12 | 0;
   HEAP16[i19 + 2 >> 1] = (i6 * 3 | 0) + i16;
   i9 = (i6 * 5 | 0) + i13 | 0;
   HEAP16[i19 + 4 >> 1] = (i7 * 3 | 0) + i17;
   i10 = (i7 * 5 | 0) + i14 | 0;
   i3 = i43 * 7 | 0;
   i4 = i6 * 7 | 0;
   i5 = i7 * 7 | 0;
   i12 = i43;
   i13 = i6;
   i14 = i7;
   i15 = i8;
   i16 = i9;
   i17 = i10;
   i18 = i18 + -1 | 0;
   i19 = i11;
   i1 = i1 + i25 | 0;
   i2 = i2 + i24 | 0;
  }
  i43 = i26 + (i22 << 1) | 0;
  HEAP16[i43 >> 1] = i15;
  HEAP16[i43 + 2 >> 1] = i16;
  HEAP16[i43 + 4 >> 1] = i17;
  i23 = i23 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_ctor_dtor_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i9 = i10 + 40 | 0;
 i4 = i10 + 24 | 0;
 i5 = i10;
 i6 = i10 + 12 | 0;
 L1 : do if ((i2 - i1 | 0) > 1 ? (i7 = i8 + 4 | 0, i3 = HEAP32[i7 >> 2] | 0, (HEAP32[i8 >> 2] | 0) != (i3 | 0)) : 0) {
  switch (HEAP8[i1 >> 0] | 0) {
  case 67:
   {
    switch (HEAP8[i1 + 1 >> 0] | 0) {
    case 53:
    case 51:
    case 50:
    case 49:
     break;
    default:
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_(i4, i3 + -24 | 0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i9, i4);
    i2 = HEAP32[i7 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[i8 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i9);
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i8, i9);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i9);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i4);
    HEAP8[i8 + 60 >> 0] = 1;
    i1 = i1 + 2 | 0;
    break L1;
   }
  case 68:
   break;
  default:
   break L1;
  }
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 53:
  case 50:
  case 49:
  case 48:
   break;
  default:
   break L1;
  }
  __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_(i6, i3 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i6, 0, 50596) | 0;
  HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i6 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i9, i5);
  i2 = HEAP32[i7 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i8 + 8 >> 2] | 0) >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i9);
   HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
  } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i8, i9);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  HEAP8[i8 + 60 >> 0] = 1;
  i1 = i1 + 2 | 0;
 } while (0);
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNKSt3__28messagesIwE6do_getEliiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE(i18, i1, i8, i9, i10, i2) {
 i18 = i18 | 0;
 i1 = i1 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 i13 = i17 + 168 | 0;
 i14 = i17;
 i15 = i17 + 164 | 0;
 i16 = i17 + 160 | 0;
 i11 = i17 + 128 | 0;
 i6 = i17 + 152 | 0;
 i12 = i17 + 144 | 0;
 HEAP32[i11 >> 2] = 0;
 HEAP32[i11 + 4 >> 2] = 0;
 HEAP32[i11 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i11 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 >> 2] = 16692;
 i4 = HEAP8[i2 + 8 + 3 >> 0] | 0;
 i5 = i4 << 24 >> 24 < 0;
 i1 = i5 ? HEAP32[i2 >> 2] | 0 : i2;
 i4 = i1 + ((i5 ? HEAP32[i2 + 4 >> 2] | 0 : i4 & 255) << 2) | 0;
 i5 = i14 + 32 | 0;
 i2 = i1;
 i1 = 0;
 while (1) {
  if (!((i1 | 0) != 2 & i2 >>> 0 < i4 >>> 0)) break;
  HEAP32[i16 >> 2] = i2;
  i3 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 12 >> 2] & 15](i6, i13, i2, i4, i16, i14, i5, i15) | 0;
  if ((i3 | 0) == 2 ? 1 : (HEAP32[i16 >> 2] | 0) == (i2 | 0)) {
   i7 = 8;
   break;
  }
  i1 = i14;
  while (1) {
   if (i1 >>> 0 >= (HEAP32[i15 >> 2] | 0) >>> 0) break;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i11, HEAP8[i1 >> 0] | 0);
   i1 = i1 + 1 | 0;
  }
  i2 = HEAP32[i16 >> 2] | 0;
  i1 = i3;
 }
 if ((i7 | 0) == 8) __ZNSt3__221__throw_runtime_errorEPKc(0);
 __ZNSt3__26locale5facetD2Ev(i6);
 i3 = (HEAP8[i11 + 11 >> 0] | 0) < 0 ? HEAP32[i11 >> 2] | 0 : i11;
 i2 = _catgets((i8 | 0) == -1 ? -1 : i8 << 1, i9, i10, i3) | 0;
 HEAP32[i18 >> 2] = 0;
 HEAP32[i18 + 4 >> 2] = 0;
 HEAP32[i18 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i12 + 4 >> 2] = 0;
 HEAP32[i12 >> 2] = 16740;
 i4 = i3 + (_strlen(i2) | 0) | 0;
 i5 = i4;
 i6 = i14 + 128 | 0;
 i2 = i3;
 i1 = 0;
 while (1) {
  if (!((i1 | 0) != 2 & i2 >>> 0 < i4 >>> 0)) {
   i7 = 23;
   break;
  }
  HEAP32[i16 >> 2] = i2;
  i3 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 16 >> 2] & 15](i12, i13, i2, (i5 - i2 | 0) > 32 ? i2 + 32 | 0 : i4, i16, i14, i6, i15) | 0;
  if ((i3 | 0) == 2 ? 1 : (HEAP32[i16 >> 2] | 0) == (i2 | 0)) {
   i7 = 19;
   break;
  }
  i1 = i14;
  while (1) {
   if (i1 >>> 0 >= (HEAP32[i15 >> 2] | 0) >>> 0) break;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i18, HEAP32[i1 >> 2] | 0);
   i1 = i1 + 4 | 0;
  }
  i2 = HEAP32[i16 >> 2] | 0;
  i1 = i3;
 }
 if ((i7 | 0) == 19) __ZNSt3__221__throw_runtime_errorEPKc(0); else if ((i7 | 0) == 23) {
  __ZNSt3__26locale5facetD2Ev(i12);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  STACKTOP = i17;
  return;
 }
}

function _master_selection(i6) {
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0;
 i4 = HEAP32[i6 + 420 >> 2] | 0;
 _jpeg_calc_output_dimensions(i6);
 _prepare_range_limit_table(i6);
 i1 = i6 + 120 | 0;
 i7 = i4 + 12 | 0;
 HEAP32[i7 >> 2] = 0;
 i3 = _use_merged_upsample(i6) | 0;
 i5 = i4 + 16 | 0;
 HEAP32[i5 >> 2] = i3;
 i3 = i4 + 20 | 0;
 HEAP32[i3 >> 2] = 0;
 i4 = i4 + 24 | 0;
 HEAP32[i4 >> 2] = 0;
 do if (!(HEAP32[i6 + 84 >> 2] | 0)) {
  HEAP32[i6 + 100 >> 2] = 0;
  HEAP32[i6 + 104 >> 2] = 0;
  HEAP32[i6 + 108 >> 2] = 0;
  i2 = i6 + 68 | 0;
 } else {
  if (!(HEAP32[i6 + 64 >> 2] | 0)) {
   HEAP32[i6 + 100 >> 2] = 0;
   HEAP32[i6 + 104 >> 2] = 0;
   HEAP32[i6 + 108 >> 2] = 0;
  }
  i2 = i6 + 68 | 0;
  if (HEAP32[i2 >> 2] | 0) {
   i8 = HEAP32[i6 >> 2] | 0;
   HEAP32[i8 + 20 >> 2] = 47;
   FUNCTION_TABLE_vi[HEAP32[i8 >> 2] & 255](i6);
  }
  do if ((HEAP32[i1 >> 2] | 0) == 3) {
   if (HEAP32[i6 + 136 >> 2] | 0) {
    HEAP32[i6 + 104 >> 2] = 1;
    break;
   }
   if (!(HEAP32[i6 + 92 >> 2] | 0)) {
    HEAP32[i6 + 100 >> 2] = 1;
    break;
   } else {
    HEAP32[i6 + 108 >> 2] = 1;
    break;
   }
  } else {
   HEAP32[i6 + 100 >> 2] = 1;
   HEAP32[i6 + 104 >> 2] = 0;
   HEAP32[i6 + 108 >> 2] = 0;
   HEAP32[i6 + 136 >> 2] = 0;
  } while (0);
  if (HEAP32[i6 + 100 >> 2] | 0) {
   _jinit_1pass_quantizer(i6);
   HEAP32[i3 >> 2] = HEAP32[i6 + 460 >> 2];
  }
  if ((HEAP32[i6 + 108 >> 2] | 0) == 0 ? (HEAP32[i6 + 104 >> 2] | 0) == 0 : 0) break;
  _jinit_2pass_quantizer(i6);
  HEAP32[i4 >> 2] = HEAP32[i6 + 460 >> 2];
 } while (0);
 if (!(HEAP32[i2 >> 2] | 0)) {
  if (!(HEAP32[i5 >> 2] | 0)) {
   _jinit_color_deconverter(i6);
   _jinit_upsampler(i6);
  } else _jinit_merged_upsampler(i6);
  _jinit_d_post_controller(i6, HEAP32[i6 + 108 >> 2] | 0);
 }
 _jinit_inverse_dct(i6);
 do if (!(HEAP32[i6 + 224 >> 2] | 0)) if (!(HEAP32[i6 + 220 >> 2] | 0)) {
  _jinit_huff_decoder(i6);
  break;
 } else {
  _jinit_phuff_decoder(i6);
  break;
 } else {
  i8 = HEAP32[i6 >> 2] | 0;
  HEAP32[i8 + 20 >> 2] = 1;
  FUNCTION_TABLE_vi[HEAP32[i8 >> 2] & 255](i6);
 } while (0);
 i3 = i6 + 436 | 0;
 if (!(HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] | 0)) i1 = (HEAP32[i6 + 64 >> 2] | 0) != 0 & 1; else i1 = 1;
 _jinit_d_coef_controller(i6, i1);
 if (!(HEAP32[i2 >> 2] | 0)) _jinit_d_main_controller(i6, 0);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i6 + 4 >> 2] | 0) + 24 >> 2] & 255](i6);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 255](i6);
 i1 = HEAP32[i6 + 8 >> 2] | 0;
 if ((i1 | 0 ? (HEAP32[i6 + 64 >> 2] | 0) == 0 : 0) ? HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] | 0 : 0) {
  i8 = HEAP32[i6 + 36 >> 2] | 0;
  i8 = (HEAP32[i6 + 220 >> 2] | 0) == 0 ? i8 : (i8 * 3 | 0) + 2 | 0;
  HEAP32[i1 + 4 >> 2] = 0;
  i8 = Math_imul(i8, HEAP32[i6 + 320 >> 2] | 0) | 0;
  HEAP32[i1 + 8 >> 2] = i8;
  HEAP32[i1 + 12 >> 2] = 0;
  HEAP32[i1 + 16 >> 2] = (HEAP32[i6 + 108 >> 2] | 0) == 0 ? 2 : 3;
  HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
 }
 return;
}

function _initial_setup_35(i15) {
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i14 = i15 + 32 | 0;
 if (!((HEAP32[i14 >> 2] | 0) <= 65500 ? (HEAP32[i15 + 28 >> 2] | 0) <= 65500 : 0)) {
  i13 = HEAP32[i15 >> 2] | 0;
  HEAP32[i13 + 20 >> 2] = 41;
  HEAP32[i13 + 24 >> 2] = 65500;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i15 >> 2] >> 2] & 255](i15);
 }
 i1 = HEAP32[i15 + 212 >> 2] | 0;
 if ((i1 | 0) != 8) {
  i13 = HEAP32[i15 >> 2] | 0;
  HEAP32[i13 + 20 >> 2] = 15;
  HEAP32[i13 + 24 >> 2] = i1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i15 >> 2] >> 2] & 255](i15);
 }
 i13 = i15 + 36 | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 if ((i1 | 0) > 10) {
  i8 = HEAP32[i15 >> 2] | 0;
  HEAP32[i8 + 20 >> 2] = 26;
  HEAP32[i8 + 24 >> 2] = i1;
  HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] = 10;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i15 >> 2] >> 2] & 255](i15);
  i8 = i15;
 } else i8 = i15;
 i11 = i15 + 308 | 0;
 HEAP32[i11 >> 2] = 1;
 i12 = i15 + 312 | 0;
 HEAP32[i12 >> 2] = 1;
 i9 = i15 + 216 | 0;
 i6 = HEAP32[i9 >> 2] | 0;
 i7 = 0;
 i2 = 1;
 i3 = 1;
 while (1) {
  i1 = HEAP32[i13 >> 2] | 0;
  if ((i7 | 0) >= (i1 | 0)) break;
  i1 = i6 + 8 | 0;
  i4 = HEAP32[i1 >> 2] | 0;
  i5 = i6 + 12 | 0;
  if ((i4 + -1 | 0) >>> 0 <= 3 ? (i10 = HEAP32[i5 >> 2] | 0, (i10 + -1 | 0) >>> 0 <= 3) : 0) i1 = i10; else {
   i3 = HEAP32[i15 >> 2] | 0;
   HEAP32[i3 + 20 >> 2] = 18;
   FUNCTION_TABLE_vi[HEAP32[i3 >> 2] & 255](i8);
   i3 = HEAP32[i11 >> 2] | 0;
   i4 = HEAP32[i1 >> 2] | 0;
   i2 = HEAP32[i12 >> 2] | 0;
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = (i3 | 0) > (i4 | 0) ? i3 : i4;
  HEAP32[i11 >> 2] = i3;
  i2 = (i2 | 0) > (i1 | 0) ? i2 : i1;
  HEAP32[i12 >> 2] = i2;
  i6 = i6 + 84 | 0;
  i7 = i7 + 1 | 0;
 }
 HEAP32[i15 + 316 >> 2] = 8;
 i4 = i15 + 28 | 0;
 i2 = HEAP32[i9 >> 2] | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i1 | 0)) break;
  HEAP32[i2 + 36 >> 2] = 8;
  i10 = i2 + 8 | 0;
  i1 = Math_imul(HEAP32[i10 >> 2] | 0, HEAP32[i4 >> 2] | 0) | 0;
  i1 = _jdiv_round_up(i1, HEAP32[i11 >> 2] << 3) | 0;
  HEAP32[i2 + 28 >> 2] = i1;
  i1 = i2 + 12 | 0;
  i9 = Math_imul(HEAP32[i1 >> 2] | 0, HEAP32[i14 >> 2] | 0) | 0;
  i9 = _jdiv_round_up(i9, HEAP32[i12 >> 2] << 3) | 0;
  HEAP32[i2 + 32 >> 2] = i9;
  i10 = Math_imul(HEAP32[i10 >> 2] | 0, HEAP32[i4 >> 2] | 0) | 0;
  i10 = _jdiv_round_up(i10, HEAP32[i11 >> 2] | 0) | 0;
  HEAP32[i2 + 40 >> 2] = i10;
  i1 = Math_imul(HEAP32[i1 >> 2] | 0, HEAP32[i14 >> 2] | 0) | 0;
  i1 = _jdiv_round_up(i1, HEAP32[i12 >> 2] | 0) | 0;
  HEAP32[i2 + 44 >> 2] = i1;
  HEAP32[i2 + 48 >> 2] = 1;
  HEAP32[i2 + 76 >> 2] = 0;
  i2 = i2 + 84 | 0;
  i3 = i3 + 1 | 0;
  i1 = HEAP32[i13 >> 2] | 0;
 }
 i14 = _jdiv_round_up(HEAP32[i14 >> 2] | 0, HEAP32[i12 >> 2] << 3) | 0;
 HEAP32[i15 + 320 >> 2] = i14;
 if ((HEAP32[i15 + 328 >> 2] | 0) < (HEAP32[i13 >> 2] | 0)) i1 = 1; else i1 = (HEAP32[i15 + 220 >> 2] | 0) != 0 & 1;
 HEAP32[(HEAP32[i15 + 436 >> 2] | 0) + 16 >> 2] = i1;
 return;
}

function _h2v2_merged_upsample(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i19 = HEAP32[i4 + 452 >> 2] | 0;
 i21 = HEAP32[i4 + 324 >> 2] | 0;
 i22 = HEAP32[i19 + 16 >> 2] | 0;
 i17 = HEAP32[i19 + 20 >> 2] | 0;
 i18 = HEAP32[i19 + 24 >> 2] | 0;
 i19 = HEAP32[i19 + 28 >> 2] | 0;
 i6 = HEAP32[i1 >> 2] | 0;
 i20 = i2 << 1;
 i5 = HEAP32[i6 + (i20 << 2) >> 2] | 0;
 i20 = HEAP32[i6 + ((i20 | 1) << 2) >> 2] | 0;
 i6 = HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + (i2 << 2) >> 2] | 0;
 i16 = HEAP32[(HEAP32[i1 + 8 >> 2] | 0) + (i2 << 2) >> 2] | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 i9 = HEAP32[i3 + 4 >> 2] | 0;
 i10 = i4 + 112 | 0;
 i12 = HEAP32[i10 >> 2] | 0;
 i11 = i12 >>> 1;
 i8 = i11 * 6 | 0;
 i13 = i7 + i8 | 0;
 i12 = i12 & -2;
 i14 = i5 + i12 | 0;
 i15 = i6 + i11 | 0;
 i1 = i11;
 i2 = i16;
 i3 = i6;
 i4 = i20;
 i6 = i9;
 while (1) {
  if (!i1) break;
  i24 = HEAPU8[i3 >> 0] | 0;
  i25 = HEAPU8[i2 >> 0] | 0;
  i26 = HEAP32[i22 + (i25 << 2) >> 2] | 0;
  i25 = (HEAP32[i18 + (i25 << 2) >> 2] | 0) + (HEAP32[i19 + (i24 << 2) >> 2] | 0) >> 16;
  i24 = HEAP32[i17 + (i24 << 2) >> 2] | 0;
  i23 = HEAPU8[i5 >> 0] | 0;
  HEAP8[i7 >> 0] = HEAP8[i21 + (i26 + i23) >> 0] | 0;
  HEAP8[i7 + 1 >> 0] = HEAP8[i21 + (i25 + i23) >> 0] | 0;
  HEAP8[i7 + 2 >> 0] = HEAP8[i21 + (i24 + i23) >> 0] | 0;
  i23 = HEAPU8[i5 + 1 >> 0] | 0;
  HEAP8[i7 + 3 >> 0] = HEAP8[i21 + (i26 + i23) >> 0] | 0;
  HEAP8[i7 + 4 >> 0] = HEAP8[i21 + (i25 + i23) >> 0] | 0;
  HEAP8[i7 + 5 >> 0] = HEAP8[i21 + (i24 + i23) >> 0] | 0;
  i23 = HEAPU8[i4 >> 0] | 0;
  HEAP8[i6 >> 0] = HEAP8[i21 + (i26 + i23) >> 0] | 0;
  HEAP8[i6 + 1 >> 0] = HEAP8[i21 + (i25 + i23) >> 0] | 0;
  HEAP8[i6 + 2 >> 0] = HEAP8[i21 + (i24 + i23) >> 0] | 0;
  i23 = HEAPU8[i4 + 1 >> 0] | 0;
  HEAP8[i6 + 3 >> 0] = HEAP8[i21 + (i26 + i23) >> 0] | 0;
  HEAP8[i6 + 4 >> 0] = HEAP8[i21 + (i25 + i23) >> 0] | 0;
  HEAP8[i6 + 5 >> 0] = HEAP8[i21 + (i24 + i23) >> 0] | 0;
  i1 = i1 + -1 | 0;
  i2 = i2 + 1 | 0;
  i3 = i3 + 1 | 0;
  i4 = i4 + 2 | 0;
  i5 = i5 + 2 | 0;
  i6 = i6 + 6 | 0;
  i7 = i7 + 6 | 0;
 }
 i1 = i9 + i8 | 0;
 if (HEAP32[i10 >> 2] & 1 | 0) {
  i25 = HEAPU8[i15 >> 0] | 0;
  i24 = HEAPU8[i16 + i11 >> 0] | 0;
  i23 = HEAP32[i22 + (i24 << 2) >> 2] | 0;
  i24 = (HEAP32[i18 + (i24 << 2) >> 2] | 0) + (HEAP32[i19 + (i25 << 2) >> 2] | 0) >> 16;
  i25 = HEAP32[i17 + (i25 << 2) >> 2] | 0;
  i26 = HEAPU8[i14 >> 0] | 0;
  HEAP8[i13 >> 0] = HEAP8[i21 + (i23 + i26) >> 0] | 0;
  HEAP8[i13 + 1 >> 0] = HEAP8[i21 + (i24 + i26) >> 0] | 0;
  HEAP8[i13 + 2 >> 0] = HEAP8[i21 + (i25 + i26) >> 0] | 0;
  i26 = HEAPU8[i20 + i12 >> 0] | 0;
  HEAP8[i1 >> 0] = HEAP8[i21 + (i23 + i26) >> 0] | 0;
  HEAP8[i1 + 1 >> 0] = HEAP8[i21 + (i24 + i26) >> 0] | 0;
  HEAP8[i1 + 2 >> 0] = HEAP8[i21 + (i25 + i26) >> 0] | 0;
 }
 return;
}

function _start_pass_phuff_decoder(i13) {
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0, i16 = 0;
 i14 = HEAP32[i13 + 444 >> 2] | 0;
 i10 = i13 + 400 | 0;
 i3 = HEAP32[i10 >> 2] | 0;
 i15 = (i3 | 0) == 0;
 i11 = i13 + 404 | 0;
 i1 = HEAP32[i11 >> 2] | 0;
 if (i15) i1 = (i1 | 0) != 0; else i1 = (i3 | 0) > (i1 | 0) | (i1 | 0) > 63 | (HEAP32[i13 + 328 >> 2] | 0) != 1;
 i12 = i13 + 408 | 0;
 i2 = HEAP32[i12 >> 2] | 0;
 if (!i2) {
  i2 = i13 + 412 | 0;
  i8 = i2;
  i2 = HEAP32[i2 >> 2] | 0;
 } else {
  i8 = i13 + 412 | 0;
  i9 = HEAP32[i8 >> 2] | 0;
  i1 = i1 | (i9 | 0) != (i2 + -1 | 0);
  i2 = i9;
 }
 if ((i2 | 0) < 14 & (i1 ^ 1)) i6 = i13; else {
  i6 = HEAP32[i13 >> 2] | 0;
  HEAP32[i6 + 20 >> 2] = 16;
  HEAP32[i6 + 24 >> 2] = i3;
  HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] = HEAP32[i11 >> 2];
  HEAP32[(HEAP32[i13 >> 2] | 0) + 32 >> 2] = HEAP32[i12 >> 2];
  HEAP32[(HEAP32[i13 >> 2] | 0) + 36 >> 2] = HEAP32[i8 >> 2];
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i13 >> 2] >> 2] & 255](i13);
  i6 = i13;
 }
 i9 = i13 + 328 | 0;
 i7 = i13 + 160 | 0;
 i5 = 0;
 while (1) {
  i1 = HEAP32[i9 >> 2] | 0;
  if ((i5 | 0) >= (i1 | 0)) break;
  i2 = HEAP32[(HEAP32[i13 + 332 + (i5 << 2) >> 2] | 0) + 4 >> 2] | 0;
  i3 = HEAP32[i7 >> 2] | 0;
  if (!i15 ? (HEAP32[i3 + (i2 << 8) >> 2] | 0) < 0 : 0) {
   i4 = HEAP32[i13 >> 2] | 0;
   HEAP32[i4 + 20 >> 2] = 115;
   HEAP32[i4 + 24 >> 2] = i2;
   HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] = 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i13 >> 2] | 0) + 4 >> 2] & 63](i6, -1);
  }
  i1 = HEAP32[i10 >> 2] | 0;
  while (1) {
   if ((i1 | 0) > (HEAP32[i11 >> 2] | 0)) break;
   i4 = i3 + (i2 << 8) + (i1 << 2) | 0;
   i16 = HEAP32[i4 >> 2] | 0;
   if ((HEAP32[i12 >> 2] | 0) != (((i16 | 0) > 0 ? i16 : 0) | 0)) {
    i16 = HEAP32[i13 >> 2] | 0;
    HEAP32[i16 + 20 >> 2] = 115;
    HEAP32[i16 + 24 >> 2] = i2;
    HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] = i1;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i13 >> 2] | 0) + 4 >> 2] & 63](i6, -1);
   }
   HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
   i1 = i1 + 1 | 0;
  }
  i5 = i5 + 1 | 0;
 }
 HEAP32[i14 + 4 >> 2] = (HEAP32[i12 >> 2] | 0) == 0 ? (i15 ? 26 : 25) : i15 ? 28 : 27;
 i3 = i14 + 60 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) >= (i1 | 0)) break;
  i1 = HEAP32[i13 + 332 + (i2 << 2) >> 2] | 0;
  if (i15) {
   if (!(HEAP32[i12 >> 2] | 0)) {
    i16 = HEAP32[i1 + 20 >> 2] | 0;
    _jpeg_make_d_derived_tbl(i13, 1, i16, i14 + 44 + (i16 << 2) | 0);
   }
  } else {
   i11 = HEAP32[i1 + 24 >> 2] | 0;
   i16 = i14 + 44 + (i11 << 2) | 0;
   _jpeg_make_d_derived_tbl(i13, 0, i11, i16);
   HEAP32[i3 >> 2] = HEAP32[i16 >> 2];
  }
  HEAP32[i14 + 24 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
  i1 = HEAP32[i9 >> 2] | 0;
 }
 i16 = i14 + 8 | 0;
 HEAP32[i16 >> 2] = 0;
 HEAP32[i16 + 4 >> 2] = 0;
 HEAP32[i16 + 8 >> 2] = 0;
 HEAP32[i16 + 12 >> 2] = 0;
 HEAP32[i14 + 40 >> 2] = HEAP32[i13 + 276 >> 2];
 return;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_25GaussianScaleSpacePyramidE(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i1 = i9 + 16 | 0;
 i8 = i9;
 i5 = i9 + 56 | 0;
 i6 = i9 + 48 | 0;
 i7 = i2 + 160 | 0;
 i10 = __ZNK6vision25DoGScaleInvariantDetector5widthEv(i7) | 0;
 i4 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv(i3) | 0;
 if (!((i10 | 0) == (__ZNK6vision5Image5widthEv(HEAP32[i4 >> 2] | 0) | 0) ? (i4 = __ZNK6vision25DoGScaleInvariantDetector6heightEv(i7) | 0, i10 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv(i3) | 0, (i4 | 0) == (__ZNK6vision5Image6heightEv(HEAP32[i10 >> 2] | 0) | 0)) : 0)) __ZN6vision25DoGScaleInvariantDetector5allocEPKNS_25GaussianScaleSpacePyramidE(i7, i3);
 i4 = i2 + 64 | 0;
 i11 = __Znwm(148) | 0;
 __ZN6vision8KeyframeILi96EEC2Ev(i11);
 HEAP32[i6 >> 2] = 0;
 HEAP32[i1 >> 2] = HEAP32[i6 >> 2];
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE(i5, i11, i1);
 i11 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i11;
 i11 = i5 + 4 | 0;
 i10 = i2 + 68 | 0;
 i6 = HEAP32[i11 >> 2] | 0;
 HEAP32[i11 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i10 >> 2] = i6;
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev(i5);
 i10 = HEAP32[i4 >> 2] | 0;
 i6 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv(i3) | 0;
 __ZN6vision8KeyframeILi96EE8setWidthEi(i10, __ZNK6vision5Image5widthEv(HEAP32[i6 >> 2] | 0) | 0);
 i6 = HEAP32[i4 >> 2] | 0;
 i10 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv(i3) | 0;
 __ZN6vision8KeyframeILi96EE9setHeightEi(i6, __ZNK6vision5Image6heightEv(HEAP32[i10 >> 2] | 0) | 0);
 __ZN6vision11ScopedTimerC2EPKc(i1, 27340);
 if (__ZN6vision11ScopedTimercvbEv(i1) | 0) __ZN6vision12FindFeaturesINS_14FREAKExtractorELi96EEEvPNS_8KeyframeIXT0_EEEPKNS_25GaussianScaleSpacePyramidEPNS_25DoGScaleInvariantDetectorEPT_(HEAP32[i4 >> 2] | 0, i3, i7, i2 + 316 | 0);
 __ZN6vision11ScopedTimerD2Ev(i1);
 i11 = __ZN6vision6Logger11getInstanceEv() | 0;
 __ZN6vision15get_pretty_timeEv(i1);
 i7 = (HEAP8[i1 + 11 >> 0] | 0) < 0 ? HEAP32[i1 >> 2] | 0 : i1;
 i10 = __ZNK6vision18BinaryFeatureStore4sizeEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[i4 >> 2] | 0) | 0) | 0;
 HEAP32[i8 >> 2] = 33784;
 HEAP32[i8 + 4 >> 2] = i7;
 HEAP32[i8 + 8 >> 2] = 28977;
 HEAP32[i8 + 12 >> 2] = i10;
 __ZN6vision6Logger5writeENS_19LoggerPriorityLevelEPKcz(i11, 8, 28933, i8);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
 i11 = __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_8KeyframeILi96EEE(i2, HEAP32[i4 >> 2] | 0) | 0;
 STACKTOP = i9;
 return i11 | 0;
}

function _icpPoint(i13, i14, i4, i15, i21) {
 i13 = i13 | 0;
 i14 = i14 | 0;
 i4 = i4 | 0;
 i15 = i15 | 0;
 i21 = i21 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d5 = 0.0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, d23 = 0.0, d24 = 0.0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 i3 = i22 + 168 | 0;
 i2 = i22 + 160 | 0;
 i16 = i22 + 144 | 0;
 i17 = i22 + 48 | 0;
 i18 = i22;
 i19 = i14 + 8 | 0;
 i1 = HEAP32[i19 >> 2] | 0;
 do if ((i1 | 0) >= 3) {
  i20 = _malloc(i1 * 96 | 0) | 0;
  if (!i20) {
   _arLog(0, 3, 19966, i2);
   i1 = -1;
   break;
  }
  i12 = _malloc(i1 << 4) | 0;
  if (!i12) {
   _arLog(0, 3, 19966, i3);
   _free(i20);
   i1 = -1;
   break;
  }
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 4) break;
    HEAPF64[i15 + (i1 << 5) + (i2 << 3) >> 3] = +HEAPF64[i4 + (i1 << 5) + (i2 << 3) >> 3];
    i2 = i2 + 1 | 0;
   }
   i1 = i1 + 1 | 0;
  }
  i4 = i14 + 4 | 0;
  i7 = i16 + 8 | 0;
  i8 = i13 + 104 | 0;
  i9 = i13 + 96 | 0;
  i10 = i13 + 120 | 0;
  i11 = i13 + 112 | 0;
  d6 = 0.0;
  i3 = 0;
  L17 : while (1) {
   _arUtilMatMul(i13, i15, i17) | 0;
   d5 = 0.0;
   i2 = 0;
   while (1) {
    i1 = HEAP32[i19 >> 2] | 0;
    if ((i2 | 0) >= (i1 | 0)) break;
    if ((_icpGetU_from_X_by_MatX2U(i16, i17, (HEAP32[i4 >> 2] | 0) + (i2 * 24 | 0) | 0) | 0) < 0) {
     i2 = 16;
     break L17;
    }
    i1 = HEAP32[i14 >> 2] | 0;
    d24 = +HEAPF64[i1 + (i2 << 4) >> 3] - +HEAPF64[i16 >> 3];
    d23 = +HEAPF64[i1 + (i2 << 4) + 8 >> 3] - +HEAPF64[i7 >> 3];
    i1 = i2 << 1;
    HEAPF64[i12 + (i1 << 3) >> 3] = d24;
    HEAPF64[i12 + ((i1 | 1) << 3) >> 3] = d23;
    d5 = d5 + (d24 * d24 + d23 * d23);
    i2 = i2 + 1 | 0;
   }
   d5 = d5 / +(i1 | 0);
   if (d5 < +HEAPF64[i8 >> 3]) {
    i2 = 31;
    break;
   }
   if ((i3 | 0 ? d5 < +HEAPF64[i10 >> 3] : 0) ? d5 / d6 > +HEAPF64[i11 >> 3] : 0) {
    i2 = 31;
    break;
   }
   if ((i3 | 0) == (HEAP32[i9 >> 2] | 0)) {
    i2 = 31;
    break;
   }
   i2 = 0;
   while (1) {
    if ((i2 | 0) >= (i1 | 0)) break;
    if ((_icpGetJ_U_S(i20 + (i2 * 12 << 3) | 0, i13, i15, (HEAP32[i4 >> 2] | 0) + (i2 * 24 | 0) | 0) | 0) < 0) {
     i2 = 27;
     break L17;
    }
    i2 = i2 + 1 | 0;
    i1 = HEAP32[i19 >> 2] | 0;
   }
   if ((_icpGetDeltaS(i18, i12, i20, i1 << 1) | 0) < 0) {
    i2 = 29;
    break;
   }
   _icpUpdateMat(i15, i18) | 0;
   d6 = d5;
   i3 = i3 + 1 | 0;
  }
  if ((i2 | 0) == 16) {
   _icpGetXw2XcCleanup(i20, i12);
   i1 = -1;
   break;
  } else if ((i2 | 0) == 27) {
   _icpGetXw2XcCleanup(i20, i12);
   i1 = -1;
   break;
  } else if ((i2 | 0) == 29) {
   _icpGetXw2XcCleanup(i20, i12);
   i1 = -1;
   break;
  } else if ((i2 | 0) == 31) {
   HEAPF64[i21 >> 3] = d5;
   _free(i20);
   _free(i12);
   i1 = 0;
   break;
  }
 } else i1 = -1; while (0);
 STACKTOP = i22;
 return i1 | 0;
}

function __ZN6vision11PartialSortIfEET_PS1_ii(i14, i2, i15) {
 i14 = i14 | 0;
 i2 = i2 | 0;
 i15 = i15 | 0;
 var i1 = 0, i3 = 0, d4 = 0.0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, d11 = 0.0, i12 = 0, i13 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i16;
 if ((i2 | 0) <= 0) {
  i13 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 31894) | 0, 31923) | 0, 33655) | 0, 53) | 0, 33662) | 0, 32032) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 }
 if ((i15 | 0) <= 0) {
  i13 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32051) | 0, 31923) | 0, 33655) | 0, 54) | 0, 33662) | 0, 32080) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 }
 i12 = i15 + -1 | 0;
 i13 = i14 + (i12 << 2) | 0;
 i9 = i2 + -1 | 0;
 i10 = 0;
 while (1) {
  d11 = +HEAPF32[i13 >> 2];
  if ((i10 | 0) >= (i9 | 0)) break;
  i1 = i10;
  i2 = i9;
  do {
   while (1) {
    i5 = i14 + (i1 << 2) | 0;
    d6 = +HEAPF32[i5 >> 2];
    i7 = i1 + 1 | 0;
    if (d6 < d11) i1 = i7; else break;
   }
   while (1) {
    i3 = i14 + (i2 << 2) | 0;
    d4 = +HEAPF32[i3 >> 2];
    i8 = i2 + -1 | 0;
    if (d11 < d4) i2 = i8; else break;
   }
   if ((i1 | 0) <= (i2 | 0)) {
    HEAPF32[i5 >> 2] = d4;
    HEAPF32[i3 >> 2] = d6;
    i1 = i7;
    i2 = i8;
   }
  } while ((i1 | 0) <= (i2 | 0));
  i9 = (i1 | 0) < (i15 | 0) ? i9 : i2;
  i10 = (i2 | 0) < (i12 | 0) ? i1 : i10;
 }
 STACKTOP = i16;
 return +d11;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i6 = i12 + 48 | 0;
 i8 = i12 + 36 | 0;
 i9 = i12 + 24 | 0;
 i10 = i12 + 12 | 0;
 i11 = i12;
 i7 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i4) | 0;
 if ((i7 | 0) != (i1 | 0) ? (i5 = i4 + 4 | 0, (HEAP32[i4 >> 2] | 0) != (HEAP32[i5 >> 2] | 0)) : 0) {
  __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i10, i3, 50526);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i11, (HEAP32[i5 >> 2] | 0) + -24 | 0);
  i1 = HEAP8[i11 + 11 >> 0] | 0;
  i4 = i1 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i10, i4 ? HEAP32[i11 >> 2] | 0 : i11, i4 ? HEAP32[i11 + 4 >> 2] | 0 : i1 & 255) | 0;
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9, 50524) | 0;
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i9 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = i1 + -24 | 0;
  i3 = i2 + 11 | 0;
  if ((HEAP8[i3 >> 0] | 0) < 0) {
   i5 = HEAP32[i2 >> 2] | 0;
   HEAP8[i6 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i5, i6);
   HEAP32[i1 + -20 >> 2] = 0;
  } else {
   HEAP8[i6 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i6);
   HEAP8[i3 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
  HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i8 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  i1 = i7;
 }
 STACKTOP = i12;
 return i1 | 0;
}

function _jinit_color_deconverter(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i2 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i4 + 4 >> 2] >> 2] & 63](i4, 1, 24) | 0;
 HEAP32[i4 + 456 >> 2] = i2;
 HEAP32[i2 >> 2] = 126;
 i3 = i4 + 40 | 0;
 switch (HEAP32[i3 >> 2] | 0) {
 case 1:
  {
   if ((HEAP32[i4 + 36 >> 2] | 0) != 1) {
    i1 = HEAP32[i4 >> 2] | 0;
    HEAP32[i1 + 20 >> 2] = 10;
    FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i4);
   }
   break;
  }
 case 3:
 case 2:
  {
   if ((HEAP32[i4 + 36 >> 2] | 0) != 3) {
    i1 = HEAP32[i4 >> 2] | 0;
    HEAP32[i1 + 20 >> 2] = 10;
    FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i4);
   }
   break;
  }
 case 5:
 case 4:
  {
   if ((HEAP32[i4 + 36 >> 2] | 0) != 4) {
    i1 = HEAP32[i4 >> 2] | 0;
    HEAP32[i1 + 20 >> 2] = 10;
    FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i4);
   }
   break;
  }
 default:
  if ((HEAP32[i4 + 36 >> 2] | 0) < 1) {
   i1 = HEAP32[i4 >> 2] | 0;
   HEAP32[i1 + 20 >> 2] = 10;
   FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i4);
  }
 }
 i1 = HEAP32[i4 + 44 >> 2] | 0;
 L11 : do switch (i1 | 0) {
 case 1:
  {
   HEAP32[i4 + 120 >> 2] = 1;
   switch (HEAP32[i3 >> 2] | 0) {
   case 3:
   case 1:
    break;
   default:
    {
     i3 = HEAP32[i4 >> 2] | 0;
     HEAP32[i3 + 20 >> 2] = 27;
     FUNCTION_TABLE_vi[HEAP32[i3 >> 2] & 255](i4);
     break L11;
    }
   }
   HEAP32[i2 + 4 >> 2] = 6;
   i2 = HEAP32[i4 + 36 >> 2] | 0;
   i3 = i4 + 216 | 0;
   i1 = 1;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break L11;
    HEAP32[(HEAP32[i3 >> 2] | 0) + (i1 * 84 | 0) + 48 >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
  }
 case 2:
  {
   HEAP32[i4 + 120 >> 2] = 3;
   switch (HEAP32[i3 >> 2] | 0) {
   case 3:
    {
     HEAP32[i2 + 4 >> 2] = 7;
     _build_ycc_rgb_table(i4);
     break L11;
    }
   case 1:
    {
     HEAP32[i2 + 4 >> 2] = 8;
     break L11;
    }
   case 2:
    {
     HEAP32[i2 + 4 >> 2] = 9;
     break L11;
    }
   default:
    {
     i3 = HEAP32[i4 >> 2] | 0;
     HEAP32[i3 + 20 >> 2] = 27;
     FUNCTION_TABLE_vi[HEAP32[i3 >> 2] & 255](i4);
     break L11;
    }
   }
  }
 case 4:
  {
   HEAP32[i4 + 120 >> 2] = 4;
   switch (HEAP32[i3 >> 2] | 0) {
   case 5:
    {
     HEAP32[i2 + 4 >> 2] = 10;
     _build_ycc_rgb_table(i4);
     break L11;
    }
   case 4:
    {
     HEAP32[i2 + 4 >> 2] = 9;
     break L11;
    }
   default:
    {
     i3 = HEAP32[i4 >> 2] | 0;
     HEAP32[i3 + 20 >> 2] = 27;
     FUNCTION_TABLE_vi[HEAP32[i3 >> 2] & 255](i4);
     break L11;
    }
   }
  }
 default:
  if ((i1 | 0) == (HEAP32[i3 >> 2] | 0)) {
   HEAP32[i4 + 120 >> 2] = HEAP32[i4 + 36 >> 2];
   HEAP32[i2 + 4 >> 2] = 9;
   break L11;
  } else {
   i3 = HEAP32[i4 >> 2] | 0;
   HEAP32[i3 + 20 >> 2] = 27;
   FUNCTION_TABLE_vi[HEAP32[i3 >> 2] & 255](i4);
   break L11;
  }
 } while (0);
 if (!(HEAP32[i4 + 84 >> 2] | 0)) i1 = HEAP32[i4 + 120 >> 2] | 0; else i1 = 1;
 HEAP32[i4 + 124 >> 2] = i1;
 return;
}

function _find_nearby_colors(i1, i7, i13, i14, i17) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i17 = i17 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 1024 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1024);
 i18 = i20;
 i19 = HEAP32[i1 + 132 >> 2] | 0;
 i15 = i7 + 24 | 0;
 i8 = i15 + i7 >> 1;
 i9 = i13 + 28 | 0;
 i10 = i9 + i13 >> 1;
 i11 = i14 + 24 | 0;
 i12 = i11 + i14 >> 1;
 i6 = i1 + 136 | 0;
 i16 = 2147483647;
 i5 = 0;
 while (1) {
  if ((i5 | 0) >= (i19 | 0)) break;
  i4 = HEAP32[i6 >> 2] | 0;
  i1 = HEAPU8[(HEAP32[i4 >> 2] | 0) + i5 >> 0] | 0;
  do if ((i1 | 0) >= (i7 | 0)) {
   if ((i15 | 0) < (i1 | 0)) {
    i2 = i1 - i15 << 1;
    i3 = i1 - i7 << 1;
    i3 = Math_imul(i3, i3) | 0;
    i1 = Math_imul(i2, i2) | 0;
    break;
   }
   if ((i8 | 0) < (i1 | 0)) {
    i3 = i1 - i7 << 1;
    i3 = Math_imul(i3, i3) | 0;
    i1 = 0;
    break;
   } else {
    i3 = i1 - i15 << 1;
    i3 = Math_imul(i3, i3) | 0;
    i1 = 0;
    break;
   }
  } else {
   i2 = i1 - i7 << 1;
   i3 = i1 - i15 << 1;
   i3 = Math_imul(i3, i3) | 0;
   i1 = Math_imul(i2, i2) | 0;
  } while (0);
  i2 = HEAPU8[(HEAP32[i4 + 4 >> 2] | 0) + i5 >> 0] | 0;
  do if ((i2 | 0) >= (i13 | 0)) {
   if ((i9 | 0) < (i2 | 0)) {
    i21 = (i2 - i9 | 0) * 3 | 0;
    i2 = (i2 - i13 | 0) * 3 | 0;
    i1 = (Math_imul(i21, i21) | 0) + i1 | 0;
    i2 = Math_imul(i2, i2) | 0;
    break;
   }
   if ((i10 | 0) < (i2 | 0)) {
    i2 = (i2 - i13 | 0) * 3 | 0;
    i2 = Math_imul(i2, i2) | 0;
    break;
   } else {
    i2 = (i2 - i9 | 0) * 3 | 0;
    i2 = Math_imul(i2, i2) | 0;
    break;
   }
  } else {
   i21 = (i2 - i13 | 0) * 3 | 0;
   i2 = (i2 - i9 | 0) * 3 | 0;
   i1 = (Math_imul(i21, i21) | 0) + i1 | 0;
   i2 = Math_imul(i2, i2) | 0;
  } while (0);
  i3 = i2 + i3 | 0;
  i2 = HEAPU8[(HEAP32[i4 + 8 >> 2] | 0) + i5 >> 0] | 0;
  do if ((i2 | 0) >= (i14 | 0)) {
   if ((i11 | 0) < (i2 | 0)) {
    i21 = i2 - i11 | 0;
    i2 = i2 - i14 | 0;
    i1 = (Math_imul(i21, i21) | 0) + i1 | 0;
    i2 = Math_imul(i2, i2) | 0;
    break;
   }
   if ((i12 | 0) < (i2 | 0)) {
    i2 = i2 - i14 | 0;
    i2 = Math_imul(i2, i2) | 0;
    break;
   } else {
    i2 = i2 - i11 | 0;
    i2 = Math_imul(i2, i2) | 0;
    break;
   }
  } else {
   i21 = i2 - i14 | 0;
   i2 = i2 - i11 | 0;
   i1 = (Math_imul(i21, i21) | 0) + i1 | 0;
   i2 = Math_imul(i2, i2) | 0;
  } while (0);
  i21 = i3 + i2 | 0;
  HEAP32[i18 + (i5 << 2) >> 2] = i1;
  i16 = (i21 | 0) < (i16 | 0) ? i21 : i16;
  i5 = i5 + 1 | 0;
 }
 i1 = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) >= (i19 | 0)) break;
  if ((HEAP32[i18 + (i2 << 2) >> 2] | 0) <= (i16 | 0)) {
   HEAP8[i17 + i1 >> 0] = i2;
   i1 = i1 + 1 | 0;
  }
  i2 = i2 + 1 | 0;
 }
 STACKTOP = i20;
 return i1 | 0;
}

function _jpeg_calc_output_dimensions(i13) {
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0;
 i1 = HEAP32[i13 + 20 >> 2] | 0;
 if ((i1 | 0) != 202) {
  i12 = HEAP32[i13 >> 2] | 0;
  HEAP32[i12 + 20 >> 2] = 20;
  HEAP32[i12 + 24 >> 2] = i1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i13 >> 2] >> 2] & 255](i13);
 }
 i1 = HEAP32[i13 + 48 >> 2] | 0;
 i2 = HEAP32[i13 + 52 >> 2] | 0;
 do if (i1 << 3 >>> 0 > i2 >>> 0) {
  if (i1 << 2 >>> 0 <= i2 >>> 0) {
   i9 = _jdiv_round_up(HEAP32[i13 + 28 >> 2] | 0, 4) | 0;
   HEAP32[i13 + 112 >> 2] = i9;
   i9 = 2;
   i1 = _jdiv_round_up(HEAP32[i13 + 32 >> 2] | 0, 4) | 0;
   break;
  }
  i3 = HEAP32[i13 + 28 >> 2] | 0;
  if (i1 << 1 >>> 0 > i2 >>> 0) {
   HEAP32[i13 + 112 >> 2] = i3;
   i9 = 8;
   i1 = HEAP32[i13 + 32 >> 2] | 0;
   break;
  } else {
   i9 = _jdiv_round_up(i3, 2) | 0;
   HEAP32[i13 + 112 >> 2] = i9;
   i9 = 4;
   i1 = _jdiv_round_up(HEAP32[i13 + 32 >> 2] | 0, 2) | 0;
   break;
  }
 } else {
  i9 = _jdiv_round_up(HEAP32[i13 + 28 >> 2] | 0, 8) | 0;
  HEAP32[i13 + 112 >> 2] = i9;
  i9 = 1;
  i1 = _jdiv_round_up(HEAP32[i13 + 32 >> 2] | 0, 8) | 0;
 } while (0);
 HEAP32[i13 + 116 >> 2] = i1;
 HEAP32[i13 + 316 >> 2] = i9;
 i2 = HEAP32[i13 + 216 >> 2] | 0;
 i10 = i13 + 36 | 0;
 i1 = HEAP32[i10 >> 2] | 0;
 i11 = i13 + 308 | 0;
 i12 = i13 + 312 | 0;
 i4 = i2;
 i5 = 0;
 while (1) {
  if ((i5 | 0) >= (i1 | 0)) break;
  i6 = i4 + 8 | 0;
  i7 = i4 + 12 | 0;
  i3 = i9;
  while (1) {
   if ((i3 | 0) >= 8) break;
   i8 = i3 << 1;
   i14 = Math_imul(i8, HEAP32[i6 >> 2] | 0) | 0;
   if ((i14 | 0) > (Math_imul(HEAP32[i11 >> 2] | 0, i9) | 0)) break;
   i14 = Math_imul(i8, HEAP32[i7 >> 2] | 0) | 0;
   if ((i14 | 0) > (Math_imul(HEAP32[i12 >> 2] | 0, i9) | 0)) break; else i3 = i8;
  }
  HEAP32[i4 + 36 >> 2] = i3;
  i4 = i4 + 84 | 0;
  i5 = i5 + 1 | 0;
 }
 i4 = i13 + 28 | 0;
 i5 = i13 + 32 | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i1 | 0)) break;
  i1 = i2 + 36 | 0;
  i14 = Math_imul(Math_imul(HEAP32[i2 + 8 >> 2] | 0, HEAP32[i4 >> 2] | 0) | 0, HEAP32[i1 >> 2] | 0) | 0;
  i14 = _jdiv_round_up(i14, HEAP32[i11 >> 2] << 3) | 0;
  HEAP32[i2 + 40 >> 2] = i14;
  i1 = Math_imul(Math_imul(HEAP32[i2 + 12 >> 2] | 0, HEAP32[i5 >> 2] | 0) | 0, HEAP32[i1 >> 2] | 0) | 0;
  i1 = _jdiv_round_up(i1, HEAP32[i12 >> 2] << 3) | 0;
  HEAP32[i2 + 44 >> 2] = i1;
  i2 = i2 + 84 | 0;
  i3 = i3 + 1 | 0;
  i1 = HEAP32[i10 >> 2] | 0;
 }
 i2 = HEAP32[i13 + 44 >> 2] | 0;
 switch (i2 | 0) {
 case 1:
  {
   i1 = i2;
   break;
  }
 case 3:
 case 2:
  {
   i1 = 3;
   break;
  }
 case 5:
 case 4:
  {
   i1 = 4;
   break;
  }
 default:
  {}
 }
 HEAP32[i13 + 120 >> 2] = i1;
 HEAP32[i13 + 124 >> 2] = (HEAP32[i13 + 84 >> 2] | 0) == 0 ? i1 : 1;
 if (!(_use_merged_upsample(i13) | 0)) i1 = 1; else i1 = HEAP32[i12 >> 2] | 0;
 HEAP32[i13 + 128 >> 2] = i1;
 return;
}

function __ZNSt3__210__stdinbufIcE9__getcharEb(i11, i15) {
 i11 = i11 | 0;
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0, i18 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i13 = i16 + 16 | 0;
 i14 = i16 + 8 | 0;
 i8 = i16 + 4 | 0;
 i9 = i16;
 i3 = i11 + 52 | 0;
 if (HEAP8[i3 >> 0] | 0) {
  i2 = i11 + 48 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i15) {
   i15 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   HEAP32[i2 >> 2] = i15;
   HEAP8[i3 >> 0] = 0;
  }
 } else {
  i1 = HEAP32[i11 + 44 >> 2] | 0;
  i1 = (i1 | 0) > 1 ? i1 : 1;
  i12 = i11 + 32 | 0;
  i2 = 0;
  while (1) {
   if (i2 >>> 0 >= i1 >>> 0) {
    i10 = 9;
    break;
   }
   i3 = _getc(HEAP32[i12 >> 2] | 0) | 0;
   if ((i3 | 0) == -1) {
    i10 = 8;
    break;
   }
   HEAP8[i13 + i2 >> 0] = i3;
   i2 = i2 + 1 | 0;
  }
  if ((i10 | 0) == 8) i1 = __ZNSt3__211char_traitsIcE3eofEv() | 0; else if ((i10 | 0) == 9) {
   do if (!(HEAP8[i11 + 53 >> 0] | 0)) {
    i5 = i11 + 40 | 0;
    i6 = i11 + 36 | 0;
    i7 = i14 + 1 | 0;
    L11 : while (1) {
     i17 = HEAP32[i5 >> 2] | 0;
     i3 = i17;
     i2 = HEAP32[i3 >> 2] | 0;
     i3 = HEAP32[i3 + 4 >> 2] | 0;
     i18 = HEAP32[i6 >> 2] | 0;
     i4 = i13 + i1 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 16 >> 2] & 15](i18, i17, i13, i4, i8, i14, i7, i9) | 0) {
     case 3:
      {
       i10 = 15;
       break L11;
      }
     case 2:
      {
       i10 = 17;
       break L11;
      }
     case 1:
      break;
     default:
      break L11;
     }
     i18 = HEAP32[i5 >> 2] | 0;
     HEAP32[i18 >> 2] = i2;
     HEAP32[i18 + 4 >> 2] = i3;
     if ((i1 | 0) == 8) {
      i10 = 17;
      break;
     }
     i2 = _getc(HEAP32[i12 >> 2] | 0) | 0;
     if ((i2 | 0) == -1) {
      i10 = 17;
      break;
     }
     HEAP8[i4 >> 0] = i2;
     i1 = i1 + 1 | 0;
    }
    if ((i10 | 0) == 15) HEAP8[i14 >> 0] = HEAP8[i13 >> 0] | 0; else if ((i10 | 0) == 17) {
     i1 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
     break;
    }
    i10 = 19;
   } else {
    HEAP8[i14 >> 0] = HEAP8[i13 >> 0] | 0;
    i10 = 19;
   } while (0);
   L21 : do if ((i10 | 0) == 19) {
    L23 : do if (i15) {
     i18 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i14 >> 0] | 0) | 0;
     HEAP32[i11 + 48 >> 2] = i18;
    } else {
     do {
      if ((i1 | 0) <= 0) break L23;
      i1 = i1 + -1 | 0;
      i18 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i13 + i1 >> 0] | 0) | 0;
     } while ((_ungetc(i18, HEAP32[i12 >> 2] | 0) | 0) != -1);
     i1 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
     break L21;
    } while (0);
    i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i14 >> 0] | 0) | 0;
   } while (0);
  }
 }
 STACKTOP = i16;
 return i1 | 0;
}

function __ZNSt3__210__stdinbufIwE9__getcharEb(i11, i15) {
 i11 = i11 | 0;
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0, i18 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i13 = i16 + 16 | 0;
 i14 = i16 + 8 | 0;
 i8 = i16 + 4 | 0;
 i9 = i16;
 i3 = i11 + 52 | 0;
 if (HEAP8[i3 >> 0] | 0) {
  i2 = i11 + 48 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i15) {
   i15 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   HEAP32[i2 >> 2] = i15;
   HEAP8[i3 >> 0] = 0;
  }
 } else {
  i1 = HEAP32[i11 + 44 >> 2] | 0;
  i1 = (i1 | 0) > 1 ? i1 : 1;
  i12 = i11 + 32 | 0;
  i2 = 0;
  while (1) {
   if (i2 >>> 0 >= i1 >>> 0) {
    i10 = 9;
    break;
   }
   i3 = _getc(HEAP32[i12 >> 2] | 0) | 0;
   if ((i3 | 0) == -1) {
    i10 = 8;
    break;
   }
   HEAP8[i13 + i2 >> 0] = i3;
   i2 = i2 + 1 | 0;
  }
  if ((i10 | 0) == 8) i1 = __ZNSt3__211char_traitsIwE3eofEv() | 0; else if ((i10 | 0) == 9) {
   do if (!(HEAP8[i11 + 53 >> 0] | 0)) {
    i5 = i11 + 40 | 0;
    i6 = i11 + 36 | 0;
    i7 = i14 + 4 | 0;
    L11 : while (1) {
     i17 = HEAP32[i5 >> 2] | 0;
     i3 = i17;
     i2 = HEAP32[i3 >> 2] | 0;
     i3 = HEAP32[i3 + 4 >> 2] | 0;
     i18 = HEAP32[i6 >> 2] | 0;
     i4 = i13 + i1 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 16 >> 2] & 15](i18, i17, i13, i4, i8, i14, i7, i9) | 0) {
     case 3:
      {
       i10 = 15;
       break L11;
      }
     case 2:
      {
       i10 = 17;
       break L11;
      }
     case 1:
      break;
     default:
      break L11;
     }
     i18 = HEAP32[i5 >> 2] | 0;
     HEAP32[i18 >> 2] = i2;
     HEAP32[i18 + 4 >> 2] = i3;
     if ((i1 | 0) == 8) {
      i10 = 17;
      break;
     }
     i2 = _getc(HEAP32[i12 >> 2] | 0) | 0;
     if ((i2 | 0) == -1) {
      i10 = 17;
      break;
     }
     HEAP8[i4 >> 0] = i2;
     i1 = i1 + 1 | 0;
    }
    if ((i10 | 0) == 15) HEAP32[i14 >> 2] = HEAP8[i13 >> 0]; else if ((i10 | 0) == 17) {
     i1 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
     break;
    }
    i10 = 19;
   } else {
    HEAP32[i14 >> 2] = HEAP8[i13 >> 0];
    i10 = 19;
   } while (0);
   L21 : do if ((i10 | 0) == 19) {
    L23 : do if (i15) {
     i18 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i14 >> 2] | 0) | 0;
     HEAP32[i11 + 48 >> 2] = i18;
    } else {
     do {
      if ((i1 | 0) <= 0) break L23;
      i1 = i1 + -1 | 0;
      i18 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP8[i13 + i1 >> 0] | 0) | 0;
     } while ((_ungetc(i18, HEAP32[i12 >> 2] | 0) | 0) != -1);
     i1 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
     break L21;
    } while (0);
    i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i14 >> 2] | 0) | 0;
   } while (0);
  }
 }
 STACKTOP = i16;
 return i1 | 0;
}

function _start_pass(i11) {
 i11 = i11 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i12 = HEAP32[i11 + 448 >> 2] | 0;
 i15 = i11 + 36 | 0;
 i16 = i11 + 72 | 0;
 i9 = 0;
 i10 = HEAP32[i11 + 216 >> 2] | 0;
 i2 = 0;
 i3 = 0;
 while (1) {
  if ((i9 | 0) >= (HEAP32[i15 >> 2] | 0)) break;
  i1 = HEAP32[i10 + 36 >> 2] | 0;
  L4 : do switch (i1 | 0) {
  case 1:
   {
    i1 = 0;
    i8 = 11;
    break;
   }
  case 2:
   {
    i1 = 0;
    i8 = 12;
    break;
   }
  case 4:
   {
    i1 = 0;
    i8 = 13;
    break;
   }
  case 8:
   {
    i1 = HEAP32[i16 >> 2] | 0;
    switch (i1 | 0) {
    case 0:
     {
      i8 = 14;
      break L4;
     }
    case 1:
     {
      i8 = 15;
      break L4;
     }
    case 2:
     {
      i8 = 16;
      break L4;
     }
    default:
     {
      i1 = HEAP32[i11 >> 2] | 0;
      HEAP32[i1 + 20 >> 2] = 48;
      FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i11);
      i1 = i2;
      i8 = i3;
      break L4;
     }
    }
   }
  default:
   {
    i8 = HEAP32[i11 >> 2] | 0;
    HEAP32[i8 + 20 >> 2] = 7;
    HEAP32[i8 + 24 >> 2] = i1;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i11 >> 2] >> 2] & 255](i11);
    i1 = i2;
    i8 = i3;
   }
  } while (0);
  HEAP32[i12 + 4 + (i9 << 2) >> 2] = i8;
  L14 : do if ((HEAP32[i10 + 48 >> 2] | 0 ? (i13 = i12 + 44 + (i9 << 2) | 0, (HEAP32[i13 >> 2] | 0) != (i1 | 0)) : 0) ? (i14 = HEAP32[i10 + 76 >> 2] | 0, i14 | 0) : 0) {
   HEAP32[i13 >> 2] = i1;
   switch (i1 | 0) {
   case 0:
    {
     i3 = HEAP32[i10 + 80 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 64) break L14;
      HEAP32[i3 + (i2 << 2) >> 2] = HEAPU16[i14 + (i2 << 1) >> 1];
      i2 = i2 + 1 | 0;
     }
    }
   case 1:
    {
     i3 = HEAP32[i10 + 80 >> 2] | 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 64) break L14;
      i7 = (Math_imul(HEAP16[3008 + (i2 << 1) >> 1] | 0, HEAPU16[i14 + (i2 << 1) >> 1] | 0) | 0) + 2048 >> 12;
      HEAP32[i3 + (i2 << 2) >> 2] = i7;
      i2 = i2 + 1 | 0;
     }
    }
   case 2:
    {
     i6 = HEAP32[i10 + 80 >> 2] | 0;
     i3 = 0;
     i4 = 0;
     while (1) {
      if ((i3 | 0) == 8) break L14;
      i7 = 3136 + (i3 << 3) | 0;
      i2 = 0;
      i5 = i4;
      while (1) {
       if ((i2 | 0) == 8) break;
       HEAPF32[i6 + (i5 << 2) >> 2] = +HEAPF64[i7 >> 3] * +(HEAPU16[i14 + (i5 << 1) >> 1] | 0) * +HEAPF64[3136 + (i2 << 3) >> 3];
       i2 = i2 + 1 | 0;
       i5 = i5 + 1 | 0;
      }
      i3 = i3 + 1 | 0;
      i4 = i4 + 8 | 0;
     }
    }
   default:
    {
     i7 = HEAP32[i11 >> 2] | 0;
     HEAP32[i7 + 20 >> 2] = 48;
     FUNCTION_TABLE_vi[HEAP32[i7 >> 2] & 255](i11);
     break L14;
    }
   }
  } while (0);
  i9 = i9 + 1 | 0;
  i10 = i10 + 84 | 0;
  i2 = i1;
  i3 = i8;
 }
 return;
}

function __ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i4, i6, i11, i7, i12, i2, i3, i8, i13, i14, i10, i5) {
 i4 = i4 | 0;
 i6 = i6 | 0;
 i11 = i11 | 0;
 i7 = i7 | 0;
 i12 = i12 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 var i1 = 0, i9 = 0;
 L1 : do if (i4 << 24 >> 24 == i2 << 24 >> 24) if (HEAP8[i6 >> 0] | 0) {
  HEAP8[i6 >> 0] = 0;
  i11 = HEAP32[i12 >> 2] | 0;
  HEAP32[i12 >> 2] = i11 + 1;
  HEAP8[i11 >> 0] = 46;
  i12 = HEAP8[i8 + 11 >> 0] | 0;
  if (((i12 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i12 & 255) | 0) != 0 ? (i1 = HEAP32[i14 >> 2] | 0, (i1 - i13 | 0) < 160) : 0) {
   i13 = HEAP32[i10 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   i1 = 0;
  } else i1 = 0;
 } else i1 = -1; else {
  if (i4 << 24 >> 24 == i3 << 24 >> 24 ? (i3 = HEAP8[i8 + 11 >> 0] | 0, (i3 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i3 & 255) | 0) : 0) {
   if (!(HEAP8[i6 >> 0] | 0)) {
    i1 = -1;
    break;
   }
   i1 = HEAP32[i14 >> 2] | 0;
   if ((i1 - i13 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i10 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  }
  i3 = i5 + 32 | 0;
  i2 = 0;
  while (1) {
   i1 = i5 + i2 | 0;
   if ((i2 | 0) == 32) {
    i1 = i3;
    break;
   }
   if ((HEAP8[i1 >> 0] | 0) == i4 << 24 >> 24) break; else i2 = i2 + 1 | 0;
  }
  i2 = i1 - i5 | 0;
  if ((i2 | 0) > 31) i1 = -1; else {
   i3 = HEAP8[10736 + i2 >> 0] | 0;
   switch (i2 | 0) {
   case 24:
   case 25:
    {
     i1 = HEAP32[i12 >> 2] | 0;
     if ((i1 | 0) != (i7 | 0) ? (HEAP8[i1 + -1 >> 0] & 95) != (HEAP8[i11 >> 0] & 127) : 0) {
      i1 = -1;
      break L1;
     }
     HEAP32[i12 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3;
     i1 = 0;
     break L1;
    }
   case 23:
   case 22:
    {
     HEAP8[i11 >> 0] = 80;
     i1 = HEAP32[i12 >> 2] | 0;
     HEAP32[i12 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3;
     i1 = 0;
     break L1;
    }
   default:
    {
     i1 = i3 & 95;
     if ((((i1 | 0) == (HEAP8[i11 >> 0] | 0) ? (HEAP8[i11 >> 0] = i1 | 128, HEAP8[i6 >> 0] | 0) : 0) ? (HEAP8[i6 >> 0] = 0, i11 = HEAP8[i8 + 11 >> 0] | 0, (i11 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i11 & 255) | 0) : 0) ? (i9 = HEAP32[i14 >> 2] | 0, (i9 - i13 | 0) < 160) : 0) {
      i13 = HEAP32[i10 >> 2] | 0;
      HEAP32[i14 >> 2] = i9 + 4;
      HEAP32[i9 >> 2] = i13;
     }
     i14 = HEAP32[i12 >> 2] | 0;
     HEAP32[i12 >> 2] = i14 + 1;
     HEAP8[i14 >> 0] = i3;
     if ((i2 | 0) > 21) {
      i1 = 0;
      break L1;
     }
     HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 1;
     i1 = 0;
     break L1;
    }
   }
  }
 } while (0);
 return i1 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_(i4, i7, i1, i10, i12, i2, i8, i13) {
 i4 = i4 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i10 = i10 | 0;
 i12 = i12 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 i13 = i13 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i9 = 0, i11 = 0, i14 = 0, i15 = 0, i16 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i14 = i15;
 i9 = i15 + 8 | 0;
 i3 = i1;
 while (1) {
  if ((i3 | 0) == (i10 | 0)) {
   i3 = i10;
   break;
  }
  if (!(HEAP32[i3 >> 2] | 0)) break;
  i3 = i3 + 4 | 0;
 }
 HEAP32[i13 >> 2] = i2;
 HEAP32[i12 >> 2] = i1;
 i6 = i8;
 i11 = i4 + 8 | 0;
 L6 : while (1) {
  if ((i2 | 0) == (i8 | 0) | (i1 | 0) == (i10 | 0)) {
   i3 = 36;
   break;
  }
  i16 = i7;
  i5 = HEAP32[i16 + 4 >> 2] | 0;
  i4 = i14;
  HEAP32[i4 >> 2] = HEAP32[i16 >> 2];
  HEAP32[i4 + 4 >> 2] = i5;
  i4 = ___uselocale(HEAP32[i11 >> 2] | 0) | 0;
  i5 = _wcsnrtombs(i2, i12, i3 - i1 >> 2, i6 - i2 | 0, i7) | 0;
  if (i4 | 0) ___uselocale(i4) | 0;
  switch (i5 | 0) {
  case -1:
   {
    i3 = 10;
    break L6;
   }
  case 0:
   {
    i1 = 1;
    i3 = 33;
    break L6;
   }
  default:
   {}
  }
  i2 = (HEAP32[i13 >> 2] | 0) + i5 | 0;
  HEAP32[i13 >> 2] = i2;
  if ((i2 | 0) == (i8 | 0)) {
   i3 = 34;
   break;
  }
  if ((i3 | 0) == (i10 | 0)) {
   i3 = i10;
   i1 = HEAP32[i12 >> 2] | 0;
  } else {
   i2 = ___uselocale(HEAP32[i11 >> 2] | 0) | 0;
   i1 = _wcrtomb(i9, 0, i7) | 0;
   if (i2 | 0) ___uselocale(i2) | 0;
   if ((i1 | 0) == -1) {
    i1 = 2;
    i3 = 32;
    break;
   }
   if (i1 >>> 0 > (i6 - (HEAP32[i13 >> 2] | 0) | 0) >>> 0) {
    i1 = 1;
    i3 = 32;
    break;
   }
   i2 = i9;
   while (1) {
    if (!i1) break;
    i5 = HEAP8[i2 >> 0] | 0;
    i16 = HEAP32[i13 >> 2] | 0;
    HEAP32[i13 >> 2] = i16 + 1;
    HEAP8[i16 >> 0] = i5;
    i2 = i2 + 1 | 0;
    i1 = i1 + -1 | 0;
   }
   i1 = (HEAP32[i12 >> 2] | 0) + 4 | 0;
   HEAP32[i12 >> 2] = i1;
   i3 = i1;
   while (1) {
    if ((i3 | 0) == (i10 | 0)) {
     i3 = i10;
     break;
    }
    if (!(HEAP32[i3 >> 2] | 0)) break;
    i3 = i3 + 4 | 0;
   }
   i2 = HEAP32[i13 >> 2] | 0;
  }
 }
 if ((i3 | 0) == 10) {
  HEAP32[i13 >> 2] = i2;
  while (1) {
   if ((i1 | 0) == (HEAP32[i12 >> 2] | 0)) break;
   i16 = HEAP32[i1 >> 2] | 0;
   i3 = ___uselocale(HEAP32[i11 >> 2] | 0) | 0;
   i2 = _wcrtomb(i2, i16, i14) | 0;
   if (i3 | 0) ___uselocale(i3) | 0;
   if ((i2 | 0) == -1) break;
   i2 = (HEAP32[i13 >> 2] | 0) + i2 | 0;
   HEAP32[i13 >> 2] = i2;
   i1 = i1 + 4 | 0;
  }
  HEAP32[i12 >> 2] = i1;
  i1 = 2;
  i3 = 33;
 } else if ((i3 | 0) == 32) i3 = 33; else if ((i3 | 0) == 34) {
  i1 = HEAP32[i12 >> 2] | 0;
  i3 = 36;
 }
 if ((i3 | 0) != 33) if ((i3 | 0) == 36) i1 = (i1 | 0) != (i10 | 0) & 1;
 STACKTOP = i15;
 return i1 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_(i4, i7, i1, i13, i10, i2, i8, i11) {
 i4 = i4 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i13 = i13 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 i11 = i11 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i9 = 0, i12 = 0, i14 = 0, i15 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i12 = i14;
 i3 = i1;
 while (1) {
  if ((i3 | 0) == (i13 | 0)) {
   i3 = i13;
   break;
  }
  if (!(HEAP8[i3 >> 0] | 0)) break;
  i3 = i3 + 1 | 0;
 }
 HEAP32[i11 >> 2] = i2;
 HEAP32[i10 >> 2] = i1;
 i6 = i8;
 i9 = i4 + 8 | 0;
 while (1) {
  if ((i2 | 0) == (i8 | 0) | (i1 | 0) == (i13 | 0)) {
   i4 = 33;
   break;
  }
  i15 = i7;
  i5 = HEAP32[i15 + 4 >> 2] | 0;
  i4 = i12;
  HEAP32[i4 >> 2] = HEAP32[i15 >> 2];
  HEAP32[i4 + 4 >> 2] = i5;
  i4 = ___uselocale(HEAP32[i9 >> 2] | 0) | 0;
  i5 = _mbsnrtowcs(i2, i10, i3 - i1 | 0, i6 - i2 >> 2, i7) | 0;
  if (i4 | 0) ___uselocale(i4) | 0;
  if ((i5 | 0) == -1) {
   i4 = 10;
   break;
  }
  i2 = (HEAP32[i11 >> 2] | 0) + (i5 << 2) | 0;
  HEAP32[i11 >> 2] = i2;
  if ((i2 | 0) == (i8 | 0)) {
   i4 = 30;
   break;
  }
  i1 = HEAP32[i10 >> 2] | 0;
  if ((i3 | 0) == (i13 | 0)) i3 = i13; else {
   i3 = ___uselocale(HEAP32[i9 >> 2] | 0) | 0;
   i1 = _mbrtowc(i2, i1, 1, i7) | 0;
   if (i3 | 0) ___uselocale(i3) | 0;
   if (i1 | 0) {
    i1 = 2;
    i4 = 29;
    break;
   }
   HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 4;
   i1 = (HEAP32[i10 >> 2] | 0) + 1 | 0;
   HEAP32[i10 >> 2] = i1;
   i3 = i1;
   while (1) {
    if ((i3 | 0) == (i13 | 0)) {
     i3 = i13;
     break;
    }
    if (!(HEAP8[i3 >> 0] | 0)) break;
    i3 = i3 + 1 | 0;
   }
   i2 = HEAP32[i11 >> 2] | 0;
  }
 }
 do if ((i4 | 0) == 10) {
  L29 : while (1) {
   HEAP32[i11 >> 2] = i2;
   if ((i1 | 0) == (HEAP32[i10 >> 2] | 0)) {
    i4 = 19;
    break;
   }
   i4 = ___uselocale(HEAP32[i9 >> 2] | 0) | 0;
   i2 = _mbrtowc(i2, i1, i3 - i1 | 0, i12) | 0;
   if (i4 | 0) ___uselocale(i4) | 0;
   switch (i2 | 0) {
   case -1:
    {
     i4 = 15;
     break L29;
    }
   case -2:
    {
     i4 = 16;
     break L29;
    }
   case 0:
    {
     i2 = 1;
     break;
    }
   default:
    {}
   }
   i1 = i1 + i2 | 0;
   i2 = (HEAP32[i11 >> 2] | 0) + 4 | 0;
  }
  if ((i4 | 0) == 15) {
   HEAP32[i10 >> 2] = i1;
   i1 = 2;
   i4 = 29;
   break;
  } else if ((i4 | 0) == 16) {
   HEAP32[i10 >> 2] = i1;
   i1 = 1;
   i4 = 29;
   break;
  } else if ((i4 | 0) == 19) {
   HEAP32[i10 >> 2] = i1;
   i1 = (i1 | 0) != (i13 | 0) & 1;
   i4 = 29;
   break;
  }
 } else if ((i4 | 0) == 30) {
  i1 = HEAP32[i10 >> 2] | 0;
  i4 = 33;
 } while (0);
 if ((i4 | 0) != 29) if ((i4 | 0) == 33) i1 = (i1 | 0) != (i13 | 0) & 1;
 STACKTOP = i14;
 return i1 | 0;
}

function __ZNSt3__28ios_base4InitC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = HEAP32[3453] | 0;
 __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(58424, i2, 58480);
 HEAP32[14436] = 14248;
 HEAP32[14438] = 14268;
 HEAP32[14437] = 0;
 __ZNSt3__28ios_base4initEPv(57752, 58424);
 HEAP32[14456] = 0;
 i1 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[14457] = i1;
 __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(58488, i2, 58544);
 HEAP32[14458] = 14296;
 HEAP32[14460] = 14316;
 HEAP32[14459] = 0;
 __ZNSt3__28ios_base4initEPv(57840, 58488);
 HEAP32[14478] = 0;
 i2 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[14479] = i2;
 i2 = HEAP32[3455] | 0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(58552, i2, 58600);
 HEAP32[14480] = 14344;
 HEAP32[14481] = 14364;
 __ZNSt3__28ios_base4initEPv(57924, 58552);
 HEAP32[14499] = 0;
 i1 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[14500] = i1;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(58608, i2, 58656);
 HEAP32[14501] = 14392;
 HEAP32[14502] = 14412;
 __ZNSt3__28ios_base4initEPv(58008, 58608);
 HEAP32[14520] = 0;
 i2 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[14521] = i2;
 i2 = HEAP32[3454] | 0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(58664, i2, 58712);
 HEAP32[14522] = 14344;
 HEAP32[14523] = 14364;
 __ZNSt3__28ios_base4initEPv(58092, 58664);
 HEAP32[14541] = 0;
 i1 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[14542] = i1;
 i1 = HEAP32[58088 + (HEAP32[(HEAP32[14522] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[14564] = 14344;
 HEAP32[14565] = 14364;
 __ZNSt3__28ios_base4initEPv(58260, i1);
 HEAP32[14583] = 0;
 i1 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[14584] = i1;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(58720, i2, 58768);
 HEAP32[14543] = 14392;
 HEAP32[14544] = 14412;
 __ZNSt3__28ios_base4initEPv(58176, 58720);
 HEAP32[14562] = 0;
 i2 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[14563] = i2;
 i2 = HEAP32[58172 + (HEAP32[(HEAP32[14543] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[14585] = 14392;
 HEAP32[14586] = 14412;
 __ZNSt3__28ios_base4initEPv(58344, i2);
 HEAP32[14604] = 0;
 i2 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[14605] = i2;
 HEAP32[57744 + (HEAP32[(HEAP32[14436] | 0) + -12 >> 2] | 0) + 72 >> 2] = 57920;
 HEAP32[57832 + (HEAP32[(HEAP32[14458] | 0) + -12 >> 2] | 0) + 72 >> 2] = 58004;
 i2 = (HEAP32[14522] | 0) + -12 | 0;
 i1 = 58088 + (HEAP32[i2 >> 2] | 0) + 4 | 0;
 HEAP32[i1 >> 2] = HEAP32[i1 >> 2] | 8192;
 i1 = (HEAP32[14543] | 0) + -12 | 0;
 i3 = 58172 + (HEAP32[i1 >> 2] | 0) + 4 | 0;
 HEAP32[i3 >> 2] = HEAP32[i3 >> 2] | 8192;
 HEAP32[58088 + (HEAP32[i2 >> 2] | 0) + 72 >> 2] = 57920;
 HEAP32[58172 + (HEAP32[i1 >> 2] | 0) + 72 >> 2] = 58004;
 return;
}

function _arGetLine(i11, i12, i1, i15, i17, i19, i20) {
 i11 = i11 | 0;
 i12 = i12 | 0;
 i1 = i1 | 0;
 i15 = i15 | 0;
 i17 = i17 | 0;
 i19 = i19 | 0;
 i20 = i20 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, i5 = 0, d6 = 0.0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, i13 = 0, i14 = 0, i16 = 0, i18 = 0, i21 = 0, i22 = 0, i23 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i21 + 4 | 0;
 i10 = i21;
 i18 = _arVecAlloc(2) | 0;
 i13 = _arVecAlloc(2) | 0;
 i14 = _arMatrixAlloc(2, 2) | 0;
 i2 = 0;
 L1 : while (1) {
  if (i2 >>> 0 >= 4) {
   i8 = 10;
   break;
  }
  i3 = i2 + 1 | 0;
  i8 = HEAP32[i15 + (i3 << 2) >> 2] | 0;
  i5 = HEAP32[i15 + (i2 << 2) >> 2] | 0;
  d7 = +(i8 + 1 - i5 | 0) * .05 + .5;
  i5 = ~~(d7 + +(i5 | 0));
  i8 = ~~(+(i8 | 0) - d7) - i5 | 0;
  i16 = _arMatrixAlloc(i8 + 1 | 0, 2) | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) > (i8 | 0)) break;
   i22 = i1 + i5 | 0;
   if ((_arParamObserv2IdealLTf(i17, +(HEAP32[i11 + (i22 << 2) >> 2] | 0), +(HEAP32[i12 + (i22 << 2) >> 2] | 0), i9, i10) | 0) < 0) {
    i8 = 6;
    break L1;
   }
   i23 = HEAP32[i16 >> 2] | 0;
   i22 = i1 << 1;
   HEAPF64[i23 + (i22 << 3) >> 3] = +HEAPF32[i9 >> 2];
   HEAPF64[i23 + ((i22 | 1) << 3) >> 3] = +HEAPF32[i10 >> 2];
   i1 = i1 + 1 | 0;
  }
  if ((_arMatrixPCA(i16, i14, i18, i13) | 0) < 0) {
   i8 = 14;
   break;
  }
  i23 = HEAP32[i14 >> 2] | 0;
  d6 = +HEAPF64[i23 + 8 >> 3];
  HEAPF64[i19 + (i2 * 24 | 0) >> 3] = d6;
  d7 = -+HEAPF64[i23 >> 3];
  HEAPF64[i19 + (i2 * 24 | 0) + 8 >> 3] = d7;
  i23 = HEAP32[i13 >> 2] | 0;
  HEAPF64[i19 + (i2 * 24 | 0) + 16 >> 3] = -(d6 * +HEAPF64[i23 >> 3] + +HEAPF64[i23 + 8 >> 3] * d7);
  _arMatrixFree(i16) | 0;
  i2 = i3;
 }
 L10 : do if ((i8 | 0) == 6) i8 = 14; else if ((i8 | 0) == 10) {
  _arMatrixFree(i14) | 0;
  _arVecFree(i13) | 0;
  _arVecFree(i18) | 0;
  i1 = 0;
  while (1) {
   if (i1 >>> 0 >= 4) {
    i1 = 0;
    break L10;
   }
   i2 = i1 + 3 & 3;
   i3 = i19 + (i2 * 24 | 0) | 0;
   d4 = +HEAPF64[i19 + (i1 * 24 | 0) + 8 >> 3];
   i5 = i19 + (i1 * 24 | 0) | 0;
   d6 = +HEAPF64[i19 + (i2 * 24 | 0) + 8 >> 3];
   d7 = +HEAPF64[i3 >> 3] * d4 - +HEAPF64[i5 >> 3] * d6;
   if (+Math_abs(+d7) < .0001) {
    i1 = -1;
    break L10;
   }
   i23 = i19 + (i1 * 24 | 0) + 16 | 0;
   i22 = i19 + (i2 * 24 | 0) + 16 | 0;
   HEAPF64[i20 + (i1 << 4) >> 3] = (d6 * +HEAPF64[i23 >> 3] - d4 * +HEAPF64[i22 >> 3]) / d7;
   HEAPF64[i20 + (i1 << 4) + 8 >> 3] = (+HEAPF64[i5 >> 3] * +HEAPF64[i22 >> 3] - +HEAPF64[i3 >> 3] * +HEAPF64[i23 >> 3]) / d7;
   i1 = i1 + 1 | 0;
  }
 } while (0);
 if ((i8 | 0) == 14) {
  _arMatrixFree(i16) | 0;
  _arMatrixFree(i14) | 0;
  _arVecFree(i13) | 0;
  _arVecFree(i18) | 0;
  i1 = -1;
 }
 STACKTOP = i21;
 return i1 | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPKiEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPiEEE4typeES8_SA_SA_(i17, i1, i2, i3) {
 i17 = i17 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i14 = i18 + 40 | 0;
 i13 = i18 + 36 | 0;
 i15 = i18 + 32 | 0;
 i16 = i18 + 28 | 0;
 i8 = i18 + 8 | 0;
 i9 = i18 + 4 | 0;
 i10 = i18;
 i4 = HEAP32[i17 >> 2] | 0;
 i5 = i4;
 i1 = i4 + ((HEAP32[i1 >> 2] | 0) - i5 >> 2 << 2) | 0;
 i2 = HEAP32[i2 >> 2] | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i12 = i4 - i2 | 0;
 i11 = i12 >> 2;
 L1 : do if ((i12 | 0) > 0) {
  i6 = i17 + 8 | 0;
  i12 = HEAP32[i17 + 4 >> 2] | 0;
  i7 = i12;
  if ((i11 | 0) > ((HEAP32[i6 >> 2] | 0) - i7 >> 2 | 0)) {
   i3 = (i7 - i5 >> 2) + i11 | 0;
   i5 = __ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv(i17) | 0;
   if (i5 >>> 0 < i3 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i17); else {
    i16 = HEAP32[i17 >> 2] | 0;
    i12 = (HEAP32[i6 >> 2] | 0) - i16 | 0;
    i15 = i12 >> 1;
    __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_(i8, i12 >> 2 >>> 0 < i5 >>> 1 >>> 0 ? (i15 >>> 0 < i3 >>> 0 ? i3 : i15) : i5, i1 - i16 >> 2, i17 + 8 | 0);
    HEAP32[i9 >> 2] = i2;
    HEAP32[i10 >> 2] = i4;
    HEAP32[i13 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i14 >> 2] = HEAP32[i10 >> 2];
    __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEE18__construct_at_endINS_11__wrap_iterIPKiEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(i8, i13, i14);
    i1 = __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EEPi(i17, i8, i1) | 0;
    __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev(i8);
    break;
   }
  }
  i5 = i7 - i1 | 0;
  i6 = i5 >> 2;
  i3 = i2 + (i6 << 2) | 0;
  if ((i11 | 0) > (i6 | 0)) {
   HEAP32[i15 >> 2] = i3;
   HEAP32[i16 >> 2] = i4;
   HEAP32[i13 >> 2] = HEAP32[i15 >> 2];
   HEAP32[i14 >> 2] = HEAP32[i16 >> 2];
   __ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endINS_11__wrap_iterIPKiEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_m(i17, i13, i14, i11 - i6 | 0);
   if ((i5 | 0) > 0) i4 = i3; else break;
  }
  __ZNSt3__26vectorIiNS_9allocatorIiEEE12__move_rangeEPiS4_S4_(i17, i1, i12, i1 + (i11 << 2) | 0);
  i3 = i1;
  while (1) {
   if ((i2 | 0) == (i4 | 0)) break L1;
   HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
   i3 = i3 + 4 | 0;
   i2 = i2 + 4 | 0;
  }
 } while (0);
 STACKTOP = i18;
 return i1 | 0;
}

function _arglCameraFrustumRH(i1, d5, d6, i10) {
 i1 = i1 | 0;
 d5 = +d5;
 d6 = +d6;
 i10 = i10 | 0;
 var i2 = 0, d3 = 0.0, d4 = 0.0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(416);
 i7 = i13 + 304 | 0;
 i11 = i13 + 208 | 0;
 i8 = i13 + 128 | 0;
 i12 = i13;
 i9 = HEAP32[i1 >> 2] | 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 L1 : do if ((_arParamDecompMat(i1 + 8 | 0, i7, i11) | 0) < 0) _arLog(0, 3, 18403, i13 + 400 | 0); else {
  d4 = +(i2 + -1 | 0);
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 4) break;
   i2 = i7 + 32 + (i1 << 3) | 0;
   HEAPF64[i2 >> 3] = +HEAPF64[i7 + 64 + (i1 << 3) >> 3] * d4 - +HEAPF64[i2 >> 3];
   i1 = i1 + 1 | 0;
  }
  d3 = +HEAPF64[i7 + 80 >> 3];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAPF64[i8 + (i2 * 24 | 0) + (i1 << 3) >> 3] = +HEAPF64[i7 + (i2 << 5) + (i1 << 3) >> 3] / d3;
    i1 = i1 + 1 | 0;
   }
   i2 = i2 + 1 | 0;
  }
  d3 = +(i9 + -1 | 0);
  HEAPF64[i12 >> 3] = +HEAPF64[i8 >> 3] * 2.0 / d3;
  HEAPF64[i12 + 8 >> 3] = +HEAPF64[i8 + 8 >> 3] * 2.0 / d3;
  HEAPF64[i12 + 16 >> 3] = -(+HEAPF64[i8 + 16 >> 3] * 2.0 / d3 + -1.0);
  i2 = i12 + 24 | 0;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i2 + 4 >> 2] = 0;
  HEAP32[i2 + 8 >> 2] = 0;
  HEAP32[i2 + 12 >> 2] = 0;
  HEAPF64[i12 + 40 >> 3] = -(+HEAPF64[i8 + 32 >> 3] * 2.0 / d4);
  HEAPF64[i12 + 48 >> 3] = -(+HEAPF64[i8 + 40 >> 3] * 2.0 / d4 + -1.0);
  i2 = i12 + 56 | 0;
  d3 = d5 - d6;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i2 + 4 >> 2] = 0;
  HEAP32[i2 + 8 >> 2] = 0;
  HEAP32[i2 + 12 >> 2] = 0;
  HEAP32[i2 + 16 >> 2] = 0;
  HEAP32[i2 + 20 >> 2] = 0;
  HEAPF64[i12 + 80 >> 3] = (d5 + d6) / d3;
  HEAPF64[i12 + 88 >> 3] = d6 * 2.0 * d5 / d3;
  i2 = i12 + 96 | 0;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i2 + 4 >> 2] = 0;
  HEAP32[i2 + 8 >> 2] = 0;
  HEAP32[i2 + 12 >> 2] = 0;
  HEAPF64[i12 + 112 >> 3] = -1.0;
  HEAPF64[i12 + 120 >> 3] = 0.0;
  d3 = +HEAPF64[i11 + 24 >> 3];
  d4 = +HEAPF64[i11 + 56 >> 3];
  d5 = +HEAPF64[i11 + 88 >> 3];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 4) break L1;
   d6 = +HEAPF64[i12 + (i2 << 5) >> 3];
   i7 = i12 + (i2 << 5) + 8 | 0;
   i8 = i12 + (i2 << 5) + 16 | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAPF64[i10 + ((i1 << 2) + i2 << 3) >> 3] = d6 * +HEAPF64[i11 + (i1 << 3) >> 3] + +HEAPF64[i7 >> 3] * +HEAPF64[i11 + 32 + (i1 << 3) >> 3] + +HEAPF64[i8 >> 3] * +HEAPF64[i11 + 64 + (i1 << 3) >> 3];
    i1 = i1 + 1 | 0;
   }
   HEAPF64[i10 + (i2 + 12 << 3) >> 3] = +HEAPF64[i12 + (i2 << 5) + 24 >> 3] + (d6 * d3 + +HEAPF64[i7 >> 3] * d4 + +HEAPF64[i8 >> 3] * d5);
   i2 = i2 + 1 | 0;
  }
 } while (0);
 STACKTOP = i13;
 return;
}

function _realize_virt_arrays(i8) {
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = HEAP32[i8 + 4 >> 2] | 0;
 i2 = i6 + 68 | 0;
 i5 = 0;
 i3 = 0;
 i1 = i2;
 while (1) {
  i4 = HEAP32[i1 >> 2] | 0;
  if (!i4) break;
  if (!(HEAP32[i4 >> 2] | 0)) {
   i7 = HEAP32[i4 + 8 >> 2] | 0;
   i1 = (Math_imul(i7, HEAP32[i4 + 12 >> 2] | 0) | 0) + i5 | 0;
   i3 = (Math_imul(HEAP32[i4 + 4 >> 2] | 0, i7) | 0) + i3 | 0;
  } else i1 = i5;
  i5 = i1;
  i1 = i4 + 44 | 0;
 }
 i1 = i6 + 72 | 0;
 i4 = i1;
 while (1) {
  i4 = HEAP32[i4 >> 2] | 0;
  if (!i4) break;
  if (!(HEAP32[i4 >> 2] | 0)) {
   i7 = HEAP32[i4 + 8 >> 2] | 0;
   i5 = (Math_imul(HEAP32[i4 + 12 >> 2] << 7, i7) | 0) + i5 | 0;
   i3 = (Math_imul(i7 << 7, HEAP32[i4 + 4 >> 2] | 0) | 0) + i3 | 0;
  }
  i4 = i4 + 44 | 0;
 }
 L15 : do if ((i5 | 0) >= 1) {
  i4 = _jpeg_mem_available(i8, i5, i3, HEAP32[i6 + 76 >> 2] | 0) | 0;
  if ((i4 | 0) < (i3 | 0)) {
   i7 = (i4 | 0) / (i5 | 0) | 0;
   i7 = (i7 | 0) > 1 ? i7 : 1;
  } else i7 = 1e9;
  i6 = i6 + 80 | 0;
  while (1) {
   i5 = HEAP32[i2 >> 2] | 0;
   if (!i5) break;
   if (!(HEAP32[i5 >> 2] | 0)) {
    i4 = HEAP32[i5 + 4 >> 2] | 0;
    i2 = HEAP32[i5 + 12 >> 2] | 0;
    if (((((i4 + -1 | 0) >>> 0) / (i2 >>> 0) | 0) + 1 | 0) > (i7 | 0)) {
     i3 = Math_imul(i2, i7) | 0;
     i2 = i5 + 16 | 0;
     HEAP32[i2 >> 2] = i3;
     i3 = i5 + 8 | 0;
     _jpeg_open_backing_store(i8, i5 + 48 | 0, Math_imul(HEAP32[i3 >> 2] | 0, i4) | 0);
     HEAP32[i5 + 40 >> 2] = 1;
     i2 = HEAP32[i2 >> 2] | 0;
    } else {
     HEAP32[i5 + 16 >> 2] = i4;
     i3 = i5 + 8 | 0;
     i2 = i4;
    }
    i4 = _alloc_sarray(i8, 1, HEAP32[i3 >> 2] | 0, i2) | 0;
    HEAP32[i5 >> 2] = i4;
    HEAP32[i5 + 20 >> 2] = HEAP32[i6 >> 2];
    HEAP32[i5 + 24 >> 2] = 0;
    HEAP32[i5 + 28 >> 2] = 0;
    HEAP32[i5 + 36 >> 2] = 0;
   }
   i2 = i5 + 44 | 0;
  }
  while (1) {
   i4 = HEAP32[i1 >> 2] | 0;
   if (!i4) break L15;
   if (!(HEAP32[i4 >> 2] | 0)) {
    i3 = HEAP32[i4 + 4 >> 2] | 0;
    i1 = HEAP32[i4 + 12 >> 2] | 0;
    if (((((i3 + -1 | 0) >>> 0) / (i1 >>> 0) | 0) + 1 | 0) > (i7 | 0)) {
     i2 = Math_imul(i1, i7) | 0;
     i1 = i4 + 16 | 0;
     HEAP32[i1 >> 2] = i2;
     i2 = i4 + 8 | 0;
     _jpeg_open_backing_store(i8, i4 + 48 | 0, Math_imul(i3 << 7, HEAP32[i2 >> 2] | 0) | 0);
     HEAP32[i4 + 40 >> 2] = 1;
     i1 = HEAP32[i1 >> 2] | 0;
    } else {
     HEAP32[i4 + 16 >> 2] = i3;
     i2 = i4 + 8 | 0;
     i1 = i3;
    }
    i5 = _alloc_barray(i8, 1, HEAP32[i2 >> 2] | 0, i1) | 0;
    HEAP32[i4 >> 2] = i5;
    HEAP32[i4 + 20 >> 2] = HEAP32[i6 >> 2];
    HEAP32[i4 + 24 >> 2] = 0;
    HEAP32[i4 + 28 >> 2] = 0;
    HEAP32[i4 + 36 >> 2] = 0;
   }
   i1 = i4 + 44 | 0;
  }
 } while (0);
 return;
}

function _check_square(i5, i15, d4) {
 i5 = i5 | 0;
 i15 = i15 | 0;
 d4 = +d4;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i13 = i17 + 48 | 0;
 i9 = i17 + 92 | 0;
 i14 = i17;
 i10 = i17 + 88 | 0;
 i11 = i15 + 28 | 0;
 i8 = HEAP32[i11 >> 2] | 0;
 i12 = i15 + 40028 | 0;
 i6 = HEAP32[i12 >> 2] | 0;
 i16 = i15 + 24 | 0;
 i7 = (HEAP32[i16 >> 2] | 0) + -1 | 0;
 i2 = 1;
 i3 = 0;
 i1 = 0;
 while (1) {
  if ((i2 | 0) >= (i7 | 0)) break;
  i19 = (HEAP32[i15 + 28 + (i2 << 2) >> 2] | 0) - i8 | 0;
  i19 = Math_imul(i19, i19) | 0;
  i20 = (HEAP32[i15 + 40028 + (i2 << 2) >> 2] | 0) - i6 | 0;
  i19 = (Math_imul(i20, i20) | 0) + i19 | 0;
  i20 = (i19 | 0) > (i3 | 0);
  i18 = i20 ? i2 : i1;
  i2 = i2 + 1 | 0;
  i3 = i20 ? i19 : i3;
  i1 = i18;
 }
 d4 = +(i5 | 0) / .75 * .01 * d4;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i10 >> 2] = 0;
 L5 : do if ((_get_vertex(i11, i12, 0, i1, d4, i13, i9) | 0) >= 0 ? (_get_vertex(i11, i12, i1, (HEAP32[i16 >> 2] | 0) + -1 | 0, d4, i14, i10) | 0) >= 0 : 0) {
  i2 = HEAP32[i9 >> 2] | 0;
  i3 = HEAP32[i10 >> 2] | 0;
  do if ((i2 | 0) == 1 & (i3 | 0) == 1) {
   i2 = HEAP32[i14 >> 2] | 0;
   i3 = HEAP32[i13 >> 2] | 0;
  } else {
   if ((i2 | 0) > 1 & (i3 | 0) == 0) {
    i2 = (i1 | 0) / 2 | 0;
    HEAP32[i10 >> 2] = 0;
    HEAP32[i9 >> 2] = 0;
    if ((_get_vertex(i11, i12, 0, i2, d4, i13, i9) | 0) < 0) {
     i1 = -1;
     break L5;
    }
    if ((_get_vertex(i11, i12, i2, i1, d4, i14, i10) | 0) < 0) {
     i1 = -1;
     break L5;
    }
    if (!((HEAP32[i9 >> 2] | 0) == 1 & (HEAP32[i10 >> 2] | 0) == 1)) {
     i1 = -1;
     break L5;
    }
    i2 = i1;
    i3 = HEAP32[i13 >> 2] | 0;
    i1 = HEAP32[i14 >> 2] | 0;
    break;
   }
   if (!((i2 | 0) == 0 & (i3 | 0) > 1)) {
    i1 = -1;
    break L5;
   }
   i2 = (i1 + -1 + (HEAP32[i16 >> 2] | 0) | 0) / 2 | 0;
   HEAP32[i10 >> 2] = 0;
   HEAP32[i9 >> 2] = 0;
   if ((_get_vertex(i11, i12, i1, i2, d4, i13, i9) | 0) < 0) {
    i1 = -1;
    break L5;
   }
   if ((_get_vertex(i11, i12, i2, (HEAP32[i16 >> 2] | 0) + -1 | 0, d4, i14, i10) | 0) < 0) {
    i1 = -1;
    break L5;
   }
   if (!((HEAP32[i9 >> 2] | 0) == 1 & (HEAP32[i10 >> 2] | 0) == 1)) {
    i1 = -1;
    break L5;
   }
   i2 = HEAP32[i14 >> 2] | 0;
   i3 = i1;
   i1 = HEAP32[i13 >> 2] | 0;
  } while (0);
  HEAP32[i15 + 80028 >> 2] = 0;
  HEAP32[i15 + 80032 >> 2] = i3;
  HEAP32[i15 + 80036 >> 2] = i1;
  HEAP32[i15 + 80040 >> 2] = i2;
  HEAP32[i15 + 80044 >> 2] = (HEAP32[i16 >> 2] | 0) + -1;
  i1 = 0;
 } else i1 = -1; while (0);
 STACKTOP = i17;
 return i1 | 0;
}

function __ZNSt3__2L12init_wmonthsEv() {
 var i1 = 0, i2 = 0;
 if ((HEAP8[56512] | 0) == 0 ? ___cxa_guard_acquire(56512) | 0 : 0) {
  i2 = 55632;
  do {
   HEAP32[i2 >> 2] = 0;
   HEAP32[i2 + 4 >> 2] = 0;
   HEAP32[i2 + 8 >> 2] = 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i2 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i2 = i2 + 12 | 0;
  } while ((i2 | 0) != 55920);
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55632, 15376) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55644, 15408) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55656, 15444) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55668, 15468) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55680, 15492) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55692, 15508) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55704, 15528) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55716, 15548) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55728, 15576) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55740, 15616) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55752, 15648) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55764, 15684) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55776, 15720) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55788, 15736) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55800, 15752) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55812, 15768) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55824, 15492) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55836, 15784) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55848, 15800) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55860, 15816) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55872, 15832) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55884, 15848) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55896, 15864) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55908, 15880) | 0;
 return;
}

function _jinit_upsampler(i11) {
 i11 = i11 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i12 = i11 + 4 | 0;
 i1 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i12 >> 2] >> 2] & 63](i11, 1, 160) | 0;
 HEAP32[i11 + 452 >> 2] = i1;
 HEAP32[i1 >> 2] = 127;
 HEAP32[i1 + 4 >> 2] = 3;
 i21 = i1 + 8 | 0;
 HEAP32[i21 >> 2] = 0;
 if (HEAP32[i11 + 300 >> 2] | 0) {
  i23 = HEAP32[i11 >> 2] | 0;
  HEAP32[i23 + 20 >> 2] = 25;
  FUNCTION_TABLE_vi[HEAP32[i23 >> 2] & 255](i11);
 }
 i10 = i11 + 316 | 0;
 if (!(HEAP32[i11 + 76 >> 2] | 0)) i23 = 0; else i23 = (HEAP32[i10 >> 2] | 0) > 1;
 i13 = i11 + 36 | 0;
 i14 = i11 + 308 | 0;
 i15 = i11 + 312 | 0;
 i16 = i1 + 100 | 0;
 i17 = i1 + 52 | 0;
 i18 = i11 + 112 | 0;
 i19 = i1 + 12 | 0;
 i20 = i1 + 140 | 0;
 i5 = i1 + 150 | 0;
 i3 = 0;
 i4 = HEAP32[i11 + 216 >> 2] | 0;
 while (1) {
  if ((i3 | 0) >= (HEAP32[i13 >> 2] | 0)) break;
  i8 = HEAP32[i4 + 36 >> 2] | 0;
  i6 = Math_imul(i8, HEAP32[i4 + 8 >> 2] | 0) | 0;
  i7 = HEAP32[i10 >> 2] | 0;
  i6 = (i6 | 0) / (i7 | 0) | 0;
  i7 = (Math_imul(HEAP32[i4 + 12 >> 2] | 0, i8) | 0) / (i7 | 0) | 0;
  i8 = HEAP32[i14 >> 2] | 0;
  i9 = HEAP32[i15 >> 2] | 0;
  HEAP32[i16 + (i3 << 2) >> 2] = i7;
  do if (!(HEAP32[i4 + 48 >> 2] | 0)) HEAP32[i17 + (i3 << 2) >> 2] = 11; else {
   i1 = (i7 | 0) == (i9 | 0);
   if ((i6 | 0) == (i8 | 0) & i1) {
    HEAP32[i17 + (i3 << 2) >> 2] = 12;
    break;
   }
   i2 = (i6 << 1 | 0) == (i8 | 0);
   do if (!(i2 & i1)) if (i2 & (i7 << 1 | 0) == (i9 | 0)) {
    if (i23 ? (HEAP32[i4 + 40 >> 2] | 0) >>> 0 > 2 : 0) {
     HEAP32[i17 + (i3 << 2) >> 2] = 15;
     HEAP32[i21 >> 2] = 1;
     break;
    }
    HEAP32[i17 + (i3 << 2) >> 2] = 16;
    break;
   } else {
    i1 = (i8 | 0) / (i6 | 0) | 0;
    if ((i8 - (Math_imul(i1, i6) | 0) | 0) == 0 ? (i22 = (i9 | 0) / (i7 | 0) | 0, (i9 - (Math_imul(i22, i7) | 0) | 0) == 0) : 0) {
     HEAP32[i17 + (i3 << 2) >> 2] = 17;
     HEAP8[i20 + i3 >> 0] = i1;
     HEAP8[i5 + i3 >> 0] = i22;
     break;
    }
    i9 = HEAP32[i11 >> 2] | 0;
    HEAP32[i9 + 20 >> 2] = 38;
    FUNCTION_TABLE_vi[HEAP32[i9 >> 2] & 255](i11);
    break;
   } else {
    if (i23 ? (HEAP32[i4 + 40 >> 2] | 0) >>> 0 > 2 : 0) {
     HEAP32[i17 + (i3 << 2) >> 2] = 13;
     break;
    }
    HEAP32[i17 + (i3 << 2) >> 2] = 14;
   } while (0);
   i8 = HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] | 0;
   i9 = _jround_up(HEAP32[i18 >> 2] | 0, HEAP32[i14 >> 2] | 0) | 0;
   i9 = FUNCTION_TABLE_iiiii[i8 & 15](i11, 1, i9, HEAP32[i15 >> 2] | 0) | 0;
   HEAP32[i19 + (i3 << 2) >> 2] = i9;
  } while (0);
  i3 = i3 + 1 | 0;
  i4 = i4 + 84 | 0;
 }
 return;
}
function __ZNSt3__2L11init_monthsEv() {
 var i1 = 0, i2 = 0;
 if ((HEAP8[56432] | 0) == 0 ? ___cxa_guard_acquire(56432) | 0 : 0) {
  i2 = 54880;
  do {
   HEAP32[i2 >> 2] = 0;
   HEAP32[i2 + 4 >> 2] = 0;
   HEAP32[i2 + 8 >> 2] = 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i2 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i2 = i2 + 12 | 0;
  } while ((i2 | 0) != 55168);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54880, 48135) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54892, 48143) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54904, 48152) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54916, 48158) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54928, 48164) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54940, 48168) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54952, 48173) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54964, 48178) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54976, 48185) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54988, 48195) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55e3, 48203) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55012, 48212) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55024, 48221) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55036, 48225) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55048, 48229) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55060, 48233) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55072, 48164) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55084, 48237) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55096, 48241) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55108, 48245) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55120, 48249) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55132, 48253) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55144, 48257) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55156, 48261) | 0;
 return;
}

function _arGetMarkerInfo(i10, i11, i20, i21, i22, i24, i25, i26, i27, i28, d12, i13, i14, i15) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i24 = i24 | 0;
 i25 = i25 | 0;
 i26 = i26 | 0;
 i27 = i27 | 0;
 i28 = i28 | 0;
 d12 = +d12;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i23 = 0, i29 = 0, i30 = 0;
 i30 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i16 = i30 + 4 | 0;
 i17 = i30;
 i18 = i27 >>> 0 < 2;
 i19 = (i27 | 0) == 2;
 i9 = 0;
 i1 = 0;
 while (1) {
  if ((i9 | 0) >= (i24 | 0)) break;
  HEAP32[i13 + (i1 << 8) >> 2] = HEAP32[i22 + (i9 * 80048 | 0) >> 2];
  if ((_arParamObserv2IdealLTf(i28, +HEAPF64[i22 + (i9 * 80048 | 0) + 8 >> 3], +HEAPF64[i22 + (i9 * 80048 | 0) + 16 >> 3], i16, i17) | 0) >= 0 ? (HEAPF64[i13 + (i1 << 8) + 56 >> 3] = +HEAPF32[i16 >> 2], HEAPF64[i13 + (i1 << 8) + 64 >> 3] = +HEAPF32[i17 >> 2], i23 = i13 + (i1 << 8) + 168 | 0, (_arGetLine(i22 + (i9 * 80048 | 0) + 28 | 0, i22 + (i9 * 80048 | 0) + 40028 | 0, HEAP32[i22 + (i9 * 80048 | 0) + 24 >> 2] | 0, i22 + (i9 * 80048 | 0) + 80028 | 0, i28, i13 + (i1 << 8) + 72 | 0, i23) | 0) >= 0) : 0) {
   i5 = i13 + (i1 << 8) + 8 | 0;
   i2 = i13 + (i1 << 8) + 20 | 0;
   i3 = i13 + (i1 << 8) + 40 | 0;
   i6 = i13 + (i1 << 8) + 12 | 0;
   i8 = i13 + (i1 << 8) + 24 | 0;
   i7 = i13 + (i1 << 8) + 48 | 0;
   i4 = _arPattGetIDGlobal(i25, i26, i27, i10, i11, i20, i21, i28, i23, d12, i5, i2, i3, i6, i8, i7, i15, i13 + (i1 << 8) + 240 | 0, i13 + (i1 << 8) + 248 | 0) | 0;
   switch (i4 | 0) {
   case 0:
    {
     i29 = 12;
     break;
    }
   case -1:
    {
     i4 = 2;
     i29 = 12;
     break;
    }
   case -2:
    {
     i4 = 3;
     i29 = 12;
     break;
    }
   case -3:
    {
     i4 = 4;
     i29 = 12;
     break;
    }
   case -4:
    {
     i4 = 5;
     i29 = 12;
     break;
    }
   case -5:
    {
     i4 = 9;
     i29 = 12;
     break;
    }
   case -6:
    {
     i4 = 1;
     i29 = 12;
     break;
    }
   default:
    {}
   }
   if ((i29 | 0) == 12) {
    i29 = 0;
    HEAP32[i13 + (i1 << 8) + 236 >> 2] = i4;
   }
   if (!i18) {
    if (i19) {
     HEAP32[i13 + (i1 << 8) + 4 >> 2] = HEAP32[i6 >> 2];
     i3 = i7;
     i2 = i8;
     i29 = 17;
    }
   } else {
    HEAP32[i13 + (i1 << 8) + 4 >> 2] = HEAP32[i5 >> 2];
    i29 = 17;
   }
   if ((i29 | 0) == 17) {
    i29 = 0;
    HEAP32[i13 + (i1 << 8) + 16 >> 2] = HEAP32[i2 >> 2];
    HEAPF64[i13 + (i1 << 8) + 32 >> 3] = +HEAPF64[i3 >> 3];
   }
   i1 = i1 + 1 | 0;
  }
  i9 = i9 + 1 | 0;
 }
 HEAP32[i14 >> 2] = i1;
 STACKTOP = i30;
 return 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe(i1, i24, i18, i19, d8) {
 i1 = i1 | 0;
 i24 = i24 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 d8 = +d8;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i25 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(352);
 i13 = i21 + 344 | 0;
 i7 = i21 + 320 | 0;
 i6 = i21 + 304 | 0;
 i3 = i21 + 296 | 0;
 i2 = i21 + 280 | 0;
 i5 = i21 + 272 | 0;
 i10 = i21 + 240 | 0;
 i9 = i21 + 340 | 0;
 i11 = i21;
 i16 = i21 + 336 | 0;
 i14 = i21 + 332 | 0;
 i15 = i21 + 328 | 0;
 i4 = i5;
 HEAP32[i4 >> 2] = 37;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i5 + 1 | 0, 47865, HEAP32[i18 + 4 >> 2] | 0) | 0;
 HEAP32[i9 >> 2] = i10;
 i1 = __ZNSt3__26__clocEv() | 0;
 if (i4) {
  HEAP32[i2 >> 2] = HEAP32[i18 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d8;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i10, 30, i1, i5, i2) | 0;
 } else {
  HEAPF64[i3 >> 3] = d8;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i10, 30, i1, i5, i3) | 0;
 }
 if ((i1 | 0) > 29) {
  i1 = __ZNSt3__26__clocEv() | 0;
  if (i4) {
   HEAP32[i6 >> 2] = HEAP32[i18 + 8 >> 2];
   HEAPF64[i6 + 8 >> 3] = d8;
   i2 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i9, i1, i5, i6) | 0;
  } else {
   HEAPF64[i7 >> 3] = d8;
   i2 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i9, i1, i5, i7) | 0;
  }
  i1 = HEAP32[i9 >> 2] | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i12 = i2;
   i23 = i1;
   i20 = i1;
  }
 } else {
  i12 = i1;
  i23 = 0;
  i20 = HEAP32[i9 >> 2] | 0;
 }
 i2 = i20 + i12 | 0;
 i3 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i20, i2, i18) | 0;
 do if ((i20 | 0) != (i10 | 0)) {
  i1 = _malloc(i12 << 3) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i17 = i1;
   i22 = 0;
   i25 = i1;
   break;
  }
 } else {
  i17 = i11;
  i22 = 1;
  i25 = 0;
 } while (0);
 __ZNKSt3__28ios_base6getlocEv(i13, i18);
 __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(i20, i3, i2, i17, i16, i14, i13);
 __ZNSt3__26localeD2Ev(i13);
 HEAP32[i15 >> 2] = HEAP32[i24 >> 2];
 i20 = HEAP32[i16 >> 2] | 0;
 i1 = HEAP32[i14 >> 2] | 0;
 HEAP32[i13 >> 2] = HEAP32[i15 >> 2];
 i1 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i13, i17, i20, i1, i18, i19) | 0;
 HEAP32[i24 >> 2] = i1;
 if (!i22) _free(i25);
 _free(i23);
 STACKTOP = i21;
 return i1 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd(i1, i24, i18, i19, d8) {
 i1 = i1 | 0;
 i24 = i24 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 d8 = +d8;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i25 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(352);
 i13 = i21 + 344 | 0;
 i7 = i21 + 320 | 0;
 i6 = i21 + 304 | 0;
 i3 = i21 + 296 | 0;
 i2 = i21 + 280 | 0;
 i5 = i21 + 272 | 0;
 i10 = i21 + 240 | 0;
 i9 = i21 + 340 | 0;
 i11 = i21;
 i16 = i21 + 336 | 0;
 i14 = i21 + 332 | 0;
 i15 = i21 + 328 | 0;
 i4 = i5;
 HEAP32[i4 >> 2] = 37;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i5 + 1 | 0, 59242, HEAP32[i18 + 4 >> 2] | 0) | 0;
 HEAP32[i9 >> 2] = i10;
 i1 = __ZNSt3__26__clocEv() | 0;
 if (i4) {
  HEAP32[i2 >> 2] = HEAP32[i18 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d8;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i10, 30, i1, i5, i2) | 0;
 } else {
  HEAPF64[i3 >> 3] = d8;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i10, 30, i1, i5, i3) | 0;
 }
 if ((i1 | 0) > 29) {
  i1 = __ZNSt3__26__clocEv() | 0;
  if (i4) {
   HEAP32[i6 >> 2] = HEAP32[i18 + 8 >> 2];
   HEAPF64[i6 + 8 >> 3] = d8;
   i2 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i9, i1, i5, i6) | 0;
  } else {
   HEAPF64[i7 >> 3] = d8;
   i2 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i9, i1, i5, i7) | 0;
  }
  i1 = HEAP32[i9 >> 2] | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i12 = i2;
   i23 = i1;
   i20 = i1;
  }
 } else {
  i12 = i1;
  i23 = 0;
  i20 = HEAP32[i9 >> 2] | 0;
 }
 i2 = i20 + i12 | 0;
 i3 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i20, i2, i18) | 0;
 do if ((i20 | 0) != (i10 | 0)) {
  i1 = _malloc(i12 << 3) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i17 = i1;
   i22 = 0;
   i25 = i1;
   break;
  }
 } else {
  i17 = i11;
  i22 = 1;
  i25 = 0;
 } while (0);
 __ZNKSt3__28ios_base6getlocEv(i13, i18);
 __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(i20, i3, i2, i17, i16, i14, i13);
 __ZNSt3__26localeD2Ev(i13);
 HEAP32[i15 >> 2] = HEAP32[i24 >> 2];
 i20 = HEAP32[i16 >> 2] | 0;
 i1 = HEAP32[i14 >> 2] | 0;
 HEAP32[i13 >> 2] = HEAP32[i15 >> 2];
 i1 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i13, i17, i20, i1, i18, i19) | 0;
 HEAP32[i24 >> 2] = i1;
 if (!i22) _free(i25);
 _free(i23);
 STACKTOP = i21;
 return i1 | 0;
}

function __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5;
 if ((__ZNK6vision5Image4typeEv(i2) | 0) != 2) {
  i6 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 25790) | 0, 25196) | 0, 33655) | 0, 357) | 0, 33662) | 0, 25837) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58792) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 switch (__ZNK6vision5Image4typeEv(i3) | 0) {
 case 1:
  {
   i4 = __ZN6vision5Image3getEv(i2) | 0;
   i6 = HEAP32[i1 + 32 >> 2] | 0;
   i7 = __ZNK6vision5Image3getEv(i3) | 0;
   __ZN6vision18binomial_4th_orderEPfPtPKhmm(i4, i6, i7, __ZNK6vision5Image5widthEv(i3) | 0, __ZNK6vision5Image6heightEv(i3) | 0);
   break;
  }
 case 2:
  {
   i4 = __ZN6vision5Image3getEv(i2) | 0;
   i6 = HEAP32[i1 + 44 >> 2] | 0;
   i7 = __ZNK6vision5Image3getEv(i3) | 0;
   __ZN6vision18binomial_4th_orderEPfS0_PKfmm(i4, i6, i7, __ZNK6vision5Image5widthEv(i3) | 0, __ZNK6vision5Image6heightEv(i3) | 0);
   break;
  }
 case 0:
  {
   i7 = ___cxa_allocate_exception(16) | 0;
   HEAP32[i4 >> 2] = 0;
   HEAP32[i4 + 4 >> 2] = 0;
   HEAP32[i4 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i4, 25873, __ZNSt3__211char_traitsIcE6lengthEPKc(25873) | 0);
   __ZN6vision9ExceptionC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i7, i4);
   ___cxa_throw(i7 | 0, 11016, 5);
  }
 default:
  {
   i7 = ___cxa_allocate_exception(16) | 0;
   HEAP32[i4 >> 2] = 0;
   HEAP32[i4 + 4 >> 2] = 0;
   HEAP32[i4 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i4, 25892, __ZNSt3__211char_traitsIcE6lengthEPKc(25892) | 0);
   __ZN6vision9ExceptionC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i7, i4);
   ___cxa_throw(i7 | 0, 11016, 5);
  }
 }
 STACKTOP = i5;
 return;
}

function __ZN6vision18HammingDistance768EPKjS1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = __ZN6vision17HammingDistance32Ejj(HEAP32[i1 >> 2] | 0, HEAP32[i2 >> 2] | 0) | 0;
 i3 = (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 4 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0) | 0) + i3 | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 8 >> 2] | 0, HEAP32[i2 + 8 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 12 >> 2] | 0, HEAP32[i2 + 12 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 16 >> 2] | 0, HEAP32[i2 + 16 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 20 >> 2] | 0, HEAP32[i2 + 20 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 24 >> 2] | 0, HEAP32[i2 + 24 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 28 >> 2] | 0, HEAP32[i2 + 28 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 32 >> 2] | 0, HEAP32[i2 + 32 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 36 >> 2] | 0, HEAP32[i2 + 36 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 40 >> 2] | 0, HEAP32[i2 + 40 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 44 >> 2] | 0, HEAP32[i2 + 44 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 48 >> 2] | 0, HEAP32[i2 + 48 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 52 >> 2] | 0, HEAP32[i2 + 52 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 56 >> 2] | 0, HEAP32[i2 + 56 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 60 >> 2] | 0, HEAP32[i2 + 60 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 64 >> 2] | 0, HEAP32[i2 + 64 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 68 >> 2] | 0, HEAP32[i2 + 68 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 72 >> 2] | 0, HEAP32[i2 + 72 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 76 >> 2] | 0, HEAP32[i2 + 76 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 80 >> 2] | 0, HEAP32[i2 + 80 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 84 >> 2] | 0, HEAP32[i2 + 84 >> 2] | 0) | 0) | 0;
 i3 = i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 88 >> 2] | 0, HEAP32[i2 + 88 >> 2] | 0) | 0) | 0;
 return i3 + (__ZN6vision17HammingDistance32Ejj(HEAP32[i1 + 92 >> 2] | 0, HEAP32[i2 + 92 >> 2] | 0) | 0) | 0;
}

function __ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i4, i6, i11, i7, i12, i2, i3, i8, i13, i14, i10, i5) {
 i4 = i4 | 0;
 i6 = i6 | 0;
 i11 = i11 | 0;
 i7 = i7 | 0;
 i12 = i12 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 var i1 = 0, i9 = 0;
 L1 : do if ((i4 | 0) == (i2 | 0)) if (HEAP8[i6 >> 0] | 0) {
  HEAP8[i6 >> 0] = 0;
  i11 = HEAP32[i12 >> 2] | 0;
  HEAP32[i12 >> 2] = i11 + 1;
  HEAP8[i11 >> 0] = 46;
  i12 = HEAP8[i8 + 11 >> 0] | 0;
  if (((i12 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i12 & 255) | 0) != 0 ? (i1 = HEAP32[i14 >> 2] | 0, (i1 - i13 | 0) < 160) : 0) {
   i13 = HEAP32[i10 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   i1 = 0;
  } else i1 = 0;
 } else i1 = -1; else {
  if ((i4 | 0) == (i3 | 0) ? (i3 = HEAP8[i8 + 11 >> 0] | 0, (i3 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i3 & 255) | 0) : 0) {
   if (!(HEAP8[i6 >> 0] | 0)) {
    i1 = -1;
    break;
   }
   i1 = HEAP32[i14 >> 2] | 0;
   if ((i1 - i13 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i10 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  }
  i3 = i5 + 128 | 0;
  i2 = 0;
  while (1) {
   i1 = i5 + (i2 << 2) | 0;
   if ((i2 | 0) == 32) {
    i1 = i3;
    break;
   }
   if ((HEAP32[i1 >> 2] | 0) == (i4 | 0)) break; else i2 = i2 + 1 | 0;
  }
  i2 = i1 - i5 | 0;
  if ((i2 | 0) <= 124) {
   i3 = HEAP8[10736 + (i2 >> 2) >> 0] | 0;
   i5 = i2 + -88 | 0;
   switch (i5 >>> 2 | i5 << 30 | 0) {
   case 2:
   case 3:
    {
     i1 = HEAP32[i12 >> 2] | 0;
     if ((i1 | 0) != (i7 | 0) ? (HEAP8[i1 + -1 >> 0] & 95) != (HEAP8[i11 >> 0] & 127) : 0) {
      i1 = -1;
      break L1;
     }
     HEAP32[i12 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3;
     i1 = 0;
     break L1;
    }
   case 1:
   case 0:
    {
     HEAP8[i11 >> 0] = 80;
     break;
    }
   default:
    {
     i1 = i3 & 95;
     if ((((i1 | 0) == (HEAP8[i11 >> 0] | 0) ? (HEAP8[i11 >> 0] = i1 | 128, HEAP8[i6 >> 0] | 0) : 0) ? (HEAP8[i6 >> 0] = 0, i11 = HEAP8[i8 + 11 >> 0] | 0, (i11 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i11 & 255) | 0) : 0) ? (i9 = HEAP32[i14 >> 2] | 0, (i9 - i13 | 0) < 160) : 0) {
      i13 = HEAP32[i10 >> 2] | 0;
      HEAP32[i14 >> 2] = i9 + 4;
      HEAP32[i9 >> 2] = i13;
     }
    }
   }
   i14 = HEAP32[i12 >> 2] | 0;
   HEAP32[i12 >> 2] = i14 + 1;
   HEAP8[i14 >> 0] = i3;
   if ((i2 | 0) > 84) i1 = 0; else {
    HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 1;
    i1 = 0;
   }
  } else i1 = -1;
 } while (0);
 return i1 | 0;
}

function __ZN6vision19FindHoughSimilarityERNS_21HoughSimilarityVotingERKNSt3__26vectorINS_12FeaturePointENS2_9allocatorIS4_EEEES9_RKNS3_INS_7match_tENS5_ISA_EEEEiiii(i7, i1, i2, i12, i13, i14, i15, i16) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, d24 = 0.0, d25 = 0.0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i17 = i19 + 20 | 0;
 i18 = i19 + 8 | 0;
 i8 = i19 + 4 | 0;
 i9 = i19;
 i10 = i12 + 4 | 0;
 __ZNSt3__26vectorIfNS_9allocatorIfEEEC2Em(i17, (HEAP32[i10 >> 2] | 0) - (HEAP32[i12 >> 2] | 0) >> 1);
 __ZNSt3__26vectorIfNS_9allocatorIfEEEC2Em(i18, (HEAP32[i10 >> 2] | 0) - (HEAP32[i12 >> 2] | 0) >> 1);
 i6 = HEAP32[i12 >> 2] | 0;
 i11 = (HEAP32[i10 >> 2] | 0) - i6 >> 3;
 i5 = HEAP32[i1 >> 2] | 0;
 i2 = HEAP32[i2 >> 2] | 0;
 i3 = HEAP32[i17 >> 2] | 0;
 i4 = HEAP32[i18 >> 2] | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == (i11 | 0)) break;
  i23 = HEAP32[i6 + (i1 << 3) >> 2] | 0;
  i21 = HEAP32[i6 + (i1 << 3) + 4 >> 2] | 0;
  i20 = i1 << 2;
  i22 = i3 + (i20 << 2) | 0;
  HEAP32[i22 >> 2] = HEAP32[i5 + (i23 * 20 | 0) >> 2];
  HEAP32[i22 + 4 >> 2] = HEAP32[i5 + (i23 * 20 | 0) + 4 >> 2];
  HEAP32[i22 + 8 >> 2] = HEAP32[i5 + (i23 * 20 | 0) + 8 >> 2];
  HEAP32[i22 + 12 >> 2] = HEAP32[i5 + (i23 * 20 | 0) + 12 >> 2];
  i20 = i4 + (i20 << 2) | 0;
  HEAP32[i20 >> 2] = HEAP32[i2 + (i21 * 20 | 0) >> 2];
  HEAP32[i20 + 4 >> 2] = HEAP32[i2 + (i21 * 20 | 0) + 4 >> 2];
  HEAP32[i20 + 8 >> 2] = HEAP32[i2 + (i21 * 20 | 0) + 8 >> 2];
  HEAP32[i20 + 12 >> 2] = HEAP32[i2 + (i21 * 20 | 0) + 12 >> 2];
  i1 = i1 + 1 | 0;
 }
 d25 = +(i13 | 0);
 d25 = d25 * .20000000298023224 + d25;
 d24 = +(i14 | 0);
 d24 = d24 * .20000000298023224 + d24;
 __ZN6vision21HoughSimilarityVoting4initEffffiiii(i7, -d25, d25, -d24, d24, 0, 0, 12, 10);
 __ZN6vision21HoughSimilarityVoting26setObjectCenterInReferenceEff(i7, +(i15 >> 1 | 0), +(i16 >> 1 | 0));
 __ZN6vision21HoughSimilarityVoting21setRefImageDimensionsEii(i7, i15, i16);
 __ZN6vision21HoughSimilarityVoting4voteEPKfS2_i(i7, HEAP32[i17 >> 2] | 0, HEAP32[i18 >> 2] | 0, (HEAP32[i10 >> 2] | 0) - (HEAP32[i12 >> 2] | 0) >> 3);
 __ZNK6vision21HoughSimilarityVoting23getMaximumNumberOfVotesERfRi(i7, i8, i9);
 i23 = +HEAPF32[i8 >> 2] < 3.0 ? -1 : HEAP32[i9 >> 2] | 0;
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev(i18);
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev(i17);
 STACKTOP = i19;
 return i23 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce(i1, i21, i22, i23, d8) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i23 = i23 | 0;
 d8 = +d8;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 i13 = i17 + 168 | 0;
 i7 = i17 + 144 | 0;
 i6 = i17 + 128 | 0;
 i3 = i17 + 120 | 0;
 i2 = i17 + 104 | 0;
 i5 = i17 + 96 | 0;
 i10 = i17 + 64 | 0;
 i9 = i17 + 164 | 0;
 i11 = i17;
 i16 = i17 + 160 | 0;
 i14 = i17 + 156 | 0;
 i15 = i17 + 152 | 0;
 i4 = i5;
 HEAP32[i4 >> 2] = 37;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i5 + 1 | 0, 47865, HEAP32[i22 + 4 >> 2] | 0) | 0;
 HEAP32[i9 >> 2] = i10;
 i1 = __ZNSt3__26__clocEv() | 0;
 if (i4) {
  HEAP32[i2 >> 2] = HEAP32[i22 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d8;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i10, 30, i1, i5, i2) | 0;
 } else {
  HEAPF64[i3 >> 3] = d8;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i10, 30, i1, i5, i3) | 0;
 }
 if ((i1 | 0) > 29) {
  i1 = __ZNSt3__26__clocEv() | 0;
  if (i4) {
   HEAP32[i6 >> 2] = HEAP32[i22 + 8 >> 2];
   HEAPF64[i6 + 8 >> 3] = d8;
   i2 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i9, i1, i5, i6) | 0;
  } else {
   HEAPF64[i7 >> 3] = d8;
   i2 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i9, i1, i5, i7) | 0;
  }
  i1 = HEAP32[i9 >> 2] | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i12 = i2;
   i20 = i1;
   i24 = i1;
  }
 } else {
  i12 = i1;
  i20 = 0;
  i24 = HEAP32[i9 >> 2] | 0;
 }
 i2 = i24 + i12 | 0;
 i3 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i24, i2, i22) | 0;
 if ((i24 | 0) != (i10 | 0)) {
  i1 = _malloc(i12 << 1) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i18 = i1;
   i19 = i1;
  }
 } else {
  i18 = i11;
  i19 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv(i13, i22);
 __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i24, i3, i2, i18, i16, i14, i13);
 __ZNSt3__26localeD2Ev(i13);
 HEAP32[i15 >> 2] = HEAP32[i21 >> 2];
 i21 = HEAP32[i16 >> 2] | 0;
 i24 = HEAP32[i14 >> 2] | 0;
 HEAP32[i13 >> 2] = HEAP32[i15 >> 2];
 i24 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i13, i18, i21, i24, i22, i23) | 0;
 _free(i19);
 _free(i20);
 STACKTOP = i17;
 return i24 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd(i1, i21, i22, i23, d8) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i23 = i23 | 0;
 d8 = +d8;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 i13 = i17 + 168 | 0;
 i7 = i17 + 144 | 0;
 i6 = i17 + 128 | 0;
 i3 = i17 + 120 | 0;
 i2 = i17 + 104 | 0;
 i5 = i17 + 96 | 0;
 i10 = i17 + 64 | 0;
 i9 = i17 + 164 | 0;
 i11 = i17;
 i16 = i17 + 160 | 0;
 i14 = i17 + 156 | 0;
 i15 = i17 + 152 | 0;
 i4 = i5;
 HEAP32[i4 >> 2] = 37;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i5 + 1 | 0, 59242, HEAP32[i22 + 4 >> 2] | 0) | 0;
 HEAP32[i9 >> 2] = i10;
 i1 = __ZNSt3__26__clocEv() | 0;
 if (i4) {
  HEAP32[i2 >> 2] = HEAP32[i22 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d8;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i10, 30, i1, i5, i2) | 0;
 } else {
  HEAPF64[i3 >> 3] = d8;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i10, 30, i1, i5, i3) | 0;
 }
 if ((i1 | 0) > 29) {
  i1 = __ZNSt3__26__clocEv() | 0;
  if (i4) {
   HEAP32[i6 >> 2] = HEAP32[i22 + 8 >> 2];
   HEAPF64[i6 + 8 >> 3] = d8;
   i2 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i9, i1, i5, i6) | 0;
  } else {
   HEAPF64[i7 >> 3] = d8;
   i2 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i9, i1, i5, i7) | 0;
  }
  i1 = HEAP32[i9 >> 2] | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i12 = i2;
   i20 = i1;
   i24 = i1;
  }
 } else {
  i12 = i1;
  i20 = 0;
  i24 = HEAP32[i9 >> 2] | 0;
 }
 i2 = i24 + i12 | 0;
 i3 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i24, i2, i22) | 0;
 if ((i24 | 0) != (i10 | 0)) {
  i1 = _malloc(i12 << 1) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i18 = i1;
   i19 = i1;
  }
 } else {
  i18 = i11;
  i19 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv(i13, i22);
 __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i24, i3, i2, i18, i16, i14, i13);
 __ZNSt3__26localeD2Ev(i13);
 HEAP32[i15 >> 2] = HEAP32[i21 >> 2];
 i21 = HEAP32[i16 >> 2] | 0;
 i24 = HEAP32[i14 >> 2] | 0;
 HEAP32[i13 >> 2] = HEAP32[i15 >> 2];
 i24 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i13, i18, i21, i24, i22, i23) | 0;
 _free(i19);
 _free(i20);
 STACKTOP = i17;
 return i24 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i6 = i11 + 36 | 0;
 i8 = i11 + 24 | 0;
 i9 = i11 + 12 | 0;
 i10 = i11;
 if (((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 97 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 122 : 0) ? (i12 = i1 + 2 | 0, i7 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0, (i7 | 0) != (i12 | 0)) : 0) ? (i5 = i3 + 4 | 0, i4 = HEAP32[i5 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i4 | 0)) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i10, i4 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i10, 0, 51705) | 0;
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9, 50524) | 0;
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i9 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = i1 + -24 | 0;
  i3 = i2 + 11 | 0;
  if ((HEAP8[i3 >> 0] | 0) < 0) {
   i12 = HEAP32[i2 >> 2] | 0;
   HEAP8[i6 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i12, i6);
   HEAP32[i1 + -20 >> 2] = 0;
  } else {
   HEAP8[i6 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i6);
   HEAP8[i3 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
  HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i8 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  i1 = i7;
 }
 STACKTOP = i11;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i6 = i11 + 36 | 0;
 i8 = i11 + 24 | 0;
 i9 = i11 + 12 | 0;
 i10 = i11;
 if (((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 97 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 116 : 0) ? (i12 = i1 + 2 | 0, i7 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0, (i7 | 0) != (i12 | 0)) : 0) ? (i5 = i3 + 4 | 0, i4 = HEAP32[i5 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i4 | 0)) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i10, i4 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i10, 0, 51705) | 0;
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9, 50524) | 0;
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i9 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = i1 + -24 | 0;
  i3 = i2 + 11 | 0;
  if ((HEAP8[i3 >> 0] | 0) < 0) {
   i12 = HEAP32[i2 >> 2] | 0;
   HEAP8[i6 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i12, i6);
   HEAP32[i1 + -20 >> 2] = 0;
  } else {
   HEAP8[i6 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i6);
   HEAP8[i3 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
  HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i8 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  i1 = i7;
 }
 STACKTOP = i11;
 return i1 | 0;
}

function _consume_data(i22) {
 i22 = i22 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i23 = 0, i24 = 0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i19 = i24;
 i20 = HEAP32[i22 + 428 >> 2] | 0;
 i21 = i22 + 328 | 0;
 i2 = i22 + 4 | 0;
 i23 = i22 + 148 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (HEAP32[i21 >> 2] | 0)) break;
  i16 = HEAP32[i22 + 332 + (i1 << 2) >> 2] | 0;
  i18 = HEAP32[i16 + 12 >> 2] | 0;
  i17 = Math_imul(i18, HEAP32[i23 >> 2] | 0) | 0;
  i18 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 31](i22, HEAP32[i20 + 72 + (HEAP32[i16 + 4 >> 2] << 2) >> 2] | 0, i17, i18, 1) | 0;
  HEAP32[i19 + (i1 << 2) >> 2] = i18;
  i1 = i1 + 1 | 0;
 }
 i17 = i20 + 24 | 0;
 i6 = i20 + 28 | 0;
 i18 = i20 + 20 | 0;
 i7 = i22 + 348 | 0;
 i8 = i22 + 444 | 0;
 i9 = i20 + 32 | 0;
 i15 = HEAP32[i17 >> 2] | 0;
 L5 : while (1) {
  if ((i15 | 0) >= (HEAP32[i6 >> 2] | 0)) {
   i2 = 21;
   break;
  }
  i16 = HEAP32[i18 >> 2] | 0;
  while (1) {
   if (i16 >>> 0 >= (HEAP32[i7 >> 2] | 0) >>> 0) break;
   i10 = HEAP32[i21 >> 2] | 0;
   i1 = 0;
   i5 = 0;
   while (1) {
    if ((i5 | 0) >= (i10 | 0)) break;
    i13 = HEAP32[i22 + 332 + (i5 << 2) >> 2] | 0;
    i11 = HEAP32[i13 + 52 >> 2] | 0;
    i12 = Math_imul(i11, i16) | 0;
    i13 = HEAP32[i13 + 56 >> 2] | 0;
    i14 = i19 + (i5 << 2) | 0;
    i4 = 0;
    while (1) {
     if ((i4 | 0) >= (i13 | 0)) break;
     i2 = (HEAP32[(HEAP32[i14 >> 2] | 0) + (i4 + i15 << 2) >> 2] | 0) + (i12 << 7) | 0;
     i3 = 0;
     while (1) {
      if ((i3 | 0) >= (i11 | 0)) break;
      HEAP32[i20 + 32 + (i1 << 2) >> 2] = i2;
      i2 = i2 + 128 | 0;
      i3 = i3 + 1 | 0;
      i1 = i1 + 1 | 0;
     }
     i4 = i4 + 1 | 0;
    }
    i5 = i5 + 1 | 0;
   }
   if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 4 >> 2] & 63](i22, i9) | 0)) {
    i2 = 18;
    break L5;
   }
   i16 = i16 + 1 | 0;
  }
  HEAP32[i18 >> 2] = 0;
  i15 = i15 + 1 | 0;
 }
 do if ((i2 | 0) == 18) {
  HEAP32[i17 >> 2] = i15;
  HEAP32[i18 >> 2] = i16;
  i1 = 0;
 } else if ((i2 | 0) == 21) {
  i21 = (HEAP32[i23 >> 2] | 0) + 1 | 0;
  HEAP32[i23 >> 2] = i21;
  if (i21 >>> 0 < (HEAP32[i22 + 320 >> 2] | 0) >>> 0) {
   _start_iMCU_row_28(i22);
   i1 = 3;
   break;
  } else {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[i22 + 436 >> 2] | 0) + 12 >> 2] & 255](i22);
   i1 = 4;
   break;
  }
 } while (0);
 STACKTOP = i24;
 return i1 | 0;
}

function _arParamIdeal2Observ(i7, d2, d6, i8, i9, i1) {
 i7 = i7 | 0;
 d2 = +d2;
 d6 = +d6;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 var d3 = 0.0, d4 = 0.0, i5 = 0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0;
 L1 : do switch (i1 | 0) {
 case 4:
  {
   d3 = +HEAPF64[i7 + 16 >> 3];
   d11 = +HEAPF64[i7 + 24 >> 3];
   d14 = +HEAPF64[i7 + 32 >> 3];
   d12 = +HEAPF64[i7 + 40 >> 3];
   d15 = +HEAPF64[i7 + 48 >> 3];
   d13 = +HEAPF64[i7 + 56 >> 3];
   d4 = +HEAPF64[i7 + 64 >> 3];
   d10 = (d2 - d15) * d4 / d14;
   d6 = (d6 - d13) * d4 / d12;
   d4 = d10 * d10 + d6 * d6;
   d2 = +HEAPF64[i7 >> 3] * d4 + 1.0 + d4 * (+HEAPF64[i7 + 8 >> 3] * d4);
   HEAPF64[i8 >> 3] = d15 + d14 * (d11 * (d4 + d10 * (d10 * 2.0)) + (d6 * (d3 * 2.0 * d10) + d10 * d2));
   d2 = d13 + d12 * (d6 * (d11 * 2.0 * d10) + (d3 * (d4 + d6 * (d6 * 2.0)) + d6 * d2));
   i5 = 12;
   break;
  }
 case 3:
  {
   d4 = +HEAPF64[i7 >> 3];
   d15 = +HEAPF64[i7 + 16 >> 3];
   d3 = (d2 - d4) * d15;
   i1 = i7 + 8 | 0;
   d2 = d15 * (d6 - +HEAPF64[i1 >> 3]);
   if (d3 == 0.0 & d2 == 0.0) {
    HEAPF64[i8 >> 3] = d4;
    d2 = +HEAPF64[i1 >> 3];
    i5 = 12;
    break L1;
   } else {
    d15 = d3 * d3 + d2 * d2;
    d15 = 1.0 - d15 * (+HEAPF64[i7 + 32 >> 3] / 1.0e8) - d15 * (d15 * (+HEAPF64[i7 + 40 >> 3] / 1.0e8 / 1.0e5));
    HEAPF64[i8 >> 3] = d4 + +HEAPF64[i7 + 24 >> 3] * (d3 * d15);
    d2 = +HEAPF64[i1 >> 3] + d2 * d15;
    i5 = 12;
    break L1;
   }
  }
 case 2:
  {
   d4 = +HEAPF64[i7 >> 3];
   d15 = +HEAPF64[i7 + 16 >> 3];
   d3 = (d2 - d4) * d15;
   i1 = i7 + 8 | 0;
   d2 = d15 * (d6 - +HEAPF64[i1 >> 3]);
   if (d3 == 0.0 & d2 == 0.0) {
    HEAPF64[i8 >> 3] = d4;
    d2 = +HEAPF64[i1 >> 3];
    i5 = 12;
    break L1;
   } else {
    d15 = d3 * d3 + d2 * d2;
    d15 = 1.0 - d15 * (+HEAPF64[i7 + 24 >> 3] / 1.0e8) - d15 * (d15 * (+HEAPF64[i7 + 32 >> 3] / 1.0e8 / 1.0e5));
    HEAPF64[i8 >> 3] = d4 + d3 * d15;
    d2 = +HEAPF64[i1 >> 3] + d2 * d15;
    i5 = 12;
    break L1;
   }
  }
 case 1:
  {
   d4 = +HEAPF64[i7 >> 3];
   d15 = +HEAPF64[i7 + 16 >> 3];
   d3 = (d2 - d4) * d15;
   i1 = i7 + 8 | 0;
   d2 = d15 * (d6 - +HEAPF64[i1 >> 3]);
   if (d3 == 0.0 & d2 == 0.0) {
    HEAPF64[i8 >> 3] = d4;
    d2 = +HEAPF64[i1 >> 3];
    i5 = 12;
    break L1;
   } else {
    d15 = 1.0 - (d3 * d3 + d2 * d2) * (+HEAPF64[i7 + 24 >> 3] / 1.0e8);
    HEAPF64[i8 >> 3] = d4 + d3 * d15;
    d2 = +HEAPF64[i1 >> 3] + d2 * d15;
    i5 = 12;
    break L1;
   }
  }
 default:
  i1 = -1;
 } while (0);
 if ((i5 | 0) == 12) {
  HEAPF64[i9 >> 3] = d2;
  i1 = 0;
 }
 return i1 | 0;
}

function _scanexp(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = i6 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 i8 = i6 + 104 | 0;
 if (i1 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
  HEAP32[i7 >> 2] = i1 + 1;
  i2 = HEAPU8[i1 >> 0] | 0;
 } else i2 = ___shgetc(i6) | 0;
 switch (i2 | 0) {
 case 43:
 case 45:
  {
   i3 = (i2 | 0) == 45 & 1;
   i1 = HEAP32[i7 >> 2] | 0;
   if (i1 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
    HEAP32[i7 >> 2] = i1 + 1;
    i1 = HEAPU8[i1 >> 0] | 0;
   } else i1 = ___shgetc(i6) | 0;
   i2 = i1 + -48 | 0;
   if ((i4 | 0) != 0 & i2 >>> 0 > 9) if (!(HEAP32[i8 >> 2] | 0)) {
    i2 = 0;
    i1 = -2147483648;
   } else {
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + -1;
    i9 = 14;
   } else i9 = 12;
   break;
  }
 default:
  {
   i3 = 0;
   i1 = i2;
   i2 = i2 + -48 | 0;
   i9 = 12;
  }
 }
 if ((i9 | 0) == 12) if (i2 >>> 0 > 9) i9 = 14; else {
  i2 = 0;
  do {
   i2 = i1 + -48 + (i2 * 10 | 0) | 0;
   i1 = HEAP32[i7 >> 2] | 0;
   if (i1 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
    HEAP32[i7 >> 2] = i1 + 1;
    i1 = HEAPU8[i1 >> 0] | 0;
   } else i1 = ___shgetc(i6) | 0;
   i4 = i1 + -48 | 0;
  } while (i4 >>> 0 < 10 & (i2 | 0) < 214748364);
  i5 = ((i2 | 0) < 0) << 31 >> 31;
  if (i4 >>> 0 < 10) {
   do {
    i10 = ___muldi3(i2 | 0, i5 | 0, 10, 0) | 0;
    i4 = getTempRet0() | 0;
    i1 = _i64Add(i1 | 0, ((i1 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
    i2 = _i64Add(i1 | 0, getTempRet0() | 0, i10 | 0, i4 | 0) | 0;
    i5 = getTempRet0() | 0;
    i1 = HEAP32[i7 >> 2] | 0;
    if (i1 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
     HEAP32[i7 >> 2] = i1 + 1;
     i1 = HEAPU8[i1 >> 0] | 0;
    } else i1 = ___shgetc(i6) | 0;
    i4 = i1 + -48 | 0;
   } while (i4 >>> 0 < 10 & ((i5 | 0) < 21474836 | (i5 | 0) == 21474836 & i2 >>> 0 < 2061584302));
   if (i4 >>> 0 < 10) {
    do {
     i1 = HEAP32[i7 >> 2] | 0;
     if (i1 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
      HEAP32[i7 >> 2] = i1 + 1;
      i1 = HEAPU8[i1 >> 0] | 0;
     } else i1 = ___shgetc(i6) | 0;
    } while ((i1 + -48 | 0) >>> 0 < 10);
    i1 = i5;
   } else i1 = i5;
  } else i1 = i5;
  if (HEAP32[i8 >> 2] | 0) HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + -1;
  i8 = (i3 | 0) == 0;
  i7 = _i64Subtract(0, 0, i2 | 0, i1 | 0) | 0;
  i10 = getTempRet0() | 0;
  i2 = i8 ? i2 : i7;
  i1 = i8 ? i1 : i10;
 }
 if ((i9 | 0) == 14) if (!(HEAP32[i8 >> 2] | 0)) {
  i2 = 0;
  i1 = -2147483648;
 } else {
  HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + -1;
  i2 = 0;
  i1 = -2147483648;
 }
 setTempRet0(i1 | 0);
 return i2 | 0;
}

function _arPattGetIDGlobal(i8, i9, i14, i15, i16, i17, i18, i19, i20, d21, i10, i11, i12, i6, i2, i3, i4, i5, i7) {
 i8 = i8 | 0;
 i9 = i9 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i17 = i17 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 i20 = i20 | 0;
 d21 = +d21;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 var i1 = 0, i13 = 0, i22 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 12304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(12304);
 i13 = i22;
 i1 = i22 + 12288 | 0;
 do if ((i14 + -2 | 0) >>> 0 < 3) {
  if ((i4 | 0) != 2830) {
   i1 = i4 & 255;
   if ((_arPattGetImage2(i9, 2, i1, i1 * 3 | 0, i15, i16, i17, i18, i19, i20, d21, i13) | 0) < 0) {
    HEAP32[i6 >> 2] = -1;
    i4 = -6;
    break;
   }
   i1 = _get_matrix_code(i13, i1, i6, i2, i3, i4, i5) | 0;
   if (!i7) {
    i4 = i1;
    break;
   }
   i4 = i7;
   HEAP32[i4 >> 2] = 0;
   HEAP32[i4 + 4 >> 2] = 0;
   i4 = i1;
   break;
  }
  if ((_arPattGetImage2(i9, 2, 14, 42, i15, i16, i17, i18, i19, i20, .875, i13) | 0) < 0) {
   HEAP32[i6 >> 2] = -1;
   i4 = -6;
   break;
  }
  i4 = _get_global_id_code(i13, i1, i2, i3, i5) | 0;
  if ((i4 | 0) < 0) {
   HEAP32[i6 >> 2] = -1;
   break;
  }
  i2 = i1;
  i1 = HEAP32[i2 >> 2] | 0;
  i2 = HEAP32[i2 + 4 >> 2] | 0;
  if ((i1 | 0) == -1 & (i2 | 0) == -1) {
   HEAP32[i6 >> 2] = -1;
   i4 = -5;
   break;
  }
  HEAP32[i6 >> 2] = (i1 & -32768 | 0) == 0 & 0 == 0 ? i1 & 32767 : 0;
  if (i7) {
   HEAP32[i7 >> 2] = i1;
   HEAP32[i7 + 4 >> 2] = i2;
  }
 } else i4 = 1; while (0);
 L21 : do switch (i14 | 0) {
 case 0:
 case 1:
 case 3:
 case 4:
  {
   if (!i8) {
    HEAP32[i10 >> 2] = -1;
    i1 = -1;
    break L21;
   }
   i1 = i8 + 28 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   i3 = i2 << 2;
   switch (i14 | 0) {
   case 0:
   case 3:
    if ((_arPattGetImage2(i9, 0, i2, i3, i15, i16, i17, i18, i19, i20, d21, i13) | 0) < 0) {
     HEAP32[i10 >> 2] = -1;
     i1 = -6;
     break L21;
    } else {
     i1 = _pattern_match(i8, 0, i13, HEAP32[i1 >> 2] | 0, i10, i11, i12) | 0;
     break L21;
    }
   default:
    if ((_arPattGetImage2(i9, 1, i2, i3, i15, i16, i17, i18, i19, i20, d21, i13) | 0) < 0) {
     HEAP32[i10 >> 2] = -1;
     i1 = -6;
     break L21;
    } else {
     i1 = _pattern_match(i8, 1, i13, HEAP32[i1 >> 2] | 0, i10, i11, i12) | 0;
     break L21;
    }
   }
  }
 default:
  i1 = 1;
 } while (0);
 if ((i4 | 0) != 1) i1 = (i1 | 0) == 1 ? i4 : (i1 & i4 | 0) < 0 ? i1 : 0;
 STACKTOP = i22;
 return i1 | 0;
}

function _default_decompress_parms(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 36 >> 2] | 0;
 L1 : do switch (i1 | 0) {
 case 1:
  {
   i2 = i1;
   break;
  }
 case 3:
  {
   if (!(HEAP32[i4 + 280 >> 2] | 0)) if (!(HEAP32[i4 + 292 >> 2] | 0)) {
    i3 = HEAP32[i4 + 216 >> 2] | 0;
    i1 = HEAP32[i3 >> 2] | 0;
    i2 = HEAP32[i3 + 84 >> 2] | 0;
    i3 = HEAP32[i3 + 168 >> 2] | 0;
    if ((i1 | 0) == 1 & (i2 | 0) == 2 & (i3 | 0) == 3) {
     i2 = 2;
     i1 = 3;
     break L1;
    }
    if ((i1 | 0) == 82 & (i2 | 0) == 71 & (i3 | 0) == 66) {
     i2 = 2;
     i1 = 2;
     break L1;
    }
    i5 = HEAP32[i4 >> 2] | 0;
    HEAP32[i5 + 24 >> 2] = i1;
    HEAP32[i5 + 28 >> 2] = i2;
    HEAP32[i5 + 32 >> 2] = i3;
    HEAP32[i5 + 20 >> 2] = 111;
    FUNCTION_TABLE_vii[HEAP32[i5 + 4 >> 2] & 63](i4, 1);
    i2 = 2;
    i1 = 3;
    break L1;
   } else {
    i1 = HEAP8[i4 + 296 >> 0] | 0;
    switch (i1 << 24 >> 24) {
    case 0:
     {
      i2 = 2;
      i1 = 2;
      break L1;
     }
    case 1:
     {
      i2 = 2;
      i1 = 3;
      break L1;
     }
    default:
     {
      i2 = HEAP32[i4 >> 2] | 0;
      HEAP32[i2 + 20 >> 2] = 114;
      HEAP32[i2 + 24 >> 2] = i1 & 255;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] & 63](i4, -1);
      i2 = 2;
      i1 = 3;
      break L1;
     }
    }
   } else {
    i2 = 2;
    i1 = 3;
   }
   break;
  }
 case 4:
  {
   if (!(HEAP32[i4 + 292 >> 2] | 0)) {
    i2 = 4;
    i1 = 4;
   } else {
    i1 = HEAP8[i4 + 296 >> 0] | 0;
    switch (i1 << 24 >> 24) {
    case 0:
     {
      i2 = 4;
      i1 = 4;
      break L1;
     }
    case 2:
     {
      i2 = 4;
      i1 = 5;
      break L1;
     }
    default:
     {
      i2 = HEAP32[i4 >> 2] | 0;
      HEAP32[i2 + 20 >> 2] = 114;
      HEAP32[i2 + 24 >> 2] = i1 & 255;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] & 63](i4, -1);
      i2 = 4;
      i1 = 5;
      break L1;
     }
    }
   }
   break;
  }
 default:
  {
   i2 = 0;
   i1 = 0;
  }
 } while (0);
 HEAP32[i4 + 40 >> 2] = i1;
 HEAP32[i4 + 44 >> 2] = i2;
 HEAP32[i4 + 48 >> 2] = 1;
 HEAP32[i4 + 52 >> 2] = 1;
 HEAPF64[i4 + 56 >> 3] = 1.0;
 HEAP32[i4 + 64 >> 2] = 0;
 HEAP32[i4 + 68 >> 2] = 0;
 HEAP32[i4 + 72 >> 2] = 0;
 HEAP32[i4 + 76 >> 2] = 1;
 HEAP32[i4 + 80 >> 2] = 1;
 HEAP32[i4 + 84 >> 2] = 0;
 HEAP32[i4 + 88 >> 2] = 2;
 HEAP32[i4 + 92 >> 2] = 1;
 HEAP32[i4 + 96 >> 2] = 256;
 HEAP32[i4 + 136 >> 2] = 0;
 HEAP32[i4 + 100 >> 2] = 0;
 HEAP32[i4 + 104 >> 2] = 0;
 HEAP32[i4 + 108 >> 2] = 0;
 return;
}

function __Z21kpmUtilGetPose_binaryP9ARParamLTRKNSt3__26vectorIN6vision7match_tENS1_9allocatorIS4_EEEERKNS2_INS3_7Point3dIfEENS5_ISB_EEEERKNS2_INS3_12FeaturePointENS5_ISG_EEEEPA4_fPf(i7, i1, i5, i3, i14, i15) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 var i2 = 0, i4 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i16 = 0, i17 = 0, i18 = 0, d19 = 0.0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i4 = i18 + 208 | 0;
 i2 = i18 + 200 | 0;
 i16 = i18 + 224 | 0;
 i11 = i18 + 212 | 0;
 i12 = i18 + 96 | 0;
 i17 = i18 + 192 | 0;
 i13 = i18;
 i6 = HEAP32[i1 >> 2] | 0;
 i1 = (HEAP32[i1 + 4 >> 2] | 0) - i6 | 0;
 i8 = i1 >> 3;
 do if (i8 >>> 0 < 4) i1 = -1; else {
  i10 = _malloc(i1 << 1) | 0;
  if (!i10) {
   _arLog(0, 3, 20581, i2);
   _exit(1);
  }
  i9 = _malloc(i8 * 24 | 0) | 0;
  if (!i9) {
   _arLog(0, 3, 20581, i4);
   _exit(1);
  }
  i3 = HEAP32[i3 >> 2] | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i8 | 0)) break;
   i5 = HEAP32[i6 + (i1 << 3) >> 2] | 0;
   HEAPF64[i10 + (i1 << 4) >> 3] = +HEAPF32[i3 + (i5 * 20 | 0) >> 2];
   HEAPF64[i10 + (i1 << 4) + 8 >> 3] = +HEAPF32[i3 + (i5 * 20 | 0) + 4 >> 2];
   i5 = HEAP32[i6 + (i1 << 3) + 4 >> 2] | 0;
   HEAPF64[i9 + (i1 * 24 | 0) >> 3] = +HEAPF32[i2 + (i5 * 12 | 0) >> 2];
   HEAPF64[i9 + (i1 * 24 | 0) + 8 >> 3] = +HEAPF32[i2 + (i5 * 12 | 0) + 4 >> 2];
   HEAPF64[i9 + (i1 * 24 | 0) + 16 >> 3] = 0.0;
   i1 = i1 + 1 | 0;
  }
  HEAP32[i11 + 8 >> 2] = i8;
  HEAP32[i11 >> 2] = i10;
  HEAP32[i11 + 4 >> 2] = i9;
  i1 = i7 + 8 | 0;
  if ((_icpGetInitXw2Xc_from_PlanarData(i1, i10, i9, i8, i12) | 0) < 0) {
   _free(i10);
   _free(i9);
   i1 = -1;
   break;
  }
  i1 = _icpCreateHandle(i1) | 0;
  HEAP32[i16 >> 2] = i1;
  if (!i1) {
   _free(i10);
   _free(i9);
   i1 = -1;
   break;
  }
  if ((_icpPoint(i1, i11, i12, i13, i17) | 0) < 0) {
   _free(i10);
   _free(i9);
   _icpDeleteHandle(i16) | 0;
   i1 = -1;
  } else {
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 4) break;
     HEAPF32[i14 + (i2 << 4) + (i1 << 2) >> 2] = +HEAPF64[i13 + (i2 << 5) + (i1 << 3) >> 3];
     i1 = i1 + 1 | 0;
    }
    i2 = i2 + 1 | 0;
   }
   _icpDeleteHandle(i16) | 0;
   _free(i10);
   _free(i9);
   d19 = +HEAPF64[i17 >> 3];
   HEAPF32[i15 >> 2] = d19;
   i1 = (d19 > 10.0) << 31 >> 31;
  }
 } while (0);
 STACKTOP = i18;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIdNS0_2DbEEEPKcS4_S4_RT0_(i1, i2, i9) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 i11 = i12 + 40 | 0;
 i7 = i12 + 32 | 0;
 i8 = i12;
 i10 = i12 + 64 | 0;
 L1 : do if ((i2 - i1 | 0) >>> 0 > 16) {
  i3 = 0;
  i2 = i7;
  while (1) {
   i4 = HEAP8[i1 + i3 >> 0] | 0;
   i5 = i4 << 24 >> 24;
   if ((i3 | 0) == 16) {
    i6 = 6;
    break;
   }
   if (!(_isxdigit(i5) | 0)) break;
   i4 = HEAP8[i1 + (i3 | 1) >> 0] | 0;
   HEAP8[i2 >> 0] = (((i5 + -48 | 0) >>> 0 < 10 ? 0 : 9) + i5 << 4) + i4 + ((i4 + -48 | 0) >>> 0 < 10 ? 208 : 169);
   i3 = i3 + 2 | 0;
   i2 = i2 + 1 | 0;
  }
  do if ((i6 | 0) == 6) {
   if (i4 << 24 >> 24 == 69) {
    L11 : do if ((i2 | 0) != (i7 | 0)) {
     i3 = i7;
     while (1) {
      i2 = i2 + -1 | 0;
      if (i3 >>> 0 >= i2 >>> 0) break L11;
      i6 = HEAP8[i3 >> 0] | 0;
      HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
      HEAP8[i2 >> 0] = i6;
      i3 = i3 + 1 | 0;
     }
    } while (0);
    HEAP32[i8 >> 2] = 0;
    HEAP32[i8 + 4 >> 2] = 0;
    HEAP32[i8 + 8 >> 2] = 0;
    HEAP32[i8 + 12 >> 2] = 0;
    HEAP32[i8 + 16 >> 2] = 0;
    HEAP32[i8 + 20 >> 2] = 0;
    HEAP32[i8 + 24 >> 2] = 0;
    HEAP32[i8 + 28 >> 2] = 0;
    HEAPF64[i11 >> 3] = +HEAPF64[i7 >> 3];
    i2 = _snprintf(i8, 32, 51835, i11) | 0;
    if (i2 >>> 0 > 31) break;
    HEAP32[i10 >> 2] = 0;
    HEAP32[i10 + 4 >> 2] = 0;
    HEAP32[i10 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i10, i8, i2);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i11, i10);
    i2 = i9 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i9 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i11);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i9, i11);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i11);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
    i1 = i1 + 17 | 0;
   }
   break L1;
  } while (0);
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_125parse_noexcept_expressionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i6 = i11 + 36 | 0;
 i8 = i11 + 24 | 0;
 i9 = i11 + 12 | 0;
 i10 = i11;
 i7 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i4) | 0;
 if ((i7 | 0) != (i1 | 0) ? (i5 = i4 + 4 | 0, i3 = HEAP32[i5 >> 2] | 0, (HEAP32[i4 >> 2] | 0) != (i3 | 0)) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i10, i3 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i10, 0, 50797) | 0;
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9, 50524) | 0;
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i9 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = i1 + -24 | 0;
  i3 = i2 + 11 | 0;
  if ((HEAP8[i3 >> 0] | 0) < 0) {
   i5 = HEAP32[i2 >> 2] | 0;
   HEAP8[i6 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i5, i6);
   HEAP32[i1 + -20 >> 2] = 0;
  } else {
   HEAP8[i6 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i6);
   HEAP8[i3 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
  HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i8 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  i1 = i7;
 }
 STACKTOP = i11;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_typeid_exprINS0_2DbEEEPKcS4_S4_RT_(i3, i1, i5) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i8 = i12 + 40 | 0;
 i9 = i12 + 12 | 0;
 i10 = i12 + 24 | 0;
 i11 = i12;
 L1 : do if ((i1 - i3 | 0) > 2 ? (HEAP8[i3 >> 0] | 0) == 116 : 0) {
  i2 = HEAP8[i3 + 1 >> 0] | 0;
  switch (i2 << 24 >> 24) {
  case 105:
  case 101:
   break;
  default:
   {
    i1 = i3;
    break L1;
   }
  }
  i4 = i3 + 2 | 0;
  if (i2 << 24 >> 24 == 101) i1 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i4, i1, i5) | 0; else i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i4, i1, i5) | 0;
  if ((i1 | 0) != (i4 | 0) ? (i7 = i5 + 4 | 0, i6 = HEAP32[i7 >> 2] | 0, (HEAP32[i5 >> 2] | 0) != (i6 | 0)) : 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i11, i6 + -24 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i11, 0, 50729) | 0;
   HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i11 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 50524) | 0;
   HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i10 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i8, i9);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i7 >> 2] | 0) + -24 | 0, i8);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
  } else i1 = i3;
 } else i1 = i3; while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function _setCamera(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i10 = i11 + 24 | 0;
 i9 = i11 + 16 | 0;
 i7 = i11 + 8 | 0;
 i5 = i11;
 i3 = i11 + 32 | 0;
 i4 = i11 + 28 | 0;
 HEAP32[i3 >> 2] = i1;
 HEAP32[i4 >> 2] = i2;
 do if ((__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0) != 0 ? (i8 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0, (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57072, i4) | 0) != 0) : 0) {
  i6 = i8 + 8 | 0;
  _memcpy(i6 | 0, __ZNSt3__213unordered_mapIi7ARParamNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57072, i4) | 0, 184) | 0;
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = i8 + 208 | 0;
  i3 = HEAP32[i8 + 12 >> 2] | 0;
  i4 = i8 + 212 | 0;
  if (!((i1 | 0) == (HEAP32[i2 >> 2] | 0) ? (i3 | 0) == (HEAP32[i4 >> 2] | 0) : 0)) {
   HEAP32[i5 >> 2] = i1;
   HEAP32[i5 + 4 >> 2] = i3;
   _arLog(0, 2, 45596, i5);
   _arParamChangeSize(i6, HEAP32[i2 >> 2] | 0, HEAP32[i4 >> 2] | 0, i6) | 0;
  }
  _deleteHandle(i8);
  i1 = _arParamLTCreate(i6, 15) | 0;
  i3 = i8 + 192 | 0;
  HEAP32[i3 >> 2] = i1;
  if (!i1) {
   _arLog(0, 3, 45643, i7);
   i1 = -1;
   break;
  }
  i1 = _arCreateHandle(i1) | 0;
  i2 = i8 + 216 | 0;
  HEAP32[i2 >> 2] = i1;
  if (!i1) {
   _arLog(0, 3, 45681, i9);
   i1 = -1;
   break;
  }
  _arSetPixelFormat(i1, HEAP32[i8 + 472 >> 2] | 0) | 0;
  i9 = _ar3DCreateHandle(i6) | 0;
  HEAP32[i8 + 228 >> 2] = i9;
  if (!i9) {
   _arLog(0, 3, 45718, i10);
   i1 = -1;
   break;
  } else {
   _arPattAttach(HEAP32[i2 >> 2] | 0, HEAP32[i8 + 220 >> 2] | 0) | 0;
   _arglCameraFrustumRH(HEAP32[i3 >> 2] | 0, +HEAPF64[i8 + 312 >> 3], +HEAPF64[i8 + 320 >> 3], i8 + 344 | 0);
   i1 = _createKpmHandle(HEAP32[i3 >> 2] | 0) | 0;
   HEAP32[i8 + 232 >> 2] = i1;
   i1 = 0;
   break;
  }
 } else i1 = -1; while (0);
 STACKTOP = i11;
 return i1 | 0;
}

function _ar2GetResolution2(i1, i2, i3, i11) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i11 = i11 | 0;
 var i4 = 0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, i12 = 0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i4 = i12;
 if (!i1) {
  d19 = +HEAPF32[i3 >> 2];
  d21 = +HEAPF32[i3 + 4 >> 2];
  d18 = +HEAPF32[i2 >> 2];
  d14 = d19 * d18;
  d20 = +HEAPF32[i2 + 4 >> 2];
  d13 = d21 * d20;
  d15 = +HEAPF32[i2 + 12 >> 2];
  d7 = +HEAPF32[i2 + 16 >> 2];
  d16 = d19 * d7;
  d5 = +HEAPF32[i2 + 20 >> 2];
  d9 = d21 * d5;
  d17 = +HEAPF32[i2 + 28 >> 2];
  d24 = +HEAPF32[i2 + 32 >> 2];
  d22 = d19 * d24;
  d6 = +HEAPF32[i2 + 36 >> 2];
  d8 = d21 * d6;
  d23 = +HEAPF32[i2 + 44 >> 2];
  d10 = d23 + (d22 + d8);
  d19 = d19 + 10.0;
  d8 = d23 + (d19 * d24 + d8);
  d21 = d21 + 10.0;
  d6 = d23 + (d22 + d21 * d6);
  d5 = (d17 + (d16 + d21 * d5)) / d6;
  d6 = (d15 + (d14 + d21 * d20)) / d6;
  d7 = (d17 + (d19 * d7 + d9)) / d8;
  d8 = (d15 + (d19 * d18 + d13)) / d8;
  d9 = (d17 + (d16 + d9)) / d10;
  d10 = (d15 + (d14 + d13)) / d10;
 } else {
  _arUtilMatMuldff(i1 + 8 | 0, i2, i4) | 0;
  d18 = +HEAPF32[i3 >> 2];
  d16 = +HEAPF32[i3 + 4 >> 2];
  d19 = +HEAPF32[i4 >> 2];
  d23 = d18 * d19;
  d17 = +HEAPF32[i4 + 4 >> 2];
  d24 = d16 * d17;
  d22 = +HEAPF32[i4 + 12 >> 2];
  d7 = +HEAPF32[i4 + 16 >> 2];
  d21 = d18 * d7;
  d5 = +HEAPF32[i4 + 20 >> 2];
  d9 = d16 * d5;
  d20 = +HEAPF32[i4 + 28 >> 2];
  d13 = +HEAPF32[i4 + 32 >> 2];
  d15 = d18 * d13;
  d6 = +HEAPF32[i4 + 36 >> 2];
  d8 = d16 * d6;
  d14 = +HEAPF32[i4 + 44 >> 2];
  d10 = d14 + (d15 + d8);
  d18 = d18 + 10.0;
  d8 = d14 + (d18 * d13 + d8);
  d16 = d16 + 10.0;
  d6 = d14 + (d15 + d16 * d6);
  d5 = (d20 + (d21 + d16 * d5)) / d6;
  d6 = (d22 + (d23 + d16 * d17)) / d6;
  d7 = (d20 + (d18 * d7 + d9)) / d8;
  d8 = (d22 + (d18 * d19 + d24)) / d8;
  d9 = (d20 + (d21 + d9)) / d10;
  d10 = (d22 + (d23 + d24)) / d10;
 }
 d22 = d8 - d10;
 d23 = d7 - d9;
 d23 = d22 * d22 + d23 * d23;
 d22 = d6 - d10;
 d24 = d5 - d9;
 d24 = d22 * d22 + d24 * d24;
 i4 = d23 < d24;
 d22 = +Math_sqrt(+(i4 ? d24 : d23)) * 2.5399999618530273;
 HEAPF32[i11 >> 2] = d22;
 d24 = +Math_sqrt(+(i4 ? d23 : d24)) * 2.5399999618530273;
 HEAPF32[i11 + 4 >> 2] = d24;
 STACKTOP = i12;
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIfNS0_2DbEEEPKcS4_S4_RT0_(i1, i2, i9) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i11 = i12 + 24 | 0;
 i7 = i12 + 60 | 0;
 i8 = i12;
 i10 = i12 + 48 | 0;
 L1 : do if ((i2 - i1 | 0) >>> 0 > 8) {
  i3 = 0;
  i2 = i7;
  while (1) {
   i4 = HEAP8[i1 + i3 >> 0] | 0;
   i5 = i4 << 24 >> 24;
   if ((i3 | 0) == 8) {
    i6 = 6;
    break;
   }
   if (!(_isxdigit(i5) | 0)) break;
   i4 = HEAP8[i1 + (i3 | 1) >> 0] | 0;
   HEAP8[i2 >> 0] = (((i5 + -48 | 0) >>> 0 < 10 ? 0 : 9) + i5 << 4) + i4 + ((i4 + -48 | 0) >>> 0 < 10 ? 208 : 169);
   i3 = i3 + 2 | 0;
   i2 = i2 + 1 | 0;
  }
  do if ((i6 | 0) == 6) {
   if (i4 << 24 >> 24 == 69) {
    L11 : do if ((i2 | 0) != (i7 | 0)) {
     i3 = i7;
     while (1) {
      i2 = i2 + -1 | 0;
      if (i3 >>> 0 >= i2 >>> 0) break L11;
      i6 = HEAP8[i3 >> 0] | 0;
      HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
      HEAP8[i2 >> 0] = i6;
      i3 = i3 + 1 | 0;
     }
    } while (0);
    HEAP32[i8 >> 2] = 0;
    HEAP32[i8 + 4 >> 2] = 0;
    HEAP32[i8 + 8 >> 2] = 0;
    HEAP32[i8 + 12 >> 2] = 0;
    HEAP32[i8 + 16 >> 2] = 0;
    HEAP32[i8 + 20 >> 2] = 0;
    HEAPF64[i11 >> 3] = +HEAPF32[i7 >> 2];
    i2 = _snprintf(i8, 24, 51838, i11) | 0;
    if (i2 >>> 0 > 23) break;
    HEAP32[i10 >> 2] = 0;
    HEAP32[i10 + 4 >> 2] = 0;
    HEAP32[i10 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i10, i8, i2);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i11, i10);
    i2 = i9 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i9 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i11);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i9, i11);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i11);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
    i1 = i1 + 9 | 0;
   }
   break L1;
  } while (0);
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function _jpeg_idct_2x2(i1, i3, i2, i9, i10) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i8 = i12;
 i7 = HEAP32[i1 + 324 >> 2] | 0;
 i6 = 8;
 i3 = HEAP32[i3 + 80 >> 2] | 0;
 i4 = i8;
 L1 : while (1) {
  L3 : do switch (i6 | 0) {
  case 0:
   break L1;
  case 2:
  case 4:
  case 6:
   break;
  default:
   {
    i5 = HEAP16[i2 + 16 >> 1] | 0;
    i1 = HEAP16[i2 + 48 >> 1] | 0;
    if (!((i5 | i1) << 16 >> 16)) if ((HEAP16[i2 + 80 >> 1] | 0) == 0 ? (HEAP16[i2 + 112 >> 1] | 0) == 0 : 0) {
     i5 = Math_imul(HEAP16[i2 >> 1] << 2, HEAP32[i3 >> 2] | 0) | 0;
     HEAP32[i4 >> 2] = i5;
     HEAP32[i4 + 32 >> 2] = i5;
     break L3;
    } else i1 = 0;
    i13 = Math_imul(HEAP16[i2 >> 1] << 15, HEAP32[i3 >> 2] | 0) | 0;
    i5 = (Math_imul(Math_imul(HEAP16[i2 + 112 >> 1] | 0, -5906) | 0, HEAP32[i3 + 224 >> 2] | 0) | 0) + (Math_imul((HEAP16[i2 + 80 >> 1] | 0) * 6967 | 0, HEAP32[i3 + 160 >> 2] | 0) | 0) + (Math_imul(Math_imul(i1 << 16 >> 16, -10426) | 0, HEAP32[i3 + 96 >> 2] | 0) | 0) + (Math_imul((i5 << 16 >> 16) * 29692 | 0, HEAP32[i3 + 32 >> 2] | 0) | 0) | 0;
    i1 = i13 | 4096;
    HEAP32[i4 >> 2] = i1 + i5 >> 13;
    HEAP32[i4 + 32 >> 2] = i1 - i5 >> 13;
   }
  } while (0);
  i6 = i6 + -1 | 0;
  i2 = i2 + 2 | 0;
  i3 = i3 + 4 | 0;
  i4 = i4 + 4 | 0;
 }
 i6 = i7 + 128 | 0;
 i5 = 0;
 i3 = i8;
 while (1) {
  if ((i5 | 0) == 2) break;
  i4 = (HEAP32[i9 + (i5 << 2) >> 2] | 0) + i10 | 0;
  i2 = HEAP32[i3 + 4 >> 2] | 0;
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if (!(i2 | i1)) if ((HEAP32[i3 + 20 >> 2] | 0) == 0 ? (HEAP32[i3 + 28 >> 2] | 0) == 0 : 0) {
   i1 = HEAP8[i6 + (((HEAP32[i3 >> 2] | 0) + 16 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i4 >> 0] = i1;
  } else {
   i1 = 0;
   i11 = 15;
  } else i11 = 15;
  if ((i11 | 0) == 15) {
   i11 = 0;
   i13 = Math_imul(HEAP32[i3 + 28 >> 2] | 0, -5906) | 0;
   i1 = i13 + (i2 * 29692 | 0) + ((HEAP32[i3 + 20 >> 2] | 0) * 6967 | 0) + (Math_imul(i1, -10426) | 0) | 0;
   i13 = (HEAP32[i3 >> 2] << 15) + 524288 | 0;
   HEAP8[i4 >> 0] = HEAP8[i6 + ((i13 + i1 | 0) >>> 20 & 1023) >> 0] | 0;
   i1 = HEAP8[i6 + ((i13 - i1 | 0) >>> 20 & 1023) >> 0] | 0;
  }
  HEAP8[i4 + 1 >> 0] = i1;
  i5 = i5 + 1 | 0;
  i3 = i3 + 32 | 0;
 }
 STACKTOP = i12;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIeNS0_2DbEEEPKcS4_S4_RT0_(i1, i2, i9) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i11 = i12 + 48 | 0;
 i7 = i12 + 40 | 0;
 i8 = i12;
 i10 = i12 + 72 | 0;
 L1 : do if ((i2 - i1 | 0) >>> 0 > 20) {
  i3 = 0;
  i2 = i7;
  while (1) {
   i4 = HEAP8[i1 + i3 >> 0] | 0;
   i5 = i4 << 24 >> 24;
   if ((i3 | 0) == 20) {
    i6 = 6;
    break;
   }
   if (!(_isxdigit(i5) | 0)) break;
   i4 = HEAP8[i1 + (i3 | 1) >> 0] | 0;
   HEAP8[i2 >> 0] = (((i5 + -48 | 0) >>> 0 < 10 ? 0 : 9) + i5 << 4) + i4 + ((i4 + -48 | 0) >>> 0 < 10 ? 208 : 169);
   i3 = i3 + 2 | 0;
   i2 = i2 + 1 | 0;
  }
  do if ((i6 | 0) == 6) {
   if (i4 << 24 >> 24 == 69) {
    L11 : do if ((i2 | 0) != (i7 | 0)) {
     i3 = i7;
     while (1) {
      i2 = i2 + -1 | 0;
      if (i3 >>> 0 >= i2 >>> 0) break L11;
      i6 = HEAP8[i3 >> 0] | 0;
      HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
      HEAP8[i2 >> 0] = i6;
      i3 = i3 + 1 | 0;
     }
    } while (0);
    i2 = i8;
    i3 = i2 + 40 | 0;
    do {
     HEAP32[i2 >> 2] = 0;
     i2 = i2 + 4 | 0;
    } while ((i2 | 0) < (i3 | 0));
    HEAPF64[i11 >> 3] = +HEAPF64[i7 >> 3];
    i2 = _snprintf(i8, 40, 51830, i11) | 0;
    if (i2 >>> 0 > 39) break;
    HEAP32[i10 >> 2] = 0;
    HEAP32[i10 + 4 >> 2] = 0;
    HEAP32[i10 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i10, i8, i2);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i11, i10);
    i2 = i9 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i9 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i11);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i9, i11);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i11);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
    i1 = i1 + 21 | 0;
   }
   break L1;
  } while (0);
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function __ZN6vision25DoGScaleInvariantDetector6detectEPKNS_25GaussianScaleSpacePyramidE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i4;
 if ((__ZNK6vision25GaussianScaleSpacePyramid10numOctavesEv(i2) | 0) <= 0) {
  i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 20925) | 0, 20647) | 0, 33655) | 0, 147) | 0, 33662) | 0, 20974) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 __ZN6vision11ScopedTimerC2EPKc(i3, 21909);
 if (__ZN6vision11ScopedTimercvbEv(i3) | 0) __ZN6vision10DoGPyramid7computeEPKNS_25GaussianScaleSpacePyramidE(i1 + 32 | 0, i2);
 __ZN6vision11ScopedTimerD2Ev(i3);
 __ZN6vision11ScopedTimerC2EPKc(i3, 21921);
 if (__ZN6vision11ScopedTimercvbEv(i3) | 0) __ZN6vision25DoGScaleInvariantDetector15extractFeaturesEPKNS_25GaussianScaleSpacePyramidEPKNS_10DoGPyramidE(i1, i2, i1 + 32 | 0);
 __ZN6vision11ScopedTimerD2Ev(i3);
 __ZN6vision11ScopedTimerC2EPKc(i3, 21941);
 if (__ZN6vision11ScopedTimercvbEv(i3) | 0) __ZN6vision25DoGScaleInvariantDetector21findSubpixelLocationsEPKNS_25GaussianScaleSpacePyramidE(i1, i2);
 __ZN6vision11ScopedTimerD2Ev(i3);
 __ZN6vision11ScopedTimerC2EPKc(i3, 21950);
 if (__ZN6vision11ScopedTimercvbEv(i3) | 0) __ZN6vision25DoGScaleInvariantDetector13pruneFeaturesEv(i1);
 __ZN6vision11ScopedTimerD2Ev(i3);
 __ZN6vision11ScopedTimerC2EPKc(i3, 21964);
 if (__ZN6vision11ScopedTimercvbEv(i3) | 0) __ZN6vision25DoGScaleInvariantDetector23findFeatureOrientationsEPKNS_25GaussianScaleSpacePyramidE(i1, i2);
 __ZN6vision11ScopedTimerD2Ev(i3);
 STACKTOP = i4;
 return;
}

function __ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_mmNS_12codecvt_modeE(i10, i11, i12, i13, i1) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = i11;
 if ((((i1 & 4 | 0) != 0 ? (i9 - i10 | 0) > 2 : 0) ? (HEAP8[i10 >> 0] | 0) == -17 : 0) ? (HEAP8[i10 + 1 >> 0] | 0) == -69 : 0) i1 = (HEAP8[i10 + 2 >> 0] | 0) == -65 ? i10 + 3 | 0 : i10; else i1 = i10;
 i2 = 0;
 L7 : while (1) {
  if (!(i2 >>> 0 < i12 >>> 0 & i1 >>> 0 < i11 >>> 0)) break;
  i6 = HEAP8[i1 >> 0] | 0;
  i8 = i6 & 255;
  if (i8 >>> 0 > i13 >>> 0) break;
  do if (i6 << 24 >> 24 <= -1) {
   if ((i6 & 255) < 194) break L7;
   if ((i6 & 255) < 224) {
    if ((i9 - i1 | 0) < 2) break L7;
    i3 = HEAPU8[i1 + 1 >> 0] | 0;
    if ((i3 & 192 | 0) != 128) break L7;
    if ((i3 & 63 | i8 << 6 & 1984) >>> 0 > i13 >>> 0) break L7; else {
     i1 = i1 + 2 | 0;
     break;
    }
   }
   if ((i6 & 255) < 240) {
    if ((i9 - i1 | 0) < 3) break L7;
    i4 = HEAP8[i1 + 1 >> 0] | 0;
    i3 = HEAP8[i1 + 2 >> 0] | 0;
    switch (i6 << 24 >> 24) {
    case -32:
     {
      if ((i4 & -32) << 24 >> 24 != -96) break L7;
      break;
     }
    case -19:
     {
      if ((i4 & -32) << 24 >> 24 != -128) break L7;
      break;
     }
    default:
     if ((i4 & -64) << 24 >> 24 != -128) break L7;
    }
    i3 = i3 & 255;
    if ((i3 & 192 | 0) != 128) break L7;
    if (((i4 & 63) << 6 | i8 << 12 & 61440 | i3 & 63) >>> 0 > i13 >>> 0) break L7; else {
     i1 = i1 + 3 | 0;
     break;
    }
   }
   if ((i6 & 255) >= 245) break L7;
   if ((i12 - i2 | 0) >>> 0 < 2 | (i9 - i1 | 0) < 4) break L7;
   i7 = HEAP8[i1 + 1 >> 0] | 0;
   i3 = HEAP8[i1 + 2 >> 0] | 0;
   i5 = HEAP8[i1 + 3 >> 0] | 0;
   switch (i6 << 24 >> 24) {
   case -16:
    {
     if ((i7 + 112 & 255) >= 48) break L7;
     break;
    }
   case -12:
    {
     if ((i7 & -16) << 24 >> 24 != -128) break L7;
     break;
    }
   default:
    if ((i7 & -64) << 24 >> 24 != -128) break L7;
   }
   i4 = i3 & 255;
   if ((i4 & 192 | 0) != 128) break L7;
   i3 = i5 & 255;
   if ((i3 & 192 | 0) != 128) break L7;
   if (((i7 & 63) << 12 | i8 << 18 & 1835008 | i4 << 6 & 4032 | i3 & 63) >>> 0 > i13 >>> 0) break L7; else {
    i2 = i2 + 1 | 0;
    i1 = i1 + 4 | 0;
   }
  } else i1 = i1 + 1 | 0; while (0);
  i2 = i2 + 1 | 0;
 }
 return i1 - i10 | 0;
}

function __ZN6vision10DoGPyramid5allocEPKNS_25GaussianScaleSpacePyramidE(i11, i2) {
 i11 = i11 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i12;
 if (!(__ZNK6vision25GaussianScaleSpacePyramid4sizeEv(i2) | 0)) {
  i10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 20604) | 0, 20647) | 0, 33655) | 0, 53) | 0, 33662) | 0, 20778) | 0;
  __ZNKSt3__28ios_base6getlocEv(i1, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 i7 = __ZNK6vision5Image4typeEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, 0, 0) | 0) | 0;
 i8 = __ZNK6vision5Image5widthEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, 0, 0) | 0) | 0;
 i9 = __ZNK6vision5Image6heightEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, 0, 0) | 0) | 0;
 i3 = __ZNK6vision25GaussianScaleSpacePyramid10numOctavesEv(i2) | 0;
 i10 = i11 + 12 | 0;
 HEAP32[i10 >> 2] = i3;
 i2 = (__ZNK6vision25GaussianScaleSpacePyramid18numScalesPerOctaveEv(i2) | 0) + -1 | 0;
 i3 = i11 + 16 | 0;
 HEAP32[i3 >> 2] = i2;
 __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE6resizeEm(i11, Math_imul(HEAP32[i10 >> 2] | 0, i2) | 0);
 i2 = 0;
 while (1) {
  if (i2 >>> 0 >= (HEAP32[i10 >> 2] | 0) >>> 0) break;
  i4 = i8 >>> i2;
  i5 = i9 >>> i2;
  i1 = 0;
  while (1) {
   i6 = HEAP32[i3 >> 2] | 0;
   if (i1 >>> 0 >= i6 >>> 0) break;
   i6 = (Math_imul(i6, i2) | 0) + i1 | 0;
   __ZN6vision5Image5allocENS_9ImageTypeEmmim((HEAP32[i11 >> 2] | 0) + (i6 << 5) | 0, i7, i4, i5, -1, 1);
   i1 = i1 + 1 | 0;
  }
  i2 = i2 + 1 | 0;
 }
 STACKTOP = i12;
 return;
}

function __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev(i1) {
 i1 = i1 | 0;
 __embind_register_void(__ZN10emscripten8internal6TypeIDIvE3getEv() | 0, 51963);
 __embind_register_bool(__ZN10emscripten8internal6TypeIDIbE3getEv() | 0, 51968, 1, 1, 0);
 __ZN12_GLOBAL__N_116register_integerIcEEvPKc();
 __ZN12_GLOBAL__N_116register_integerIaEEvPKc();
 __ZN12_GLOBAL__N_116register_integerIhEEvPKc();
 __ZN12_GLOBAL__N_116register_integerIsEEvPKc();
 __ZN12_GLOBAL__N_116register_integerItEEvPKc();
 __ZN12_GLOBAL__N_116register_integerIiEEvPKc();
 __ZN12_GLOBAL__N_116register_integerIjEEvPKc();
 __ZN12_GLOBAL__N_116register_integerIlEEvPKc();
 __ZN12_GLOBAL__N_116register_integerImEEvPKc();
 __ZN12_GLOBAL__N_114register_floatIfEEvPKc();
 __ZN12_GLOBAL__N_114register_floatIdEEvPKc();
 __embind_register_std_string(__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() | 0, 51346);
 __embind_register_std_string(__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() | 0, 45756);
 __embind_register_std_wstring(__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() | 0, 4, 45789);
 __embind_register_emval(__ZN10emscripten8internal6TypeIDINS_3valEE3getEv() | 0, 45802);
 __ZN12_GLOBAL__N_120register_memory_viewIcEEvPKc();
 __ZN12_GLOBAL__N_120register_memory_viewIaEEvPKc(45818);
 __ZN12_GLOBAL__N_120register_memory_viewIhEEvPKc(45855);
 __ZN12_GLOBAL__N_120register_memory_viewIsEEvPKc(45894);
 __ZN12_GLOBAL__N_120register_memory_viewItEEvPKc(45925);
 __ZN12_GLOBAL__N_120register_memory_viewIiEEvPKc(45965);
 __ZN12_GLOBAL__N_120register_memory_viewIjEEvPKc(45994);
 __ZN12_GLOBAL__N_120register_memory_viewIlEEvPKc();
 __ZN12_GLOBAL__N_120register_memory_viewImEEvPKc();
 __ZN12_GLOBAL__N_120register_memory_viewIaEEvPKc(46032);
 __ZN12_GLOBAL__N_120register_memory_viewIhEEvPKc(46064);
 __ZN12_GLOBAL__N_120register_memory_viewIsEEvPKc(46097);
 __ZN12_GLOBAL__N_120register_memory_viewItEEvPKc(46130);
 __ZN12_GLOBAL__N_120register_memory_viewIiEEvPKc(46164);
 __ZN12_GLOBAL__N_120register_memory_viewIjEEvPKc(46197);
 __ZN12_GLOBAL__N_120register_memory_viewIfEEvPKc();
 __ZN12_GLOBAL__N_120register_memory_viewIdEEvPKc();
 __ZN12_GLOBAL__N_120register_memory_viewIeEEvPKc();
 return;
}

function __ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i1, i7, i8, i3, i2, i9, i10, i4) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 HEAP32[i8 >> 2] = i1;
 HEAP32[i9 >> 2] = i3;
 i6 = i2;
 if (i4 & 2) if ((i6 - i3 | 0) < 3) i1 = 1; else {
  HEAP32[i9 >> 2] = i3 + 1;
  HEAP8[i3 >> 0] = -17;
  i5 = HEAP32[i9 >> 2] | 0;
  HEAP32[i9 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -69;
  i5 = HEAP32[i9 >> 2] | 0;
  HEAP32[i9 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -65;
  i5 = 4;
 } else i5 = 4;
 L4 : do if ((i5 | 0) == 4) {
  i1 = HEAP32[i8 >> 2] | 0;
  while (1) {
   if (i1 >>> 0 >= i7 >>> 0) {
    i1 = 0;
    break L4;
   }
   i3 = HEAP32[i1 >> 2] | 0;
   if (i3 >>> 0 > i10 >>> 0 | (i3 & -2048 | 0) == 55296) {
    i1 = 2;
    break L4;
   }
   do if (i3 >>> 0 >= 128) {
    if (i3 >>> 0 < 2048) {
     i1 = HEAP32[i9 >> 2] | 0;
     if ((i6 - i1 | 0) < 2) {
      i1 = 1;
      break L4;
     }
     HEAP32[i9 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3 >>> 6 | 192;
     i5 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 & 63 | 128;
     break;
    }
    i1 = HEAP32[i9 >> 2] | 0;
    i2 = i6 - i1 | 0;
    if (i3 >>> 0 < 65536) {
     if ((i2 | 0) < 3) {
      i1 = 1;
      break L4;
     }
     HEAP32[i9 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3 >>> 12 | 224;
     i5 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 >>> 6 & 63 | 128;
     i5 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 & 63 | 128;
     break;
    } else {
     if ((i2 | 0) < 4) {
      i1 = 1;
      break L4;
     }
     HEAP32[i9 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3 >>> 18 | 240;
     i5 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 >>> 12 & 63 | 128;
     i5 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 >>> 6 & 63 | 128;
     i5 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 & 63 | 128;
     break;
    }
   } else {
    i1 = HEAP32[i9 >> 2] | 0;
    if ((i6 - i1 | 0) < 1) {
     i1 = 1;
     break L4;
    }
    HEAP32[i9 >> 2] = i1 + 1;
    HEAP8[i1 >> 0] = i3;
   } while (0);
   i1 = (HEAP32[i8 >> 2] | 0) + 4 | 0;
   HEAP32[i8 >> 2] = i1;
  }
 } while (0);
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i7 = i11 + 40 | 0;
 i8 = i11 + 12 | 0;
 i9 = i11 + 24 | 0;
 i10 = i11;
 L1 : do if ((i2 - i1 | 0) > 3 ? (HEAP8[i1 >> 0] | 0) == 68 : 0) {
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 84:
  case 116:
   break;
  default:
   break L1;
  }
  i12 = i1 + 2 | 0;
  i5 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0;
  if ((!((i5 | 0) == (i12 | 0) | (i5 | 0) == (i2 | 0)) ? (HEAP8[i5 >> 0] | 0) == 69 : 0) ? (i6 = i3 + 4 | 0, i4 = HEAP32[i6 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i4 | 0)) : 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i10, i4 + -24 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i10, 0, 51842) | 0;
   HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i10 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9, 50524) | 0;
   HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
   HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i9 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i7, i8);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i6 >> 2] | 0) + -24 | 0, i7);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   i1 = i5 + 1 | 0;
  }
 } while (0);
 STACKTOP = i11;
 return i1 | 0;
}

function _decompress_data(i16, i17) {
 i16 = i16 | 0;
 i17 = i17 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i19 = HEAP32[i16 + 428 >> 2] | 0;
 i20 = i16 + 320 | 0;
 i21 = (HEAP32[i20 >> 2] | 0) + -1 | 0;
 i4 = i16 + 144 | 0;
 i5 = i16 + 152 | 0;
 i6 = i16 + 436 | 0;
 i1 = i16 + 148 | 0;
 i18 = i16 + 156 | 0;
 while (1) {
  i2 = HEAP32[i4 >> 2] | 0;
  i3 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) >= (i3 | 0)) {
   if ((i2 | 0) != (i3 | 0)) {
    i7 = 6;
    break;
   }
   if ((HEAP32[i1 >> 2] | 0) >>> 0 > (HEAP32[i18 >> 2] | 0) >>> 0) {
    i7 = 6;
    break;
   }
  }
  if (!(FUNCTION_TABLE_ii[HEAP32[HEAP32[i6 >> 2] >> 2] & 127](i16) | 0)) {
   i1 = 0;
   break;
  }
 }
 if ((i7 | 0) == 6) {
  i12 = i16 + 36 | 0;
  i13 = i16 + 4 | 0;
  i14 = i16 + 448 | 0;
  i10 = HEAP32[i16 + 216 >> 2] | 0;
  i11 = 0;
  while (1) {
   if ((i11 | 0) >= (HEAP32[i12 >> 2] | 0)) break;
   L12 : do if (HEAP32[i10 + 48 >> 2] | 0) {
    i1 = i10 + 12 | 0;
    i15 = HEAP32[i1 >> 2] | 0;
    i9 = Math_imul(i15, HEAP32[i18 >> 2] | 0) | 0;
    i15 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 32 >> 2] & 31](i16, HEAP32[i19 + 72 + (i11 << 2) >> 2] | 0, i9, i15, 0) | 0;
    if ((HEAP32[i18 >> 2] | 0) >>> 0 < i21 >>> 0) i5 = HEAP32[i1 >> 2] | 0; else {
     i9 = HEAP32[i1 >> 2] | 0;
     i5 = ((HEAP32[i10 + 32 >> 2] | 0) >>> 0) % (i9 >>> 0) | 0;
     i5 = (i5 | 0) == 0 ? i9 : i5;
    }
    i7 = HEAP32[(HEAP32[i14 >> 2] | 0) + 4 + (i11 << 2) >> 2] | 0;
    i8 = i10 + 28 | 0;
    i9 = i10 + 36 | 0;
    i2 = HEAP32[i17 + (i11 << 2) >> 2] | 0;
    i6 = 0;
    while (1) {
     if ((i6 | 0) >= (i5 | 0)) break L12;
     i1 = 0;
     i3 = HEAP32[i15 + (i6 << 2) >> 2] | 0;
     i4 = 0;
     while (1) {
      if (i4 >>> 0 >= (HEAP32[i8 >> 2] | 0) >>> 0) break;
      FUNCTION_TABLE_viiiii[i7 & 31](i16, i10, i3, i2, i1);
      i1 = (HEAP32[i9 >> 2] | 0) + i1 | 0;
      i3 = i3 + 128 | 0;
      i4 = i4 + 1 | 0;
     }
     i2 = i2 + (HEAP32[i9 >> 2] << 2) | 0;
     i6 = i6 + 1 | 0;
    }
   } while (0);
   i10 = i10 + 84 | 0;
   i11 = i11 + 1 | 0;
  }
  i1 = (HEAP32[i18 >> 2] | 0) + 1 | 0;
  HEAP32[i18 >> 2] = i1;
  i1 = i1 >>> 0 < (HEAP32[i20 >> 2] | 0) >>> 0 ? 3 : 4;
 }
 return i1 | 0;
}

function __ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_mmNS_12codecvt_modeE(i10, i11, i12, i13, i1) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = i11;
 if ((((i1 & 4 | 0) != 0 ? (i9 - i10 | 0) > 2 : 0) ? (HEAP8[i10 >> 0] | 0) == -17 : 0) ? (HEAP8[i10 + 1 >> 0] | 0) == -69 : 0) i1 = (HEAP8[i10 + 2 >> 0] | 0) == -65 ? i10 + 3 | 0 : i10; else i1 = i10;
 i8 = 0;
 L7 : while (1) {
  if (!(i8 >>> 0 < i12 >>> 0 & i1 >>> 0 < i11 >>> 0)) break;
  i5 = HEAP8[i1 >> 0] | 0;
  i7 = i5 & 255;
  do if (i5 << 24 >> 24 <= -1) {
   if ((i5 & 255) < 194) break L7;
   if ((i5 & 255) < 224) {
    if ((i9 - i1 | 0) < 2) break L7;
    i2 = HEAPU8[i1 + 1 >> 0] | 0;
    if ((i2 & 192 | 0) != 128) break L7;
    if ((i2 & 63 | i7 << 6 & 1984) >>> 0 > i13 >>> 0) break L7;
    i1 = i1 + 2 | 0;
    break;
   }
   if ((i5 & 255) < 240) {
    if ((i9 - i1 | 0) < 3) break L7;
    i3 = HEAP8[i1 + 1 >> 0] | 0;
    i2 = HEAP8[i1 + 2 >> 0] | 0;
    switch (i5 << 24 >> 24) {
    case -32:
     {
      if ((i3 & -32) << 24 >> 24 != -96) break L7;
      break;
     }
    case -19:
     {
      if ((i3 & -32) << 24 >> 24 != -128) break L7;
      break;
     }
    default:
     if ((i3 & -64) << 24 >> 24 != -128) break L7;
    }
    i2 = i2 & 255;
    if ((i2 & 192 | 0) != 128) break L7;
    if (((i3 & 63) << 6 | i7 << 12 & 61440 | i2 & 63) >>> 0 > i13 >>> 0) break L7; else {
     i1 = i1 + 3 | 0;
     break;
    }
   }
   if ((i5 & 255) >= 245) break L7;
   if ((i9 - i1 | 0) < 4) break L7;
   i6 = HEAP8[i1 + 1 >> 0] | 0;
   i2 = HEAP8[i1 + 2 >> 0] | 0;
   i4 = HEAP8[i1 + 3 >> 0] | 0;
   switch (i5 << 24 >> 24) {
   case -16:
    {
     if ((i6 + 112 & 255) >= 48) break L7;
     break;
    }
   case -12:
    {
     if ((i6 & -16) << 24 >> 24 != -128) break L7;
     break;
    }
   default:
    if ((i6 & -64) << 24 >> 24 != -128) break L7;
   }
   i3 = i2 & 255;
   if ((i3 & 192 | 0) != 128) break L7;
   i2 = i4 & 255;
   if ((i2 & 192 | 0) != 128) break L7;
   if (((i6 & 63) << 12 | i7 << 18 & 1835008 | i3 << 6 & 4032 | i2 & 63) >>> 0 > i13 >>> 0) break L7; else i1 = i1 + 4 | 0;
  } else {
   if (i7 >>> 0 > i13 >>> 0) break L7;
   i1 = i1 + 1 | 0;
  } while (0);
  i8 = i8 + 1 | 0;
 }
 return i1 - i10 | 0;
}

function __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i6;
 if ((HEAP32[i1 + 16 >> 2] | 0) >>> 0 <= i2 >>> 0) {
  i4 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32600) | 0, 32447) | 0, 33655) | 0, 218) | 0, 33662) | 0, 20803) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58792) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 i4 = HEAP32[i1 + 20 >> 2] | 0;
 if (i4 >>> 0 > i3 >>> 0) {
  i7 = (Math_imul(i4, i2) | 0) + i3 | 0;
  STACKTOP = i6;
  return (HEAP32[i1 + 4 >> 2] | 0) + (i7 << 5) | 0;
 } else {
  i7 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32744) | 0, 32447) | 0, 33655) | 0, 219) | 0, 33662) | 0, 20823) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58792) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 return 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEmmPKcm(i11, i8) {
 i11 = i11 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i12 = i14;
 i13 = i11 + 11 | 0;
 i1 = HEAP8[i13 >> 0] | 0;
 i2 = i1 << 24 >> 24 < 0;
 if (i2) {
  i10 = HEAP32[i11 + 4 >> 2] | 0;
  i6 = i10 >>> 0 < 11 ? i10 : 11;
  i1 = (HEAP32[i11 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i10 = i1 & 255;
  i6 = i10 >>> 0 < 11 ? i10 : 11;
  i1 = 10;
 }
 if ((i6 - i10 + i1 | 0) >>> 0 < i8 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc(i11, i1, i8 - i6 + i10 - i1 | 0, i10, 0, i6, i8, 51945); else {
  if (i2) i9 = HEAP32[i11 >> 2] | 0; else i9 = i11;
  do if ((i6 | 0) != (i8 | 0)) {
   i5 = i10 - i6 | 0;
   if (!i5) {
    i2 = i6;
    i4 = 0;
    i3 = 51945;
    i1 = i8;
    i7 = 17;
   } else {
    if (i6 >>> 0 > i8 >>> 0) {
     __ZNSt3__211char_traitsIcE4moveEPcPKcm(i9, 51945, i8) | 0;
     __ZNSt3__211char_traitsIcE4moveEPcPKcm(i9 + i8 | 0, i9 + i6 | 0, i5) | 0;
     i2 = i6;
     i1 = i8;
     break;
    }
    do if (i9 >>> 0 < 51945 >>> 0 & (i9 + i10 | 0) >>> 0 > 51945 >>> 0) if ((i9 + i6 | 0) >>> 0 > 51945 >>> 0) {
     __ZNSt3__211char_traitsIcE4moveEPcPKcm(i9, 51945, i6) | 0;
     i2 = 0;
     i4 = i6;
     i3 = 51945 + i8 | 0;
     i1 = i8 - i6 | 0;
     break;
    } else {
     i2 = i6;
     i4 = 0;
     i3 = 51945 + (i8 - i6) | 0;
     i1 = i8;
     break;
    } else {
     i2 = i6;
     i4 = 0;
     i3 = 51945;
     i1 = i8;
    } while (0);
    i7 = i9 + i4 | 0;
    __ZNSt3__211char_traitsIcE4moveEPcPKcm(i7 + i1 | 0, i7 + i2 | 0, i5) | 0;
    i7 = 17;
   }
  } else {
   i2 = i8;
   i4 = 0;
   i3 = 51945;
   i1 = i8;
   i7 = 17;
  } while (0);
  if ((i7 | 0) == 17) __ZNSt3__211char_traitsIcE4moveEPcPKcm(i9 + i4 | 0, i3, i1) | 0;
  i1 = i1 - i2 + i10 | 0;
  if ((HEAP8[i13 >> 0] | 0) < 0) HEAP32[i11 + 4 >> 2] = i1; else HEAP8[i13 >> 0] = i1;
  HEAP8[i12 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i9 + i1 | 0, i12);
 }
 STACKTOP = i14;
 return;
}

function _arParamChangeSize(i3, i1, i2, i5) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 var d4 = 0.0, d6 = 0.0, i7 = 0;
 d6 = +(i1 | 0) / +(HEAP32[i3 >> 2] | 0);
 d4 = +(i2 | 0) / +(HEAP32[i3 + 4 >> 2] | 0);
 HEAP32[i5 >> 2] = i1;
 HEAP32[i5 + 4 >> 2] = i2;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 4) break;
  HEAPF64[i5 + 8 + (i1 << 3) >> 3] = d6 * +HEAPF64[i3 + 8 + (i1 << 3) >> 3];
  HEAPF64[i5 + 40 + (i1 << 3) >> 3] = d4 * +HEAPF64[i3 + 40 + (i1 << 3) >> 3];
  HEAPF64[i5 + 72 + (i1 << 3) >> 3] = +HEAPF64[i3 + 72 + (i1 << 3) >> 3];
  i1 = i1 + 1 | 0;
 }
 i1 = HEAP32[i3 + 176 >> 2] | 0;
 switch (i1 | 0) {
 case 4:
  {
   HEAPF64[i5 + 104 >> 3] = +HEAPF64[i3 + 104 >> 3];
   HEAPF64[i5 + 112 >> 3] = +HEAPF64[i3 + 112 >> 3];
   HEAPF64[i5 + 120 >> 3] = +HEAPF64[i3 + 120 >> 3];
   HEAPF64[i5 + 128 >> 3] = +HEAPF64[i3 + 128 >> 3];
   HEAPF64[i5 + 136 >> 3] = d6 * +HEAPF64[i3 + 136 >> 3];
   HEAPF64[i5 + 144 >> 3] = d4 * +HEAPF64[i3 + 144 >> 3];
   HEAPF64[i5 + 152 >> 3] = d6 * +HEAPF64[i3 + 152 >> 3];
   HEAPF64[i5 + 160 >> 3] = d4 * +HEAPF64[i3 + 160 >> 3];
   HEAPF64[i5 + 168 >> 3] = +HEAPF64[i3 + 168 >> 3];
   i7 = 9;
   break;
  }
 case 3:
  {
   HEAPF64[i5 + 104 >> 3] = d6 * +HEAPF64[i3 + 104 >> 3];
   HEAPF64[i5 + 112 >> 3] = d4 * +HEAPF64[i3 + 112 >> 3];
   HEAPF64[i5 + 120 >> 3] = +HEAPF64[i3 + 120 >> 3];
   HEAPF64[i5 + 128 >> 3] = +HEAPF64[i3 + 128 >> 3];
   HEAPF64[i5 + 136 >> 3] = +HEAPF64[i3 + 136 >> 3] / (d6 * d4);
   HEAPF64[i5 + 144 >> 3] = +HEAPF64[i3 + 144 >> 3] / (d4 * (d6 * d6 * d4));
   i7 = 9;
   break;
  }
 case 2:
  {
   HEAPF64[i5 + 104 >> 3] = d6 * +HEAPF64[i3 + 104 >> 3];
   HEAPF64[i5 + 112 >> 3] = d4 * +HEAPF64[i3 + 112 >> 3];
   HEAPF64[i5 + 120 >> 3] = +HEAPF64[i3 + 120 >> 3];
   HEAPF64[i5 + 128 >> 3] = +HEAPF64[i3 + 128 >> 3] / (d6 * d4);
   HEAPF64[i5 + 136 >> 3] = +HEAPF64[i3 + 136 >> 3] / (d4 * (d6 * d6 * d4));
   i7 = 9;
   break;
  }
 case 1:
  {
   HEAPF64[i5 + 104 >> 3] = d6 * +HEAPF64[i3 + 104 >> 3];
   HEAPF64[i5 + 112 >> 3] = d4 * +HEAPF64[i3 + 112 >> 3];
   HEAPF64[i5 + 120 >> 3] = +HEAPF64[i3 + 120 >> 3];
   HEAPF64[i5 + 128 >> 3] = +HEAPF64[i3 + 128 >> 3] / (d6 * d4);
   i7 = 9;
   break;
  }
 default:
  i1 = -1;
 }
 if ((i7 | 0) == 9) {
  HEAP32[i5 + 176 >> 2] = i1;
  i1 = 0;
 }
 return i1 | 0;
}

function _pop_arg_731(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, d6 = 0.0;
 L1 : do if (i2 >>> 0 <= 20) do switch (i2 | 0) {
 case 9:
  {
   i2 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i2 >> 2] | 0;
   HEAP32[i3 >> 2] = i2 + 4;
   HEAP32[i1 >> 2] = i4;
   break L1;
  }
 case 10:
  {
   i4 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i2 = HEAP32[i4 >> 2] | 0;
   HEAP32[i3 >> 2] = i4 + 4;
   i4 = i1;
   HEAP32[i4 >> 2] = i2;
   HEAP32[i4 + 4 >> 2] = ((i2 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 11:
  {
   i4 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i2 = HEAP32[i4 >> 2] | 0;
   HEAP32[i3 >> 2] = i4 + 4;
   i4 = i1;
   HEAP32[i4 >> 2] = i2;
   HEAP32[i4 + 4 >> 2] = 0;
   break L1;
  }
 case 12:
  {
   i4 = (HEAP32[i3 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   i2 = i4;
   i5 = HEAP32[i2 >> 2] | 0;
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   HEAP32[i3 >> 2] = i4 + 8;
   i4 = i1;
   HEAP32[i4 >> 2] = i5;
   HEAP32[i4 + 4 >> 2] = i2;
   break L1;
  }
 case 13:
  {
   i5 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i3 >> 2] = i5 + 4;
   i4 = (i4 & 65535) << 16 >> 16;
   i5 = i1;
   HEAP32[i5 >> 2] = i4;
   HEAP32[i5 + 4 >> 2] = ((i4 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 14:
  {
   i5 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i3 >> 2] = i5 + 4;
   i5 = i1;
   HEAP32[i5 >> 2] = i4 & 65535;
   HEAP32[i5 + 4 >> 2] = 0;
   break L1;
  }
 case 15:
  {
   i5 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i3 >> 2] = i5 + 4;
   i4 = (i4 & 255) << 24 >> 24;
   i5 = i1;
   HEAP32[i5 >> 2] = i4;
   HEAP32[i5 + 4 >> 2] = ((i4 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 16:
  {
   i5 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i3 >> 2] = i5 + 4;
   i5 = i1;
   HEAP32[i5 >> 2] = i4 & 255;
   HEAP32[i5 + 4 >> 2] = 0;
   break L1;
  }
 case 17:
  {
   i5 = (HEAP32[i3 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   d6 = +HEAPF64[i5 >> 3];
   HEAP32[i3 >> 2] = i5 + 8;
   HEAPF64[i1 >> 3] = d6;
   break L1;
  }
 case 18:
  {
   FUNCTION_TABLE_vii[i4 & 63](i1, i3);
   break L1;
  }
 default:
  break L1;
 } while (0); while (0);
 return;
}

function __ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5;
 if (!(d3 >= 0.0)) {
  i6 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32687) | 0, 32447) | 0, 33655) | 0, 232) | 0, 33662) | 0, 32721) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58792) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 if (+(HEAP32[i1 + 20 >> 2] | 0) > d3) {
  d3 = +Math_pow(+(+HEAPF32[i1 + 24 >> 2]), +d3) * +(1 << i2 | 0);
  STACKTOP = i5;
  return +d3;
 } else {
  i7 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 32744) | 0, 32447) | 0, 33655) | 0, 233) | 0, 33662) | 0, 32795) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58792) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 return +(0.0);
}

function __ZN10__cxxabiv112_GLOBAL__N_137parse_sizeof_function_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i8 = i12 + 40 | 0;
 i9 = i12 + 12 | 0;
 i10 = i12 + 24 | 0;
 i11 = i12;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 90 : 0) ? (i3 = i1 + 2 | 0, (HEAP8[i3 >> 0] | 0) == 102) : 0) ? (i6 = __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_(i3, i2, i4) | 0, (i6 | 0) != (i3 | 0)) : 0) ? (i7 = i4 + 4 | 0, i5 = HEAP32[i7 >> 2] | 0, (HEAP32[i4 >> 2] | 0) != (i5 | 0)) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i11, i5 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i11, 0, 50737) | 0;
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 50524) | 0;
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i8, i9);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i7 >> 2] | 0) + -24 | 0, i8);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
  i1 = i6;
 }
 STACKTOP = i12;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE23__append_forward_unsafeIPKcEERS7_T_SC_(i11, i1, i8) {
 i11 = i11 | 0;
 i1 = i1 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i1;
 i10 = i13;
 i12 = i11 + 11 | 0;
 i4 = HEAP8[i12 >> 0] | 0;
 i2 = i4 << 24 >> 24 < 0;
 if (i2) {
  i9 = HEAP32[i11 + 4 >> 2] | 0;
  i5 = (HEAP32[i11 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i9 = i4 & 255;
  i5 = 10;
 }
 i7 = i8 - i6 | 0;
 do if (i7 | 0) {
  if (i2) {
   i3 = HEAP32[i11 >> 2] | 0;
   i2 = HEAP32[i11 + 4 >> 2] | 0;
  } else {
   i3 = i11;
   i2 = i4 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_(i1, i3, i3 + i2 | 0) | 0) {
   HEAP32[i10 >> 2] = 0;
   HEAP32[i10 + 4 >> 2] = 0;
   HEAP32[i10 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i10, i1, i8);
   i12 = HEAP8[i10 + 11 >> 0] | 0;
   i9 = i12 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i11, i9 ? HEAP32[i10 >> 2] | 0 : i10, i9 ? HEAP32[i10 + 4 >> 2] | 0 : i12 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   break;
  }
  if ((i5 - i9 | 0) >>> 0 < i7 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEmmmmmm(i11, i5, i9 + i7 - i5 | 0, i9, i9, 0);
  if ((HEAP8[i12 >> 0] | 0) < 0) i4 = HEAP32[i11 >> 2] | 0; else i4 = i11;
  i3 = i8 + (i9 - i6) | 0;
  i2 = i4 + i9 | 0;
  while (1) {
   if ((i1 | 0) == (i8 | 0)) break;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i1);
   i2 = i2 + 1 | 0;
   i1 = i1 + 1 | 0;
  }
  HEAP8[i10 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i4 + i3 | 0, i10);
  i1 = i9 + i7 | 0;
  if ((HEAP8[i12 >> 0] | 0) < 0) {
   HEAP32[i11 + 4 >> 2] = i1;
   break;
  } else {
   HEAP8[i12 >> 0] = i1;
   break;
  }
 } while (0);
 STACKTOP = i13;
 return;
}

function _per_scan_setup_34(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i6 = i5 + 328 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 L1 : do if ((i1 | 0) == 1) {
  i6 = HEAP32[i5 + 332 >> 2] | 0;
  HEAP32[i5 + 348 >> 2] = HEAP32[i6 + 28 >> 2];
  i4 = HEAP32[i6 + 32 >> 2] | 0;
  HEAP32[i5 + 352 >> 2] = i4;
  HEAP32[i6 + 52 >> 2] = 1;
  HEAP32[i6 + 56 >> 2] = 1;
  HEAP32[i6 + 60 >> 2] = 1;
  HEAP32[i6 + 64 >> 2] = HEAP32[i6 + 36 >> 2];
  HEAP32[i6 + 68 >> 2] = 1;
  i3 = HEAP32[i6 + 12 >> 2] | 0;
  i4 = (i4 >>> 0) % (i3 >>> 0) | 0;
  HEAP32[i6 + 72 >> 2] = (i4 | 0) == 0 ? i3 : i4;
  HEAP32[i5 + 356 >> 2] = 1;
  HEAP32[i5 + 360 >> 2] = 0;
 } else {
  if ((i1 + -1 | 0) >>> 0 > 3) {
   i3 = HEAP32[i5 >> 2] | 0;
   HEAP32[i3 + 20 >> 2] = 26;
   HEAP32[i3 + 24 >> 2] = i1;
   HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] = 4;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i5 >> 2] >> 2] & 255](i5);
   i3 = i5;
  } else i3 = i5;
  i4 = _jdiv_round_up(HEAP32[i5 + 28 >> 2] | 0, HEAP32[i5 + 308 >> 2] << 3) | 0;
  HEAP32[i5 + 348 >> 2] = i4;
  i4 = _jdiv_round_up(HEAP32[i5 + 32 >> 2] | 0, HEAP32[i5 + 312 >> 2] << 3) | 0;
  HEAP32[i5 + 352 >> 2] = i4;
  i4 = i5 + 356 | 0;
  HEAP32[i4 >> 2] = 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (HEAP32[i6 >> 2] | 0)) break L1;
   i7 = HEAP32[i5 + 332 + (i2 << 2) >> 2] | 0;
   i10 = HEAP32[i7 + 8 >> 2] | 0;
   HEAP32[i7 + 52 >> 2] = i10;
   i9 = HEAP32[i7 + 12 >> 2] | 0;
   HEAP32[i7 + 56 >> 2] = i9;
   i1 = Math_imul(i9, i10) | 0;
   HEAP32[i7 + 60 >> 2] = i1;
   i8 = Math_imul(HEAP32[i7 + 36 >> 2] | 0, i10) | 0;
   HEAP32[i7 + 64 >> 2] = i8;
   i8 = ((HEAP32[i7 + 28 >> 2] | 0) >>> 0) % (i10 >>> 0) | 0;
   HEAP32[i7 + 68 >> 2] = (i8 | 0) == 0 ? i10 : i8;
   i8 = ((HEAP32[i7 + 32 >> 2] | 0) >>> 0) % (i9 >>> 0) | 0;
   HEAP32[i7 + 72 >> 2] = (i8 | 0) == 0 ? i9 : i8;
   if (((HEAP32[i4 >> 2] | 0) + i1 | 0) > 10) {
    i10 = HEAP32[i5 >> 2] | 0;
    HEAP32[i10 + 20 >> 2] = 13;
    FUNCTION_TABLE_vi[HEAP32[i10 >> 2] & 255](i3);
   }
   while (1) {
    if ((i1 | 0) <= 0) break;
    i10 = HEAP32[i4 >> 2] | 0;
    HEAP32[i4 >> 2] = i10 + 1;
    HEAP32[i5 + 360 + (i10 << 2) >> 2] = i2;
    i1 = i1 + -1 | 0;
   }
   i2 = i2 + 1 | 0;
  }
 } while (0);
 return;
}

function __ZNK6vision5Timer19duration_in_secondsEv(i1) {
 i1 = i1 | 0;
 var d2 = 0.0, i3 = 0, d4 = 0.0, i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i5;
 d4 = +HEAPF64[i1 >> 3];
 if (!(d4 >= 0.0)) {
  i6 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 33507) | 0, 33546) | 0, 33655) | 0, 80) | 0, 33662) | 0, 33665) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 d2 = +HEAPF64[i1 + 8 >> 3];
 if (!(d2 >= 0.0)) {
  i7 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 33692) | 0, 33546) | 0, 33655) | 0, 81) | 0, 33662) | 0, 33730) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 } else {
  STACKTOP = i5;
  return +(d2 - d4);
 }
 return +(0.0);
}

function _qsort(i2, i1, i7, i8) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 i9 = i12;
 i10 = i12 + 192 | 0;
 i5 = Math_imul(i7, i1) | 0;
 i6 = i10;
 HEAP32[i6 >> 2] = 1;
 HEAP32[i6 + 4 >> 2] = 0;
 L1 : do if (i5 | 0) {
  i6 = 0 - i7 | 0;
  HEAP32[i9 + 4 >> 2] = i7;
  HEAP32[i9 >> 2] = i7;
  i3 = 2;
  i1 = i7;
  i4 = i7;
  while (1) {
   i1 = i1 + i7 + i4 | 0;
   HEAP32[i9 + (i3 << 2) >> 2] = i1;
   if (i1 >>> 0 < i5 >>> 0) {
    i13 = i4;
    i3 = i3 + 1 | 0;
    i4 = i1;
    i1 = i13;
   } else break;
  }
  i4 = i2 + i5 + i6 | 0;
  if (i4 >>> 0 > i2 >>> 0) {
   i5 = i4;
   i3 = 1;
   i1 = 1;
   do {
    do if ((i1 & 3 | 0) != 3) {
     i1 = i3 + -1 | 0;
     if ((HEAP32[i9 + (i1 << 2) >> 2] | 0) >>> 0 < (i5 - i2 | 0) >>> 0) _sift(i2, i7, i8, i3, i9); else _trinkle(i2, i7, i8, i10, i3, 0, i9);
     if ((i3 | 0) == 1) {
      _shl(i10, 1);
      i3 = 0;
      break;
     } else {
      _shl(i10, i1);
      i3 = 1;
      break;
     }
    } else {
     _sift(i2, i7, i8, i3, i9);
     _shr(i10, 2);
     i3 = i3 + 2 | 0;
    } while (0);
    i1 = HEAP32[i10 >> 2] | 1;
    HEAP32[i10 >> 2] = i1;
    i2 = i2 + i7 | 0;
   } while (i2 >>> 0 < i4 >>> 0);
  } else {
   i3 = 1;
   i1 = 1;
  }
  _trinkle(i2, i7, i8, i10, i3, 0, i9);
  i4 = i10 + 4 | 0;
  while (1) {
   if ((i3 | 0) == 1 & (i1 | 0) == 1) if (!(HEAP32[i4 >> 2] | 0)) break L1; else i11 = 19; else if ((i3 | 0) < 2) i11 = 19; else {
    _shl(i10, 2);
    i13 = i3 + -2 | 0;
    HEAP32[i10 >> 2] = HEAP32[i10 >> 2] ^ 7;
    _shr(i10, 1);
    _trinkle(i2 + (0 - (HEAP32[i9 + (i13 << 2) >> 2] | 0)) + i6 | 0, i7, i8, i10, i3 + -1 | 0, 1, i9);
    _shl(i10, 1);
    i1 = HEAP32[i10 >> 2] | 1;
    HEAP32[i10 >> 2] = i1;
    i2 = i2 + i6 | 0;
    _trinkle(i2, i7, i8, i10, i13, 1, i9);
    i3 = i13;
   }
   if ((i11 | 0) == 19) {
    i11 = 0;
    i1 = _pntz(i10) | 0;
    _shr(i10, i1);
    i2 = i2 + i6 | 0;
    i3 = i1 + i3 | 0;
    i1 = HEAP32[i10 >> 2] | 0;
   }
  }
 } while (0);
 STACKTOP = i12;
 return;
}

function _get_cpara(i2, i3, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i5 = _arMatrixAlloc(8, 8) | 0;
 i6 = _arMatrixAlloc(8, 1) | 0;
 i7 = _arMatrixAlloc(8, 1) | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 4) break;
  i13 = i2 + (i1 << 4) | 0;
  i8 = HEAP32[i5 >> 2] | 0;
  i9 = i1 << 4;
  HEAPF64[i8 + (i9 << 3) >> 3] = +HEAPF64[i13 >> 3];
  i12 = i2 + (i1 << 4) + 8 | 0;
  HEAPF64[i8 + ((i9 | 1) << 3) >> 3] = +HEAPF64[i12 >> 3];
  HEAPF64[i8 + ((i9 | 2) << 3) >> 3] = 1.0;
  HEAPF64[i8 + ((i9 | 3) << 3) >> 3] = 0.0;
  HEAPF64[i8 + ((i9 | 4) << 3) >> 3] = 0.0;
  HEAPF64[i8 + ((i9 | 5) << 3) >> 3] = 0.0;
  i11 = i3 + (i1 << 4) | 0;
  HEAPF64[i8 + ((i9 | 6) << 3) >> 3] = -(+HEAPF64[i13 >> 3] * +HEAPF64[i11 >> 3]);
  HEAPF64[i8 + ((i9 | 7) << 3) >> 3] = -(+HEAPF64[i12 >> 3] * +HEAPF64[i11 >> 3]);
  HEAPF64[i8 + ((i9 | 8) << 3) >> 3] = 0.0;
  HEAPF64[i8 + ((i9 | 9) << 3) >> 3] = 0.0;
  HEAPF64[i8 + ((i9 | 10) << 3) >> 3] = 0.0;
  HEAPF64[i8 + ((i9 | 11) << 3) >> 3] = +HEAPF64[i13 >> 3];
  HEAPF64[i8 + ((i9 | 12) << 3) >> 3] = +HEAPF64[i12 >> 3];
  HEAPF64[i8 + ((i9 | 13) << 3) >> 3] = 1.0;
  i10 = i3 + (i1 << 4) + 8 | 0;
  HEAPF64[i8 + ((i9 | 14) << 3) >> 3] = -(+HEAPF64[i13 >> 3] * +HEAPF64[i10 >> 3]);
  HEAPF64[i8 + ((i9 | 15) << 3) >> 3] = -(+HEAPF64[i12 >> 3] * +HEAPF64[i10 >> 3]);
  i9 = HEAP32[i6 >> 2] | 0;
  i8 = i1 << 1;
  HEAPF64[i9 + (i8 << 3) >> 3] = +HEAPF64[i11 >> 3];
  HEAPF64[i9 + ((i8 | 1) << 3) >> 3] = +HEAPF64[i10 >> 3];
  i1 = i1 + 1 | 0;
 }
 _arMatrixSelfInv(i5) | 0;
 _arMatrixMul(i7, i5, i6) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 2) break;
  i13 = i1 * 3 | 0;
  HEAPF64[i4 + (i1 * 24 | 0) >> 3] = +HEAPF64[i2 + (i13 << 3) >> 3];
  HEAPF64[i4 + (i1 * 24 | 0) + 8 >> 3] = +HEAPF64[i2 + (i13 + 1 << 3) >> 3];
  HEAPF64[i4 + (i1 * 24 | 0) + 16 >> 3] = +HEAPF64[i2 + (i13 + 2 << 3) >> 3];
  i1 = i1 + 1 | 0;
 }
 HEAPF64[i4 + 48 >> 3] = +HEAPF64[i2 + 48 >> 3];
 HEAPF64[i4 + 56 >> 3] = +HEAPF64[i2 + 56 >> 3];
 HEAPF64[i4 + 64 >> 3] = 1.0;
 _arMatrixFree(i5) | 0;
 _arMatrixFree(i6) | 0;
 _arMatrixFree(i7) | 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_expr_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i7 = i11 + 40 | 0;
 i8 = i11 + 12 | 0;
 i9 = i11 + 24 | 0;
 i10 = i11;
 if (((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 122 : 0) ? (i12 = i1 + 2 | 0, i5 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0, (i5 | 0) != (i12 | 0)) : 0) ? (i6 = i3 + 4 | 0, i4 = HEAP32[i6 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i4 | 0)) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i10, i4 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i10, 0, 50751) | 0;
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9, 50524) | 0;
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i9 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i7, i8);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i6 >> 2] | 0) + -24 | 0, i7);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  i1 = i5;
 }
 STACKTOP = i11;
 return i1 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE8__rehashEm(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = i11 + 4 | 0;
 L1 : do if (i10) {
  if (i10 >>> 0 > 1073741823) {
   i11 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc(i11, 41105);
   HEAP32[i11 >> 2] = 17440;
   ___cxa_throw(i11 | 0, 13288, 107);
  }
  i9 = __Znwm(i10 << 2) | 0;
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = i9;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = i10;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i10 | 0)) break;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i3 = i11 + 8 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i1 | 0) {
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   i8 = i10 + -1 | 0;
   i9 = (i8 & i10 | 0) == 0;
   if (!i9) {
    if (i2 >>> 0 >= i10 >>> 0) i2 = (i2 >>> 0) % (i10 >>> 0) | 0;
   } else i2 = i2 & i8;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i2 << 2) >> 2] = i3;
   while (1) {
    i7 = i1;
    L25 : while (1) {
     while (1) {
      i1 = HEAP32[i7 >> 2] | 0;
      if (!i1) break L1;
      i3 = HEAP32[i1 + 4 >> 2] | 0;
      if (!i9) {
       if (i3 >>> 0 >= i10 >>> 0) i3 = (i3 >>> 0) % (i10 >>> 0) | 0;
      } else i3 = i3 & i8;
      if ((i3 | 0) == (i2 | 0)) break;
      i4 = (HEAP32[i11 >> 2] | 0) + (i3 << 2) | 0;
      if (!(HEAP32[i4 >> 2] | 0)) break L25;
      i5 = i1 + 8 | 0;
      i4 = i1;
      while (1) {
       i6 = HEAP32[i4 >> 2] | 0;
       if (!i6) break;
       if ((HEAP32[i5 >> 2] | 0) == (HEAP32[i6 + 8 >> 2] | 0)) i4 = i6; else break;
      }
      HEAP32[i7 >> 2] = i6;
      HEAP32[i4 >> 2] = HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i3 << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i3 << 2) >> 2] >> 2] = i1;
     }
     i7 = i1;
    }
    HEAP32[i4 >> 2] = i7;
    i2 = i3;
   }
  }
 } else {
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = 0;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = 0;
 } while (0);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE8__rehashEm(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = i11 + 4 | 0;
 L1 : do if (i10) {
  if (i10 >>> 0 > 1073741823) {
   i11 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc(i11, 41105);
   HEAP32[i11 >> 2] = 17440;
   ___cxa_throw(i11 | 0, 13288, 107);
  }
  i9 = __Znwm(i10 << 2) | 0;
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = i9;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = i10;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i10 | 0)) break;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i3 = i11 + 8 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i1 | 0) {
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   i8 = i10 + -1 | 0;
   i9 = (i8 & i10 | 0) == 0;
   if (!i9) {
    if (i2 >>> 0 >= i10 >>> 0) i2 = (i2 >>> 0) % (i10 >>> 0) | 0;
   } else i2 = i2 & i8;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i2 << 2) >> 2] = i3;
   while (1) {
    i7 = i1;
    L25 : while (1) {
     while (1) {
      i1 = HEAP32[i7 >> 2] | 0;
      if (!i1) break L1;
      i3 = HEAP32[i1 + 4 >> 2] | 0;
      if (!i9) {
       if (i3 >>> 0 >= i10 >>> 0) i3 = (i3 >>> 0) % (i10 >>> 0) | 0;
      } else i3 = i3 & i8;
      if ((i3 | 0) == (i2 | 0)) break;
      i4 = (HEAP32[i11 >> 2] | 0) + (i3 << 2) | 0;
      if (!(HEAP32[i4 >> 2] | 0)) break L25;
      i5 = i1 + 8 | 0;
      i4 = i1;
      while (1) {
       i6 = HEAP32[i4 >> 2] | 0;
       if (!i6) break;
       if ((HEAP32[i5 >> 2] | 0) == (HEAP32[i6 + 8 >> 2] | 0)) i4 = i6; else break;
      }
      HEAP32[i7 >> 2] = i6;
      HEAP32[i4 >> 2] = HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i3 << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i3 << 2) >> 2] >> 2] = i1;
     }
     i7 = i1;
    }
    HEAP32[i4 >> 2] = i7;
    i2 = i3;
   }
  }
 } else {
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = 0;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = 0;
 } while (0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_type_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i7 = i11 + 40 | 0;
 i8 = i11 + 12 | 0;
 i9 = i11 + 24 | 0;
 i10 = i11;
 if (((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 116 : 0) ? (i12 = i1 + 2 | 0, i5 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0, (i5 | 0) != (i12 | 0)) : 0) ? (i6 = i3 + 4 | 0, i4 = HEAP32[i6 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i4 | 0)) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i10, i4 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i10, 0, 50751) | 0;
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9, 50524) | 0;
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i9 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i7, i8);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i6 >> 2] | 0) + -24 | 0, i7);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  i1 = i5;
 }
 STACKTOP = i11;
 return i1 | 0;
}

function __ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i7, i9, i12, i13, i14, i2, i3, i4, i5, i8) {
 i7 = i7 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i6 = 0, i10 = 0, i11 = 0;
 i10 = HEAP32[i13 >> 2] | 0;
 i11 = (i10 | 0) == (i12 | 0);
 do if (i11) {
  i1 = (HEAP8[i8 + 24 >> 0] | 0) == i7 << 24 >> 24;
  if (!i1 ? (HEAP8[i8 + 25 >> 0] | 0) != i7 << 24 >> 24 : 0) {
   i6 = 5;
   break;
  }
  HEAP32[i13 >> 2] = i12 + 1;
  HEAP8[i12 >> 0] = i1 ? 43 : 45;
  HEAP32[i14 >> 2] = 0;
  i1 = 0;
 } else i6 = 5; while (0);
 L6 : do if ((i6 | 0) == 5) {
  i6 = HEAP8[i3 + 11 >> 0] | 0;
  if (i7 << 24 >> 24 == i2 << 24 >> 24 ? ((i6 << 24 >> 24 < 0 ? HEAP32[i3 + 4 >> 2] | 0 : i6 & 255) | 0) != 0 : 0) {
   i1 = HEAP32[i5 >> 2] | 0;
   if ((i1 - i4 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i14 >> 2] | 0;
   HEAP32[i5 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i14 >> 2] = 0;
   i1 = 0;
   break;
  }
  i3 = i8 + 26 | 0;
  i2 = 0;
  while (1) {
   i1 = i8 + i2 | 0;
   if ((i2 | 0) == 26) {
    i1 = i3;
    break;
   }
   if ((HEAP8[i1 >> 0] | 0) == i7 << 24 >> 24) break; else i2 = i2 + 1 | 0;
  }
  i1 = i1 - i8 | 0;
  if ((i1 | 0) > 23) i1 = -1; else {
   switch (i9 | 0) {
   case 10:
   case 8:
    {
     if ((i1 | 0) >= (i9 | 0)) {
      i1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if ((i1 | 0) >= 22) {
      if (i11) {
       i1 = -1;
       break L6;
      }
      if ((i10 - i12 | 0) >= 3) {
       i1 = -1;
       break L6;
      }
      if ((HEAP8[i10 + -1 >> 0] | 0) != 48) {
       i1 = -1;
       break L6;
      }
      HEAP32[i14 >> 2] = 0;
      i1 = HEAP8[10736 + i1 >> 0] | 0;
      HEAP32[i13 >> 2] = i10 + 1;
      HEAP8[i10 >> 0] = i1;
      i1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   i1 = HEAP8[10736 + i1 >> 0] | 0;
   HEAP32[i13 >> 2] = i10 + 1;
   HEAP8[i10 >> 0] = i1;
   HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1;
   i1 = 0;
  }
 } while (0);
 return i1 | 0;
}

function __ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i7, i9, i12, i13, i14, i2, i3, i4, i5, i8) {
 i7 = i7 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i6 = 0, i10 = 0, i11 = 0;
 i10 = HEAP32[i13 >> 2] | 0;
 i11 = (i10 | 0) == (i12 | 0);
 do if (i11) {
  i1 = (HEAP32[i8 + 96 >> 2] | 0) == (i7 | 0);
  if (!i1 ? (HEAP32[i8 + 100 >> 2] | 0) != (i7 | 0) : 0) {
   i6 = 5;
   break;
  }
  HEAP32[i13 >> 2] = i12 + 1;
  HEAP8[i12 >> 0] = i1 ? 43 : 45;
  HEAP32[i14 >> 2] = 0;
  i1 = 0;
 } else i6 = 5; while (0);
 L6 : do if ((i6 | 0) == 5) {
  i6 = HEAP8[i3 + 11 >> 0] | 0;
  if ((i7 | 0) == (i2 | 0) ? ((i6 << 24 >> 24 < 0 ? HEAP32[i3 + 4 >> 2] | 0 : i6 & 255) | 0) != 0 : 0) {
   i1 = HEAP32[i5 >> 2] | 0;
   if ((i1 - i4 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i14 >> 2] | 0;
   HEAP32[i5 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i14 >> 2] = 0;
   i1 = 0;
   break;
  }
  i3 = i8 + 104 | 0;
  i2 = 0;
  while (1) {
   i1 = i8 + (i2 << 2) | 0;
   if ((i2 | 0) == 26) {
    i1 = i3;
    break;
   }
   if ((HEAP32[i1 >> 2] | 0) == (i7 | 0)) break; else i2 = i2 + 1 | 0;
  }
  i1 = i1 - i8 | 0;
  i2 = i1 >> 2;
  if ((i1 | 0) > 92) i1 = -1; else {
   switch (i9 | 0) {
   case 10:
   case 8:
    {
     if ((i2 | 0) >= (i9 | 0)) {
      i1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if ((i1 | 0) >= 88) {
      if (i11) {
       i1 = -1;
       break L6;
      }
      if ((i10 - i12 | 0) >= 3) {
       i1 = -1;
       break L6;
      }
      if ((HEAP8[i10 + -1 >> 0] | 0) != 48) {
       i1 = -1;
       break L6;
      }
      HEAP32[i14 >> 2] = 0;
      i1 = HEAP8[10736 + i2 >> 0] | 0;
      HEAP32[i13 >> 2] = i10 + 1;
      HEAP8[i10 >> 0] = i1;
      i1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   i1 = HEAP8[10736 + i2 >> 0] | 0;
   HEAP32[i13 >> 2] = i10 + 1;
   HEAP8[i10 >> 0] = i1;
   HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1;
   i1 = 0;
  }
 } while (0);
 return i1 | 0;
}
function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE8__rehashEm(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = i11 + 4 | 0;
 L1 : do if (i10) {
  if (i10 >>> 0 > 1073741823) {
   i11 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc(i11, 41105);
   HEAP32[i11 >> 2] = 17440;
   ___cxa_throw(i11 | 0, 13288, 107);
  }
  i9 = __Znwm(i10 << 2) | 0;
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = i9;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = i10;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i10 | 0)) break;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i3 = i11 + 8 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i1 | 0) {
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   i8 = i10 + -1 | 0;
   i9 = (i8 & i10 | 0) == 0;
   if (!i9) {
    if (i2 >>> 0 >= i10 >>> 0) i2 = (i2 >>> 0) % (i10 >>> 0) | 0;
   } else i2 = i2 & i8;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i2 << 2) >> 2] = i3;
   while (1) {
    i7 = i1;
    L25 : while (1) {
     while (1) {
      i1 = HEAP32[i7 >> 2] | 0;
      if (!i1) break L1;
      i3 = HEAP32[i1 + 4 >> 2] | 0;
      if (!i9) {
       if (i3 >>> 0 >= i10 >>> 0) i3 = (i3 >>> 0) % (i10 >>> 0) | 0;
      } else i3 = i3 & i8;
      if ((i3 | 0) == (i2 | 0)) break;
      i4 = (HEAP32[i11 >> 2] | 0) + (i3 << 2) | 0;
      if (!(HEAP32[i4 >> 2] | 0)) break L25;
      i5 = i1 + 8 | 0;
      i4 = i1;
      while (1) {
       i6 = HEAP32[i4 >> 2] | 0;
       if (!i6) break;
       if ((HEAP32[i5 >> 2] | 0) == (HEAP32[i6 + 8 >> 2] | 0)) i4 = i6; else break;
      }
      HEAP32[i7 >> 2] = i6;
      HEAP32[i4 >> 2] = HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i3 << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i3 << 2) >> 2] >> 2] = i1;
     }
     i7 = i1;
    }
    HEAP32[i4 >> 2] = i7;
    i2 = i3;
   }
  }
 } else {
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = 0;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = 0;
 } while (0);
 return;
}

function __ZNSt3__27__sort3IRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEjT0_S9_S9_T_(i3, i1, i5, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var d4 = 0.0, d6 = 0.0, i7 = 0, d8 = 0.0, i9 = 0, i10 = 0;
 i10 = HEAP32[i1 >> 2] | 0;
 i9 = HEAP32[i3 >> 2] | 0;
 d8 = +HEAPF32[i9 >> 2];
 d6 = +HEAPF32[i10 >> 2];
 if (!(d8 < d6)) if (d6 < d8) i2 = 0; else i2 = (HEAP32[i9 + 4 >> 2] | 0) >>> 0 < (HEAP32[i10 + 4 >> 2] | 0) >>> 0; else i2 = 1;
 i7 = HEAP32[i5 >> 2] | 0;
 d4 = +HEAPF32[i7 >> 2];
 if (!(d6 < d4)) if (d4 < d6) i1 = 0; else i1 = (HEAP32[i10 + 4 >> 2] | 0) >>> 0 < (HEAP32[i7 + 4 >> 2] | 0) >>> 0; else i1 = 1;
 do if (!i2) if (i1) {
  HEAPF32[i10 >> 2] = d4;
  HEAPF32[i7 >> 2] = d6;
  i5 = i10 + 4 | 0;
  i7 = i7 + 4 | 0;
  i3 = HEAP32[i5 >> 2] | 0;
  HEAP32[i5 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i7 >> 2] = i3;
  d4 = +HEAPF32[i9 >> 2];
  d6 = +HEAPF32[i10 >> 2];
  if (!(d4 < d6)) {
   if (d6 < d4) {
    i1 = 1;
    break;
   }
   i1 = i9 + 4 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   i3 = HEAP32[i5 >> 2] | 0;
   if (i2 >>> 0 >= i3 >>> 0) {
    i1 = 1;
    break;
   }
  } else {
   i2 = i9 + 4 | 0;
   i1 = i2;
   i3 = HEAP32[i5 >> 2] | 0;
   i2 = HEAP32[i2 >> 2] | 0;
  }
  HEAPF32[i9 >> 2] = d6;
  HEAPF32[i10 >> 2] = d4;
  HEAP32[i1 >> 2] = i3;
  HEAP32[i5 >> 2] = i2;
  i1 = 2;
 } else i1 = 0; else {
  if (i1) {
   HEAPF32[i9 >> 2] = d4;
   HEAPF32[i7 >> 2] = d8;
   i9 = i9 + 4 | 0;
   i1 = i7 + 4 | 0;
   i10 = HEAP32[i9 >> 2] | 0;
   HEAP32[i9 >> 2] = HEAP32[i1 >> 2];
   HEAP32[i1 >> 2] = i10;
   i1 = 1;
   break;
  }
  HEAPF32[i9 >> 2] = d6;
  HEAPF32[i10 >> 2] = d8;
  i9 = i9 + 4 | 0;
  i3 = i10 + 4 | 0;
  i5 = HEAP32[i9 >> 2] | 0;
  HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i3 >> 2] = i5;
  d4 = +HEAPF32[i7 >> 2];
  if (!(d8 < d4)) {
   if (d4 < d8) {
    i1 = 1;
    break;
   }
   i1 = i7 + 4 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i5 >>> 0 >= i2 >>> 0) {
    i1 = 1;
    break;
   }
  } else {
   i2 = i7 + 4 | 0;
   i1 = i2;
   i2 = HEAP32[i2 >> 2] | 0;
  }
  HEAPF32[i10 >> 2] = d4;
  HEAPF32[i7 >> 2] = d8;
  HEAP32[i3 >> 2] = i2;
  HEAP32[i1 >> 2] = i5;
  i1 = 2;
 } while (0);
 return i1 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = i11 + 4 | 0;
 L1 : do if (i10) {
  if (i10 >>> 0 > 1073741823) {
   i11 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc(i11, 41105);
   HEAP32[i11 >> 2] = 17440;
   ___cxa_throw(i11 | 0, 13288, 107);
  }
  i9 = __Znwm(i10 << 2) | 0;
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = i9;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = i10;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i10 | 0)) break;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i3 = i11 + 8 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i1 | 0) {
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   i8 = i10 + -1 | 0;
   i9 = (i8 & i10 | 0) == 0;
   if (!i9) {
    if (i2 >>> 0 >= i10 >>> 0) i2 = (i2 >>> 0) % (i10 >>> 0) | 0;
   } else i2 = i2 & i8;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i2 << 2) >> 2] = i3;
   while (1) {
    i7 = i1;
    L25 : while (1) {
     while (1) {
      i1 = HEAP32[i7 >> 2] | 0;
      if (!i1) break L1;
      i3 = HEAP32[i1 + 4 >> 2] | 0;
      if (!i9) {
       if (i3 >>> 0 >= i10 >>> 0) i3 = (i3 >>> 0) % (i10 >>> 0) | 0;
      } else i3 = i3 & i8;
      if ((i3 | 0) == (i2 | 0)) break;
      i4 = (HEAP32[i11 >> 2] | 0) + (i3 << 2) | 0;
      if (!(HEAP32[i4 >> 2] | 0)) break L25;
      i5 = i1 + 8 | 0;
      i4 = i1;
      while (1) {
       i6 = HEAP32[i4 >> 2] | 0;
       if (!i6) break;
       if ((HEAP32[i5 >> 2] | 0) == (HEAP32[i6 + 8 >> 2] | 0)) i4 = i6; else break;
      }
      HEAP32[i7 >> 2] = i6;
      HEAP32[i4 >> 2] = HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i3 << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i3 << 2) >> 2] >> 2] = i1;
     }
     i7 = i1;
    }
    HEAP32[i4 >> 2] = i7;
    i2 = i3;
   }
  }
 } else {
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = 0;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = 0;
 } while (0);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = i11 + 4 | 0;
 L1 : do if (i10) {
  if (i10 >>> 0 > 1073741823) {
   i11 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc(i11, 41105);
   HEAP32[i11 >> 2] = 17440;
   ___cxa_throw(i11 | 0, 13288, 107);
  }
  i9 = __Znwm(i10 << 2) | 0;
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = i9;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = i10;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i10 | 0)) break;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i3 = i11 + 8 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i1 | 0) {
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   i8 = i10 + -1 | 0;
   i9 = (i8 & i10 | 0) == 0;
   if (!i9) {
    if (i2 >>> 0 >= i10 >>> 0) i2 = (i2 >>> 0) % (i10 >>> 0) | 0;
   } else i2 = i2 & i8;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i2 << 2) >> 2] = i3;
   while (1) {
    i7 = i1;
    L25 : while (1) {
     while (1) {
      i1 = HEAP32[i7 >> 2] | 0;
      if (!i1) break L1;
      i3 = HEAP32[i1 + 4 >> 2] | 0;
      if (!i9) {
       if (i3 >>> 0 >= i10 >>> 0) i3 = (i3 >>> 0) % (i10 >>> 0) | 0;
      } else i3 = i3 & i8;
      if ((i3 | 0) == (i2 | 0)) break;
      i4 = (HEAP32[i11 >> 2] | 0) + (i3 << 2) | 0;
      if (!(HEAP32[i4 >> 2] | 0)) break L25;
      i5 = i1 + 8 | 0;
      i4 = i1;
      while (1) {
       i6 = HEAP32[i4 >> 2] | 0;
       if (!i6) break;
       if ((HEAP32[i5 >> 2] | 0) == (HEAP32[i6 + 8 >> 2] | 0)) i4 = i6; else break;
      }
      HEAP32[i7 >> 2] = i6;
      HEAP32[i4 >> 2] = HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i3 << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i3 << 2) >> 2] >> 2] = i1;
     }
     i7 = i1;
    }
    HEAP32[i4 >> 2] = i7;
    i2 = i3;
   }
  }
 } else {
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = 0;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = 0;
 } while (0);
 return;
}

function _jpeg_fill_bit_buffer(i11, i4, i3, i9) {
 i11 = i11 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i12 = 0, i13 = 0;
 i1 = HEAP32[i11 >> 2] | 0;
 i12 = i11 + 4 | 0;
 i2 = HEAP32[i12 >> 2] | 0;
 i10 = HEAP32[i11 + 16 >> 2] | 0;
 i8 = i10 + 416 | 0;
 L1 : do if (!(HEAP32[i8 >> 2] | 0)) {
  i7 = i10 + 24 | 0;
  i6 = i4;
  L3 : while (1) {
   if ((i3 | 0) >= 25) {
    i4 = i6;
    i13 = 19;
    break L1;
   }
   if (!i2) {
    if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 12 >> 2] & 127](i10) | 0)) {
     i1 = 0;
     break L1;
    }
    i1 = HEAP32[i7 >> 2] | 0;
    i2 = HEAP32[i1 + 4 >> 2] | 0;
    i1 = HEAP32[i1 >> 2] | 0;
   }
   i2 = i2 + -1 | 0;
   i4 = i1 + 1 | 0;
   i5 = HEAP8[i1 >> 0] | 0;
   i1 = i5 & 255;
   L10 : do if (i5 << 24 >> 24 == -1) {
    i1 = i4;
    while (1) {
     if (!i2) {
      if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 12 >> 2] & 127](i10) | 0)) {
       i1 = 0;
       break L1;
      }
      i4 = HEAP32[i7 >> 2] | 0;
      i2 = HEAP32[i4 + 4 >> 2] | 0;
      i4 = HEAP32[i4 >> 2] | 0;
     } else i4 = i1;
     i2 = i2 + -1 | 0;
     i1 = i4 + 1 | 0;
     i4 = HEAP8[i4 >> 0] | 0;
     switch (i4 << 24 >> 24) {
     case 0:
      {
       i5 = 255;
       break L10;
      }
     case -1:
      break;
     default:
      break L3;
     }
    }
   } else {
    i5 = i1;
    i1 = i4;
   } while (0);
   i6 = i5 | i6 << 8;
   i3 = i3 + 8 | 0;
  }
  HEAP32[i8 >> 2] = i4 & 255;
  i4 = i6;
  i5 = i2;
  i13 = 15;
 } else {
  i5 = i2;
  i13 = 15;
 } while (0);
 if ((i13 | 0) == 15) if ((i3 | 0) < (i9 | 0)) {
  i2 = i10 + 444 | 0;
  if (!(HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] | 0)) {
   i13 = HEAP32[i10 >> 2] | 0;
   HEAP32[i13 + 20 >> 2] = 117;
   FUNCTION_TABLE_vii[HEAP32[i13 + 4 >> 2] & 63](i10, -1);
   HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] = 1;
  }
  i4 = i4 << 25 - i3;
  i3 = 25;
  i2 = i5;
  i13 = 19;
 } else {
  i2 = i5;
  i13 = 19;
 }
 if ((i13 | 0) == 19) {
  HEAP32[i11 >> 2] = i1;
  HEAP32[i12 >> 2] = i2;
  HEAP32[i11 + 8 >> 2] = i4;
  HEAP32[i11 + 12 >> 2] = i3;
  i1 = 1;
 }
 return i1 | 0;
}

function _wcsrtombs(i3, i6, i1, i2) {
 i3 = i3 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i8;
 L1 : do if (!i3) {
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (!i2) i1 = 0; else {
   i3 = i1;
   i1 = 0;
   do {
    if (i2 >>> 0 > 127) {
     i2 = _wcrtomb(i7, i2, 0) | 0;
     if ((i2 | 0) == -1) {
      i1 = -1;
      break L1;
     }
    } else i2 = 1;
    i1 = i2 + i1 | 0;
    i3 = i3 + 4 | 0;
    i2 = HEAP32[i3 >> 2] | 0;
   } while ((i2 | 0) != 0);
  }
 } else {
  L10 : do if (i1 >>> 0 > 3) {
   i2 = i1;
   i4 = HEAP32[i6 >> 2] | 0;
   while (1) {
    i5 = HEAP32[i4 >> 2] | 0;
    if ((i5 + -1 | 0) >>> 0 > 126) {
     if (!i5) break;
     i5 = _wcrtomb(i3, i5, 0) | 0;
     if ((i5 | 0) == -1) {
      i1 = -1;
      break L1;
     }
     i3 = i3 + i5 | 0;
     i2 = i2 - i5 | 0;
    } else {
     HEAP8[i3 >> 0] = i5;
     i3 = i3 + 1 | 0;
     i2 = i2 + -1 | 0;
     i4 = HEAP32[i6 >> 2] | 0;
    }
    i4 = i4 + 4 | 0;
    HEAP32[i6 >> 2] = i4;
    if (i2 >>> 0 <= 3) break L10;
   }
   HEAP8[i3 >> 0] = 0;
   HEAP32[i6 >> 2] = 0;
   i1 = i1 - i2 | 0;
   break L1;
  } else i2 = i1; while (0);
  if (i2) {
   i4 = HEAP32[i6 >> 2] | 0;
   while (1) {
    i5 = HEAP32[i4 >> 2] | 0;
    if ((i5 + -1 | 0) >>> 0 > 126) {
     if (!i5) {
      i4 = 20;
      break;
     }
     i5 = _wcrtomb(i7, i5, 0) | 0;
     if ((i5 | 0) == -1) {
      i1 = -1;
      break L1;
     }
     if (i2 >>> 0 < i5 >>> 0) {
      i4 = 23;
      break;
     }
     _wcrtomb(i3, HEAP32[i4 >> 2] | 0, 0) | 0;
     i3 = i3 + i5 | 0;
     i2 = i2 - i5 | 0;
    } else {
     HEAP8[i3 >> 0] = i5;
     i3 = i3 + 1 | 0;
     i2 = i2 + -1 | 0;
     i4 = HEAP32[i6 >> 2] | 0;
    }
    i4 = i4 + 4 | 0;
    HEAP32[i6 >> 2] = i4;
    if (!i2) break L1;
   }
   if ((i4 | 0) == 20) {
    HEAP8[i3 >> 0] = 0;
    HEAP32[i6 >> 2] = 0;
    i1 = i1 - i2 | 0;
    break;
   } else if ((i4 | 0) == 23) {
    i1 = i1 - i2 | 0;
    break;
   }
  }
 } while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE8__rehashEm(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = i11 + 4 | 0;
 L1 : do if (i10) {
  if (i10 >>> 0 > 1073741823) {
   i11 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc(i11, 41105);
   HEAP32[i11 >> 2] = 17440;
   ___cxa_throw(i11 | 0, 13288, 107);
  }
  i9 = __Znwm(i10 << 2) | 0;
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = i9;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = i10;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i10 | 0)) break;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i3 = i11 + 8 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i1 | 0) {
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   i8 = i10 + -1 | 0;
   i9 = (i8 & i10 | 0) == 0;
   if (!i9) {
    if (i2 >>> 0 >= i10 >>> 0) i2 = (i2 >>> 0) % (i10 >>> 0) | 0;
   } else i2 = i2 & i8;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i2 << 2) >> 2] = i3;
   while (1) {
    i7 = i1;
    L25 : while (1) {
     while (1) {
      i1 = HEAP32[i7 >> 2] | 0;
      if (!i1) break L1;
      i3 = HEAP32[i1 + 4 >> 2] | 0;
      if (!i9) {
       if (i3 >>> 0 >= i10 >>> 0) i3 = (i3 >>> 0) % (i10 >>> 0) | 0;
      } else i3 = i3 & i8;
      if ((i3 | 0) == (i2 | 0)) break;
      i4 = (HEAP32[i11 >> 2] | 0) + (i3 << 2) | 0;
      if (!(HEAP32[i4 >> 2] | 0)) break L25;
      i5 = i1 + 8 | 0;
      i4 = i1;
      while (1) {
       i6 = HEAP32[i4 >> 2] | 0;
       if (!i6) break;
       if ((HEAP32[i5 >> 2] | 0) == (HEAP32[i6 + 8 >> 2] | 0)) i4 = i6; else break;
      }
      HEAP32[i7 >> 2] = i6;
      HEAP32[i4 >> 2] = HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i3 << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i3 << 2) >> 2] >> 2] = i1;
     }
     i7 = i1;
    }
    HEAP32[i4 >> 2] = i7;
    i2 = i3;
   }
  }
 } else {
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = 0;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = 0;
 } while (0);
 return;
}

function _quantize_fs_dither(i1, i26, i27, i28) {
 i1 = i1 | 0;
 i26 = i26 | 0;
 i27 = i27 | 0;
 i28 = i28 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0;
 i29 = HEAP32[i1 + 460 >> 2] | 0;
 i30 = HEAP32[i1 + 120 >> 2] | 0;
 i31 = HEAP32[i1 + 112 >> 2] | 0;
 i16 = HEAP32[i1 + 324 >> 2] | 0;
 i17 = i29 + 84 | 0;
 i18 = i29 + 24 | 0;
 i19 = i29 + 16 | 0;
 i20 = i31 + -1 | 0;
 i21 = Math_imul(i20, i30) | 0;
 i22 = 0 - i30 | 0;
 i23 = i31 + 1 | 0;
 i11 = 0;
 while (1) {
  if ((i11 | 0) >= (i28 | 0)) break;
  i24 = i27 + (i11 << 2) | 0;
  _jzero_far(HEAP32[i24 >> 2] | 0, i31);
  i25 = i26 + (i11 << 2) | 0;
  i12 = 0;
  while (1) {
   if ((i12 | 0) >= (i30 | 0)) break;
   i1 = (HEAP32[i25 >> 2] | 0) + i12 | 0;
   i2 = HEAP32[i24 >> 2] | 0;
   if (!(HEAP32[i17 >> 2] | 0)) {
    i13 = i30;
    i14 = 1;
    i15 = HEAP32[i29 + 68 + (i12 << 2) >> 2] | 0;
   } else {
    i13 = i22;
    i14 = -1;
    i15 = (HEAP32[i29 + 68 + (i12 << 2) >> 2] | 0) + (i23 << 1) | 0;
    i1 = i1 + i21 | 0;
    i2 = i2 + i20 | 0;
   }
   i8 = HEAP32[(HEAP32[i18 >> 2] | 0) + (i12 << 2) >> 2] | 0;
   i9 = HEAP32[(HEAP32[i19 >> 2] | 0) + (i12 << 2) >> 2] | 0;
   i10 = Math_imul(i31, i14) | 0;
   i3 = 0;
   i4 = 0;
   i5 = i31;
   i6 = 0;
   i7 = i15;
   while (1) {
    if (!i5) break;
    i32 = i7 + (i14 << 1) | 0;
    i33 = HEAPU8[i16 + ((i3 + 8 + (HEAP16[i32 >> 1] | 0) >> 4) + (HEAPU8[i1 >> 0] | 0)) >> 0] | 0;
    i34 = HEAPU8[i8 + i33 >> 0] | 0;
    HEAP8[i2 >> 0] = (HEAPU8[i2 >> 0] | 0) + i34;
    i34 = i33 - (HEAPU8[i9 + i34 >> 0] | 0) | 0;
    HEAP16[i7 >> 1] = (i34 * 3 | 0) + i6;
    i33 = (i34 * 5 | 0) + i4 | 0;
    i3 = i34 * 7 | 0;
    i4 = i34;
    i5 = i5 + -1 | 0;
    i6 = i33;
    i7 = i32;
    i1 = i1 + i13 | 0;
    i2 = i2 + i14 | 0;
   }
   HEAP16[i15 + (i10 << 1) >> 1] = i6;
   i12 = i12 + 1 | 0;
  }
  HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) == 0 & 1;
  i11 = i11 + 1 | 0;
 }
 return;
}

function _h2v1_merged_upsample(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i15 = HEAP32[i4 + 452 >> 2] | 0;
 i17 = HEAP32[i4 + 324 >> 2] | 0;
 i18 = HEAP32[i15 + 16 >> 2] | 0;
 i13 = HEAP32[i15 + 20 >> 2] | 0;
 i14 = HEAP32[i15 + 24 >> 2] | 0;
 i15 = HEAP32[i15 + 28 >> 2] | 0;
 i16 = HEAP32[(HEAP32[i1 >> 2] | 0) + (i2 << 2) >> 2] | 0;
 i5 = HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + (i2 << 2) >> 2] | 0;
 i12 = HEAP32[(HEAP32[i1 + 8 >> 2] | 0) + (i2 << 2) >> 2] | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 i8 = i4 + 112 | 0;
 i10 = HEAP32[i8 >> 2] | 0;
 i9 = i10 >>> 1;
 i6 = i9 * 6 | 0;
 i10 = i10 & -2;
 i11 = i5 + i9 | 0;
 i1 = i9;
 i2 = i12;
 i3 = i5;
 i4 = i16;
 i5 = i7;
 while (1) {
  if (!i1) break;
  i20 = HEAPU8[i3 >> 0] | 0;
  i21 = HEAPU8[i2 >> 0] | 0;
  i22 = HEAP32[i18 + (i21 << 2) >> 2] | 0;
  i21 = (HEAP32[i14 + (i21 << 2) >> 2] | 0) + (HEAP32[i15 + (i20 << 2) >> 2] | 0) >> 16;
  i20 = HEAP32[i13 + (i20 << 2) >> 2] | 0;
  i19 = HEAPU8[i4 >> 0] | 0;
  HEAP8[i5 >> 0] = HEAP8[i17 + (i22 + i19) >> 0] | 0;
  HEAP8[i5 + 1 >> 0] = HEAP8[i17 + (i21 + i19) >> 0] | 0;
  HEAP8[i5 + 2 >> 0] = HEAP8[i17 + (i20 + i19) >> 0] | 0;
  i19 = HEAPU8[i4 + 1 >> 0] | 0;
  HEAP8[i5 + 3 >> 0] = HEAP8[i17 + (i22 + i19) >> 0] | 0;
  HEAP8[i5 + 4 >> 0] = HEAP8[i17 + (i21 + i19) >> 0] | 0;
  HEAP8[i5 + 5 >> 0] = HEAP8[i17 + (i20 + i19) >> 0] | 0;
  i1 = i1 + -1 | 0;
  i2 = i2 + 1 | 0;
  i3 = i3 + 1 | 0;
  i4 = i4 + 2 | 0;
  i5 = i5 + 6 | 0;
 }
 i1 = i7 + i6 | 0;
 if (HEAP32[i8 >> 2] & 1 | 0) {
  i21 = HEAPU8[i11 >> 0] | 0;
  i19 = HEAPU8[i12 + i9 >> 0] | 0;
  i20 = (HEAP32[i14 + (i19 << 2) >> 2] | 0) + (HEAP32[i15 + (i21 << 2) >> 2] | 0) >> 16;
  i21 = HEAP32[i13 + (i21 << 2) >> 2] | 0;
  i22 = HEAPU8[i16 + i10 >> 0] | 0;
  HEAP8[i1 >> 0] = HEAP8[i17 + ((HEAP32[i18 + (i19 << 2) >> 2] | 0) + i22) >> 0] | 0;
  HEAP8[i1 + 1 >> 0] = HEAP8[i17 + (i20 + i22) >> 0] | 0;
  HEAP8[i1 + 2 >> 0] = HEAP8[i17 + (i21 + i22) >> 0] | 0;
 }
 return;
}

function _find_best_colors(i3, i21, i22, i23, i24, i25, i26) {
 i3 = i3 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i25 = i25 | 0;
 i26 = i26 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i27 = 0, i28 = 0, i29 = 0;
 i28 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 i27 = i28;
 i1 = i27;
 i2 = 127;
 while (1) {
  if ((i2 | 0) <= -1) break;
  HEAP32[i1 >> 2] = 2147483647;
  i1 = i1 + 4 | 0;
  i2 = i2 + -1 | 0;
 }
 i16 = i3 + 136 | 0;
 i15 = 0;
 while (1) {
  if ((i15 | 0) >= (i24 | 0)) break;
  i17 = HEAP8[i25 + i15 >> 0] | 0;
  i11 = i17 & 255;
  i19 = HEAP32[i16 >> 2] | 0;
  i9 = i21 - (HEAPU8[(HEAP32[i19 >> 2] | 0) + i11 >> 0] | 0) | 0;
  i12 = i9 << 1;
  i12 = Math_imul(i12, i12) | 0;
  i18 = i22 - (HEAPU8[(HEAP32[i19 + 4 >> 2] | 0) + i11 >> 0] | 0) | 0;
  i7 = i18 * 3 | 0;
  i12 = (Math_imul(i7, i7) | 0) + i12 | 0;
  i11 = i23 - (HEAPU8[(HEAP32[i19 + 8 >> 2] | 0) + i11 >> 0] | 0) | 0;
  i18 = (i18 * 72 | 0) + 144 | 0;
  i19 = (i11 << 4) + 64 | 0;
  i7 = 3;
  i9 = (i9 << 6) + 256 | 0;
  i11 = i12 + (Math_imul(i11, i11) | 0) | 0;
  i12 = i26;
  i1 = i27;
  while (1) {
   if ((i7 | 0) <= -1) break;
   i20 = i1 + 128 | 0;
   i8 = i18;
   i10 = i11;
   i13 = 7;
   i14 = i12;
   while (1) {
    if ((i13 | 0) <= -1) break;
    i6 = i1 + 16 | 0;
    i2 = 3;
    i3 = i19;
    i4 = i10;
    i5 = i14;
    while (1) {
     if ((i2 | 0) <= -1) break;
     if ((i4 | 0) < (HEAP32[i1 >> 2] | 0)) {
      HEAP32[i1 >> 2] = i4;
      HEAP8[i5 >> 0] = i17;
     }
     i29 = i3 + i4 | 0;
     i2 = i2 + -1 | 0;
     i3 = i3 + 128 | 0;
     i4 = i29;
     i5 = i5 + 1 | 0;
     i1 = i1 + 4 | 0;
    }
    i1 = i8 + i10 | 0;
    i8 = i8 + 288 | 0;
    i10 = i1;
    i13 = i13 + -1 | 0;
    i14 = i14 + 4 | 0;
    i1 = i6;
   }
   i1 = i9 + i11 | 0;
   i7 = i7 + -1 | 0;
   i9 = i9 + 512 | 0;
   i11 = i1;
   i12 = i12 + 32 | 0;
   i1 = i20;
  }
  i15 = i15 + 1 | 0;
 }
 STACKTOP = i28;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_(i11, i1, i8) {
 i11 = i11 | 0;
 i1 = i1 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i1;
 i10 = i13;
 i12 = i11 + 11 | 0;
 i4 = HEAP8[i12 >> 0] | 0;
 i2 = i4 << 24 >> 24 < 0;
 if (i2) {
  i9 = HEAP32[i11 + 4 >> 2] | 0;
  i5 = (HEAP32[i11 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i9 = i4 & 255;
  i5 = 10;
 }
 i7 = i8 - i6 | 0;
 do if (i7 | 0) {
  if (i2) {
   i3 = HEAP32[i11 >> 2] | 0;
   i2 = HEAP32[i11 + 4 >> 2] | 0;
  } else {
   i3 = i11;
   i2 = i4 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_(i1, i3, i3 + i2 | 0) | 0) {
   HEAP32[i10 >> 2] = 0;
   HEAP32[i10 + 4 >> 2] = 0;
   HEAP32[i10 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(i10, i1, i8);
   i12 = HEAP8[i10 + 11 >> 0] | 0;
   i9 = i12 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(i11, i9 ? HEAP32[i10 >> 2] | 0 : i10, i9 ? HEAP32[i10 + 4 >> 2] | 0 : i12 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
   break;
  }
  if ((i5 - i9 | 0) >>> 0 < i7 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(i11, i5, i9 + i7 - i5 | 0, i9, i9, 0, 0);
  if ((HEAP8[i12 >> 0] | 0) < 0) i4 = HEAP32[i11 >> 2] | 0; else i4 = i11;
  i3 = i8 + (i9 - i6) | 0;
  i2 = i4 + i9 | 0;
  while (1) {
   if ((i1 | 0) == (i8 | 0)) break;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i1);
   i2 = i2 + 1 | 0;
   i1 = i1 + 1 | 0;
  }
  HEAP8[i10 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i4 + i3 | 0, i10);
  i1 = i9 + i7 | 0;
  if ((HEAP8[i12 >> 0] | 0) < 0) {
   HEAP32[i11 + 4 >> 2] = i1;
   break;
  } else {
   HEAP8[i12 >> 0] = i1;
   break;
  }
 } while (0);
 STACKTOP = i13;
 return i11 | 0;
}

function _arPattCreateHandle2(i5, i11) {
 i5 = i5 | 0;
 i11 = i11 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i15 = i16 + 56 | 0;
 i14 = i16 + 48 | 0;
 i7 = i16 + 40 | 0;
 i6 = i16 + 32 | 0;
 i4 = i16 + 24 | 0;
 i3 = i16 + 16 | 0;
 i2 = i16 + 8 | 0;
 i1 = i16;
 L1 : do if (!((i5 + -16 | 0) >>> 0 > 48 | (i11 | 0) < 1)) {
  i12 = _malloc(32) | 0;
  if (!i12) {
   _arLog(0, 3, 20581, i1);
   _exit(1);
  }
  HEAP32[i12 >> 2] = 0;
  HEAP32[i12 + 4 >> 2] = i11;
  HEAP32[i12 + 28 >> 2] = i5;
  i10 = _malloc(i11 << 2) | 0;
  HEAP32[i12 + 8 >> 2] = i10;
  if (!i10) {
   _arLog(0, 3, 20581, i2);
   _exit(1);
  }
  i1 = i11 << 4;
  i9 = _malloc(i1) | 0;
  HEAP32[i12 + 12 >> 2] = i9;
  if (!i9) {
   _arLog(0, 3, 20581, i3);
   _exit(1);
  }
  i3 = _malloc(i1) | 0;
  i8 = i12 + 20 | 0;
  HEAP32[i8 >> 2] = i3;
  if (!i3) {
   _arLog(0, 3, 20581, i4);
   _exit(1);
  }
  i1 = i11 << 5;
  i4 = _malloc(i1) | 0;
  HEAP32[i12 + 16 >> 2] = i4;
  if (!i4) {
   _arLog(0, 3, 20581, i6);
   _exit(1);
  }
  i6 = _malloc(i1) | 0;
  HEAP32[i12 + 24 >> 2] = i6;
  if (!i6) {
   _arLog(0, 3, 20581, i7);
   _exit(1);
  }
  i4 = Math_imul(i5, i5) | 0;
  i3 = i4 * 12 | 0;
  i4 = i4 << 2;
  i2 = 0;
  L21 : while (1) {
   if ((i2 | 0) >= (i11 | 0)) {
    i13 = i12;
    break L1;
   }
   HEAP32[i10 + (i2 << 2) >> 2] = 0;
   i5 = i2 << 2;
   i1 = 0;
   while (1) {
    if (i1 >>> 0 >= 4) break;
    i7 = _malloc(i3) | 0;
    i6 = i1 + i5 | 0;
    HEAP32[i9 + (i6 << 2) >> 2] = i7;
    if (!i7) {
     i1 = 19;
     break L21;
    }
    i7 = _malloc(i4) | 0;
    HEAP32[(HEAP32[i8 >> 2] | 0) + (i6 << 2) >> 2] = i7;
    if (!i7) {
     i1 = 21;
     break L21;
    } else i1 = i1 + 1 | 0;
   }
   i2 = i2 + 1 | 0;
  }
  if ((i1 | 0) == 19) {
   _arLog(0, 3, 20581, i14);
   _exit(1);
  } else if ((i1 | 0) == 21) {
   _arLog(0, 3, 20581, i15);
   _exit(1);
  }
 } else i13 = 0; while (0);
 STACKTOP = i16;
 return i13 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_dot_suffixINS0_2DbEEEPKcS4_S4_RT_(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i5 = i8 + 24 | 0;
 i6 = i8 + 12 | 0;
 i7 = i8;
 if (((i1 | 0) != (i3 | 0) ? (HEAP8[i1 >> 0] | 0) == 46 : 0) ? (i4 = i2 + 4 | 0, (HEAP32[i2 >> 2] | 0) != (HEAP32[i4 >> 2] | 0)) : 0) {
  HEAP32[i7 >> 2] = 0;
  HEAP32[i7 + 4 >> 2] = 0;
  HEAP32[i7 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i7, i1, i3);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i7, 0, 50521) | 0;
  HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i7 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 50524) | 0;
  HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i6 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i1 = HEAP8[i5 + 11 >> 0] | 0;
  i2 = i1 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i4 >> 2] | 0) + -24 | 0, i2 ? HEAP32[i5 >> 2] | 0 : i5, i2 ? HEAP32[i5 + 4 >> 2] | 0 : i1 & 255) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  i1 = i3;
 }
 STACKTOP = i8;
 return i1 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb(i2, i3, i4, i5, i6, i7) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i1 = i13 + 40 | 0;
 i12 = i13;
 i8 = i13 + 32 | 0;
 i9 = i13 + 36 | 0;
 i10 = i13 + 28 | 0;
 i11 = i13 + 24 | 0;
 if (!(HEAP32[i5 + 4 >> 2] & 1)) {
  HEAP32[i8 >> 2] = -1;
  i11 = HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i10 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i12 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i10 >> 2];
  i12 = FUNCTION_TABLE_iiiiiii[i11 & 63](i2, i12, i1, i5, i6, i8) | 0;
  HEAP32[i3 >> 2] = i12;
  switch (HEAP32[i8 >> 2] | 0) {
  case 0:
   {
    HEAP8[i7 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[i7 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[i7 >> 0] = 1;
    HEAP32[i6 >> 2] = 4;
   }
  }
  i1 = HEAP32[i3 >> 2] | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv(i1, i5);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58824) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNKSt3__28ios_base6getlocEv(i1, i5);
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58832) | 0;
  __ZNSt3__26localeD2Ev(i1);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i12, i2);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i12 + 12 | 0, i2);
  HEAP32[i11 >> 2] = HEAP32[i4 >> 2];
  i2 = i12 + 24 | 0;
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  i1 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i3, i1, i12, i2, i10, i6, 1) | 0) == (i12 | 0) & 1;
  HEAP8[i7 >> 0] = i1;
  i1 = HEAP32[i3 >> 2] | 0;
  do {
   i2 = i2 + -12 | 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i2);
  } while ((i2 | 0) != (i12 | 0));
 }
 STACKTOP = i13;
 return i1 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb(i2, i3, i4, i5, i6, i7) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i1 = i13 + 40 | 0;
 i12 = i13;
 i8 = i13 + 32 | 0;
 i9 = i13 + 36 | 0;
 i10 = i13 + 28 | 0;
 i11 = i13 + 24 | 0;
 if (!(HEAP32[i5 + 4 >> 2] & 1)) {
  HEAP32[i8 >> 2] = -1;
  i11 = HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i10 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i12 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i10 >> 2];
  i12 = FUNCTION_TABLE_iiiiiii[i11 & 63](i2, i12, i1, i5, i6, i8) | 0;
  HEAP32[i3 >> 2] = i12;
  switch (HEAP32[i8 >> 2] | 0) {
  case 0:
   {
    HEAP8[i7 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[i7 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[i7 >> 0] = 1;
    HEAP32[i6 >> 2] = 4;
   }
  }
  i1 = HEAP32[i3 >> 2] | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv(i1, i5);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58792) | 0;
  __ZNSt3__26localeD2Ev(i1);
  __ZNKSt3__28ios_base6getlocEv(i1, i5);
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 58808) | 0;
  __ZNSt3__26localeD2Ev(i1);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i12, i2);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i12 + 12 | 0, i2);
  HEAP32[i11 >> 2] = HEAP32[i4 >> 2];
  i2 = i12 + 24 | 0;
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  i1 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i3, i1, i12, i2, i10, i6, 1) | 0) == (i12 | 0) & 1;
  HEAP8[i7 >> 0] = i1;
  i1 = HEAP32[i3 >> 2] | 0;
  do {
   i2 = i2 + -12 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
  } while ((i2 | 0) != (i12 | 0));
 }
 STACKTOP = i13;
 return i1 | 0;
}

function __ZN6vision21HoughSimilarityVoting4voteEPKfS2_i(i3, i4, i11, i12) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i13 = i17 + 12 | 0;
 i14 = i17 + 8 | 0;
 i15 = i17 + 4 | 0;
 i16 = i17;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE5clearEv(i3 + 92 | 0);
 if (i12 | 0) {
  i5 = i3 + 112 | 0;
  __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm(i5, i12 << 2);
  i6 = i3 + 124 | 0;
  __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm(i6, i12);
  if (HEAP8[i3 + 16 >> 0] | 0) __ZN6vision21HoughSimilarityVoting19autoAdjustXYNumBinsEPKfS2_i(i3, i4, i11, i12);
  i7 = i3 + 68 | 0;
  i8 = i3 + 72 | 0;
  i9 = i3 + 76 | 0;
  i10 = i3 + 80 | 0;
  i1 = 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (i12 | 0)) break;
   i18 = i2 << 2;
   i19 = i4 + (i18 << 2) | 0;
   i18 = i11 + (i18 << 2) | 0;
   __ZNK6vision21HoughSimilarityVoting17mapCorrespondenceERfS1_S1_S1_ffffffff(i3, i13, i14, i15, i16, +HEAPF32[i19 >> 2], +HEAPF32[i19 + 4 >> 2], +HEAPF32[i19 + 8 >> 2], +HEAPF32[i19 + 12 >> 2], +HEAPF32[i18 >> 2], +HEAPF32[i18 + 4 >> 2], +HEAPF32[i18 + 8 >> 2], +HEAPF32[i18 + 12 >> 2]);
   if (__ZN6vision21HoughSimilarityVoting4voteEffff(i3, +HEAPF32[i13 >> 2], +HEAPF32[i14 >> 2], +HEAPF32[i15 >> 2], +HEAPF32[i16 >> 2]) | 0) {
    i19 = (HEAP32[i5 >> 2] | 0) + (i1 << 2 << 2) | 0;
    HEAP32[i19 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i19 + 4 >> 2] = HEAP32[i8 >> 2];
    HEAP32[i19 + 8 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i19 + 12 >> 2] = HEAP32[i10 >> 2];
    HEAP32[(HEAP32[i6 >> 2] | 0) + (i1 << 2) >> 2] = i2;
    i1 = i1 + 1 | 0;
   }
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm(i5, i1 << 2);
  __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm(i6, i1);
 }
 STACKTOP = i17;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_(i10, i1, i7) {
 i10 = i10 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i12;
 i2 = i10 + 8 | 0;
 i11 = i2 + 3 | 0;
 i5 = HEAP8[i11 >> 0] | 0;
 i3 = i5 << 24 >> 24 < 0;
 if (i3) {
  i9 = HEAP32[i10 + 4 >> 2] | 0;
  i4 = (HEAP32[i2 >> 2] & 2147483647) + -1 | 0;
 } else {
  i9 = i5 & 255;
  i4 = 1;
 }
 i2 = i7 - i1 | 0;
 i6 = i2 >> 2;
 do if (i2 | 0) {
  if (i3) {
   i3 = HEAP32[i10 >> 2] | 0;
   i2 = HEAP32[i10 + 4 >> 2] | 0;
  } else {
   i3 = i10;
   i2 = i5 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIwEEbPKT_S3_S3_(i1, i3, i3 + (i2 << 2) | 0) | 0) {
   HEAP32[i8 >> 2] = 0;
   HEAP32[i8 + 4 >> 2] = 0;
   HEAP32[i8 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(i8, i1, i7);
   i11 = HEAP8[i8 + 8 + 3 >> 0] | 0;
   i9 = i11 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwm(i10, i9 ? HEAP32[i8 >> 2] | 0 : i8, i9 ? HEAP32[i8 + 4 >> 2] | 0 : i11 & 255) | 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i8);
   break;
  }
  if ((i4 - i9 | 0) >>> 0 < i6 >>> 0) __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm(i10, i4, i9 + i6 - i4 | 0, i9, i9, 0, 0);
  if ((HEAP8[i11 >> 0] | 0) < 0) i2 = HEAP32[i10 >> 2] | 0; else i2 = i10;
  i2 = i2 + (i9 << 2) | 0;
  while (1) {
   if ((i1 | 0) == (i7 | 0)) break;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i2, i1);
   i2 = i2 + 4 | 0;
   i1 = i1 + 4 | 0;
  }
  HEAP32[i8 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw(i2, i8);
  i1 = i9 + i6 | 0;
  if ((HEAP8[i11 >> 0] | 0) < 0) {
   HEAP32[i10 + 4 >> 2] = i1;
   break;
  } else {
   HEAP8[i11 >> 0] = i1;
   break;
  }
 } while (0);
 STACKTOP = i12;
 return i10 | 0;
}

function __ZN6vision18EstimateHomographyEPfRKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEES8_RKNS2_INS_7match_tENS4_IS9_EEEERNS_16RobustHomographyIfEEii(i8, i2, i3, i1, i9, i10, i11) {
 i8 = i8 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, d17 = 0.0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i13 = i15 + 44 | 0;
 i14 = i15 + 32 | 0;
 i12 = i15;
 i7 = i1 + 4 | 0;
 __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEEC2Em(i13, (HEAP32[i7 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 3);
 __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEEC2Em(i14, (HEAP32[i7 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 3);
 i6 = HEAP32[i1 >> 2] | 0;
 i7 = (HEAP32[i7 >> 2] | 0) - i6 >> 3;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = HEAP32[i14 >> 2] | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 i3 = HEAP32[i13 >> 2] | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == (i7 | 0)) break;
  i16 = HEAP32[i6 + (i1 << 3) >> 2] | 0;
  HEAP32[i5 + (i1 << 3) >> 2] = HEAP32[i4 + (i16 * 20 | 0) >> 2];
  HEAP32[i5 + (i1 << 3) + 4 >> 2] = HEAP32[i4 + (i16 * 20 | 0) + 4 >> 2];
  i16 = HEAP32[i6 + (i1 << 3) + 4 >> 2] | 0;
  HEAP32[i3 + (i1 << 3) >> 2] = HEAP32[i2 + (i16 * 20 | 0) >> 2];
  HEAP32[i3 + (i1 << 3) + 4 >> 2] = HEAP32[i2 + (i16 * 20 | 0) + 4 >> 2];
  i1 = i1 + 1 | 0;
 }
 HEAPF32[i12 >> 2] = 0.0;
 HEAPF32[i12 + 4 >> 2] = 0.0;
 d17 = +(i10 | 0);
 HEAPF32[i12 + 8 >> 2] = d17;
 HEAPF32[i12 + 12 >> 2] = 0.0;
 HEAPF32[i12 + 16 >> 2] = d17;
 d17 = +(i11 | 0);
 HEAPF32[i12 + 20 >> 2] = d17;
 HEAPF32[i12 + 24 >> 2] = 0.0;
 HEAPF32[i12 + 28 >> 2] = d17;
 if (__ZN6vision16RobustHomographyIfE4findEPfPKfS4_iS4_i(i9, i8, i3, i5, i7, i12, 4) | 0) i1 = __ZN6vision25CheckHomographyHeuristicsEPfii(i8, i10, i11) | 0; else i1 = 0;
 __ZNSt3__213__vector_baseIN6vision7Point2dIfEENS_9allocatorIS3_EEED2Ev(i14);
 __ZNSt3__213__vector_baseIN6vision7Point2dIfEENS_9allocatorIS3_EEED2Ev(i13);
 STACKTOP = i15;
 return i1 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl(i1, i13, i14, i15, i4) {
 i1 = i1 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i12;
 i3 = i12 + 16 | 0;
 i9 = i12 + 12 | 0;
 i10 = i12 + 4 | 0;
 i11 = i12 + 8 | 0;
 HEAP8[i3 >> 0] = HEAP8[47867] | 0;
 HEAP8[i3 + 1 >> 0] = HEAP8[47868] | 0;
 HEAP8[i3 + 2 >> 0] = HEAP8[47869] | 0;
 HEAP8[i3 + 3 >> 0] = HEAP8[47870] | 0;
 HEAP8[i3 + 4 >> 0] = HEAP8[47871] | 0;
 HEAP8[i3 + 5 >> 0] = HEAP8[47872] | 0;
 i5 = i14 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i3 + 1 | 0, 51791, 1, HEAP32[i5 >> 2] | 0);
 i5 = (HEAP32[i5 >> 2] | 0) >>> 9 & 1;
 i2 = i5 + 13 | 0;
 i7 = _llvm_stacksave() | 0;
 i1 = i2;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 i1 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i6 >> 2] = i4;
 i3 = i8 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i8, i2, i1, i3, i6) | 0) | 0;
 i4 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i8, i3, i14) | 0;
 i1 = (i5 << 1 | 24) + -1 << 2;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i6, i14);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i8, i4, i3, i2, i9, i10, i6);
 __ZNSt3__26localeD2Ev(i6);
 HEAP32[i11 >> 2] = HEAP32[i13 >> 2];
 i9 = HEAP32[i9 >> 2] | 0;
 i13 = HEAP32[i10 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i11 >> 2];
 i15 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i2, i9, i13, i14, i15) | 0;
 _llvm_stackrestore(i7 | 0);
 STACKTOP = i12;
 return i15 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl(i1, i13, i14, i15, i4) {
 i1 = i1 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i12;
 i3 = i12 + 16 | 0;
 i9 = i12 + 12 | 0;
 i10 = i12 + 4 | 0;
 i11 = i12 + 8 | 0;
 HEAP8[i3 >> 0] = HEAP8[47867] | 0;
 HEAP8[i3 + 1 >> 0] = HEAP8[47868] | 0;
 HEAP8[i3 + 2 >> 0] = HEAP8[47869] | 0;
 HEAP8[i3 + 3 >> 0] = HEAP8[47870] | 0;
 HEAP8[i3 + 4 >> 0] = HEAP8[47871] | 0;
 HEAP8[i3 + 5 >> 0] = HEAP8[47872] | 0;
 i5 = i14 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i3 + 1 | 0, 51791, 1, HEAP32[i5 >> 2] | 0);
 i5 = (HEAP32[i5 >> 2] | 0) >>> 9 & 1;
 i2 = i5 + 13 | 0;
 i7 = _llvm_stacksave() | 0;
 i1 = i2;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 i1 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i6 >> 2] = i4;
 i3 = i8 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i8, i2, i1, i3, i6) | 0) | 0;
 i4 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i8, i3, i14) | 0;
 i1 = (i5 << 1 | 24) + -1 | 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i6, i14);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i8, i4, i3, i2, i9, i10, i6);
 __ZNSt3__26localeD2Ev(i6);
 HEAP32[i11 >> 2] = HEAP32[i13 >> 2];
 i9 = HEAP32[i9 >> 2] | 0;
 i13 = HEAP32[i10 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i11 >> 2];
 i15 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i2, i9, i13, i14, i15) | 0;
 _llvm_stackrestore(i7 | 0);
 STACKTOP = i12;
 return i15 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm(i1, i13, i14, i15, i4) {
 i1 = i1 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i12;
 i3 = i12 + 16 | 0;
 i9 = i12 + 12 | 0;
 i10 = i12 + 4 | 0;
 i11 = i12 + 8 | 0;
 HEAP8[i3 >> 0] = HEAP8[47867] | 0;
 HEAP8[i3 + 1 >> 0] = HEAP8[47868] | 0;
 HEAP8[i3 + 2 >> 0] = HEAP8[47869] | 0;
 HEAP8[i3 + 3 >> 0] = HEAP8[47870] | 0;
 HEAP8[i3 + 4 >> 0] = HEAP8[47871] | 0;
 HEAP8[i3 + 5 >> 0] = HEAP8[47872] | 0;
 i5 = i14 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i3 + 1 | 0, 51791, 0, HEAP32[i5 >> 2] | 0);
 i5 = (HEAP32[i5 >> 2] | 0) >>> 9 & 1;
 i2 = i5 | 12;
 i7 = _llvm_stacksave() | 0;
 i1 = i2;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 i1 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i6 >> 2] = i4;
 i3 = i8 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i8, i2, i1, i3, i6) | 0) | 0;
 i4 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i8, i3, i14) | 0;
 i1 = (i5 << 1 | 21) << 2;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i6, i14);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i8, i4, i3, i2, i9, i10, i6);
 __ZNSt3__26localeD2Ev(i6);
 HEAP32[i11 >> 2] = HEAP32[i13 >> 2];
 i9 = HEAP32[i9 >> 2] | 0;
 i13 = HEAP32[i10 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i11 >> 2];
 i15 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i2, i9, i13, i14, i15) | 0;
 _llvm_stackrestore(i7 | 0);
 STACKTOP = i12;
 return i15 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm(i1, i13, i14, i15, i4) {
 i1 = i1 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i12;
 i3 = i12 + 16 | 0;
 i9 = i12 + 12 | 0;
 i10 = i12 + 4 | 0;
 i11 = i12 + 8 | 0;
 HEAP8[i3 >> 0] = HEAP8[47867] | 0;
 HEAP8[i3 + 1 >> 0] = HEAP8[47868] | 0;
 HEAP8[i3 + 2 >> 0] = HEAP8[47869] | 0;
 HEAP8[i3 + 3 >> 0] = HEAP8[47870] | 0;
 HEAP8[i3 + 4 >> 0] = HEAP8[47871] | 0;
 HEAP8[i3 + 5 >> 0] = HEAP8[47872] | 0;
 i5 = i14 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i3 + 1 | 0, 51791, 0, HEAP32[i5 >> 2] | 0);
 i5 = (HEAP32[i5 >> 2] | 0) >>> 9 & 1;
 i2 = i5 | 12;
 i7 = _llvm_stacksave() | 0;
 i1 = i2;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 i1 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i6 >> 2] = i4;
 i3 = i8 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i8, i2, i1, i3, i6) | 0) | 0;
 i4 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i8, i3, i14) | 0;
 i1 = i5 << 1 | 21;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i6, i14);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i8, i4, i3, i2, i9, i10, i6);
 __ZNSt3__26localeD2Ev(i6);
 HEAP32[i11 >> 2] = HEAP32[i13 >> 2];
 i9 = HEAP32[i9 >> 2] | 0;
 i13 = HEAP32[i10 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i11 >> 2];
 i15 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i2, i9, i13, i14, i15) | 0;
 _llvm_stackrestore(i7 | 0);
 STACKTOP = i12;
 return i15 | 0;
}

function __ZN6vision21OrientationAssignment16computeGradientsEPKNS_25GaussianScaleSpacePyramidE(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i6;
 i3 = i1 + 40 | 0;
 i1 = 0;
 while (1) {
  i2 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv(i4) | 0;
  if (i1 >>> 0 >= (HEAP32[i2 + 4 >> 2] | 0) - (HEAP32[i2 >> 2] | 0) >> 5 >>> 0) {
   i1 = 3;
   break;
  }
  i2 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv(i4) | 0;
  i2 = (HEAP32[i2 >> 2] | 0) + (i1 << 5) | 0;
  i7 = __ZNK6vision5Image5widthEv(i2) | 0;
  if ((i7 | 0) != ((__ZNK6vision5Image4stepEv(i2) | 0) >>> 2 | 0)) {
   i1 = 5;
   break;
  }
  i9 = __ZN6vision5Image3getIfEEPT_v((HEAP32[i3 >> 2] | 0) + (i1 << 5) | 0) | 0;
  i8 = __ZNK6vision5Image3getIfEEPKT_v(i2) | 0;
  i7 = __ZNK6vision5Image5widthEv(i2) | 0;
  __ZN6vision21ComputePolarGradientsEPfPKfmm(i9, i8, i7, __ZNK6vision5Image6heightEv(i2) | 0);
  i1 = i1 + 1 | 0;
 }
 if ((i1 | 0) == 3) {
  STACKTOP = i6;
  return;
 } else if ((i1 | 0) == 5) {
  i9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 25935) | 0, 25996) | 0, 33655) | 0, 96) | 0, 33662) | 0, 26121) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58792) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb(i1, i9, i2, i3, i5) {
 i1 = i1 | 0;
 i9 = i9 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i4 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i10 + 4 | 0;
 i4 = i10;
 if (!(HEAP32[i2 + 4 >> 2] & 1)) {
  i7 = HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
  i1 = FUNCTION_TABLE_iiiiii[i7 & 31](i1, i8, i2, i3, i5 & 1) | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv(i8, i2);
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58832) | 0;
  __ZNSt3__26localeD2Ev(i8);
  i2 = HEAP32[i1 >> 2] | 0;
  if (i5) FUNCTION_TABLE_vii[HEAP32[i2 + 24 >> 2] & 63](i8, i1); else FUNCTION_TABLE_vii[HEAP32[i2 + 28 >> 2] & 63](i8, i1);
  i6 = i8 + 8 + 3 | 0;
  i1 = HEAP8[i6 >> 0] | 0;
  i2 = HEAP32[i8 >> 2] | 0;
  i7 = i8 + 4 | 0;
  i5 = i1 << 24 >> 24 < 0 ? i2 : i8;
  while (1) {
   i4 = i1 << 24 >> 24 < 0;
   if ((i5 | 0) == ((i4 ? i2 : i8) + ((i4 ? HEAP32[i7 >> 2] | 0 : i1 & 255) << 2) | 0)) break;
   i1 = HEAP32[i5 >> 2] | 0;
   i2 = HEAP32[i9 >> 2] | 0;
   if (i2 | 0) {
    i3 = i2 + 24 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i2 + 28 >> 2] | 0)) {
     i4 = HEAP32[(HEAP32[i2 >> 2] | 0) + 52 >> 2] | 0;
     i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(i1) | 0;
     i1 = FUNCTION_TABLE_iii[i4 & 63](i2, i1) | 0;
    } else {
     HEAP32[i3 >> 2] = i4 + 4;
     HEAP32[i4 >> 2] = i1;
     i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(i1) | 0;
    }
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) HEAP32[i9 >> 2] = 0;
   }
   i5 = i5 + 4 | 0;
   i1 = HEAP8[i6 >> 0] | 0;
   i2 = HEAP32[i8 >> 2] | 0;
  }
  i1 = HEAP32[i9 >> 2] | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i8);
 }
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb(i1, i9, i2, i3, i5) {
 i1 = i1 | 0;
 i9 = i9 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i4 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i10 + 4 | 0;
 i4 = i10;
 if (!(HEAP32[i2 + 4 >> 2] & 1)) {
  i7 = HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
  i1 = FUNCTION_TABLE_iiiiii[i7 & 31](i1, i8, i2, i3, i5 & 1) | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv(i8, i2);
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58808) | 0;
  __ZNSt3__26localeD2Ev(i8);
  i2 = HEAP32[i1 >> 2] | 0;
  if (i5) FUNCTION_TABLE_vii[HEAP32[i2 + 24 >> 2] & 63](i8, i1); else FUNCTION_TABLE_vii[HEAP32[i2 + 28 >> 2] & 63](i8, i1);
  i6 = i8 + 11 | 0;
  i1 = HEAP8[i6 >> 0] | 0;
  i2 = HEAP32[i8 >> 2] | 0;
  i7 = i8 + 4 | 0;
  i5 = i1 << 24 >> 24 < 0 ? i2 : i8;
  while (1) {
   i4 = i1 << 24 >> 24 < 0;
   if ((i5 | 0) == ((i4 ? i2 : i8) + (i4 ? HEAP32[i7 >> 2] | 0 : i1 & 255) | 0)) break;
   i1 = HEAP8[i5 >> 0] | 0;
   i2 = HEAP32[i9 >> 2] | 0;
   if (i2 | 0) {
    i3 = i2 + 24 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i2 + 28 >> 2] | 0)) {
     i4 = HEAP32[(HEAP32[i2 >> 2] | 0) + 52 >> 2] | 0;
     i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(i1) | 0;
     i1 = FUNCTION_TABLE_iii[i4 & 63](i2, i1) | 0;
    } else {
     HEAP32[i3 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i1;
     i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(i1) | 0;
    }
    if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) HEAP32[i9 >> 2] = 0;
   }
   i5 = i5 + 1 | 0;
   i1 = HEAP8[i6 >> 0] | 0;
   i2 = HEAP32[i8 >> 2] | 0;
  }
  i1 = HEAP32[i9 >> 2] | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
 }
 STACKTOP = i10;
 return i1 | 0;
}

function _access_virt_barray(i4, i8, i9, i1, i10) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 i10 = i10 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = i1 + i9 | 0;
 if (!((i6 >>> 0 <= (HEAP32[i8 + 4 >> 2] | 0) >>> 0 ? (HEAP32[i8 + 12 >> 2] | 0) >>> 0 >= i1 >>> 0 : 0) ? (HEAP32[i8 >> 2] | 0) != 0 : 0)) {
  i7 = HEAP32[i4 >> 2] | 0;
  HEAP32[i7 + 20 >> 2] = 22;
  FUNCTION_TABLE_vi[HEAP32[i7 >> 2] & 255](i4);
 }
 i7 = i8 + 24 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 if (!(i3 >>> 0 <= i9 >>> 0 ? i6 >>> 0 <= ((HEAP32[i8 + 16 >> 2] | 0) + i3 | 0) >>> 0 : 0)) {
  if (!(HEAP32[i8 + 40 >> 2] | 0)) {
   i3 = HEAP32[i4 >> 2] | 0;
   HEAP32[i3 + 20 >> 2] = 69;
   FUNCTION_TABLE_vi[HEAP32[i3 >> 2] & 255](i4);
  }
  i1 = i8 + 36 | 0;
  if (HEAP32[i1 >> 2] | 0) {
   _do_barray_io(i4, i8, 1);
   HEAP32[i1 >> 2] = 0;
  }
  if ((HEAP32[i7 >> 2] | 0) >>> 0 < i9 >>> 0) i1 = i9; else {
   i1 = i6 - (HEAP32[i8 + 16 >> 2] | 0) | 0;
   i1 = (i1 | 0) > 0 ? i1 : 0;
  }
  HEAP32[i7 >> 2] = i1;
  _do_barray_io(i4, i8, 0);
 }
 i3 = i8 + 28 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 L21 : do if (i1 >>> 0 < i6 >>> 0) {
  i2 = (i10 | 0) == 0;
  if (i1 >>> 0 < i9 >>> 0) if (i2) {
   i1 = i9;
   i2 = 0;
  } else {
   i1 = HEAP32[i4 >> 2] | 0;
   HEAP32[i1 + 20 >> 2] = 22;
   FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i4);
   i1 = i9;
   i5 = 19;
  } else if (i2) i2 = 0; else i5 = 19;
  if ((i5 | 0) == 19) {
   HEAP32[i3 >> 2] = i6;
   i2 = 1;
  }
  if (!(HEAP32[i8 + 32 >> 2] | 0)) {
   if (i2) break;
   i6 = HEAP32[i4 >> 2] | 0;
   HEAP32[i6 + 20 >> 2] = 22;
   FUNCTION_TABLE_vi[HEAP32[i6 >> 2] & 255](i4);
   break;
  }
  i3 = HEAP32[i8 + 8 >> 2] << 7;
  i5 = HEAP32[i7 >> 2] | 0;
  i2 = i6 - i5 | 0;
  i1 = i1 - i5 | 0;
  while (1) {
   if (i1 >>> 0 >= i2 >>> 0) break L21;
   _jzero_far(HEAP32[(HEAP32[i8 >> 2] | 0) + (i1 << 2) >> 2] | 0, i3);
   i1 = i1 + 1 | 0;
  }
 } while (0);
 if (i10 | 0) HEAP32[i8 + 36 >> 2] = 1;
 return (HEAP32[i8 >> 2] | 0) + (i9 - (HEAP32[i7 >> 2] | 0) << 2) | 0;
}

function _access_virt_sarray(i4, i8, i9, i1, i10) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 i10 = i10 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = i1 + i9 | 0;
 if (!((i6 >>> 0 <= (HEAP32[i8 + 4 >> 2] | 0) >>> 0 ? (HEAP32[i8 + 12 >> 2] | 0) >>> 0 >= i1 >>> 0 : 0) ? (HEAP32[i8 >> 2] | 0) != 0 : 0)) {
  i7 = HEAP32[i4 >> 2] | 0;
  HEAP32[i7 + 20 >> 2] = 22;
  FUNCTION_TABLE_vi[HEAP32[i7 >> 2] & 255](i4);
 }
 i7 = i8 + 24 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 if (!(i3 >>> 0 <= i9 >>> 0 ? i6 >>> 0 <= ((HEAP32[i8 + 16 >> 2] | 0) + i3 | 0) >>> 0 : 0)) {
  if (!(HEAP32[i8 + 40 >> 2] | 0)) {
   i3 = HEAP32[i4 >> 2] | 0;
   HEAP32[i3 + 20 >> 2] = 69;
   FUNCTION_TABLE_vi[HEAP32[i3 >> 2] & 255](i4);
  }
  i1 = i8 + 36 | 0;
  if (HEAP32[i1 >> 2] | 0) {
   _do_sarray_io(i4, i8, 1);
   HEAP32[i1 >> 2] = 0;
  }
  if ((HEAP32[i7 >> 2] | 0) >>> 0 < i9 >>> 0) i1 = i9; else {
   i1 = i6 - (HEAP32[i8 + 16 >> 2] | 0) | 0;
   i1 = (i1 | 0) > 0 ? i1 : 0;
  }
  HEAP32[i7 >> 2] = i1;
  _do_sarray_io(i4, i8, 0);
 }
 i3 = i8 + 28 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 L21 : do if (i1 >>> 0 < i6 >>> 0) {
  i2 = (i10 | 0) == 0;
  if (i1 >>> 0 < i9 >>> 0) if (i2) {
   i1 = i9;
   i2 = 0;
  } else {
   i1 = HEAP32[i4 >> 2] | 0;
   HEAP32[i1 + 20 >> 2] = 22;
   FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i4);
   i1 = i9;
   i5 = 19;
  } else if (i2) i2 = 0; else i5 = 19;
  if ((i5 | 0) == 19) {
   HEAP32[i3 >> 2] = i6;
   i2 = 1;
  }
  if (!(HEAP32[i8 + 32 >> 2] | 0)) {
   if (i2) break;
   i6 = HEAP32[i4 >> 2] | 0;
   HEAP32[i6 + 20 >> 2] = 22;
   FUNCTION_TABLE_vi[HEAP32[i6 >> 2] & 255](i4);
   break;
  }
  i3 = HEAP32[i8 + 8 >> 2] | 0;
  i5 = HEAP32[i7 >> 2] | 0;
  i2 = i6 - i5 | 0;
  i1 = i1 - i5 | 0;
  while (1) {
   if (i1 >>> 0 >= i2 >>> 0) break L21;
   _jzero_far(HEAP32[(HEAP32[i8 >> 2] | 0) + (i1 << 2) >> 2] | 0, i3);
   i1 = i1 + 1 | 0;
  }
 } while (0);
 if (i10 | 0) HEAP32[i8 + 36 >> 2] = 1;
 return (HEAP32[i8 >> 2] | 0) + (i9 - (HEAP32[i7 >> 2] | 0) << 2) | 0;
}

function _process_data_context_main(i4, i5, i6, i8) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0, i9 = 0, i10 = 0;
 i9 = HEAP32[i4 + 424 >> 2] | 0;
 i10 = i9 + 48 | 0;
 if (!(HEAP32[i10 >> 2] | 0)) {
  if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 + 428 >> 2] | 0) + 12 >> 2] & 63](i4, HEAP32[i9 + 56 + (HEAP32[i9 + 64 >> 2] << 2) >> 2] | 0) | 0) {
   HEAP32[i10 >> 2] = 1;
   i3 = i9 + 76 | 0;
   HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
   i3 = 4;
  }
 } else i3 = 4;
 L4 : do if ((i3 | 0) == 4) {
  i7 = i9 + 68 | 0;
  switch (HEAP32[i7 >> 2] | 0) {
  case 2:
   {
    i2 = i9 + 52 | 0;
    i1 = i9 + 72 | 0;
    FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[i4 + 432 >> 2] | 0) + 4 >> 2] & 7](i4, HEAP32[i9 + 56 + (HEAP32[i9 + 64 >> 2] << 2) >> 2] | 0, i2, HEAP32[i1 >> 2] | 0, i5, i6, i8);
    if ((HEAP32[i2 >> 2] | 0) >>> 0 < (HEAP32[i1 >> 2] | 0) >>> 0) break L4;
    HEAP32[i7 >> 2] = 0;
    if ((HEAP32[i6 >> 2] | 0) >>> 0 < i8 >>> 0) i3 = 9; else break L4;
    break;
   }
  case 0:
   {
    i1 = i9 + 72 | 0;
    i2 = i9 + 52 | 0;
    i3 = 9;
    break;
   }
  case 1:
   {
    i2 = i9 + 52 | 0;
    i1 = i9 + 72 | 0;
    break;
   }
  default:
   break L4;
  }
  if ((i3 | 0) == 9) {
   HEAP32[i2 >> 2] = 0;
   HEAP32[i1 >> 2] = (HEAP32[i4 + 316 >> 2] | 0) + -1;
   if ((HEAP32[i9 + 76 >> 2] | 0) == (HEAP32[i4 + 320 >> 2] | 0)) _set_bottom_pointers(i4);
   HEAP32[i7 >> 2] = 1;
  }
  i3 = i9 + 64 | 0;
  FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[i4 + 432 >> 2] | 0) + 4 >> 2] & 7](i4, HEAP32[i9 + 56 + (HEAP32[i3 >> 2] << 2) >> 2] | 0, i2, HEAP32[i1 >> 2] | 0, i5, i6, i8);
  if ((HEAP32[i2 >> 2] | 0) >>> 0 >= (HEAP32[i1 >> 2] | 0) >>> 0) {
   if ((HEAP32[i9 + 76 >> 2] | 0) == 1) _set_wraparound_pointers(i4);
   HEAP32[i3 >> 2] = HEAP32[i3 >> 2] ^ 1;
   HEAP32[i10 >> 2] = 0;
   i10 = HEAP32[i4 + 316 >> 2] | 0;
   HEAP32[i2 >> 2] = i10 + 1;
   HEAP32[i1 >> 2] = i10 + 2;
   HEAP32[i7 >> 2] = 2;
  }
 } while (0);
 return;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(i9, i7, i10) {
 i9 = i9 | 0;
 i7 = i7 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i11 = 0;
 i1 = i7;
 i11 = (i10 - i1 | 0) / 20 | 0;
 i2 = i9 + 8 | 0;
 i5 = HEAP32[i9 >> 2] | 0;
 i3 = i5;
 do if (i11 >>> 0 > (((HEAP32[i2 >> 2] | 0) - i5 | 0) / 20 | 0) >>> 0) {
  __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE10deallocateEv(i9);
  i1 = __ZNKSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8max_sizeEv(i9) | 0;
  if (i1 >>> 0 < i11 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i9); else {
   i6 = ((HEAP32[i2 >> 2] | 0) - (HEAP32[i9 >> 2] | 0) | 0) / 20 | 0;
   i8 = i6 << 1;
   __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8allocateEm(i9, i6 >>> 0 < i1 >>> 1 >>> 0 ? (i8 >>> 0 < i11 >>> 0 ? i11 : i8) : i1);
   __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_m(i9, i7, i10, i11);
   break;
  }
 } else {
  i8 = i9 + 4 | 0;
  i6 = ((HEAP32[i8 >> 2] | 0) - i5 | 0) / 20 | 0;
  i4 = i11 >>> 0 > i6 >>> 0;
  i6 = i4 ? i7 + (i6 * 20 | 0) | 0 : i10;
  i1 = i6 - i1 | 0;
  if (i1 | 0) _memmove(i5 | 0, i7 | 0, i1 | 0) | 0;
  i2 = i3 + (((i1 | 0) / 20 | 0) * 20 | 0) | 0;
  if (i4) {
   __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_m(i9, i6, i10, i11 - (((HEAP32[i8 >> 2] | 0) - (HEAP32[i9 >> 2] | 0) | 0) / 20 | 0) | 0);
   break;
  }
  i1 = HEAP32[i8 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i2 | 0)) break;
   i11 = i1 + -20 | 0;
   __ZN6vision12FeaturePointD2Ev(i11);
   i1 = i11;
  }
  HEAP32[i8 >> 2] = i2;
 } while (0);
 return;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx(i1, i14, i15, i16, i4, i5) {
 i1 = i1 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i17 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i7 = i13 + 8 | 0;
 i3 = i13;
 i10 = i13 + 24 | 0;
 i11 = i13 + 16 | 0;
 i12 = i13 + 20 | 0;
 i6 = i3;
 HEAP32[i6 >> 2] = 37;
 HEAP32[i6 + 4 >> 2] = 0;
 i6 = i15 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i3 + 1 | 0, 51796, 1, HEAP32[i6 >> 2] | 0);
 i6 = (HEAP32[i6 >> 2] | 0) >>> 9 & 1;
 i2 = i6 + 23 | 0;
 i8 = _llvm_stacksave() | 0;
 i1 = i2;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 i1 = __ZNSt3__26__clocEv() | 0;
 i17 = i7;
 HEAP32[i17 >> 2] = i4;
 HEAP32[i17 + 4 >> 2] = i5;
 i3 = i9 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i9, i2, i1, i3, i7) | 0) | 0;
 i4 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i9, i3, i15) | 0;
 i1 = (i6 << 1 | 44) + -1 << 2;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i7, i15);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i9, i4, i3, i2, i10, i11, i7);
 __ZNSt3__26localeD2Ev(i7);
 HEAP32[i12 >> 2] = HEAP32[i14 >> 2];
 i14 = HEAP32[i10 >> 2] | 0;
 i17 = HEAP32[i11 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i12 >> 2];
 i17 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i7, i2, i14, i17, i15, i16) | 0;
 _llvm_stackrestore(i8 | 0);
 STACKTOP = i13;
 return i17 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx(i1, i14, i15, i16, i4, i5) {
 i1 = i1 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i17 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i7 = i13 + 8 | 0;
 i3 = i13;
 i10 = i13 + 24 | 0;
 i11 = i13 + 16 | 0;
 i12 = i13 + 20 | 0;
 i6 = i3;
 HEAP32[i6 >> 2] = 37;
 HEAP32[i6 + 4 >> 2] = 0;
 i6 = i15 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i3 + 1 | 0, 51796, 1, HEAP32[i6 >> 2] | 0);
 i6 = (HEAP32[i6 >> 2] | 0) >>> 9 & 1;
 i2 = i6 + 23 | 0;
 i8 = _llvm_stacksave() | 0;
 i1 = i2;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 i1 = __ZNSt3__26__clocEv() | 0;
 i17 = i7;
 HEAP32[i17 >> 2] = i4;
 HEAP32[i17 + 4 >> 2] = i5;
 i3 = i9 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i9, i2, i1, i3, i7) | 0) | 0;
 i4 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i9, i3, i15) | 0;
 i1 = (i6 << 1 | 44) + -1 | 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i7, i15);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i9, i4, i3, i2, i10, i11, i7);
 __ZNSt3__26localeD2Ev(i7);
 HEAP32[i12 >> 2] = HEAP32[i14 >> 2];
 i14 = HEAP32[i10 >> 2] | 0;
 i17 = HEAP32[i11 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i12 >> 2];
 i17 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i7, i2, i14, i17, i15, i16) | 0;
 _llvm_stackrestore(i8 | 0);
 STACKTOP = i13;
 return i17 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy(i1, i14, i15, i16, i4, i5) {
 i1 = i1 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i17 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i7 = i13 + 8 | 0;
 i3 = i13;
 i10 = i13 + 24 | 0;
 i11 = i13 + 16 | 0;
 i12 = i13 + 20 | 0;
 i6 = i3;
 HEAP32[i6 >> 2] = 37;
 HEAP32[i6 + 4 >> 2] = 0;
 i6 = i15 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i3 + 1 | 0, 51796, 0, HEAP32[i6 >> 2] | 0);
 i6 = (HEAP32[i6 >> 2] | 0) >>> 9 & 1 | 22;
 i2 = i6 + 1 | 0;
 i8 = _llvm_stacksave() | 0;
 i1 = i2;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 i1 = __ZNSt3__26__clocEv() | 0;
 i17 = i7;
 HEAP32[i17 >> 2] = i4;
 HEAP32[i17 + 4 >> 2] = i5;
 i3 = i9 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i9, i2, i1, i3, i7) | 0) | 0;
 i4 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i9, i3, i15) | 0;
 i1 = (i6 << 1) + -1 << 2;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i7, i15);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i9, i4, i3, i2, i10, i11, i7);
 __ZNSt3__26localeD2Ev(i7);
 HEAP32[i12 >> 2] = HEAP32[i14 >> 2];
 i14 = HEAP32[i10 >> 2] | 0;
 i17 = HEAP32[i11 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i12 >> 2];
 i17 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i7, i2, i14, i17, i15, i16) | 0;
 _llvm_stackrestore(i8 | 0);
 STACKTOP = i13;
 return i17 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy(i1, i14, i15, i16, i4, i5) {
 i1 = i1 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i17 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i7 = i13 + 8 | 0;
 i3 = i13;
 i10 = i13 + 24 | 0;
 i11 = i13 + 16 | 0;
 i12 = i13 + 20 | 0;
 i6 = i3;
 HEAP32[i6 >> 2] = 37;
 HEAP32[i6 + 4 >> 2] = 0;
 i6 = i15 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i3 + 1 | 0, 51796, 0, HEAP32[i6 >> 2] | 0);
 i6 = (HEAP32[i6 >> 2] | 0) >>> 9 & 1 | 22;
 i2 = i6 + 1 | 0;
 i8 = _llvm_stacksave() | 0;
 i1 = i2;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 i1 = __ZNSt3__26__clocEv() | 0;
 i17 = i7;
 HEAP32[i17 >> 2] = i4;
 HEAP32[i17 + 4 >> 2] = i5;
 i3 = i9 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i9, i2, i1, i3, i7) | 0) | 0;
 i4 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i9, i3, i15) | 0;
 i1 = (i6 << 1) + -1 | 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i1 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i1 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i7, i15);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i9, i4, i3, i2, i10, i11, i7);
 __ZNSt3__26localeD2Ev(i7);
 HEAP32[i12 >> 2] = HEAP32[i14 >> 2];
 i14 = HEAP32[i10 >> 2] | 0;
 i17 = HEAP32[i11 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i12 >> 2];
 i17 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i7, i2, i14, i17, i15, i16) | 0;
 _llvm_stackrestore(i8 | 0);
 STACKTOP = i13;
 return i17 | 0;
}

function __ZN6vision16MatrixInverse3x3IfEEbPT_PKS1_S1_(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 var d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 d4 = +__ZN6vision14Determinant3x3IfEET_PKS1_(i2);
 if (!(+Math_abs(+d4) <= d3)) {
  d4 = 1.0 / d4;
  i5 = i2 + 16 | 0;
  i10 = i2 + 20 | 0;
  i9 = i2 + 28 | 0;
  i12 = i2 + 32 | 0;
  d3 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i5 >> 2], +HEAPF32[i10 >> 2], +HEAPF32[i9 >> 2], +HEAPF32[i12 >> 2]);
  HEAPF32[i1 >> 2] = d3;
  i11 = i2 + 8 | 0;
  i7 = i2 + 4 | 0;
  d3 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i11 >> 2], +HEAPF32[i7 >> 2], +HEAPF32[i12 >> 2], +HEAPF32[i9 >> 2]);
  HEAPF32[i1 + 4 >> 2] = d3;
  d3 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i7 >> 2], +HEAPF32[i11 >> 2], +HEAPF32[i5 >> 2], +HEAPF32[i10 >> 2]);
  HEAPF32[i1 + 8 >> 2] = d3;
  i6 = i2 + 12 | 0;
  i8 = i2 + 24 | 0;
  d3 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i10 >> 2], +HEAPF32[i6 >> 2], +HEAPF32[i12 >> 2], +HEAPF32[i8 >> 2]);
  HEAPF32[i1 + 12 >> 2] = d3;
  d3 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i2 >> 2], +HEAPF32[i11 >> 2], +HEAPF32[i8 >> 2], +HEAPF32[i12 >> 2]);
  HEAPF32[i1 + 16 >> 2] = d3;
  d3 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i11 >> 2], +HEAPF32[i2 >> 2], +HEAPF32[i10 >> 2], +HEAPF32[i6 >> 2]);
  HEAPF32[i1 + 20 >> 2] = d3;
  d3 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i6 >> 2], +HEAPF32[i5 >> 2], +HEAPF32[i8 >> 2], +HEAPF32[i9 >> 2]);
  HEAPF32[i1 + 24 >> 2] = d3;
  d3 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i7 >> 2], +HEAPF32[i2 >> 2], +HEAPF32[i9 >> 2], +HEAPF32[i8 >> 2]);
  HEAPF32[i1 + 28 >> 2] = d3;
  d4 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i2 >> 2], +HEAPF32[i7 >> 2], +HEAPF32[i6 >> 2], +HEAPF32[i5 >> 2]);
  HEAPF32[i1 + 32 >> 2] = d4;
  i1 = 1;
 } else i1 = 0;
 return i1 | 0;
}

function _get_interesting_appn(i8) {
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i13;
 i10 = i8 + 24 | 0;
 i11 = HEAP32[i10 >> 2] | 0;
 i12 = i11 + 4 | 0;
 i1 = HEAP32[i12 >> 2] | 0;
 if (!i1) if (!(FUNCTION_TABLE_ii[HEAP32[i11 + 12 >> 2] & 127](i8) | 0)) i1 = 0; else {
  i1 = HEAP32[i12 >> 2] | 0;
  i2 = 4;
 } else i2 = 4;
 L4 : do if ((i2 | 0) == 4) {
  i2 = HEAP32[i11 >> 2] | 0;
  i1 = i1 + -1 | 0;
  i4 = (HEAPU8[i2 >> 0] | 0) << 8;
  if (!i1) {
   i2 = i11 + 12 | 0;
   if (!(FUNCTION_TABLE_ii[HEAP32[i2 >> 2] & 127](i8) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i12 >> 2] | 0;
   i3 = HEAP32[i11 >> 2] | 0;
  } else {
   i3 = i2 + 1 | 0;
   i2 = i11 + 12 | 0;
  }
  i7 = i4 | (HEAPU8[i3 >> 0] | 0);
  i6 = i7 + -2 | 0;
  i7 = i7 >>> 0 > 15 ? 14 : i7 >>> 0 > 2 ? i6 : 0;
  i5 = 0;
  while (1) {
   i1 = i1 + -1 | 0;
   i4 = i3 + 1 | 0;
   if (i5 >>> 0 >= i7 >>> 0) break;
   if (!i1) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i2 >> 2] & 127](i8) | 0)) {
     i1 = 0;
     break L4;
    }
    i1 = HEAP32[i12 >> 2] | 0;
    i3 = HEAP32[i11 >> 2] | 0;
   } else i3 = i4;
   HEAP8[i9 + i5 >> 0] = HEAP8[i3 >> 0] | 0;
   i5 = i5 + 1 | 0;
  }
  i2 = i6 - i7 | 0;
  i3 = HEAP32[i8 + 416 >> 2] | 0;
  switch (i3 | 0) {
  case 224:
   {
    _examine_app0(i8, i9, i7, i2);
    break;
   }
  case 238:
   {
    _examine_app14(i8, i9, i7, i2);
    break;
   }
  default:
   {
    i9 = HEAP32[i8 >> 2] | 0;
    HEAP32[i9 + 20 >> 2] = 68;
    HEAP32[i9 + 24 >> 2] = i3;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i8 >> 2] >> 2] & 255](i8);
   }
  }
  HEAP32[i11 >> 2] = i4;
  HEAP32[i12 >> 2] = i1;
  if ((i2 | 0) > 0) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i10 >> 2] | 0) + 16 >> 2] & 63](i8, i2);
   i1 = 1;
  } else i1 = 1;
 } while (0);
 STACKTOP = i13;
 return i1 | 0;
}

function _prepare_for_output_pass(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = HEAP32[i2 + 420 >> 2] | 0;
 i4 = i3 + 8 | 0;
 if (!(HEAP32[i4 >> 2] | 0)) {
  i1 = i2 + 84 | 0;
  do if (HEAP32[i1 >> 2] | 0 ? (HEAP32[i2 + 136 >> 2] | 0) == 0 : 0) {
   if (HEAP32[i2 + 92 >> 2] | 0 ? HEAP32[i2 + 108 >> 2] | 0 : 0) {
    HEAP32[i2 + 460 >> 2] = HEAP32[i3 + 24 >> 2];
    HEAP32[i4 >> 2] = 1;
    break;
   }
   if (!(HEAP32[i2 + 100 >> 2] | 0)) {
    i7 = HEAP32[i2 >> 2] | 0;
    HEAP32[i7 + 20 >> 2] = 46;
    FUNCTION_TABLE_vi[HEAP32[i7 >> 2] & 255](i2);
    break;
   } else {
    HEAP32[i2 + 460 >> 2] = HEAP32[i3 + 20 >> 2];
    break;
   }
  } while (0);
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i2 + 448 >> 2] >> 2] & 255](i2);
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 + 428 >> 2] | 0) + 8 >> 2] & 255](i2);
  if (!(HEAP32[i2 + 68 >> 2] | 0)) {
   if (!(HEAP32[i3 + 16 >> 2] | 0)) FUNCTION_TABLE_vi[HEAP32[HEAP32[i2 + 456 >> 2] >> 2] & 255](i2);
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i2 + 452 >> 2] >> 2] & 255](i2);
   if (HEAP32[i1 >> 2] | 0) FUNCTION_TABLE_vii[HEAP32[HEAP32[i2 + 460 >> 2] >> 2] & 63](i2, HEAP32[i4 >> 2] | 0);
   FUNCTION_TABLE_vii[HEAP32[HEAP32[i2 + 432 >> 2] >> 2] & 63](i2, (HEAP32[i4 >> 2] | 0) == 0 ? 0 : 3);
   FUNCTION_TABLE_vii[HEAP32[HEAP32[i2 + 424 >> 2] >> 2] & 63](i2, 0);
  }
 } else {
  HEAP32[i4 >> 2] = 0;
  FUNCTION_TABLE_vii[HEAP32[HEAP32[i2 + 460 >> 2] >> 2] & 63](i2, 0);
  FUNCTION_TABLE_vii[HEAP32[HEAP32[i2 + 432 >> 2] >> 2] & 63](i2, 2);
  FUNCTION_TABLE_vii[HEAP32[HEAP32[i2 + 424 >> 2] >> 2] & 63](i2, 2);
 }
 i1 = HEAP32[i2 + 8 >> 2] | 0;
 if ((i1 | 0 ? (i5 = HEAP32[i3 + 12 >> 2] | 0, HEAP32[i1 + 12 >> 2] = i5, i5 = ((HEAP32[i4 >> 2] | 0) == 0 ? 1 : 2) + i5 | 0, i6 = i1 + 16 | 0, HEAP32[i6 >> 2] = i5, HEAP32[i2 + 64 >> 2] | 0) : 0) ? (HEAP32[(HEAP32[i2 + 436 >> 2] | 0) + 20 >> 2] | 0) == 0 : 0) HEAP32[i6 >> 2] = ((HEAP32[i2 + 108 >> 2] | 0) == 0 ? 1 : 2) + i5;
 return;
}

function _arImageProcLumaHistAndBoxFilterWithBias(i15, i14, i3, i16) {
 i15 = i15 | 0;
 i14 = i14 | 0;
 i3 = i3 | 0;
 i16 = i16 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i1 = _arImageProcLumaHist(i15, i14) | 0;
 L1 : do if ((i1 | 0) >= 0) {
  if (!(HEAP32[i15 >> 2] | 0)) {
   i1 = i15 + 4 | 0;
   i2 = i15 + 8 | 0;
   i13 = _malloc(Math_imul(HEAP32[i2 >> 2] | 0, HEAP32[i1 >> 2] | 0) | 0) | 0;
   HEAP32[i15 >> 2] = i13;
   if (!i13) {
    i1 = -1;
    break;
   } else {
    i13 = i1;
    i12 = i2;
   }
  } else {
   i13 = i15 + 4 | 0;
   i12 = i15 + 8 | 0;
  }
  i10 = i3 >> 1;
  i11 = 0 - i10 | 0;
  i9 = 0;
  while (1) {
   i1 = HEAP32[i12 >> 2] | 0;
   if ((i9 | 0) >= (i1 | 0)) break;
   i6 = 0;
   while (1) {
    i8 = HEAP32[i13 >> 2] | 0;
    if ((i6 | 0) >= (i8 | 0)) break;
    i7 = i11;
    i3 = 0;
    i1 = 0;
    while (1) {
     if ((i7 | 0) > (i10 | 0)) break;
     i2 = i7 + i9 | 0;
     L16 : do if ((i2 | 0) >= 0 ? (i2 | 0) < (HEAP32[i12 >> 2] | 0) : 0) {
      i5 = Math_imul(i2, i8) | 0;
      i4 = i11;
      i2 = i3;
      while (1) {
       if ((i4 | 0) > (i10 | 0)) break L16;
       i3 = i4 + i6 | 0;
       if ((i3 | 0) > -1 & (i3 | 0) < (i8 | 0)) {
        i2 = i2 + 1 | 0;
        i1 = i1 + (HEAPU8[i14 + (i3 + i5) >> 0] | 0) | 0;
       }
       i4 = i4 + 1 | 0;
      }
     } else i2 = i3; while (0);
     i7 = i7 + 1 | 0;
     i3 = i2;
    }
    i8 = (HEAP32[i15 >> 2] | 0) + ((Math_imul(i8, i9) | 0) + i6) | 0;
    HEAP8[i8 >> 0] = (i1 | 0) / (i3 | 0) | 0;
    i6 = i6 + 1 | 0;
   }
   i9 = i9 + 1 | 0;
  }
  if (!i16) i1 = 0; else {
   i2 = 0;
   while (1) {
    if ((i2 | 0) >= (Math_imul(i1, HEAP32[i13 >> 2] | 0) | 0)) {
     i1 = 0;
     break L1;
    }
    i1 = (HEAP32[i15 >> 2] | 0) + i2 | 0;
    HEAP8[i1 >> 0] = (HEAPU8[i1 >> 0] | 0) + i16;
    i2 = i2 + 1 | 0;
    i1 = HEAP32[i12 >> 2] | 0;
   }
  }
 } while (0);
 return i1 | 0;
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE24__emplace_back_slow_pathIJRNS2_5arenaILm4096EEEEEEvDpOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i8 + 20 | 0;
 i5 = i8;
 i6 = i1 + 4 | 0;
 i7 = ((HEAP32[i6 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 4) + 1 | 0;
 i3 = __ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE8max_sizeEv(i1) | 0;
 if (i3 >>> 0 < i7 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i9 = HEAP32[i1 >> 2] | 0;
  i11 = (HEAP32[i1 + 8 >> 2] | 0) - i9 | 0;
  i10 = i11 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEEC2EmmSB_(i5, i11 >> 4 >>> 0 < i3 >>> 1 >>> 0 ? (i10 >>> 0 < i7 >>> 0 ? i7 : i10) : i3, (HEAP32[i6 >> 2] | 0) - i9 >> 4, i1 + 12 | 0);
  i7 = i5 + 8 | 0;
  i6 = HEAP32[i7 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE(i4, i2);
  HEAP32[i6 >> 2] = 0;
  HEAP32[i6 + 4 >> 2] = 0;
  HEAP32[i6 + 8 >> 2] = 0;
  HEAP32[i6 + 12 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i7 >> 2] = i6 + 16;
  __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE(i1, i5);
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEED2Ev(i5);
  STACKTOP = i8;
  return;
 }
}

function _arGetTransMatSquare(i3, i4, d1, i5) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 d1 = +d1;
 i5 = i5 | 0;
 var i2 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, d12 = 0.0, i13 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 i6 = i11 + 192 | 0;
 i7 = i11 + 96 | 0;
 i8 = i11 + 264 | 0;
 i9 = i11;
 i10 = i11 + 256 | 0;
 do if ((HEAP32[i4 + 12 >> 2] | 0) >= 0) if ((HEAP32[i4 + 8 >> 2] | 0) < 0) {
  i2 = i4 + 24 | 0;
  break;
 } else {
  i2 = i4 + 16 | 0;
  break;
 } else i2 = i4 + 20 | 0; while (0);
 i2 = HEAP32[i2 >> 2] | 0;
 i13 = (4 - i2 | 0) % 4 | 0;
 HEAPF64[i6 >> 3] = +HEAPF64[i4 + 168 + (i13 << 4) >> 3];
 HEAPF64[i6 + 8 >> 3] = +HEAPF64[i4 + 168 + (i13 << 4) + 8 >> 3];
 i13 = (5 - i2 | 0) % 4 | 0;
 HEAPF64[i6 + 16 >> 3] = +HEAPF64[i4 + 168 + (i13 << 4) >> 3];
 HEAPF64[i6 + 24 >> 3] = +HEAPF64[i4 + 168 + (i13 << 4) + 8 >> 3];
 i13 = (6 - i2 | 0) % 4 | 0;
 HEAPF64[i6 + 32 >> 3] = +HEAPF64[i4 + 168 + (i13 << 4) >> 3];
 HEAPF64[i6 + 40 >> 3] = +HEAPF64[i4 + 168 + (i13 << 4) + 8 >> 3];
 i2 = (7 - i2 | 0) % 4 | 0;
 HEAPF64[i6 + 48 >> 3] = +HEAPF64[i4 + 168 + (i2 << 4) >> 3];
 HEAPF64[i6 + 56 >> 3] = +HEAPF64[i4 + 168 + (i2 << 4) + 8 >> 3];
 d12 = d1 * -.5;
 HEAPF64[i7 >> 3] = d12;
 d1 = d1 * .5;
 HEAPF64[i7 + 8 >> 3] = d1;
 HEAPF64[i7 + 16 >> 3] = 0.0;
 HEAPF64[i7 + 24 >> 3] = d1;
 HEAPF64[i7 + 32 >> 3] = d1;
 HEAPF64[i7 + 40 >> 3] = 0.0;
 HEAPF64[i7 + 48 >> 3] = d1;
 HEAPF64[i7 + 56 >> 3] = d12;
 HEAPF64[i7 + 64 >> 3] = 0.0;
 HEAPF64[i7 + 72 >> 3] = d12;
 HEAPF64[i7 + 80 >> 3] = d12;
 HEAPF64[i7 + 88 >> 3] = 0.0;
 HEAP32[i8 >> 2] = i6;
 HEAP32[i8 + 4 >> 2] = i7;
 HEAP32[i8 + 8 >> 2] = 4;
 if ((_icpGetInitXw2Xc_from_PlanarData(HEAP32[i3 >> 2] | 0, i6, i7, 4, i9) | 0) < 0) d1 = 1.0e8; else {
  i13 = (_icpPoint(HEAP32[i3 >> 2] | 0, i8, i9, i5, i10) | 0) < 0;
  d1 = i13 ? 1.0e8 : +HEAPF64[i10 >> 3];
 }
 STACKTOP = i11;
 return +d1;
}

function __ZL18genBWImageTwoThirdPhiiPiS0_(i10, i11, i1, i2, i3) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i12 = (i11 | 0) / 3 | 0;
 i13 = i12 << 1;
 HEAP32[i2 >> 2] = i13;
 i9 = (i1 | 0) / 3 | 0;
 i8 = i9 << 1;
 HEAP32[i3 >> 2] = i8;
 i8 = _malloc(Math_imul(i8, i13) | 0) | 0;
 if (!i8) {
  _arLog(0, 3, 20581, i14);
  _exit(1);
 }
 i3 = 0;
 i1 = i8;
 i2 = i8;
 while (1) {
  if ((i3 | 0) >= (i9 | 0)) break;
  i7 = i3 * 3 | 0;
  i4 = 0;
  i5 = i10 + (Math_imul(i7 + 2 | 0, i11) | 0) | 0;
  i6 = i10 + (Math_imul(i7 + 1 | 0, i11) | 0) | 0;
  i7 = i10 + (Math_imul(i7, i11) | 0) | 0;
  i2 = i2 + i13 | 0;
  while (1) {
   if ((i4 | 0) >= (i12 | 0)) break;
   i18 = i7 + 1 | 0;
   i16 = i6 + 1 | 0;
   HEAP8[i1 >> 0] = (((HEAPU8[i18 >> 0] | 0) >>> 1 & 255) + (HEAPU8[i7 >> 0] | 0) + ((HEAPU8[i6 >> 0] | 0) >>> 1 & 255) + ((HEAPU8[i16 >> 0] | 0) >>> 2 & 255) << 2 >>> 0) / 9 | 0;
   i15 = i5 + 1 | 0;
   HEAP8[i2 >> 0] = ((((HEAPU8[i16 >> 0] | 0) >>> 2) + ((HEAPU8[i6 >> 0] | 0) >>> 1) & 255) + (HEAPU8[i5 >> 0] | 0) + ((HEAPU8[i15 >> 0] | 0) >>> 1 & 255) << 2 >>> 0) / 9 | 0;
   i17 = i6 + 2 | 0;
   HEAP8[i1 + 1 >> 0] = (((HEAPU8[i18 >> 0] | 0) >>> 1 & 255) + (HEAPU8[i7 + 2 >> 0] | 0) + ((HEAPU8[i16 >> 0] | 0) >>> 2 & 255) + ((HEAPU8[i17 >> 0] | 0) >>> 1 & 255) << 2 >>> 0) / 9 | 0;
   HEAP8[i2 + 1 >> 0] = ((((HEAPU8[i17 >> 0] | 0) >>> 1) + ((HEAPU8[i16 >> 0] | 0) >>> 2) & 255) + ((HEAPU8[i15 >> 0] | 0) >>> 1 & 255) + (HEAPU8[i5 + 2 >> 0] | 0) << 2 >>> 0) / 9 | 0;
   i4 = i4 + 1 | 0;
   i5 = i5 + 3 | 0;
   i6 = i6 + 3 | 0;
   i7 = i7 + 3 | 0;
   i1 = i1 + 2 | 0;
   i2 = i2 + 2 | 0;
  }
  i3 = i3 + 1 | 0;
  i1 = i1 + i13 | 0;
 }
 STACKTOP = i14;
 return i8 | 0;
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i8 + 20 | 0;
 i5 = i8;
 i6 = i1 + 4 | 0;
 i7 = ((HEAP32[i6 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 4) + 1 | 0;
 i3 = __ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE8max_sizeEv(i1) | 0;
 if (i3 >>> 0 < i7 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i9 = HEAP32[i1 >> 2] | 0;
  i11 = (HEAP32[i1 + 8 >> 2] | 0) - i9 | 0;
  i10 = i11 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEEC2EmmSB_(i5, i11 >> 4 >>> 0 < i3 >>> 1 >>> 0 ? (i10 >>> 0 < i7 >>> 0 ? i7 : i10) : i3, (HEAP32[i6 >> 2] | 0) - i9 >> 4, i1 + 12 | 0);
  i7 = i5 + 8 | 0;
  i6 = HEAP32[i7 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2IS4_EERKNS1_IT_Lm4096EEE(i4, i2);
  HEAP32[i6 >> 2] = 0;
  HEAP32[i6 + 4 >> 2] = 0;
  HEAP32[i6 + 8 >> 2] = 0;
  HEAP32[i6 + 12 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i7 >> 2] = i6 + 16;
  __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE(i1, i5);
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEED2Ev(i5);
  STACKTOP = i8;
  return;
 }
}

function __ZN6vision27OrthogonalizePivot8x9Basis1IfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i5;
 i3 = i1 + 36 | 0;
 i4 = i2 + 36 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i3, i1, i4);
 i13 = i1 + 72 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i13, i1, i2 + 72 | 0);
 i12 = i1 + 108 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i12, i1, i2 + 108 | 0);
 i11 = i1 + 144 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i11, i1, i2 + 144 | 0);
 i10 = i1 + 180 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i10, i1, i2 + 180 | 0);
 i9 = i1 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i9, i1, i2 + 216 | 0);
 i8 = i1 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i8, i1, i2 + 252 | 0);
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i3);
 HEAPF32[i6 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i13);
 HEAPF32[i6 + 4 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i12);
 HEAPF32[i6 + 8 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i11);
 HEAPF32[i6 + 12 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i10);
 HEAPF32[i6 + 16 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i9);
 HEAPF32[i6 + 20 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i8);
 HEAPF32[i6 + 24 >> 2] = d7;
 i1 = __ZN6vision9MaxIndex7IfEEiPKT_(i6) | 0;
 i2 = i6 + (i1 << 2) | 0;
 if (+HEAPF32[i2 >> 2] == 0.0) i1 = 0; else {
  i1 = i1 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_(i3, i3 + (i1 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_(i4, i4 + (i1 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_(i3, i3, 1.0 / +Math_sqrt(+(+HEAPF32[i2 >> 2])));
  i1 = 1;
 }
 STACKTOP = i5;
 return i1 | 0;
}

function _ar2GenImageLayer2(i14, d15) {
 i14 = i14 | 0;
 d15 = +d15;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, d23 = 0.0, i24 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i19 = i14 + 4 | 0;
 i20 = i14 + 12 | 0;
 d23 = +HEAPF32[i20 >> 2];
 i21 = _lroundf(+(HEAP32[i19 >> 2] | 0) * d15 / d23) | 0;
 i16 = i14 + 8 | 0;
 i17 = _lroundf(+(HEAP32[i16 >> 2] | 0) * d15 / d23) | 0;
 i18 = _malloc(16) | 0;
 if (!i18) {
  _arLog(0, 3, 20581, i22);
  _exit(1);
 }
 HEAP32[i18 + 4 >> 2] = i21;
 HEAP32[i18 + 8 >> 2] = i17;
 HEAPF32[i18 + 12 >> 2] = d15;
 i1 = _malloc(Math_imul(i17, i21) | 0) | 0;
 HEAP32[i18 >> 2] = i1;
 if (!i1) {
  _arLog(0, 3, 20581, i22 + 8 | 0);
  _exit(1);
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) >= (i17 | 0)) break;
  d23 = +HEAPF32[i20 >> 2];
  i13 = _lroundf(d23 * +(i2 | 0) / d15) | 0;
  i2 = i2 + 1 | 0;
  i12 = _lroundf(d23 * +(i2 | 0) / d15) | 0;
  i3 = HEAP32[i16 >> 2] | 0;
  i12 = (i12 | 0) > (i3 | 0) ? i3 : i12;
  i3 = 0;
  while (1) {
   if ((i3 | 0) >= (i21 | 0)) break;
   d23 = +HEAPF32[i20 >> 2];
   i11 = _lroundf(d23 * +(i3 | 0) / d15) | 0;
   i3 = i3 + 1 | 0;
   i10 = _lroundf(d23 * +(i3 | 0) / d15) | 0;
   i9 = HEAP32[i19 >> 2] | 0;
   i10 = (i10 | 0) > (i9 | 0) ? i9 : i10;
   i4 = 0;
   i5 = 0;
   i6 = i13;
   while (1) {
    if ((i6 | 0) >= (i12 | 0)) break;
    i7 = i11;
    i8 = (HEAP32[i14 >> 2] | 0) + ((Math_imul(i6, i9) | 0) + i11) | 0;
    while (1) {
     if ((i7 | 0) >= (i10 | 0)) break;
     i24 = i4 + (HEAPU8[i8 >> 0] | 0) | 0;
     i7 = i7 + 1 | 0;
     i8 = i8 + 1 | 0;
     i4 = i24;
     i5 = i5 + 1 | 0;
    }
    i6 = i6 + 1 | 0;
   }
   HEAP8[i1 >> 0] = (i4 | 0) / (i5 | 0) | 0;
   i1 = i1 + 1 | 0;
  }
 }
 STACKTOP = i22;
 return i18 | 0;
}

function __ZN6vision11FindInliersERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEEPKfRKNS1_INS_12FeaturePointENS3_IS9_EEEESD_RKS5_f(i9, i10, i11, i12, i13, d1) {
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i14 = 0, i15 = 0, d16 = 0.0, i17 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i14 = i15;
 d1 = +__ZN6vision3sqrIfEET_S1_(d1);
 i8 = i13 + 4 | 0;
 __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm(i9, (HEAP32[i8 >> 2] | 0) - (HEAP32[i13 >> 2] | 0) >> 3);
 i5 = i14 + 4 | 0;
 i6 = i9 + 4 | 0;
 i7 = i9 + 8 | 0;
 i4 = 0;
 while (1) {
  i2 = HEAP32[i13 >> 2] | 0;
  if (i4 >>> 0 >= (HEAP32[i8 >> 2] | 0) - i2 >> 3 >>> 0) break;
  i3 = HEAP32[i2 + (i4 << 3) + 4 >> 2] | 0;
  i2 = HEAP32[i12 >> 2] | 0;
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvRT_S2_PKS1_S1_S1_(i14, i5, i10, +HEAPF32[i2 + (i3 * 20 | 0) >> 2], +HEAPF32[i2 + (i3 * 20 | 0) + 4 >> 2]);
  d16 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[i14 >> 2] - +HEAPF32[(HEAP32[i11 >> 2] | 0) + ((HEAP32[(HEAP32[i13 >> 2] | 0) + (i4 << 3) >> 2] | 0) * 20 | 0) >> 2]);
  do if (d16 + +__ZN6vision3sqrIfEET_S1_(+HEAPF32[i5 >> 2] - +HEAPF32[(HEAP32[i11 >> 2] | 0) + ((HEAP32[(HEAP32[i13 >> 2] | 0) + (i4 << 3) >> 2] | 0) * 20 | 0) + 4 >> 2]) <= d1) {
   i2 = (HEAP32[i13 >> 2] | 0) + (i4 << 3) | 0;
   i3 = HEAP32[i6 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i7 >> 2] | 0)) {
    __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i9, i2);
    break;
   } else {
    i17 = i2;
    i2 = HEAP32[i17 + 4 >> 2] | 0;
    HEAP32[i3 >> 2] = HEAP32[i17 >> 2];
    HEAP32[i3 + 4 >> 2] = i2;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 8;
    break;
   }
  } while (0);
  i4 = i4 + 1 | 0;
 }
 STACKTOP = i15;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(i12, i13, i1) {
 i12 = i12 | 0;
 i13 = i13 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i11 = HEAP32[i1 >> 2] | 0;
 i8 = HEAP32[i13 + 4 >> 2] | 0;
 i1 = HEAP32[i11 + 4 >> 2] | 0;
 i9 = i8 + -1 | 0;
 i5 = (i9 & i8 | 0) == 0;
 if (!i5) if (i1 >>> 0 < i8 >>> 0) i6 = i1; else i6 = (i1 >>> 0) % (i8 >>> 0) | 0; else i6 = i9 & i1;
 i2 = (HEAP32[i13 >> 2] | 0) + (i6 << 2) | 0;
 i10 = HEAP32[i2 >> 2] | 0;
 while (1) {
  i1 = HEAP32[i10 >> 2] | 0;
  if ((i1 | 0) == (i11 | 0)) break; else i10 = i1;
 }
 i7 = i13 + 8 | 0;
 if ((i10 | 0) != (i7 | 0)) {
  i1 = HEAP32[i10 + 4 >> 2] | 0;
  if (!i5) {
   if (i1 >>> 0 >= i8 >>> 0) i1 = (i1 >>> 0) % (i8 >>> 0) | 0;
  } else i1 = i1 & i9;
  if ((i1 | 0) == (i6 | 0)) i3 = i11; else i4 = 14;
 } else i4 = 14;
 do if ((i4 | 0) == 14) {
  i1 = HEAP32[i11 >> 2] | 0;
  if (i1 | 0) {
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   if (!i5) {
    if (i1 >>> 0 >= i8 >>> 0) i1 = (i1 >>> 0) % (i8 >>> 0) | 0;
   } else i1 = i1 & i9;
   if ((i1 | 0) == (i6 | 0)) {
    i3 = i11;
    break;
   }
  }
  HEAP32[i2 >> 2] = 0;
  i3 = i11;
 } while (0);
 i2 = HEAP32[i3 >> 2] | 0;
 i1 = i2;
 if (i2) {
  i2 = HEAP32[i2 + 4 >> 2] | 0;
  if (!i5) {
   if (i2 >>> 0 >= i8 >>> 0) i2 = (i2 >>> 0) % (i8 >>> 0) | 0;
  } else i2 = i2 & i9;
  if ((i2 | 0) != (i6 | 0)) {
   HEAP32[(HEAP32[i13 >> 2] | 0) + (i2 << 2) >> 2] = i10;
   i1 = HEAP32[i11 >> 2] | 0;
  }
 }
 HEAP32[i10 >> 2] = i1;
 HEAP32[i3 >> 2] = 0;
 i13 = i13 + 12 | 0;
 HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + -1;
 HEAP32[i12 >> 2] = i11;
 HEAP32[i12 + 4 >> 2] = i7;
 HEAP8[i12 + 8 >> 0] = 1;
 return;
}

function _getMarkerInfo(i1, i3) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i4;
 HEAP32[i2 >> 2] = i1;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0) {
  i1 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0) + 216 | 0;
  i1 = HEAP32[i1 >> 2] | 0;
  if ((HEAP32[i1 + 44 >> 2] | 0) > (i3 | 0)) {
   i1 = (i3 | 0) < 0 ? 56104 : i1 + 48 + (i3 << 8) | 0;
   _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi(2, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0, HEAP32[i1 + 8 >> 2] | 0, HEAP32[i1 + 12 >> 2] | 0, HEAP32[i1 + 16 >> 2] | 0, HEAP32[i1 + 20 >> 2] | 0, HEAP32[i1 + 24 >> 2] | 0, +(+HEAPF64[i1 + 32 >> 3]), +(+HEAPF64[i1 + 40 >> 3]), +(+HEAPF64[i1 + 48 >> 3]), +(+HEAPF64[i1 + 56 >> 3]), +(+HEAPF64[i1 + 64 >> 3]), +(+HEAPF64[i1 + 72 >> 3]), +(+HEAPF64[i1 + 80 >> 3]), +(+HEAPF64[i1 + 88 >> 3]), +(+HEAPF64[i1 + 96 >> 3]), +(+HEAPF64[i1 + 104 >> 3]), +(+HEAPF64[i1 + 112 >> 3]), +(+HEAPF64[i1 + 120 >> 3]), +(+HEAPF64[i1 + 128 >> 3]), +(+HEAPF64[i1 + 136 >> 3]), +(+HEAPF64[i1 + 144 >> 3]), +(+HEAPF64[i1 + 152 >> 3]), +(+HEAPF64[i1 + 160 >> 3]), +(+HEAPF64[i1 + 168 >> 3]), +(+HEAPF64[i1 + 176 >> 3]), +(+HEAPF64[i1 + 184 >> 3]), +(+HEAPF64[i1 + 192 >> 3]), +(+HEAPF64[i1 + 200 >> 3]), +(+HEAPF64[i1 + 208 >> 3]), +(+HEAPF64[i1 + 216 >> 3]), +(+HEAPF64[i1 + 224 >> 3]), HEAP32[i1 + 240 >> 2] | 0) | 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[3415] | 0;
   break;
  }
 } else i1 = HEAP32[3413] | 0; while (0);
 STACKTOP = i4;
 return i1 | 0;
}

function __ZNSt3__211__sift_downIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_(i3, i1, i2, i12, i13) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i14 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i10;
 i7 = HEAP32[i13 >> 2] | 0;
 i8 = HEAP32[i3 >> 2] | 0;
 i1 = i7 - i8 | 0;
 i6 = i7;
 i5 = i7;
 if ((i12 | 0) >= 2 ? (i11 = (i12 + -2 | 0) / 2 | 0, (i11 | 0) >= (i1 >> 3 | 0)) : 0) {
  i1 = i1 >> 2 | 1;
  i3 = i8 + (i1 << 3) | 0;
  i2 = i3;
  i4 = i1 + 1 | 0;
  if ((i4 | 0) < (i12 | 0)) {
   i14 = i3 + 8 | 0;
   i3 = __ZNK6vision17PriorityQueueItemILi96EEltERKS1_(i3, i14) | 0;
   i1 = i3 ? i4 : i1;
   i2 = i3 ? i14 : i2;
  }
  if (!(__ZNK6vision17PriorityQueueItemILi96EEltERKS1_(i2, i6) | 0)) {
   i14 = HEAP32[i7 + 4 >> 2] | 0;
   i6 = i9;
   HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i6 + 4 >> 2] = i14;
   i6 = i2;
   while (1) {
    i14 = i5;
    i5 = i6;
    i4 = i5;
    i7 = HEAP32[i4 + 4 >> 2] | 0;
    HEAP32[i14 >> 2] = HEAP32[i4 >> 2];
    HEAP32[i14 + 4 >> 2] = i7;
    HEAP32[i13 >> 2] = i6;
    if ((i11 | 0) < (i1 | 0)) break;
    i1 = i1 << 1 | 1;
    i3 = i8 + (i1 << 3) | 0;
    i2 = i3;
    i4 = i1 + 1 | 0;
    if ((i4 | 0) < (i12 | 0)) {
     i14 = i3 + 8 | 0;
     i7 = __ZNK6vision17PriorityQueueItemILi96EEltERKS1_(i3, i14) | 0;
     i1 = i7 ? i4 : i1;
     i2 = i7 ? i14 : i2;
    }
    if (__ZNK6vision17PriorityQueueItemILi96EEltERKS1_(i2, i9) | 0) break; else i6 = i2;
   }
   i12 = i9;
   i13 = HEAP32[i12 + 4 >> 2] | 0;
   i14 = i6;
   HEAP32[i14 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i14 + 4 >> 2] = i13;
   __ZN6vision17PriorityQueueItemILi96EED2Ev(i9);
  }
 }
 STACKTOP = i10;
 return;
}

function _next_marker(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i8 = HEAP32[i7 + 24 >> 2] | 0;
 i9 = i8 + 4 | 0;
 i6 = i8 + 12 | 0;
 i10 = i7 + 440 | 0;
 i1 = HEAP32[i9 >> 2] | 0;
 i2 = HEAP32[i8 >> 2] | 0;
 L1 : while (1) {
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i6 >> 2] & 127](i7) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i9 >> 2] | 0;
   i2 = HEAP32[i8 >> 2] | 0;
  }
  while (1) {
   i1 = i1 + -1 | 0;
   i3 = i2 + 1 | 0;
   if ((HEAP8[i2 >> 0] | 0) == -1) break;
   i5 = (HEAP32[i10 >> 2] | 0) + 24 | 0;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
   HEAP32[i8 >> 2] = i3;
   HEAP32[i9 >> 2] = i1;
   if (!i1) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i6 >> 2] & 127](i7) | 0)) {
     i1 = 0;
     break L1;
    }
    i1 = HEAP32[i9 >> 2] | 0;
    i2 = HEAP32[i8 >> 2] | 0;
   } else i2 = i3;
  }
  i5 = i1;
  i2 = i3;
  do {
   if (!i5) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i6 >> 2] & 127](i7) | 0)) {
     i1 = 0;
     break L1;
    }
    i1 = HEAP32[i9 >> 2] | 0;
    i3 = HEAP32[i8 >> 2] | 0;
   } else {
    i1 = i5;
    i3 = i2;
   }
   i5 = i1 + -1 | 0;
   i2 = i3 + 1 | 0;
   i1 = HEAP8[i3 >> 0] | 0;
  } while (i1 << 24 >> 24 == -1);
  i3 = (HEAP32[i10 >> 2] | 0) + 24 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  if (i1 << 24 >> 24) {
   i11 = 18;
   break;
  }
  HEAP32[i3 >> 2] = i4 + 2;
  HEAP32[i8 >> 2] = i2;
  HEAP32[i9 >> 2] = i5;
  i1 = i5;
 }
 if ((i11 | 0) == 18) {
  i1 = i1 & 255;
  if (i4 | 0) {
   i11 = HEAP32[i7 >> 2] | 0;
   HEAP32[i11 + 20 >> 2] = 116;
   HEAP32[i11 + 24 >> 2] = i4;
   HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] = i1;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i7 >> 2] | 0) + 4 >> 2] & 63](i7, -1);
   HEAP32[(HEAP32[i10 >> 2] | 0) + 24 >> 2] = 0;
  }
  HEAP32[i7 + 416 >> 2] = i1;
  HEAP32[i8 >> 2] = i2;
  HEAP32[i9 >> 2] = i5;
  i1 = 1;
 }
 return i1 | 0;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = ((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 4) + 1 | 0;
 i6 = __ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] | 0) - i8 | 0;
  i9 = i10 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEEC2EmmS9_(i3, i10 >> 4 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, (HEAP32[i4 >> 2] | 0) - i8 >> 4, i1 + 12 | 0);
  i6 = i3 + 8 | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  HEAP32[i5 >> 2] = 0;
  i8 = i5 + 4 | 0;
  HEAP32[i8 >> 2] = 0;
  i9 = i5 + 8 | 0;
  HEAP32[i9 >> 2] = 0;
  HEAP32[i5 + 12 >> 2] = HEAP32[i2 + 12 >> 2];
  HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
  i4 = i2 + 4 | 0;
  HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
  i8 = i2 + 8 | 0;
  HEAP32[i9 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i8 >> 2] = 0;
  HEAP32[i4 >> 2] = 0;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i6 >> 2] = i5 + 16;
  __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i1, i3);
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function _mbrtowc(i2, i4, i6, i1) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i3 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i9;
 i7 = (i1 | 0) == 0 ? 57204 : i1;
 i1 = HEAP32[i7 >> 2] | 0;
 L1 : do if (!i4) if (!i1) i1 = 0; else i8 = 19; else {
  i5 = (i2 | 0) == 0 ? i3 : i2;
  if (!i6) i1 = -2; else {
   if (!i1) {
    i1 = HEAP8[i4 >> 0] | 0;
    if (i1 << 24 >> 24 > -1) {
     HEAP32[i5 >> 2] = i1 & 255;
     i1 = i1 << 24 >> 24 != 0 & 1;
     break;
    }
    i3 = (___pthread_self_303() | 0) + 188 | 0;
    i1 = HEAP8[i4 >> 0] | 0;
    if (!(HEAP32[HEAP32[i3 >> 2] >> 2] | 0)) {
     HEAP32[i5 >> 2] = i1 << 24 >> 24 & 57343;
     i1 = 1;
     break;
    }
    i1 = (i1 & 255) + -194 | 0;
    if (i1 >>> 0 > 50) {
     i8 = 19;
     break;
    }
    i1 = HEAP32[3472 + (i1 << 2) >> 2] | 0;
    i3 = i6 + -1 | 0;
    if (i3) {
     i4 = i4 + 1 | 0;
     i8 = 11;
    }
   } else {
    i3 = i6;
    i8 = 11;
   }
   L14 : do if ((i8 | 0) == 11) {
    i2 = HEAPU8[i4 >> 0] | 0;
    i10 = i2 >>> 3;
    if ((i10 + -16 | i10 + (i1 >> 26)) >>> 0 > 7) {
     i8 = 19;
     break L1;
    }
    i1 = i2 + -128 | i1 << 6;
    i2 = i3 + -1 | 0;
    if ((i1 | 0) < 0) do {
     i4 = i4 + 1 | 0;
     if (!i2) break L14;
     i3 = HEAP8[i4 >> 0] | 0;
     if ((i3 & -64) << 24 >> 24 != -128) {
      i8 = 19;
      break L1;
     }
     i1 = (i3 & 255) + -128 | i1 << 6;
     i2 = i2 + -1 | 0;
    } while ((i1 | 0) < 0);
    HEAP32[i7 >> 2] = 0;
    HEAP32[i5 >> 2] = i1;
    i1 = i6 - i2 | 0;
    break L1;
   } while (0);
   HEAP32[i7 >> 2] = i1;
   i1 = -2;
  }
 } while (0);
 if ((i8 | 0) == 19) {
  HEAP32[i7 >> 2] = 0;
  i1 = ___errno_location() | 0;
  HEAP32[i1 >> 2] = 84;
  i1 = -1;
 }
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__210__stdinbufIwE9pbackfailEj(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i10 + 16 | 0;
 i6 = i10 + 8 | 0;
 i2 = i10 + 4 | 0;
 i3 = i10;
 i7 = __ZNSt3__211char_traitsIwE11eq_int_typeEjj(i8, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0;
 i9 = i4 + 52 | 0;
 i1 = (HEAP8[i9 >> 0] | 0) != 0;
 do if (i7) if (i1) i1 = i8; else {
  i1 = HEAP32[i4 + 48 >> 2] | 0;
  i8 = ((__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) ^ 1) & 1;
  HEAP8[i9 >> 0] = i8;
 } else {
  if (i1) {
   i7 = i4 + 48 | 0;
   i1 = __ZNSt3__211char_traitsIwE12to_char_typeEj(HEAP32[i7 >> 2] | 0) | 0;
   HEAP32[i2 >> 2] = i1;
   i1 = HEAP32[i4 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 15](i1, HEAP32[i4 + 40 >> 2] | 0, i2, i2 + 4 | 0, i3, i5, i5 + 8 | 0, i6) | 0) {
   case 1:
   case 2:
    {
     i3 = 11;
     break;
    }
   case 3:
    {
     HEAP8[i5 >> 0] = HEAP32[i7 >> 2];
     HEAP32[i6 >> 2] = i5 + 1;
     i3 = 8;
     break;
    }
   default:
    i3 = 8;
   }
   L9 : do if ((i3 | 0) == 8) {
    i1 = i4 + 32 | 0;
    while (1) {
     i2 = HEAP32[i6 >> 2] | 0;
     if (i2 >>> 0 <= i5 >>> 0) {
      i2 = 1;
      i1 = 0;
      break L9;
     }
     i4 = i2 + -1 | 0;
     HEAP32[i6 >> 2] = i4;
     if ((_ungetc(HEAP8[i4 >> 0] | 0, HEAP32[i1 >> 2] | 0) | 0) == -1) {
      i3 = 11;
      break;
     }
    }
   } while (0);
   if ((i3 | 0) == 11) {
    i2 = 0;
    i1 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   }
   if (i2) i1 = i7; else break;
  } else i1 = i4 + 48 | 0;
  HEAP32[i1 >> 2] = i8;
  HEAP8[i9 >> 0] = 1;
  i1 = i8;
 } while (0);
 STACKTOP = i10;
 return i1 | 0;
}

function _PCA(i3, i4, i5) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i6 = 0, i7 = 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 i2 = HEAP32[i3 + 8 >> 2] | 0;
 i7 = (i2 | 0) < (i1 | 0) ? i2 : i1;
 L1 : do if (((!((i1 | 0) < 2 | (i2 | 0) < 2) ? (HEAP32[i4 + 8 >> 2] | 0) == (i2 | 0) : 0) ? (HEAP32[i4 + 4 >> 2] | 0) == (i7 | 0) : 0) ? (HEAP32[i5 + 4 >> 2] | 0) == (i7 | 0) : 0) {
  i6 = _arMatrixAlloc(i7, i7) | 0;
  if ((HEAP32[i6 + 4 >> 2] | 0) == (i7 | 0) ? (HEAP32[i6 + 8 >> 2] | 0) == (i7 | 0) : 0) {
   i1 = (i1 | 0) < (i2 | 0);
   if (i1) {
    if ((_x_by_xt(i3, i6) | 0) < 0) {
     _arMatrixFree(i6) | 0;
     i1 = -1;
     break;
    }
   } else if ((_xt_by_x(i3, i6) | 0) < 0) {
    _arMatrixFree(i6) | 0;
    i1 = -1;
    break;
   }
   if ((_QRM(i6, i5) | 0) < 0) {
    _arMatrixFree(i6) | 0;
    i1 = -1;
    break;
   }
   L18 : do if (i1) {
    if ((_EV_create(i3, i6, i4, i5) | 0) < 0) {
     _arMatrixFree(i6) | 0;
     i1 = -1;
     break L1;
    }
   } else {
    i3 = 0;
    i2 = HEAP32[i6 >> 2] | 0;
    i1 = HEAP32[i4 >> 2] | 0;
    while (1) {
     if ((i3 | 0) >= (i7 | 0)) break;
     if (+HEAPF64[(HEAP32[i5 >> 2] | 0) + (i3 << 3) >> 3] < 1.0e-16) break;
     i4 = 0;
     while (1) {
      if ((i4 | 0) >= (i7 | 0)) break;
      HEAPF64[i1 >> 3] = +HEAPF64[i2 >> 3];
      i4 = i4 + 1 | 0;
      i2 = i2 + 8 | 0;
      i1 = i1 + 8 | 0;
     }
     i3 = i3 + 1 | 0;
    }
    while (1) {
     if ((i3 | 0) >= (i7 | 0)) break L18;
     HEAPF64[(HEAP32[i5 >> 2] | 0) + (i3 << 3) >> 3] = 0.0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) >= (i7 | 0)) break;
      HEAPF64[i1 >> 3] = 0.0;
      i2 = i2 + 1 | 0;
      i1 = i1 + 8 | 0;
     }
     i3 = i3 + 1 | 0;
    }
   } while (0);
   _arMatrixFree(i6) | 0;
   i1 = 0;
   break;
  }
  _arMatrixFree(i6) | 0;
  i1 = -1;
 } else i1 = -1; while (0);
 return i1 | 0;
}

function __ZNSt3__210__stdinbufIcE9pbackfailEi(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i10 + 16 | 0;
 i6 = i10 + 4 | 0;
 i2 = i10 + 8 | 0;
 i3 = i10;
 i7 = __ZNSt3__211char_traitsIcE11eq_int_typeEii(i8, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0;
 i9 = i4 + 52 | 0;
 i1 = (HEAP8[i9 >> 0] | 0) != 0;
 do if (i7) if (i1) i1 = i8; else {
  i1 = HEAP32[i4 + 48 >> 2] | 0;
  i8 = ((__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) ^ 1) & 1;
  HEAP8[i9 >> 0] = i8;
 } else {
  if (i1) {
   i7 = i4 + 48 | 0;
   i1 = __ZNSt3__211char_traitsIcE12to_char_typeEi(HEAP32[i7 >> 2] | 0) | 0;
   HEAP8[i2 >> 0] = i1;
   i1 = HEAP32[i4 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 15](i1, HEAP32[i4 + 40 >> 2] | 0, i2, i2 + 1 | 0, i3, i5, i5 + 8 | 0, i6) | 0) {
   case 1:
   case 2:
    {
     i3 = 11;
     break;
    }
   case 3:
    {
     HEAP8[i5 >> 0] = HEAP32[i7 >> 2];
     HEAP32[i6 >> 2] = i5 + 1;
     i3 = 8;
     break;
    }
   default:
    i3 = 8;
   }
   L9 : do if ((i3 | 0) == 8) {
    i1 = i4 + 32 | 0;
    while (1) {
     i2 = HEAP32[i6 >> 2] | 0;
     if (i2 >>> 0 <= i5 >>> 0) {
      i2 = 1;
      i1 = 0;
      break L9;
     }
     i4 = i2 + -1 | 0;
     HEAP32[i6 >> 2] = i4;
     if ((_ungetc(HEAP8[i4 >> 0] | 0, HEAP32[i1 >> 2] | 0) | 0) == -1) {
      i3 = 11;
      break;
     }
    }
   } while (0);
   if ((i3 | 0) == 11) {
    i2 = 0;
    i1 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   }
   if (i2) i1 = i7; else break;
  } else i1 = i4 + 48 | 0;
  HEAP32[i1 >> 2] = i8;
  HEAP8[i9 >> 0] = 1;
  i1 = i8;
 } while (0);
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNSt3__211__stdoutbufIwE8overflowEj(i1, i9) {
 i1 = i1 | 0;
 i9 = i9 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i10 = i13 + 16 | 0;
 i3 = i13 + 8 | 0;
 i11 = i13 + 4 | 0;
 i12 = i13;
 do if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i9, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) {
  i8 = __ZNSt3__211char_traitsIwE12to_char_typeEj(i9) | 0;
  HEAP32[i3 >> 2] = i8;
  if (HEAP8[i1 + 44 >> 0] | 0) {
   if ((_fwrite(i3, 4, 1, HEAP32[i1 + 32 >> 2] | 0) | 0) == 1) {
    i2 = 15;
    break;
   }
   i1 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   break;
  }
  HEAP32[i11 >> 2] = i10;
  i2 = i3 + 4 | 0;
  i4 = i1 + 36 | 0;
  i5 = i1 + 40 | 0;
  i6 = i10 + 8 | 0;
  i7 = i10;
  i8 = i1 + 32 | 0;
  while (1) {
   i1 = HEAP32[i4 >> 2] | 0;
   i1 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 15](i1, HEAP32[i5 >> 2] | 0, i3, i2, i12, i10, i6, i11) | 0;
   if ((HEAP32[i12 >> 2] | 0) == (i3 | 0)) {
    i2 = 14;
    break;
   }
   if ((i1 | 0) == 3) {
    i2 = 8;
    break;
   }
   if (i1 >>> 0 >= 2) {
    i2 = 14;
    break;
   }
   i3 = (HEAP32[i11 >> 2] | 0) - i7 | 0;
   if ((_fwrite(i10, 1, i3, HEAP32[i8 >> 2] | 0) | 0) != (i3 | 0)) {
    i2 = 14;
    break;
   }
   if ((i1 | 0) == 1) i3 = HEAP32[i12 >> 2] | 0; else {
    i2 = 13;
    break;
   }
  }
  if ((i2 | 0) == 8) if ((_fwrite(i3, 1, 1, HEAP32[i8 >> 2] | 0) | 0) == 1) i2 = 13; else i2 = 14;
  if ((i2 | 0) == 13) {
   i2 = 15;
   break;
  } else if ((i2 | 0) == 14) {
   i1 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   break;
  }
 } else i2 = 15; while (0);
 if ((i2 | 0) == 15) i1 = __ZNSt3__211char_traitsIwE7not_eofEj(i9) | 0;
 STACKTOP = i13;
 return i1 | 0;
}

function __ZNSt3__211__stdoutbufIcE8overflowEi(i1, i9) {
 i1 = i1 | 0;
 i9 = i9 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i10 = i13 + 16 | 0;
 i3 = i13 + 8 | 0;
 i11 = i13 + 4 | 0;
 i12 = i13;
 do if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i9, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) {
  i8 = __ZNSt3__211char_traitsIcE12to_char_typeEi(i9) | 0;
  HEAP8[i3 >> 0] = i8;
  if (HEAP8[i1 + 44 >> 0] | 0) {
   if ((_fwrite(i3, 1, 1, HEAP32[i1 + 32 >> 2] | 0) | 0) == 1) {
    i2 = 15;
    break;
   }
   i1 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   break;
  }
  HEAP32[i11 >> 2] = i10;
  i2 = i3 + 1 | 0;
  i4 = i1 + 36 | 0;
  i5 = i1 + 40 | 0;
  i6 = i10 + 8 | 0;
  i7 = i10;
  i8 = i1 + 32 | 0;
  while (1) {
   i1 = HEAP32[i4 >> 2] | 0;
   i1 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 15](i1, HEAP32[i5 >> 2] | 0, i3, i2, i12, i10, i6, i11) | 0;
   if ((HEAP32[i12 >> 2] | 0) == (i3 | 0)) {
    i2 = 14;
    break;
   }
   if ((i1 | 0) == 3) {
    i2 = 8;
    break;
   }
   if (i1 >>> 0 >= 2) {
    i2 = 14;
    break;
   }
   i3 = (HEAP32[i11 >> 2] | 0) - i7 | 0;
   if ((_fwrite(i10, 1, i3, HEAP32[i8 >> 2] | 0) | 0) != (i3 | 0)) {
    i2 = 14;
    break;
   }
   if ((i1 | 0) == 1) i3 = HEAP32[i12 >> 2] | 0; else {
    i2 = 13;
    break;
   }
  }
  if ((i2 | 0) == 8) if ((_fwrite(i3, 1, 1, HEAP32[i8 >> 2] | 0) | 0) == 1) i2 = 13; else i2 = 14;
  if ((i2 | 0) == 13) {
   i2 = 15;
   break;
  } else if ((i2 | 0) == 14) {
   i1 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   break;
  }
 } else i2 = 15; while (0);
 if ((i2 | 0) == 15) i1 = __ZNSt3__211char_traitsIcE7not_eofEi(i9) | 0;
 STACKTOP = i13;
 return i1 | 0;
}

function _memcpy(i3, i6, i1) {
 i3 = i3 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0, i5 = 0;
 if ((i1 | 0) >= 8192) {
  _emscripten_memcpy_big(i3 | 0, i6 | 0, i1 | 0) | 0;
  return i3 | 0;
 }
 i5 = i3 | 0;
 i4 = i3 + i1 | 0;
 if ((i3 & 3) == (i6 & 3)) {
  while (i3 & 3) {
   if (!i1) return i5 | 0;
   HEAP8[i3 >> 0] = HEAP8[i6 >> 0] | 0;
   i3 = i3 + 1 | 0;
   i6 = i6 + 1 | 0;
   i1 = i1 - 1 | 0;
  }
  i1 = i4 & -4 | 0;
  i2 = i1 - 64 | 0;
  while ((i3 | 0) <= (i2 | 0)) {
   HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i3 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i3 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   HEAP32[i3 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
   HEAP32[i3 + 16 >> 2] = HEAP32[i6 + 16 >> 2];
   HEAP32[i3 + 20 >> 2] = HEAP32[i6 + 20 >> 2];
   HEAP32[i3 + 24 >> 2] = HEAP32[i6 + 24 >> 2];
   HEAP32[i3 + 28 >> 2] = HEAP32[i6 + 28 >> 2];
   HEAP32[i3 + 32 >> 2] = HEAP32[i6 + 32 >> 2];
   HEAP32[i3 + 36 >> 2] = HEAP32[i6 + 36 >> 2];
   HEAP32[i3 + 40 >> 2] = HEAP32[i6 + 40 >> 2];
   HEAP32[i3 + 44 >> 2] = HEAP32[i6 + 44 >> 2];
   HEAP32[i3 + 48 >> 2] = HEAP32[i6 + 48 >> 2];
   HEAP32[i3 + 52 >> 2] = HEAP32[i6 + 52 >> 2];
   HEAP32[i3 + 56 >> 2] = HEAP32[i6 + 56 >> 2];
   HEAP32[i3 + 60 >> 2] = HEAP32[i6 + 60 >> 2];
   i3 = i3 + 64 | 0;
   i6 = i6 + 64 | 0;
  }
  while ((i3 | 0) < (i1 | 0)) {
   HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
   i3 = i3 + 4 | 0;
   i6 = i6 + 4 | 0;
  }
 } else {
  i1 = i4 - 4 | 0;
  while ((i3 | 0) < (i1 | 0)) {
   HEAP8[i3 >> 0] = HEAP8[i6 >> 0] | 0;
   HEAP8[i3 + 1 >> 0] = HEAP8[i6 + 1 >> 0] | 0;
   HEAP8[i3 + 2 >> 0] = HEAP8[i6 + 2 >> 0] | 0;
   HEAP8[i3 + 3 >> 0] = HEAP8[i6 + 3 >> 0] | 0;
   i3 = i3 + 4 | 0;
   i6 = i6 + 4 | 0;
  }
 }
 while ((i3 | 0) < (i4 | 0)) {
  HEAP8[i3 >> 0] = HEAP8[i6 >> 0] | 0;
  i3 = i3 + 1 | 0;
  i6 = i6 + 1 | 0;
 }
 return i5 | 0;
}

function _median_cut(i14, i15, i16) {
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i12 = 1;
 while (1) {
  if ((i12 | 0) >= (i16 | 0)) break;
  if ((i12 << 1 | 0) > (i16 | 0)) i13 = _find_biggest_volume(i15, i12) | 0; else i13 = _find_biggest_color_pop(i15, i12) | 0;
  if (!i13) break;
  i17 = i15 + (i12 << 5) | 0;
  i2 = i13 + 4 | 0;
  HEAP32[i15 + (i12 << 5) + 4 >> 2] = HEAP32[i2 >> 2];
  i3 = i13 + 12 | 0;
  HEAP32[i15 + (i12 << 5) + 12 >> 2] = HEAP32[i3 >> 2];
  i4 = i13 + 20 | 0;
  HEAP32[i15 + (i12 << 5) + 20 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i17 >> 2] = HEAP32[i13 >> 2];
  i9 = i13 + 8 | 0;
  i1 = i15 + (i12 << 5) + 8 | 0;
  HEAP32[i1 >> 2] = HEAP32[i9 >> 2];
  i11 = i13 + 16 | 0;
  i5 = i15 + (i12 << 5) + 16 | 0;
  HEAP32[i5 >> 2] = HEAP32[i11 >> 2];
  i6 = HEAP32[i2 >> 2] | 0;
  i7 = HEAP32[i13 >> 2] | 0;
  i21 = i6 - i7 << 4;
  i8 = HEAP32[i3 >> 2] | 0;
  i9 = HEAP32[i9 >> 2] | 0;
  i20 = (i8 - i9 | 0) * 12 | 0;
  i10 = HEAP32[i4 >> 2] | 0;
  i11 = HEAP32[i11 >> 2] | 0;
  i19 = (i21 | 0) > (i20 | 0);
  switch (((i10 - i11 << 3 | 0) > ((i19 ? i21 : i20) | 0) ? 2 : (i19 ^ 1) & 1) & 3) {
  case 0:
   {
    i18 = (i7 + i6 | 0) / 2 | 0;
    HEAP32[i2 >> 2] = i18;
    i1 = i17;
    i2 = i18;
    i18 = 11;
    break;
   }
  case 1:
   {
    i2 = (i9 + i8 | 0) / 2 | 0;
    HEAP32[i3 >> 2] = i2;
    i18 = 11;
    break;
   }
  case 2:
   {
    i2 = (i11 + i10 | 0) / 2 | 0;
    HEAP32[i4 >> 2] = i2;
    i1 = i5;
    i18 = 11;
    break;
   }
  default:
   {}
  }
  if ((i18 | 0) == 11) {
   i18 = 0;
   HEAP32[i1 >> 2] = i2 + 1;
  }
  _update_box(i14, i13);
  _update_box(i14, i17);
  i12 = i12 + 1 | 0;
 }
 return i12 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_dot_star_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i8 = i10 + 12 | 0;
 i9 = i10;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 100 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 115 : 0) ? (i11 = i1 + 2 | 0, i3 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i11, i2, i4) | 0, (i3 | 0) != (i11 | 0)) : 0) ? (i6 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i3, i2, i4) | 0, (i6 | 0) != (i3 | 0)) : 0) ? (i7 = i4 + 4 | 0, i5 = HEAP32[i7 >> 2] | 0, ((i5 - (HEAP32[i4 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i5 + -24 | 0);
  i2 = HEAP32[i7 >> 2] | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == -1) break;
   i11 = i1 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i11 * 24 | 0) | 0);
   i1 = i11;
  }
  HEAP32[i7 >> 2] = i2 + -24;
  __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i9, 50817, i8);
  i1 = HEAP8[i9 + 11 >> 0] | 0;
  i11 = i1 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i7 >> 2] | 0) + -24 | 0, i11 ? HEAP32[i9 >> 2] | 0 : i9, i11 ? HEAP32[i9 + 4 >> 2] | 0 : i1 & 255) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  i1 = i6;
 }
 STACKTOP = i10;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_dot_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i8 = i10 + 12 | 0;
 i9 = i10;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 100 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 116 : 0) ? (i11 = i1 + 2 | 0, i3 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i11, i2, i4) | 0, (i3 | 0) != (i11 | 0)) : 0) ? (i6 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i3, i2, i4) | 0, (i6 | 0) != (i3 | 0)) : 0) ? (i7 = i4 + 4 | 0, i5 = HEAP32[i7 >> 2] | 0, ((i5 - (HEAP32[i4 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i5 + -24 | 0);
  i2 = HEAP32[i7 >> 2] | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == -1) break;
   i11 = i1 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i11 * 24 | 0) | 0);
   i1 = i11;
  }
  HEAP32[i7 >> 2] = i2 + -24;
  __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i9, 50815, i8);
  i1 = HEAP8[i9 + 11 >> 0] | 0;
  i11 = i1 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i7 >> 2] | 0) + -24 | 0, i11 ? HEAP32[i9 >> 2] | 0 : i9, i11 ? HEAP32[i9 + 4 >> 2] | 0 : i1 & 255) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  i1 = i6;
 }
 STACKTOP = i10;
 return i1 | 0;
}

function _arGetTransMatSquareCont(i2, i3, i4, d5, i6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 i6 = i6 | 0;
 var i1 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, d12 = 0.0, i13 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(192);
 i7 = i11 + 96 | 0;
 i8 = i11;
 i9 = i11 + 168 | 0;
 i10 = i11 + 160 | 0;
 do if ((HEAP32[i3 + 12 >> 2] | 0) >= 0) if ((HEAP32[i3 + 8 >> 2] | 0) < 0) {
  i1 = i3 + 24 | 0;
  break;
 } else {
  i1 = i3 + 16 | 0;
  break;
 } else i1 = i3 + 20 | 0; while (0);
 i1 = HEAP32[i1 >> 2] | 0;
 i13 = (4 - i1 | 0) % 4 | 0;
 HEAPF64[i7 >> 3] = +HEAPF64[i3 + 168 + (i13 << 4) >> 3];
 HEAPF64[i7 + 8 >> 3] = +HEAPF64[i3 + 168 + (i13 << 4) + 8 >> 3];
 i13 = (5 - i1 | 0) % 4 | 0;
 HEAPF64[i7 + 16 >> 3] = +HEAPF64[i3 + 168 + (i13 << 4) >> 3];
 HEAPF64[i7 + 24 >> 3] = +HEAPF64[i3 + 168 + (i13 << 4) + 8 >> 3];
 i13 = (6 - i1 | 0) % 4 | 0;
 HEAPF64[i7 + 32 >> 3] = +HEAPF64[i3 + 168 + (i13 << 4) >> 3];
 HEAPF64[i7 + 40 >> 3] = +HEAPF64[i3 + 168 + (i13 << 4) + 8 >> 3];
 i1 = (7 - i1 | 0) % 4 | 0;
 HEAPF64[i7 + 48 >> 3] = +HEAPF64[i3 + 168 + (i1 << 4) >> 3];
 HEAPF64[i7 + 56 >> 3] = +HEAPF64[i3 + 168 + (i1 << 4) + 8 >> 3];
 d12 = d5 * -.5;
 HEAPF64[i8 >> 3] = d12;
 d5 = d5 * .5;
 HEAPF64[i8 + 8 >> 3] = d5;
 HEAPF64[i8 + 16 >> 3] = 0.0;
 HEAPF64[i8 + 24 >> 3] = d5;
 HEAPF64[i8 + 32 >> 3] = d5;
 HEAPF64[i8 + 40 >> 3] = 0.0;
 HEAPF64[i8 + 48 >> 3] = d5;
 HEAPF64[i8 + 56 >> 3] = d12;
 HEAPF64[i8 + 64 >> 3] = 0.0;
 HEAPF64[i8 + 72 >> 3] = d12;
 HEAPF64[i8 + 80 >> 3] = d12;
 HEAPF64[i8 + 88 >> 3] = 0.0;
 HEAP32[i9 >> 2] = i7;
 HEAP32[i9 + 4 >> 2] = i8;
 HEAP32[i9 + 8 >> 2] = 4;
 i9 = (_icpPoint(HEAP32[i2 >> 2] | 0, i9, i4, i6, i10) | 0) < 0;
 STACKTOP = i11;
 return +(i9 ? 1.0e8 : +HEAPF64[i10 >> 3]);
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE11addKeyframeENSt3__210shared_ptrINS_8KeyframeILi96EEEEEi(i1, i6, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i8 + 4 | 0;
 i3 = i8;
 HEAP32[i3 >> 2] = i2;
 i1 = i1 + 72 | 0;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(i1, i3) | 0) {
  i8 = ___cxa_allocate_exception(16) | 0;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i7 + 4 >> 2] = 0;
  HEAP32[i7 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i7, 27308, __ZNSt3__211char_traitsIcE6lengthEPKc(27308) | 0);
  __ZN6vision9ExceptionC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i8, i7);
  ___cxa_throw(i8 | 0, 11016, 5);
 }
 i4 = __ZNSt3__213unordered_mapIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS5_EEEEEixERSC_(i1, i3) | 0;
 i5 = HEAP32[i6 >> 2] | 0;
 HEAP32[i7 >> 2] = i5;
 i3 = i7 + 4 | 0;
 i1 = HEAP32[i6 + 4 >> 2] | 0;
 HEAP32[i3 >> 2] = i1;
 if (!i1) {
  i2 = i3;
  i1 = 0;
 } else {
  i2 = i1 + 4 | 0;
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
  i2 = i3;
  i1 = HEAP32[i3 >> 2] | 0;
 }
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i5;
 i6 = i4 + 4 | 0;
 HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i6 >> 2] = i1;
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev(i7);
 STACKTOP = i8;
 return;
}

function _trinkle(i1, i10, i11, i4, i3, i2, i12) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i12 = i12 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i13 = 0, i14 = 0, i15 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i9 = i14 + 232 | 0;
 i13 = i14;
 i15 = HEAP32[i4 >> 2] | 0;
 HEAP32[i9 >> 2] = i15;
 i6 = HEAP32[i4 + 4 >> 2] | 0;
 i7 = i9 + 4 | 0;
 HEAP32[i7 >> 2] = i6;
 HEAP32[i13 >> 2] = i1;
 L1 : do if ((i15 | 0) != 1 | (i6 | 0) != 0 ? (i8 = 0 - i10 | 0, i5 = i1 + (0 - (HEAP32[i12 + (i3 << 2) >> 2] | 0)) | 0, (FUNCTION_TABLE_iii[i11 & 63](i5, i1) | 0) >= 1) : 0) {
  i4 = 1;
  i2 = (i2 | 0) == 0;
  i6 = i5;
  while (1) {
   if (i2 & (i3 | 0) > 1) {
    i2 = i1 + i8 | 0;
    i5 = HEAP32[i12 + (i3 + -2 << 2) >> 2] | 0;
    if ((FUNCTION_TABLE_iii[i11 & 63](i2, i6) | 0) > -1) {
     i5 = 10;
     break L1;
    }
    if ((FUNCTION_TABLE_iii[i11 & 63](i2 + (0 - i5) | 0, i6) | 0) > -1) {
     i5 = 10;
     break L1;
    }
   }
   i2 = i4 + 1 | 0;
   HEAP32[i13 + (i4 << 2) >> 2] = i6;
   i15 = _pntz(i9) | 0;
   _shr(i9, i15);
   i3 = i15 + i3 | 0;
   if (!((HEAP32[i9 >> 2] | 0) != 1 | (HEAP32[i7 >> 2] | 0) != 0)) {
    i4 = i2;
    i1 = i6;
    i5 = 10;
    break L1;
   }
   i1 = i6 + (0 - (HEAP32[i12 + (i3 << 2) >> 2] | 0)) | 0;
   if ((FUNCTION_TABLE_iii[i11 & 63](i1, HEAP32[i13 >> 2] | 0) | 0) < 1) {
    i1 = i6;
    i4 = i2;
    i2 = 0;
    i5 = 9;
    break;
   } else {
    i15 = i6;
    i4 = i2;
    i2 = 1;
    i6 = i1;
    i1 = i15;
   }
  }
 } else {
  i4 = 1;
  i5 = 9;
 } while (0);
 if ((i5 | 0) == 9 ? (i2 | 0) == 0 : 0) i5 = 10;
 if ((i5 | 0) == 10) {
  _cycle(i10, i13, i4);
  _sift(i1, i10, i11, i3, i12);
 }
 STACKTOP = i14;
 return;
}

function _setupAR2Threads(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i6 + 16 | 0;
 i4 = i6 + 8 | 0;
 i3 = i6;
 i2 = i6 + 20 | 0;
 HEAP32[i2 >> 2] = i1;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0) {
  i2 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0;
  i7 = _ar2CreateHandle(HEAP32[i2 + 192 >> 2] | 0, HEAP32[i2 + 472 >> 2] | 0, -1) | 0;
  i1 = i2 + 236 | 0;
  HEAP32[i1 >> 2] = i7;
  if (!i7) {
   _arLog(0, 3, 45122, i3);
   _kpmDeleteHandle(i2 + 232 | 0) | 0;
   i1 = 0;
   break;
  }
  if ((_threadGetCPU() | 0) < 2) {
   _arLog(0, 1, 45147, i4);
   _ar2SetTrackingThresh(HEAP32[i1 >> 2] | 0, 5.0) | 0;
   _ar2SetSimThresh(HEAP32[i1 >> 2] | 0, .5) | 0;
   _ar2SetSearchFeatureNum(HEAP32[i1 >> 2] | 0, 16) | 0;
   _ar2SetSearchSize(HEAP32[i1 >> 2] | 0, 6) | 0;
   _ar2SetTemplateSize1(HEAP32[i1 >> 2] | 0, 6) | 0;
   _ar2SetTemplateSize2(HEAP32[i1 >> 2] | 0, 6) | 0;
   i1 = 0;
   break;
  } else {
   _arLog(0, 1, 45194, i5);
   _ar2SetTrackingThresh(HEAP32[i1 >> 2] | 0, 5.0) | 0;
   _ar2SetSimThresh(HEAP32[i1 >> 2] | 0, .5) | 0;
   _ar2SetSearchFeatureNum(HEAP32[i1 >> 2] | 0, 16) | 0;
   _ar2SetSearchSize(HEAP32[i1 >> 2] | 0, 12) | 0;
   _ar2SetTemplateSize1(HEAP32[i1 >> 2] | 0, 6) | 0;
   _ar2SetTemplateSize2(HEAP32[i1 >> 2] | 0, 6) | 0;
   i1 = 0;
   break;
  }
 } else i1 = -1; while (0);
 STACKTOP = i6;
 return i1 | 0;
}

function __ZN6vision39HomographyPointsGeometricallyConsistentIfEEbPKT_S3_i(i8, i9, i10) {
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i3 = i14 + 32 | 0;
 i2 = i14 + 24 | 0;
 i1 = i14 + 16 | 0;
 i11 = i14 + 8 | 0;
 i12 = i14;
 L1 : do if ((i10 | 0) >= 2) {
  i13 = i9 + 8 | 0;
  i4 = i9 + 16 | 0;
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_(i3, i8, i9);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_(i2, i8, i13);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_(i1, i8, i4);
  __ZN6vision11CopyVector2IfEEvPT_PKS1_(i11, i3);
  __ZN6vision11CopyVector2IfEEvPT_PKS1_(i12, i2);
  if (__ZN6vision40Homography3PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_(i9, i13, i4, i3, i2, i1) | 0) {
   i7 = 3;
   i6 = i3;
   i3 = i13;
   i5 = i9;
   while (1) {
    if ((i7 | 0) >= (i10 | 0)) break;
    i5 = i5 + 8 | 0;
    i3 = i3 + 8 | 0;
    i4 = i4 + 8 | 0;
    __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_(i6, i8, i4);
    if (!(__ZN6vision40Homography3PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_(i5, i3, i4, i2, i1, i6) | 0)) {
     i1 = 0;
     break L1;
    } else {
     i15 = i6;
     i7 = i7 + 1 | 0;
     i6 = i2;
     i2 = i1;
     i1 = i15;
    }
   }
   if (__ZN6vision40Homography3PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_(i3, i4, i9, i2, i1, i11) | 0) i1 = __ZN6vision40Homography3PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_(i4, i9, i13, i1, i11, i12) | 0; else i1 = 0;
  } else i1 = 0;
 } else i1 = 1; while (0);
 STACKTOP = i14;
 return i1 | 0;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(i7, i8, i9) {
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0;
 i1 = i8;
 i10 = (i9 - i1 | 0) / 12 | 0;
 i2 = i7 + 8 | 0;
 i6 = HEAP32[i7 >> 2] | 0;
 i5 = i6;
 do if (i10 >>> 0 > (((HEAP32[i2 >> 2] | 0) - i6 | 0) / 12 | 0) >>> 0) {
  __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE10deallocateEv(i7);
  i1 = __ZNKSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE8max_sizeEv(i7) | 0;
  if (i1 >>> 0 < i10 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i7); else {
   i5 = ((HEAP32[i2 >> 2] | 0) - (HEAP32[i7 >> 2] | 0) | 0) / 12 | 0;
   i6 = i5 << 1;
   __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE8allocateEm(i7, i5 >>> 0 < i1 >>> 1 >>> 0 ? (i6 >>> 0 < i10 >>> 0 ? i10 : i6) : i1);
   __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_m(i7, i8, i9, i10);
   break;
  }
 } else {
  i2 = i7 + 4 | 0;
  i4 = ((HEAP32[i2 >> 2] | 0) - i6 | 0) / 12 | 0;
  i3 = i10 >>> 0 > i4 >>> 0;
  i4 = i3 ? i8 + (i4 * 12 | 0) | 0 : i9;
  i1 = i4 - i1 | 0;
  if (i1 | 0) _memmove(i6 | 0, i8 | 0, i1 | 0) | 0;
  if (i3) {
   __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_m(i7, i4, i9, i10 - (((HEAP32[i2 >> 2] | 0) - (HEAP32[i7 >> 2] | 0) | 0) / 12 | 0) | 0);
   break;
  } else {
   HEAP32[i2 >> 2] = i5 + (((i1 | 0) / 12 | 0) * 12 | 0);
   break;
  }
 } while (0);
 return;
}

function _format_message(i1, i5) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i7 = i8 + 8 | 0;
 i6 = i8;
 i4 = HEAP32[i1 >> 2] | 0;
 i3 = HEAP32[i4 + 20 >> 2] | 0;
 if ((i3 | 0) > 0 ? (i3 | 0) <= (HEAP32[i4 + 116 >> 2] | 0) : 0) {
  i1 = (HEAP32[i4 + 112 >> 2] | 0) + (i3 << 2) | 0;
  i2 = 8;
 } else {
  i1 = HEAP32[i4 + 120 >> 2] | 0;
  if (((i1 | 0) != 0 ? (i2 = HEAP32[i4 + 124 >> 2] | 0, (i3 | 0) >= (i2 | 0)) : 0) ? (i3 | 0) <= (HEAP32[i4 + 128 >> 2] | 0) : 0) {
   i1 = i1 + (i3 - i2 << 2) | 0;
   i2 = 8;
  } else i2 = 9;
 }
 if ((i2 | 0) == 8) {
  i1 = HEAP32[i1 >> 2] | 0;
  if (!i1) i2 = 9;
 }
 if ((i2 | 0) == 9) {
  HEAP32[i4 + 24 >> 2] = i3;
  i1 = HEAP32[HEAP32[i4 + 112 >> 2] >> 2] | 0;
 }
 i2 = i1;
 L14 : while (1) {
  i3 = i2 + 1 | 0;
  switch (HEAP8[i2 >> 0] | 0) {
  case 0:
   {
    i2 = 14;
    break L14;
   }
  case 37:
   {
    i2 = 12;
    break L14;
   }
  default:
   i2 = i3;
  }
 }
 if ((i2 | 0) == 12) if ((HEAP8[i3 >> 0] | 0) == 115) {
  HEAP32[i6 >> 2] = i4 + 24;
  _sprintf(i5, i1, i6) | 0;
 } else i2 = 14;
 if ((i2 | 0) == 14) {
  i12 = HEAP32[i4 + 28 >> 2] | 0;
  i11 = HEAP32[i4 + 32 >> 2] | 0;
  i10 = HEAP32[i4 + 36 >> 2] | 0;
  i9 = HEAP32[i4 + 40 >> 2] | 0;
  i2 = HEAP32[i4 + 44 >> 2] | 0;
  i3 = HEAP32[i4 + 48 >> 2] | 0;
  i6 = HEAP32[i4 + 52 >> 2] | 0;
  HEAP32[i7 >> 2] = HEAP32[i4 + 24 >> 2];
  HEAP32[i7 + 4 >> 2] = i12;
  HEAP32[i7 + 8 >> 2] = i11;
  HEAP32[i7 + 12 >> 2] = i10;
  HEAP32[i7 + 16 >> 2] = i9;
  HEAP32[i7 + 20 >> 2] = i2;
  HEAP32[i7 + 24 >> 2] = i3;
  HEAP32[i7 + 28 >> 2] = i6;
  _sprintf(i5, i1, i7) | 0;
 }
 STACKTOP = i8;
 return;
}

function ___stdio_write(i7, i2, i1) {
 i7 = i7 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i10 = i12 + 32 | 0;
 i5 = i12 + 16 | 0;
 i4 = i12;
 i8 = i7 + 28 | 0;
 i3 = HEAP32[i8 >> 2] | 0;
 HEAP32[i4 >> 2] = i3;
 i9 = i7 + 20 | 0;
 i3 = (HEAP32[i9 >> 2] | 0) - i3 | 0;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 8 >> 2] = i2;
 HEAP32[i4 + 12 >> 2] = i1;
 i3 = i3 + i1 | 0;
 i6 = i7 + 60 | 0;
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i5 + 4 >> 2] = i4;
 HEAP32[i5 + 8 >> 2] = 2;
 i5 = ___syscall_ret(___syscall146(146, i5 | 0) | 0) | 0;
 L1 : do if ((i3 | 0) != (i5 | 0)) {
  i2 = 2;
  while (1) {
   if ((i5 | 0) < 0) break;
   i3 = i3 - i5 | 0;
   i14 = HEAP32[i4 + 4 >> 2] | 0;
   i13 = i5 >>> 0 > i14 >>> 0;
   i4 = i13 ? i4 + 8 | 0 : i4;
   i2 = i2 + (i13 << 31 >> 31) | 0;
   i14 = i5 - (i13 ? i14 : 0) | 0;
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + i14;
   i13 = i4 + 4 | 0;
   HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) - i14;
   HEAP32[i10 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i10 + 4 >> 2] = i4;
   HEAP32[i10 + 8 >> 2] = i2;
   i5 = ___syscall_ret(___syscall146(146, i10 | 0) | 0) | 0;
   if ((i3 | 0) == (i5 | 0)) {
    i11 = 3;
    break L1;
   }
  }
  HEAP32[i7 + 16 >> 2] = 0;
  HEAP32[i8 >> 2] = 0;
  HEAP32[i9 >> 2] = 0;
  HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 32;
  if ((i2 | 0) == 2) i1 = 0; else i1 = i1 - (HEAP32[i4 + 4 >> 2] | 0) | 0;
 } else i11 = 3; while (0);
 if ((i11 | 0) == 3) {
  i14 = HEAP32[i7 + 44 >> 2] | 0;
  HEAP32[i7 + 16 >> 2] = i14 + (HEAP32[i7 + 48 >> 2] | 0);
  HEAP32[i8 >> 2] = i14;
  HEAP32[i9 >> 2] = i14;
 }
 STACKTOP = i12;
 return i1 | 0;
}

function __ZN6vision27OrthogonalizePivot8x9Basis2IfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i5;
 i3 = i1 + 72 | 0;
 i12 = i1 + 36 | 0;
 i4 = i2 + 72 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i3, i12, i4);
 i11 = i1 + 108 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i11, i12, i2 + 108 | 0);
 i10 = i1 + 144 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i10, i12, i2 + 144 | 0);
 i9 = i1 + 180 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i9, i12, i2 + 180 | 0);
 i8 = i1 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i8, i12, i2 + 216 | 0);
 i1 = i1 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i1, i12, i2 + 252 | 0);
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i3);
 HEAPF32[i6 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i11);
 HEAPF32[i6 + 4 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i10);
 HEAPF32[i6 + 8 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i9);
 HEAPF32[i6 + 12 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i8);
 HEAPF32[i6 + 16 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i1);
 HEAPF32[i6 + 20 >> 2] = d7;
 i1 = __ZN6vision9MaxIndex6IfEEiPKT_(i6) | 0;
 i2 = i6 + (i1 << 2) | 0;
 if (+HEAPF32[i2 >> 2] == 0.0) i1 = 0; else {
  i1 = i1 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_(i3, i3 + (i1 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_(i4, i4 + (i1 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_(i3, i3, 1.0 / +Math_sqrt(+(+HEAPF32[i2 >> 2])));
  i1 = 1;
 }
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNSt3__2L11init_wweeksEv() {
 var i1 = 0, i2 = 0;
 if ((HEAP8[56528] | 0) == 0 ? ___cxa_guard_acquire(56528) | 0 : 0) {
  i2 = 55920;
  do {
   HEAP32[i2 >> 2] = 0;
   HEAP32[i2 + 4 >> 2] = 0;
   HEAP32[i2 + 8 >> 2] = 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i2 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i2 = i2 + 12 | 0;
  } while ((i2 | 0) != 56088);
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55920, 15896) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55932, 15924) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55944, 15952) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55956, 15984) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55968, 16024) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55980, 16060) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55992, 16088) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(56004, 16124) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(56016, 16140) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(56028, 16156) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(56040, 16172) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(56052, 16188) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(56064, 16204) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(56076, 16220) | 0;
 return;
}

function _trackingInitMain(i10) {
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i15 = i16 + 24 | 0;
 i2 = i16 + 16 | 0;
 i1 = i16 + 8 | 0;
 i11 = i16 + 32 | 0;
 i12 = i16 + 28 | 0;
 HEAP32[i11 >> 2] = 0;
 do if (!i10) _arLog(0, 3, 38505, i16); else {
  i3 = _threadGetArg(i10) | 0;
  i13 = HEAP32[i3 >> 2] | 0;
  i14 = HEAP32[i3 + 4 >> 2] | 0;
  if (!((i13 | 0) != 0 & (i14 | 0) != 0)) {
   _arLog(0, 3, 38561, i1);
   break;
  }
  _arLog(0, 1, 38624, i2);
  _kpmGetResult(i13, i11, i12) | 0;
  i8 = i3 + 64 | 0;
  i9 = i3 + 60 | 0;
  i5 = i3 + 12 | 0;
  d4 = 0.0;
  while (1) {
   if ((_threadStartWait(i10) | 0) < 0) break;
   _kpmMatching(i13, i14) | 0;
   HEAP32[i8 >> 2] = 0;
   i6 = HEAP32[i12 >> 2] | 0;
   i7 = HEAP32[i11 >> 2] | 0;
   i3 = 0;
   i1 = 0;
   while (1) {
    if ((i3 | 0) >= (i6 | 0)) break;
    do if (!(HEAP32[i7 + (i3 * 68 | 0) + 60 >> 2] | 0)) {
     if (i1 | 0 ? !(d4 > +HEAPF32[i7 + (i3 * 68 | 0) + 52 >> 2]) : 0) break;
     HEAP32[i8 >> 2] = 1;
     HEAP32[i9 >> 2] = HEAP32[i7 + (i3 * 68 | 0) + 48 >> 2];
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      i1 = 0;
      while (1) {
       if ((i1 | 0) == 4) break;
       HEAP32[i5 + (i2 << 4) + (i1 << 2) >> 2] = HEAP32[i7 + (i3 * 68 | 0) + (i2 << 4) + (i1 << 2) >> 2];
       i1 = i1 + 1 | 0;
      }
      i2 = i2 + 1 | 0;
     }
     d4 = +HEAPF32[i7 + (i3 * 68 | 0) + 52 >> 2];
     i1 = 1;
    } while (0);
    i3 = i3 + 1 | 0;
   }
   _threadEndSignal(i10) | 0;
  }
  _arLog(0, 1, 38648, i15);
 } while (0);
 STACKTOP = i16;
 return 0;
}

function __ZNSt3__2L10init_weeksEv() {
 var i1 = 0, i2 = 0;
 if ((HEAP8[56448] | 0) == 0 ? ___cxa_guard_acquire(56448) | 0 : 0) {
  i2 = 55168;
  do {
   HEAP32[i2 >> 2] = 0;
   HEAP32[i2 + 4 >> 2] = 0;
   HEAP32[i2 + 8 >> 2] = 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i2 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i2 = i2 + 12 | 0;
  } while ((i2 | 0) != 55336);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55168, 48265) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55180, 48272) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55192, 48279) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55204, 48287) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55216, 48297) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55228, 48306) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55240, 48313) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55252, 48322) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55264, 48326) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55276, 48330) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55288, 48334) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55300, 48338) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55312, 48342) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55324, 48346) | 0;
 return;
}

function _jinit_2pass_quantizer(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = i4 + 4 | 0;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i5 >> 2] >> 2] & 63](i4, 1, 44) | 0;
 HEAP32[i4 + 460 >> 2] = i3;
 HEAP32[i3 >> 2] = 43;
 HEAP32[i3 + 12 >> 2] = 124;
 i6 = i3 + 32 | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i3 + 40 >> 2] = 0;
 if ((HEAP32[i4 + 120 >> 2] | 0) != 3) {
  i2 = HEAP32[i4 >> 2] | 0;
  HEAP32[i2 + 20 >> 2] = 47;
  FUNCTION_TABLE_vi[HEAP32[i2 >> 2] & 255](i4);
 }
 i1 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i5 >> 2] >> 2] & 63](i4, 1, 128) | 0;
 i2 = i3 + 24 | 0;
 HEAP32[i2 >> 2] = i1;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 32) break;
  i7 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] & 63](i4, 1, 4096) | 0;
  HEAP32[(HEAP32[i2 >> 2] | 0) + (i1 << 2) >> 2] = i7;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i3 + 28 >> 2] = 1;
 if (!(HEAP32[i4 + 108 >> 2] | 0)) HEAP32[i3 + 16 >> 2] = 0; else {
  i1 = HEAP32[i4 + 96 >> 2] | 0;
  if ((i1 | 0) >= 8) {
   if ((i1 | 0) > 256) {
    i7 = HEAP32[i4 >> 2] | 0;
    HEAP32[i7 + 20 >> 2] = 57;
    HEAP32[i7 + 24 >> 2] = 256;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i4 >> 2] >> 2] & 255](i4);
   }
  } else {
   i7 = HEAP32[i4 >> 2] | 0;
   HEAP32[i7 + 20 >> 2] = 56;
   HEAP32[i7 + 24 >> 2] = 8;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i4 >> 2] >> 2] & 255](i4);
  }
  i7 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 15](i4, 1, i1, 3) | 0;
  HEAP32[i3 + 16 >> 2] = i7;
  HEAP32[i3 + 20 >> 2] = i1;
 }
 i1 = i4 + 88 | 0;
 if (HEAP32[i1 >> 2] | 0) {
  HEAP32[i1 >> 2] = 2;
  i7 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] & 63](i4, 1, ((HEAP32[i4 + 112 >> 2] | 0) * 6 | 0) + 12 | 0) | 0;
  HEAP32[i6 >> 2] = i7;
  _init_error_limit(i4);
 }
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i2, i4, i7, i1, i3) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i5 = 0, i6 = 0, i8 = 0;
 do if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i2, HEAP32[i4 + 8 >> 2] | 0, i3) | 0)) {
  if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i2, HEAP32[i4 >> 2] | 0, i3) | 0)) {
   i6 = HEAP32[i2 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 24 >> 2] & 31](i6, i4, i7, i1, i3);
   break;
  }
  if ((HEAP32[i4 + 16 >> 2] | 0) != (i7 | 0) ? (i5 = i4 + 20 | 0, (HEAP32[i5 >> 2] | 0) != (i7 | 0)) : 0) {
   HEAP32[i4 + 32 >> 2] = i1;
   i6 = i4 + 44 | 0;
   if ((HEAP32[i6 >> 2] | 0) == 4) break;
   i1 = i4 + 52 | 0;
   HEAP8[i1 >> 0] = 0;
   i8 = i4 + 53 | 0;
   HEAP8[i8 >> 0] = 0;
   i2 = HEAP32[i2 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 7](i2, i4, i7, i7, 1, i3);
   if (HEAP8[i8 >> 0] | 0) if (!(HEAP8[i1 >> 0] | 0)) {
    i1 = 1;
    i2 = 11;
   } else i2 = 15; else {
    i1 = 0;
    i2 = 11;
   }
   do if ((i2 | 0) == 11) {
    HEAP32[i5 >> 2] = i7;
    i8 = i4 + 40 | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
    if ((HEAP32[i4 + 36 >> 2] | 0) == 1 ? (HEAP32[i4 + 24 >> 2] | 0) == 2 : 0) {
     HEAP8[i4 + 54 >> 0] = 1;
     if (i1) {
      i2 = 15;
      break;
     } else {
      i1 = 4;
      break;
     }
    }
    if (i1) i2 = 15; else i1 = 4;
   } while (0);
   if ((i2 | 0) == 15) i1 = 3;
   HEAP32[i6 >> 2] = i1;
   break;
  }
  if ((i1 | 0) == 1) HEAP32[i4 + 32 >> 2] = 1;
 } else __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, i4, i7, i1); while (0);
 return;
}

function _icpGetJ_T_S(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 i1 = i2 + 64 | 0;
 i3 = i2;
 i4 = i3 + 64 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 HEAPF64[i1 >> 3] = -1.0;
 i1 = i2 + 72 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 24 >> 2] = 0;
 HEAP32[i1 + 28 >> 2] = 0;
 HEAPF64[i2 + 104 >> 3] = 1.0;
 i1 = i2 + 160 | 0;
 i3 = i2 + 112 | 0;
 i4 = i3 + 48 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 HEAPF64[i1 >> 3] = 1.0;
 i1 = i2 + 240 | 0;
 i3 = i2 + 168 | 0;
 i4 = i3 + 72 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 HEAPF64[i1 >> 3] = -1.0;
 i1 = i2 + 296 | 0;
 i3 = i2 + 248 | 0;
 i4 = i3 + 48 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 HEAPF64[i1 >> 3] = -1.0;
 i1 = i2 + 304 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 24 >> 2] = 0;
 HEAP32[i1 + 28 >> 2] = 0;
 HEAPF64[i2 + 336 >> 3] = 1.0;
 i1 = i2 + 456 | 0;
 i3 = i2 + 344 | 0;
 i4 = i3 + 112 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 HEAPF64[i1 >> 3] = 1.0;
 i1 = i2 + 512 | 0;
 i3 = i2 + 464 | 0;
 i4 = i3 + 48 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 HEAPF64[i1 >> 3] = 1.0;
 i1 = i2 + 568 | 0;
 i3 = i2 + 520 | 0;
 i4 = i3 + 48 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 HEAPF64[i1 >> 3] = 1.0;
 return;
}

function __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i7, i11, i2, i3, i8) {
 i10 = i10 | 0;
 i7 = i7 | 0;
 i11 = i11 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i12;
 i1 = HEAP32[i10 >> 2] | 0;
 L1 : do if (!i1) i1 = 0; else {
  i13 = i7;
  i4 = i2 - i13 >> 2;
  i6 = i3 + 12 | 0;
  i3 = HEAP32[i6 >> 2] | 0;
  i3 = (i3 | 0) > (i4 | 0) ? i3 - i4 | 0 : 0;
  i4 = i11;
  i13 = i4 - i13 | 0;
  i5 = i13 >> 2;
  if ((i13 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 63](i1, i7, i5) | 0) != (i5 | 0) : 0) {
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  }
  do if ((i3 | 0) > 0) {
   HEAP32[i9 >> 2] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
   HEAP32[i9 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw(i9, i3, i8);
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 63](i1, (HEAP8[i9 + 8 + 3 >> 0] | 0) < 0 ? HEAP32[i9 >> 2] | 0 : i9, i3) | 0) == (i3 | 0)) {
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i9);
    break;
   } else {
    HEAP32[i10 >> 2] = 0;
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i9);
    i1 = 0;
    break L1;
   }
  } while (0);
  i13 = i2 - i4 | 0;
  i2 = i13 >> 2;
  if ((i13 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 63](i1, i11, i2) | 0) != (i2 | 0) : 0) {
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  }
  HEAP32[i6 >> 2] = 0;
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function _loadNFTMarker(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i13 = i17 + 80 | 0;
 i12 = i17 + 72 | 0;
 i11 = i17 + 64 | 0;
 i10 = i17 + 56 | 0;
 i9 = i17 + 48 | 0;
 i8 = i17 + 40 | 0;
 i16 = i17 + 32 | 0;
 i15 = i17 + 24 | 0;
 i14 = i17 + 16 | 0;
 i7 = i17 + 8 | 0;
 i18 = i17;
 i4 = i17 + 88 | 0;
 i5 = i17 + 84 | 0;
 i6 = HEAP32[i1 + 232 >> 2] | 0;
 i19 = _trackingInit(i6) | 0;
 HEAP32[i1 + 240 >> 2] = i19;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i18 >> 2] = i3;
 _arLog(0, 1, 44686, i18);
 do if ((_kpmLoadRefDataSet(i3, 44704, i5) | 0) >= 0) {
  HEAP32[i14 >> 2] = i2;
  _arLog(0, 1, 44748, i14);
  if ((_kpmChangePageNoOfRefDataSet(HEAP32[i5 >> 2] | 0, -1, i2) | 0) < 0) {
   _arLog(0, 3, 44773, i15);
   i1 = 0;
   break;
  }
  if ((_kpmMergeRefDataSet(i4, i5) | 0) < 0) {
   _arLog(0, 3, 44809, i16);
   i1 = 0;
   break;
  }
  _arLog(0, 1, 44836, i8);
  HEAP32[i9 >> 2] = i3;
  _arLog(0, 1, 44845, i9);
  i19 = _ar2ReadSurfaceSet(i3, 44862, 0) | 0;
  HEAP32[i1 + 272 + (i2 << 2) >> 2] = i19;
  if (!i19) {
   HEAP32[i10 >> 2] = i3;
   _arLog(0, 3, 44867, i10);
  }
  _arLog(0, 1, 44836, i11);
  if ((i2 | 0) == 10) _exit(-1);
  if ((_kpmSetRefDataSet(i6, HEAP32[i4 >> 2] | 0) | 0) < 0) {
   _arLog(0, 3, 44900, i12);
   i1 = 0;
   break;
  } else {
   _kpmDeleteRefDataSet(i4) | 0;
   _arLog(0, 1, 44925, i13);
   i1 = 1;
   break;
  }
 } else {
  HEAP32[i7 >> 2] = i3;
  _arLog(0, 3, 44710, i7);
  i1 = 0;
 } while (0);
 STACKTOP = i17;
 return i1 | 0;
}

function _mbsnrtowcs(i2, i10, i6, i1, i9) {
 i2 = i2 | 0;
 i10 = i10 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i9 = i9 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i11 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1040);
 i8 = i13;
 i11 = i13 + 1024 | 0;
 i7 = HEAP32[i10 >> 2] | 0;
 HEAP32[i11 >> 2] = i7;
 i12 = (i2 | 0) != 0;
 i4 = i12 ? i1 : 256;
 i5 = i12 ? i2 : i8;
 i3 = i7;
 L1 : do if ((i4 | 0) != 0 & (i7 | 0) != 0) {
  i1 = 0;
  i7 = i5;
  while (1) {
   i2 = i6 >>> 2;
   i5 = i2 >>> 0 >= i4 >>> 0;
   if (!(i6 >>> 0 > 131 | i5)) {
    i5 = i7;
    break L1;
   }
   i2 = i5 ? i4 : i2;
   i6 = i6 - i2 | 0;
   i2 = _mbsrtowcs(i7, i11, i2, i9) | 0;
   if ((i2 | 0) == -1) break;
   i5 = (i7 | 0) == (i8 | 0);
   i4 = i4 - (i5 ? 0 : i2) | 0;
   i5 = i5 ? i7 : i7 + (i2 << 2) | 0;
   i1 = i2 + i1 | 0;
   i3 = HEAP32[i11 >> 2] | 0;
   if ((i4 | 0) != 0 & (i3 | 0) != 0) i7 = i5; else break L1;
  }
  i1 = -1;
  i5 = i7;
  i4 = 0;
  i3 = HEAP32[i11 >> 2] | 0;
 } else i1 = 0; while (0);
 L9 : do if ((i3 | 0) != 0 ? (i4 | 0) != 0 & (i6 | 0) != 0 : 0) {
  while (1) {
   i2 = _mbrtowc(i5, i3, i6, i9) | 0;
   if ((i2 + 2 | 0) >>> 0 < 3) break;
   i3 = (HEAP32[i11 >> 2] | 0) + i2 | 0;
   HEAP32[i11 >> 2] = i3;
   i6 = i6 - i2 | 0;
   i4 = i4 + -1 | 0;
   i1 = i1 + 1 | 0;
   if (!((i4 | 0) != 0 & (i6 | 0) != 0)) break L9; else i5 = i5 + 4 | 0;
  }
  switch (i2 | 0) {
  case -1:
   {
    i1 = i2;
    break L9;
   }
  case 0:
   {
    HEAP32[i11 >> 2] = 0;
    break L9;
   }
  default:
   {
    HEAP32[i9 >> 2] = 0;
    break L9;
   }
  }
 } while (0);
 if (i12) HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
 STACKTOP = i13;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i8) {
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0;
 i6 = i8 + 11 | 0;
 i2 = HEAP8[i6 >> 0] | 0;
 i3 = i2 << 24 >> 24 < 0;
 if (i3) {
  i9 = HEAP32[i8 + 4 >> 2] | 0;
  i4 = (HEAP32[i8 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i9 = i2 & 255;
  i4 = 10;
 }
 i1 = i9 >>> 0 < 11;
 i7 = i1 ? 10 : (i9 + 16 & -16) + -1 | 0;
 L5 : do if ((i7 | 0) != (i4 | 0)) {
  do if (i1) {
   i1 = HEAP32[i8 >> 2] | 0;
   if (i3) {
    i4 = 0;
    i2 = i1;
    i3 = i8;
    i5 = 12;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcm(i8, i1, (i2 & 255) + 1 | 0) | 0;
    __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm(i1);
    i5 = 15;
   }
  } else {
   i2 = i7 + 1 | 0;
   i3 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm(i2) | 0;
   if (i7 >>> 0 <= i4 >>> 0 & (i3 | 0) == 0) break L5;
   i1 = HEAP8[i6 >> 0] | 0;
   if (i1 << 24 >> 24 < 0) {
    i4 = 1;
    i2 = HEAP32[i8 >> 2] | 0;
    i5 = 12;
    break;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcm(i3, i8, (i1 & 255) + 1 | 0) | 0;
    i1 = i8 + 4 | 0;
    i5 = 14;
    break;
   }
  } while (0);
  if ((i5 | 0) == 12) {
   i1 = i8 + 4 | 0;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm(i3, i2, (HEAP32[i1 >> 2] | 0) + 1 | 0) | 0;
   __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm(i2);
   if (i4) {
    i2 = i7 + 1 | 0;
    i5 = 14;
   } else i5 = 15;
  }
  if ((i5 | 0) == 14) {
   HEAP32[i8 + 8 >> 2] = i2 | -2147483648;
   HEAP32[i1 >> 2] = i9;
   HEAP32[i8 >> 2] = i3;
   break;
  } else if ((i5 | 0) == 15) {
   HEAP8[i6 >> 0] = i9;
   break;
  }
 } while (0);
 return;
}

function __ZNK6vision21HoughSimilarityVoting14getBinDistanceERfS1_S1_S1_ffffffff(i1, i2, i7, i8, i9, d10, d11, d12, d13, d14, d3, d4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 d10 = +d10;
 d11 = +d11;
 d12 = +d12;
 d13 = +d13;
 d14 = +d14;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 var i6 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i15;
 d14 = +Math_abs(+(d10 - d14));
 HEAPF32[i2 >> 2] = d14;
 d14 = +Math_abs(+(d11 - d3));
 HEAPF32[i7 >> 2] = d14;
 d14 = +Math_abs(+(d13 - d5));
 HEAPF32[i9 >> 2] = d14;
 d14 = +Math_abs(+(d12 - d4));
 d14 = +__ZN6vision4min2IfEET_S1_S1_(d14, +(HEAP32[i1 + 60 >> 2] | 0) - d14);
 HEAPF32[i8 >> 2] = d14;
 if (!(d14 >= 0.0)) {
  i15 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 30338) | 0, 30558) | 0, 33655) | 0, 333) | 0, 33662) | 0, 30379) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i15 + (HEAP32[(HEAP32[i15 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58792) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
  _abort();
 } else {
  STACKTOP = i15;
  return;
 }
}

function ___vfprintf_internal(i17, i8, i1, i10, i11) {
 i17 = i17 | 0;
 i8 = i8 | 0;
 i1 = i1 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(224);
 i13 = i18 + 208 | 0;
 i14 = i18 + 160 | 0;
 i15 = i18 + 80 | 0;
 i16 = i18;
 i2 = i14;
 i3 = i2 + 40 | 0;
 do {
  HEAP32[i2 >> 2] = 0;
  i2 = i2 + 4 | 0;
 } while ((i2 | 0) < (i3 | 0));
 HEAP32[i13 >> 2] = HEAP32[i1 >> 2];
 if ((_printf_core(0, i8, i13, i15, i14, i10, i11) | 0) < 0) i1 = -1; else {
  if ((HEAP32[i17 + 76 >> 2] | 0) > -1) i12 = ___lockfile(i17) | 0; else i12 = 0;
  i1 = HEAP32[i17 >> 2] | 0;
  i9 = i1 & 32;
  if ((HEAP8[i17 + 74 >> 0] | 0) < 1) HEAP32[i17 >> 2] = i1 & -33;
  i2 = i17 + 48 | 0;
  if (!(HEAP32[i2 >> 2] | 0)) {
   i3 = i17 + 44 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   HEAP32[i3 >> 2] = i16;
   i5 = i17 + 28 | 0;
   HEAP32[i5 >> 2] = i16;
   i6 = i17 + 20 | 0;
   HEAP32[i6 >> 2] = i16;
   HEAP32[i2 >> 2] = 80;
   i7 = i17 + 16 | 0;
   HEAP32[i7 >> 2] = i16 + 80;
   i1 = _printf_core(i17, i8, i13, i15, i14, i10, i11) | 0;
   if (i4) {
    FUNCTION_TABLE_iiii[HEAP32[i17 + 36 >> 2] & 63](i17, 0, 0) | 0;
    i1 = (HEAP32[i6 >> 2] | 0) == 0 ? -1 : i1;
    HEAP32[i3 >> 2] = i4;
    HEAP32[i2 >> 2] = 0;
    HEAP32[i7 >> 2] = 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i6 >> 2] = 0;
   }
  } else i1 = _printf_core(i17, i8, i13, i15, i14, i10, i11) | 0;
  i2 = HEAP32[i17 >> 2] | 0;
  HEAP32[i17 >> 2] = i2 | i9;
  if (i12 | 0) ___unlockfile(i17);
  i1 = (i2 & 32 | 0) == 0 ? i1 : -1;
 }
 STACKTOP = i18;
 return i1 | 0;
}

function _ar2GetBestMatchingSubFineOpt(i1, i4, i2, i3, i15, i11, i14, i12, i13, i16) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i15 = i15 | 0;
 i11 = i11 | 0;
 i14 = i14 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i16 = i16 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i6 = i1 + ((Math_imul(i3, i4) | 0) + i2) | 0;
 i9 = HEAP32[i15 + 4 >> 2] | 0;
 i7 = i4 << 1;
 i8 = HEAP32[i15 >> 2] | 0;
 i4 = 0;
 i1 = HEAP32[i15 + 24 >> 2] | 0;
 i10 = 0;
 while (1) {
  if ((i4 | 0) >= (i9 | 0)) break;
  i5 = 0;
  i2 = i6;
  i3 = i10;
  while (1) {
   if ((i5 | 0) >= (i8 | 0)) break;
   i10 = (Math_imul(HEAPU16[i1 >> 1] | 0, HEAPU8[i2 >> 0] | 0) | 0) + i3 | 0;
   i5 = i5 + 1 | 0;
   i1 = i1 + 2 | 0;
   i2 = i2 + 2 | 0;
   i3 = i10;
  }
  i4 = i4 + 1 | 0;
  i6 = i6 + i7 | 0;
  i10 = i3;
 }
 i1 = i8 << 1;
 i8 = i1 + 8 | 0;
 i3 = i12 + -2 | 0;
 i1 = i3 + i1 | 0;
 i2 = i13 + -2 | 0;
 i13 = Math_imul(i8, i2 + (i9 << 1) | 0) | 0;
 i2 = Math_imul(i8, i2) | 0;
 i12 = i13 + i1 | 0;
 i9 = i2 + i3 | 0;
 i13 = i13 + i3 | 0;
 i1 = i2 + i1 | 0;
 i2 = (HEAP32[i11 + (i9 << 2) >> 2] | 0) + (HEAP32[i11 + (i12 << 2) >> 2] | 0) - (HEAP32[i11 + (i13 << 2) >> 2] | 0) - (HEAP32[i11 + (i1 << 2) >> 2] | 0) | 0;
 i3 = HEAP32[i15 + 36 >> 2] | 0;
 i1 = (HEAP32[i14 + (i9 << 2) >> 2] | 0) + (HEAP32[i14 + (i12 << 2) >> 2] | 0) - (HEAP32[i14 + (i13 << 2) >> 2] | 0) - (HEAP32[i14 + (i1 << 2) >> 2] | 0) - ((Math_imul(i2, i2) | 0) / (i3 | 0) | 0) | 0;
 if (!i1) i1 = 0; else {
  i14 = (i10 - ((Math_imul(HEAP32[i15 + 32 >> 2] | 0, i2) | 0) / (i3 | 0) | 0) | 0) * 100 | 0;
  i1 = (((i14 | 0) / (HEAP32[i15 + 28 >> 2] | 0) | 0) * 100 | 0) / (~~+Math_sqrt(+(+(i1 | 0))) | 0) | 0;
 }
 HEAP32[i16 >> 2] = i1;
 return;
}

function _EV_create(i11, i12, i1, i13) {
 i11 = i11 | 0;
 i12 = i12 | 0;
 i1 = i1 | 0;
 i13 = i13 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, d9 = 0.0, i10 = 0, i14 = 0, i15 = 0, d16 = 0.0;
 i14 = HEAP32[i11 + 4 >> 2] | 0;
 i15 = HEAP32[i11 + 8 >> 2] | 0;
 L1 : do if (((((!((i14 | 0) < 1 | (i15 | 0) < 1) ? (HEAP32[i12 + 4 >> 2] | 0) == (i14 | 0) : 0) ? (HEAP32[i12 + 8 >> 2] | 0) == (i14 | 0) : 0) ? (HEAP32[i1 + 4 >> 2] | 0) == (i14 | 0) : 0) ? (HEAP32[i1 + 8 >> 2] | 0) == (i15 | 0) : 0) ? (HEAP32[i13 + 4 >> 2] | 0) == (i14 | 0) : 0) {
  i3 = 0;
  i1 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i3 | 0) >= (i14 | 0)) break;
   d4 = +HEAPF64[(HEAP32[i13 >> 2] | 0) + (i3 << 3) >> 3];
   if (d4 < 1.0e-16) break;
   d9 = 1.0 / +Math_sqrt(+(+Math_abs(+d4)));
   i10 = Math_imul(i3, i14) | 0;
   i5 = 0;
   i8 = i1;
   while (1) {
    if ((i5 | 0) == (i15 | 0)) break;
    i2 = 0;
    i6 = (HEAP32[i12 >> 2] | 0) + (i10 << 3) | 0;
    d4 = 0.0;
    i7 = (HEAP32[i11 >> 2] | 0) + (i5 << 3) | 0;
    while (1) {
     if ((i2 | 0) == (i14 | 0)) break;
     d16 = d4 + +HEAPF64[i6 >> 3] * +HEAPF64[i7 >> 3];
     i2 = i2 + 1 | 0;
     i6 = i6 + 8 | 0;
     d4 = d16;
     i7 = i7 + (i15 << 3) | 0;
    }
    HEAPF64[i8 >> 3] = d9 * d4;
    i5 = i5 + 1 | 0;
    i8 = i8 + 8 | 0;
   }
   i3 = i3 + 1 | 0;
   i1 = i1 + (i15 << 3) | 0;
  }
  while (1) {
   if ((i3 | 0) >= (i14 | 0)) {
    i1 = 0;
    break L1;
   }
   HEAPF64[(HEAP32[i13 >> 2] | 0) + (i3 << 3) >> 3] = 0.0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) >= (i15 | 0)) break;
    HEAPF64[i1 >> 3] = 0.0;
    i2 = i2 + 1 | 0;
    i1 = i1 + 8 | 0;
   }
   i3 = i3 + 1 | 0;
  }
 } else i1 = -1; while (0);
 return i1 | 0;
}

function ___fdopen(i6, i2) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i8 = i9 + 40 | 0;
 i5 = i9 + 24 | 0;
 i4 = i9 + 16 | 0;
 i3 = i9;
 i7 = i9 + 56 | 0;
 if (_strchr(47017, HEAP8[i2 >> 0] | 0) | 0) {
  i1 = _malloc(1176) | 0;
  if (!i1) i1 = 0; else {
   _memset(i1 | 0, 0, 144) | 0;
   if (!(_strchr(i2, 43) | 0)) HEAP32[i1 >> 2] = (HEAP8[i2 >> 0] | 0) == 114 ? 8 : 4;
   if (_strchr(i2, 101) | 0) {
    HEAP32[i3 >> 2] = i6;
    HEAP32[i3 + 4 >> 2] = 2;
    HEAP32[i3 + 8 >> 2] = 1;
    ___syscall221(221, i3 | 0) | 0;
   }
   if ((HEAP8[i2 >> 0] | 0) == 97) {
    HEAP32[i4 >> 2] = i6;
    HEAP32[i4 + 4 >> 2] = 3;
    i2 = ___syscall221(221, i4 | 0) | 0;
    if (!(i2 & 1024)) {
     HEAP32[i5 >> 2] = i6;
     HEAP32[i5 + 4 >> 2] = 4;
     HEAP32[i5 + 8 >> 2] = i2 | 1024;
     ___syscall221(221, i5 | 0) | 0;
    }
    i3 = HEAP32[i1 >> 2] | 128;
    HEAP32[i1 >> 2] = i3;
   } else i3 = HEAP32[i1 >> 2] | 0;
   HEAP32[i1 + 60 >> 2] = i6;
   HEAP32[i1 + 44 >> 2] = i1 + 152;
   HEAP32[i1 + 48 >> 2] = 1024;
   i2 = i1 + 75 | 0;
   HEAP8[i2 >> 0] = -1;
   if ((i3 & 8 | 0) == 0 ? (HEAP32[i8 >> 2] = i6, HEAP32[i8 + 4 >> 2] = 21523, HEAP32[i8 + 8 >> 2] = i7, (___syscall54(54, i8 | 0) | 0) == 0) : 0) HEAP8[i2 >> 0] = 10;
   HEAP32[i1 + 32 >> 2] = 1;
   HEAP32[i1 + 36 >> 2] = 2;
   HEAP32[i1 + 40 >> 2] = 1;
   HEAP32[i1 + 12 >> 2] = 2;
   if (!(HEAP32[14276] | 0)) HEAP32[i1 + 76 >> 2] = -1;
   ___ofl_add(i1) | 0;
  }
 } else {
  i1 = ___errno_location() | 0;
  HEAP32[i1 >> 2] = 22;
  i1 = 0;
 }
 STACKTOP = i9;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri(i1, i3, i4, i5) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i2 = 0;
 L1 : do if (i1 >>> 0 < i3 >>> 0) {
  L3 : do if ((HEAP8[i1 >> 0] | 0) != 95) {
   if ((__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i3, i4) | 0) != (i3 | 0)) {
    HEAP32[i5 >> 2] = -2;
    break L1;
   }
  } else {
   if ((i3 - i1 | 0) <= 3) {
    HEAP32[i5 >> 2] = -2;
    break L1;
   }
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 90:
    {
     i2 = i1 + 2 | 0;
     i1 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i2, i3, i4) | 0;
     if (!((i1 | 0) == (i2 | 0) | (i1 | 0) == (i3 | 0)) ? (HEAP8[i1 >> 0] | 0) == 46 : 0) i1 = __ZN10__cxxabiv112_GLOBAL__N_116parse_dot_suffixINS0_2DbEEEPKcS4_S4_RT_(i1, i3, i4) | 0;
     if ((i1 | 0) == (i3 | 0)) break L3;
     HEAP32[i5 >> 2] = -2;
     break L1;
    }
   case 95:
    {
     i2 = 11;
     break;
    }
   default:
    {}
   }
   if (((i2 | 0) == 11 ? (HEAP8[i1 + 2 >> 0] | 0) == 95 : 0) ? (HEAP8[i1 + 3 >> 0] | 0) == 90 : 0) {
    i2 = i1 + 4 | 0;
    i1 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i2, i3, i4) | 0;
    if ((i1 | 0) == (i2 | 0) | (i1 | 0) == (i3 | 0)) {
     HEAP32[i5 >> 2] = -2;
     break L1;
    }
    if ((__ZN10__cxxabiv112_GLOBAL__N_118parse_block_invokeINS0_2DbEEEPKcS4_S4_RT_(i1, i3, i4) | 0) == (i3 | 0)) break;
    HEAP32[i5 >> 2] = -2;
    break L1;
   }
   HEAP32[i5 >> 2] = -2;
   break L1;
  } while (0);
  if ((HEAP32[i5 >> 2] | 0) == 0 ? (HEAP32[i4 >> 2] | 0) == (HEAP32[i4 + 4 >> 2] | 0) : 0) HEAP32[i5 >> 2] = -2;
 } else HEAP32[i5 >> 2] = -2; while (0);
 return;
}

function __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i7, i11, i2, i3, i8) {
 i10 = i10 | 0;
 i7 = i7 | 0;
 i11 = i11 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i12;
 i1 = HEAP32[i10 >> 2] | 0;
 L1 : do if (!i1) i1 = 0; else {
  i5 = i7;
  i4 = i2 - i5 | 0;
  i6 = i3 + 12 | 0;
  i3 = HEAP32[i6 >> 2] | 0;
  i3 = (i3 | 0) > (i4 | 0) ? i3 - i4 | 0 : 0;
  i4 = i11;
  i5 = i4 - i5 | 0;
  if ((i5 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 63](i1, i7, i5) | 0) != (i5 | 0) : 0) {
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  }
  do if ((i3 | 0) > 0) {
   HEAP32[i9 >> 2] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
   HEAP32[i9 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc(i9, i3, i8);
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 63](i1, (HEAP8[i9 + 11 >> 0] | 0) < 0 ? HEAP32[i9 >> 2] | 0 : i9, i3) | 0) == (i3 | 0)) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
    break;
   } else {
    HEAP32[i10 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
    i1 = 0;
    break L1;
   }
  } while (0);
  i2 = i2 - i4 | 0;
  if ((i2 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 63](i1, i11, i2) | 0) != (i2 | 0) : 0) {
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  }
  HEAP32[i6 >> 2] = 0;
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_throw_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i7 = i10 + 24 | 0;
 i8 = i10;
 i9 = i10 + 12 | 0;
 if (((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 116 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 119 : 0) ? (i11 = i1 + 2 | 0, i5 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i11, i2, i3) | 0, (i5 | 0) != (i11 | 0)) : 0) ? (i6 = i3 + 4 | 0, i4 = HEAP32[i6 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i4 | 0)) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i9, i4 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i9, 0, 50722) | 0;
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i9 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i7, i8);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i6 >> 2] | 0) + -24 | 0, i7);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  i1 = i5;
 }
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8__appendEm(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i8;
 i6 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if ((((HEAP32[i6 >> 2] | 0) - i1 | 0) / 36 | 0) >>> 0 < i4 >>> 0) {
  i1 = ((i1 - (HEAP32[i3 >> 2] | 0) | 0) / 36 | 0) + i4 | 0;
  i2 = __ZNKSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8max_sizeEv(i3) | 0;
  if (i2 >>> 0 < i1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i3); else {
   i9 = HEAP32[i3 >> 2] | 0;
   i10 = ((HEAP32[i6 >> 2] | 0) - i9 | 0) / 36 | 0;
   i6 = i10 << 1;
   __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEEC2EmmS6_(i5, i10 >>> 0 < i2 >>> 1 >>> 0 ? (i6 >>> 0 < i1 >>> 0 ? i1 : i6) : i2, ((HEAP32[i7 >> 2] | 0) - i9 | 0) / 36 | 0, i3 + 8 | 0);
   __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEE18__construct_at_endEm(i5, i4);
   __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i3, i5);
   __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEED2Ev(i5);
   break;
  }
 } else __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE18__construct_at_endEm(i3, i4); while (0);
 STACKTOP = i8;
 return;
}

function __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE8__appendEm(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i8;
 i6 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if ((((HEAP32[i6 >> 2] | 0) - i1 | 0) / 12 | 0) >>> 0 < i4 >>> 0) {
  i1 = ((i1 - (HEAP32[i3 >> 2] | 0) | 0) / 12 | 0) + i4 | 0;
  i2 = __ZNKSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE8max_sizeEv(i3) | 0;
  if (i2 >>> 0 < i1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i3); else {
   i9 = HEAP32[i3 >> 2] | 0;
   i10 = ((HEAP32[i6 >> 2] | 0) - i9 | 0) / 12 | 0;
   i6 = i10 << 1;
   __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEEC2EmmSA_(i5, i10 >>> 0 < i2 >>> 1 >>> 0 ? (i6 >>> 0 < i1 >>> 0 ? i1 : i6) : i2, ((HEAP32[i7 >> 2] | 0) - i9 | 0) / 12 | 0, i3 + 8 | 0);
   __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEE18__construct_at_endEm(i5, i4);
   __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS8_EE(i3, i5);
   __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEED2Ev(i5);
   break;
  }
 } else __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE18__construct_at_endEm(i3, i4); while (0);
 STACKTOP = i8;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_arrow_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 var i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i9;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 112 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 116 : 0) ? (i10 = i1 + 2 | 0, i3 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i10, i2, i5) | 0, (i3 | 0) != (i10 | 0)) : 0) ? (i6 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i3, i2, i5) | 0, (i6 | 0) != (i3 | 0)) : 0) ? (i7 = i5 + 4 | 0, i4 = HEAP32[i7 >> 2] | 0, ((i4 - (HEAP32[i5 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i4 + -24 | 0);
  i2 = HEAP32[i7 >> 2] | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == -1) break;
   i10 = i1 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i10 * 24 | 0) | 0);
   i1 = i10;
  }
  HEAP32[i7 >> 2] = i2 + -24;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i2 + -48 | 0, 50794) | 0;
  i1 = HEAP8[i8 + 11 >> 0] | 0;
  i10 = i1 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i7 >> 2] | 0) + -24 | 0, i10 ? HEAP32[i8 >> 2] | 0 : i8, i10 ? HEAP32[i8 + 4 >> 2] | 0 : i1 & 255) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  i1 = i6;
 }
 STACKTOP = i9;
 return i1 | 0;
}

function _jinit_memory_mgr(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i10;
 i6 = i10 + 8 | 0;
 i7 = i10 + 12 | 0;
 i4 = i1 + 4 | 0;
 HEAP32[i4 >> 2] = 0;
 i2 = _jpeg_mem_init(i1) | 0;
 HEAP32[i6 >> 2] = i2;
 i5 = _jpeg_get_small(i1, 84) | 0;
 if (!i5) {
  _jpeg_mem_term(i1);
  i8 = HEAP32[i1 >> 2] | 0;
  HEAP32[i8 + 20 >> 2] = 54;
  HEAP32[i8 + 24 >> 2] = 0;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 HEAP32[i5 >> 2] = 27;
 HEAP32[i5 + 4 >> 2] = 28;
 HEAP32[i5 + 8 >> 2] = 7;
 HEAP32[i5 + 12 >> 2] = 8;
 HEAP32[i5 + 16 >> 2] = 39;
 HEAP32[i5 + 20 >> 2] = 40;
 HEAP32[i5 + 24 >> 2] = 114;
 HEAP32[i5 + 28 >> 2] = 21;
 HEAP32[i5 + 32 >> 2] = 22;
 HEAP32[i5 + 36 >> 2] = 40;
 HEAP32[i5 + 40 >> 2] = 115;
 HEAP32[i5 + 48 >> 2] = 1e9;
 i8 = i5 + 44 | 0;
 HEAP32[i8 >> 2] = i2;
 i2 = i5 + 52 | 0;
 i3 = i5 + 60 | 0;
 i1 = 1;
 while (1) {
  if ((i1 | 0) <= -1) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  HEAP32[i3 + (i1 << 2) >> 2] = 0;
  i1 = i1 + -1 | 0;
 }
 HEAP32[i5 + 68 >> 2] = 0;
 HEAP32[i5 + 72 >> 2] = 0;
 HEAP32[i5 + 76 >> 2] = 84;
 HEAP32[i4 >> 2] = i5;
 i1 = _getenv(38394) | 0;
 if (i1 | 0 ? (HEAP8[i7 >> 0] = 120, HEAP32[i9 >> 2] = i6, HEAP32[i9 + 4 >> 2] = i7, (_sscanf(i1, 38402, i9) | 0) > 0) : 0) {
  switch (HEAP8[i7 >> 0] | 0) {
  case 77:
  case 109:
   {
    i1 = (HEAP32[i6 >> 2] | 0) * 1e3 | 0;
    HEAP32[i6 >> 2] = i1;
    break;
   }
  default:
   i1 = HEAP32[i6 >> 2] | 0;
  }
  HEAP32[i8 >> 2] = i1 * 1e3;
 }
 STACKTOP = i10;
 return;
}

function __ZN6vision18Condition4Points2dIfEEbPT_S2_S2_S2_RS1_S2_PKS1_S5_S5_S5_(i15, i16, i17, i18, i19, i1, i2, i3, i7, i12) {
 i15 = i15 | 0;
 i16 = i16 | 0;
 i17 = i17 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i12 = i12 | 0;
 var d4 = 0.0, d5 = 0.0, d6 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d13 = 0.0, d14 = 0.0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 d4 = (+HEAPF32[i2 >> 2] + +HEAPF32[i3 >> 2] + +HEAPF32[i7 >> 2] + +HEAPF32[i12 >> 2]) * .25;
 HEAPF32[i1 >> 2] = d4;
 i23 = i2 + 4 | 0;
 i22 = i3 + 4 | 0;
 i21 = i7 + 4 | 0;
 i20 = i12 + 4 | 0;
 d5 = (+HEAPF32[i23 >> 2] + +HEAPF32[i22 >> 2] + +HEAPF32[i21 >> 2] + +HEAPF32[i20 >> 2]) * .25;
 HEAPF32[i1 + 4 >> 2] = d5;
 d13 = +HEAPF32[i2 >> 2] - d4;
 d14 = +HEAPF32[i23 >> 2] - d5;
 d10 = +HEAPF32[i3 >> 2] - d4;
 d11 = +HEAPF32[i22 >> 2] - d5;
 d8 = +HEAPF32[i7 >> 2] - d4;
 d9 = +HEAPF32[i21 >> 2] - d5;
 d4 = +HEAPF32[i12 >> 2] - d4;
 d5 = +HEAPF32[i20 >> 2] - d5;
 d6 = (+Math_sqrt(+(d13 * d13 + d14 * d14)) + +Math_sqrt(+(d10 * d10 + d11 * d11)) + +Math_sqrt(+(d8 * d8 + d9 * d9)) + +Math_sqrt(+(d4 * d4 + d5 * d5))) * .25;
 if (d6 == 0.0) i1 = 0; else {
  d6 = 1.0 / d6 * 1.4142135623730951;
  HEAPF32[i19 >> 2] = d6;
  HEAPF32[i15 >> 2] = d13 * d6;
  HEAPF32[i15 + 4 >> 2] = d14 * +HEAPF32[i19 >> 2];
  HEAPF32[i16 >> 2] = d10 * +HEAPF32[i19 >> 2];
  HEAPF32[i16 + 4 >> 2] = d11 * +HEAPF32[i19 >> 2];
  HEAPF32[i17 >> 2] = d8 * +HEAPF32[i19 >> 2];
  HEAPF32[i17 + 4 >> 2] = d9 * +HEAPF32[i19 >> 2];
  HEAPF32[i18 >> 2] = d4 * +HEAPF32[i19 >> 2];
  HEAPF32[i18 + 4 >> 2] = d5 * +HEAPF32[i19 >> 2];
  i1 = 1;
 }
 return i1 | 0;
}

function _h2v2_fancy_upsample(i2, i3, i19, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i19 = i19 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0;
 i18 = HEAP32[i1 >> 2] | 0;
 i17 = i2 + 312 | 0;
 i14 = i3 + 40 | 0;
 i2 = 0;
 i3 = 0;
 while (1) {
  if ((i2 | 0) >= (HEAP32[i17 >> 2] | 0)) break;
  i15 = i19 + (i3 << 2) | 0;
  i1 = 0;
  i9 = i2;
  while (1) {
   if ((i1 | 0) == 2) break;
   i8 = HEAP32[i15 >> 2] | 0;
   i10 = HEAP32[i19 + (((i1 | 0) == 0 ? -1 : 1) + i3 << 2) >> 2] | 0;
   i12 = HEAP32[i18 + (i9 << 2) >> 2] | 0;
   i5 = ((HEAPU8[i8 >> 0] | 0) * 3 | 0) + (HEAPU8[i10 >> 0] | 0) | 0;
   i6 = ((HEAPU8[i8 + 1 >> 0] | 0) * 3 | 0) + (HEAPU8[i10 + 1 >> 0] | 0) | 0;
   HEAP8[i12 >> 0] = ((i5 << 2) + 8 | 0) >>> 4;
   HEAP8[i12 + 1 >> 0] = ((i5 * 3 | 0) + 7 + i6 | 0) >>> 4;
   i4 = HEAP32[i14 >> 2] | 0;
   i13 = i4 << 1;
   i16 = i12 + -2 | 0;
   i4 = i4 + -2 | 0;
   i8 = i8 + 2 | 0;
   i10 = i10 + 2 | 0;
   i11 = i12;
   while (1) {
    i7 = i11 + 2 | 0;
    if (!i4) break;
    i21 = ((HEAPU8[i8 >> 0] | 0) * 3 | 0) + (HEAPU8[i10 >> 0] | 0) | 0;
    i20 = i6 * 3 | 0;
    HEAP8[i7 >> 0] = (i5 + 8 + i20 | 0) >>> 4;
    HEAP8[i11 + 3 >> 0] = (i20 + 7 + i21 | 0) >>> 4;
    i20 = i6;
    i4 = i4 + -1 | 0;
    i6 = i21;
    i8 = i8 + 1 | 0;
    i10 = i10 + 1 | 0;
    i11 = i7;
    i5 = i20;
   }
   HEAP8[i16 + i13 >> 0] = (i5 + 8 + (i6 * 3 | 0) | 0) >>> 4;
   HEAP8[i12 + -4 + i13 + 3 >> 0] = ((i6 << 2) + 7 | 0) >>> 4;
   i1 = i1 + 1 | 0;
   i9 = i9 + 1 | 0;
  }
  i2 = i2 + 2 | 0;
  i3 = i3 + 1 | 0;
 }
 return;
}

function ___dynamic_cast(i1, i2, i10, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i10 = i10 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i11 = i13;
 i9 = HEAP32[i1 >> 2] | 0;
 i12 = i1 + (HEAP32[i9 + -8 >> 2] | 0) | 0;
 i9 = HEAP32[i9 + -4 >> 2] | 0;
 HEAP32[i11 >> 2] = i10;
 HEAP32[i11 + 4 >> 2] = i1;
 HEAP32[i11 + 8 >> 2] = i2;
 HEAP32[i11 + 12 >> 2] = i3;
 i1 = i11 + 16 | 0;
 i2 = i11 + 20 | 0;
 i3 = i11 + 24 | 0;
 i4 = i11 + 28 | 0;
 i5 = i11 + 32 | 0;
 i6 = i11 + 40 | 0;
 i7 = i1;
 i8 = i7 + 36 | 0;
 do {
  HEAP32[i7 >> 2] = 0;
  i7 = i7 + 4 | 0;
 } while ((i7 | 0) < (i8 | 0));
 HEAP16[i1 + 36 >> 1] = 0;
 HEAP8[i1 + 38 >> 0] = 0;
 L1 : do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i9, i10, 0) | 0) {
  HEAP32[i11 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 20 >> 2] & 7](i9, i11, i12, i12, 1, 0);
  i1 = (HEAP32[i3 >> 2] | 0) == 1 ? i12 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 24 >> 2] & 31](i9, i11, i12, 1, 0);
  switch (HEAP32[i11 + 36 >> 2] | 0) {
  case 0:
   {
    i1 = (HEAP32[i6 >> 2] | 0) == 1 & (HEAP32[i4 >> 2] | 0) == 1 & (HEAP32[i5 >> 2] | 0) == 1 ? HEAP32[i2 >> 2] | 0 : 0;
    break L1;
   }
  case 1:
   break;
  default:
   {
    i1 = 0;
    break L1;
   }
  }
  if ((HEAP32[i3 >> 2] | 0) != 1 ? !((HEAP32[i6 >> 2] | 0) == 0 & (HEAP32[i4 >> 2] | 0) == 1 & (HEAP32[i5 >> 2] | 0) == 1) : 0) {
   i1 = 0;
   break;
  }
  i1 = HEAP32[i1 >> 2] | 0;
 } while (0);
 STACKTOP = i13;
 return i1 | 0;
}

function _arParamLTCreate(i2, i8) {
 i2 = i2 | 0;
 i8 = i8 | 0;
 var i1 = 0, i3 = 0, d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, d17 = 0.0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i11 = i16 + 24 | 0;
 i12 = i16 + 16 | 0;
 i13 = i16 + 8 | 0;
 i14 = i16;
 i15 = _malloc(208) | 0;
 if (!i15) {
  _arLog(0, 3, 20581, i16 + 32 | 0);
  _exit(1);
 }
 _memcpy(i15 | 0, i2 | 0, 184) | 0;
 i10 = i8 << 1;
 i9 = (HEAP32[i2 >> 2] | 0) + i10 | 0;
 HEAP32[i15 + 192 >> 2] = i9;
 i10 = (HEAP32[i2 + 4 >> 2] | 0) + i10 | 0;
 HEAP32[i15 + 196 >> 2] = i10;
 HEAP32[i15 + 200 >> 2] = i8;
 HEAP32[i15 + 204 >> 2] = i8;
 i1 = Math_imul(i9 << 3, i10) | 0;
 i3 = _malloc(i1) | 0;
 HEAP32[i15 + 184 >> 2] = i3;
 if (!i3) {
  _arLog(0, 3, 20581, i16 + 40 | 0);
  _exit(1);
 }
 i1 = _malloc(i1) | 0;
 HEAP32[i15 + 188 >> 2] = i1;
 if (!i1) {
  _arLog(0, 3, 20581, i16 + 48 | 0);
  _exit(1);
 }
 i7 = i2 + 104 | 0;
 i6 = HEAP32[i2 + 176 >> 2] | 0;
 i5 = 0;
 i2 = i3;
 while (1) {
  if ((i5 | 0) >= (i10 | 0)) break;
  d4 = +(i5 - i8 | 0);
  i3 = 0;
  while (1) {
   if ((i3 | 0) >= (i9 | 0)) break;
   d17 = +(i3 - i8 | 0);
   _arParamIdeal2Observ(i7, d17, d4, i13, i14, i6) | 0;
   HEAPF32[i2 >> 2] = +HEAPF64[i13 >> 3];
   HEAPF32[i2 + 4 >> 2] = +HEAPF64[i14 >> 3];
   _arParamObserv2Ideal(i7, d17, d4, i11, i12, i6) | 0;
   HEAPF32[i1 >> 2] = +HEAPF64[i11 >> 3];
   HEAPF32[i1 + 4 >> 2] = +HEAPF64[i12 >> 3];
   i3 = i3 + 1 | 0;
   i1 = i1 + 8 | 0;
   i2 = i2 + 8 | 0;
  }
  i5 = i5 + 1 | 0;
 }
 STACKTOP = i16;
 return i15 | 0;
}

function _fgets(i1, i2, i10) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i10 = i10 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i13 = 0;
 if ((HEAP32[i10 + 76 >> 2] | 0) > -1) i9 = ___lockfile(i10) | 0; else i9 = 0;
 i3 = i2 + -1 | 0;
 if ((i2 | 0) < 2) {
  i11 = i10 + 74 | 0;
  i8 = HEAP8[i11 >> 0] | 0;
  HEAP8[i11 >> 0] = i8 + 255 | i8;
  if (i9 | 0) ___unlockfile(i10);
  if (!i3) HEAP8[i1 >> 0] = 0; else i1 = 0;
 } else {
  L11 : do if (i3) {
   i7 = i10 + 4 | 0;
   i8 = i10 + 8 | 0;
   i2 = i1;
   while (1) {
    i4 = HEAP32[i7 >> 2] | 0;
    i12 = i4;
    i13 = (HEAP32[i8 >> 2] | 0) - i12 | 0;
    i6 = _memchr(i4, 10, i13) | 0;
    i5 = (i6 | 0) == 0;
    i6 = i5 ? i13 : 1 - i12 + i6 | 0;
    i6 = i6 >>> 0 < i3 >>> 0 ? i6 : i3;
    _memcpy(i2 | 0, i4 | 0, i6 | 0) | 0;
    i4 = (HEAP32[i7 >> 2] | 0) + i6 | 0;
    HEAP32[i7 >> 2] = i4;
    i2 = i2 + i6 | 0;
    i6 = i3 - i6 | 0;
    if (!(i5 & (i6 | 0) != 0)) {
     i11 = 17;
     break L11;
    }
    if (i4 >>> 0 >= (HEAP32[i8 >> 2] | 0) >>> 0) {
     i3 = ___uflow(i10) | 0;
     if ((i3 | 0) < 0) break; else i4 = i3;
    } else {
     HEAP32[i7 >> 2] = i4 + 1;
     i4 = HEAPU8[i4 >> 0] | 0;
    }
    i5 = i2 + 1 | 0;
    HEAP8[i2 >> 0] = i4;
    i3 = i6 + -1 | 0;
    if ((i4 & 255 | 0) == 10 | (i3 | 0) == 0) {
     i2 = i5;
     i11 = 17;
     break L11;
    } else i2 = i5;
   }
   if ((i2 | 0) != (i1 | 0) ? (HEAP32[i10 >> 2] & 16 | 0) != 0 : 0) i11 = 17; else i1 = 0;
  } else {
   i2 = i1;
   i11 = 17;
  } while (0);
  if ((i11 | 0) == 17) if (!i1) i1 = 0; else HEAP8[i2 >> 0] = 0;
  if (i9) ___unlockfile(i10);
 }
 return i1 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i8, i1) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0;
 if (i1 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i8);
 i10 = i8 + 8 | 0;
 i6 = i10 + 3 | 0;
 i4 = HEAP8[i6 >> 0] | 0;
 i5 = i4 << 24 >> 24 < 0;
 if (i5) {
  i9 = HEAP32[i8 + 4 >> 2] | 0;
  i2 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0;
 } else {
  i9 = i4 & 255;
  i2 = 1;
 }
 i7 = i9 >>> 0 > i1 >>> 0 ? i9 : i1;
 i1 = i7 >>> 0 < 2;
 i7 = i1 ? 1 : (i7 + 4 & -4) + -1 | 0;
 do if ((i7 | 0) != (i2 | 0)) {
  do if (i1) {
   i1 = HEAP32[i8 >> 2] | 0;
   if (i5) {
    i4 = 0;
    i2 = i1;
    i3 = i8;
    i5 = 15;
   } else {
    __ZNSt3__211char_traitsIwE4copyEPwPKwm(i8, i1, (i4 & 255) + 1 | 0) | 0;
    __ZdlPv(i1);
    i5 = 18;
   }
  } else {
   i2 = i7 + 1 | 0;
   if (i2 >>> 0 > 1073741823) _abort();
   i3 = __Znwm(i2 << 2) | 0;
   if (i5) {
    i4 = 1;
    i2 = HEAP32[i8 >> 2] | 0;
    i5 = 15;
    break;
   } else {
    __ZNSt3__211char_traitsIwE4copyEPwPKwm(i3, i8, (i4 & 255) + 1 | 0) | 0;
    i1 = i8 + 4 | 0;
    i5 = 17;
    break;
   }
  } while (0);
  if ((i5 | 0) == 15) {
   i1 = i8 + 4 | 0;
   __ZNSt3__211char_traitsIwE4copyEPwPKwm(i3, i2, (HEAP32[i1 >> 2] | 0) + 1 | 0) | 0;
   __ZdlPv(i2);
   if (i4) {
    i2 = i7 + 1 | 0;
    i5 = 17;
   } else i5 = 18;
  }
  if ((i5 | 0) == 17) {
   HEAP32[i10 >> 2] = i2 | -2147483648;
   HEAP32[i1 >> 2] = i9;
   HEAP32[i8 >> 2] = i3;
   break;
  } else if ((i5 | 0) == 18) {
   HEAP8[i6 >> 0] = i9;
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i4, i5, i1) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i10 + 12 | 0;
 i8 = i10;
 i9 = i10 + 8 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i8, i4);
 if (HEAP8[i8 >> 0] | 0) {
  i6 = (HEAP32[i4 >> 2] | 0) + -12 | 0;
  HEAP32[i9 >> 2] = HEAP32[i4 + (HEAP32[i6 >> 2] | 0) + 24 >> 2];
  i6 = i4 + (HEAP32[i6 >> 2] | 0) | 0;
  i7 = HEAP32[i6 + 4 >> 2] | 0;
  i2 = i5 + i1 | 0;
  i11 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
  i1 = i6 + 76 | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i11, HEAP32[i1 >> 2] | 0) | 0) {
   __ZNKSt3__28ios_base6getlocEv(i3, i6);
   i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
   i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 32) | 0;
   __ZNSt3__26localeD2Ev(i3);
   i11 = i11 << 24 >> 24;
   HEAP32[i1 >> 2] = i11;
   i1 = i11;
  } else i1 = HEAP32[i1 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
  if (!(__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i3, i5, (i7 & 176 | 0) == 32 ? i2 : i5, i2, i6, i1 & 255) | 0)) {
   i11 = i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj(i11, HEAP32[i11 + 16 >> 2] | 5);
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i8);
 STACKTOP = i10;
 return i4 | 0;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = ((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 4) + 1 | 0;
 i6 = __ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] | 0) - i8 | 0;
  i9 = i10 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEEC2EmmS9_(i3, i10 >> 4 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, (HEAP32[i4 >> 2] | 0) - i8 >> 4, i1 + 12 | 0);
  i6 = i3 + 8 | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  HEAP32[i5 >> 2] = 0;
  HEAP32[i5 + 4 >> 2] = 0;
  HEAP32[i5 + 8 >> 2] = 0;
  HEAP32[i5 + 12 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i6 >> 2] = i5 + 16;
  __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i1, i3);
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i10 + 12 | 0;
 i8 = i10 + 8 | 0;
 i9 = i10;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i9, i3);
 if (HEAP8[i9 >> 0] | 0) {
  __ZNKSt3__28ios_base6getlocEv(i2, i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58848) | 0;
  __ZNSt3__26localeD2Ev(i2);
  i6 = i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i7 = HEAP32[i6 + 24 >> 2] | 0;
  i11 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
  i1 = i6 + 76 | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i11, HEAP32[i1 >> 2] | 0) | 0) {
   __ZNKSt3__28ios_base6getlocEv(i2, i6);
   i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58792) | 0;
   i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 32) | 0;
   __ZNSt3__26localeD2Ev(i2);
   i11 = i11 << 24 >> 24;
   HEAP32[i1 >> 2] = i11;
   i1 = i11;
  } else i1 = HEAP32[i1 >> 2] | 0;
  i11 = HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i8 >> 2] = i7;
  HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[i11 & 31](i5, i2, i6, i1 & 255, i4) | 0)) {
   i11 = i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj(i11, HEAP32[i11 + 16 >> 2] | 5);
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i9);
 STACKTOP = i10;
 return i3 | 0;
}

function _ar2ScreenCoord2MarkerCoord(i1, i7, d2, d13, i15, i16) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 d2 = +d2;
 d13 = +d13;
 i15 = i15 | 0;
 i16 = i16 | 0;
 var d3 = 0.0, i4 = 0, i5 = 0, d6 = 0.0, i8 = 0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, i14 = 0, i17 = 0, d18 = 0.0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i4 = i17 + 52 | 0;
 i5 = i17 + 48 | 0;
 i8 = i17;
 if (i1) if ((_arParamObserv2IdealLTf(i1 + 184 | 0, d2, d13, i4, i5) | 0) < 0) i1 = -1; else {
  _arUtilMatMuldff(i1 + 8 | 0, i7, i8) | 0;
  d3 = +HEAPF32[i8 + 32 >> 2];
  d6 = +HEAPF32[i4 >> 2];
  d12 = +HEAPF32[i8 + 36 >> 2];
  d13 = +HEAPF32[i5 >> 2];
  d2 = +HEAPF32[i8 + 44 >> 2];
  d9 = +HEAPF32[i8 + 12 >> 2] - d6 * d2;
  d10 = d12 * d13 - +HEAPF32[i8 + 20 >> 2];
  d11 = d3 * d13 - +HEAPF32[i8 + 16 >> 2];
  d12 = d6 * d12 - +HEAPF32[i8 + 4 >> 2];
  d6 = d3 * d6 - +HEAPF32[i8 >> 2];
  d3 = +HEAPF32[i8 + 28 >> 2];
  d2 = d13 * d2;
  i14 = 5;
 } else {
  d6 = +HEAPF32[i7 + 32 >> 2];
  d12 = +HEAPF32[i7 + 36 >> 2];
  d18 = +HEAPF32[i7 + 44 >> 2];
  d9 = +HEAPF32[i7 + 12 >> 2] - d18 * d2;
  d10 = d12 * d13 - +HEAPF32[i7 + 20 >> 2];
  d11 = d6 * d13 - +HEAPF32[i7 + 16 >> 2];
  d12 = d12 * d2 - +HEAPF32[i7 + 4 >> 2];
  d6 = d6 * d2 - +HEAPF32[i7 >> 2];
  d3 = +HEAPF32[i7 + 28 >> 2];
  d2 = d18 * d13;
  i14 = 5;
 }
 if ((i14 | 0) == 5) {
  d2 = d3 - d2;
  d3 = d6 * d10 - d12 * d11;
  if (d3 == 0.0) i1 = -1; else {
   HEAPF32[i15 >> 2] = (d10 * d9 - d12 * d2) / d3;
   HEAPF32[i16 >> 2] = (d6 * d2 - d11 * d9) / d3;
   i1 = 0;
  }
 }
 STACKTOP = i17;
 return i1 | 0;
}

function ___shgetc(i6) {
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i3 = i6 + 112 | 0;
 i2 = i3;
 i1 = HEAP32[i2 >> 2] | 0;
 i2 = HEAP32[i2 + 4 >> 2] | 0;
 if (!((i1 | 0) == 0 & (i2 | 0) == 0) ? (i5 = i6 + 120 | 0, i4 = HEAP32[i5 + 4 >> 2] | 0, !((i4 | 0) < (i2 | 0) | ((i4 | 0) == (i2 | 0) ? (HEAP32[i5 >> 2] | 0) >>> 0 < i1 >>> 0 : 0))) : 0) i7 = 4; else {
  i1 = ___uflow(i6) | 0;
  if ((i1 | 0) >= 0) {
   i2 = HEAP32[i3 >> 2] | 0;
   i3 = HEAP32[i3 + 4 >> 2] | 0;
   i5 = HEAP32[i6 + 8 >> 2] | 0;
   if (!((i2 | 0) == 0 & (i3 | 0) == 0)) {
    i4 = HEAP32[i6 + 4 >> 2] | 0;
    i8 = i5 - i4 | 0;
    i9 = ((i8 | 0) < 0) << 31 >> 31;
    i10 = i6 + 120 | 0;
    i2 = _i64Subtract(i2 | 0, i3 | 0, HEAP32[i10 >> 2] | 0, HEAP32[i10 + 4 >> 2] | 0) | 0;
    i10 = getTempRet0() | 0;
    i3 = i5;
    if ((i10 | 0) > (i9 | 0) | (i10 | 0) == (i9 | 0) & i2 >>> 0 > i8 >>> 0) i7 = 9; else HEAP32[i6 + 104 >> 2] = i4 + (i2 + -1);
   } else {
    i3 = i5;
    i7 = 9;
   }
   if ((i7 | 0) == 9) HEAP32[i6 + 104 >> 2] = i5;
   i2 = i6 + 4 | 0;
   if (!i3) i2 = HEAP32[i2 >> 2] | 0; else {
    i2 = HEAP32[i2 >> 2] | 0;
    i8 = i3 + 1 - i2 | 0;
    i10 = i6 + 120 | 0;
    i9 = i10;
    i8 = _i64Add(HEAP32[i9 >> 2] | 0, HEAP32[i9 + 4 >> 2] | 0, i8 | 0, ((i8 | 0) < 0) << 31 >> 31 | 0) | 0;
    i9 = getTempRet0() | 0;
    HEAP32[i10 >> 2] = i8;
    HEAP32[i10 + 4 >> 2] = i9;
   }
   i2 = i2 + -1 | 0;
   if ((i1 | 0) != (HEAPU8[i2 >> 0] | 0 | 0)) HEAP8[i2 >> 0] = i1;
  } else i7 = 4;
 }
 if ((i7 | 0) == 4) {
  HEAP32[i6 + 104 >> 2] = 0;
  i1 = -1;
 }
 return i1 | 0;
}

function _decode_mcu_DC_refine(i1, i12) {
 i1 = i1 | 0;
 i12 = i12 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i13 = i16;
 i14 = HEAP32[i1 + 444 >> 2] | 0;
 i15 = 1 << HEAP32[i1 + 412 >> 2];
 if (((HEAP32[i1 + 276 >> 2] | 0) != 0 ? (HEAP32[i14 + 40 >> 2] | 0) == 0 : 0) ? (_process_restart_49(i1) | 0) == 0 : 0) i1 = 0; else i2 = 4;
 L4 : do if ((i2 | 0) == 4) {
  HEAP32[i13 + 16 >> 2] = i1;
  i8 = i1 + 24 | 0;
  i10 = HEAP32[i8 >> 2] | 0;
  HEAP32[i13 >> 2] = HEAP32[i10 >> 2];
  i9 = i13 + 4 | 0;
  HEAP32[i9 >> 2] = HEAP32[i10 + 4 >> 2];
  i10 = i14 + 12 | 0;
  i11 = i14 + 16 | 0;
  i4 = i1 + 356 | 0;
  i5 = i13 + 8 | 0;
  i6 = i13 + 12 | 0;
  i1 = HEAP32[i11 >> 2] | 0;
  i2 = HEAP32[i10 >> 2] | 0;
  i3 = 0;
  while (1) {
   if ((i3 | 0) >= (HEAP32[i4 >> 2] | 0)) break;
   i7 = HEAP32[i12 + (i3 << 2) >> 2] | 0;
   if ((i1 | 0) < 1) {
    if (!(_jpeg_fill_bit_buffer(i13, i2, i1, 1) | 0)) {
     i1 = 0;
     break L4;
    }
    i1 = HEAP32[i6 >> 2] | 0;
    i2 = HEAP32[i5 >> 2] | 0;
   }
   i1 = i1 + -1 | 0;
   if (1 << i1 & i2 | 0) HEAP16[i7 >> 1] = i15 | (HEAPU16[i7 >> 1] | 0);
   i3 = i3 + 1 | 0;
  }
  i15 = HEAP32[i8 >> 2] | 0;
  HEAP32[i15 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i15 + 4 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i10 >> 2] = i2;
  HEAP32[i11 >> 2] = i1;
  i1 = i14 + 40 | 0;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + -1;
  i1 = 1;
 } while (0);
 STACKTOP = i16;
 return i1 | 0;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i2 = i6;
 i3 = i1 + 4 | 0;
 i4 = (((HEAP32[i3 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 i5 = __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv(i1) | 0;
 if (i5 >>> 0 < i4 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i7 = HEAP32[i1 >> 2] | 0;
  i9 = ((HEAP32[i1 + 8 >> 2] | 0) - i7 | 0) / 24 | 0;
  i8 = i9 << 1;
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEEC2EmmS6_(i2, i9 >>> 0 < i5 >>> 1 >>> 0 ? (i8 >>> 0 < i4 >>> 0 ? i4 : i8) : i5, ((HEAP32[i3 >> 2] | 0) - i7 | 0) / 24 | 0, i1 + 12 | 0);
  i5 = i2 + 8 | 0;
  i4 = HEAP32[i5 >> 2] | 0;
  HEAP32[i4 >> 2] = 0;
  HEAP32[i4 + 4 >> 2] = 0;
  HEAP32[i4 + 8 >> 2] = 0;
  HEAP32[i4 + 12 >> 2] = 0;
  HEAP32[i4 + 16 >> 2] = 0;
  HEAP32[i4 + 20 >> 2] = 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev(i4);
  HEAP32[i5 >> 2] = i4 + 24;
  __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i1, i2);
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEED2Ev(i2);
  STACKTOP = i6;
  return;
 }
}

function _free_pool(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i5 = HEAP32[i6 + 4 >> 2] | 0;
 if (i4 >>> 0 <= 1) {
  if ((i4 | 0) == 1) {
   i3 = i5 + 68 | 0;
   i1 = i3;
   while (1) {
    i1 = HEAP32[i1 >> 2] | 0;
    if (!i1) break;
    i2 = i1 + 40 | 0;
    if (HEAP32[i2 >> 2] | 0) {
     HEAP32[i2 >> 2] = 0;
     FUNCTION_TABLE_vii[HEAP32[i1 + 56 >> 2] & 63](i6, i1 + 48 | 0);
    }
    i1 = i1 + 44 | 0;
   }
   HEAP32[i3 >> 2] = 0;
   i3 = i5 + 72 | 0;
   i1 = i3;
   while (1) {
    i1 = HEAP32[i1 >> 2] | 0;
    if (!i1) break;
    i2 = i1 + 40 | 0;
    if (HEAP32[i2 >> 2] | 0) {
     HEAP32[i2 >> 2] = 0;
     FUNCTION_TABLE_vii[HEAP32[i1 + 56 >> 2] & 63](i6, i1 + 48 | 0);
    }
    i1 = i1 + 44 | 0;
   }
   HEAP32[i3 >> 2] = 0;
  }
 } else {
  i3 = HEAP32[i6 >> 2] | 0;
  HEAP32[i3 + 20 >> 2] = 14;
  HEAP32[i3 + 24 >> 2] = i4;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i6 >> 2] >> 2] & 255](i6);
 }
 i2 = i5 + 60 + (i4 << 2) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = 0;
 i2 = i5 + 76 | 0;
 while (1) {
  if (!i1) break;
  i3 = HEAP32[i1 >> 2] | 0;
  i7 = (HEAP32[i1 + 4 >> 2] | 0) + 16 + (HEAP32[i1 + 8 >> 2] | 0) | 0;
  _jpeg_free_large(i6, i1, i7);
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) - i7;
  i1 = i3;
 }
 i7 = i5 + 52 + (i4 << 2) | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = 0;
 while (1) {
  if (!i1) break;
  i7 = HEAP32[i1 >> 2] | 0;
  i5 = (HEAP32[i1 + 4 >> 2] | 0) + 16 + (HEAP32[i1 + 8 >> 2] | 0) | 0;
  _jpeg_free_small(i6, i1, i5);
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) - i5;
  i1 = i7;
 }
 return;
}

function _mbtowc(i1, i6, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i7;
 L1 : do if (!i6) i1 = 0; else {
  do if (i4 | 0) {
   i5 = (i1 | 0) == 0 ? i2 : i1;
   i1 = HEAP8[i6 >> 0] | 0;
   if (i1 << 24 >> 24 > -1) {
    HEAP32[i5 >> 2] = i1 & 255;
    i1 = i1 << 24 >> 24 != 0 & 1;
    break L1;
   }
   i3 = (___pthread_self_293() | 0) + 188 | 0;
   i1 = HEAP8[i6 >> 0] | 0;
   if (!(HEAP32[HEAP32[i3 >> 2] >> 2] | 0)) {
    HEAP32[i5 >> 2] = i1 << 24 >> 24 & 57343;
    i1 = 1;
    break L1;
   }
   i1 = (i1 & 255) + -194 | 0;
   if (i1 >>> 0 <= 50) {
    i2 = i6 + 1 | 0;
    i3 = HEAP32[3472 + (i1 << 2) >> 2] | 0;
    if (i4 >>> 0 < 4 ? i3 & -2147483648 >>> ((i4 * 6 | 0) + -6 | 0) | 0 : 0) break;
    i1 = HEAPU8[i2 >> 0] | 0;
    i4 = i1 >>> 3;
    if ((i4 + -16 | i4 + (i3 >> 26)) >>> 0 <= 7) {
     i1 = i1 + -128 | i3 << 6;
     if ((i1 | 0) >= 0) {
      HEAP32[i5 >> 2] = i1;
      i1 = 2;
      break L1;
     }
     i2 = (HEAPU8[i6 + 2 >> 0] | 0) + -128 | 0;
     if (i2 >>> 0 <= 63) {
      i2 = i2 | i1 << 6;
      if ((i2 | 0) >= 0) {
       HEAP32[i5 >> 2] = i2;
       i1 = 3;
       break L1;
      }
      i1 = (HEAPU8[i6 + 3 >> 0] | 0) + -128 | 0;
      if (i1 >>> 0 <= 63) {
       HEAP32[i5 >> 2] = i1 | i2 << 6;
       i1 = 4;
       break L1;
      }
     }
    }
   }
  } while (0);
  i1 = ___errno_location() | 0;
  HEAP32[i1 >> 2] = 84;
  i1 = -1;
 } while (0);
 STACKTOP = i7;
 return i1 | 0;
}

function _setMarkerInfoVertex(i1, i3) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i4;
 HEAP32[i2 >> 2] = i1;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0) {
  i1 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0) + 216 | 0;
  i1 = HEAP32[i1 >> 2] | 0;
  if ((HEAP32[i1 + 44 >> 2] | 0) > (i3 | 0)) {
   i1 = (i3 | 0) < 0 ? 56104 : i1 + 48 + (i3 << 8) | 0;
   d12 = +HEAPF64[6552];
   HEAPF64[i1 + 168 >> 3] = d12;
   d8 = +HEAPF64[6553];
   HEAPF64[i1 + 176 >> 3] = d8;
   d11 = +HEAPF64[6554];
   HEAPF64[i1 + 184 >> 3] = d11;
   d7 = +HEAPF64[6555];
   HEAPF64[i1 + 192 >> 3] = d7;
   d10 = +HEAPF64[6556];
   HEAPF64[i1 + 200 >> 3] = d10;
   d6 = +HEAPF64[6557];
   HEAPF64[i1 + 208 >> 3] = d6;
   d9 = +HEAPF64[6558];
   HEAPF64[i1 + 216 >> 3] = d9;
   d5 = +HEAPF64[6559];
   HEAPF64[i1 + 224 >> 3] = d5;
   HEAPF64[i1 + 56 >> 3] = (d12 + d11 + d10 + d9) * .25;
   HEAPF64[i1 + 64 >> 3] = (d8 + d7 + d6 + d5) * .25;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[3415] | 0;
   break;
  }
 } else i1 = HEAP32[3413] | 0; while (0);
 STACKTOP = i4;
 return i1 | 0;
}

function __ZN6vision27OrthogonalizePivot8x9Basis3IfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i5;
 i3 = i1 + 108 | 0;
 i11 = i1 + 72 | 0;
 i4 = i2 + 108 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i3, i11, i4);
 i10 = i1 + 144 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i10, i11, i2 + 144 | 0);
 i9 = i1 + 180 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i9, i11, i2 + 180 | 0);
 i8 = i1 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i8, i11, i2 + 216 | 0);
 i1 = i1 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i1, i11, i2 + 252 | 0);
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i3);
 HEAPF32[i6 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i10);
 HEAPF32[i6 + 4 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i9);
 HEAPF32[i6 + 8 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i8);
 HEAPF32[i6 + 12 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i1);
 HEAPF32[i6 + 16 >> 2] = d7;
 i1 = __ZN6vision9MaxIndex5IfEEiPKT_(i6) | 0;
 i2 = i6 + (i1 << 2) | 0;
 if (+HEAPF32[i2 >> 2] == 0.0) i1 = 0; else {
  i1 = i1 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_(i3, i3 + (i1 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_(i4, i4 + (i1 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_(i3, i3, 1.0 / +Math_sqrt(+(+HEAPF32[i2 >> 2])));
  i1 = 1;
 }
 STACKTOP = i5;
 return i1 | 0;
}

function _addMultiMarker(i1, i3) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i8 + 8 | 0;
 i2 = i8 + 12 | 0;
 i7 = i8;
 HEAP32[i2 >> 2] = i1;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0)) i1 = -1; else {
  i6 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0;
  if ((HEAP8[i3 + 11 >> 0] | 0) < 0) i1 = HEAP32[i3 >> 2] | 0; else i1 = i3;
  i4 = i6 + 224 | 0;
  if (!(__ZL15loadMultiMarkerPKcP8ARHandlePP12ARPattHandlePP18ARMultiMarkerInfoT(i1, HEAP32[i6 + 216 >> 2] | 0, i6 + 220 | 0, i4) | 0)) {
   _arLog(0, 3, 44956, i5);
   i1 = -1;
   break;
  }
  i1 = i6 + 328 | 0;
  i2 = i6 + 332 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  HEAP32[i7 >> 2] = i3 - (HEAP32[i1 >> 2] | 0) >> 3;
  HEAP32[i7 + 4 >> 2] = HEAP32[i4 >> 2];
  if ((HEAP32[i6 + 336 >> 2] | 0) == (i3 | 0)) __ZNSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(i1, i7); else {
   i4 = i7;
   i5 = HEAP32[i4 + 4 >> 2] | 0;
   i6 = i3;
   HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i6 + 4 >> 2] = i5;
   HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 8;
  }
  i1 = HEAP32[i7 >> 2] | 0;
 } while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i4, i2) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i6;
 i1 = i4 + 11 | 0;
 if ((HEAP8[i1 >> 0] | 0) < 0) {
  i3 = HEAP32[i4 >> 2] | 0;
  HEAP8[i5 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i3, i5);
  HEAP32[i4 + 4 >> 2] = 0;
 } else {
  HEAP8[i5 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i4, i5);
  HEAP8[i1 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i4);
 HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i4 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i4 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i3 = i4 + 12 | 0;
 i2 = i2 + 12 | 0;
 i1 = i3 + 11 | 0;
 if ((HEAP8[i1 >> 0] | 0) < 0) {
  i1 = HEAP32[i3 >> 2] | 0;
  HEAP8[i5 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i5);
  HEAP32[i4 + 16 >> 2] = 0;
 } else {
  HEAP8[i5 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i3, i5);
  HEAP8[i1 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i3);
 HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 STACKTOP = i6;
 return;
}

function _ar2GetSearchPoint(i3, i4, i8, i9, i1, i14) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 i14 = i14 | 0;
 var d2 = 0.0, i5 = 0, i6 = 0, d7 = 0.0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i10 = i16 + 20 | 0;
 i11 = i16 + 16 | 0;
 i12 = i16 + 12 | 0;
 i13 = i16 + 8 | 0;
 i5 = i16 + 4 | 0;
 i6 = i16;
 d7 = +HEAPF32[i1 + 8 >> 2];
 d2 = +HEAPF32[i1 + 12 >> 2];
 if ((i4 | 0) != 0 ? (_ar2MarkerCoord2ScreenCoord(i3, i4, d7, d2, i10, i13) | 0) >= 0 : 0) {
  HEAP32[i14 >> 2] = ~~+HEAPF32[i10 >> 2];
  HEAP32[i14 + 4 >> 2] = ~~+HEAPF32[i13 >> 2];
  if ((i8 | 0) != 0 ? (_ar2MarkerCoord2ScreenCoord(i3, i8, d7, d2, i11, i5) | 0) >= 0 : 0) {
   HEAP32[i14 + 8 >> 2] = ~~(+HEAPF32[i10 >> 2] * 2.0 - +HEAPF32[i11 >> 2]);
   HEAP32[i14 + 12 >> 2] = ~~(+HEAPF32[i13 >> 2] * 2.0 - +HEAPF32[i5 >> 2]);
   if ((i9 | 0) != 0 ? (_ar2MarkerCoord2ScreenCoord(i3, i9, d7, d2, i12, i6) | 0) >= 0 : 0) {
    HEAP32[i14 + 16 >> 2] = ~~(+HEAPF32[i12 >> 2] + (+HEAPF32[i10 >> 2] * 3.0 - +HEAPF32[i11 >> 2] * 3.0));
    i1 = ~~(+HEAPF32[i6 >> 2] + (+HEAPF32[i13 >> 2] * 3.0 - +HEAPF32[i5 >> 2] * 3.0));
   } else i15 = 10;
  } else i15 = 9;
 } else {
  HEAP32[i14 >> 2] = -1;
  HEAP32[i14 + 4 >> 2] = -1;
  i15 = 9;
 }
 if ((i15 | 0) == 9) {
  HEAP32[i14 + 8 >> 2] = -1;
  HEAP32[i14 + 12 >> 2] = -1;
  i15 = 10;
 }
 if ((i15 | 0) == 10) {
  HEAP32[i14 + 16 >> 2] = -1;
  i1 = -1;
 }
 HEAP32[i14 + 20 >> 2] = i1;
 STACKTOP = i16;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i8, i1) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0;
 if (i1 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i8);
 i6 = i8 + 11 | 0;
 i4 = HEAP8[i6 >> 0] | 0;
 i5 = i4 << 24 >> 24 < 0;
 if (i5) {
  i9 = HEAP32[i8 + 4 >> 2] | 0;
  i2 = (HEAP32[i8 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i9 = i4 & 255;
  i2 = 10;
 }
 i7 = i9 >>> 0 > i1 >>> 0 ? i9 : i1;
 i1 = i7 >>> 0 < 11;
 i7 = i1 ? 10 : (i7 + 16 & -16) + -1 | 0;
 do if ((i7 | 0) != (i2 | 0)) {
  do if (i1) {
   i1 = HEAP32[i8 >> 2] | 0;
   if (i5) {
    i4 = 0;
    i2 = i1;
    i3 = i8;
    i5 = 13;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcm(i8, i1, (i4 & 255) + 1 | 0) | 0;
    __ZdlPv(i1);
    i5 = 16;
   }
  } else {
   i2 = i7 + 1 | 0;
   i3 = __Znwm(i2) | 0;
   if (i5) {
    i4 = 1;
    i2 = HEAP32[i8 >> 2] | 0;
    i5 = 13;
    break;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcm(i3, i8, (i4 & 255) + 1 | 0) | 0;
    i1 = i8 + 4 | 0;
    i5 = 15;
    break;
   }
  } while (0);
  if ((i5 | 0) == 13) {
   i1 = i8 + 4 | 0;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm(i3, i2, (HEAP32[i1 >> 2] | 0) + 1 | 0) | 0;
   __ZdlPv(i2);
   if (i4) {
    i2 = i7 + 1 | 0;
    i5 = 15;
   } else i5 = 16;
  }
  if ((i5 | 0) == 15) {
   HEAP32[i8 + 8 >> 2] = i2 | -2147483648;
   HEAP32[i1 >> 2] = i9;
   HEAP32[i8 >> 2] = i3;
   break;
  } else if ((i5 | 0) == 16) {
   HEAP8[i6 >> 0] = i9;
   break;
  }
 } while (0);
 return;
}

function _create_colormap(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i12 = HEAP32[i3 + 460 >> 2] | 0;
 i1 = i12 + 32 | 0;
 i13 = _select_ncolors(i3, i1) | 0;
 i14 = i3 + 120 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 if ((HEAP32[i14 >> 2] | 0) == 3) {
  HEAP32[i2 + 24 >> 2] = i13;
  HEAP32[i2 + 28 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i2 + 32 >> 2] = HEAP32[i12 + 36 >> 2];
  HEAP32[i2 + 36 >> 2] = HEAP32[i12 + 40 >> 2];
  HEAP32[i2 + 20 >> 2] = 94;
  FUNCTION_TABLE_vii[HEAP32[i2 + 4 >> 2] & 63](i3, 1);
  i1 = i3;
 } else {
  HEAP32[i2 + 20 >> 2] = 95;
  HEAP32[i2 + 24 >> 2] = i13;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 4 >> 2] & 63](i3, 1);
  i1 = i3;
 }
 i6 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i3 + 4 >> 2] | 0) + 8 >> 2] & 15](i1, 1, i13, HEAP32[i14 >> 2] | 0) | 0;
 i1 = 0;
 i4 = i13;
 while (1) {
  if ((i1 | 0) >= (HEAP32[i14 >> 2] | 0)) break;
  i7 = HEAP32[i12 + 32 + (i1 << 2) >> 2] | 0;
  i8 = (i4 | 0) / (i7 | 0) | 0;
  i9 = i7 + -1 | 0;
  i10 = i6 + (i1 << 2) | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (i7 | 0)) break;
   i11 = (_output_value(i2, i9) | 0) & 255;
   i3 = Math_imul(i2, i8) | 0;
   while (1) {
    if ((i3 | 0) >= (i13 | 0)) break;
    i5 = 0;
    while (1) {
     if ((i5 | 0) >= (i8 | 0)) break;
     HEAP8[(HEAP32[i10 >> 2] | 0) + (i5 + i3) >> 0] = i11;
     i5 = i5 + 1 | 0;
    }
    i3 = i3 + i4 | 0;
   }
   i2 = i2 + 1 | 0;
  }
  i1 = i1 + 1 | 0;
  i4 = i8;
 }
 HEAP32[i12 + 16 >> 2] = i6;
 HEAP32[i12 + 20 >> 2] = i13;
 return;
}

function _get_dri(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = HEAP32[i5 + 24 >> 2] | 0;
 i7 = i6 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 if (!i1) if (!(FUNCTION_TABLE_ii[HEAP32[i6 + 12 >> 2] & 127](i5) | 0)) i1 = 0; else {
  i1 = HEAP32[i7 >> 2] | 0;
  i2 = 4;
 } else i2 = 4;
 do if ((i2 | 0) == 4) {
  i4 = HEAP32[i6 >> 2] | 0;
  i1 = i1 + -1 | 0;
  i2 = i4 + 1 | 0;
  i4 = (HEAPU8[i4 >> 0] | 0) << 8;
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i6 + 12 >> 2] & 127](i5) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i7 >> 2] | 0;
   i3 = HEAP32[i6 >> 2] | 0;
  } else i3 = i2;
  i1 = i1 + -1 | 0;
  i2 = i3 + 1 | 0;
  if ((i4 | (HEAPU8[i3 >> 0] | 0) | 0) != 4) {
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i4 + 20 >> 2] = 11;
   FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i5);
  }
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i6 + 12 >> 2] & 127](i5) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i7 >> 2] | 0;
   i2 = HEAP32[i6 >> 2] | 0;
  }
  i3 = i1 + -1 | 0;
  i1 = i2 + 1 | 0;
  i4 = (HEAPU8[i2 >> 0] | 0) << 8;
  if (!i3) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i6 + 12 >> 2] & 127](i5) | 0)) {
    i1 = 0;
    break;
   }
   i2 = HEAP32[i7 >> 2] | 0;
   i1 = HEAP32[i6 >> 2] | 0;
  } else i2 = i3;
  i4 = i4 | (HEAPU8[i1 >> 0] | 0);
  i3 = HEAP32[i5 >> 2] | 0;
  HEAP32[i3 + 20 >> 2] = 82;
  HEAP32[i3 + 24 >> 2] = i4;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] & 63](i5, 1);
  HEAP32[i5 + 276 >> 2] = i4;
  HEAP32[i6 >> 2] = i1 + 1;
  HEAP32[i7 >> 2] = i2 + -1;
  i1 = 1;
 } while (0);
 return i1 | 0;
}

function _jpeg_start_decompress(i6) {
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0;
 i1 = i6 + 20 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 L1 : do switch (i2 | 0) {
 case 202:
  {
   _jinit_master_decompress(i6);
   if (!(HEAP32[i6 + 64 >> 2] | 0)) {
    HEAP32[i1 >> 2] = 203;
    i9 = 5;
    break L1;
   } else {
    HEAP32[i1 >> 2] = 207;
    i1 = 1;
    break L1;
   }
  }
 case 203:
  {
   i9 = 5;
   break;
  }
 case 204:
  {
   i9 = 16;
   break;
  }
 default:
  {
   i9 = HEAP32[i6 >> 2] | 0;
   HEAP32[i9 + 20 >> 2] = 20;
   HEAP32[i9 + 24 >> 2] = i2;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i6 >> 2] >> 2] & 255](i6);
   i9 = 16;
  }
 } while (0);
 L7 : do if ((i9 | 0) == 5) {
  i5 = i6 + 436 | 0;
  L9 : do if (HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] | 0) {
   i3 = i6 + 8 | 0;
   i4 = i6 + 320 | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   while (1) {
    if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i6);
    i1 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i5 >> 2] >> 2] & 127](i6) | 0;
    switch (i1 | 0) {
    case 0:
     break L7;
    case 2:
     break L9;
    default:
     {}
    }
    i2 = HEAP32[i3 >> 2] | 0;
    if ((i1 | 2 | 0) == 3 & (i2 | 0) != 0 ? (i7 = i2 + 4 | 0, i1 = (HEAP32[i7 >> 2] | 0) + 1 | 0, HEAP32[i7 >> 2] = i1, i7 = i2 + 8 | 0, i8 = HEAP32[i7 >> 2] | 0, (i1 | 0) >= (i8 | 0)) : 0) HEAP32[i7 >> 2] = (HEAP32[i4 >> 2] | 0) + i8;
    i1 = i2;
   }
  } while (0);
  HEAP32[i6 + 152 >> 2] = HEAP32[i6 + 144 >> 2];
  i9 = 16;
 } while (0);
 if ((i9 | 0) == 16) i1 = _output_pass_setup(i6) | 0;
 return i1 | 0;
}

function _teardown(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i6;
 HEAP32[i3 >> 2] = i1;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0)) i1 = -1; else {
  i5 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0;
  i1 = i5 + 196 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 | 0) {
   _free(i2);
   HEAP32[i1 >> 2] = 0;
   HEAP32[i5 + 200 >> 2] = 0;
  }
  _deleteHandle(i5);
  _arPattDeleteHandle(HEAP32[i5 + 220 >> 2] | 0) | 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE14__erase_uniqueIiEEmRKT_(57052, i3) | 0;
  i2 = i5 + 328 | 0;
  i3 = i5 + 332 | 0;
  i1 = 0;
  while (1) {
   i4 = HEAP32[i2 >> 2] | 0;
   if (i1 >>> 0 >= (HEAP32[i3 >> 2] | 0) - i4 >> 3 >>> 0) break;
   _arMultiFreeConfig(HEAP32[i4 + (i1 << 3) + 4 >> 2] | 0) | 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__213__vector_baseI12multi_markerNS_9allocatorIS1_EEED2Ev(i2);
  __ZdlPv(i2);
  __ZN12arControllerD2Ev(i5);
  __ZdlPv(i5);
  _trackingInitQuit(i5 + 240 | 0) | 0;
  i1 = 0;
 }
 STACKTOP = i6;
 return i1 | 0;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(i7, i8, i9) {
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0;
 i5 = i8;
 i10 = i9 - i5 | 0;
 i2 = i7 + 8 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 i6 = i1;
 do if (i10 >>> 0 > ((HEAP32[i2 >> 2] | 0) - i1 | 0) >>> 0) {
  __ZNSt3__26vectorIhNS_9allocatorIhEEE10deallocateEv(i7);
  i1 = __ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv(i7) | 0;
  if (i1 >>> 0 < i10 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i7); else {
   i5 = (HEAP32[i2 >> 2] | 0) - (HEAP32[i7 >> 2] | 0) | 0;
   i6 = i5 << 1;
   __ZNSt3__26vectorIhNS_9allocatorIhEEE8allocateEm(i7, i5 >>> 0 < i1 >>> 1 >>> 0 ? (i6 >>> 0 < i10 >>> 0 ? i10 : i6) : i1);
   __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPhEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m(i7, i8, i9, i10);
   break;
  }
 } else {
  i4 = i7 + 4 | 0;
  i3 = (HEAP32[i4 >> 2] | 0) - i1 | 0;
  i2 = i10 >>> 0 > i3 >>> 0;
  i3 = i2 ? i8 + i3 | 0 : i9;
  i1 = i3 - i5 | 0;
  if (i1 | 0) _memmove(i6 | 0, i8 | 0, i1 | 0) | 0;
  if (i2) {
   __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPhEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m(i7, i3, i9, i10 - (HEAP32[i4 >> 2] | 0) + (HEAP32[i7 >> 2] | 0) | 0);
   break;
  } else {
   HEAP32[i4 >> 2] = i6 + i1;
   break;
  }
 } while (0);
 return;
}

function _ycck_cmyk_convert(i1, i18, i2, i3, i4) {
 i1 = i1 | 0;
 i18 = i18 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i14 = HEAP32[i1 + 456 >> 2] | 0;
 i19 = HEAP32[i1 + 112 >> 2] | 0;
 i10 = HEAP32[i1 + 324 >> 2] | 0;
 i11 = HEAP32[i14 + 8 >> 2] | 0;
 i12 = HEAP32[i14 + 12 >> 2] | 0;
 i13 = HEAP32[i14 + 16 >> 2] | 0;
 i14 = HEAP32[i14 + 20 >> 2] | 0;
 i15 = i18 + 4 | 0;
 i16 = i18 + 8 | 0;
 i17 = i18 + 12 | 0;
 i1 = i4;
 while (1) {
  i9 = i1 + -1 | 0;
  if ((i1 | 0) <= 0) break;
  i5 = HEAP32[(HEAP32[i18 >> 2] | 0) + (i2 << 2) >> 2] | 0;
  i6 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i2 << 2) >> 2] | 0;
  i7 = HEAP32[(HEAP32[i16 >> 2] | 0) + (i2 << 2) >> 2] | 0;
  i8 = HEAP32[(HEAP32[i17 >> 2] | 0) + (i2 << 2) >> 2] | 0;
  i2 = i2 + 1 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  i4 = 0;
  while (1) {
   if ((i4 | 0) == (i19 | 0)) break;
   i20 = HEAPU8[i6 + i4 >> 0] | 0;
   i22 = HEAPU8[i7 + i4 >> 0] | 0;
   i21 = ~HEAP8[i5 + i4 >> 0] & 255;
   HEAP8[i1 >> 0] = HEAP8[i10 + (i21 - (HEAP32[i11 + (i22 << 2) >> 2] | 0)) >> 0] | 0;
   HEAP8[i1 + 1 >> 0] = HEAP8[i10 + (i21 - ((HEAP32[i13 + (i22 << 2) >> 2] | 0) + (HEAP32[i14 + (i20 << 2) >> 2] | 0) >> 16)) >> 0] | 0;
   HEAP8[i1 + 2 >> 0] = HEAP8[i10 + (i21 - (HEAP32[i12 + (i20 << 2) >> 2] | 0)) >> 0] | 0;
   HEAP8[i1 + 3 >> 0] = HEAP8[i8 + i4 >> 0] | 0;
   i1 = i1 + 4 | 0;
   i4 = i4 + 1 | 0;
  }
  i3 = i3 + 4 | 0;
  i1 = i9;
 }
 return;
}

function __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE8__appendEm(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i8;
 i6 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if ((((HEAP32[i6 >> 2] | 0) - i1 | 0) / 12 | 0) >>> 0 < i4 >>> 0) {
  i1 = ((i1 - (HEAP32[i3 >> 2] | 0) | 0) / 12 | 0) + i4 | 0;
  i2 = __ZNKSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE8max_sizeEv(i3) | 0;
  if (i2 >>> 0 < i1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i3); else {
   i9 = HEAP32[i3 >> 2] | 0;
   i10 = ((HEAP32[i6 >> 2] | 0) - i9 | 0) / 12 | 0;
   i6 = i10 << 1;
   __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEEC2EmmS8_(i5, i10 >>> 0 < i2 >>> 1 >>> 0 ? (i6 >>> 0 < i1 >>> 0 ? i1 : i6) : i2, ((HEAP32[i7 >> 2] | 0) - i9 | 0) / 12 | 0, i3 + 8 | 0);
   __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEE18__construct_at_endEm(i5, i4);
   __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS5_RS6_EE(i3, i5);
   __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEED2Ev(i5);
   break;
  }
 } else __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE18__construct_at_endEm(i3, i4); while (0);
 STACKTOP = i8;
 return;
}

function _smoothing_ok(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i1 = HEAP32[i3 + 428 >> 2] | 0;
 L1 : do if ((HEAP32[i3 + 220 >> 2] | 0) != 0 ? (i8 = i3 + 160 | 0, (HEAP32[i8 >> 2] | 0) != 0) : 0) {
  i2 = i1 + 112 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if (!i1) {
   i7 = i3 + 36 | 0;
   i1 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 + 4 >> 2] >> 2] & 63](i3, 1, (HEAP32[i7 >> 2] | 0) * 24 | 0) | 0;
   HEAP32[i2 >> 2] = i1;
  } else i7 = i3 + 36 | 0;
  i6 = i1;
  i1 = 0;
  i4 = HEAP32[i3 + 216 >> 2] | 0;
  i5 = 0;
  while (1) {
   if ((i5 | 0) >= (HEAP32[i7 >> 2] | 0)) break L1;
   i2 = HEAP32[i4 + 76 >> 2] | 0;
   if (!i2) {
    i1 = 0;
    break L1;
   }
   if (!(HEAP16[i2 >> 1] | 0)) {
    i1 = 0;
    break L1;
   }
   if (!(HEAP16[i2 + 2 >> 1] | 0)) {
    i1 = 0;
    break L1;
   }
   if (!(HEAP16[i2 + 16 >> 1] | 0)) {
    i1 = 0;
    break L1;
   }
   if (!(HEAP16[i2 + 32 >> 1] | 0)) {
    i1 = 0;
    break L1;
   }
   if (!(HEAP16[i2 + 18 >> 1] | 0)) {
    i1 = 0;
    break L1;
   }
   if (!(HEAP16[i2 + 4 >> 1] | 0)) {
    i1 = 0;
    break L1;
   }
   i3 = HEAP32[i8 >> 2] | 0;
   if ((HEAP32[i3 + (i5 << 8) >> 2] | 0) < 0) {
    i1 = 0;
    break L1;
   }
   i2 = 1;
   while (1) {
    if ((i2 | 0) == 6) break;
    i9 = i3 + (i5 << 8) + (i2 << 2) | 0;
    HEAP32[i6 + (i2 << 2) >> 2] = HEAP32[i9 >> 2];
    i2 = i2 + 1 | 0;
    i1 = (HEAP32[i9 >> 2] | 0) == 0 ? i1 : 1;
   }
   i6 = i6 + 24 | 0;
   i4 = i4 + 84 | 0;
   i5 = i5 + 1 | 0;
  }
 } else i1 = 0; while (0);
 return i1 | 0;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i8 = i9;
 i1 = i7 + 4 | 0;
 i2 = (((HEAP32[i1 >> 2] | 0) - (HEAP32[i7 >> 2] | 0) | 0) / 36 | 0) + 1 | 0;
 i3 = __ZNKSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8max_sizeEv(i7) | 0;
 if (i3 >>> 0 < i2 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i7); else {
  i4 = HEAP32[i7 >> 2] | 0;
  i10 = ((HEAP32[i7 + 8 >> 2] | 0) - i4 | 0) / 36 | 0;
  i5 = i10 << 1;
  __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEEC2EmmS6_(i8, i10 >>> 0 < i3 >>> 1 >>> 0 ? (i5 >>> 0 < i2 >>> 0 ? i2 : i5) : i3, ((HEAP32[i1 >> 2] | 0) - i4 | 0) / 36 | 0, i7 + 8 | 0);
  i3 = i8 + 8 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  i5 = i4;
  i1 = i6;
  i2 = i5 + 36 | 0;
  do {
   HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
   i5 = i5 + 4 | 0;
   i1 = i1 + 4 | 0;
  } while ((i5 | 0) < (i2 | 0));
  HEAP32[i3 >> 2] = i4 + 36;
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i8);
  __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEED2Ev(i8);
  STACKTOP = i9;
  return;
 }
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i2, i8, i11, i12, i13) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i14 = 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, i13) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i2, i8, i11, i12); else {
  i14 = i2 + 52 | 0;
  i3 = HEAP8[i14 >> 0] | 0;
  i4 = i2 + 53 | 0;
  i5 = HEAP8[i4 >> 0] | 0;
  i10 = HEAP32[i1 + 12 >> 2] | 0;
  i6 = i1 + 16 + (i10 << 3) | 0;
  HEAP8[i14 >> 0] = 0;
  HEAP8[i4 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1 + 16 | 0, i2, i8, i11, i12, i13);
  L4 : do if ((i10 | 0) > 1) {
   i7 = i2 + 24 | 0;
   i9 = i1 + 8 | 0;
   i10 = i2 + 54 | 0;
   i1 = i1 + 24 | 0;
   do {
    if (HEAP8[i10 >> 0] | 0) break L4;
    if (!(HEAP8[i14 >> 0] | 0)) {
     if (HEAP8[i4 >> 0] | 0 ? (HEAP32[i9 >> 2] & 1 | 0) == 0 : 0) break L4;
    } else {
     if ((HEAP32[i7 >> 2] | 0) == 1) break L4;
     if (!(HEAP32[i9 >> 2] & 2)) break L4;
    }
    HEAP8[i14 >> 0] = 0;
    HEAP8[i4 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i2, i8, i11, i12, i13);
    i1 = i1 + 8 | 0;
   } while (i1 >>> 0 < i6 >>> 0);
  } while (0);
  HEAP8[i14 >> 0] = i3;
  HEAP8[i4 >> 0] = i5;
 }
 return;
}

function _start_pass_huff_decoder(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 i6 = HEAP32[i5 + 444 >> 2] | 0;
 if (!((((HEAP32[i5 + 400 >> 2] | 0) == 0 ? (HEAP32[i5 + 404 >> 2] | 0) == 63 : 0) ? (HEAP32[i5 + 408 >> 2] | 0) == 0 : 0) ? !(HEAP32[i5 + 412 >> 2] | 0) : 0)) {
  i4 = HEAP32[i5 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 122;
  FUNCTION_TABLE_vii[HEAP32[i4 + 4 >> 2] & 63](i5, -1);
 }
 i2 = i5 + 328 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (HEAP32[i2 >> 2] | 0)) break;
  i4 = HEAP32[i5 + 332 + (i1 << 2) >> 2] | 0;
  i3 = HEAP32[i4 + 20 >> 2] | 0;
  i4 = HEAP32[i4 + 24 >> 2] | 0;
  _jpeg_make_d_derived_tbl(i5, 1, i3, i6 + 40 + (i3 << 2) | 0);
  _jpeg_make_d_derived_tbl(i5, 0, i4, i6 + 56 + (i4 << 2) | 0);
  HEAP32[i6 + 20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i4 = i5 + 356 | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (HEAP32[i4 >> 2] | 0)) break;
  i1 = HEAP32[i5 + 332 + (HEAP32[i5 + 360 + (i3 << 2) >> 2] << 2) >> 2] | 0;
  HEAP32[i6 + 72 + (i3 << 2) >> 2] = HEAP32[i6 + 40 + (HEAP32[i1 + 20 >> 2] << 2) >> 2];
  HEAP32[i6 + 112 + (i3 << 2) >> 2] = HEAP32[i6 + 56 + (HEAP32[i1 + 24 >> 2] << 2) >> 2];
  i2 = i6 + 152 + (i3 << 2) | 0;
  if (!(HEAP32[i1 + 48 >> 2] | 0)) {
   HEAP32[i2 >> 2] = 0;
   i1 = 0;
  } else {
   HEAP32[i2 >> 2] = 1;
   i1 = (HEAP32[i1 + 36 >> 2] | 0) > 1 & 1;
  }
  HEAP32[i6 + 192 + (i3 << 2) >> 2] = i1;
  i3 = i3 + 1 | 0;
 }
 HEAP32[i6 + 16 >> 2] = 0;
 HEAP32[i6 + 12 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 HEAP32[i6 + 36 >> 2] = HEAP32[i5 + 276 >> 2];
 return;
}

function __ZN6vision25MatrixInverseSymmetric3x3IfEEbPT_PKS1_S1_(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 var d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 d4 = +__ZN6vision23DeterminantSymmetric3x3IfEET_PKS1_(i2);
 if (!(+Math_abs(+d4) <= d3)) {
  d4 = 1.0 / d4;
  i8 = i2 + 16 | 0;
  i5 = i2 + 20 | 0;
  i11 = i2 + 32 | 0;
  d3 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_(+HEAPF32[i8 >> 2], +HEAPF32[i5 >> 2], +HEAPF32[i11 >> 2]);
  HEAPF32[i1 >> 2] = d3;
  i10 = i2 + 8 | 0;
  i9 = i2 + 4 | 0;
  d3 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i10 >> 2], +HEAPF32[i9 >> 2], +HEAPF32[i11 >> 2], +HEAPF32[i2 + 28 >> 2]);
  i7 = i1 + 4 | 0;
  HEAPF32[i7 >> 2] = d3;
  d3 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i9 >> 2], +HEAPF32[i10 >> 2], +HEAPF32[i8 >> 2], +HEAPF32[i5 >> 2]);
  i6 = i1 + 8 | 0;
  HEAPF32[i6 >> 2] = d3;
  d3 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_(+HEAPF32[i2 >> 2], +HEAPF32[i10 >> 2], +HEAPF32[i11 >> 2]);
  HEAPF32[i1 + 16 >> 2] = d3;
  d3 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i10 >> 2], +HEAPF32[i2 >> 2], +HEAPF32[i5 >> 2], +HEAPF32[i2 + 12 >> 2]);
  i5 = i1 + 20 | 0;
  HEAPF32[i5 >> 2] = d3;
  d4 = d4 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_(+HEAPF32[i2 >> 2], +HEAPF32[i9 >> 2], +HEAPF32[i8 >> 2]);
  HEAPF32[i1 + 32 >> 2] = d4;
  HEAP32[i1 + 12 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i1 + 24 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i1 + 28 >> 2] = HEAP32[i5 >> 2];
  i1 = 1;
 } else i1 = 0;
 return i1 | 0;
}

function _wcsnrtombs(i3, i11, i6, i2, i1) {
 i3 = i3 | 0;
 i11 = i11 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(272);
 i7 = i10;
 i8 = i10 + 256 | 0;
 i1 = HEAP32[i11 >> 2] | 0;
 HEAP32[i8 >> 2] = i1;
 i9 = (i3 | 0) != 0;
 i4 = i9 ? i2 : 256;
 i5 = i9 ? i3 : i7;
 i2 = i1;
 L1 : do if ((i4 | 0) != 0 & (i1 | 0) != 0) {
  i1 = 0;
  i3 = i2;
  while (1) {
   i2 = i6 >>> 0 >= i4 >>> 0;
   if (!(i2 | i6 >>> 0 > 32)) {
    i2 = i3;
    break L1;
   }
   i2 = i2 ? i4 : i6;
   i6 = i6 - i2 | 0;
   i2 = _wcsrtombs(i5, i8, i2, 0) | 0;
   if ((i2 | 0) == -1) break;
   i3 = (i5 | 0) == (i7 | 0);
   i4 = i4 - (i3 ? 0 : i2) | 0;
   i5 = i3 ? i5 : i5 + i2 | 0;
   i1 = i2 + i1 | 0;
   i2 = HEAP32[i8 >> 2] | 0;
   if ((i4 | 0) != 0 & (i2 | 0) != 0) i3 = i2; else break L1;
  }
  i1 = -1;
  i4 = 0;
  i2 = HEAP32[i8 >> 2] | 0;
 } else i1 = 0; while (0);
 L9 : do if ((i2 | 0) != 0 ? (i4 | 0) != 0 & (i6 | 0) != 0 : 0) {
  while (1) {
   i3 = _wcrtomb(i5, HEAP32[i2 >> 2] | 0, 0) | 0;
   if ((i3 + 1 | 0) >>> 0 < 2) break;
   i2 = (HEAP32[i8 >> 2] | 0) + 4 | 0;
   HEAP32[i8 >> 2] = i2;
   i6 = i6 + -1 | 0;
   i4 = i4 - i3 | 0;
   i1 = i3 + i1 | 0;
   if (!((i4 | 0) != 0 & (i6 | 0) != 0)) break L9; else i5 = i5 + i3 | 0;
  }
  if (!i3) HEAP32[i8 >> 2] = 0; else i1 = -1;
 } while (0);
 if (i9) HEAP32[i11 >> 2] = HEAP32[i8 >> 2];
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 i10 = i1 + 184 | 0;
 i9 = i1 + 192 | 0;
 i6 = i1 + 160 | 0;
 i8 = i1;
 i11 = i1 + 188 | 0;
 HEAP8[i9 >> 0] = HEAP8[47859] | 0;
 HEAP8[i9 + 1 >> 0] = HEAP8[47860] | 0;
 HEAP8[i9 + 2 >> 0] = HEAP8[47861] | 0;
 HEAP8[i9 + 3 >> 0] = HEAP8[47862] | 0;
 HEAP8[i9 + 4 >> 0] = HEAP8[47863] | 0;
 HEAP8[i9 + 5 >> 0] = HEAP8[47864] | 0;
 i7 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i10 >> 2] = i5;
 i5 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i6, 20, i7, i9, i10) | 0;
 i9 = i6 + i5 | 0;
 i7 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i6, i9, i3) | 0;
 __ZNKSt3__28ios_base6getlocEv(i10, i3);
 i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58824) | 0;
 __ZNSt3__26localeD2Ev(i10);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 48 >> 2] & 15](i12, i6, i9, i8) | 0;
 i5 = i8 + (i5 << 2) | 0;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
 i5 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i8, (i7 | 0) == (i9 | 0) ? i5 : i8 + (i7 - i6 << 2) | 0, i5, i3, i4) | 0;
 STACKTOP = i1;
 return i5 | 0;
}

function _compute_color(i13, i1, i18) {
 i13 = i13 | 0;
 i1 = i1 | 0;
 i18 = i18 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i20 = 0, i21 = 0;
 i19 = HEAP32[(HEAP32[i13 + 460 >> 2] | 0) + 24 >> 2] | 0;
 i20 = HEAP32[i1 + 4 >> 2] | 0;
 i14 = HEAP32[i1 + 8 >> 2] | 0;
 i15 = HEAP32[i1 + 12 >> 2] | 0;
 i16 = HEAP32[i1 + 16 >> 2] | 0;
 i17 = HEAP32[i1 + 20 >> 2] | 0;
 i2 = 0;
 i3 = 0;
 i4 = 0;
 i5 = 0;
 i9 = HEAP32[i1 >> 2] | 0;
 while (1) {
  if ((i9 | 0) > (i20 | 0)) break;
  i11 = i19 + (i9 << 2) | 0;
  i12 = i9 << 3 | 4;
  i10 = i14;
  while (1) {
   if ((i10 | 0) > (i15 | 0)) break;
   i8 = i10 << 2 | 2;
   i6 = (HEAP32[i11 >> 2] | 0) + (i10 << 6) + (i16 << 1) | 0;
   i7 = i16;
   while (1) {
    if ((i7 | 0) > (i17 | 0)) break;
    i21 = HEAP16[i6 >> 1] | 0;
    i1 = i21 & 65535;
    if (i21 << 16 >> 16) {
     i2 = (Math_imul(i7 << 3 | 4, i1) | 0) + i2 | 0;
     i3 = (Math_imul(i8, i1) | 0) + i3 | 0;
     i4 = (Math_imul(i12, i1) | 0) + i4 | 0;
     i5 = i5 + i1 | 0;
    }
    i6 = i6 + 2 | 0;
    i7 = i7 + 1 | 0;
   }
   i10 = i10 + 1 | 0;
  }
  i9 = i9 + 1 | 0;
 }
 i20 = i5 >> 1;
 i21 = i13 + 136 | 0;
 HEAP8[(HEAP32[HEAP32[i21 >> 2] >> 2] | 0) + i18 >> 0] = (i4 + i20 | 0) / (i5 | 0) | 0;
 HEAP8[(HEAP32[(HEAP32[i21 >> 2] | 0) + 4 >> 2] | 0) + i18 >> 0] = (i3 + i20 | 0) / (i5 | 0) | 0;
 HEAP8[(HEAP32[(HEAP32[i21 >> 2] | 0) + 8 >> 2] | 0) + i18 >> 0] = (i2 + i20 | 0) / (i5 | 0) | 0;
 return;
}

function _confidenceCutoff(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 L1 : do switch (HEAP32[i5 + 24 >> 2] | 0) {
 case 1:
 case 0:
  {
   i2 = HEAP32[i5 + 44 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break L1;
    i3 = i5 + 48 + (i1 << 8) + 4 | 0;
    if ((HEAP32[i3 >> 2] | 0) > -1 ? +HEAPF64[i5 + 48 + (i1 << 8) + 32 >> 3] < .5 : 0) {
     HEAP32[i5 + 48 + (i1 << 8) + 8 >> 2] = -1;
     HEAP32[i3 >> 2] = -1;
     HEAP32[i5 + 48 + (i1 << 8) + 236 >> 2] = 6;
    }
    i1 = i1 + 1 | 0;
   }
  }
 case 2:
  {
   i2 = HEAP32[i5 + 44 >> 2] | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i2 | 0)) break L1;
    i3 = i5 + 48 + (i1 << 8) + 4 | 0;
    if ((HEAP32[i3 >> 2] | 0) > -1 ? +HEAPF64[i5 + 48 + (i1 << 8) + 32 >> 3] < .5 : 0) {
     HEAP32[i5 + 48 + (i1 << 8) + 12 >> 2] = -1;
     HEAP32[i3 >> 2] = -1;
     HEAP32[i5 + 48 + (i1 << 8) + 236 >> 2] = 6;
    }
    i1 = i1 + 1 | 0;
   }
  }
 default:
  {
   i4 = HEAP32[i5 + 44 >> 2] | 0;
   i3 = 0;
   while (1) {
    if ((i3 | 0) >= (i4 | 0)) break L1;
    i1 = i5 + 48 + (i3 << 8) + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) > -1 ? +HEAPF64[i5 + 48 + (i3 << 8) + 40 >> 3] < .5 : 0) {
     HEAP32[i1 >> 2] = -1;
     i1 = 0;
    } else i1 = 1;
    i2 = i5 + 48 + (i3 << 8) + 12 | 0;
    if (((HEAP32[i2 >> 2] | 0) > -1 ? +HEAPF64[i5 + 48 + (i3 << 8) + 48 >> 3] < .5 : 0) ? (HEAP32[i2 >> 2] = -1, (i1 | 0) == 0) : 0) HEAP32[i5 + 48 + (i3 << 8) + 236 >> 2] = 6;
    i3 = i3 + 1 | 0;
   }
  }
 } while (0);
 return;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i10 = i1 + 72 | 0;
 i9 = i1 + 80 | 0;
 i6 = i1 + 48 | 0;
 i8 = i1;
 i11 = i1 + 76 | 0;
 HEAP8[i9 >> 0] = HEAP8[47859] | 0;
 HEAP8[i9 + 1 >> 0] = HEAP8[47860] | 0;
 HEAP8[i9 + 2 >> 0] = HEAP8[47861] | 0;
 HEAP8[i9 + 3 >> 0] = HEAP8[47862] | 0;
 HEAP8[i9 + 4 >> 0] = HEAP8[47863] | 0;
 HEAP8[i9 + 5 >> 0] = HEAP8[47864] | 0;
 i7 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i10 >> 2] = i5;
 i5 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i6, 20, i7, i9, i10) | 0;
 i9 = i6 + i5 | 0;
 i7 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i6, i9, i3) | 0;
 __ZNKSt3__28ios_base6getlocEv(i10, i3);
 i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58792) | 0;
 __ZNSt3__26localeD2Ev(i10);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 32 >> 2] & 15](i12, i6, i9, i8) | 0;
 i5 = i8 + i5 | 0;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
 i5 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i8, (i7 | 0) == (i9 | 0) ? i5 : i8 + (i7 - i6) | 0, i5, i3, i4) | 0;
 STACKTOP = i1;
 return i5 | 0;
}

function _make_funny_pointers(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i14 = HEAP32[i1 + 424 >> 2] | 0;
 i15 = HEAP32[i1 + 316 >> 2] | 0;
 i16 = HEAP32[i1 + 36 >> 2] | 0;
 i17 = i14 + 56 | 0;
 i11 = i14 + 60 | 0;
 i12 = i15 + 2 | 0;
 i13 = i15 + -2 | 0;
 i10 = 0;
 i7 = HEAP32[i1 + 216 >> 2] | 0;
 while (1) {
  if ((i10 | 0) >= (i16 | 0)) break;
  i8 = (Math_imul(HEAP32[i7 + 36 >> 2] | 0, HEAP32[i7 + 12 >> 2] | 0) | 0) / (i15 | 0) | 0;
  i9 = HEAP32[(HEAP32[i17 >> 2] | 0) + (i10 << 2) >> 2] | 0;
  i5 = HEAP32[(HEAP32[i11 >> 2] | 0) + (i10 << 2) >> 2] | 0;
  i6 = HEAP32[i14 + 8 + (i10 << 2) >> 2] | 0;
  i2 = Math_imul(i8, i12) | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i2 | 0)) break;
   i4 = HEAP32[i6 + (i1 << 2) >> 2] | 0;
   HEAP32[i5 + (i1 << 2) >> 2] = i4;
   HEAP32[i9 + (i1 << 2) >> 2] = i4;
   i1 = i1 + 1 | 0;
  }
  i2 = i8 << 1;
  i3 = Math_imul(i8, i15) | 0;
  i4 = Math_imul(i8, i13) | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i2 | 0)) break;
   i18 = i1 + i3 | 0;
   i19 = i1 + i4 | 0;
   HEAP32[i5 + (i19 << 2) >> 2] = HEAP32[i6 + (i18 << 2) >> 2];
   HEAP32[i5 + (i18 << 2) >> 2] = HEAP32[i6 + (i19 << 2) >> 2];
   i1 = i1 + 1 | 0;
  }
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i8 | 0)) break;
   HEAP32[i9 + (i1 - i8 << 2) >> 2] = HEAP32[i9 >> 2];
   i1 = i1 + 1 | 0;
  }
  i10 = i10 + 1 | 0;
  i7 = i7 + 84 | 0;
 }
 return;
}

function __ZN6vision25DoGScaleInvariantDetector5allocEPKNS_25GaussianScaleSpacePyramidE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 __ZN6vision10DoGPyramid5allocEPKNS_25GaussianScaleSpacePyramidE(i2 + 32 | 0, i1);
 i3 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv(i1) | 0;
 i3 = __ZNK6vision5Image5widthEv(HEAP32[i3 >> 2] | 0) | 0;
 i5 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv(i1) | 0;
 i5 = __ZNK6vision5Image6heightEv(HEAP32[i5 >> 2] | 0) | 0;
 i4 = __ZNK6vision25GaussianScaleSpacePyramid10numOctavesEv(i1) | 0;
 __ZN6vision21OrientationAssignment5allocEmmiiiffif(i2 + 92 | 0, i3, i5, i4, __ZNK6vision25GaussianScaleSpacePyramid18numScalesPerOctaveEv(i1) | 0, 36, 3.0, 1.5, 5, .800000011920929);
 i4 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv(i1) | 0;
 i4 = __ZNK6vision5Image5widthEv(HEAP32[i4 >> 2] | 0) | 0;
 HEAP32[i2 >> 2] = i4;
 i4 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv(i1) | 0;
 i4 = __ZNK6vision5Image6heightEv(HEAP32[i4 >> 2] | 0) | 0;
 HEAP32[i2 + 4 >> 2] = i4;
 i4 = i2 + 16 | 0;
 __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE6resizeEm(i4, HEAP32[i2 + 8 >> 2] | 0);
 i5 = i2 + 20 | 0;
 i2 = i2 + 12 | 0;
 i1 = 0;
 while (1) {
  i3 = HEAP32[i4 >> 2] | 0;
  if (i1 >>> 0 >= (((HEAP32[i5 >> 2] | 0) - i3 | 0) / 12 | 0) >>> 0) break;
  __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE6resizeEm(i3 + (i1 * 12 | 0) | 0, HEAP32[i2 >> 2] | 0);
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__28messagesIcE6do_getEliiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(i8, i1, i3, i4, i5, i2) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i6 = 0, i7 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i7;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i6 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = HEAP8[i2 + 11 >> 0] | 0;
 i10 = i9 << 24 >> 24 < 0;
 i1 = i10 ? HEAP32[i2 >> 2] | 0 : i2;
 i2 = i1 + (i10 ? HEAP32[i2 + 4 >> 2] | 0 : i9 & 255) | 0;
 while (1) {
  if (i1 >>> 0 >= i2 >>> 0) break;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i6, HEAP8[i1 >> 0] | 0);
  i1 = i1 + 1 | 0;
 }
 i1 = (HEAP8[i6 + 11 >> 0] | 0) < 0 ? HEAP32[i6 >> 2] | 0 : i6;
 i3 = _catgets((i3 | 0) == -1 ? -1 : i3 << 1, i4, i5, i1) | 0;
 HEAP32[i8 >> 2] = 0;
 HEAP32[i8 + 4 >> 2] = 0;
 HEAP32[i8 + 8 >> 2] = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i8 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = i1 + (_strlen(i3) | 0) | 0;
 while (1) {
  if (i1 >>> 0 >= i2 >>> 0) break;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i8, HEAP8[i1 >> 0] | 0);
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
 STACKTOP = i7;
 return;
}

function __ZNK6vision10DoGPyramid15octaveFromIndexEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i5;
 i4 = HEAP32[i1 >> 2] | 0;
 if ((HEAP32[i1 + 4 >> 2] | 0) - i4 >> 5 >>> 0 > i2 >>> 0) {
  i4 = __ZNK6vision5Image5widthEv(i4) | 0;
  i4 = ~~+__ZN6vision5roundIfEET_S1_(+__ZN6vision4log2IfEET_S1_(+(((i4 >>> 0) / ((__ZNK6vision5Image5widthEv((HEAP32[i1 >> 2] | 0) + (i2 << 5) | 0) | 0) >>> 0) | 0) >>> 0)));
  STACKTOP = i5;
  return i4 | 0;
 } else {
  i5 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 25064) | 0, 22571) | 0, 33655) | 0, 94) | 0, 33662) | 0, 25110) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 return 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8__appendEm(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i8;
 i6 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if ((HEAP32[i6 >> 2] | 0) - i1 >> 2 >>> 0 < i4 >>> 0) {
  i1 = (i1 - (HEAP32[i3 >> 2] | 0) >> 2) + i4 | 0;
  i2 = __ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8max_sizeEv(i3) | 0;
  if (i2 >>> 0 < i1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i3); else {
   i9 = HEAP32[i3 >> 2] | 0;
   i10 = (HEAP32[i6 >> 2] | 0) - i9 | 0;
   i6 = i10 >> 1;
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEEC2EmmS6_(i5, i10 >> 2 >>> 0 < i2 >>> 1 >>> 0 ? (i6 >>> 0 < i1 >>> 0 ? i1 : i6) : i2, (HEAP32[i7 >> 2] | 0) - i9 >> 2, i3 + 16 | 0);
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm(i5, i4);
   __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i3, i5);
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEED2Ev(i5);
   break;
  }
 } else __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm(i3, i4); while (0);
 STACKTOP = i8;
 return;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = (((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) | 0) / 20 | 0) + 1 | 0;
 i6 = __ZNKSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = ((HEAP32[i1 + 8 >> 2] | 0) - i8 | 0) / 20 | 0;
  i9 = i10 << 1;
  __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEEC2EmmS5_(i3, i10 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, ((HEAP32[i4 >> 2] | 0) - i8 | 0) / 20 | 0, i1 + 8 | 0);
  i6 = i3 + 8 | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
  HEAP32[i5 + 12 >> 2] = HEAP32[i2 + 12 >> 2];
  HEAP32[i5 + 16 >> 2] = HEAP32[i2 + 16 >> 2];
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 20;
  __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i1, i3);
  __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryERKNS_5ImageE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i5;
 i4 = i1 + 92 | 0;
 i6 = __ZN6vision25GaussianScaleSpacePyramid6imagesEv(i4) | 0;
 if (!(((HEAP32[i6 + 4 >> 2] | 0) != (HEAP32[i6 >> 2] | 0) ? (i6 = __ZN6vision25GaussianScaleSpacePyramid6imagesEv(i4) | 0, i6 = __ZNK6vision5Image5widthEv(HEAP32[i6 >> 2] | 0) | 0, (i6 | 0) == (__ZNK6vision5Image5widthEv(i2) | 0)) : 0) ? (i6 = __ZN6vision25GaussianScaleSpacePyramid6imagesEv(i4) | 0, i6 = __ZNK6vision5Image6heightEv(HEAP32[i6 >> 2] | 0) | 0, (i6 | 0) == (__ZNK6vision5Image6heightEv(i2) | 0)) : 0)) {
  i6 = __ZNK6vision5Image5widthEv(i2) | 0;
  i6 = __ZN6vision10numOctavesEiii(i6, __ZNK6vision5Image6heightEv(i2) | 0, 8) | 0;
  i7 = __ZNK6vision5Image5widthEv(i2) | 0;
  __ZN6vision18BinomialPyramid32f5allocEmmi(i4, i7, __ZNK6vision5Image6heightEv(i2) | 0, i6);
 }
 __ZN6vision11ScopedTimerC2EPKc(i3, 27326);
 if (__ZN6vision11ScopedTimercvbEv(i3) | 0) __ZN6vision18BinomialPyramid32f5buildERKNS_5ImageE(i4, i2);
 __ZN6vision11ScopedTimerD2Ev(i3);
 i7 = __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_25GaussianScaleSpacePyramidE(i1, i4) | 0;
 STACKTOP = i5;
 return i7 | 0;
}

function __ZL15genBWImageQuartPhiiPiS0_(i10, i11, i1, i2, i3) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i12 = (i11 | 0) / 4 | 0;
 HEAP32[i2 >> 2] = i12;
 i9 = (i1 | 0) / 4 | 0;
 HEAP32[i3 >> 2] = i9;
 i8 = _malloc(Math_imul(i9, i12) | 0) | 0;
 if (!i8) {
  _arLog(0, 3, 20581, i13);
  _exit(1);
 }
 i2 = 0;
 i1 = i8;
 while (1) {
  if ((i2 | 0) >= (i9 | 0)) break;
  i7 = i2 << 2;
  i3 = 0;
  i4 = i10 + (Math_imul(i7, i11) | 0) | 0;
  i5 = i10 + (Math_imul(i7 | 3, i11) | 0) | 0;
  i6 = i10 + (Math_imul(i7 | 2, i11) | 0) | 0;
  i7 = i10 + (Math_imul(i7 | 1, i11) | 0) | 0;
  while (1) {
   if ((i3 | 0) >= (i12 | 0)) break;
   HEAP8[i1 >> 0] = ((HEAPU8[i4 + 1 >> 0] | 0) + (HEAPU8[i4 >> 0] | 0) + (HEAPU8[i4 + 2 >> 0] | 0) + (HEAPU8[i4 + 3 >> 0] | 0) + (HEAPU8[i7 >> 0] | 0) + (HEAPU8[i7 + 1 >> 0] | 0) + (HEAPU8[i7 + 2 >> 0] | 0) + (HEAPU8[i7 + 3 >> 0] | 0) + (HEAPU8[i6 >> 0] | 0) + (HEAPU8[i6 + 1 >> 0] | 0) + (HEAPU8[i6 + 2 >> 0] | 0) + (HEAPU8[i6 + 3 >> 0] | 0) + (HEAPU8[i5 >> 0] | 0) + (HEAPU8[i5 + 1 >> 0] | 0) + (HEAPU8[i5 + 2 >> 0] | 0) + (HEAPU8[i5 + 3 >> 0] | 0) | 0) / 16 | 0;
   i3 = i3 + 1 | 0;
   i4 = i4 + 4 | 0;
   i5 = i5 + 4 | 0;
   i6 = i6 + 4 | 0;
   i7 = i7 + 4 | 0;
   i1 = i1 + 1 | 0;
  }
  i2 = i2 + 1 | 0;
 }
 STACKTOP = i13;
 return i8 | 0;
}

function __ZN6vision24OrthogonalizeIdentity8x9IfEEbPT_PKS1_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, d6 = 0.0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(384);
 i5 = i4 + 336 | 0;
 i3 = i4;
 d6 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i3, i1, 0);
 HEAPF32[i5 >> 2] = d6;
 d6 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i3 + 36 | 0, i1, 1);
 HEAPF32[i5 + 4 >> 2] = d6;
 d6 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i3 + 72 | 0, i1, 2);
 HEAPF32[i5 + 8 >> 2] = d6;
 d6 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i3 + 108 | 0, i1, 3);
 HEAPF32[i5 + 12 >> 2] = d6;
 d6 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i3 + 144 | 0, i1, 4);
 HEAPF32[i5 + 16 >> 2] = d6;
 d6 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i3 + 180 | 0, i1, 5);
 HEAPF32[i5 + 20 >> 2] = d6;
 d6 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i3 + 216 | 0, i1, 6);
 HEAPF32[i5 + 24 >> 2] = d6;
 d6 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i3 + 252 | 0, i1, 7);
 HEAPF32[i5 + 28 >> 2] = d6;
 d6 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i3 + 288 | 0, i1, 8);
 HEAPF32[i5 + 32 >> 2] = d6;
 i1 = __ZN6vision9MaxIndex9IfEEiPKT_(i5) | 0;
 if (+HEAPF32[i5 + (i1 << 2) >> 2] == 0.0) i1 = 0; else {
  __ZN6vision11CopyVector9IfEEvPT_PKS1_(i2, i3 + (i1 * 9 << 2) | 0);
  i1 = 1;
 }
 STACKTOP = i4;
 return i1 | 0;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8__appendEm(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i8;
 i6 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if ((((HEAP32[i6 >> 2] | 0) - i1 | 0) / 20 | 0) >>> 0 < i4 >>> 0) {
  i1 = ((i1 - (HEAP32[i3 >> 2] | 0) | 0) / 20 | 0) + i4 | 0;
  i2 = __ZNKSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8max_sizeEv(i3) | 0;
  if (i2 >>> 0 < i1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i3); else {
   i9 = HEAP32[i3 >> 2] | 0;
   i10 = ((HEAP32[i6 >> 2] | 0) - i9 | 0) / 20 | 0;
   i6 = i10 << 1;
   __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEEC2EmmS5_(i5, i10 >>> 0 < i2 >>> 1 >>> 0 ? (i6 >>> 0 < i1 >>> 0 ? i1 : i6) : i2, ((HEAP32[i7 >> 2] | 0) - i9 | 0) / 20 | 0, i3 + 8 | 0);
   __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEE18__construct_at_endEm(i5, i4);
   __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i3, i5);
   __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEED2Ev(i5);
   break;
  }
 } else __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endEm(i3, i4); while (0);
 STACKTOP = i8;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw(i5, i6, i1, i2, i10, i11, i12, i4) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i4 = i4 | 0;
 var i3 = 0, i7 = 0, i8 = 0, i9 = 0, i13 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i13 = i14;
 if ((1073741806 - i6 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i5);
 i7 = i5 + 8 | 0;
 if ((HEAP8[i7 + 3 >> 0] | 0) < 0) i9 = HEAP32[i5 >> 2] | 0; else i9 = i5;
 if (i6 >>> 0 < 536870887) {
  i1 = i1 + i6 | 0;
  i3 = i6 << 1;
  i1 = i1 >>> 0 < i3 >>> 0 ? i3 : i1;
  i1 = i1 >>> 0 < 2 ? 2 : i1 + 4 & -4;
  if (i1 >>> 0 > 1073741823) _abort(); else i8 = i1;
 } else i8 = 1073741807;
 i3 = __Znwm(i8 << 2) | 0;
 if (i10 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm(i3, i9, i10) | 0;
 if (i12 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm(i3 + (i10 << 2) | 0, i4, i12) | 0;
 i1 = i2 - i11 | 0;
 i2 = i1 - i10 | 0;
 if (i2 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm(i3 + (i10 << 2) + (i12 << 2) | 0, i9 + (i10 << 2) + (i11 << 2) | 0, i2) | 0;
 if ((i6 | 0) != 1) __ZdlPv(i9);
 HEAP32[i5 >> 2] = i3;
 HEAP32[i7 >> 2] = i8 | -2147483648;
 i12 = i1 + i12 | 0;
 HEAP32[i5 + 4 >> 2] = i12;
 HEAP32[i13 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw(i3 + (i12 << 2) | 0, i13);
 STACKTOP = i14;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc(i6, i7, i1, i2, i9, i10, i11, i3) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i8 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i12 = i13;
 if ((-18 - i7 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i6);
 if ((HEAP8[i6 + 11 >> 0] | 0) < 0) i8 = HEAP32[i6 >> 2] | 0; else i8 = i6;
 if (i7 >>> 0 < 2147483623) {
  i4 = i1 + i7 | 0;
  i5 = i7 << 1;
  i4 = i4 >>> 0 < i5 >>> 0 ? i5 : i4;
  i4 = i4 >>> 0 < 11 ? 11 : i4 + 16 & -16;
 } else i4 = -17;
 i5 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm(i4) | 0;
 if (i9 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i5, i8, i9) | 0;
 if (i11 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i5 + i9 | 0, i3, i11) | 0;
 i1 = i2 - i10 | 0;
 i2 = i1 - i9 | 0;
 if (i2 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i5 + i9 + i11 | 0, i8 + i9 + i10 | 0, i2) | 0;
 if ((i7 | 0) != 10) __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm(i8);
 HEAP32[i6 >> 2] = i5;
 HEAP32[i6 + 8 >> 2] = i4 | -2147483648;
 i11 = i1 + i11 | 0;
 HEAP32[i6 + 4 >> 2] = i11;
 HEAP8[i12 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i5 + i11 | 0, i12);
 STACKTOP = i13;
 return;
}

function _start_pass_2_quant(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0;
 i5 = HEAP32[i4 + 460 >> 2] | 0;
 i6 = HEAP32[i5 + 24 >> 2] | 0;
 i3 = i4 + 88 | 0;
 if (!(HEAP32[i3 >> 2] | 0)) i2 = 0; else {
  HEAP32[i3 >> 2] = 2;
  i2 = 2;
 }
 if (!i1) {
  HEAP32[i5 + 4 >> 2] = (i2 | 0) == 2 ? 23 : 22;
  HEAP32[i5 + 8 >> 2] = 134;
  i1 = HEAP32[i4 + 132 >> 2] | 0;
  if ((i1 | 0) >= 1) {
   if ((i1 | 0) > 256) {
    i2 = HEAP32[i4 >> 2] | 0;
    HEAP32[i2 + 20 >> 2] = 57;
    HEAP32[i2 + 24 >> 2] = 256;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i4 >> 2] >> 2] & 255](i4);
   }
  } else {
   i2 = HEAP32[i4 >> 2] | 0;
   HEAP32[i2 + 20 >> 2] = 56;
   HEAP32[i2 + 24 >> 2] = 1;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i4 >> 2] >> 2] & 255](i4);
  }
  if ((HEAP32[i3 >> 2] | 0) == 2) {
   i3 = ((HEAP32[i4 + 112 >> 2] | 0) * 6 | 0) + 12 | 0;
   i2 = i5 + 32 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   if (!i1) {
    i1 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 + 4 >> 2] | 0) + 4 >> 2] & 63](i4, 1, i3) | 0;
    HEAP32[i2 >> 2] = i1;
   }
   _jzero_far(i1, i3);
   if (!(HEAP32[i5 + 40 >> 2] | 0)) _init_error_limit(i4);
   HEAP32[i5 + 36 >> 2] = 0;
  }
 } else {
  HEAP32[i5 + 4 >> 2] = 21;
  HEAP32[i5 + 8 >> 2] = 133;
  HEAP32[i5 + 28 >> 2] = 1;
 }
 i2 = i5 + 28 | 0;
 if (HEAP32[i2 >> 2] | 0) {
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 32) break;
   _jzero_far(HEAP32[i6 + (i1 << 2) >> 2] | 0, 4096);
   i1 = i1 + 1 | 0;
  }
  HEAP32[i2 >> 2] = 0;
 }
 return;
}

function ___mo_lookup(i12, i13, i10) {
 i12 = i12 | 0;
 i13 = i13 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0;
 i11 = (HEAP32[i12 >> 2] | 0) + 1794895138 | 0;
 i3 = _swapc(HEAP32[i12 + 8 >> 2] | 0, i11) | 0;
 i1 = _swapc(HEAP32[i12 + 12 >> 2] | 0, i11) | 0;
 i2 = _swapc(HEAP32[i12 + 16 >> 2] | 0, i11) | 0;
 L1 : do if ((i3 >>> 0 < i13 >>> 2 >>> 0 ? (i9 = i13 - (i3 << 2) | 0, i1 >>> 0 < i9 >>> 0 & i2 >>> 0 < i9 >>> 0) : 0) ? ((i2 | i1) & 3 | 0) == 0 : 0) {
  i9 = i1 >>> 2;
  i8 = i2 >>> 2;
  i7 = 0;
  while (1) {
   i5 = i3 >>> 1;
   i6 = i7 + i5 | 0;
   i4 = i6 << 1;
   i2 = i4 + i9 | 0;
   i1 = _swapc(HEAP32[i12 + (i2 << 2) >> 2] | 0, i11) | 0;
   i2 = _swapc(HEAP32[i12 + (i2 + 1 << 2) >> 2] | 0, i11) | 0;
   if (!(i2 >>> 0 < i13 >>> 0 & i1 >>> 0 < (i13 - i2 | 0) >>> 0)) {
    i1 = 0;
    break L1;
   }
   if (HEAP8[i12 + (i2 + i1) >> 0] | 0) {
    i1 = 0;
    break L1;
   }
   i1 = _strcmp(i10, i12 + i2 | 0) | 0;
   if (!i1) break;
   i1 = (i1 | 0) < 0;
   if ((i3 | 0) == 1) {
    i1 = 0;
    break L1;
   }
   i7 = i1 ? i7 : i6;
   i3 = i1 ? i5 : i3 - i5 | 0;
  }
  i1 = i4 + i8 | 0;
  i2 = _swapc(HEAP32[i12 + (i1 << 2) >> 2] | 0, i11) | 0;
  i1 = _swapc(HEAP32[i12 + (i1 + 1 << 2) >> 2] | 0, i11) | 0;
  if (i1 >>> 0 < i13 >>> 0 & i2 >>> 0 < (i13 - i1 | 0) >>> 0) i1 = (HEAP8[i12 + (i1 + i2) >> 0] | 0) == 0 ? i12 + i1 | 0 : 0; else i1 = 0;
 } else i1 = 0; while (0);
 return i1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm(i8, i4, i1, i7) {
 i8 = i8 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i11;
 i10 = i8 + 11 | 0;
 i2 = HEAP8[i10 >> 0] | 0;
 i3 = i2 << 24 >> 24 < 0;
 if (i3) i6 = HEAP32[i8 + 4 >> 2] | 0; else i6 = i2 & 255;
 if (i6 >>> 0 < i4 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv(i8);
 if (i3) i2 = (HEAP32[i8 + 8 >> 2] & 2147483647) + -1 | 0; else i2 = 10;
 if ((i2 - i6 | 0) >>> 0 >= i7 >>> 0) {
  if (i7 | 0) {
   if (i3) i5 = HEAP32[i8 >> 2] | 0; else i5 = i8;
   i2 = i6 - i4 | 0;
   i3 = i5 + i4 | 0;
   if (i2) {
    __ZNSt3__211char_traitsIcE4moveEPcPKcm(i3 + i7 | 0, i3, i2) | 0;
    i1 = i3 >>> 0 <= i1 >>> 0 & (i5 + i6 | 0) >>> 0 > i1 >>> 0 ? i1 + i7 | 0 : i1;
   }
   __ZNSt3__211char_traitsIcE4moveEPcPKcm(i3, i1, i7) | 0;
   i1 = i6 + i7 | 0;
   if ((HEAP8[i10 >> 0] | 0) < 0) HEAP32[i8 + 4 >> 2] = i1; else HEAP8[i10 >> 0] = i1;
   HEAP8[i9 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i5 + i1 | 0, i9);
  }
 } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc(i8, i2, i6 + i7 - i2 | 0, i6, i4, 0, i7, i1);
 STACKTOP = i11;
 return i8 | 0;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = (((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 i6 = __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = ((HEAP32[i1 + 8 >> 2] | 0) - i8 | 0) / 24 | 0;
  i9 = i10 << 1;
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEEC2EmmS6_(i3, i10 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, ((HEAP32[i4 >> 2] | 0) - i8 | 0) / 24 | 0, i1 + 12 | 0);
  i6 = i3 + 8 | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i5, i2);
  HEAP32[i6 >> 2] = i5 + 24;
  __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i1, i3);
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = (((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 i6 = __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = ((HEAP32[i1 + 8 >> 2] | 0) - i8 | 0) / 24 | 0;
  i9 = i10 << 1;
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEEC2EmmS6_(i3, i10 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, ((HEAP32[i4 >> 2] | 0) - i8 | 0) / 24 | 0, i1 + 12 | 0);
  i6 = i3 + 8 | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i5, i2);
  HEAP32[i6 >> 2] = i5 + 24;
  __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i1, i3);
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function _ar2CreateHandleSub(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i8 = i9 + 16 | 0;
 i5 = i9 + 8 | 0;
 i7 = _malloc(13732) | 0;
 if (!i7) {
  _arLog(0, 3, 20581, i9);
  _exit(1);
 }
 HEAP32[i7 + 20 >> 2] = i2;
 HEAP32[i7 + 4 >> 2] = i3;
 HEAP32[i7 + 8 >> 2] = i4;
 HEAP32[i7 + 24 >> 2] = 25;
 HEAP32[i7 + 28 >> 2] = 11;
 HEAP32[i7 + 32 >> 2] = 11;
 HEAP32[i7 + 36 >> 2] = 10;
 HEAPF32[i7 + 40 >> 2] = .6000000238418579;
 HEAPF32[i7 + 44 >> 2] = 2.0;
 if ((i1 | 0) == -1) i1 = _threadGetCPU() | 0;
 i10 = (i1 | 0) > 1 ? i1 : 1;
 i10 = (i10 | 0) < 8 ? i10 : 8;
 i6 = i7 + 13280 | 0;
 HEAP32[i6 >> 2] = i10;
 HEAP32[i5 >> 2] = i10;
 _arLog(0, 1, 19396, i5);
 i2 = Math_imul(i4, i3) | 0;
 i3 = i7 + 13284 | 0;
 i4 = i7 + 13700 | 0;
 i1 = 0;
 i5 = i10;
 while (1) {
  if ((i1 | 0) >= (i5 | 0)) {
   i1 = 10;
   break;
  }
  i10 = _malloc(i2) | 0;
  HEAP32[i3 + (i1 * 52 | 0) + 16 >> 2] = i10;
  if (!i10) {
   i1 = 8;
   break;
  }
  HEAP32[i3 + (i1 * 52 | 0) + 20 >> 2] = 0;
  i5 = _threadInit(i1, i3 + (i1 * 52 | 0) | 0, 62) | 0;
  HEAP32[i4 + (i1 << 2) >> 2] = i5;
  i1 = i1 + 1 | 0;
  i5 = HEAP32[i6 >> 2] | 0;
 }
 if ((i1 | 0) == 8) {
  _arLog(0, 3, 20581, i8);
  _exit(1);
 } else if ((i1 | 0) == 10) {
  STACKTOP = i9;
  return i7 | 0;
 }
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i7;
 if ((i1 | 0) != (i2 | 0) ? (i3 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i4) | 0, (i3 | 0) != (i1 | 0)) : 0) {
  i5 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i3, i2, i4) | 0;
  if ((i5 | 0) != (i3 | 0)) {
   i3 = i4 + 4 | 0;
   i2 = HEAP32[i3 >> 2] | 0;
   if (((i2 - (HEAP32[i4 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, i2 + -24 | 0);
    i2 = HEAP32[i3 >> 2] | 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == -1) break;
     i4 = i1 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i4 * 24 | 0) | 0);
     i1 = i4;
    }
    HEAP32[i3 >> 2] = i2 + -24;
    i1 = HEAP8[i6 + 11 >> 0] | 0;
    i4 = i1 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i2 + -48 | 0, i4 ? HEAP32[i6 >> 2] | 0 : i6, i4 ? HEAP32[i6 + 4 >> 2] | 0 : i1 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
    i1 = i5;
   }
  } else i1 = i3;
 }
 STACKTOP = i7;
 return i1 | 0;
}

function _alloc_small(i9, i3, i1) {
 i9 = i9 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0;
 i10 = HEAP32[i9 + 4 >> 2] | 0;
 if (i1 >>> 0 > 999999984) _out_of_memory(i9, 1);
 i8 = i1 & 7;
 i8 = ((i8 | 0) == 0 ? 0 : 8 - i8 | 0) + i1 | 0;
 if (i3 >>> 0 > 1) {
  i7 = HEAP32[i9 >> 2] | 0;
  HEAP32[i7 + 20 >> 2] = 14;
  HEAP32[i7 + 24 >> 2] = i3;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i9 >> 2] >> 2] & 255](i9);
 }
 i7 = i10 + 52 + (i3 << 2) | 0;
 i2 = i7;
 i6 = 0;
 while (1) {
  i1 = HEAP32[i2 >> 2] | 0;
  if (!i1) {
   i4 = 9;
   break;
  }
  if ((HEAP32[i1 + 8 >> 2] | 0) >>> 0 >= i8 >>> 0) break;
  i2 = i1;
  i6 = i1;
 }
 do if ((i4 | 0) == 9) {
  i5 = (i6 | 0) == 0;
  i2 = HEAP32[(i5 ? 13624 : 13632) + (i3 << 2) >> 2] | 0;
  i4 = 999999984 - i8 | 0;
  i2 = i2 >>> 0 > i4 >>> 0 ? i4 : i2;
  while (1) {
   i3 = i2 + i8 | 0;
   i4 = i3 + 16 | 0;
   i1 = _jpeg_get_small(i9, i4) | 0;
   if (i1 | 0) break;
   if (i2 >>> 0 < 100) _out_of_memory(i9, 2);
   i2 = i2 >>> 1;
  }
  i10 = i10 + 76 | 0;
  HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + i4;
  HEAP32[i1 >> 2] = 0;
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = i3;
  if (i5) {
   HEAP32[i7 >> 2] = i1;
   break;
  } else {
   HEAP32[i6 >> 2] = i1;
   break;
  }
 } while (0);
 i9 = i1 + 4 | 0;
 i10 = HEAP32[i9 >> 2] | 0;
 HEAP32[i9 >> 2] = i10 + i8;
 i9 = i1 + 8 | 0;
 HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) - i8;
 return i1 + 16 + i10 | 0;
}

function _jinit_d_coef_controller(i6, i1) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i7 = i6 + 4 | 0;
 i8 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i7 >> 2] >> 2] & 63](i6, 1, 116) | 0;
 HEAP32[i6 + 428 >> 2] = i8;
 HEAP32[i8 >> 2] = 131;
 HEAP32[i8 + 8 >> 2] = 132;
 HEAP32[i8 + 112 >> 2] = 0;
 if (!i1) {
  i2 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 4 >> 2] & 63](i6, 1, 1280) | 0;
  i3 = i8 + 32 | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 10) break;
   HEAP32[i3 + (i1 << 2) >> 2] = i2 + (i1 << 7);
   i1 = i1 + 1 | 0;
  }
  HEAP32[i8 + 4 >> 2] = 73;
  HEAP32[i8 + 12 >> 2] = 23;
  HEAP32[i8 + 16 >> 2] = 0;
 } else {
  i3 = i6 + 36 | 0;
  i4 = i6 + 220 | 0;
  i5 = i8 + 72 | 0;
  i1 = 0;
  i2 = HEAP32[i6 + 216 >> 2] | 0;
  while (1) {
   if ((i1 | 0) >= (HEAP32[i3 >> 2] | 0)) break;
   i10 = i2 + 12 | 0;
   i9 = HEAP32[i10 >> 2] | 0;
   i9 = (HEAP32[i4 >> 2] | 0) == 0 ? i9 : i9 * 3 | 0;
   i12 = HEAP32[(HEAP32[i7 >> 2] | 0) + 20 >> 2] | 0;
   i11 = _jround_up(HEAP32[i2 + 28 >> 2] | 0, HEAP32[i2 + 8 >> 2] | 0) | 0;
   i10 = _jround_up(HEAP32[i2 + 32 >> 2] | 0, HEAP32[i10 >> 2] | 0) | 0;
   i9 = FUNCTION_TABLE_iiiiiii[i12 & 63](i6, 1, 1, i11, i10, i9) | 0;
   HEAP32[i5 + (i1 << 2) >> 2] = i9;
   i1 = i1 + 1 | 0;
   i2 = i2 + 84 | 0;
  }
  HEAP32[i8 + 4 >> 2] = 72;
  HEAP32[i8 + 12 >> 2] = 22;
  HEAP32[i8 + 16 >> 2] = i5;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 L1 : do if ((i1 | 0) != (i5 | 0)) switch (HEAP8[i1 >> 0] | 0) {
 case 88:
  {
   i3 = i1 + 1 | 0;
   i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i3, i5, i4) | 0;
   if ((i2 | 0) == (i3 | 0) | (i2 | 0) == (i5 | 0)) break L1;
   i1 = (HEAP8[i2 >> 0] | 0) == 69 ? i2 + 1 | 0 : i1;
   break L1;
  }
 case 74:
  {
   i2 = i1 + 1 | 0;
   if ((i2 | 0) == (i5 | 0)) break L1;
   while (1) {
    if ((HEAP8[i2 >> 0] | 0) == 69) break;
    i3 = __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_(i2, i5, i4) | 0;
    if ((i3 | 0) == (i2 | 0)) break L1; else i2 = i3;
   }
   i1 = i2 + 1 | 0;
   break L1;
  }
 case 76:
  {
   i3 = i1 + 1 | 0;
   if ((i3 | 0) != (i5 | 0) ? (HEAP8[i3 >> 0] | 0) == 90 : 0) {
    i3 = i1 + 2 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i3, i5, i4) | 0;
    if ((i2 | 0) == (i3 | 0) | (i2 | 0) == (i5 | 0)) break L1;
    i1 = (HEAP8[i2 >> 0] | 0) == 69 ? i2 + 1 | 0 : i1;
    break L1;
   }
   i1 = __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_(i1, i5, i4) | 0;
   break L1;
  }
 default:
  {
   i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i5, i4) | 0;
   break L1;
  }
 } while (0);
 return i1 | 0;
}

function _create_colorindex(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i10 = HEAP32[i1 + 460 >> 2] | 0;
 i11 = (HEAP32[i1 + 88 >> 2] | 0) == 1;
 HEAP32[i10 + 28 >> 2] = i11 & 1;
 i9 = i1 + 120 | 0;
 i1 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 8 >> 2] & 15](i1, 1, i11 ? 766 : 256, HEAP32[i9 >> 2] | 0) | 0;
 i8 = i10 + 24 | 0;
 HEAP32[i8 >> 2] = i1;
 i1 = HEAP32[i10 + 20 >> 2] | 0;
 i7 = 0;
 while (1) {
  if ((i7 | 0) >= (HEAP32[i9 >> 2] | 0)) break;
  i2 = HEAP32[i10 + 32 + (i7 << 2) >> 2] | 0;
  i1 = (i1 | 0) / (i2 | 0) | 0;
  if (i11) {
   i6 = (HEAP32[i8 >> 2] | 0) + (i7 << 2) | 0;
   HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 255;
  }
  i6 = HEAP32[(HEAP32[i8 >> 2] | 0) + (i7 << 2) >> 2] | 0;
  i5 = i2 + -1 | 0;
  i2 = 0;
  i3 = _largest_input_value(0, i5) | 0;
  i4 = 0;
  while (1) {
   if ((i4 | 0) == 256) break;
   while (1) {
    if ((i4 | 0) <= (i3 | 0)) break;
    i3 = i2 + 1 | 0;
    i2 = i3;
    i3 = _largest_input_value(i3, i5) | 0;
   }
   i12 = (Math_imul(i2, i1) | 0) & 255;
   HEAP8[i6 + i4 >> 0] = i12;
   i4 = i4 + 1 | 0;
  }
  L15 : do if (i11) {
   i3 = i6 + 255 | 0;
   i2 = 1;
   while (1) {
    if ((i2 | 0) == 256) break L15;
    HEAP8[i6 + (0 - i2) >> 0] = HEAP8[i6 >> 0] | 0;
    HEAP8[i6 + (i2 + 255) >> 0] = HEAP8[i3 >> 0] | 0;
    i2 = i2 + 1 | 0;
   }
  } while (0);
  i7 = i7 + 1 | 0;
 }
 return;
}

function _arMatrixPCA(i1, i7, i10, i4) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i10 = i10 | 0;
 i4 = i4 | 0;
 var i2 = 0, d3 = 0.0, i5 = 0, i6 = 0, i8 = 0, i9 = 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i6 = HEAP32[i1 + 8 >> 2] | 0;
 i2 = (i5 | 0) < (i6 | 0) ? i5 : i6;
 L1 : do if (((((!((i5 | 0) < 2 | (i6 | 0) < 2) ? (HEAP32[i7 + 8 >> 2] | 0) == (i6 | 0) : 0) ? (HEAP32[i7 + 4 >> 2] | 0) == (i2 | 0) : 0) ? (i8 = i10 + 4 | 0, (HEAP32[i8 >> 2] | 0) == (i2 | 0)) : 0) ? (HEAP32[i4 + 4 >> 2] | 0) == (i6 | 0) : 0) ? (i9 = _arMatrixAllocDup(i1) | 0, (i9 | 0) != 0) : 0) {
  d3 = +Math_sqrt(+(+(i5 | 0)));
  if ((_EX(i9, i4) | 0) < 0) {
   _arMatrixFree(i9) | 0;
   i1 = -1;
   break;
  }
  if ((_CENTER(i9, i4) | 0) < 0) {
   _arMatrixFree(i9) | 0;
   i1 = -1;
   break;
  }
  i2 = Math_imul(i6, i5) | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i2 | 0)) break;
   i6 = (HEAP32[i9 >> 2] | 0) + (i1 << 3) | 0;
   HEAPF64[i6 >> 3] = +HEAPF64[i6 >> 3] / d3;
   i1 = i1 + 1 | 0;
  }
  i1 = _PCA(i9, i7, i10) | 0;
  _arMatrixFree(i9) | 0;
  i4 = HEAP32[i8 >> 2] | 0;
  d3 = 0.0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (i4 | 0)) break;
   d3 = d3 + +HEAPF64[(HEAP32[i10 >> 2] | 0) + (i2 << 3) >> 3];
   i2 = i2 + 1 | 0;
  }
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (i4 | 0)) break L1;
   i9 = (HEAP32[i10 >> 2] | 0) + (i2 << 3) | 0;
   HEAPF64[i9 >> 3] = +HEAPF64[i9 >> 3] / d3;
   i2 = i2 + 1 | 0;
  }
 } else i1 = -1; while (0);
 return i1 | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEmRKi(i3, i7, i8) {
 i3 = i3 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i10;
 i6 = i3 + 8 | 0;
 i9 = i3 + 4 | 0;
 i1 = HEAP32[i9 >> 2] | 0;
 i4 = i1;
 do if ((HEAP32[i6 >> 2] | 0) - i1 >> 2 >>> 0 < i7 >>> 0) {
  i1 = (i1 - (HEAP32[i3 >> 2] | 0) >> 2) + i7 | 0;
  i2 = __ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv(i3) | 0;
  if (i2 >>> 0 < i1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i3); else {
   i4 = HEAP32[i3 >> 2] | 0;
   i11 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
   i6 = i11 >> 1;
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_(i5, i11 >> 2 >>> 0 < i2 >>> 1 >>> 0 ? (i6 >>> 0 < i1 >>> 0 ? i1 : i6) : i2, (HEAP32[i9 >> 2] | 0) - i4 >> 2, i3 + 8 | 0);
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEE18__construct_at_endEmRKi(i5, i7, i8);
   __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE(i3, i5);
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev(i5);
   break;
  }
 } else {
  i1 = i7;
  i2 = i4;
  while (1) {
   HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
   i1 = i1 + -1 | 0;
   if (!i1) break; else i2 = i2 + 4 | 0;
  }
  HEAP32[i9 >> 2] = i4 + (i7 << 2);
 } while (0);
 STACKTOP = i10;
 return;
}

function _sep_upsample(i8, i4, i9, i1, i10, i11, i12) {
 i8 = i8 | 0;
 i4 = i4 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i13 = 0;
 i6 = HEAP32[i8 + 452 >> 2] | 0;
 i7 = i6 + 92 | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 i5 = i8 + 312 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 if ((i2 | 0) >= (i1 | 0)) {
  i3 = i8 + 36 | 0;
  i1 = HEAP32[i8 + 216 >> 2] | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (HEAP32[i3 >> 2] | 0)) break;
   i13 = (HEAP32[i4 + (i2 << 2) >> 2] | 0) + ((Math_imul(HEAP32[i6 + 100 + (i2 << 2) >> 2] | 0, HEAP32[i9 >> 2] | 0) | 0) << 2) | 0;
   FUNCTION_TABLE_viiii[HEAP32[i6 + 52 + (i2 << 2) >> 2] & 31](i8, i1, i13, i6 + 12 + (i2 << 2) | 0);
   i1 = i1 + 84 | 0;
   i2 = i2 + 1 | 0;
  }
  HEAP32[i7 >> 2] = 0;
  i2 = 0;
  i1 = HEAP32[i5 >> 2] | 0;
 }
 i13 = i1 - i2 | 0;
 i4 = i6 + 96 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 i13 = i13 >>> 0 > i3 >>> 0 ? i3 : i13;
 i3 = HEAP32[i11 >> 2] | 0;
 i12 = i12 - i3 | 0;
 i13 = i13 >>> 0 > i12 >>> 0 ? i12 : i13;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i8 + 456 >> 2] | 0) + 4 >> 2] & 31](i8, i6 + 12 | 0, i2, i10 + (i3 << 2) | 0, i13);
 HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + i13;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) - i13;
 i13 = (HEAP32[i7 >> 2] | 0) + i13 | 0;
 HEAP32[i7 >> 2] = i13;
 if ((i13 | 0) >= (HEAP32[i5 >> 2] | 0)) HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 1;
 return;
}

function _ar2MarkerCoord2ScreenCoord2(i5, i1, d2, d3, i7, i8) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i4 = 0, d6 = 0.0, i9 = 0, i10 = 0, i11 = 0, d12 = 0.0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i4 = i11;
 i9 = i11 + 52 | 0;
 i10 = i11 + 48 | 0;
 if (i5) {
  _arUtilMatMuldff(i5 + 8 | 0, i1, i4) | 0;
  d12 = +HEAPF32[i4 + 44 >> 2] + (+HEAPF32[i4 + 32 >> 2] * d2 + +HEAPF32[i4 + 36 >> 2] * d3);
  d6 = (+HEAPF32[i4 + 12 >> 2] + (+HEAPF32[i4 >> 2] * d2 + +HEAPF32[i4 + 4 >> 2] * d3)) / d12;
  d2 = (+HEAPF32[i4 + 28 >> 2] + (+HEAPF32[i4 + 16 >> 2] * d2 + +HEAPF32[i4 + 20 >> 2] * d3)) / d12;
  i1 = i5 + 184 | 0;
  if ((_arParamIdeal2ObservLTf(i1, d6, d2, i7, i8) | 0) >= 0 ? (_arParamObserv2IdealLTf(i1, +HEAPF32[i7 >> 2], +HEAPF32[i8 >> 2], i9, i10) | 0) >= 0 : 0) {
   d6 = d6 - +HEAPF32[i9 >> 2];
   d12 = d2 - +HEAPF32[i10 >> 2];
   i1 = (d6 * d6 + d12 * d12 > 1.0) << 31 >> 31;
  } else i1 = -1;
 } else {
  d6 = +HEAPF32[i1 + 28 >> 2] + (+HEAPF32[i1 + 16 >> 2] * d2 + +HEAPF32[i1 + 20 >> 2] * d3);
  d12 = +HEAPF32[i1 + 44 >> 2] + (+HEAPF32[i1 + 32 >> 2] * d2 + +HEAPF32[i1 + 36 >> 2] * d3);
  HEAPF32[i7 >> 2] = (+HEAPF32[i1 + 12 >> 2] + (+HEAPF32[i1 >> 2] * d2 + +HEAPF32[i1 + 4 >> 2] * d3)) / d12;
  HEAPF32[i8 >> 2] = d6 / d12;
  i1 = 0;
 }
 STACKTOP = i11;
 return i1 | 0;
}

function __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = ((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 3) + 1 | 0;
 i6 = __ZNKSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] | 0) - i8 | 0;
  i9 = i10 >> 2;
  __ZNSt3__214__split_bufferIN6vision17PriorityQueueItemILi96EEERNS_9allocatorIS3_EEEC2EmmS6_(i3, i10 >> 3 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, (HEAP32[i4 >> 2] | 0) - i8 >> 3, i1 + 8 | 0);
  i6 = i3 + 8 | 0;
  i4 = HEAP32[i2 + 4 >> 2] | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i5 + 4 >> 2] = i4;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 8;
  __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i1, i3);
  __ZNSt3__214__split_bufferIN6vision17PriorityQueueItemILi96EEERNS_9allocatorIS3_EEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function __ZN6vision27OrthogonalizePivot8x9Basis4IfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 i3 = i1 + 144 | 0;
 i10 = i1 + 108 | 0;
 i4 = i2 + 144 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i3, i10, i4);
 i9 = i1 + 180 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i9, i10, i2 + 180 | 0);
 i8 = i1 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i8, i10, i2 + 216 | 0);
 i1 = i1 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i1, i10, i2 + 252 | 0);
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i3);
 HEAPF32[i6 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i9);
 HEAPF32[i6 + 4 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i8);
 HEAPF32[i6 + 8 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i1);
 HEAPF32[i6 + 12 >> 2] = d7;
 i1 = __ZN6vision9MaxIndex4IfEEiPKT_(i6) | 0;
 i2 = i6 + (i1 << 2) | 0;
 if (+HEAPF32[i2 >> 2] == 0.0) i1 = 0; else {
  i1 = i1 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_(i3, i3 + (i1 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_(i4, i4 + (i1 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_(i3, i3, 1.0 / +Math_sqrt(+(+HEAPF32[i2 >> 2])));
  i1 = 1;
 }
 STACKTOP = i5;
 return i1 | 0;
}

function _ycc_rgb_convert(i1, i16, i2, i3, i4) {
 i1 = i1 | 0;
 i16 = i16 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i13 = HEAP32[i1 + 456 >> 2] | 0;
 i17 = HEAP32[i1 + 112 >> 2] | 0;
 i9 = HEAP32[i1 + 324 >> 2] | 0;
 i10 = HEAP32[i13 + 8 >> 2] | 0;
 i11 = HEAP32[i13 + 12 >> 2] | 0;
 i12 = HEAP32[i13 + 16 >> 2] | 0;
 i13 = HEAP32[i13 + 20 >> 2] | 0;
 i14 = i16 + 4 | 0;
 i15 = i16 + 8 | 0;
 i1 = i4;
 while (1) {
  i8 = i1 + -1 | 0;
  if ((i1 | 0) <= 0) break;
  i5 = HEAP32[(HEAP32[i16 >> 2] | 0) + (i2 << 2) >> 2] | 0;
  i6 = HEAP32[(HEAP32[i14 >> 2] | 0) + (i2 << 2) >> 2] | 0;
  i7 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i2 << 2) >> 2] | 0;
  i2 = i2 + 1 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  i4 = 0;
  while (1) {
   if ((i4 | 0) == (i17 | 0)) break;
   i18 = HEAPU8[i5 + i4 >> 0] | 0;
   i19 = HEAPU8[i6 + i4 >> 0] | 0;
   i20 = HEAPU8[i7 + i4 >> 0] | 0;
   HEAP8[i1 >> 0] = HEAP8[i9 + ((HEAP32[i10 + (i20 << 2) >> 2] | 0) + i18) >> 0] | 0;
   HEAP8[i1 + 1 >> 0] = HEAP8[i9 + (((HEAP32[i12 + (i20 << 2) >> 2] | 0) + (HEAP32[i13 + (i19 << 2) >> 2] | 0) >> 16) + i18) >> 0] | 0;
   HEAP8[i1 + 2 >> 0] = HEAP8[i9 + ((HEAP32[i11 + (i19 << 2) >> 2] | 0) + i18) >> 0] | 0;
   i1 = i1 + 3 | 0;
   i4 = i4 + 1 | 0;
  }
  i3 = i3 + 4 | 0;
  i1 = i8;
 }
 return;
}

function __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE8__appendEm(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i8;
 i6 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if ((HEAP32[i6 >> 2] | 0) - i1 >> 5 >>> 0 < i4 >>> 0) {
  i1 = (i1 - (HEAP32[i3 >> 2] | 0) >> 5) + i4 | 0;
  i2 = __ZNKSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE8max_sizeEv(i3) | 0;
  if (i2 >>> 0 < i1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i3); else {
   i9 = HEAP32[i3 >> 2] | 0;
   i10 = (HEAP32[i6 >> 2] | 0) - i9 | 0;
   i6 = i10 >> 4;
   __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEEC2EmmS5_(i5, i10 >> 5 >>> 0 < i2 >>> 1 >>> 0 ? (i6 >>> 0 < i1 >>> 0 ? i1 : i6) : i2, (HEAP32[i7 >> 2] | 0) - i9 >> 5, i3 + 8 | 0);
   __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEE18__construct_at_endEm(i5, i4);
   __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i3, i5);
   __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEED2Ev(i5);
   break;
  }
 } else __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE18__construct_at_endEm(i3, i4); while (0);
 STACKTOP = i8;
 return;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = (((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
 i6 = __ZNKSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = ((HEAP32[i1 + 8 >> 2] | 0) - i8 | 0) / 12 | 0;
  i9 = i10 << 1;
  __ZNSt3__214__split_bufferIN6vision7Point3dIfEERNS_9allocatorIS3_EEEC2EmmS6_(i3, i10 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, ((HEAP32[i4 >> 2] | 0) - i8 | 0) / 12 | 0, i1 + 8 | 0);
  i6 = i3 + 8 | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 12;
  __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i1, i3);
  __ZNSt3__214__split_bufferIN6vision7Point3dIfEERNS_9allocatorIS3_EEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE8__appendEmRKh(i4, i2, i7) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i7 = i7 | 0;
 var i1 = 0, i3 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i9;
 i6 = i4 + 8 | 0;
 i8 = i4 + 4 | 0;
 i1 = HEAP32[i8 >> 2] | 0;
 do if (((HEAP32[i6 >> 2] | 0) - i1 | 0) >>> 0 < i2 >>> 0) {
  i1 = i1 - (HEAP32[i4 >> 2] | 0) + i2 | 0;
  i3 = __ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv(i4) | 0;
  if (i3 >>> 0 < i1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i4); else {
   i10 = HEAP32[i4 >> 2] | 0;
   i11 = (HEAP32[i6 >> 2] | 0) - i10 | 0;
   i6 = i11 << 1;
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEEC2EmmS3_(i5, i11 >>> 0 < i3 >>> 1 >>> 0 ? (i6 >>> 0 < i1 >>> 0 ? i1 : i6) : i3, (HEAP32[i8 >> 2] | 0) - i10 | 0, i4 + 8 | 0);
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE18__construct_at_endEmRKh(i5, i2, i7);
   __ZNSt3__26vectorIhNS_9allocatorIhEEE26__swap_out_circular_bufferERNS_14__split_bufferIhRS2_EE(i4, i5);
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEED2Ev(i5);
   break;
  }
 } else do {
  HEAP8[i1 >> 0] = HEAP8[i7 >> 0] | 0;
  i1 = (HEAP32[i8 >> 2] | 0) + 1 | 0;
  HEAP32[i8 >> 2] = i1;
  i2 = i2 + -1 | 0;
 } while ((i2 | 0) != 0); while (0);
 STACKTOP = i9;
 return;
}

function __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE8__appendEm(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i8;
 i6 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if ((HEAP32[i6 >> 2] | 0) - i1 >> 3 >>> 0 < i4 >>> 0) {
  i1 = (i1 - (HEAP32[i3 >> 2] | 0) >> 3) + i4 | 0;
  i2 = __ZNKSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE8max_sizeEv(i3) | 0;
  if (i2 >>> 0 < i1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i3); else {
   i9 = HEAP32[i3 >> 2] | 0;
   i10 = (HEAP32[i6 >> 2] | 0) - i9 | 0;
   i6 = i10 >> 2;
   __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEEC2EmmS5_(i5, i10 >> 3 >>> 0 < i2 >>> 1 >>> 0 ? (i6 >>> 0 < i1 >>> 0 ? i1 : i6) : i2, (HEAP32[i7 >> 2] | 0) - i9 >> 3, i3 + 8 | 0);
   __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEE18__construct_at_endEm(i5, i4);
   __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i3, i5);
   __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEED2Ev(i5);
   break;
  }
 } else __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE18__construct_at_endEm(i3, i4); while (0);
 STACKTOP = i8;
 return;
}

function _icpGetJ_U_Xc(i12, i3, i1) {
 i12 = i12 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var d2 = 0.0, d4 = 0.0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, d9 = 0.0, i10 = 0, i11 = 0, i13 = 0, d14 = 0.0, i15 = 0, d16 = 0.0, d17 = 0.0;
 d14 = +HEAPF64[i3 >> 3];
 d17 = +HEAPF64[i1 >> 3];
 i15 = i3 + 8 | 0;
 d16 = +HEAPF64[i1 + 8 >> 3];
 i13 = i3 + 16 | 0;
 d2 = +HEAPF64[i1 + 16 >> 3];
 d4 = +HEAPF64[i3 + 24 >> 3] + (d14 * d17 + +HEAPF64[i15 >> 3] * d16 + +HEAPF64[i13 >> 3] * d2);
 i1 = i3 + 32 | 0;
 i5 = i3 + 40 | 0;
 i6 = i3 + 48 | 0;
 d7 = +HEAPF64[i3 + 56 >> 3] + (d17 * +HEAPF64[i1 >> 3] + d16 * +HEAPF64[i5 >> 3] + d2 * +HEAPF64[i6 >> 3]);
 i8 = i3 + 64 | 0;
 d9 = +HEAPF64[i8 >> 3];
 i10 = i3 + 72 | 0;
 i11 = i3 + 80 | 0;
 d2 = +HEAPF64[i3 + 88 >> 3] + (d17 * d9 + d16 * +HEAPF64[i10 >> 3] + d2 * +HEAPF64[i11 >> 3]);
 if (d2 == 0.0) i1 = -1; else {
  d17 = d2 * d2;
  HEAPF64[i12 >> 3] = (d14 * d2 - d4 * d9) / d17;
  HEAPF64[i12 + 8 >> 3] = (d2 * +HEAPF64[i15 >> 3] - d4 * +HEAPF64[i10 >> 3]) / d17;
  HEAPF64[i12 + 16 >> 3] = (d2 * +HEAPF64[i13 >> 3] - d4 * +HEAPF64[i11 >> 3]) / d17;
  HEAPF64[i12 + 24 >> 3] = (d2 * +HEAPF64[i1 >> 3] - d7 * +HEAPF64[i8 >> 3]) / d17;
  HEAPF64[i12 + 32 >> 3] = (d2 * +HEAPF64[i5 >> 3] - d7 * +HEAPF64[i10 >> 3]) / d17;
  HEAPF64[i12 + 40 >> 3] = (d2 * +HEAPF64[i6 >> 3] - d7 * +HEAPF64[i11 >> 3]) / d17;
  i1 = 0;
 }
 return i1 | 0;
}

function _getMultiEachMarkerInfo(i1, i3, i4) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i5;
 HEAP32[i2 >> 2] = i1;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0) {
  i2 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0;
  i1 = HEAP32[i2 + 328 >> 2] | 0;
  if ((i3 | 0) < 0 ? 1 : (HEAP32[i2 + 332 >> 2] | 0) - i1 >> 3 >>> 0 <= i3 >>> 0) {
   i1 = HEAP32[3414] | 0;
   break;
  }
  i1 = HEAP32[i1 + (i3 << 3) + 4 >> 2] | 0;
  if ((i4 | 0) < 0 ? 1 : (HEAP32[i1 + 4 >> 2] | 0) <= (i4 | 0)) {
   i1 = HEAP32[3415] | 0;
   break;
  } else {
   i1 = HEAP32[i1 >> 2] | 0;
   _matrixCopy(i1 + (i4 * 320 | 0) + 16 | 0, 52416);
   _emscripten_asm_const_iiiid(1, HEAP32[i1 + (i4 * 320 | 0) + 304 >> 2] | 0, HEAP32[i1 + (i4 * 320 | 0) >> 2] | 0, HEAP32[i1 + (i4 * 320 | 0) + 4 >> 2] | 0, +(+HEAPF64[i1 + (i4 * 320 | 0) + 8 >> 3])) | 0;
   i1 = 0;
   break;
  }
 } else i1 = HEAP32[3413] | 0; while (0);
 STACKTOP = i5;
 return i1 | 0;
}

function __ZN6vision25CheckHomographyHeuristicsEPfii(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, d13 = 0.0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i5 = i12 + 88 | 0;
 i6 = i12 + 80 | 0;
 i7 = i12 + 72 | 0;
 i8 = i12 + 64 | 0;
 i9 = i12;
 i10 = i12 + 56 | 0;
 i11 = i12 + 48 | 0;
 i3 = i12 + 40 | 0;
 if (__ZN6vision16MatrixInverse3x3IfEEbPT_PKS1_S1_(i9, i1, 9.999999747378752e-06) | 0) {
  d13 = +(i2 | 0);
  HEAPF32[i10 >> 2] = d13;
  HEAPF32[i10 + 4 >> 2] = 0.0;
  HEAPF32[i11 >> 2] = d13;
  d13 = +(i4 | 0);
  HEAPF32[i11 + 4 >> 2] = d13;
  HEAPF32[i3 >> 2] = 0.0;
  HEAPF32[i3 + 4 >> 2] = d13;
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_(i5, i9, 57044);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_(i6, i9, i10);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_(i7, i9, i11);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_(i8, i9, i3);
  d13 = +(Math_imul(i4, i2) | 0) * .0001;
  if (+__ZN6vision20SmallestTriangleAreaIfEET_PKS1_S3_S3_S3_(i5, i6, i7, i8) < d13) i1 = 0; else i1 = __ZN6vision19QuadrilateralConvexIfEEbPKT_S3_S3_S3_(i5, i6, i7, i8) | 0;
 } else i1 = 0;
 STACKTOP = i12;
 return i1 | 0;
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = i2 + 4 | 0;
 i6 = i3 + 4 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  i11 = HEAP32[i6 >> 2] | 0;
  i8 = i11 + -16 | 0;
  i7 = i1 + -16 | 0;
  HEAP32[i8 >> 2] = 0;
  i9 = i11 + -12 | 0;
  HEAP32[i9 >> 2] = 0;
  i10 = i11 + -8 | 0;
  HEAP32[i10 >> 2] = 0;
  HEAP32[i11 + -4 >> 2] = HEAP32[i1 + -4 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i7 >> 2];
  i8 = i1 + -12 | 0;
  HEAP32[i9 >> 2] = HEAP32[i8 >> 2];
  i9 = i1 + -8 | 0;
  HEAP32[i10 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i9 >> 2] = 0;
  HEAP32[i8 >> 2] = 0;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -16;
  i1 = i7;
 }
 i9 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i6 >> 2] = i9;
 i9 = i3 + 8 | 0;
 i11 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i9 >> 2] = i11;
 i9 = i2 + 8 | 0;
 i11 = i3 + 12 | 0;
 i10 = HEAP32[i9 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i11 >> 2] = i10;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc(i6, i7, i1, i2, i9, i10, i11, i3) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i8 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i12 = i13;
 if ((-18 - i7 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i6);
 if ((HEAP8[i6 + 11 >> 0] | 0) < 0) i8 = HEAP32[i6 >> 2] | 0; else i8 = i6;
 if (i7 >>> 0 < 2147483623) {
  i4 = i1 + i7 | 0;
  i5 = i7 << 1;
  i4 = i4 >>> 0 < i5 >>> 0 ? i5 : i4;
  i4 = i4 >>> 0 < 11 ? 11 : i4 + 16 & -16;
 } else i4 = -17;
 i5 = __Znwm(i4) | 0;
 if (i9 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i5, i8, i9) | 0;
 if (i11 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i5 + i9 | 0, i3, i11) | 0;
 i1 = i2 - i10 | 0;
 i2 = i1 - i9 | 0;
 if (i2 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i5 + i9 + i11 | 0, i8 + i9 + i10 | 0, i2) | 0;
 if ((i7 | 0) != 10) __ZdlPv(i8);
 HEAP32[i6 >> 2] = i5;
 HEAP32[i6 + 8 >> 2] = i4 | -2147483648;
 i11 = i1 + i11 | 0;
 HEAP32[i6 + 4 >> 2] = i11;
 HEAP8[i12 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i5 + i11 | 0, i12);
 STACKTOP = i13;
 return;
}

function __ZNSt3__29__sift_upIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeE(i4, i9, i2, i5) {
 i4 = i4 | 0;
 i9 = i9 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 var i1 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i8;
 if ((i5 | 0) > 1 ? (i3 = (i5 + -2 | 0) / 2 | 0, i10 = HEAP32[i4 >> 2] | 0, i6 = i10 + (i3 << 3) | 0, i1 = (HEAP32[i9 >> 2] | 0) + -8 | 0, HEAP32[i9 >> 2] = i1, __ZNK6vision17PriorityQueueItemILi96EEltERKS1_(i6, i1) | 0) : 0) {
  i4 = i1;
  i5 = HEAP32[i4 + 4 >> 2] | 0;
  i2 = i7;
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i2 + 4 >> 2] = i5;
  i2 = i6;
  while (1) {
   i4 = i2;
   i5 = HEAP32[i4 + 4 >> 2] | 0;
   i6 = i1;
   HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i6 + 4 >> 2] = i5;
   HEAP32[i9 >> 2] = i2;
   if (!i3) break;
   i3 = (i3 + -1 | 0) / 2 | 0;
   i1 = i10 + (i3 << 3) | 0;
   if (!(__ZNK6vision17PriorityQueueItemILi96EEltERKS1_(i1, i7) | 0)) break; else {
    i6 = i2;
    i2 = i1;
    i1 = i6;
   }
  }
  i6 = i7;
  i9 = HEAP32[i6 + 4 >> 2] | 0;
  i10 = i2;
  HEAP32[i10 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i10 + 4 >> 2] = i9;
  __ZN6vision17PriorityQueueItemILi96EED2Ev(i7);
 }
 STACKTOP = i8;
 return;
}

function __ZN6vision27OrthogonalizePivot8x9Basis0IfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i6;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i2);
 HEAPF32[i4 >> 2] = d7;
 i5 = i2 + 36 | 0;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i5);
 HEAPF32[i4 + 4 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i2 + 72 | 0);
 HEAPF32[i4 + 8 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i2 + 108 | 0);
 HEAPF32[i4 + 12 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i2 + 144 | 0);
 HEAPF32[i4 + 16 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i2 + 180 | 0);
 HEAPF32[i4 + 20 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i2 + 216 | 0);
 HEAPF32[i4 + 24 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i2 + 252 | 0);
 HEAPF32[i4 + 28 >> 2] = d7;
 i3 = __ZN6vision9MaxIndex8IfEEiPKT_(i4) | 0;
 i4 = i4 + (i3 << 2) | 0;
 if (+HEAPF32[i4 >> 2] == 0.0) i1 = 0; else {
  __ZN6vision5Swap9IfEEvPT_S2_(i2, i2 + (i3 * 9 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_(i1, i2, 1.0 / +Math_sqrt(+(+HEAPF32[i4 >> 2])));
  __ZN6vision10CopyVectorIfEEvPT_PKS1_m(i1 + 36 | 0, i5, 63);
  i1 = 1;
 }
 STACKTOP = i6;
 return i1 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE6rehashEm(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 if ((i1 | 0) != 1) {
  if (i1 + -1 & i1) i1 = __ZNSt3__212__next_primeEm(i1) | 0;
 } else i1 = 2;
 i3 = HEAP32[i4 + 4 >> 2] | 0;
 if (i1 >>> 0 <= i3 >>> 0) {
  if (i1 >>> 0 < i3 >>> 0) {
   i2 = ~~+Math_ceil(+(+((HEAP32[i4 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i4 + 16 >> 2])) >>> 0;
   if (i3 >>> 0 > 2 & (i3 + -1 & i3 | 0) == 0) {
    i5 = 1 << 32 - (Math_clz32(i2 + -1 | 0) | 0);
    i2 = i2 >>> 0 < 2 ? i2 : i5;
   } else i2 = __ZNSt3__212__next_primeEm(i2) | 0;
   i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
   if (i1 >>> 0 < i3 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE8__rehashEm(i4, i1);
  }
 } else __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE8__rehashEm(i4, i1);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE6rehashEm(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 if ((i1 | 0) != 1) {
  if (i1 + -1 & i1) i1 = __ZNSt3__212__next_primeEm(i1) | 0;
 } else i1 = 2;
 i3 = HEAP32[i4 + 4 >> 2] | 0;
 if (i1 >>> 0 <= i3 >>> 0) {
  if (i1 >>> 0 < i3 >>> 0) {
   i2 = ~~+Math_ceil(+(+((HEAP32[i4 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i4 + 16 >> 2])) >>> 0;
   if (i3 >>> 0 > 2 & (i3 + -1 & i3 | 0) == 0) {
    i5 = 1 << 32 - (Math_clz32(i2 + -1 | 0) | 0);
    i2 = i2 >>> 0 < 2 ? i2 : i5;
   } else i2 = __ZNSt3__212__next_primeEm(i2) | 0;
   i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
   if (i1 >>> 0 < i3 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE8__rehashEm(i4, i1);
  }
 } else __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE8__rehashEm(i4, i1);
 return;
}

function __ZN6vision22SolveHomography4PointsIfEEbPT_PKS1_S4_S4_S4_S4_S4_S4_S4_(i1, i2, i13, i16, i17, i18, i19, i20, i21) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i13 = i13 | 0;
 i16 = i16 | 0;
 i17 = i17 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0, i22 = 0, i23 = 0;
 i23 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 i22 = i23;
 i3 = i23 + 124 | 0;
 i4 = i23 + 120 | 0;
 i5 = i23 + 112 | 0;
 i6 = i23 + 104 | 0;
 i7 = i23 + 96 | 0;
 i8 = i23 + 88 | 0;
 i9 = i23 + 80 | 0;
 i10 = i23 + 72 | 0;
 i11 = i23 + 64 | 0;
 i12 = i23 + 56 | 0;
 i14 = i23 + 48 | 0;
 i15 = i23 + 40 | 0;
 if ((__ZN6vision18Condition4Points2dIfEEbPT_S2_S2_S2_RS1_S2_PKS1_S5_S5_S5_(i7, i8, i9, i10, i3, i5, i2, i13, i16, i17) | 0 ? __ZN6vision18Condition4Points2dIfEEbPT_S2_S2_S2_RS1_S2_PKS1_S5_S5_S5_(i11, i12, i14, i15, i4, i6, i18, i19, i20, i21) | 0 : 0) ? __ZN6vision34SolveHomography4PointsInhomogenousIfEEbPT_PKS1_S4_S4_S4_S4_S4_S4_S4_(i22, i7, i8, i9, i10, i11, i12, i14, i15) | 0 : 0) {
  __ZN6vision21DenormalizeHomographyIfEEvPT_PKS1_S1_S4_S1_S4_(i1, i22, +HEAPF32[i3 >> 2], i5, +HEAPF32[i4 >> 2], i6);
  i1 = 1;
 } else i1 = 0;
 STACKTOP = i23;
 return i1 | 0;
}

function __ZN6vision21DenormalizeHomographyIfEEvPT_PKS1_S1_S4_S1_S4_(i1, i2, d3, i4, d5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 i6 = i6 | 0;
 var i7 = 0, d8 = 0.0, i9 = 0, i10 = 0, i11 = 0, d12 = 0.0, d13 = 0.0, d14 = 0.0, i15 = 0, d16 = 0.0, d17 = 0.0;
 i11 = i2 + 24 | 0;
 d14 = +HEAPF32[i11 >> 2];
 d16 = +HEAPF32[i6 >> 2];
 i10 = i2 + 28 | 0;
 d13 = +HEAPF32[i10 >> 2];
 d17 = d14 * d16 + +HEAPF32[i2 >> 2] / d5;
 d16 = d16 * d13 + +HEAPF32[i2 + 4 >> 2] / d5;
 i15 = i6 + 4 | 0;
 d12 = +HEAPF32[i15 >> 2];
 d14 = d14 * d12 + +HEAPF32[i2 + 12 >> 2] / d5;
 d12 = d13 * d12 + +HEAPF32[i2 + 16 >> 2] / d5;
 d13 = +HEAPF32[i4 >> 2] * d3;
 i7 = i4 + 4 | 0;
 d8 = +HEAPF32[i7 >> 2] * d3;
 HEAPF32[i1 >> 2] = d17 * d3;
 HEAPF32[i1 + 4 >> 2] = d16 * d3;
 i9 = i2 + 32 | 0;
 HEAPF32[i1 + 8 >> 2] = +HEAPF32[i9 >> 2] * +HEAPF32[i6 >> 2] + +HEAPF32[i2 + 8 >> 2] / d5 - d17 * d13 - d16 * d8;
 HEAPF32[i1 + 12 >> 2] = d14 * d3;
 HEAPF32[i1 + 16 >> 2] = d12 * d3;
 HEAPF32[i1 + 20 >> 2] = +HEAPF32[i9 >> 2] * +HEAPF32[i15 >> 2] + +HEAPF32[i2 + 20 >> 2] / d5 - d14 * d13 - d12 * d8;
 d8 = +HEAPF32[i11 >> 2] * d3;
 HEAPF32[i1 + 24 >> 2] = d8;
 d5 = +HEAPF32[i10 >> 2] * d3;
 HEAPF32[i1 + 28 >> 2] = d5;
 HEAPF32[i1 + 32 >> 2] = +HEAPF32[i9 >> 2] - d8 * +HEAPF32[i4 >> 2] - d5 * +HEAPF32[i7 >> 2];
 return;
}

function _quantize3_ord_dither(i1, i15, i18, i19) {
 i1 = i1 | 0;
 i15 = i15 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0, i20 = 0;
 i10 = HEAP32[i1 + 460 >> 2] | 0;
 i17 = HEAP32[i10 + 24 >> 2] | 0;
 i20 = HEAP32[i17 >> 2] | 0;
 i16 = HEAP32[i17 + 4 >> 2] | 0;
 i17 = HEAP32[i17 + 8 >> 2] | 0;
 i6 = HEAP32[i1 + 112 >> 2] | 0;
 i7 = i10 + 48 | 0;
 i8 = i10 + 52 | 0;
 i9 = i10 + 56 | 0;
 i10 = i10 + 60 | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i19 | 0)) break;
  i11 = HEAP32[i7 >> 2] | 0;
  i12 = HEAP32[i8 >> 2] | 0;
  i13 = HEAP32[i9 >> 2] | 0;
  i14 = HEAP32[i10 >> 2] | 0;
  i1 = HEAP32[i15 + (i3 << 2) >> 2] | 0;
  i2 = i6;
  i4 = 0;
  i5 = HEAP32[i18 + (i3 << 2) >> 2] | 0;
  while (1) {
   if (!i2) break;
   HEAP8[i5 >> 0] = (HEAPU8[i16 + ((HEAP32[i13 + (i11 << 6) + (i4 << 2) >> 2] | 0) + (HEAPU8[i1 + 1 >> 0] | 0)) >> 0] | 0) + (HEAPU8[i20 + ((HEAP32[i12 + (i11 << 6) + (i4 << 2) >> 2] | 0) + (HEAPU8[i1 >> 0] | 0)) >> 0] | 0) + (HEAPU8[i17 + ((HEAP32[i14 + (i11 << 6) + (i4 << 2) >> 2] | 0) + (HEAPU8[i1 + 2 >> 0] | 0)) >> 0] | 0);
   i1 = i1 + 3 | 0;
   i2 = i2 + -1 | 0;
   i4 = i4 + 1 & 15;
   i5 = i5 + 1 | 0;
  }
  HEAP32[i7 >> 2] = i11 + 1 & 15;
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i10, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i11 + 4 | 0;
 i9 = i11;
 i3 = i1 + 8 | 0;
 i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3) | 0;
 i1 = HEAP8[i3 + 8 + 3 >> 0] | 0;
 if (i1 << 24 >> 24 < 0) i2 = HEAP32[i3 + 4 >> 2] | 0; else i2 = i1 & 255;
 i1 = HEAP8[i3 + 20 + 3 >> 0] | 0;
 if (i1 << 24 >> 24 < 0) i1 = HEAP32[i3 + 16 >> 2] | 0; else i1 = i1 & 255;
 do if ((i2 | 0) != (0 - i1 | 0)) {
  HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
  i1 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i5, i4, i3, i3 + 24 | 0, i8, i7, 0) | 0) - i3 | 0;
  i2 = HEAP32[i10 >> 2] | 0;
  if ((i2 | 0) == 12 & (i1 | 0) == 0) {
   HEAP32[i10 >> 2] = 0;
   break;
  }
  if ((i2 | 0) < 12 & (i1 | 0) == 12) HEAP32[i10 >> 2] = i2 + 12;
 } else HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 4; while (0);
 STACKTOP = i11;
 return;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = i2 + 4 | 0;
 i6 = i3 + 4 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  i11 = HEAP32[i6 >> 2] | 0;
  i8 = i11 + -16 | 0;
  i7 = i1 + -16 | 0;
  HEAP32[i8 >> 2] = 0;
  i9 = i11 + -12 | 0;
  HEAP32[i9 >> 2] = 0;
  i10 = i11 + -8 | 0;
  HEAP32[i10 >> 2] = 0;
  HEAP32[i11 + -4 >> 2] = HEAP32[i1 + -4 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i7 >> 2];
  i8 = i1 + -12 | 0;
  HEAP32[i9 >> 2] = HEAP32[i8 >> 2];
  i9 = i1 + -8 | 0;
  HEAP32[i10 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i9 >> 2] = 0;
  HEAP32[i8 >> 2] = 0;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -16;
  i1 = i7;
 }
 i9 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i6 >> 2] = i9;
 i9 = i3 + 8 | 0;
 i11 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i9 >> 2] = i11;
 i9 = i2 + 8 | 0;
 i11 = i3 + 12 | 0;
 i10 = HEAP32[i9 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i11 >> 2] = i10;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 return;
}

function __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i7, i1, i8, i9) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0;
 i5 = i7 + 11 | 0;
 i3 = HEAP8[i5 >> 0] | 0;
 i6 = i7 + 4 | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 i4 = i3 & 255;
 do if ((i3 << 24 >> 24 < 0 ? i2 : i4) | 0) {
  if ((i1 | 0) != (i8 | 0)) {
   i2 = i8;
   i3 = i1;
   while (1) {
    i2 = i2 + -4 | 0;
    if (i3 >>> 0 >= i2 >>> 0) break;
    i4 = HEAP32[i3 >> 2] | 0;
    HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
    HEAP32[i2 >> 2] = i4;
    i3 = i3 + 4 | 0;
   }
   i3 = HEAP8[i5 >> 0] | 0;
   i4 = i3 & 255;
   i2 = HEAP32[i6 >> 2] | 0;
  }
  i5 = i3 << 24 >> 24 < 0;
  i7 = i5 ? HEAP32[i7 >> 2] | 0 : i7;
  i6 = i8 + -4 | 0;
  i5 = i7 + (i5 ? i2 : i4) | 0;
  i2 = i7;
  while (1) {
   i3 = HEAP8[i2 >> 0] | 0;
   i4 = i3 << 24 >> 24 > 0 & i3 << 24 >> 24 != 127;
   if (i1 >>> 0 >= i6 >>> 0) break;
   if (i4 ? (HEAP32[i1 >> 2] | 0) != (i3 << 24 >> 24 | 0) : 0) {
    i10 = 11;
    break;
   }
   i1 = i1 + 4 | 0;
   i2 = (i5 - i2 | 0) > 1 ? i2 + 1 | 0 : i2;
  }
  if ((i10 | 0) == 11) {
   HEAP32[i9 >> 2] = 4;
   break;
  }
  if (i4 ? ((HEAP32[i6 >> 2] | 0) + -1 | 0) >>> 0 >= i3 << 24 >> 24 >>> 0 : 0) HEAP32[i9 >> 2] = 4;
 } while (0);
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i10, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i11 + 4 | 0;
 i9 = i11;
 i3 = i1 + 8 | 0;
 i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3) | 0;
 i1 = HEAP8[i3 + 11 >> 0] | 0;
 if (i1 << 24 >> 24 < 0) i2 = HEAP32[i3 + 4 >> 2] | 0; else i2 = i1 & 255;
 i1 = HEAP8[i3 + 12 + 11 >> 0] | 0;
 if (i1 << 24 >> 24 < 0) i1 = HEAP32[i3 + 16 >> 2] | 0; else i1 = i1 & 255;
 do if ((i2 | 0) != (0 - i1 | 0)) {
  HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
  i1 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i5, i4, i3, i3 + 24 | 0, i8, i7, 0) | 0) - i3 | 0;
  i2 = HEAP32[i10 >> 2] | 0;
  if ((i2 | 0) == 12 & (i1 | 0) == 0) {
   HEAP32[i10 >> 2] = 0;
   break;
  }
  if ((i2 | 0) < 12 & (i1 | 0) == 12) HEAP32[i10 >> 2] = i2 + 12;
 } else HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 4; while (0);
 STACKTOP = i11;
 return;
}

function __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji(i1, i4, i5, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i8;
 if ((i1 | 0) == (i4 | 0)) {
  HEAP32[i5 >> 2] = 4;
  i1 = 0;
 } else {
  i7 = ___errno_location() | 0;
  i7 = HEAP32[i7 >> 2] | 0;
  i3 = ___errno_location() | 0;
  HEAP32[i3 >> 2] = 0;
  i1 = _strtoll_l(i1, i6, i2, __ZNSt3__26__clocEv() | 0) | 0;
  i2 = getTempRet0() | 0;
  i3 = ___errno_location() | 0;
  i3 = HEAP32[i3 >> 2] | 0;
  if (!i3) {
   i9 = ___errno_location() | 0;
   HEAP32[i9 >> 2] = i7;
  }
  L7 : do if ((HEAP32[i6 >> 2] | 0) == (i4 | 0)) {
   do if ((i3 | 0) == 34) {
    HEAP32[i5 >> 2] = 4;
    if ((i2 | 0) > 0 | (i2 | 0) == 0 & i1 >>> 0 > 0) {
     i1 = 2147483647;
     break L7;
    }
   } else {
    if ((i2 | 0) < -1 | (i2 | 0) == -1 & i1 >>> 0 < 2147483648) {
     HEAP32[i5 >> 2] = 4;
     break;
    }
    if ((i2 | 0) > 0 | (i2 | 0) == 0 & i1 >>> 0 > 2147483647) {
     HEAP32[i5 >> 2] = 4;
     i1 = 2147483647;
     break L7;
    } else break L7;
   } while (0);
   i1 = -2147483648;
  } else {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
  } while (0);
 }
 STACKTOP = i8;
 return i1 | 0;
}

function _jpeg_resync_to_restart(i6, i1) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i9 = i6 + 416 | 0;
 i5 = HEAP32[i9 >> 2] | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 HEAP32[i7 + 20 >> 2] = 121;
 HEAP32[i7 + 24 >> 2] = i5;
 HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] = i1;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 4 >> 2] & 63](i6, -1);
 i7 = i1 + 1 & 7 | 208;
 i8 = i1 + 2 & 7 | 208;
 i10 = i1 + 7 & 7 | 208;
 i2 = i1 + 6 & 7 | 208;
 i1 = i5;
 L1 : while (1) {
  i3 = (i1 | 0) < 192;
  i4 = (i1 & -8 | 0) != 208 | (i1 | 0) == (i7 | 0) | (i1 | 0) == (i8 | 0);
  i5 = (i1 | 0) == (i10 | 0) | (i1 | 0) == (i2 | 0) ? 2 : 1;
  L3 : while (1) {
   i12 = i3 ? 2 : i4 ? 3 : i5;
   i13 = HEAP32[i6 >> 2] | 0;
   HEAP32[i13 + 20 >> 2] = 97;
   HEAP32[i13 + 24 >> 2] = i1;
   HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] = i12;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 4 >> 2] & 63](i6, 4);
   switch (i12 & 3) {
   case 3:
    {
     i1 = 1;
     break L1;
    }
   case 1:
    {
     i11 = 4;
     break L1;
    }
   case 2:
    break L3;
   default:
    {}
   }
  }
  if (!(_next_marker(i6) | 0)) {
   i1 = 0;
   break;
  }
  i1 = HEAP32[i9 >> 2] | 0;
 }
 if ((i11 | 0) == 4) {
  HEAP32[i9 >> 2] = 0;
  i1 = 1;
 }
 return i1 | 0;
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = ((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 3) + 1 | 0;
 i6 = __ZNKSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] | 0) - i8 | 0;
  i9 = i10 >> 2;
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEEC2EmmS5_(i3, i10 >> 3 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, (HEAP32[i4 >> 2] | 0) - i8 >> 3, i1 + 8 | 0);
  i6 = i3 + 8 | 0;
  i4 = HEAP32[i2 + 4 >> 2] | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i5 + 4 >> 2] = i4;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 8;
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i1, i3);
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = ((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 3) + 1 | 0;
 i6 = __ZNKSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] | 0) - i8 | 0;
  i9 = i10 >> 2;
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEEC2EmmS5_(i3, i10 >> 3 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, (HEAP32[i4 >> 2] | 0) - i8 >> 3, i1 + 8 | 0);
  i6 = i3 + 8 | 0;
  i4 = HEAP32[i2 + 4 >> 2] | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i5 + 4 >> 2] = i4;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 8;
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i1, i3);
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function __ZNK6vision5Image3getIfEEPKT_m(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i4;
 if ((HEAP32[i1 + 8 >> 2] | 0) >>> 0 > i2 >>> 0) {
  i3 = (HEAP32[i1 + 24 >> 2] | 0) + (Math_imul(HEAP32[i1 + 12 >> 2] | 0, i2) | 0) | 0;
  STACKTOP = i4;
  return i3 | 0;
 } else {
  i4 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 21711) | 0, 21748) | 0, 33655) | 0, 124) | 0, 33662) | 0, 21854) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
  i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i2, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i2) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 return 0;
}

function __ZN6vision5Image3getIfEEPT_m(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i4;
 if ((HEAP32[i1 + 8 >> 2] | 0) >>> 0 > i2 >>> 0) {
  i3 = (HEAP32[i1 + 24 >> 2] | 0) + (Math_imul(HEAP32[i1 + 12 >> 2] | 0, i2) | 0) | 0;
  STACKTOP = i4;
  return i3 | 0;
 } else {
  i4 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 21711) | 0, 21748) | 0, 33655) | 0, 119) | 0, 33662) | 0, 21854) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58792) | 0;
  i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i2, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i2) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 return 0;
}

function _arLogv(i1, i6, i8, i9) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i10 + 16 | 0;
 i1 = i10;
 if ((!((i8 | 0) == 0 | (HEAP32[3368] | 0) > (i6 | 0)) ? HEAP8[i8 >> 0] | 0 : 0) ? (HEAP32[i1 >> 2] = HEAP32[i9 >> 2], i7 = _vsnprintf(0, 0, i8, i1) | 0, i7 | 0) : 0) {
  if (i6 >>> 0 < 4) i1 = (_strlen(HEAP32[1744 + (i6 << 2) >> 2] | 0) | 0) + 3 | 0; else i1 = 0;
  i2 = i1 + i7 | 0;
  i3 = i2 + 1 | 0;
  i4 = _malloc(i3) | 0;
  if (i1 | 0) {
   HEAP32[i5 >> 2] = HEAP32[1744 + (i6 << 2) >> 2];
   _snprintf(i4, i1 + 1 | 0, 19365, i5) | 0;
  }
  _vsnprintf(i4 + i1 | 0, i7 + 1 | 0, i8, i9) | 0;
  do if (0) {
   if (0 ? (i11 = HEAP32[14256] | 0, i11 >>> 0 < 0) : 0) {
    i1 = 0 + i11 | 0;
    if (i2 >>> 0 > (-4 - i11 + 0 | 0) >>> 0) {
     HEAP8[i1 >> 0] = 46;
     HEAP8[i1 + 1 >> 0] = 46;
     HEAP8[i1 + 2 >> 0] = 46;
     HEAP8[i1 + 3 >> 0] = 0;
     HEAP32[14256] = 0;
     break;
    } else {
     _strncpy(i1, i4, i3) | 0;
     HEAP32[14256] = (HEAP32[14256] | 0) + i2;
     break;
    }
   }
  } else _fputs(i4, HEAP32[3454] | 0) | 0; while (0);
  _free(i4);
 }
 STACKTOP = i10;
 return;
}

function __ZNSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = ((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 3) + 1 | 0;
 i6 = __ZNKSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] | 0) - i8 | 0;
  i9 = i10 >> 2;
  __ZNSt3__214__split_bufferI12multi_markerRNS_9allocatorIS1_EEEC2EmmS4_(i3, i10 >> 3 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, (HEAP32[i4 >> 2] | 0) - i8 >> 3, i1 + 8 | 0);
  i6 = i3 + 8 | 0;
  i4 = HEAP32[i2 + 4 >> 2] | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i5 + 4 >> 2] = i4;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 8;
  __ZNSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE(i1, i3);
  __ZNSt3__214__split_bufferI12multi_markerRNS_9allocatorIS1_EEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function _x_by_xt(i11, i1) {
 i11 = i11 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, d10 = 0.0, i12 = 0, i13 = 0, d14 = 0.0;
 i12 = HEAP32[i11 + 4 >> 2] | 0;
 i13 = HEAP32[i11 + 8 >> 2] | 0;
 L1 : do if ((HEAP32[i1 + 4 >> 2] | 0) == (i12 | 0) ? (HEAP32[i1 + 8 >> 2] | 0) == (i12 | 0) : 0) {
  i8 = HEAP32[i1 >> 2] | 0;
  i3 = 0;
  i5 = i8;
  while (1) {
   if ((i3 | 0) >= (i12 | 0)) {
    i1 = 0;
    break L1;
   }
   i9 = Math_imul(i3, i13) | 0;
   i2 = 0;
   i7 = i5;
   while (1) {
    if ((i2 | 0) == (i12 | 0)) break;
    L10 : do if (i2 >>> 0 < i3 >>> 0) {
     i6 = i8 + ((Math_imul(i2, i12) | 0) + i3 << 3) | 0;
     HEAPF64[i7 >> 3] = +HEAPF64[i6 >> 3];
    } else {
     i4 = HEAP32[i11 >> 2] | 0;
     i6 = i4 + ((Math_imul(i2, i13) | 0) << 3) | 0;
     HEAPF64[i7 >> 3] = 0.0;
     i1 = 0;
     i4 = i4 + (i9 << 3) | 0;
     d10 = 0.0;
     while (1) {
      if ((i1 | 0) >= (i13 | 0)) break L10;
      d14 = d10 + +HEAPF64[i4 >> 3] * +HEAPF64[i6 >> 3];
      HEAPF64[i7 >> 3] = d14;
      i1 = i1 + 1 | 0;
      i4 = i4 + 8 | 0;
      i6 = i6 + 8 | 0;
      d10 = d14;
     }
    } while (0);
    i2 = i2 + 1 | 0;
    i7 = i7 + 8 | 0;
   }
   i3 = i3 + 1 | 0;
   i5 = i5 + (i12 << 3) | 0;
  }
 } else i1 = -1; while (0);
 return i1 | 0;
}

function _output_pass_setup(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i6 = i5 + 20 | 0;
 i4 = i5 + 420 | 0;
 if ((HEAP32[i6 >> 2] | 0) == 204) i3 = i5 + 140 | 0; else {
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i4 >> 2] >> 2] & 255](i5);
  i3 = i5 + 140 | 0;
  HEAP32[i3 >> 2] = 0;
  HEAP32[i6 >> 2] = 204;
 }
 i8 = i5 + 116 | 0;
 i9 = i5 + 8 | 0;
 i10 = i5 + 424 | 0;
 L5 : while (1) {
  if (!(HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] | 0)) {
   i11 = 12;
   break;
  }
  i7 = HEAP32[i3 >> 2] | 0;
  while (1) {
   i1 = HEAP32[i8 >> 2] | 0;
   if (i7 >>> 0 >= i1 >>> 0) break;
   i2 = HEAP32[i9 >> 2] | 0;
   if (!i2) i1 = i7; else {
    HEAP32[i2 + 4 >> 2] = i7;
    HEAP32[i2 + 8 >> 2] = i1;
    FUNCTION_TABLE_vi[HEAP32[i2 >> 2] & 255](i5);
    i1 = HEAP32[i3 >> 2] | 0;
   }
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 4 >> 2] & 31](i5, 0, i3, 0);
   i7 = HEAP32[i3 >> 2] | 0;
   if ((i7 | 0) == (i1 | 0)) {
    i1 = 0;
    break L5;
   }
  }
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] & 255](i5);
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i4 >> 2] >> 2] & 255](i5);
  HEAP32[i3 >> 2] = 0;
 }
 if ((i11 | 0) == 12) {
  HEAP32[i6 >> 2] = (HEAP32[i5 + 68 >> 2] | 0) == 0 ? 205 : 206;
  i1 = 1;
 }
 return i1 | 0;
}

function _arGetTransMatRobust(i2, i3, i6, i7, i8, i9) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i10 = i13 + 20 | 0;
 i11 = i13;
 i12 = _malloc(i8 << 4) | 0;
 HEAP32[i10 >> 2] = i12;
 if (!i12) {
  _arLog(0, 3, 20581, i13 + 8 | 0);
  _exit(1);
 }
 i4 = _malloc(i8 * 24 | 0) | 0;
 i5 = i10 + 4 | 0;
 HEAP32[i5 >> 2] = i4;
 if (!i4) {
  _arLog(0, 3, 20581, i13 + 16 | 0);
  _exit(1);
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (i8 | 0)) break;
  HEAPF64[i12 + (i1 << 4) >> 3] = +HEAPF64[i6 + (i1 << 4) >> 3];
  HEAPF64[i12 + (i1 << 4) + 8 >> 3] = +HEAPF64[i6 + (i1 << 4) + 8 >> 3];
  HEAPF64[i4 + (i1 * 24 | 0) >> 3] = +HEAPF64[i7 + (i1 * 24 | 0) >> 3];
  HEAPF64[i4 + (i1 * 24 | 0) + 8 >> 3] = +HEAPF64[i7 + (i1 * 24 | 0) + 8 >> 3];
  HEAPF64[i4 + (i1 * 24 | 0) + 16 >> 3] = +HEAPF64[i7 + (i1 * 24 | 0) + 16 >> 3];
  i1 = i1 + 1 | 0;
 }
 HEAP32[i10 + 8 >> 2] = i8;
 if ((_icpPointRobust(HEAP32[i2 >> 2] | 0, i10, i3, i9, i11) | 0) < 0) HEAPF64[i11 >> 3] = 1.0e8;
 _free(HEAP32[i10 >> 2] | 0);
 _free(HEAP32[i5 >> 2] | 0);
 STACKTOP = i13;
 return +(+HEAPF64[i11 >> 3]);
}

function __ZNSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = ((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 3) + 1 | 0;
 i6 = __ZNKSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] | 0) - i8 | 0;
  i9 = i10 >> 2;
  __ZNSt3__214__split_bufferINS_4pairIfmEERNS_9allocatorIS2_EEEC2EmmS5_(i3, i10 >> 3 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, (HEAP32[i4 >> 2] | 0) - i8 >> 3, i1 + 8 | 0);
  i6 = i3 + 8 | 0;
  i4 = HEAP32[i2 + 4 >> 2] | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i5 + 4 >> 2] = i4;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 8;
  __ZNSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i1, i3);
  __ZNSt3__214__split_bufferINS_4pairIfmEERNS_9allocatorIS2_EEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function __ZN6vision5Timer4stopEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i3;
 if (!(+HEAPF64[i1 >> 3] >= 0.0)) {
  i3 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(58088, 33507) | 0, 33546) | 0, 33655) | 0, 67) | 0, 33662) | 0, 33665) | 0;
  __ZNKSt3__28ios_base6getlocEv(i2, i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58792) | 0;
  i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i1, 10) | 0;
  __ZNSt3__26localeD2Ev(i2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i1) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
  _abort();
 } else {
  _gettimeofday(i2 | 0, 0) | 0;
  HEAPF64[i1 + 8 >> 3] = +(HEAP32[i2 + 4 >> 2] | 0) * 1.0e-06 + +(HEAP32[i2 >> 2] | 0);
  STACKTOP = i3;
  return;
 }
}

function _consume_markers(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i4 = HEAP32[i5 + 436 >> 2] | 0;
 i2 = i4 + 20 | 0;
 L1 : do if (!(HEAP32[i2 >> 2] | 0)) {
  i3 = i5 + 440 | 0;
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 4 >> 2] & 127](i5) | 0;
  switch (i1 | 0) {
  case 1:
   {
    i1 = i4 + 24 | 0;
    if (HEAP32[i1 >> 2] | 0) {
     _initial_setup_35(i5);
     HEAP32[i1 >> 2] = 0;
     i1 = 1;
     break L1;
    }
    if (!(HEAP32[i4 + 16 >> 2] | 0)) {
     i4 = HEAP32[i5 >> 2] | 0;
     HEAP32[i4 + 20 >> 2] = 35;
     FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i5);
    }
    _start_input_pass_33(i5);
    i1 = 1;
    break L1;
   }
  case 2:
   {
    HEAP32[i2 >> 2] = 1;
    if (!(HEAP32[i4 + 24 >> 2] | 0)) {
     i2 = i5 + 152 | 0;
     i1 = HEAP32[i5 + 144 >> 2] | 0;
     if ((HEAP32[i2 >> 2] | 0) <= (i1 | 0)) {
      i1 = 2;
      break L1;
     }
     HEAP32[i2 >> 2] = i1;
     i1 = 2;
     break L1;
    } else {
     if (!(HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] | 0)) {
      i1 = 2;
      break L1;
     }
     i1 = HEAP32[i5 >> 2] | 0;
     HEAP32[i1 + 20 >> 2] = 59;
     FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i5);
     i1 = 2;
     break L1;
    }
   }
  default:
   break L1;
  }
 } else i1 = 2; while (0);
 return i1 | 0;
}

function _arGetTransMat(i2, i3, i6, i7, i8, i9) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i10 = i13 + 20 | 0;
 i11 = i13;
 i12 = _malloc(i8 << 4) | 0;
 HEAP32[i10 >> 2] = i12;
 if (!i12) {
  _arLog(0, 3, 20581, i13 + 8 | 0);
  _exit(1);
 }
 i4 = _malloc(i8 * 24 | 0) | 0;
 i5 = i10 + 4 | 0;
 HEAP32[i5 >> 2] = i4;
 if (!i4) {
  _arLog(0, 3, 20581, i13 + 16 | 0);
  _exit(1);
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (i8 | 0)) break;
  HEAPF64[i12 + (i1 << 4) >> 3] = +HEAPF64[i6 + (i1 << 4) >> 3];
  HEAPF64[i12 + (i1 << 4) + 8 >> 3] = +HEAPF64[i6 + (i1 << 4) + 8 >> 3];
  HEAPF64[i4 + (i1 * 24 | 0) >> 3] = +HEAPF64[i7 + (i1 * 24 | 0) >> 3];
  HEAPF64[i4 + (i1 * 24 | 0) + 8 >> 3] = +HEAPF64[i7 + (i1 * 24 | 0) + 8 >> 3];
  HEAPF64[i4 + (i1 * 24 | 0) + 16 >> 3] = +HEAPF64[i7 + (i1 * 24 | 0) + 16 >> 3];
  i1 = i1 + 1 | 0;
 }
 HEAP32[i10 + 8 >> 2] = i8;
 if ((_icpPoint(HEAP32[i2 >> 2] | 0, i10, i3, i9, i11) | 0) < 0) HEAPF64[i11 >> 3] = 1.0e8;
 _free(HEAP32[i10 >> 2] | 0);
 _free(HEAP32[i5 >> 2] | 0);
 STACKTOP = i13;
 return +(+HEAPF64[i11 >> 3]);
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEm(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i8;
 i6 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if ((HEAP32[i6 >> 2] | 0) - i1 >> 2 >>> 0 < i4 >>> 0) {
  i1 = (i1 - (HEAP32[i3 >> 2] | 0) >> 2) + i4 | 0;
  i2 = __ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv(i3) | 0;
  if (i2 >>> 0 < i1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i3); else {
   i9 = HEAP32[i3 >> 2] | 0;
   i10 = (HEAP32[i6 >> 2] | 0) - i9 | 0;
   i6 = i10 >> 1;
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_(i5, i10 >> 2 >>> 0 < i2 >>> 1 >>> 0 ? (i6 >>> 0 < i1 >>> 0 ? i1 : i6) : i2, (HEAP32[i7 >> 2] | 0) - i9 >> 2, i3 + 8 | 0);
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEE18__construct_at_endEm(i5, i4);
   __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE(i3, i5);
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev(i5);
   break;
  }
 } else __ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endEm(i3, i4); while (0);
 STACKTOP = i8;
 return;
}

function __ZNSt3__26vectorIfNS_9allocatorIfEEE8__appendEm(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i8;
 i6 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if ((HEAP32[i6 >> 2] | 0) - i1 >> 2 >>> 0 < i4 >>> 0) {
  i1 = (i1 - (HEAP32[i3 >> 2] | 0) >> 2) + i4 | 0;
  i2 = __ZNKSt3__26vectorIfNS_9allocatorIfEEE8max_sizeEv(i3) | 0;
  if (i2 >>> 0 < i1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i3); else {
   i9 = HEAP32[i3 >> 2] | 0;
   i10 = (HEAP32[i6 >> 2] | 0) - i9 | 0;
   i6 = i10 >> 1;
   __ZNSt3__214__split_bufferIfRNS_9allocatorIfEEEC2EmmS3_(i5, i10 >> 2 >>> 0 < i2 >>> 1 >>> 0 ? (i6 >>> 0 < i1 >>> 0 ? i1 : i6) : i2, (HEAP32[i7 >> 2] | 0) - i9 >> 2, i3 + 8 | 0);
   __ZNSt3__214__split_bufferIfRNS_9allocatorIfEEE18__construct_at_endEm(i5, i4);
   __ZNSt3__26vectorIfNS_9allocatorIfEEE26__swap_out_circular_bufferERNS_14__split_bufferIfRS2_EE(i3, i5);
   __ZNSt3__214__split_bufferIfRNS_9allocatorIfEEED2Ev(i5);
   break;
  }
 } else __ZNSt3__26vectorIfNS_9allocatorIfEEE18__construct_at_endEm(i3, i4); while (0);
 STACKTOP = i8;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE6rehashEm(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 if ((i1 | 0) != 1) {
  if (i1 + -1 & i1) i1 = __ZNSt3__212__next_primeEm(i1) | 0;
 } else i1 = 2;
 i3 = HEAP32[i4 + 4 >> 2] | 0;
 if (i1 >>> 0 <= i3 >>> 0) {
  if (i1 >>> 0 < i3 >>> 0) {
   i2 = ~~+Math_ceil(+(+((HEAP32[i4 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i4 + 16 >> 2])) >>> 0;
   if (i3 >>> 0 > 2 & (i3 + -1 & i3 | 0) == 0) {
    i5 = 1 << 32 - (Math_clz32(i2 + -1 | 0) | 0);
    i2 = i2 >>> 0 < 2 ? i2 : i5;
   } else i2 = __ZNSt3__212__next_primeEm(i2) | 0;
   i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
   if (i1 >>> 0 < i3 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE8__rehashEm(i4, i1);
  }
 } else __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE8__rehashEm(i4, i1);
 return;
}

function _select_ncolors(i5, i8) {
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0;
 i9 = HEAP32[i5 + 120 >> 2] | 0;
 i10 = HEAP32[i5 + 96 >> 2] | 0;
 i4 = 1;
 while (1) {
  i3 = i4 + 1 | 0;
  i1 = i3;
  i2 = 1;
  while (1) {
   if ((i2 | 0) >= (i9 | 0)) break;
   i1 = Math_imul(i1, i3) | 0;
   i2 = i2 + 1 | 0;
  }
  if ((i1 | 0) > (i10 | 0)) break; else i4 = i3;
 }
 if (i4 >>> 0 < 2) {
  i7 = HEAP32[i5 >> 2] | 0;
  HEAP32[i7 + 20 >> 2] = 56;
  HEAP32[i7 + 24 >> 2] = i1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i5 >> 2] >> 2] & 255](i5);
 }
 i2 = 1;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (i9 | 0)) break;
  HEAP32[i8 + (i1 << 2) >> 2] = i4;
  i2 = Math_imul(i2, i4) | 0;
  i1 = i1 + 1 | 0;
 }
 i7 = i5 + 44 | 0;
 i3 = 0;
 i6 = i2;
 i1 = 0;
 L15 : while (1) {
  while (1) {
   if ((i1 | 0) < (i9 | 0)) {
    if ((HEAP32[i7 >> 2] | 0) == 2) i2 = HEAP32[13640 + (i1 << 2) >> 2] | 0; else i2 = i1;
    i2 = i8 + (i2 << 2) | 0;
    i5 = HEAP32[i2 >> 2] | 0;
    i4 = i5 + 1 | 0;
    i5 = Math_imul((i6 | 0) / (i5 | 0) | 0, i4) | 0;
    if ((i5 | 0) <= (i10 | 0)) break;
   }
   if (!i3) break L15; else {
    i3 = 0;
    i1 = 0;
   }
  }
  HEAP32[i2 >> 2] = i4;
  i3 = 1;
  i6 = i5;
  i1 = i1 + 1 | 0;
 }
 return i6 | 0;
}

function __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = ((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 2) + 1 | 0;
 i6 = __ZNKSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] | 0) - i8 | 0;
  i9 = i10 >> 1;
  __ZNSt3__214__split_bufferIPKN6vision4NodeILi96EEERNS_9allocatorIS5_EEEC2EmmS8_(i3, i10 >> 2 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, (HEAP32[i4 >> 2] | 0) - i8 >> 2, i1 + 8 | 0);
  i6 = i3 + 8 | 0;
  HEAP32[HEAP32[i6 >> 2] >> 2] = HEAP32[i2 >> 2];
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
  __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS5_RS7_EE(i1, i3);
  __ZNSt3__214__split_bufferIPKN6vision4NodeILi96EEERNS_9allocatorIS5_EEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE8__appendEm(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i8;
 i6 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if (((HEAP32[i6 >> 2] | 0) - i1 | 0) >>> 0 < i4 >>> 0) {
  i1 = i1 - (HEAP32[i3 >> 2] | 0) + i4 | 0;
  i2 = __ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv(i3) | 0;
  if (i2 >>> 0 < i1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i3); else {
   i9 = HEAP32[i3 >> 2] | 0;
   i10 = (HEAP32[i6 >> 2] | 0) - i9 | 0;
   i6 = i10 << 1;
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEEC2EmmS3_(i5, i10 >>> 0 < i2 >>> 1 >>> 0 ? (i6 >>> 0 < i1 >>> 0 ? i1 : i6) : i2, (HEAP32[i7 >> 2] | 0) - i9 | 0, i3 + 8 | 0);
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE18__construct_at_endEm(i5, i4);
   __ZNSt3__26vectorIhNS_9allocatorIhEEE26__swap_out_circular_bufferERNS_14__split_bufferIhRS2_EE(i3, i5);
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEED2Ev(i5);
   break;
  }
 } else __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endEm(i3, i4); while (0);
 STACKTOP = i8;
 return;
}

function __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = ((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 2) + 1 | 0;
 i6 = __ZNKSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] | 0) - i8 | 0;
  i9 = i10 >> 1;
  __ZNSt3__214__split_bufferIPN6vision4NodeILi96EEERNS_9allocatorIS4_EEEC2EmmS7_(i3, i10 >> 2 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, (HEAP32[i4 >> 2] | 0) - i8 >> 2, i1 + 8 | 0);
  i6 = i3 + 8 | 0;
  HEAP32[HEAP32[i6 >> 2] >> 2] = HEAP32[i2 >> 2];
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
  __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS4_RS6_EE(i1, i3);
  __ZNSt3__214__split_bufferIPN6vision4NodeILi96EEERNS_9allocatorIS4_EEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function __ZL25default_terminate_handlerv() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i7 = i1 + 32 | 0;
 i3 = i1 + 24 | 0;
 i8 = i1 + 16 | 0;
 i6 = i1;
 i4 = i1 + 36 | 0;
 i1 = ___cxa_get_globals_fast() | 0;
 if (i1 | 0 ? (i5 = HEAP32[i1 >> 2] | 0, i5 | 0) : 0) {
  i1 = i5 + 48 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  i1 = HEAP32[i1 + 4 >> 2] | 0;
  if (!((i2 & -256 | 0) == 1126902528 & (i1 | 0) == 1129074247)) {
   HEAP32[i3 >> 2] = 49935;
   _abort_message(49885, i3);
  }
  if ((i2 | 0) == 1126902529 & (i1 | 0) == 1129074247) i1 = HEAP32[i5 + 44 >> 2] | 0; else i1 = i5 + 80 | 0;
  HEAP32[i4 >> 2] = i1;
  i5 = HEAP32[i5 >> 2] | 0;
  i1 = HEAP32[i5 + 4 >> 2] | 0;
  if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[3302] | 0) + 16 >> 2] & 63](13208, i5, i4) | 0) {
   i8 = HEAP32[i4 >> 2] | 0;
   i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 8 >> 2] & 127](i8) | 0;
   HEAP32[i6 >> 2] = 49935;
   HEAP32[i6 + 4 >> 2] = i1;
   HEAP32[i6 + 8 >> 2] = i8;
   _abort_message(49799, i6);
  } else {
   HEAP32[i8 >> 2] = 49935;
   HEAP32[i8 + 4 >> 2] = i1;
   _abort_message(49844, i8);
  }
 }
 _abort_message(49923, i7);
}

function _arCreateHandle(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = _malloc(7062432) | 0;
 if (!i2) {
  _arLog(0, 3, 20581, i3);
  _exit(1);
 }
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4834148 >> 2] = 0;
 HEAP32[i2 + 7062408 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = -1;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 1;
 HEAP32[i2 + 16 >> 2] = 100;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i2 + 24 >> 2] = 0;
 HEAP32[i2 + 28 >> 2] = 2;
 HEAPF64[i2 + 7062416 >> 3] = .5;
 HEAP32[i2 + 7062424 >> 2] = 3;
 HEAP32[i2 + 32 >> 2] = i1;
 i4 = HEAP32[i1 >> 2] | 0;
 HEAP32[i2 + 36 >> 2] = i4;
 i1 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i2 + 40 >> 2] = i1;
 HEAP32[i2 + 44 >> 2] = 0;
 HEAP32[i2 + 15408 >> 2] = 0;
 HEAP32[i2 + 4834152 >> 2] = 0;
 HEAP32[i2 + 4818296 >> 2] = 0;
 i1 = _malloc(Math_imul(i4 << 1, i1) | 0) | 0;
 HEAP32[i2 + 4834144 >> 2] = i1;
 if (!i1) {
  _arLog(0, 3, 20581, i3 + 8 | 0);
  _exit(1);
 } else {
  HEAP32[i2 + 7062384 >> 2] = 0;
  _arSetDebugMode(i2, 0) | 0;
  HEAP32[i2 + 7062388 >> 2] = -1;
  _arSetLabelingThreshMode(i2, 0) | 0;
  _arSetLabelingThreshModeAutoInterval(i2, 7) | 0;
  STACKTOP = i3;
  return i2 | 0;
 }
 return 0;
}

function _arLabeling(i3, i4, i5, i6, i1, i7, i8, i9, i10) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i2 = 0;
 i1 = (i1 | 0) == 1;
 i2 = (i10 | 0) != 0;
 do if (!i6) if (i1) {
  if (i2) {
   i1 = _arLabelingSubDBZ(i3, i4, i5, i10, i9) | 0;
   break;
  }
  if (!i8) {
   i1 = _arLabelingSubDBRC(i3, i4, i5, i7, i9) | 0;
   break;
  } else {
   i1 = _arLabelingSubDBIC(i3, i4, i5, i7, i9) | 0;
   break;
  }
 } else {
  if (i2) {
   i1 = _arLabelingSubDWZ(i3, i4, i5, i10, i9) | 0;
   break;
  }
  if (!i8) {
   i1 = _arLabelingSubDWRC(i3, i4, i5, i7, i9) | 0;
   break;
  } else {
   i1 = _arLabelingSubDWIC(i3, i4, i5, i7, i9) | 0;
   break;
  }
 } else if (i1) {
  if (i2) {
   i1 = _arLabelingSubEBZ(i3, i4, i5, i10, i9) | 0;
   break;
  }
  if (!i8) {
   i1 = _arLabelingSubEBRC(i3, i4, i5, i7, i9) | 0;
   break;
  } else {
   i1 = _arLabelingSubEBIC(i3, i4, i5, i7, i9) | 0;
   break;
  }
 } else {
  if (i2) {
   i1 = _arLabelingSubEWZ(i3, i4, i5, i10, i9) | 0;
   break;
  }
  if (!i8) {
   i1 = _arLabelingSubEWRC(i3, i4, i5, i7, i9) | 0;
   break;
  } else {
   i1 = _arLabelingSubEWIC(i3, i4, i5, i7, i9) | 0;
   break;
  }
 } while (0);
 return i1 | 0;
}

function _merged_2v_upsample(i5, i6, i11, i1, i7, i12, i2) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i11 = i11 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 i12 = i12 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i8 = 0, i9 = 0, i10 = 0, i13 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i10;
 i8 = HEAP32[i5 + 452 >> 2] | 0;
 i9 = i8 + 36 | 0;
 if (!(HEAP32[i9 >> 2] | 0)) {
  i1 = i8 + 44 | 0;
  i13 = HEAP32[i1 >> 2] | 0;
  i13 = i13 >>> 0 < 2 ? i13 : 2;
  i3 = HEAP32[i12 >> 2] | 0;
  i2 = i2 - i3 | 0;
  i2 = i13 >>> 0 > i2 >>> 0 ? i2 : i13;
  HEAP32[i4 >> 2] = HEAP32[i7 + (i3 << 2) >> 2];
  if (i2 >>> 0 > 1) HEAP32[i4 + 4 >> 2] = HEAP32[i7 + (i3 + 1 << 2) >> 2]; else {
   HEAP32[i4 + 4 >> 2] = HEAP32[i8 + 32 >> 2];
   HEAP32[i9 >> 2] = 1;
  }
  FUNCTION_TABLE_viiii[HEAP32[i8 + 12 >> 2] & 31](i5, i6, HEAP32[i11 >> 2] | 0, i4);
 } else {
  _jcopy_sample_rows(i8 + 32 | 0, 0, i7 + (HEAP32[i12 >> 2] << 2) | 0, 0, 1, HEAP32[i8 + 40 >> 2] | 0);
  HEAP32[i9 >> 2] = 0;
  i2 = 1;
  i1 = i8 + 44 | 0;
 }
 HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + i2;
 HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) - i2;
 if (!(HEAP32[i9 >> 2] | 0)) HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 1;
 STACKTOP = i10;
 return;
}

function _jpeg_CreateDecompress(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 if ((i1 | 0) != 62) {
  i4 = HEAP32[i3 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 12;
  HEAP32[i4 + 24 >> 2] = 62;
  HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] = i1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i3 >> 2] >> 2] & 255](i3);
 }
 if ((i2 | 0) == 464) i1 = i3; else {
  i1 = HEAP32[i3 >> 2] | 0;
  HEAP32[i1 + 20 >> 2] = 21;
  HEAP32[i1 + 24 >> 2] = 464;
  HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] = i2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i3 >> 2] >> 2] & 255](i3);
  i1 = i3;
 }
 i5 = HEAP32[i3 >> 2] | 0;
 i4 = i3 + 12 | 0;
 i2 = HEAP32[i4 >> 2] | 0;
 _memset(i3 + 4 | 0, 0, 460) | 0;
 HEAP32[i3 >> 2] = i5;
 HEAP32[i4 >> 2] = i2;
 HEAP32[i3 + 16 >> 2] = 1;
 _jinit_memory_mgr(i1);
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 24 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 4) break;
  HEAP32[i3 + 164 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 4) break;
  HEAP32[i3 + 180 + (i1 << 2) >> 2] = 0;
  HEAP32[i3 + 196 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i3 + 304 >> 2] = 0;
 _jinit_marker_reader(i3);
 _jinit_input_controller(i3);
 HEAP32[i3 + 20 >> 2] = 200;
 return;
}

function __ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i4, i2, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var d1 = 0.0, d5 = 0.0, i6 = 0;
 __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_(i4, i2, -+HEAPF32[i2 + (i3 << 2) >> 2]);
 i6 = i4 + (i3 << 2) | 0;
 HEAPF32[i6 >> 2] = +HEAPF32[i6 >> 2] + 1.0;
 __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_(i4, i2 + 36 | 0, -+HEAPF32[i2 + (i3 + 9 << 2) >> 2]);
 __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_(i4, i2 + 72 | 0, -+HEAPF32[i2 + (i3 + 18 << 2) >> 2]);
 __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_(i4, i2 + 108 | 0, -+HEAPF32[i2 + (i3 + 27 << 2) >> 2]);
 __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_(i4, i2 + 144 | 0, -+HEAPF32[i2 + (i3 + 36 << 2) >> 2]);
 __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_(i4, i2 + 180 | 0, -+HEAPF32[i2 + (i3 + 45 << 2) >> 2]);
 __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_(i4, i2 + 216 | 0, -+HEAPF32[i2 + (i3 + 54 << 2) >> 2]);
 __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_(i4, i2 + 252 | 0, -+HEAPF32[i2 + (i3 + 63 << 2) >> 2]);
 d5 = +__ZN6vision11SumSquares9IfEET_PKS1_(i4);
 d1 = +Math_sqrt(+d5);
 if (d5 == 0.0) d1 = 0.0; else __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_(i4, i4, 1.0 / d1);
 return +d1;
}

function __ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc(i3, i7, i1, i2, i4, i5, i6) {
 i3 = i3 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(416);
 i1 = i8;
 i2 = i8 + 400 | 0;
 HEAP32[i2 >> 2] = i1 + 400;
 __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc(i3 + 8 | 0, i1, i2, i4, i5, i6);
 i6 = HEAP32[i2 >> 2] | 0;
 i5 = i1;
 i1 = HEAP32[i7 >> 2] | 0;
 while (1) {
  if ((i5 | 0) == (i6 | 0)) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if (!i1) i1 = 0; else {
   i3 = i1 + 24 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i1 + 28 >> 2] | 0)) {
    i7 = HEAP32[(HEAP32[i1 >> 2] | 0) + 52 >> 2] | 0;
    i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(i2) | 0;
    i2 = FUNCTION_TABLE_iii[i7 & 63](i1, i2) | 0;
   } else {
    HEAP32[i3 >> 2] = i4 + 4;
    HEAP32[i4 >> 2] = i2;
    i2 = __ZNSt3__211char_traitsIwE11to_int_typeEw(i2) | 0;
   }
   i7 = __ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0;
   i1 = i7 ? 0 : i1;
  }
  i5 = i5 + 4 | 0;
 }
 STACKTOP = i8;
 return i1 | 0;
}

function _post_process_2pass(i6, i1, i2, i3, i7, i8, i9) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i4 = 0, i5 = 0, i10 = 0, i11 = 0;
 i2 = HEAP32[i6 + 432 >> 2] | 0;
 i5 = i2 + 24 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 if (!i1) {
  i4 = i2 + 20 | 0;
  i3 = i2 + 16 | 0;
  i10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i6 + 4 >> 2] | 0) + 28 >> 2] & 31](i6, HEAP32[i2 + 8 >> 2] | 0, HEAP32[i4 >> 2] | 0, HEAP32[i3 >> 2] | 0, 0) | 0;
  HEAP32[i2 + 12 >> 2] = i10;
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = i10;
 } else {
  i4 = i2 + 20 | 0;
  i3 = i2 + 16 | 0;
  i2 = HEAP32[i2 + 12 >> 2] | 0;
 }
 i10 = (HEAP32[i3 >> 2] | 0) - i1 | 0;
 i11 = HEAP32[i8 >> 2] | 0;
 i9 = i9 - i11 | 0;
 i10 = i10 >>> 0 > i9 >>> 0 ? i9 : i10;
 i9 = (HEAP32[i6 + 116 >> 2] | 0) - (HEAP32[i4 >> 2] | 0) | 0;
 i10 = i10 >>> 0 > i9 >>> 0 ? i9 : i10;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i6 + 460 >> 2] | 0) + 4 >> 2] & 31](i6, i2 + (i1 << 2) | 0, i7 + (i11 << 2) | 0, i10);
 HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i10;
 i10 = (HEAP32[i5 >> 2] | 0) + i10 | 0;
 HEAP32[i5 >> 2] = i10;
 i1 = HEAP32[i3 >> 2] | 0;
 if (i10 >>> 0 >= i1 >>> 0) {
  HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + i1;
  HEAP32[i5 >> 2] = 0;
 }
 return;
}

function _xt_by_x(i10, i1) {
 i10 = i10 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, d9 = 0.0, i11 = 0, i12 = 0, d13 = 0.0;
 i11 = HEAP32[i10 + 4 >> 2] | 0;
 i12 = HEAP32[i10 + 8 >> 2] | 0;
 L1 : do if ((HEAP32[i1 + 4 >> 2] | 0) == (i12 | 0) ? (HEAP32[i1 + 8 >> 2] | 0) == (i12 | 0) : 0) {
  i8 = HEAP32[i1 >> 2] | 0;
  i3 = 0;
  i5 = i8;
  while (1) {
   if ((i3 | 0) >= (i12 | 0)) {
    i1 = 0;
    break L1;
   }
   i2 = 0;
   i7 = i5;
   while (1) {
    if ((i2 | 0) == (i12 | 0)) break;
    L10 : do if (i2 >>> 0 < i3 >>> 0) {
     i6 = i8 + ((Math_imul(i2, i12) | 0) + i3 << 3) | 0;
     HEAPF64[i7 >> 3] = +HEAPF64[i6 >> 3];
    } else {
     i6 = HEAP32[i10 >> 2] | 0;
     HEAPF64[i7 >> 3] = 0.0;
     i1 = 0;
     i4 = i6 + (i3 << 3) | 0;
     i6 = i6 + (i2 << 3) | 0;
     d9 = 0.0;
     while (1) {
      if ((i1 | 0) >= (i11 | 0)) break L10;
      d13 = d9 + +HEAPF64[i4 >> 3] * +HEAPF64[i6 >> 3];
      HEAPF64[i7 >> 3] = d13;
      i1 = i1 + 1 | 0;
      i4 = i4 + (i12 << 3) | 0;
      i6 = i6 + (i12 << 3) | 0;
      d9 = d13;
     }
    } while (0);
    i2 = i2 + 1 | 0;
    i7 = i7 + 8 | 0;
   }
   i3 = i3 + 1 | 0;
   i5 = i5 + (i12 << 3) | 0;
  }
 } else i1 = -1; while (0);
 return i1 | 0;
}

function __ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc(i3, i7, i1, i2, i4, i5, i6) {
 i3 = i3 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i1 = i8;
 i2 = i8 + 100 | 0;
 HEAP32[i2 >> 2] = i1 + 100;
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc(i3 + 8 | 0, i1, i2, i4, i5, i6);
 i6 = HEAP32[i2 >> 2] | 0;
 i5 = i1;
 i1 = HEAP32[i7 >> 2] | 0;
 while (1) {
  if ((i5 | 0) == (i6 | 0)) break;
  i2 = HEAP8[i5 >> 0] | 0;
  if (!i1) i1 = 0; else {
   i3 = i1 + 24 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i1 + 28 >> 2] | 0)) {
    i7 = HEAP32[(HEAP32[i1 >> 2] | 0) + 52 >> 2] | 0;
    i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(i2) | 0;
    i2 = FUNCTION_TABLE_iii[i7 & 63](i1, i2) | 0;
   } else {
    HEAP32[i3 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i2;
    i2 = __ZNSt3__211char_traitsIcE11to_int_typeEc(i2) | 0;
   }
   i7 = __ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0;
   i1 = i7 ? 0 : i1;
  }
  i5 = i5 + 1 | 0;
 }
 STACKTOP = i8;
 return i1 | 0;
}

function __ZNSt3__26vectorItNS_9allocatorItEEE8__appendEm(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i8;
 i6 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if ((HEAP32[i6 >> 2] | 0) - i1 >> 1 >>> 0 < i4 >>> 0) {
  i1 = (i1 - (HEAP32[i3 >> 2] | 0) >> 1) + i4 | 0;
  i2 = __ZNKSt3__26vectorItNS_9allocatorItEEE8max_sizeEv(i3) | 0;
  if (i2 >>> 0 < i1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i3); else {
   i9 = HEAP32[i3 >> 2] | 0;
   i6 = (HEAP32[i6 >> 2] | 0) - i9 | 0;
   __ZNSt3__214__split_bufferItRNS_9allocatorItEEEC2EmmS3_(i5, i6 >> 1 >>> 0 < i2 >>> 1 >>> 0 ? (i6 >>> 0 < i1 >>> 0 ? i1 : i6) : i2, (HEAP32[i7 >> 2] | 0) - i9 >> 1, i3 + 8 | 0);
   __ZNSt3__214__split_bufferItRNS_9allocatorItEEE18__construct_at_endEm(i5, i4);
   __ZNSt3__26vectorItNS_9allocatorItEEE26__swap_out_circular_bufferERNS_14__split_bufferItRS2_EE(i3, i5);
   __ZNSt3__214__split_bufferItRNS_9allocatorItEEED2Ev(i5);
   break;
  }
 } else __ZNSt3__26vectorItNS_9allocatorItEEE18__construct_at_endEm(i3, i4); while (0);
 STACKTOP = i8;
 return;
}

function _jinit_d_main_controller(i7, i1) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = i7 + 4 | 0;
 i2 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i8 >> 2] >> 2] & 63](i7, 1, 80) | 0;
 HEAP32[i7 + 424 >> 2] = i2;
 HEAP32[i2 >> 2] = 45;
 if (i1 | 0) {
  i6 = HEAP32[i7 >> 2] | 0;
  HEAP32[i6 + 20 >> 2] = 4;
  FUNCTION_TABLE_vi[HEAP32[i6 >> 2] & 255](i7);
 }
 i6 = i7 + 316 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 if (HEAP32[(HEAP32[i7 + 452 >> 2] | 0) + 8 >> 2] | 0) {
  if ((i1 | 0) < 2) {
   i5 = HEAP32[i7 >> 2] | 0;
   HEAP32[i5 + 20 >> 2] = 47;
   FUNCTION_TABLE_vi[HEAP32[i5 >> 2] & 255](i7);
  }
  _alloc_funny_pointers(i7);
  i1 = (HEAP32[i6 >> 2] | 0) + 2 | 0;
 }
 i5 = i7 + 36 | 0;
 i4 = i2 + 8 | 0;
 i2 = HEAP32[i7 + 216 >> 2] | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (HEAP32[i5 >> 2] | 0)) break;
  i10 = HEAP32[i2 + 36 >> 2] | 0;
  i9 = Math_imul(i10, HEAP32[i2 + 12 >> 2] | 0) | 0;
  i10 = Math_imul(HEAP32[i2 + 28 >> 2] | 0, i10) | 0;
  i9 = Math_imul((i9 | 0) / (HEAP32[i6 >> 2] | 0) | 0, i1) | 0;
  i9 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i8 >> 2] | 0) + 8 >> 2] & 15](i7, 1, i10, i9) | 0;
  HEAP32[i4 + (i3 << 2) >> 2] = i9;
  i2 = i2 + 84 | 0;
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 if ((i1 | 0) != 1) {
  if (i1 + -1 & i1) i1 = __ZNSt3__212__next_primeEm(i1) | 0;
 } else i1 = 2;
 i3 = HEAP32[i4 + 4 >> 2] | 0;
 if (i1 >>> 0 <= i3 >>> 0) {
  if (i1 >>> 0 < i3 >>> 0) {
   i2 = ~~+Math_ceil(+(+((HEAP32[i4 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i4 + 16 >> 2])) >>> 0;
   if (i3 >>> 0 > 2 & (i3 + -1 & i3 | 0) == 0) {
    i5 = 1 << 32 - (Math_clz32(i2 + -1 | 0) | 0);
    i2 = i2 >>> 0 < 2 ? i2 : i5;
   } else i2 = __ZNSt3__212__next_primeEm(i2) | 0;
   i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
   if (i1 >>> 0 < i3 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm(i4, i1);
  }
 } else __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm(i4, i1);
 return;
}

function _jpeg_huff_decode(i7, i1, i2, i8, i4) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, i6 = 0;
 if ((i2 | 0) < (i4 | 0)) if (!(_jpeg_fill_bit_buffer(i7, i1, i2, i4) | 0)) i1 = -1; else {
  i6 = i7 + 8 | 0;
  i5 = i7 + 12 | 0;
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i3 = 5;
 } else {
  i5 = i7 + 12 | 0;
  i6 = i7 + 8 | 0;
  i3 = 5;
 }
 L5 : do if ((i3 | 0) == 5) {
  i2 = i2 - i4 | 0;
  i3 = i1 >> i2 & (1 << i4) + -1;
  while (1) {
   if ((i3 | 0) <= (HEAP32[i8 + (i4 << 2) >> 2] | 0)) break;
   i3 = i3 << 1;
   if ((i2 | 0) < 1) {
    if (!(_jpeg_fill_bit_buffer(i7, i1, i2, 1) | 0)) {
     i1 = -1;
     break L5;
    }
    i1 = HEAP32[i6 >> 2] | 0;
    i2 = HEAP32[i5 >> 2] | 0;
   }
   i2 = i2 + -1 | 0;
   i3 = i1 >>> i2 & 1 | i3;
   i4 = i4 + 1 | 0;
  }
  HEAP32[i6 >> 2] = i1;
  HEAP32[i5 >> 2] = i2;
  if ((i4 | 0) > 16) {
   i1 = HEAP32[i7 + 16 >> 2] | 0;
   i8 = HEAP32[i1 >> 2] | 0;
   HEAP32[i8 + 20 >> 2] = 118;
   FUNCTION_TABLE_vii[HEAP32[i8 + 4 >> 2] & 63](i1, -1);
   i1 = 0;
   break;
  } else {
   i1 = HEAPU8[(HEAP32[i8 + 72 + (i4 << 2) >> 2] | 0) + i3 + ((HEAP32[i8 + 140 >> 2] | 0) + 17) >> 0] | 0;
   break;
  }
 } while (0);
 return i1 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i1) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i8;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i7, i6);
 do if (HEAP8[i7 >> 0] | 0) {
  i2 = HEAP32[i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  i3 = i2;
  if (i2 | 0) {
   i4 = i3 + 24 | 0;
   i5 = HEAP32[i4 >> 2] | 0;
   if ((i5 | 0) == (HEAP32[i3 + 28 >> 2] | 0)) {
    i5 = HEAP32[(HEAP32[i2 >> 2] | 0) + 52 >> 2] | 0;
    i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(i1) | 0;
    i1 = FUNCTION_TABLE_iii[i5 & 63](i3, i1) | 0;
   } else {
    HEAP32[i4 >> 2] = i5 + 1;
    HEAP8[i5 >> 0] = i1;
    i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(i1) | 0;
   }
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) break;
  }
  i5 = i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0;
  __ZNSt3__28ios_base5clearEj(i5, HEAP32[i5 + 16 >> 2] | 1);
 } while (0);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i7);
 STACKTOP = i8;
 return i6 | 0;
}

function __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS8_EE(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = i2 + 4 | 0;
 i6 = i3 + 4 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  i10 = HEAP32[i6 >> 2] | 0;
  i8 = i10 + -12 | 0;
  i7 = i1 + -12 | 0;
  HEAP32[i8 >> 2] = 0;
  i9 = i10 + -8 | 0;
  HEAP32[i9 >> 2] = 0;
  i10 = i10 + -4 | 0;
  HEAP32[i10 >> 2] = 0;
  HEAP32[i8 >> 2] = HEAP32[i7 >> 2];
  i8 = i1 + -8 | 0;
  HEAP32[i9 >> 2] = HEAP32[i8 >> 2];
  i9 = i1 + -4 | 0;
  HEAP32[i10 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i9 >> 2] = 0;
  HEAP32[i8 >> 2] = 0;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -12;
  i1 = i7;
 }
 i8 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i6 >> 2] = i8;
 i8 = i3 + 8 | 0;
 i10 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i8 >> 2];
 HEAP32[i8 >> 2] = i10;
 i8 = i2 + 8 | 0;
 i10 = i3 + 12 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i10 >> 2] = i9;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 return;
}

function _memchr(i1, i5, i2) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = i5 & 255;
 i3 = (i2 | 0) != 0;
 L1 : do if (i3 & (i1 & 3 | 0) != 0) {
  i4 = i5 & 255;
  while (1) {
   if ((HEAP8[i1 >> 0] | 0) == i4 << 24 >> 24) {
    i7 = 6;
    break L1;
   }
   i1 = i1 + 1 | 0;
   i2 = i2 + -1 | 0;
   i3 = (i2 | 0) != 0;
   if (!(i3 & (i1 & 3 | 0) != 0)) {
    i7 = 5;
    break;
   }
  }
 } else i7 = 5; while (0);
 if ((i7 | 0) == 5) if (i3) i7 = 6; else i7 = 16;
 L8 : do if ((i7 | 0) == 6) {
  i4 = i5 & 255;
  if ((HEAP8[i1 >> 0] | 0) == i4 << 24 >> 24) if (!i2) {
   i7 = 16;
   break;
  } else break;
  i3 = Math_imul(i6, 16843009) | 0;
  L13 : do if (i2 >>> 0 > 3) while (1) {
   i6 = HEAP32[i1 >> 2] ^ i3;
   if ((i6 & -2139062144 ^ -2139062144) & i6 + -16843009 | 0) break L13;
   i1 = i1 + 4 | 0;
   i2 = i2 + -4 | 0;
   if (i2 >>> 0 <= 3) {
    i7 = 11;
    break;
   }
  } else i7 = 11; while (0);
  if ((i7 | 0) == 11) if (!i2) {
   i7 = 16;
   break;
  }
  while (1) {
   if ((HEAP8[i1 >> 0] | 0) == i4 << 24 >> 24) break L8;
   i2 = i2 + -1 | 0;
   if (!i2) {
    i7 = 16;
    break;
   } else i1 = i1 + 1 | 0;
  }
 } while (0);
 if ((i7 | 0) == 16) i1 = 0;
 return i1 | 0;
}

function __ZL18genBWImageOneThirdPhiiPiS0_(i9, i10, i1, i2, i3) {
 i9 = i9 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i11 = (i10 | 0) / 3 | 0;
 HEAP32[i2 >> 2] = i11;
 i8 = (i1 | 0) / 3 | 0;
 HEAP32[i3 >> 2] = i8;
 i7 = _malloc(Math_imul(i8, i11) | 0) | 0;
 if (!i7) {
  _arLog(0, 3, 20581, i12);
  _exit(1);
 }
 i2 = 0;
 i1 = i7;
 while (1) {
  if ((i2 | 0) >= (i8 | 0)) break;
  i6 = i2 * 3 | 0;
  i3 = 0;
  i4 = i9 + (Math_imul(i6, i10) | 0) | 0;
  i5 = i9 + (Math_imul(i6 + 2 | 0, i10) | 0) | 0;
  i6 = i9 + (Math_imul(i6 + 1 | 0, i10) | 0) | 0;
  while (1) {
   if ((i3 | 0) >= (i11 | 0)) break;
   HEAP8[i1 >> 0] = ((HEAPU8[i4 + 1 >> 0] | 0) + (HEAPU8[i4 >> 0] | 0) + (HEAPU8[i4 + 2 >> 0] | 0) + (HEAPU8[i6 >> 0] | 0) + (HEAPU8[i6 + 1 >> 0] | 0) + (HEAPU8[i6 + 2 >> 0] | 0) + (HEAPU8[i5 >> 0] | 0) + (HEAPU8[i5 + 1 >> 0] | 0) + (HEAPU8[i5 + 2 >> 0] | 0) | 0) / 9 | 0;
   i3 = i3 + 1 | 0;
   i4 = i4 + 3 | 0;
   i5 = i5 + 3 | 0;
   i6 = i6 + 3 | 0;
   i1 = i1 + 1 | 0;
  }
  i2 = i2 + 1 | 0;
 }
 STACKTOP = i12;
 return i7 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 if ((i1 | 0) != 1) {
  if (i1 + -1 & i1) i1 = __ZNSt3__212__next_primeEm(i1) | 0;
 } else i1 = 2;
 i3 = HEAP32[i4 + 4 >> 2] | 0;
 if (i1 >>> 0 <= i3 >>> 0) {
  if (i1 >>> 0 < i3 >>> 0) {
   i2 = ~~+Math_ceil(+(+((HEAP32[i4 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i4 + 16 >> 2])) >>> 0;
   if (i3 >>> 0 > 2 & (i3 + -1 & i3 | 0) == 0) {
    i5 = 1 << 32 - (Math_clz32(i2 + -1 | 0) | 0);
    i2 = i2 >>> 0 < 2 ? i2 : i5;
   } else i2 = __ZNSt3__212__next_primeEm(i2) | 0;
   i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
   if (i1 >>> 0 < i3 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm(i4, i1);
  }
 } else __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm(i4, i1);
 return;
}

function _strspn(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i5;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP32[i3 + 16 >> 2] = 0;
 HEAP32[i3 + 20 >> 2] = 0;
 HEAP32[i3 + 24 >> 2] = 0;
 HEAP32[i3 + 28 >> 2] = 0;
 i2 = HEAP8[i1 >> 0] | 0;
 do if (!(i2 << 24 >> 24)) i1 = 0; else {
  if (!(HEAP8[i1 + 1 >> 0] | 0)) {
   i1 = i4;
   while (1) if ((HEAP8[i1 >> 0] | 0) == i2 << 24 >> 24) i1 = i1 + 1 | 0; else break;
   i1 = i1 - i4 | 0;
   break;
  }
  do {
   i7 = i2 & 255;
   i6 = i3 + (i7 >>> 5 << 2) | 0;
   HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 1 << (i7 & 31);
   i1 = i1 + 1 | 0;
   i2 = HEAP8[i1 >> 0] | 0;
  } while (i2 << 24 >> 24 != 0);
  i2 = HEAP8[i4 >> 0] | 0;
  L12 : do if (!(i2 << 24 >> 24)) i1 = i4; else {
   i1 = i4;
   do {
    i7 = i2 & 255;
    if (!(HEAP32[i3 + (i7 >>> 5 << 2) >> 2] & 1 << (i7 & 31))) break L12;
    i1 = i1 + 1 | 0;
    i2 = HEAP8[i1 >> 0] | 0;
   } while (i2 << 24 >> 24 != 0);
  } while (0);
  i1 = i1 - i4 | 0;
 } while (0);
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS5_RS6_EE(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = i2 + 4 | 0;
 i6 = i3 + 4 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  i10 = HEAP32[i6 >> 2] | 0;
  i8 = i10 + -12 | 0;
  i7 = i1 + -12 | 0;
  HEAP32[i8 >> 2] = 0;
  i9 = i10 + -8 | 0;
  HEAP32[i9 >> 2] = 0;
  i10 = i10 + -4 | 0;
  HEAP32[i10 >> 2] = 0;
  HEAP32[i8 >> 2] = HEAP32[i7 >> 2];
  i8 = i1 + -8 | 0;
  HEAP32[i9 >> 2] = HEAP32[i8 >> 2];
  i9 = i1 + -4 | 0;
  HEAP32[i10 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i9 >> 2] = 0;
  HEAP32[i8 >> 2] = 0;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -12;
  i1 = i7;
 }
 i8 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i6 >> 2] = i8;
 i8 = i3 + 8 | 0;
 i10 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i8 >> 2];
 HEAP32[i8 >> 2] = i10;
 i8 = i2 + 8 | 0;
 i10 = i3 + 12 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i10 >> 2] = i9;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 return;
}

function _post_process_prepass(i8, i5, i6, i7, i1, i9, i2) {
 i8 = i8 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i9 = i9 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i10 = 0, i11 = 0;
 i10 = HEAP32[i8 + 432 >> 2] | 0;
 i11 = i10 + 24 | 0;
 i1 = HEAP32[i11 >> 2] | 0;
 if (!i1) {
  i4 = i10 + 16 | 0;
  i2 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i8 + 4 >> 2] | 0) + 28 >> 2] & 31](i8, HEAP32[i10 + 8 >> 2] | 0, HEAP32[i10 + 20 >> 2] | 0, HEAP32[i4 >> 2] | 0, 1) | 0;
  i3 = i10 + 12 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = HEAP32[i11 >> 2] | 0;
 } else {
  i2 = i10 + 12 | 0;
  i4 = i10 + 16 | 0;
  i3 = i2;
  i2 = HEAP32[i2 >> 2] | 0;
 }
 FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[i8 + 452 >> 2] | 0) + 4 >> 2] & 7](i8, i5, i6, i7, i2, i11, HEAP32[i4 >> 2] | 0);
 i2 = HEAP32[i11 >> 2] | 0;
 if (i2 >>> 0 > i1 >>> 0) {
  i2 = i2 - i1 | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i8 + 460 >> 2] | 0) + 4 >> 2] & 31](i8, (HEAP32[i3 >> 2] | 0) + (i1 << 2) | 0, 0, i2);
  HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + i2;
  i2 = HEAP32[i11 >> 2] | 0;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i2 >>> 0 >= i1 >>> 0) {
  i10 = i10 + 20 | 0;
  HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + i1;
  HEAP32[i11 >> 2] = 0;
 }
 return;
}

function __ZN6vision27OrthogonalizePivot8x9Basis5IfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 i3 = i1 + 180 | 0;
 i9 = i1 + 144 | 0;
 i4 = i2 + 180 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i3, i9, i4);
 i8 = i1 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i8, i9, i2 + 216 | 0);
 i1 = i1 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i1, i9, i2 + 252 | 0);
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i3);
 HEAPF32[i6 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i8);
 HEAPF32[i6 + 4 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i1);
 HEAPF32[i6 + 8 >> 2] = d7;
 i1 = __ZN6vision9MaxIndex3IfEEiPKT_(i6) | 0;
 i2 = i6 + (i1 << 2) | 0;
 if (+HEAPF32[i2 >> 2] == 0.0) i1 = 0; else {
  i1 = i1 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_(i3, i3 + (i1 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_(i4, i4 + (i1 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_(i3, i3, 1.0 / +Math_sqrt(+(+HEAPF32[i2 >> 2])));
  i1 = 1;
 }
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE6rehashEm(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 if ((i1 | 0) != 1) {
  if (i1 + -1 & i1) i1 = __ZNSt3__212__next_primeEm(i1) | 0;
 } else i1 = 2;
 i3 = HEAP32[i4 + 4 >> 2] | 0;
 if (i1 >>> 0 <= i3 >>> 0) {
  if (i1 >>> 0 < i3 >>> 0) {
   i2 = ~~+Math_ceil(+(+((HEAP32[i4 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i4 + 16 >> 2])) >>> 0;
   if (i3 >>> 0 > 2 & (i3 + -1 & i3 | 0) == 0) {
    i5 = 1 << 32 - (Math_clz32(i2 + -1 | 0) | 0);
    i2 = i2 >>> 0 < 2 ? i2 : i5;
   } else i2 = __ZNSt3__212__next_primeEm(i2) | 0;
   i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
   if (i1 >>> 0 < i3 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE8__rehashEm(i4, i1);
  }
 } else __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE8__rehashEm(i4, i1);
 return;
}

function _get_vertex(i4, i5, i8, i10, d11, i13, i14) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 i10 = i10 | 0;
 d11 = +d11;
 i13 = i13 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, d3 = 0.0, d6 = 0.0, d7 = 0.0, d9 = 0.0, i12 = 0, i15 = 0, i16 = 0, i17 = 0, d18 = 0.0;
 i2 = HEAP32[i5 + (i10 << 2) >> 2] | 0;
 i16 = HEAP32[i5 + (i8 << 2) >> 2] | 0;
 d6 = +(i2 - i16 | 0);
 i1 = HEAP32[i4 + (i8 << 2) >> 2] | 0;
 i17 = HEAP32[i4 + (i10 << 2) >> 2] | 0;
 d7 = +(i1 - i17 | 0);
 d9 = +((Math_imul(i17, i16) | 0) - (Math_imul(i1, i2) | 0) | 0);
 i2 = i8 + 1 | 0;
 i1 = i2;
 d3 = 0.0;
 while (1) {
  if ((i2 | 0) >= (i10 | 0)) break;
  d18 = d6 * +(HEAP32[i4 + (i2 << 2) >> 2] | 0) + d7 * +(HEAP32[i5 + (i2 << 2) >> 2] | 0) + d9;
  d18 = d18 * d18;
  i17 = d18 > d3;
  i1 = i17 ? i2 : i1;
  i2 = i2 + 1 | 0;
  d3 = i17 ? d18 : d3;
 }
 if (d3 / (d6 * d6 + d7 * d7) > d11) if (((_get_vertex(i4, i5, i8, i1, d11, i13, i14) | 0) >= 0 ? (i12 = HEAP32[i14 >> 2] | 0, (i12 | 0) <= 5) : 0) ? (HEAP32[i13 + (i12 << 2) >> 2] = i1, HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1, (_get_vertex(i4, i5, i1, i10, d11, i13, i14) | 0) >= 0) : 0) i15 = 8; else i1 = -1; else i15 = 8;
 if ((i15 | 0) == 8) i1 = 0;
 return i1 | 0;
}

function _start_pass_1_quant(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i2 + 460 >> 2] | 0;
 HEAP32[i2 + 136 >> 2] = HEAP32[i3 + 16 >> 2];
 HEAP32[i2 + 132 >> 2] = HEAP32[i3 + 20 >> 2];
 L1 : do switch (HEAP32[i2 + 88 >> 2] | 0) {
 case 0:
  {
   i1 = i3 + 4 | 0;
   if ((HEAP32[i2 + 120 >> 2] | 0) == 3) {
    HEAP32[i1 >> 2] = 24;
    break L1;
   } else {
    HEAP32[i1 >> 2] = 25;
    break L1;
   }
  }
 case 1:
  {
   HEAP32[i3 + 4 >> 2] = (HEAP32[i2 + 120 >> 2] | 0) == 3 ? 27 : 26;
   HEAP32[i3 + 48 >> 2] = 0;
   if (!(HEAP32[i3 + 28 >> 2] | 0)) _create_colorindex(i2);
   if (!(HEAP32[i3 + 52 >> 2] | 0)) _create_odither_tables(i2);
   break;
  }
 case 2:
  {
   HEAP32[i3 + 4 >> 2] = 28;
   HEAP32[i3 + 84 >> 2] = 0;
   if (!(HEAP32[i3 + 68 >> 2] | 0)) _alloc_fs_workspace(i2);
   i4 = (HEAP32[i2 + 112 >> 2] << 1) + 4 | 0;
   i2 = i2 + 120 | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (HEAP32[i2 >> 2] | 0)) break L1;
    _jzero_far(HEAP32[i3 + 68 + (i1 << 2) >> 2] | 0, i4);
    i1 = i1 + 1 | 0;
   }
  }
 default:
  {
   i4 = HEAP32[i2 >> 2] | 0;
   HEAP32[i4 + 20 >> 2] = 48;
   FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i2);
  }
 } while (0);
 return;
}

function ___stpncpy(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i5 = i3;
 L1 : do if (!((i5 ^ i2) & 3)) {
  i4 = (i1 | 0) != 0;
  if (i4 & (i5 & 3 | 0) != 0) do {
   i5 = HEAP8[i3 >> 0] | 0;
   HEAP8[i2 >> 0] = i5;
   if (!(i5 << 24 >> 24)) break L1;
   i1 = i1 + -1 | 0;
   i3 = i3 + 1 | 0;
   i2 = i2 + 1 | 0;
   i4 = (i1 | 0) != 0;
  } while (i4 & (i3 & 3 | 0) != 0);
  if (i4) {
   if (HEAP8[i3 >> 0] | 0) {
    L11 : do if (i1 >>> 0 > 3) {
     i4 = i3;
     while (1) {
      i3 = HEAP32[i4 >> 2] | 0;
      if ((i3 & -2139062144 ^ -2139062144) & i3 + -16843009 | 0) {
       i3 = i4;
       break L11;
      }
      HEAP32[i2 >> 2] = i3;
      i1 = i1 + -4 | 0;
      i3 = i4 + 4 | 0;
      i2 = i2 + 4 | 0;
      if (i1 >>> 0 > 3) i4 = i3; else break;
     }
    } while (0);
    i6 = 13;
   }
  } else i1 = 0;
 } else i6 = 13; while (0);
 L17 : do if ((i6 | 0) == 13) if (!i1) i1 = 0; else while (1) {
  i6 = HEAP8[i3 >> 0] | 0;
  HEAP8[i2 >> 0] = i6;
  if (!(i6 << 24 >> 24)) break L17;
  i1 = i1 + -1 | 0;
  i2 = i2 + 1 | 0;
  if (!i1) {
   i1 = 0;
   break;
  } else i3 = i3 + 1 | 0;
 } while (0);
 _memset(i2 | 0, 0, i1 | 0) | 0;
 return i2 | 0;
}

function _setup(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i8 + 8 | 0;
 i5 = i8 + 12 | 0;
 i6 = HEAP32[14274] | 0;
 HEAP32[14274] = i6 + 1;
 HEAP32[i5 >> 2] = i6;
 i6 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i5) | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i6 + 208 >> 2] = i1;
 HEAP32[i6 + 212 >> 2] = i2;
 i9 = Math_imul(i1 << 2, i2) | 0;
 i1 = i6 + 200 | 0;
 HEAP32[i1 >> 2] = i9;
 i9 = _malloc(i9) | 0;
 i2 = i6 + 196 | 0;
 HEAP32[i2 >> 2] = i9;
 i9 = _malloc((HEAP32[i1 >> 2] | 0) / 4 | 0) | 0;
 i3 = i6 + 204 | 0;
 HEAP32[i3 >> 2] = i9;
 i9 = _arPattCreateHandle() | 0;
 HEAP32[i6 + 220 >> 2] = i9;
 if (!i9) _arLog(0, 3, 45252, i8);
 _setCamera(HEAP32[i5 >> 2] | 0, i4) | 0;
 HEAP32[i7 >> 2] = HEAP32[i1 >> 2];
 _arLog(0, 1, 45289, i7);
 _emscripten_asm_const_iiiiiii(0, HEAP32[i6 >> 2] | 0, HEAP32[i2 >> 2] | 0, HEAP32[i1 >> 2] | 0, i6 + 344 | 0, 52416, HEAP32[i3 >> 2] | 0) | 0;
 STACKTOP = i8;
 return HEAP32[i6 >> 2] | 0;
}

function _quantize_ord_dither(i1, i15, i16, i17) {
 i1 = i1 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i17 = i17 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i18 = 0, i19 = 0;
 i18 = HEAP32[i1 + 460 >> 2] | 0;
 i19 = HEAP32[i1 + 120 >> 2] | 0;
 i14 = HEAP32[i1 + 112 >> 2] | 0;
 i7 = i18 + 48 | 0;
 i8 = i18 + 24 | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i17 | 0)) break;
  i9 = i16 + (i3 << 2) | 0;
  _jzero_far(HEAP32[i9 >> 2] | 0, i14);
  i10 = HEAP32[i7 >> 2] | 0;
  i11 = i15 + (i3 << 2) | 0;
  i4 = 0;
  while (1) {
   if ((i4 | 0) >= (i19 | 0)) break;
   i12 = HEAP32[(HEAP32[i8 >> 2] | 0) + (i4 << 2) >> 2] | 0;
   i13 = HEAP32[i18 + 52 + (i4 << 2) >> 2] | 0;
   i1 = (HEAP32[i11 >> 2] | 0) + i4 | 0;
   i2 = i14;
   i5 = HEAP32[i9 >> 2] | 0;
   i6 = 0;
   while (1) {
    if (!i2) break;
    HEAP8[i5 >> 0] = (HEAPU8[i5 >> 0] | 0) + (HEAPU8[i12 + ((HEAP32[i13 + (i10 << 6) + (i6 << 2) >> 2] | 0) + (HEAPU8[i1 >> 0] | 0)) >> 0] | 0);
    i1 = i1 + i19 | 0;
    i2 = i2 + -1 | 0;
    i5 = i5 + 1 | 0;
    i6 = i6 + 1 & 15;
   }
   i4 = i4 + 1 | 0;
  }
  HEAP32[i7 >> 2] = i10 + 1 & 15;
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN6vision5Swap9IfEEvPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = HEAP32[i1 >> 2] | 0;
 i5 = i1 + 4 | 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 i3 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i6;
 i6 = HEAP32[i5 >> 2] | 0;
 i4 = i1 + 8 | 0;
 HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
 i5 = i2 + 8 | 0;
 HEAP32[i3 >> 2] = i6;
 i3 = HEAP32[i4 >> 2] | 0;
 i6 = i1 + 12 | 0;
 HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
 i4 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = i3;
 i5 = HEAP32[i6 >> 2] | 0;
 i3 = i1 + 16 | 0;
 HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
 i6 = i2 + 16 | 0;
 HEAP32[i4 >> 2] = i5;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = i1 + 20 | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 i3 = i2 + 20 | 0;
 HEAP32[i6 >> 2] = i4;
 i6 = HEAP32[i5 >> 2] | 0;
 i4 = i1 + 24 | 0;
 HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
 i5 = i2 + 24 | 0;
 HEAP32[i3 >> 2] = i6;
 i3 = HEAP32[i4 >> 2] | 0;
 i6 = i1 + 28 | 0;
 HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
 i4 = i2 + 28 | 0;
 HEAP32[i5 >> 2] = i3;
 i5 = HEAP32[i6 >> 2] | 0;
 i3 = i1 + 32 | 0;
 HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
 i2 = i2 + 32 | 0;
 HEAP32[i4 >> 2] = i5;
 i1 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i1;
 return;
}

function _h2v1_fancy_upsample(i2, i3, i13, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i13 = i13 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0;
 i12 = HEAP32[i1 >> 2] | 0;
 i11 = i2 + 312 | 0;
 i8 = i3 + 40 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (HEAP32[i11 >> 2] | 0)) break;
  i9 = HEAP32[i13 + (i1 << 2) >> 2] | 0;
  i6 = HEAP32[i12 + (i1 << 2) >> 2] | 0;
  i4 = i9 + 1 | 0;
  i2 = HEAP8[i9 >> 0] | 0;
  HEAP8[i6 >> 0] = i2;
  HEAP8[i6 + 1 >> 0] = (((i2 & 255) * 3 | 0) + 2 + (HEAPU8[i4 >> 0] | 0) | 0) >>> 2;
  i2 = HEAP32[i8 >> 2] | 0;
  i9 = i9 + -1 + i2 | 0;
  i7 = i2 << 1;
  i10 = i6 + -2 | 0;
  i2 = i2 + -2 | 0;
  i5 = i6;
  while (1) {
   i3 = i5 + 2 | 0;
   if (!i2) break;
   i14 = i4 + 1 | 0;
   i15 = (HEAPU8[i4 >> 0] | 0) * 3 | 0;
   HEAP8[i3 >> 0] = ((HEAPU8[i4 + -1 >> 0] | 0) + 1 + i15 | 0) >>> 2;
   HEAP8[i5 + 3 >> 0] = (i15 + 2 + (HEAPU8[i14 >> 0] | 0) | 0) >>> 2;
   i2 = i2 + -1 | 0;
   i4 = i14;
   i5 = i3;
  }
  i15 = HEAP8[i9 >> 0] | 0;
  HEAP8[i10 + i7 >> 0] = ((HEAPU8[i9 + -1 >> 0] | 0) + 1 + ((i15 & 255) * 3 | 0) | 0) >>> 2;
  HEAP8[i6 + -4 + i7 + 3 >> 0] = i15;
  i1 = i1 + 1 | 0;
 }
 return;
}

function _jpeg_finish_decompress(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0;
 i1 = i3 + 20 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 + -205 | 0) >>> 0 < 2 ? (HEAP32[i3 + 64 >> 2] | 0) == 0 : 0) {
  if ((HEAP32[i3 + 140 >> 2] | 0) >>> 0 < (HEAP32[i3 + 116 >> 2] | 0) >>> 0) {
   i2 = HEAP32[i3 >> 2] | 0;
   HEAP32[i2 + 20 >> 2] = 67;
   FUNCTION_TABLE_vi[HEAP32[i2 >> 2] & 255](i3);
  }
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i3 + 420 >> 2] | 0) + 4 >> 2] & 255](i3);
  HEAP32[i1 >> 2] = 210;
 } else i4 = 6;
 L7 : do if ((i4 | 0) == 6) switch (i2 | 0) {
 case 210:
  break L7;
 case 207:
  {
   HEAP32[i1 >> 2] = 210;
   break L7;
  }
 default:
  {
   i1 = HEAP32[i3 >> 2] | 0;
   HEAP32[i1 + 20 >> 2] = 20;
   HEAP32[i1 + 24 >> 2] = i2;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i3 >> 2] >> 2] & 255](i3);
   break L7;
  }
 } while (0);
 i1 = i3 + 436 | 0;
 while (1) {
  i2 = HEAP32[i1 >> 2] | 0;
  if (HEAP32[i2 + 20 >> 2] | 0) {
   i4 = 12;
   break;
  }
  if (!(FUNCTION_TABLE_ii[HEAP32[i2 >> 2] & 127](i3) | 0)) {
   i1 = 0;
   break;
  }
 }
 if ((i4 | 0) == 12) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i3 + 24 >> 2] | 0) + 24 >> 2] & 255](i3);
  _jpeg_abort(i3);
  i1 = 1;
 }
 return i1 | 0;
}

function _icpGetMat_from_Q(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, d4 = 0.0, d5 = 0.0, i6 = 0, i7 = 0, d8 = 0.0;
 d3 = +HEAPF64[i2 + 24 >> 3];
 d5 = +Math_cos(+d3);
 d4 = 1.0 - d5;
 d3 = +Math_sin(+d3);
 d8 = +HEAPF64[i2 >> 3];
 HEAPF64[i1 >> 3] = d5 + d8 * d8 * d4;
 i7 = i2 + 8 | 0;
 i6 = i2 + 16 | 0;
 HEAPF64[i1 + 8 >> 3] = d4 * (+HEAPF64[i2 >> 3] * +HEAPF64[i7 >> 3]) - d3 * +HEAPF64[i6 >> 3];
 HEAPF64[i1 + 16 >> 3] = d4 * (+HEAPF64[i2 >> 3] * +HEAPF64[i6 >> 3]) + d3 * +HEAPF64[i7 >> 3];
 HEAPF64[i1 + 24 >> 3] = +HEAPF64[i2 + 32 >> 3];
 HEAPF64[i1 + 32 >> 3] = d4 * (+HEAPF64[i7 >> 3] * +HEAPF64[i2 >> 3]) + d3 * +HEAPF64[i6 >> 3];
 d8 = +HEAPF64[i7 >> 3];
 HEAPF64[i1 + 40 >> 3] = d5 + d4 * (d8 * d8);
 HEAPF64[i1 + 48 >> 3] = d4 * (+HEAPF64[i7 >> 3] * +HEAPF64[i6 >> 3]) - d3 * +HEAPF64[i2 >> 3];
 HEAPF64[i1 + 56 >> 3] = +HEAPF64[i2 + 40 >> 3];
 HEAPF64[i1 + 64 >> 3] = d4 * (+HEAPF64[i6 >> 3] * +HEAPF64[i2 >> 3]) - d3 * +HEAPF64[i7 >> 3];
 HEAPF64[i1 + 72 >> 3] = d4 * (+HEAPF64[i6 >> 3] * +HEAPF64[i7 >> 3]) + d3 * +HEAPF64[i2 >> 3];
 d3 = +HEAPF64[i6 >> 3];
 HEAPF64[i1 + 80 >> 3] = d5 + d4 * (d3 * d3);
 HEAPF64[i1 + 88 >> 3] = +HEAPF64[i2 + 48 >> 3];
 return;
}

function _do_barray_io(i7, i8, i1) {
 i7 = i7 | 0;
 i8 = i8 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i12 = HEAP32[i8 + 8 >> 2] << 7;
 i13 = i8 + 24 | 0;
 i14 = i8 + 20 | 0;
 i9 = i8 + 16 | 0;
 i10 = i8 + 28 | 0;
 i11 = i8 + 4 | 0;
 i4 = (i1 | 0) == 0;
 i5 = i8 + 48 | 0;
 i6 = i8 + 52 | 0;
 i2 = 0;
 i3 = Math_imul(HEAP32[i13 >> 2] | 0, i12) | 0;
 while (1) {
  i1 = HEAP32[i9 >> 2] | 0;
  if ((i1 | 0) <= (i2 | 0)) break;
  i15 = HEAP32[i14 >> 2] | 0;
  i16 = i1 - i2 | 0;
  i16 = (i15 | 0) < (i16 | 0) ? i15 : i16;
  i1 = (HEAP32[i13 >> 2] | 0) + i2 | 0;
  i15 = (HEAP32[i10 >> 2] | 0) - i1 | 0;
  i15 = (i16 | 0) < (i15 | 0) ? i16 : i15;
  i1 = (HEAP32[i11 >> 2] | 0) - i1 | 0;
  i1 = (i15 | 0) < (i1 | 0) ? i15 : i1;
  if ((i1 | 0) < 1) break;
  i1 = Math_imul(i1, i12) | 0;
  if (i4) FUNCTION_TABLE_viiiii[HEAP32[i5 >> 2] & 31](i7, i5, HEAP32[(HEAP32[i8 >> 2] | 0) + (i2 << 2) >> 2] | 0, i3, i1); else FUNCTION_TABLE_viiiii[HEAP32[i6 >> 2] & 31](i7, i5, HEAP32[(HEAP32[i8 >> 2] | 0) + (i2 << 2) >> 2] | 0, i3, i1);
  i2 = (HEAP32[i14 >> 2] | 0) + i2 | 0;
  i3 = i1 + i3 | 0;
 }
 return;
}

function _do_sarray_io(i7, i8, i1) {
 i7 = i7 | 0;
 i8 = i8 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i11 = HEAP32[i8 + 8 >> 2] | 0;
 i12 = i8 + 24 | 0;
 i13 = i8 + 20 | 0;
 i14 = i8 + 16 | 0;
 i9 = i8 + 28 | 0;
 i10 = i8 + 4 | 0;
 i4 = (i1 | 0) == 0;
 i5 = i8 + 48 | 0;
 i6 = i8 + 52 | 0;
 i2 = 0;
 i3 = Math_imul(HEAP32[i12 >> 2] | 0, i11) | 0;
 while (1) {
  i1 = HEAP32[i14 >> 2] | 0;
  if ((i1 | 0) <= (i2 | 0)) break;
  i15 = HEAP32[i13 >> 2] | 0;
  i16 = i1 - i2 | 0;
  i16 = (i15 | 0) < (i16 | 0) ? i15 : i16;
  i1 = (HEAP32[i12 >> 2] | 0) + i2 | 0;
  i15 = (HEAP32[i9 >> 2] | 0) - i1 | 0;
  i15 = (i16 | 0) < (i15 | 0) ? i16 : i15;
  i1 = (HEAP32[i10 >> 2] | 0) - i1 | 0;
  i1 = (i15 | 0) < (i1 | 0) ? i15 : i1;
  if ((i1 | 0) < 1) break;
  i1 = Math_imul(i1, i11) | 0;
  if (i4) FUNCTION_TABLE_viiiii[HEAP32[i5 >> 2] & 31](i7, i5, HEAP32[(HEAP32[i8 >> 2] | 0) + (i2 << 2) >> 2] | 0, i3, i1); else FUNCTION_TABLE_viiiii[HEAP32[i6 >> 2] & 31](i7, i5, HEAP32[(HEAP32[i8 >> 2] | 0) + (i2 << 2) >> 2] | 0, i3, i1);
  i2 = (HEAP32[i13 >> 2] | 0) + i2 | 0;
  i3 = i1 + i3 | 0;
 }
 return;
}

function _set_wraparound_pointers(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i9 = HEAP32[i1 + 424 >> 2] | 0;
 i12 = HEAP32[i1 + 316 >> 2] | 0;
 i13 = HEAP32[i1 + 36 >> 2] | 0;
 i14 = i9 + 56 | 0;
 i9 = i9 + 60 | 0;
 i10 = i12 + 1 | 0;
 i11 = i12 + 2 | 0;
 i8 = 0;
 i2 = HEAP32[i1 + 216 >> 2] | 0;
 while (1) {
  if ((i8 | 0) >= (i13 | 0)) break;
  i3 = (Math_imul(HEAP32[i2 + 36 >> 2] | 0, HEAP32[i2 + 12 >> 2] | 0) | 0) / (i12 | 0) | 0;
  i4 = HEAP32[(HEAP32[i14 >> 2] | 0) + (i8 << 2) >> 2] | 0;
  i5 = HEAP32[(HEAP32[i9 >> 2] | 0) + (i8 << 2) >> 2] | 0;
  i6 = Math_imul(i3, i10) | 0;
  i7 = Math_imul(i3, i11) | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i3 | 0)) break;
   i16 = i1 + i6 | 0;
   i15 = i1 - i3 | 0;
   HEAP32[i4 + (i15 << 2) >> 2] = HEAP32[i4 + (i16 << 2) >> 2];
   HEAP32[i5 + (i15 << 2) >> 2] = HEAP32[i5 + (i16 << 2) >> 2];
   i15 = i1 + i7 | 0;
   HEAP32[i4 + (i15 << 2) >> 2] = HEAP32[i4 + (i1 << 2) >> 2];
   HEAP32[i5 + (i15 << 2) >> 2] = HEAP32[i5 + (i1 << 2) >> 2];
   i1 = i1 + 1 | 0;
  }
  i8 = i8 + 1 | 0;
  i2 = i2 + 84 | 0;
 }
 return;
}

function _start_pass_dpost(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i3 = HEAP32[i2 + 432 >> 2] | 0;
 L1 : do switch (i1 | 0) {
 case 0:
  {
   if (!(HEAP32[i2 + 84 >> 2] | 0)) {
    HEAP32[i3 + 4 >> 2] = HEAP32[(HEAP32[i2 + 452 >> 2] | 0) + 4 >> 2];
    break L1;
   }
   HEAP32[i3 + 4 >> 2] = 4;
   i1 = i3 + 12 | 0;
   if (!(HEAP32[i1 >> 2] | 0)) {
    i2 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i2 + 4 >> 2] | 0) + 28 >> 2] & 31](i2, HEAP32[i3 + 8 >> 2] | 0, 0, HEAP32[i3 + 16 >> 2] | 0, 1) | 0;
    HEAP32[i1 >> 2] = i2;
   }
   break;
  }
 case 3:
  {
   if (!(HEAP32[i3 + 8 >> 2] | 0)) {
    i1 = HEAP32[i2 >> 2] | 0;
    HEAP32[i1 + 20 >> 2] = 4;
    FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i2);
   }
   HEAP32[i3 + 4 >> 2] = 5;
   break;
  }
 case 2:
  {
   if (!(HEAP32[i3 + 8 >> 2] | 0)) {
    i1 = HEAP32[i2 >> 2] | 0;
    HEAP32[i1 + 20 >> 2] = 4;
    FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i2);
   }
   HEAP32[i3 + 4 >> 2] = 6;
   break;
  }
 default:
  {
   i1 = HEAP32[i2 >> 2] | 0;
   HEAP32[i1 + 20 >> 2] = 4;
   FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i2);
  }
 } while (0);
 HEAP32[i3 + 24 >> 2] = 0;
 HEAP32[i3 + 20 >> 2] = 0;
 return;
}

function _updateCandidate(i4, i5, i6, i2, i7, i8, i9) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i1 = 0, i3 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 do if (!i1) {
  HEAP32[i7 >> 2] = i4;
  HEAP32[i8 >> 2] = i5;
  HEAP32[i9 >> 2] = i6;
  HEAP32[i2 >> 2] = 1;
 } else {
  i3 = 0;
  while (1) {
   if ((i3 | 0) >= (i1 | 0)) break;
   if ((HEAP32[i9 + (i3 << 2) >> 2] | 0) < (i6 | 0)) break;
   i3 = i3 + 1 | 0;
  }
  if ((i3 | 0) == (i1 | 0)) {
   if (i1 >>> 0 >= 3) break;
   HEAP32[i7 + (i1 << 2) >> 2] = i4;
   HEAP32[i8 + (i1 << 2) >> 2] = i5;
   HEAP32[i9 + (i1 << 2) >> 2] = i6;
   HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
   break;
  }
  if ((i1 | 0) == 3) i1 = 2; else HEAP32[i2 >> 2] = i1 + 1;
  while (1) {
   if ((i1 | 0) <= (i3 | 0)) break;
   i2 = i1 + -1 | 0;
   HEAP32[i7 + (i1 << 2) >> 2] = HEAP32[i7 + (i2 << 2) >> 2];
   HEAP32[i8 + (i1 << 2) >> 2] = HEAP32[i8 + (i2 << 2) >> 2];
   HEAP32[i9 + (i1 << 2) >> 2] = HEAP32[i9 + (i2 << 2) >> 2];
   i1 = i2;
  }
  HEAP32[i7 + (i1 << 2) >> 2] = i4;
  HEAP32[i8 + (i1 << 2) >> 2] = i5;
  HEAP32[i9 + (i1 << 2) >> 2] = i6;
 } while (0);
 return;
}

function _icpUpdateMat(i7, i1) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i5 = i9 + 192 | 0;
 i6 = i9 + 96 | 0;
 i8 = i9;
 _icpGetQ_from_S(i5, i1);
 _icpGetMat_from_Q(i6, i5);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  i3 = i7 + (i1 << 5) | 0;
  i4 = i7 + (i1 << 5) + 8 | 0;
  i5 = i7 + (i1 << 5) + 16 | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 4) break;
   HEAPF64[i8 + (i1 << 5) + (i2 << 3) >> 3] = +HEAPF64[i3 >> 3] * +HEAPF64[i6 + (i2 << 3) >> 3] + +HEAPF64[i4 >> 3] * +HEAPF64[i6 + 32 + (i2 << 3) >> 3] + +HEAPF64[i5 >> 3] * +HEAPF64[i6 + 64 + (i2 << 3) >> 3];
   i2 = i2 + 1 | 0;
  }
  i5 = i8 + (i1 << 5) + 24 | 0;
  HEAPF64[i5 >> 3] = +HEAPF64[i7 + (i1 << 5) + 24 >> 3] + +HEAPF64[i5 >> 3];
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 4) break;
   HEAPF64[i7 + (i1 << 5) + (i2 << 3) >> 3] = +HEAPF64[i8 + (i1 << 5) + (i2 << 3) >> 3];
   i2 = i2 + 1 | 0;
  }
  i1 = i1 + 1 | 0;
 }
 STACKTOP = i9;
 return 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i8;
 i7 = i8 + 1 | 0;
 HEAP8[i6 >> 0] = i1;
 i4 = i5 + 11 | 0;
 i1 = HEAP8[i4 >> 0] | 0;
 i2 = i1 << 24 >> 24 < 0;
 if (i2) {
  i3 = HEAP32[i5 + 4 >> 2] | 0;
  i1 = (HEAP32[i5 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i3 = i1 & 255;
  i1 = 10;
 }
 if ((i3 | 0) == (i1 | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEmmmmmm(i5, i1, 1, i1, i1, 0);
  if ((HEAP8[i4 >> 0] | 0) < 0) i2 = 8; else i2 = 7;
 } else if (i2) i2 = 8; else i2 = 7;
 if ((i2 | 0) == 7) {
  HEAP8[i4 >> 0] = i3 + 1;
  i1 = i5;
 } else if ((i2 | 0) == 8) {
  i1 = HEAP32[i5 >> 2] | 0;
  HEAP32[i5 + 4 >> 2] = i3 + 1;
 }
 i5 = i1 + i3 | 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i5, i6);
 HEAP8[i7 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i5 + 1 | 0, i7);
 STACKTOP = i8;
 return;
}

function _icpGetDeltaS(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i7 = i8 + 24 | 0;
 i6 = i8 + 12 | 0;
 i5 = i8;
 HEAP32[i7 + 4 >> 2] = 6;
 HEAP32[i7 + 8 >> 2] = 1;
 HEAP32[i7 >> 2] = i1;
 HEAP32[i6 + 4 >> 2] = i4;
 HEAP32[i6 + 8 >> 2] = 1;
 HEAP32[i6 >> 2] = i2;
 HEAP32[i5 + 4 >> 2] = i4;
 HEAP32[i5 + 8 >> 2] = 6;
 HEAP32[i5 >> 2] = i3;
 i3 = _arMatrixAllocTrans(i5) | 0;
 do if (i3) {
  i2 = _arMatrixAllocMul(i3, i5) | 0;
  if (!i2) {
   _arMatrixFree(i3) | 0;
   i1 = -1;
   break;
  }
  i1 = _arMatrixAllocMul(i3, i6) | 0;
  if (!i1) {
   _arMatrixFree(i3) | 0;
   _arMatrixFree(i2) | 0;
   i1 = -1;
   break;
  }
  if ((_arMatrixSelfInv(i2) | 0) < 0) {
   _arMatrixFree(i3) | 0;
   _arMatrixFree(i2) | 0;
   _arMatrixFree(i1) | 0;
   i1 = -1;
   break;
  } else {
   _arMatrixMul(i7, i2, i1) | 0;
   _arMatrixFree(i3) | 0;
   _arMatrixFree(i2) | 0;
   _arMatrixFree(i1) | 0;
   i1 = 0;
   break;
  }
 } else i1 = -1; while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_block_invokeINS0_2DbEEEPKcS4_S4_RT_(i4, i3, i5) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0;
 L1 : do if ((i3 - i4 | 0) > 12) {
  i2 = 0;
  i1 = i4;
  while (1) {
   if (i2 >>> 0 >= 13) break;
   if ((HEAP8[i1 >> 0] | 0) != (HEAP8[52157 + i2 >> 0] | 0)) {
    i1 = i4;
    break L1;
   }
   i2 = i2 + 1 | 0;
   i1 = i1 + 1 | 0;
  }
  L8 : do if ((i1 | 0) == (i3 | 0)) i1 = i3; else {
   if ((HEAP8[i1 >> 0] | 0) == 95) {
    i2 = i1 + 1 | 0;
    if ((i2 | 0) == (i3 | 0)) {
     i1 = i4;
     break L1;
    }
    if (((HEAP8[i2 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
     i1 = i4;
     break L1;
    }
    i1 = i1 + 2 | 0;
   }
   while (1) {
    if ((i1 | 0) == (i3 | 0)) {
     i1 = i3;
     break L8;
    }
    if (((HEAP8[i1 >> 0] | 0) + -48 | 0) >>> 0 >= 10) break L8;
    i1 = i1 + 1 | 0;
   }
  } while (0);
  i2 = HEAP32[i5 + 4 >> 2] | 0;
  if ((HEAP32[i5 >> 2] | 0) != (i2 | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i2 + -24 | 0, 0, 52171) | 0; else i1 = i4;
 } else i1 = i4; while (0);
 return i1 | 0;
}

function _arMatrixMulf(i1, i9, i11) {
 i1 = i1 | 0;
 i9 = i9 | 0;
 i11 = i11 | 0;
 var i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i12 = 0, i13 = 0, d14 = 0.0;
 i12 = HEAP32[i9 + 8 >> 2] | 0;
 L1 : do if (((i12 | 0) == (HEAP32[i11 + 4 >> 2] | 0) ? (i13 = HEAP32[i1 + 4 >> 2] | 0, (i13 | 0) == (HEAP32[i9 + 4 >> 2] | 0)) : 0) ? (i10 = HEAP32[i1 + 8 >> 2] | 0, (i10 | 0) == (HEAP32[i11 + 8 >> 2] | 0)) : 0) {
  i1 = HEAP32[i1 >> 2] | 0;
  i7 = 0;
  while (1) {
   if ((i7 | 0) >= (i13 | 0)) {
    i1 = 0;
    break L1;
   }
   i8 = Math_imul(i7, i12) | 0;
   i6 = 0;
   while (1) {
    if ((i6 | 0) >= (i10 | 0)) break;
    HEAPF32[i1 >> 2] = 0.0;
    i2 = (HEAP32[i11 >> 2] | 0) + (i6 << 2) | 0;
    i3 = (HEAP32[i9 >> 2] | 0) + (i8 << 2) | 0;
    i4 = 0;
    d5 = 0.0;
    while (1) {
     if ((i4 | 0) >= (i12 | 0)) break;
     d14 = d5 + +HEAPF32[i3 >> 2] * +HEAPF32[i2 >> 2];
     HEAPF32[i1 >> 2] = d14;
     i2 = i2 + (i10 << 2) | 0;
     i3 = i3 + 4 | 0;
     i4 = i4 + 1 | 0;
     d5 = d14;
    }
    i6 = i6 + 1 | 0;
    i1 = i1 + 4 | 0;
   }
   i7 = i7 + 1 | 0;
  }
 } else i1 = -1; while (0);
 return i1 | 0;
}

function _arMatrixMul(i1, i9, i11) {
 i1 = i1 | 0;
 i9 = i9 | 0;
 i11 = i11 | 0;
 var i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i12 = 0, i13 = 0, d14 = 0.0;
 i12 = HEAP32[i9 + 8 >> 2] | 0;
 L1 : do if (((i12 | 0) == (HEAP32[i11 + 4 >> 2] | 0) ? (i13 = HEAP32[i1 + 4 >> 2] | 0, (i13 | 0) == (HEAP32[i9 + 4 >> 2] | 0)) : 0) ? (i10 = HEAP32[i1 + 8 >> 2] | 0, (i10 | 0) == (HEAP32[i11 + 8 >> 2] | 0)) : 0) {
  i1 = HEAP32[i1 >> 2] | 0;
  i7 = 0;
  while (1) {
   if ((i7 | 0) >= (i13 | 0)) {
    i1 = 0;
    break L1;
   }
   i8 = Math_imul(i7, i12) | 0;
   i6 = 0;
   while (1) {
    if ((i6 | 0) >= (i10 | 0)) break;
    HEAPF64[i1 >> 3] = 0.0;
    i2 = (HEAP32[i11 >> 2] | 0) + (i6 << 3) | 0;
    i3 = (HEAP32[i9 >> 2] | 0) + (i8 << 3) | 0;
    i4 = 0;
    d5 = 0.0;
    while (1) {
     if ((i4 | 0) >= (i12 | 0)) break;
     d14 = d5 + +HEAPF64[i3 >> 3] * +HEAPF64[i2 >> 3];
     HEAPF64[i1 >> 3] = d14;
     i2 = i2 + (i10 << 3) | 0;
     i3 = i3 + 8 | 0;
     i4 = i4 + 1 | 0;
     d5 = d14;
    }
    i6 = i6 + 1 | 0;
    i1 = i1 + 8 | 0;
   }
   i7 = i7 + 1 | 0;
  }
 } else i1 = -1; while (0);
 return i1 | 0;
}

function _skip_variable(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i5 = i4 + 24 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i7 = i6 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 if (!i1) if (!(FUNCTION_TABLE_ii[HEAP32[i6 + 12 >> 2] & 127](i4) | 0)) i1 = 0; else {
  i1 = HEAP32[i7 >> 2] | 0;
  i2 = 4;
 } else i2 = 4;
 do if ((i2 | 0) == 4) {
  i2 = HEAP32[i6 >> 2] | 0;
  i1 = i1 + -1 | 0;
  i3 = i2 + 1 | 0;
  i2 = (HEAPU8[i2 >> 0] | 0) << 8;
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i6 + 12 >> 2] & 127](i4) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i7 >> 2] | 0;
   i3 = HEAP32[i6 >> 2] | 0;
  }
  i8 = i2 | (HEAPU8[i3 >> 0] | 0);
  i2 = i8 + -2 | 0;
  i9 = HEAP32[i4 >> 2] | 0;
  HEAP32[i9 + 20 >> 2] = 91;
  HEAP32[i9 + 24 >> 2] = HEAP32[i4 + 416 >> 2];
  HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] = i2;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] & 63](i4, 1);
  HEAP32[i6 >> 2] = i3 + 1;
  HEAP32[i7 >> 2] = i1 + -1;
  if (i8 >>> 0 > 2) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] & 63](i4, i2);
   i1 = 1;
  } else i1 = 1;
 } while (0);
 return i1 | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = ((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 2) + 1 | 0;
 i6 = __ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] | 0) - i8 | 0;
  i9 = i10 >> 1;
  __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_(i3, i10 >> 2 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, (HEAP32[i4 >> 2] | 0) - i8 >> 2, i1 + 8 | 0);
  i6 = i3 + 8 | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i6 >> 2] = i5 + 4;
  __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE(i1, i3);
  __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function _getTransMatMultiSquareRobust(i1, i3) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i4;
 HEAP32[i2 >> 2] = i1;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0) {
  i2 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0;
  i1 = HEAP32[i2 + 328 >> 2] | 0;
  if ((i3 | 0) < 0 ? 1 : (HEAP32[i2 + 332 >> 2] | 0) - i1 >> 3 >>> 0 <= i3 >>> 0) {
   i1 = HEAP32[3414] | 0;
   break;
  } else {
   i1 = HEAP32[i1 + (i3 << 3) + 4 >> 2] | 0;
   i3 = HEAP32[i2 + 216 >> 2] | 0;
   +_arGetTransMatMultiSquareRobust(HEAP32[i2 + 228 >> 2] | 0, i3 + 48 | 0, HEAP32[i3 + 44 >> 2] | 0, i1);
   _matrixCopy(i1 + 8 | 0, 52416);
   i1 = 0;
   break;
  }
 } else i1 = HEAP32[3413] | 0; while (0);
 STACKTOP = i4;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i6, i4, i5) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i9;
 i8 = i6 + 11 | 0;
 i1 = HEAP8[i8 >> 0] | 0;
 i2 = i1 << 24 >> 24 < 0;
 if (i2) {
  i3 = HEAP32[i6 + 4 >> 2] | 0;
  i1 = (HEAP32[i6 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i3 = i1 & 255;
  i1 = 10;
 }
 if ((i1 - i3 | 0) >>> 0 >= i5 >>> 0) {
  if (i5 | 0) {
   if (i2) i2 = HEAP32[i6 >> 2] | 0; else i2 = i6;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm(i2 + i3 | 0, i4, i5) | 0;
   i1 = i3 + i5 | 0;
   if ((HEAP8[i8 >> 0] | 0) < 0) HEAP32[i6 + 4 >> 2] = i1; else HEAP8[i8 >> 0] = i1;
   HEAP8[i7 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i2 + i1 | 0, i7);
  }
 } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc(i6, i1, i3 + i5 - i1 | 0, i3, i3, 0, i5, i4);
 STACKTOP = i9;
 return i6 | 0;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE21__push_back_slow_pathIRKhEEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i7;
 i4 = i1 + 4 | 0;
 i5 = (HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) + 1 | 0;
 i6 = __ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] | 0) - i8 | 0;
  i9 = i10 << 1;
  __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEEC2EmmS3_(i3, i10 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, (HEAP32[i4 >> 2] | 0) - i8 | 0, i1 + 8 | 0);
  i6 = i3 + 8 | 0;
  HEAP8[HEAP32[i6 >> 2] >> 0] = HEAP8[i2 >> 0] | 0;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
  __ZNSt3__26vectorIhNS_9allocatorIhEEE26__swap_out_circular_bufferERNS_14__split_bufferIhRS2_EE(i1, i3);
  __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEED2Ev(i3);
  STACKTOP = i7;
  return;
 }
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i6, i1) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i9;
 i8 = i9 + 4 | 0;
 HEAP32[i7 >> 2] = i1;
 i2 = i6 + 8 | 0;
 i5 = i2 + 3 | 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i3 = i1 << 24 >> 24 < 0;
 if (i3) {
  i4 = HEAP32[i6 + 4 >> 2] | 0;
  i1 = (HEAP32[i2 >> 2] & 2147483647) + -1 | 0;
 } else {
  i4 = i1 & 255;
  i1 = 1;
 }
 if ((i4 | 0) == (i1 | 0)) {
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm(i6, i1, 1, i1, i1, 0, 0);
  if ((HEAP8[i5 >> 0] | 0) < 0) i2 = 8; else i2 = 7;
 } else if (i3) i2 = 8; else i2 = 7;
 if ((i2 | 0) == 7) {
  HEAP8[i5 >> 0] = i4 + 1;
  i1 = i6;
 } else if ((i2 | 0) == 8) {
  i1 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 + 4 >> 2] = i4 + 1;
 }
 i6 = i1 + (i4 << 2) | 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw(i6, i7);
 HEAP32[i8 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw(i6 + 4 | 0, i8);
 STACKTOP = i9;
 return;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEEC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 i2 = i1 + 64 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i1 + 88 >> 2] = 1065353216;
 __ZN6vision18BinomialPyramid32fC2Ev(i1 + 92 | 0);
 i2 = i1 + 160 | 0;
 __ZN6vision25DoGScaleInvariantDetectorC2Ev(i2);
 __ZN6vision14FREAKExtractorC2Ev(i1 + 316 | 0);
 __ZN6vision20BinaryFeatureMatcherILi96EEC2Ev(i1 + 636 | 0);
 __ZN6vision21HoughSimilarityVotingC2Ev(i1 + 652 | 0);
 __ZN6vision16RobustHomographyIfEC2Efiii(i1 + 788 | 0, .009999999776482582, 1024, 1064, 50);
 __ZN6vision25DoGScaleInvariantDetector21setLaplacianThresholdEf(i2, 3.0);
 __ZN6vision25DoGScaleInvariantDetector16setEdgeThresholdEf(i2, 4.0);
 __ZN6vision25DoGScaleInvariantDetector22setMaxNumFeaturePointsEm(i2, 500);
 HEAPF32[i1 + 4 >> 2] = 3.0;
 HEAP32[i1 >> 2] = 8;
 HEAP8[i1 + 8 >> 0] = 1;
 return;
}

function _getTransMatMultiSquare(i1, i3) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i4;
 HEAP32[i2 >> 2] = i1;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0) {
  i2 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0;
  i1 = HEAP32[i2 + 328 >> 2] | 0;
  if ((i3 | 0) < 0 ? 1 : (HEAP32[i2 + 332 >> 2] | 0) - i1 >> 3 >>> 0 <= i3 >>> 0) {
   i1 = HEAP32[3414] | 0;
   break;
  } else {
   i1 = HEAP32[i1 + (i3 << 3) + 4 >> 2] | 0;
   i3 = HEAP32[i2 + 216 >> 2] | 0;
   +_arGetTransMatMultiSquare(HEAP32[i2 + 228 >> 2] | 0, i3 + 48 | 0, HEAP32[i3 + 44 >> 2] | 0, i1);
   _matrixCopy(i1 + 8 | 0, 52416);
   i1 = 0;
   break;
  }
 } else i1 = HEAP32[3413] | 0; while (0);
 STACKTOP = i4;
 return i1 | 0;
}

function _arSetPixelFormat(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i5;
 L1 : do if (i1) {
  i2 = i1 + 4 | 0;
  if ((HEAP32[i2 >> 2] | 0) != (i4 | 0)) {
   if (i4 >>> 0 >= 15) {
    HEAP32[i3 >> 2] = i4;
    _arLog(0, 3, 17721, i3);
    i1 = -1;
    break;
   }
   HEAP32[i2 >> 2] = i4;
   i2 = _arUtilGetPixelSize(i4) | 0;
   HEAP32[i1 + 8 >> 2] = i2;
   i1 = i1 + 24 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (!(28704 >>> (i4 & 32767) & 1)) switch (i2 | 0) {
   case 1:
    {
     HEAP32[i1 >> 2] = 4;
     i1 = 0;
     break L1;
    }
   case 4:
    {
     HEAP32[i1 >> 2] = 3;
     i1 = 0;
     break L1;
    }
   default:
    {
     i1 = 0;
     break L1;
    }
   } else switch (i2 | 0) {
   case 0:
    {
     HEAP32[i1 >> 2] = 1;
     i1 = 0;
     break L1;
    }
   case 3:
    {
     HEAP32[i1 >> 2] = 4;
     i1 = 0;
     break L1;
    }
   default:
    {
     i1 = 0;
     break L1;
    }
   }
  } else i1 = 0;
 } else i1 = -1; while (0);
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i2 + 4 >> 2] | 0;
 L1 : do if (i5) {
  i6 = i5 + -1 | 0;
  i7 = (i6 & i5 | 0) == 0;
  if (!i7) if (i4 >>> 0 < i5 >>> 0) i3 = i4; else i3 = (i4 >>> 0) % (i5 >>> 0) | 0; else i3 = i6 & i4;
  i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (i1) while (1) {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = 0;
    break L1;
   }
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if ((i2 | 0) == (i4 | 0)) {
    if ((HEAP32[i1 + 8 >> 2] | 0) == (i4 | 0)) break L1;
   } else {
    if (!i7) {
     if (i2 >>> 0 >= i5 >>> 0) i2 = (i2 >>> 0) % (i5 >>> 0) | 0;
    } else i2 = i2 & i6;
    if ((i2 | 0) != (i3 | 0)) {
     i1 = 0;
     break L1;
    }
   }
  } else i1 = 0;
 } else i1 = 0; while (0);
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_12DbC2ILm4096EEERNS0_5arenaIXT_EEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EEC2ERNS0_5arenaILm4096EEE(i4, i2);
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = HEAP32[i4 >> 2];
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE(i4, i2);
 __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEC2EmRKS6_RKS7_(i1 + 16 | 0, i4);
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE(i4, i2);
 __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEEC2EmRKS8_RKS9_(i1 + 32 | 0, i4);
 STACKTOP = i3;
 return;
}

function _wcrtomb(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 do if (i1) {
  if (i2 >>> 0 < 128) {
   HEAP8[i1 >> 0] = i2;
   i1 = 1;
   break;
  }
  i3 = (___pthread_self_306() | 0) + 188 | 0;
  if (!(HEAP32[HEAP32[i3 >> 2] >> 2] | 0)) if ((i2 & -128 | 0) == 57216) {
   HEAP8[i1 >> 0] = i2;
   i1 = 1;
   break;
  } else {
   i1 = ___errno_location() | 0;
   HEAP32[i1 >> 2] = 84;
   i1 = -1;
   break;
  }
  if (i2 >>> 0 < 2048) {
   HEAP8[i1 >> 0] = i2 >>> 6 | 192;
   HEAP8[i1 + 1 >> 0] = i2 & 63 | 128;
   i1 = 2;
   break;
  }
  if (i2 >>> 0 < 55296 | (i2 & -8192 | 0) == 57344) {
   HEAP8[i1 >> 0] = i2 >>> 12 | 224;
   HEAP8[i1 + 1 >> 0] = i2 >>> 6 & 63 | 128;
   HEAP8[i1 + 2 >> 0] = i2 & 63 | 128;
   i1 = 3;
   break;
  }
  if ((i2 + -65536 | 0) >>> 0 < 1048576) {
   HEAP8[i1 >> 0] = i2 >>> 18 | 240;
   HEAP8[i1 + 1 >> 0] = i2 >>> 12 & 63 | 128;
   HEAP8[i1 + 2 >> 0] = i2 >>> 6 & 63 | 128;
   HEAP8[i1 + 3 >> 0] = i2 & 63 | 128;
   i1 = 4;
   break;
  } else {
   i1 = ___errno_location() | 0;
   HEAP32[i1 >> 2] = 84;
   i1 = -1;
   break;
  }
 } else i1 = 1; while (0);
 return i1 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwm(i7, i5, i6) {
 i7 = i7 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i8 = 0, i9 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i10;
 i2 = i7 + 8 | 0;
 i9 = i2 + 3 | 0;
 i1 = HEAP8[i9 >> 0] | 0;
 i4 = i1 << 24 >> 24 < 0;
 if (i4) {
  i3 = HEAP32[i7 + 4 >> 2] | 0;
  i1 = (HEAP32[i2 >> 2] & 2147483647) + -1 | 0;
 } else {
  i3 = i1 & 255;
  i1 = 1;
 }
 if ((i1 - i3 | 0) >>> 0 >= i6 >>> 0) {
  if (i6 | 0) {
   if (i4) i2 = HEAP32[i7 >> 2] | 0; else i2 = i7;
   __ZNSt3__211char_traitsIwE4copyEPwPKwm(i2 + (i3 << 2) | 0, i5, i6) | 0;
   i1 = i3 + i6 | 0;
   if ((HEAP8[i9 >> 0] | 0) < 0) HEAP32[i7 + 4 >> 2] = i1; else HEAP8[i9 >> 0] = i1;
   HEAP32[i8 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i2 + (i1 << 2) | 0, i8);
  }
 } else __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw(i7, i1, i3 + i6 - i1 | 0, i3, i3, 0, i6, i5);
 STACKTOP = i10;
 return i7 | 0;
}

function _arSetLabelingThreshMode(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i8 + 8 | 0;
 i4 = i8;
 if (i5) {
  i6 = i5 + 7062388 | 0;
  if ((HEAP32[i6 >> 2] | 0) != (i1 | 0)) {
   i2 = i5 + 7062408 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (i3 | 0) {
    _arImageProcFinal(i3);
    HEAP32[i2 >> 2] = 0;
   }
   switch (i1 | 0) {
   case 3:
   case 2:
   case 1:
    {
     i4 = _arImageProcInit(HEAP32[i5 + 36 >> 2] | 0, HEAP32[i5 + 40 >> 2] | 0) | 0;
     HEAP32[i2 >> 2] = i4;
     break;
    }
   case 4:
    {
     HEAP32[i5 + 7062404 >> 2] = 1;
     HEAP32[i5 + 7062400 >> 2] = 1;
     i1 = 4;
     break;
    }
   case 0:
    break;
   default:
    {
     _arLog(0, 3, 17552, i4);
     i1 = 0;
    }
   }
   HEAP32[i6 >> 2] = i1;
   if ((HEAP32[i5 >> 2] | 0) == 1) {
    HEAP32[i7 >> 2] = HEAP32[16 + (i1 << 2) >> 2];
    _arLog(0, 3, 17626, i7);
    i1 = 0;
   } else i1 = 0;
  } else i1 = 0;
 } else i1 = -1;
 STACKTOP = i8;
 return i1 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji(i1, i4, i5, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i8;
 do if ((i1 | 0) == (i4 | 0)) {
  HEAP32[i5 >> 2] = 4;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
   break;
  }
  i7 = ___errno_location() | 0;
  i7 = HEAP32[i7 >> 2] | 0;
  i3 = ___errno_location() | 0;
  HEAP32[i3 >> 2] = 0;
  i1 = _strtoull_l(i1, i6, i2, __ZNSt3__26__clocEv() | 0) | 0;
  i2 = getTempRet0() | 0;
  i3 = ___errno_location() | 0;
  i3 = HEAP32[i3 >> 2] | 0;
  if (!i3) {
   i9 = ___errno_location() | 0;
   HEAP32[i9 >> 2] = i7;
  }
  do if ((HEAP32[i6 >> 2] | 0) == (i4 | 0)) if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i1 >>> 0 > 65535 | (i3 | 0) == 34) {
   HEAP32[i5 >> 2] = 4;
   i1 = -1;
   break;
  } else {
   i1 = i1 & 65535;
   break;
  } else {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
  } while (0);
 } while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function ___fwritex(i7, i2, i6) {
 i7 = i7 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i1 = i6 + 16 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (!i3) if (!(___towrite(i6) | 0)) {
  i3 = HEAP32[i1 >> 2] | 0;
  i4 = 5;
 } else i1 = 0; else i4 = 5;
 L5 : do if ((i4 | 0) == 5) {
  i8 = i6 + 20 | 0;
  i5 = HEAP32[i8 >> 2] | 0;
  i1 = i5;
  if ((i3 - i5 | 0) >>> 0 < i2 >>> 0) {
   i1 = FUNCTION_TABLE_iiii[HEAP32[i6 + 36 >> 2] & 63](i6, i7, i2) | 0;
   break;
  }
  L10 : do if ((HEAP8[i6 + 75 >> 0] | 0) < 0 | (i2 | 0) == 0) {
   i4 = 0;
   i3 = i7;
  } else {
   i5 = i2;
   while (1) {
    i3 = i5 + -1 | 0;
    if ((HEAP8[i7 + i3 >> 0] | 0) == 10) break;
    if (!i3) {
     i4 = 0;
     i3 = i7;
     break L10;
    } else i5 = i3;
   }
   i1 = FUNCTION_TABLE_iiii[HEAP32[i6 + 36 >> 2] & 63](i6, i7, i5) | 0;
   if (i1 >>> 0 < i5 >>> 0) break L5;
   i4 = i5;
   i3 = i7 + i5 | 0;
   i2 = i2 - i5 | 0;
   i1 = HEAP32[i8 >> 2] | 0;
  } while (0);
  _memcpy(i1 | 0, i3 | 0, i2 | 0) | 0;
  HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i2;
  i1 = i4 + i2 | 0;
 } while (0);
 return i1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcm(i6, i7, i8) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i9;
 i5 = i6 + 11 | 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i2 = i1 << 24 >> 24 < 0;
 if (i2) i3 = (HEAP32[i6 + 8 >> 2] & 2147483647) + -1 | 0; else i3 = 10;
 do if (i3 >>> 0 >= i8 >>> 0) {
  if (i2) i1 = HEAP32[i6 >> 2] | 0; else i1 = i6;
  __ZNSt3__211char_traitsIcE4moveEPcPKcm(i1, i7, i8) | 0;
  HEAP8[i4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i1 + i8 | 0, i4);
  if ((HEAP8[i5 >> 0] | 0) < 0) {
   HEAP32[i6 + 4 >> 2] = i8;
   break;
  } else {
   HEAP8[i5 >> 0] = i8;
   break;
  }
 } else {
  if (i2) i1 = HEAP32[i6 + 4 >> 2] | 0; else i1 = i1 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc(i6, i3, i8 - i3 | 0, i1, 0, i1, i8, i7);
 } while (0);
 STACKTOP = i9;
 return;
}

function _fread(i2, i7, i1, i8) {
 i2 = i2 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i8 = i8 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0;
 i9 = Math_imul(i1, i7) | 0;
 i1 = (i7 | 0) == 0 ? 0 : i1;
 if ((HEAP32[i8 + 76 >> 2] | 0) > -1) i6 = ___lockfile(i8) | 0; else i6 = 0;
 i3 = i8 + 74 | 0;
 i4 = HEAP8[i3 >> 0] | 0;
 HEAP8[i3 >> 0] = i4 + 255 | i4;
 i3 = i8 + 4 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = (HEAP32[i8 + 8 >> 2] | 0) - i4 | 0;
 if ((i5 | 0) > 0) {
  i5 = i5 >>> 0 < i9 >>> 0 ? i5 : i9;
  _memcpy(i2 | 0, i4 | 0, i5 | 0) | 0;
  HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i5;
  i3 = i9 - i5 | 0;
  i2 = i2 + i5 | 0;
 } else i3 = i9;
 L7 : do if (!i3) i10 = 13; else {
  i5 = i8 + 32 | 0;
  while (1) {
   if (___toread(i8) | 0) break;
   i4 = FUNCTION_TABLE_iiii[HEAP32[i5 >> 2] & 63](i8, i2, i3) | 0;
   if ((i4 + 1 | 0) >>> 0 < 2) break;
   i3 = i3 - i4 | 0;
   if (!i3) {
    i10 = 13;
    break L7;
   } else i2 = i2 + i4 | 0;
  }
  if (i6 | 0) ___unlockfile(i8);
  i1 = ((i9 - i3 | 0) >>> 0) / (i7 >>> 0) | 0;
 } while (0);
 if ((i10 | 0) == 13) if (i6) ___unlockfile(i8);
 return i1 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji(i1, i4, i7, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i9;
 do if ((i1 | 0) == (i4 | 0)) {
  HEAP32[i7 >> 2] = 4;
  i2 = 0;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i7 >> 2] = 4;
   i2 = 0;
   i1 = 0;
   break;
  }
  i6 = ___errno_location() | 0;
  i6 = HEAP32[i6 >> 2] | 0;
  i3 = ___errno_location() | 0;
  HEAP32[i3 >> 2] = 0;
  i1 = _strtoull_l(i1, i5, i2, __ZNSt3__26__clocEv() | 0) | 0;
  i2 = getTempRet0() | 0;
  i3 = ___errno_location() | 0;
  i3 = HEAP32[i3 >> 2] | 0;
  if (!i3) {
   i10 = ___errno_location() | 0;
   HEAP32[i10 >> 2] = i6;
  }
  if ((HEAP32[i5 >> 2] | 0) == (i4 | 0)) {
   if ((i3 | 0) == 34) {
    i1 = -1;
    i2 = -1;
    i8 = 8;
   }
  } else {
   i1 = 0;
   i2 = 0;
   i8 = 8;
  }
  if ((i8 | 0) == 8) HEAP32[i7 >> 2] = 4;
 } while (0);
 setTempRet0(i2 | 0);
 STACKTOP = i9;
 return i1 | 0;
}

function _jpeg_read_scanlines(i5, i6, i7) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i9;
 i1 = HEAP32[i5 + 20 >> 2] | 0;
 if ((i1 | 0) != 205) {
  i4 = HEAP32[i5 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 20;
  HEAP32[i4 + 24 >> 2] = i1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i5 >> 2] >> 2] & 255](i5);
 }
 i1 = i5 + 140 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i3 = HEAP32[i5 + 116 >> 2] | 0;
 if (i2 >>> 0 < i3 >>> 0) {
  i4 = HEAP32[i5 + 8 >> 2] | 0;
  if (i4 | 0) {
   HEAP32[i4 + 4 >> 2] = i2;
   HEAP32[i4 + 8 >> 2] = i3;
   FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i5);
  }
  HEAP32[i8 >> 2] = 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i5 + 424 >> 2] | 0) + 4 >> 2] & 31](i5, i6, i8, i7);
  i8 = HEAP32[i8 >> 2] | 0;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + i8;
  i1 = i8;
 } else {
  i1 = HEAP32[i5 >> 2] | 0;
  HEAP32[i1 + 20 >> 2] = 123;
  FUNCTION_TABLE_vii[HEAP32[i1 + 4 >> 2] & 63](i5, -1);
  i1 = 0;
 }
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i8;
 i7 = i8 + 1 | 0;
 HEAP8[i6 >> 0] = i1;
 i4 = i5 + 11 | 0;
 i1 = HEAP8[i4 >> 0] | 0;
 i2 = i1 << 24 >> 24 < 0;
 if (i2) {
  i3 = HEAP32[i5 + 4 >> 2] | 0;
  i1 = (HEAP32[i5 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i3 = i1 & 255;
  i1 = 10;
 }
 if ((i3 | 0) == (i1 | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(i5, i1, 1, i1, i1, 0, 0);
  if ((HEAP8[i4 >> 0] | 0) < 0) i2 = 8; else i2 = 7;
 } else if (i2) i2 = 8; else i2 = 7;
 if ((i2 | 0) == 7) {
  HEAP8[i4 >> 0] = i3 + 1;
  i1 = i5;
 } else if ((i2 | 0) == 8) {
  i1 = HEAP32[i5 >> 2] | 0;
  HEAP32[i5 + 4 >> 2] = i3 + 1;
 }
 i5 = i1 + i3 | 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i5, i6);
 HEAP8[i7 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i5 + 1 | 0, i7);
 STACKTOP = i8;
 return;
}

function __ZNSt3__216__selection_sortIRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEvT0_S9_T_(i10, i1, i2) {
 i10 = i10 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i7 = HEAP32[i1 >> 2] | 0;
 i8 = i7 + -8 | 0;
 i9 = HEAP32[i10 >> 2] | 0;
 while (1) {
  if ((i9 | 0) == (i8 | 0)) break;
  L4 : do if ((i9 | 0) == (i7 | 0)) i1 = i7; else {
   i1 = i9;
   while (1) {
    i5 = i1 + 4 | 0;
    i2 = i1;
    while (1) {
     i6 = i2 + 8 | 0;
     if ((i6 | 0) == (i7 | 0)) break L4;
     d3 = +HEAPF32[i1 >> 2];
     d4 = +HEAPF32[i6 >> 2];
     if (d3 < d4) break;
     if (!(d4 < d3) ? (HEAP32[i5 >> 2] | 0) >>> 0 < (HEAP32[i2 + 12 >> 2] | 0) >>> 0 : 0) break;
     i2 = i6;
    }
    i1 = i6;
   }
  } while (0);
  if ((i1 | 0) != (i9 | 0)) {
   i2 = HEAP32[i9 >> 2] | 0;
   HEAP32[i9 >> 2] = HEAP32[i1 >> 2];
   HEAP32[i1 >> 2] = i2;
   i2 = i9 + 4 | 0;
   i6 = i1 + 4 | 0;
   i5 = HEAP32[i2 >> 2] | 0;
   HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i6 >> 2] = i5;
  }
  i6 = i9 + 8 | 0;
  HEAP32[i10 >> 2] = i6;
  i9 = i6;
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE14__erase_uniqueIiEEmRKT_(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i5 + 4 | 0;
 i4 = i5;
 i1 = __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(i3, i1) | 0;
 if (!i1) i1 = 0; else {
  HEAP32[i4 >> 2] = i1;
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(i3, i2) | 0;
  i1 = 1;
 }
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwm(i7, i8, i9) {
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i10;
 i1 = i7 + 8 | 0;
 i6 = i1 + 3 | 0;
 i3 = HEAP8[i6 >> 0] | 0;
 i4 = i3 << 24 >> 24 < 0;
 if (i4) i2 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i2 = 1;
 do if (i2 >>> 0 >= i9 >>> 0) {
  if (i4) i1 = HEAP32[i7 >> 2] | 0; else i1 = i7;
  __ZNSt3__211char_traitsIwE4moveEPwPKwm(i1, i8, i9) | 0;
  HEAP32[i5 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw(i1 + (i9 << 2) | 0, i5);
  if ((HEAP8[i6 >> 0] | 0) < 0) {
   HEAP32[i7 + 4 >> 2] = i9;
   break;
  } else {
   HEAP8[i6 >> 0] = i9;
   break;
  }
 } else {
  if (i4) i1 = HEAP32[i7 + 4 >> 2] | 0; else i1 = i3 & 255;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw(i7, i2, i9 - i2 | 0, i1, 0, i1, i9, i8);
 } while (0);
 STACKTOP = i10;
 return i7 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i2 + 4 >> 2] | 0;
 L1 : do if (i5) {
  i6 = i5 + -1 | 0;
  i7 = (i6 & i5 | 0) == 0;
  if (!i7) if (i4 >>> 0 < i5 >>> 0) i3 = i4; else i3 = (i4 >>> 0) % (i5 >>> 0) | 0; else i3 = i6 & i4;
  i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (i1) while (1) {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = 0;
    break L1;
   }
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if ((i2 | 0) == (i4 | 0)) {
    if ((HEAP32[i1 + 8 >> 2] | 0) == (i4 | 0)) break L1;
   } else {
    if (!i7) {
     if (i2 >>> 0 >= i5 >>> 0) i2 = (i2 >>> 0) % (i5 >>> 0) | 0;
    } else i2 = i2 & i6;
    if ((i2 | 0) != (i3 | 0)) {
     i1 = 0;
     break L1;
    }
   }
  } else i1 = 0;
 } else i1 = 0; while (0);
 return i1 | 0;
}

function ___stdio_read(i5, i6, i7) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i8 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i1 = i9 + 16 | 0;
 i4 = i9;
 HEAP32[i4 >> 2] = i6;
 i2 = i4 + 4 | 0;
 i8 = i5 + 48 | 0;
 i10 = HEAP32[i8 >> 2] | 0;
 HEAP32[i2 >> 2] = i7 - ((i10 | 0) != 0 & 1);
 i3 = i5 + 44 | 0;
 HEAP32[i4 + 8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i4 + 12 >> 2] = i10;
 HEAP32[i1 >> 2] = HEAP32[i5 + 60 >> 2];
 HEAP32[i1 + 4 >> 2] = i4;
 HEAP32[i1 + 8 >> 2] = 2;
 i1 = ___syscall_ret(___syscall145(145, i1 | 0) | 0) | 0;
 if ((i1 | 0) >= 1) {
  i4 = HEAP32[i2 >> 2] | 0;
  if (i1 >>> 0 > i4 >>> 0) {
   i2 = HEAP32[i3 >> 2] | 0;
   i3 = i5 + 4 | 0;
   HEAP32[i3 >> 2] = i2;
   HEAP32[i5 + 8 >> 2] = i2 + (i1 - i4);
   if (!(HEAP32[i8 >> 2] | 0)) i1 = i7; else {
    HEAP32[i3 >> 2] = i2 + 1;
    HEAP8[i6 + (i7 + -1) >> 0] = HEAP8[i2 >> 0] | 0;
    i1 = i7;
   }
  }
 } else HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | i1 & 48 ^ 16;
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji(i1, i4, i5, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i8;
 do if ((i1 | 0) == (i4 | 0)) {
  HEAP32[i5 >> 2] = 4;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
   break;
  }
  i7 = ___errno_location() | 0;
  i7 = HEAP32[i7 >> 2] | 0;
  i3 = ___errno_location() | 0;
  HEAP32[i3 >> 2] = 0;
  i1 = _strtoull_l(i1, i6, i2, __ZNSt3__26__clocEv() | 0) | 0;
  i2 = getTempRet0() | 0;
  i3 = ___errno_location() | 0;
  i3 = HEAP32[i3 >> 2] | 0;
  if (!i3) {
   i9 = ___errno_location() | 0;
   HEAP32[i9 >> 2] = i7;
  }
  do if ((HEAP32[i6 >> 2] | 0) == (i4 | 0)) if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i1 >>> 0 > 4294967295 | (i3 | 0) == 34) {
   HEAP32[i5 >> 2] = 4;
   i1 = -1;
   break;
  } else break; else {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
  } while (0);
 } while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji(i1, i4, i5, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i8;
 do if ((i1 | 0) == (i4 | 0)) {
  HEAP32[i5 >> 2] = 4;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
   break;
  }
  i7 = ___errno_location() | 0;
  i7 = HEAP32[i7 >> 2] | 0;
  i3 = ___errno_location() | 0;
  HEAP32[i3 >> 2] = 0;
  i1 = _strtoull_l(i1, i6, i2, __ZNSt3__26__clocEv() | 0) | 0;
  i2 = getTempRet0() | 0;
  i3 = ___errno_location() | 0;
  i3 = HEAP32[i3 >> 2] | 0;
  if (!i3) {
   i9 = ___errno_location() | 0;
   HEAP32[i9 >> 2] = i7;
  }
  do if ((HEAP32[i6 >> 2] | 0) == (i4 | 0)) if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i1 >>> 0 > 4294967295 | (i3 | 0) == 34) {
   HEAP32[i5 >> 2] = 4;
   i1 = -1;
   break;
  } else break; else {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
  } while (0);
 } while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(i6, i3, i5) {
 i6 = i6 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i9;
 if (i3 | 0) {
  i8 = i6 + 11 | 0;
  i1 = HEAP8[i8 >> 0] | 0;
  if (i1 << 24 >> 24 < 0) {
   i4 = HEAP32[i6 + 4 >> 2] | 0;
   i2 = (HEAP32[i6 + 8 >> 2] & 2147483647) + -1 | 0;
  } else {
   i4 = i1 & 255;
   i2 = 10;
  }
  if ((i2 - i4 | 0) >>> 0 < i3 >>> 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(i6, i2, i4 + i3 - i2 | 0, i4, i4, 0, 0);
   i1 = HEAP8[i8 >> 0] | 0;
  }
  if (i1 << 24 >> 24 < 0) i2 = HEAP32[i6 >> 2] | 0; else i2 = i6;
  __ZNSt3__211char_traitsIcE6assignEPcmc(i2 + i4 | 0, i3, i5) | 0;
  i1 = i4 + i3 | 0;
  if ((HEAP8[i8 >> 0] | 0) < 0) HEAP32[i6 + 4 >> 2] = i1; else HEAP8[i8 >> 0] = i1;
  HEAP8[i7 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i2 + i1 | 0, i7);
 }
 STACKTOP = i9;
 return i6 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i2 + 4 >> 2] | 0;
 L1 : do if (i5) {
  i6 = i5 + -1 | 0;
  i7 = (i6 & i5 | 0) == 0;
  if (!i7) if (i4 >>> 0 < i5 >>> 0) i3 = i4; else i3 = (i4 >>> 0) % (i5 >>> 0) | 0; else i3 = i6 & i4;
  i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (i1) while (1) {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = 0;
    break L1;
   }
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if ((i2 | 0) == (i4 | 0)) {
    if ((HEAP32[i1 + 8 >> 2] | 0) == (i4 | 0)) break L1;
   } else {
    if (!i7) {
     if (i2 >>> 0 >= i5 >>> 0) i2 = (i2 >>> 0) % (i5 >>> 0) | 0;
    } else i2 = i2 & i6;
    if ((i2 | 0) != (i3 | 0)) {
     i1 = 0;
     break L1;
    }
   }
  } else i1 = 0;
 } else i1 = 0; while (0);
 return i1 | 0;
}

function _fill_inverse_cmap(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(384);
 i10 = i12 + 128 | 0;
 i5 = i12;
 i11 = HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 24 >> 2] | 0;
 i8 = i2 >>> 2 << 5 | 4;
 i6 = i3 >>> 3 << 5 | 2;
 i9 = i4 >>> 2 << 5 | 4;
 _find_best_colors(i1, i8, i6, i9, _find_nearby_colors(i1, i8, i6, i9, i10) | 0, i10, i5);
 i10 = i2 & -4;
 i9 = i3 & -8;
 i6 = i4 & -4;
 i3 = i5;
 i5 = 0;
 while (1) {
  if ((i5 | 0) == 4) break;
  i7 = i11 + (i5 + i10 << 2) | 0;
  i4 = 0;
  i1 = i3;
  while (1) {
   if ((i4 | 0) == 8) break;
   i8 = i1 + 4 | 0;
   i2 = (HEAP32[i7 >> 2] | 0) + (i4 + i9 << 6) + (i6 << 1) | 0;
   while (1) {
    if ((i1 | 0) == (i8 | 0)) break;
    HEAP16[i2 >> 1] = (HEAPU8[i1 >> 0] | 0) + 1;
    i2 = i2 + 2 | 0;
    i1 = i1 + 1 | 0;
   }
   i4 = i4 + 1 | 0;
   i1 = i8;
  }
  i3 = i3 + 32 | 0;
  i5 = i5 + 1 | 0;
 }
 STACKTOP = i12;
 return;
}

function _int_upsample(i3, i2, i16, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i16 = i16 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i13 = HEAP32[i3 + 452 >> 2] | 0;
 i15 = HEAP32[i1 >> 2] | 0;
 i8 = HEAP32[i2 + 4 >> 2] | 0;
 i12 = HEAPU8[i13 + 140 + i8 >> 0] | 0;
 i8 = HEAP8[i13 + 150 + i8 >> 0] | 0;
 i13 = i8 & 255;
 i14 = i3 + 312 | 0;
 i7 = i3 + 112 | 0;
 i8 = (i8 & 255) > 1;
 i9 = i13 + -1 | 0;
 i1 = 0;
 i2 = 0;
 while (1) {
  if ((i1 | 0) >= (HEAP32[i14 >> 2] | 0)) break;
  i4 = HEAP32[i15 + (i1 << 2) >> 2] | 0;
  i10 = i4 + (HEAP32[i7 >> 2] | 0) | 0;
  i3 = HEAP32[i16 + (i2 << 2) >> 2] | 0;
  while (1) {
   if (i4 >>> 0 >= i10 >>> 0) break;
   i11 = HEAP8[i3 >> 0] | 0;
   i5 = i12;
   i6 = i4;
   while (1) {
    if ((i5 | 0) <= 0) break;
    HEAP8[i6 >> 0] = i11;
    i5 = i5 + -1 | 0;
    i6 = i6 + 1 | 0;
   }
   i3 = i3 + 1 | 0;
   i4 = i4 + i12 | 0;
  }
  if (i8) _jcopy_sample_rows(i15, i1, i15, i1 + 1 | 0, i9, HEAP32[i7 >> 2] | 0);
  i1 = i1 + i13 | 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function _ar2MarkerCoord2ScreenCoord(i1, i2, d3, d4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, d9 = 0.0, d10 = 0.0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i7 = i8;
 if (!i1) {
  d10 = +HEAPF32[i2 + 28 >> 2] + (+HEAPF32[i2 + 16 >> 2] * d3 + +HEAPF32[i2 + 20 >> 2] * d4);
  d9 = +HEAPF32[i2 + 44 >> 2] + (+HEAPF32[i2 + 32 >> 2] * d3 + +HEAPF32[i2 + 36 >> 2] * d4);
  HEAPF32[i5 >> 2] = (+HEAPF32[i2 + 12 >> 2] + (+HEAPF32[i2 >> 2] * d3 + +HEAPF32[i2 + 4 >> 2] * d4)) / d9;
  HEAPF32[i6 >> 2] = d10 / d9;
  i1 = 0;
 } else {
  _arUtilMatMuldff(i1 + 8 | 0, i2, i7) | 0;
  d10 = +HEAPF32[i7 + 44 >> 2] + (+HEAPF32[i7 + 32 >> 2] * d3 + +HEAPF32[i7 + 36 >> 2] * d4);
  i1 = (_arParamIdeal2ObservLTf(i1 + 184 | 0, (+HEAPF32[i7 + 12 >> 2] + (+HEAPF32[i7 >> 2] * d3 + +HEAPF32[i7 + 4 >> 2] * d4)) / d10, (+HEAPF32[i7 + 28 >> 2] + (+HEAPF32[i7 + 16 >> 2] * d3 + +HEAPF32[i7 + 20 >> 2] * d4)) / d10, i5, i6) | 0) >> 31;
 }
 STACKTOP = i8;
 return i1 | 0;
}

function _build_ycc_rgb_table_46(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i2 = HEAP32[i1 + 452 >> 2] | 0;
 i3 = i1 + 4 | 0;
 i7 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
 i6 = i2 + 16 | 0;
 HEAP32[i6 >> 2] = i7;
 i7 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
 i4 = i2 + 20 | 0;
 HEAP32[i4 >> 2] = i7;
 i7 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
 i5 = i2 + 24 | 0;
 HEAP32[i5 >> 2] = i7;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
 HEAP32[i2 + 28 >> 2] = i3;
 i1 = -128;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 256) break;
  HEAP32[(HEAP32[i6 >> 2] | 0) + (i2 << 2) >> 2] = (i1 * 91881 | 0) + 32768 >> 16;
  HEAP32[(HEAP32[i4 >> 2] | 0) + (i2 << 2) >> 2] = (i1 * 116130 | 0) + 32768 >> 16;
  i7 = Math_imul(i1, -46802) | 0;
  HEAP32[(HEAP32[i5 >> 2] | 0) + (i2 << 2) >> 2] = i7;
  i7 = (Math_imul(i1, -22554) | 0) + 32768 | 0;
  HEAP32[i3 + (i2 << 2) >> 2] = i7;
  i1 = i1 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE4findIjEENS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i2 + 4 >> 2] | 0;
 L1 : do if (i5) {
  i6 = i5 + -1 | 0;
  i7 = (i6 & i5 | 0) == 0;
  if (!i7) if (i4 >>> 0 < i5 >>> 0) i3 = i4; else i3 = (i4 >>> 0) % (i5 >>> 0) | 0; else i3 = i6 & i4;
  i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (i1) while (1) {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = 0;
    break L1;
   }
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if ((i2 | 0) == (i4 | 0)) {
    if ((HEAP32[i1 + 8 >> 2] | 0) == (i4 | 0)) break L1;
   } else {
    if (!i7) {
     if (i2 >>> 0 >= i5 >>> 0) i2 = (i2 >>> 0) % (i5 >>> 0) | 0;
    } else i2 = i2 & i6;
    if ((i2 | 0) != (i3 | 0)) {
     i1 = 0;
     break L1;
    }
   }
  } else i1 = 0;
 } else i1 = 0; while (0);
 return i1 | 0;
}

function _build_ycc_rgb_table(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i2 = HEAP32[i1 + 456 >> 2] | 0;
 i3 = i1 + 4 | 0;
 i7 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
 i6 = i2 + 8 | 0;
 HEAP32[i6 >> 2] = i7;
 i7 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
 i4 = i2 + 12 | 0;
 HEAP32[i4 >> 2] = i7;
 i7 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
 i5 = i2 + 16 | 0;
 HEAP32[i5 >> 2] = i7;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
 HEAP32[i2 + 20 >> 2] = i3;
 i1 = -128;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 256) break;
  HEAP32[(HEAP32[i6 >> 2] | 0) + (i2 << 2) >> 2] = (i1 * 91881 | 0) + 32768 >> 16;
  HEAP32[(HEAP32[i4 >> 2] | 0) + (i2 << 2) >> 2] = (i1 * 116130 | 0) + 32768 >> 16;
  i7 = Math_imul(i1, -46802) | 0;
  HEAP32[(HEAP32[i5 >> 2] | 0) + (i2 << 2) >> 2] = i7;
  i7 = (Math_imul(i1, -22554) | 0) + 32768 | 0;
  HEAP32[i3 + (i2 << 2) >> 2] = i7;
  i1 = i1 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i2, i1, i6) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i1;
 i7 = i8;
 i3 = i6 - i4 | 0;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i2);
 if (i3 >>> 0 < 11) {
  HEAP8[i2 + 11 >> 0] = i3;
  i5 = i2;
 } else {
  i9 = i3 + 16 & -16;
  i5 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm(i9) | 0;
  HEAP32[i2 >> 2] = i5;
  HEAP32[i2 + 8 >> 2] = i9 | -2147483648;
  HEAP32[i2 + 4 >> 2] = i3;
 }
 i3 = i6 - i4 | 0;
 i2 = i5;
 while (1) {
  if ((i1 | 0) == (i6 | 0)) break;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i1);
  i1 = i1 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 HEAP8[i7 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i5 + i3 | 0, i7);
 STACKTOP = i8;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 i12 = i1 + 8 | 0;
 i12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i12 >> 2] | 0) + 20 >> 2] & 127](i12) | 0;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 i3 = HEAP8[i12 + 8 + 3 >> 0] | 0;
 i13 = i3 << 24 >> 24 < 0;
 i2 = i13 ? HEAP32[i12 >> 2] | 0 : i12;
 i3 = i2 + ((i13 ? HEAP32[i12 + 4 >> 2] | 0 : i3 & 255) << 2) | 0;
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i1, i9, i8, i4, i5, i6, i2, i3) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(i6, i4, i5) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i9;
 i8 = i6 + 11 | 0;
 i1 = HEAP8[i8 >> 0] | 0;
 i2 = i1 << 24 >> 24 < 0;
 if (i2) {
  i3 = HEAP32[i6 + 4 >> 2] | 0;
  i1 = (HEAP32[i6 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i3 = i1 & 255;
  i1 = 10;
 }
 if ((i1 - i3 | 0) >>> 0 >= i5 >>> 0) {
  if (i5 | 0) {
   if (i2) i2 = HEAP32[i6 >> 2] | 0; else i2 = i6;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm(i2 + i3 | 0, i4, i5) | 0;
   i1 = i3 + i5 | 0;
   if ((HEAP8[i8 >> 0] | 0) < 0) HEAP32[i6 + 4 >> 2] = i1; else HEAP8[i8 >> 0] = i1;
   HEAP8[i7 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i2 + i1 | 0, i7);
  }
 } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc(i6, i1, i3 + i5 - i1 | 0, i3, i3, 0, i5, i4);
 STACKTOP = i9;
 return i6 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i5 + 16 | 0;
 i4 = i5 + 4 | 0;
 i7 = i5;
 i1 = HEAP32[i1 >> 2] | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 HEAP32[i7 >> 2] = i1;
 HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(i4, i2, i6);
 i1 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = 0;
 if (i1 | 0) {
  if (HEAP8[i4 + 8 >> 0] | 0) __ZNSt3__24pairIKi12arControllerED2Ev(i1 + 8 | 0);
  __ZdlPv(i1);
 }
 STACKTOP = i5;
 return i3 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 i12 = i1 + 8 | 0;
 i12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i12 >> 2] | 0) + 20 >> 2] & 127](i12) | 0;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 i3 = HEAP8[i12 + 11 >> 0] | 0;
 i13 = i3 << 24 >> 24 < 0;
 i2 = i13 ? HEAP32[i12 >> 2] | 0 : i12;
 i3 = i2 + (i13 ? HEAP32[i12 + 4 >> 2] | 0 : i3 & 255) | 0;
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i1, i9, i8, i4, i5, i6, i2, i3) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function _first_marker(i6) {
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0;
 i7 = HEAP32[i6 + 24 >> 2] | 0;
 i8 = i7 + 4 | 0;
 i1 = HEAP32[i8 >> 2] | 0;
 if (!i1) if (!(FUNCTION_TABLE_ii[HEAP32[i7 + 12 >> 2] & 127](i6) | 0)) i1 = 0; else {
  i1 = HEAP32[i8 >> 2] | 0;
  i2 = 4;
 } else i2 = 4;
 do if ((i2 | 0) == 4) {
  i4 = HEAP32[i7 >> 2] | 0;
  i1 = i1 + -1 | 0;
  i2 = i4 + 1 | 0;
  i4 = HEAP8[i4 >> 0] | 0;
  i5 = i4 & 255;
  if (!i1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i7 + 12 >> 2] & 127](i6) | 0)) {
    i1 = 0;
    break;
   }
   i1 = HEAP32[i8 >> 2] | 0;
   i2 = HEAP32[i7 >> 2] | 0;
  }
  i9 = HEAP8[i2 >> 0] | 0;
  i3 = i9 & 255;
  if (i4 << 24 >> 24 != -1 | i9 << 24 >> 24 != -40) {
   i9 = HEAP32[i6 >> 2] | 0;
   HEAP32[i9 + 20 >> 2] = 53;
   HEAP32[i9 + 24 >> 2] = i5;
   HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] = i3;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i6 >> 2] >> 2] & 255](i6);
  }
  HEAP32[i6 + 416 >> 2] = i3;
  HEAP32[i7 >> 2] = i2 + 1;
  HEAP32[i8 >> 2] = i1 + -1;
  i1 = 1;
 } while (0);
 return i1 | 0;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = i2 + 4 | 0;
 i6 = i3 + 4 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  i8 = (HEAP32[i6 >> 2] | 0) + -20 | 0;
  i7 = i1 + -20 | 0;
  HEAP32[i8 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  HEAP32[i8 + 12 >> 2] = HEAP32[i7 + 12 >> 2];
  HEAP32[i8 + 16 >> 2] = HEAP32[i7 + 16 >> 2];
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -20;
  i1 = i7;
 }
 i8 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i6 >> 2] = i8;
 i8 = i3 + 8 | 0;
 i7 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i8 >> 2];
 HEAP32[i8 >> 2] = i7;
 i5 = i2 + 8 | 0;
 i8 = i3 + 12 | 0;
 i7 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i8 >> 2];
 HEAP32[i8 >> 2] = i7;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm(i6, i7, i8) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i9;
 i5 = i6 + 11 | 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i2 = i1 << 24 >> 24 < 0;
 if (i2) i3 = (HEAP32[i6 + 8 >> 2] & 2147483647) + -1 | 0; else i3 = 10;
 do if (i3 >>> 0 >= i8 >>> 0) {
  if (i2) i1 = HEAP32[i6 >> 2] | 0; else i1 = i6;
  __ZNSt3__211char_traitsIcE4moveEPcPKcm(i1, i7, i8) | 0;
  HEAP8[i4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i1 + i8 | 0, i4);
  if ((HEAP8[i5 >> 0] | 0) < 0) {
   HEAP32[i6 + 4 >> 2] = i8;
   break;
  } else {
   HEAP8[i5 >> 0] = i8;
   break;
  }
 } else {
  if (i2) i1 = HEAP32[i6 + 4 >> 2] | 0; else i1 = i1 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc(i6, i3, i8 - i3 | 0, i1, 0, i1, i8, i7);
 } while (0);
 STACKTOP = i9;
 return i6 | 0;
}

function ___newlocale(i7, i8, i1) {
 i7 = i7 | 0;
 i8 = i8 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i9;
 L1 : do if (!(___loc_is_allocated(i1) | 0)) {
  i5 = (i1 | 0) != 0;
  i3 = 0;
  i4 = 0;
  do {
   i2 = 1 << i4 & i7;
   if (i5 & (i2 | 0) == 0) i2 = HEAP32[i1 + (i4 << 2) >> 2] | 0; else i2 = ___get_locale(i4, (i2 | 0) == 0 ? 59242 : i8) | 0;
   i3 = i3 + ((i2 | 0) != 0 & 1) | 0;
   HEAP32[i6 + (i4 << 2) >> 2] = i2;
   i4 = i4 + 1 | 0;
  } while ((i4 | 0) != 6);
  switch (i3 & 2147483647 | 0) {
  case 0:
   {
    i1 = 57164;
    break L1;
   }
  case 1:
   {
    if ((HEAP32[i6 >> 2] | 0) == 13760) {
     i1 = 13788;
     break L1;
    }
    break;
   }
  default:
   {}
  }
 } else {
  i2 = 0;
  do {
   if (1 << i2 & i7 | 0) {
    i6 = ___get_locale(i2, i8) | 0;
    HEAP32[i1 + (i2 << 2) >> 2] = i6;
   }
   i2 = i2 + 1 | 0;
  } while ((i2 | 0) != 6);
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji(i1, i4, i5, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i8;
 if ((i1 | 0) == (i4 | 0)) {
  HEAP32[i5 >> 2] = 4;
  i2 = 0;
  i1 = 0;
 } else {
  i7 = ___errno_location() | 0;
  i7 = HEAP32[i7 >> 2] | 0;
  i3 = ___errno_location() | 0;
  HEAP32[i3 >> 2] = 0;
  i1 = _strtoll_l(i1, i6, i2, __ZNSt3__26__clocEv() | 0) | 0;
  i2 = getTempRet0() | 0;
  i3 = ___errno_location() | 0;
  i3 = HEAP32[i3 >> 2] | 0;
  if (!i3) {
   i9 = ___errno_location() | 0;
   HEAP32[i9 >> 2] = i7;
  }
  if ((HEAP32[i6 >> 2] | 0) == (i4 | 0)) {
   if ((i3 | 0) == 34) {
    HEAP32[i5 >> 2] = 4;
    i2 = (i2 | 0) > 0 | (i2 | 0) == 0 & i1 >>> 0 > 0;
    i1 = i2 ? -1 : 0;
    i2 = i2 ? 2147483647 : -2147483648;
   }
  } else {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
   i2 = 0;
  }
 }
 setTempRet0(i2 | 0);
 STACKTOP = i8;
 return i1 | 0;
}

function _arImageProcLumaHistAndOtsu(i10, i1, i11) {
 i10 = i10 | 0;
 i1 = i1 | 0;
 i11 = i11 | 0;
 var i2 = 0, d3 = 0.0, d4 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0, i8 = 0, d9 = 0.0, i12 = 0, d13 = 0.0;
 i1 = _arImageProcLumaHist(i10, i1) | 0;
 if ((i1 | 0) >= 0) {
  d9 = 0.0;
  i1 = 1;
  do {
   d9 = d9 + +((Math_imul(HEAP32[i10 + 12 + (i1 << 2) >> 2] | 0, i1) | 0) >>> 0);
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != 256);
  d7 = +(Math_imul(HEAP32[i10 + 8 >> 2] | 0, HEAP32[i10 + 4 >> 2] | 0) | 0);
  i1 = 0;
  d4 = 0.0;
  d6 = 0.0;
  d3 = 0.0;
  i8 = 0;
  while (1) {
   i2 = HEAP32[i10 + 12 + (i8 << 2) >> 2] | 0;
   d6 = d6 + +(i2 >>> 0);
   if (d6 != 0.0) {
    d5 = d7 - d6;
    if (d5 == 0.0) break;
    d3 = d3 + +((Math_imul(i2, i8) | 0) >>> 0);
    d13 = d3 / d6 - (d9 - d3) / d5;
    d5 = d13 * (d6 * d5 * d13);
    i12 = d5 > d4;
    i2 = i8 & 255;
    i1 = i12 ? i2 : i1;
    d4 = i12 ? d5 : d4;
   } else i2 = i8 & 255;
   if (i2 << 24 >> 24 == -1) break; else i8 = i8 + 1 | 0;
  }
  HEAP8[i11 >> 0] = i1;
  i1 = 0;
 }
 return i1 | 0;
}

function _EX(i3, i8) {
 i3 = i3 | 0;
 i8 = i8 | 0;
 var i1 = 0, d2 = 0.0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0;
 i7 = HEAP32[i3 + 4 >> 2] | 0;
 i9 = HEAP32[i3 + 8 >> 2] | 0;
 L1 : do if (!((i7 | 0) < 1 | (i9 | 0) < 1) ? (HEAP32[i8 + 4 >> 2] | 0) == (i9 | 0) : 0) {
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i9 | 0)) break;
   HEAPF64[(HEAP32[i8 >> 2] | 0) + (i1 << 3) >> 3] = 0.0;
   i1 = i1 + 1 | 0;
  }
  i3 = HEAP32[i3 >> 2] | 0;
  i5 = 0;
  while (1) {
   if ((i5 | 0) == (i7 | 0)) break;
   i1 = 0;
   i4 = HEAP32[i8 >> 2] | 0;
   i6 = i3;
   while (1) {
    if ((i1 | 0) == (i9 | 0)) break;
    HEAPF64[i4 >> 3] = +HEAPF64[i6 >> 3] + +HEAPF64[i4 >> 3];
    i1 = i1 + 1 | 0;
    i4 = i4 + 8 | 0;
    i6 = i6 + 8 | 0;
   }
   i3 = i3 + (i9 << 3) | 0;
   i5 = i5 + 1 | 0;
  }
  d2 = +(i7 | 0);
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i9 | 0)) {
    i1 = 0;
    break L1;
   }
   i7 = (HEAP32[i8 >> 2] | 0) + (i1 << 3) | 0;
   HEAPF64[i7 >> 3] = +HEAPF64[i7 >> 3] / d2;
   i1 = i1 + 1 | 0;
  }
 } else i1 = -1; while (0);
 return i1 | 0;
}

function _jpeg_consume_input(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 i3 = i2 + 20 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 switch (i1 | 0) {
 case 200:
  {
   i1 = i2 + 436 | 0;
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i2);
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 + 24 >> 2] | 0) + 8 >> 2] & 255](i2);
   HEAP32[i3 >> 2] = 201;
   i4 = 4;
   break;
  }
 case 201:
  {
   i1 = i2 + 436 | 0;
   i4 = 4;
   break;
  }
 case 202:
  {
   i1 = 1;
   break;
  }
 case 210:
 case 208:
 case 207:
 case 206:
 case 205:
 case 204:
 case 203:
  {
   i1 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i2 + 436 >> 2] >> 2] & 127](i2) | 0;
   break;
  }
 default:
  {
   i3 = HEAP32[i2 >> 2] | 0;
   HEAP32[i3 + 20 >> 2] = 20;
   HEAP32[i3 + 24 >> 2] = i1;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i2 >> 2] >> 2] & 255](i2);
   i1 = 0;
  }
 }
 if ((i4 | 0) == 4) {
  i1 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i1 >> 2] >> 2] & 127](i2) | 0;
  if ((i1 | 0) == 1) {
   _default_decompress_parms(i2);
   HEAP32[i3 >> 2] = 202;
   i1 = 1;
  }
 }
 return i1 | 0;
}

function __ZN6vision21OrientationAssignment5allocEmmiiiffif(i3, i10, i11, i12, i13, i1, d6, d7, i2, d8) {
 i3 = i3 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i1 = i1 | 0;
 d6 = +d6;
 d7 = +d7;
 i2 = i2 | 0;
 d8 = +d8;
 var i4 = 0, i5 = 0, i9 = 0;
 HEAP32[i3 >> 2] = i12;
 i5 = i3 + 4 | 0;
 HEAP32[i5 >> 2] = i13;
 HEAP32[i3 + 8 >> 2] = i1;
 HEAPF32[i3 + 12 >> 2] = d6;
 HEAPF32[i3 + 16 >> 2] = d7;
 HEAP32[i3 + 20 >> 2] = i2;
 HEAPF32[i3 + 24 >> 2] = d8;
 __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm(i3 + 28 | 0, i1);
 i9 = i3 + 40 | 0;
 __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE6resizeEm(i9, Math_imul(HEAP32[i5 >> 2] | 0, HEAP32[i3 >> 2] | 0) | 0);
 i2 = 0;
 while (1) {
  if ((i2 | 0) == (i12 | 0)) break;
  i3 = Math_imul(i2, i13) | 0;
  i4 = i10 >>> i2;
  i5 = i11 >>> i2;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i13 | 0)) break;
   __ZN6vision5Image5allocENS_9ImageTypeEmmim((HEAP32[i9 >> 2] | 0) + (i1 + i3 << 5) | 0, 2, i4, i5, -1, 2);
   i1 = i1 + 1 | 0;
  }
  i2 = i2 + 1 | 0;
 }
 return;
}

function _alloc_funny_pointers(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i5 = HEAP32[i3 + 424 >> 2] | 0;
 i8 = i3 + 316 | 0;
 i6 = HEAP32[i8 >> 2] | 0;
 i9 = i3 + 4 | 0;
 i10 = i3 + 36 | 0;
 i1 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i9 >> 2] >> 2] & 63](i3, 1, HEAP32[i10 >> 2] << 3) | 0;
 i4 = i5 + 56 | 0;
 HEAP32[i4 >> 2] = i1;
 i7 = HEAP32[i10 >> 2] | 0;
 i5 = i5 + 60 | 0;
 HEAP32[i5 >> 2] = i1 + (i7 << 2);
 i6 = i6 + 4 | 0;
 i1 = 0;
 i2 = HEAP32[i3 + 216 >> 2] | 0;
 while (1) {
  if ((i1 | 0) >= (i7 | 0)) break;
  i11 = Math_imul(HEAP32[i2 + 36 >> 2] | 0, HEAP32[i2 + 12 >> 2] | 0) | 0;
  i11 = (i11 | 0) / (HEAP32[i8 >> 2] | 0) | 0;
  i7 = Math_imul(i11, i6) | 0;
  i11 = (FUNCTION_TABLE_iiii[HEAP32[HEAP32[i9 >> 2] >> 2] & 63](i3, 1, i7 << 3) | 0) + (i11 << 2) | 0;
  HEAP32[(HEAP32[i4 >> 2] | 0) + (i1 << 2) >> 2] = i11;
  HEAP32[(HEAP32[i5 >> 2] | 0) + (i1 << 2) >> 2] = i11 + (i7 << 2);
  i1 = i1 + 1 | 0;
  i2 = i2 + 84 | 0;
  i7 = HEAP32[i10 >> 2] | 0;
 }
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm(i4, i5, i1, i3, i8, i9, i10) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i2 = 0, i6 = 0, i7 = 0, i11 = 0;
 if ((1073741807 - i5 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i4);
 i11 = i4 + 8 | 0;
 if ((HEAP8[i11 + 3 >> 0] | 0) < 0) i7 = HEAP32[i4 >> 2] | 0; else i7 = i4;
 if (i5 >>> 0 < 536870887) {
  i1 = i1 + i5 | 0;
  i2 = i5 << 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
  i1 = i1 >>> 0 < 2 ? 2 : i1 + 4 & -4;
  if (i1 >>> 0 > 1073741823) _abort(); else i6 = i1;
 } else i6 = 1073741807;
 i2 = __Znwm(i6 << 2) | 0;
 if (i8 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm(i2, i7, i8) | 0;
 i1 = i3 - i9 - i8 | 0;
 if (i1 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm(i2 + (i8 << 2) + (i10 << 2) | 0, i7 + (i8 << 2) + (i9 << 2) | 0, i1) | 0;
 if ((i5 | 0) != 1) __ZdlPv(i7);
 HEAP32[i4 >> 2] = i2;
 HEAP32[i11 >> 2] = i6 | -2147483648;
 return;
}

function _memset(i5, i6, i4) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0;
 i3 = i5 + i4 | 0;
 i6 = i6 & 255;
 if ((i4 | 0) >= 67) {
  while (i5 & 3) {
   HEAP8[i5 >> 0] = i6;
   i5 = i5 + 1 | 0;
  }
  i1 = i3 & -4 | 0;
  i7 = i6 | i6 << 8 | i6 << 16 | i6 << 24;
  i2 = i1 - 64 | 0;
  while ((i5 | 0) <= (i2 | 0)) {
   HEAP32[i5 >> 2] = i7;
   HEAP32[i5 + 4 >> 2] = i7;
   HEAP32[i5 + 8 >> 2] = i7;
   HEAP32[i5 + 12 >> 2] = i7;
   HEAP32[i5 + 16 >> 2] = i7;
   HEAP32[i5 + 20 >> 2] = i7;
   HEAP32[i5 + 24 >> 2] = i7;
   HEAP32[i5 + 28 >> 2] = i7;
   HEAP32[i5 + 32 >> 2] = i7;
   HEAP32[i5 + 36 >> 2] = i7;
   HEAP32[i5 + 40 >> 2] = i7;
   HEAP32[i5 + 44 >> 2] = i7;
   HEAP32[i5 + 48 >> 2] = i7;
   HEAP32[i5 + 52 >> 2] = i7;
   HEAP32[i5 + 56 >> 2] = i7;
   HEAP32[i5 + 60 >> 2] = i7;
   i5 = i5 + 64 | 0;
  }
  while ((i5 | 0) < (i1 | 0)) {
   HEAP32[i5 >> 2] = i7;
   i5 = i5 + 4 | 0;
  }
 }
 while ((i5 | 0) < (i3 | 0)) {
  HEAP8[i5 >> 0] = i6;
  i5 = i5 + 1 | 0;
 }
 return i3 - i4 | 0;
}

function __ZN6vision27OrthogonalizePivot8x9Basis6IfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 i3 = i1 + 216 | 0;
 i8 = i1 + 180 | 0;
 i4 = i2 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i3, i8, i4);
 i1 = i1 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i1, i8, i2 + 252 | 0);
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i3);
 HEAPF32[i6 >> 2] = d7;
 d7 = +__ZN6vision11SumSquares9IfEET_PKS1_(i1);
 HEAPF32[i6 + 4 >> 2] = d7;
 i1 = __ZN6vision9MaxIndex2IfEEiPKT_(i6) | 0;
 i2 = i6 + (i1 << 2) | 0;
 if (+HEAPF32[i2 >> 2] == 0.0) i1 = 0; else {
  i1 = i1 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_(i3, i3 + (i1 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_(i4, i4 + (i1 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_(i3, i3, 1.0 / +Math_sqrt(+(+HEAPF32[i2 >> 2])));
  i1 = 1;
 }
 STACKTOP = i5;
 return i1 | 0;
}

function _addNFTMarker(i1, i5) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i7;
 i2 = i7 + 4 | 0;
 HEAP32[i2 >> 2] = i1;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0) {
  i3 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0;
  i4 = i3 + 248 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  if ((HEAP8[i5 + 11 >> 0] | 0) < 0) i2 = HEAP32[i5 >> 2] | 0; else i2 = i5;
  if (!(_loadNFTMarker(i3, i1, i2) | 0)) {
   _arLog(0, 3, 44641, i6);
   i1 = -1;
   break;
  } else {
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
   break;
  }
 } else i1 = -1; while (0);
 STACKTOP = i7;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i3, i2, i6) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i8;
 i5 = i6 - i2 >> 2;
 if (i5 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i3);
 do if (i5 >>> 0 >= 2) {
  i4 = i5 + 4 & -4;
  if (i4 >>> 0 > 1073741823) _abort(); else {
   i1 = __Znwm(i4 << 2) | 0;
   HEAP32[i3 >> 2] = i1;
   HEAP32[i3 + 8 >> 2] = i4 | -2147483648;
   HEAP32[i3 + 4 >> 2] = i5;
   break;
  }
 } else {
  HEAP8[i3 + 8 + 3 >> 0] = i5;
  i1 = i3;
 } while (0);
 while (1) {
  if ((i2 | 0) == (i6 | 0)) break;
  __ZNSt3__211char_traitsIwE6assignERwRKw(i1, i2);
  i2 = i2 + 4 | 0;
  i1 = i1 + 4 | 0;
 }
 HEAP32[i7 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw(i1, i7);
 STACKTOP = i8;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(i3, i2, i6) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i8;
 i5 = i6 - i2 >> 2;
 if (i5 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i3);
 do if (i5 >>> 0 >= 2) {
  i4 = i5 + 4 & -4;
  if (i4 >>> 0 > 1073741823) _abort(); else {
   i1 = __Znwm(i4 << 2) | 0;
   HEAP32[i3 >> 2] = i1;
   HEAP32[i3 + 8 >> 2] = i4 | -2147483648;
   HEAP32[i3 + 4 >> 2] = i5;
   break;
  }
 } else {
  HEAP8[i3 + 8 + 3 >> 0] = i5;
  i1 = i3;
 } while (0);
 while (1) {
  if ((i2 | 0) == (i6 | 0)) break;
  __ZNSt3__211char_traitsIwE6assignERwRKw(i1, i2);
  i2 = i2 + 4 | 0;
  i1 = i1 + 4 | 0;
 }
 HEAP32[i7 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw(i1, i7);
 STACKTOP = i8;
 return;
}

function _sift(i3, i10, i7, i1, i8) {
 i3 = i3 | 0;
 i10 = i10 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i8 = i8 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i11 = i12;
 HEAP32[i11 >> 2] = i3;
 L1 : do if ((i1 | 0) > 1) {
  i9 = 0 - i10 | 0;
  i5 = i3;
  i2 = i1;
  i1 = 1;
  i4 = i3;
  while (1) {
   i5 = i5 + i9 | 0;
   i6 = i2 + -2 | 0;
   i3 = i5 + (0 - (HEAP32[i8 + (i6 << 2) >> 2] | 0)) | 0;
   if ((FUNCTION_TABLE_iii[i7 & 63](i4, i3) | 0) > -1 ? (FUNCTION_TABLE_iii[i7 & 63](i4, i5) | 0) > -1 : 0) break L1;
   i4 = i11 + (i1 << 2) | 0;
   if ((FUNCTION_TABLE_iii[i7 & 63](i3, i5) | 0) > -1) {
    HEAP32[i4 >> 2] = i3;
    i2 = i2 + -1 | 0;
   } else {
    HEAP32[i4 >> 2] = i5;
    i3 = i5;
    i2 = i6;
   }
   i1 = i1 + 1 | 0;
   if ((i2 | 0) <= 1) break L1;
   i5 = i3;
   i4 = HEAP32[i11 >> 2] | 0;
  }
 } else i1 = 1; while (0);
 _cycle(i10, i11, i1);
 STACKTOP = i12;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEmmmmmm(i5, i6, i1, i4, i8, i9) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 if ((-17 - i6 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i5);
 if ((HEAP8[i5 + 11 >> 0] | 0) < 0) i7 = HEAP32[i5 >> 2] | 0; else i7 = i5;
 if (i6 >>> 0 < 2147483623) {
  i2 = i1 + i6 | 0;
  i3 = i6 << 1;
  i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  i2 = i2 >>> 0 < 11 ? 11 : i2 + 16 & -16;
 } else i2 = -17;
 i3 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm(i2) | 0;
 if (i8 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i3, i7, i8) | 0;
 i1 = i4 - i8 | 0;
 if (i1 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i3 + i8 + i9 | 0, i7 + i8 | 0, i1) | 0;
 if ((i6 | 0) != 10) __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm(i7);
 HEAP32[i5 >> 2] = i3;
 HEAP32[i5 + 8 >> 2] = i2 | -2147483648;
 return;
}

function _getTransMatSquareCont(i1, i3, i4) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i5;
 HEAP32[i2 >> 2] = i1;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0) {
  i1 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0;
  i2 = HEAP32[i1 + 216 >> 2] | 0;
  if ((HEAP32[i2 + 44 >> 2] | 0) > (i3 | 0)) {
   +_arGetTransMatSquareCont(HEAP32[i1 + 228 >> 2] | 0, (i3 | 0) < 0 ? 56104 : i2 + 48 + (i3 << 8) | 0, 52416, +(i4 | 0), 52416);
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[3415] | 0;
   break;
  }
 } else i1 = HEAP32[3413] | 0; while (0);
 STACKTOP = i5;
 return i1 | 0;
}

function __ZN6vision18BinomialPyramid32f5allocEmmi(i3, i4, i8, i9) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0, i11 = 0;
 __ZN6vision25GaussianScaleSpacePyramid9configureEii(i3, i9, 3);
 i10 = i3 + 4 | 0;
 i11 = i3 + 20 | 0;
 __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE6resizeEm(i10, Math_imul(HEAP32[i11 >> 2] | 0, i9) | 0);
 i2 = 0;
 while (1) {
  if ((i2 | 0) >= (i9 | 0)) break;
  i5 = i4 >>> i2;
  i6 = i8 >>> i2;
  i1 = 0;
  while (1) {
   i7 = HEAP32[i11 >> 2] | 0;
   if (i1 >>> 0 >= i7 >>> 0) break;
   i7 = (Math_imul(i7, i2) | 0) + i1 | 0;
   __ZN6vision5Image5allocENS_9ImageTypeEmmim((HEAP32[i10 >> 2] | 0) + (i7 << 5) | 0, 2, i5, i6, -1, 1);
   i1 = i1 + 1 | 0;
  }
  i2 = i2 + 1 | 0;
 }
 i11 = Math_imul(i8, i4) | 0;
 __ZNSt3__26vectorItNS_9allocatorItEEE6resizeEm(i3 + 32 | 0, i11);
 __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm(i3 + 44 | 0, i11);
 __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm(i3 + 56 | 0, i11);
 return;
}

function _jinit_d_post_controller(i4, i5) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0;
 i3 = i4 + 4 | 0;
 i1 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 >> 2] >> 2] & 63](i4, 1, 28) | 0;
 HEAP32[i4 + 432 >> 2] = i1;
 HEAP32[i1 >> 2] = 44;
 i7 = i1 + 8 | 0;
 HEAP32[i7 >> 2] = 0;
 i8 = i1 + 12 | 0;
 HEAP32[i8 >> 2] = 0;
 do if (HEAP32[i4 + 84 >> 2] | 0) {
  i6 = HEAP32[i4 + 312 >> 2] | 0;
  i2 = i1 + 16 | 0;
  HEAP32[i2 >> 2] = i6;
  i1 = HEAP32[i3 >> 2] | 0;
  if (!i5) {
   i7 = Math_imul(HEAP32[i4 + 120 >> 2] | 0, HEAP32[i4 + 112 >> 2] | 0) | 0;
   i7 = FUNCTION_TABLE_iiiii[HEAP32[i1 + 8 >> 2] & 15](i4, 1, i7, i6) | 0;
   HEAP32[i8 >> 2] = i7;
   break;
  } else {
   i3 = HEAP32[i1 + 16 >> 2] | 0;
   i5 = Math_imul(HEAP32[i4 + 120 >> 2] | 0, HEAP32[i4 + 112 >> 2] | 0) | 0;
   i8 = _jround_up(HEAP32[i4 + 116 >> 2] | 0, i6) | 0;
   i8 = FUNCTION_TABLE_iiiiiii[i3 & 63](i4, 1, 0, i5, i8, HEAP32[i2 >> 2] | 0) | 0;
   HEAP32[i7 >> 2] = i8;
   break;
  }
 } while (0);
 return;
}

function _icpGetJ_U_S(i6, i1, i2, i3) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var d4 = 0.0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, d10 = 0.0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(224);
 i7 = i9 + 48 | 0;
 i8 = i9;
 i5 = i9 + 192 | 0;
 _icpGetJ_Xc_S(i7, i5, i2, i3);
 L1 : do if ((_icpGetJ_U_Xc(i8, i1, i5) | 0) < 0) {
  _arLog(0, 3, 18473, i9 + 216 | 0);
  i1 = -1;
 } else {
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 2) {
    i1 = 0;
    break L1;
   }
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 6) break;
    i5 = i6 + (i2 * 48 | 0) + (i3 << 3) | 0;
    HEAPF64[i5 >> 3] = 0.0;
    i1 = 0;
    d4 = 0.0;
    while (1) {
     if ((i1 | 0) == 3) break;
     d10 = d4 + +HEAPF64[i8 + (i2 * 24 | 0) + (i1 << 3) >> 3] * +HEAPF64[i7 + (i1 * 48 | 0) + (i3 << 3) >> 3];
     HEAPF64[i5 >> 3] = d10;
     i1 = i1 + 1 | 0;
     d4 = d10;
    }
    i3 = i3 + 1 | 0;
   }
   i2 = i2 + 1 | 0;
  }
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZN6vision5Image11shallowCopyERKS0_(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i8;
 HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i4 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i4 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i4 + 16 >> 2] = HEAP32[i1 + 16 >> 2];
 HEAP32[i4 + 20 >> 2] = HEAP32[i1 + 20 >> 2];
 i6 = i4 + 24 | 0;
 i7 = HEAP32[i1 + 24 >> 2] | 0;
 HEAP32[i5 >> 2] = i7;
 i3 = i5 + 4 | 0;
 i1 = HEAP32[i1 + 28 >> 2] | 0;
 HEAP32[i3 >> 2] = i1;
 if (!i1) {
  i2 = i3;
  i1 = 0;
 } else {
  i2 = i1 + 4 | 0;
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
  i2 = i3;
  i1 = HEAP32[i3 >> 2] | 0;
 }
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i6 >> 2] = i7;
 i7 = i4 + 28 | 0;
 HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i1;
 __ZNSt3__210shared_ptrIhED2Ev(i5);
 STACKTOP = i8;
 return;
}

function _alloc_barray(i9, i10, i11, i12) {
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i13 = 0;
 i1 = HEAP32[i9 + 4 >> 2] | 0;
 i13 = i11 << 7;
 i2 = 999999984 / (i13 >>> 0) | 0;
 if (i13 >>> 0 > 999999984) {
  i8 = HEAP32[i9 >> 2] | 0;
  HEAP32[i8 + 20 >> 2] = 70;
  FUNCTION_TABLE_vi[HEAP32[i8 >> 2] & 255](i9);
 }
 i6 = (i2 | 0) < (i12 | 0) ? i2 : i12;
 HEAP32[i1 + 80 >> 2] = i6;
 i7 = _alloc_small(i9, i10, i12 << 2) | 0;
 i8 = ~i12;
 i5 = 0;
 i1 = i6;
 while (1) {
  if (i5 >>> 0 >= i12 >>> 0) break;
  i6 = i12 - i5 | 0;
  i6 = i1 >>> 0 < i6 >>> 0 ? i1 : i6;
  i2 = _alloc_large(i9, i10, Math_imul(i13, i6) | 0) | 0;
  i3 = i5 + i8 | 0;
  i4 = ~i1;
  i4 = i3 >>> 0 > i4 >>> 0 ? i3 : i4;
  i1 = i2;
  i2 = i6;
  i3 = i5;
  while (1) {
   if (!i2) break;
   HEAP32[i7 + (i3 << 2) >> 2] = i1;
   i1 = i1 + (i11 << 7) | 0;
   i2 = i2 + -1 | 0;
   i3 = i3 + 1 | 0;
  }
  i5 = i5 + -1 - i4 | 0;
  i1 = i6;
 }
 return i7 | 0;
}

function __ZN6vision20SmallestTriangleAreaIfEET_PKS1_S3_S3_S3_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, d9 = 0.0, d10 = 0.0, i11 = 0, i12 = 0, i13 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i12 = i5 + 32 | 0;
 i13 = i5 + 24 | 0;
 i11 = i5 + 16 | 0;
 i8 = i5 + 8 | 0;
 i7 = i5;
 __ZN6vision10SubVector2IfEEvPT_PKS1_S4_(i12, i2, i1);
 __ZN6vision10SubVector2IfEEvPT_PKS1_S4_(i13, i3, i1);
 __ZN6vision10SubVector2IfEEvPT_PKS1_S4_(i11, i4, i1);
 __ZN6vision10SubVector2IfEEvPT_PKS1_S4_(i8, i2, i3);
 __ZN6vision10SubVector2IfEEvPT_PKS1_S4_(i7, i4, i3);
 d10 = +__ZN6vision14AreaOfTriangleIfEET_PKS1_S3_(i12, i13);
 d9 = +__ZN6vision14AreaOfTriangleIfEET_PKS1_S3_(i13, i11);
 d6 = +__ZN6vision14AreaOfTriangleIfEET_PKS1_S3_(i12, i11);
 d6 = +__ZN6vision4min4IfEET_S1_S1_S1_S1_(d10, d9, d6, +__ZN6vision14AreaOfTriangleIfEET_PKS1_S3_(i8, i7));
 STACKTOP = i5;
 return +d6;
}

function _tmpfile() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i7 = i9 + 48 | 0;
 i5 = i9 + 40 | 0;
 i4 = i9 + 24 | 0;
 i3 = i9;
 HEAP32[i3 >> 2] = HEAP32[1620];
 HEAP32[i3 + 4 >> 2] = HEAP32[1621];
 HEAP32[i3 + 8 >> 2] = HEAP32[1622];
 HEAP32[i3 + 12 >> 2] = HEAP32[1623];
 HEAP32[i3 + 16 >> 2] = HEAP32[1624];
 i2 = i3 + 13 | 0;
 i1 = 0;
 while (1) {
  ___randname(i2) | 0;
  HEAP32[i4 >> 2] = i3;
  HEAP32[i4 + 4 >> 2] = 32962;
  HEAP32[i4 + 8 >> 2] = 384;
  i6 = ___syscall_ret(___syscall5(5, i4 | 0) | 0) | 0;
  i1 = i1 + 1 | 0;
  if ((i6 | 0) > -1) {
   i8 = 4;
   break;
  }
  if (i1 >>> 0 >= 100) {
   i1 = 0;
   break;
  }
 }
 if ((i8 | 0) == 4) {
  HEAP32[i5 >> 2] = i3;
  ___syscall10(10, i5 | 0) | 0;
  i1 = ___fdopen(i6, 47060) | 0;
  if (!i1) {
   HEAP32[i7 >> 2] = i6;
   ___syscall6(6, i7 | 0) | 0;
   i1 = 0;
  }
 }
 STACKTOP = i9;
 return i1 | 0;
}

function _detectMarker(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i2 = i5 + 40 | 0;
 i4 = i5;
 HEAP32[i2 >> 2] = i1;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0)) i1 = HEAP32[3413] | 0; else {
  i1 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0;
  i2 = i4;
  i3 = i2 + 40 | 0;
  do {
   HEAP32[i2 >> 2] = 0;
   i2 = i2 + 4 | 0;
  } while ((i2 | 0) < (i3 | 0));
  HEAP32[i4 >> 2] = HEAP32[i1 + 196 >> 2];
  HEAP32[i4 + 16 >> 2] = 1;
  HEAP32[i4 + 12 >> 2] = HEAP32[i1 + 204 >> 2];
  i1 = _arDetectMarker(HEAP32[i1 + 216 >> 2] | 0, i4) | 0;
 }
 STACKTOP = i5;
 return i1 | 0;
}

function _getTransMatSquare(i1, i3, i4) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i5;
 HEAP32[i2 >> 2] = i1;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0) {
  i1 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0;
  i2 = HEAP32[i1 + 216 >> 2] | 0;
  if ((HEAP32[i2 + 44 >> 2] | 0) > (i3 | 0)) {
   +_arGetTransMatSquare(HEAP32[i1 + 228 >> 2] | 0, (i3 | 0) < 0 ? 56104 : i2 + 48 + (i3 << 8) | 0, +(i4 | 0), 52416);
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[3415] | 0;
   break;
  }
 } else i1 = HEAP32[3413] | 0; while (0);
 STACKTOP = i5;
 return i1 | 0;
}

function _examine_app14(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 if (((((i3 >>> 0 > 11 ? (HEAP8[i2 >> 0] | 0) == 65 : 0) ? (HEAP8[i2 + 1 >> 0] | 0) == 100 : 0) ? (HEAP8[i2 + 2 >> 0] | 0) == 111 : 0) ? (HEAP8[i2 + 3 >> 0] | 0) == 98 : 0) ? (HEAP8[i2 + 4 >> 0] | 0) == 101 : 0) {
  i6 = HEAPU8[i2 + 7 >> 0] << 8 | HEAPU8[i2 + 8 >> 0];
  i5 = HEAPU8[i2 + 9 >> 0] << 8 | HEAPU8[i2 + 10 >> 0];
  i4 = HEAP8[i2 + 11 >> 0] | 0;
  i3 = HEAP32[i1 >> 2] | 0;
  HEAP32[i3 + 24 >> 2] = HEAPU8[i2 + 5 >> 0] << 8 | HEAPU8[i2 + 6 >> 0];
  HEAP32[i3 + 28 >> 2] = i6;
  HEAP32[i3 + 32 >> 2] = i5;
  HEAP32[i3 + 36 >> 2] = i4 & 255;
  HEAP32[i3 + 20 >> 2] = 76;
  FUNCTION_TABLE_vii[HEAP32[i3 + 4 >> 2] & 63](i1, 1);
  HEAP32[i1 + 292 >> 2] = 1;
  HEAP8[i1 + 296 >> 0] = i4;
 } else {
  i6 = HEAP32[i1 >> 2] | 0;
  HEAP32[i6 + 20 >> 2] = 78;
  HEAP32[i6 + 24 >> 2] = i4 + i3;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
 }
 return;
}

function __ZN6vision6Logger5writeENS_19LoggerPriorityLevelEPKcz(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i8 = i5;
 i7 = i5 + 28 | 0;
 i6 = i5 + 16 | 0;
 HEAP32[i8 >> 2] = i4;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i6, i3, __ZNSt3__211char_traitsIcE6lengthEPKc(i3) | 0);
 __ZN6vision6detail23create_formatted_stringERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPi(i7, i6, i8);
 __ZN6vision6Logger5writeENS_19LoggerPriorityLevelERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i1, i2, i7);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
 STACKTOP = i5;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i2, i1, i6) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i1;
 i7 = i8;
 i3 = i6 - i4 | 0;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i2);
 if (i3 >>> 0 < 11) {
  HEAP8[i2 + 11 >> 0] = i3;
  i5 = i2;
 } else {
  i9 = i3 + 16 & -16;
  i5 = __Znwm(i9) | 0;
  HEAP32[i2 >> 2] = i5;
  HEAP32[i2 + 8 >> 2] = i9 | -2147483648;
  HEAP32[i2 + 4 >> 2] = i3;
 }
 i3 = i6 - i4 | 0;
 i2 = i5;
 while (1) {
  if ((i1 | 0) == (i6 | 0)) break;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i1);
  i1 = i1 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 HEAP8[i7 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i5 + i3 | 0, i7);
 STACKTOP = i8;
 return;
}

function _strcspn(i4, i2) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i6;
 i1 = HEAP8[i2 >> 0] | 0;
 L1 : do if (i1 << 24 >> 24 != 0 ? (HEAP8[i2 + 1 >> 0] | 0) != 0 : 0) {
  _memset(i3 | 0, 0, 32) | 0;
  i1 = HEAP8[i2 >> 0] | 0;
  if (i1 << 24 >> 24) do {
   i8 = i1 & 255;
   i7 = i3 + (i8 >>> 5 << 2) | 0;
   HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 1 << (i8 & 31);
   i2 = i2 + 1 | 0;
   i1 = HEAP8[i2 >> 0] | 0;
  } while (i1 << 24 >> 24 != 0);
  i2 = HEAP8[i4 >> 0] | 0;
  if (!(i2 << 24 >> 24)) i1 = i4; else {
   i1 = i4;
   do {
    i8 = i2 & 255;
    if (HEAP32[i3 + (i8 >>> 5 << 2) >> 2] & 1 << (i8 & 31) | 0) break L1;
    i1 = i1 + 1 | 0;
    i2 = HEAP8[i1 >> 0] | 0;
   } while (i2 << 24 >> 24 != 0);
  }
 } else i5 = 3; while (0);
 if ((i5 | 0) == 3) i1 = ___strchrnul(i4, i1 << 24 >> 24) | 0;
 STACKTOP = i6;
 return i1 - i4 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(i2, i1, i6) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i1;
 i7 = i8;
 i3 = i6 - i4 | 0;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i2);
 if (i3 >>> 0 < 11) {
  HEAP8[i2 + 11 >> 0] = i3;
  i5 = i2;
 } else {
  i9 = i3 + 16 & -16;
  i5 = __Znwm(i9) | 0;
  HEAP32[i2 >> 2] = i5;
  HEAP32[i2 + 8 >> 2] = i9 | -2147483648;
  HEAP32[i2 + 4 >> 2] = i3;
 }
 i3 = i6 - i4 | 0;
 i2 = i5;
 while (1) {
  if ((i1 | 0) == (i6 | 0)) break;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i1);
  i1 = i1 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 HEAP8[i7 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i5 + i3 | 0, i7);
 STACKTOP = i8;
 return;
}

function __ZL14genBWImageHalfPhiiPiS0_(i8, i9, i1, i2, i3) {
 i8 = i8 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i10 = (i9 | 0) / 2 | 0;
 HEAP32[i2 >> 2] = i10;
 i7 = (i1 | 0) / 2 | 0;
 HEAP32[i3 >> 2] = i7;
 i6 = _malloc(Math_imul(i7, i10) | 0) | 0;
 if (!i6) {
  _arLog(0, 3, 20581, i11);
  _exit(1);
 }
 i2 = 0;
 i1 = i6;
 while (1) {
  if ((i2 | 0) >= (i7 | 0)) break;
  i5 = i2 << 1;
  i3 = 0;
  i4 = i8 + (Math_imul(i5, i9) | 0) | 0;
  i5 = i8 + (Math_imul(i5 | 1, i9) | 0) | 0;
  while (1) {
   if ((i3 | 0) >= (i10 | 0)) break;
   HEAP8[i1 >> 0] = ((HEAPU8[i4 + 1 >> 0] | 0) + (HEAPU8[i4 >> 0] | 0) + (HEAPU8[i5 >> 0] | 0) + (HEAPU8[i5 + 1 >> 0] | 0) | 0) >>> 2;
   i3 = i3 + 1 | 0;
   i4 = i4 + 2 | 0;
   i5 = i5 + 2 | 0;
   i1 = i1 + 1 | 0;
  }
  i2 = i2 + 1 | 0;
 }
 STACKTOP = i11;
 return i6 | 0;
}

function _addMarker(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5;
 i3 = i5 + 4 | 0;
 HEAP32[i3 >> 2] = i1;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0) {
  i3 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0;
  if ((HEAP8[i2 + 11 >> 0] | 0) < 0) i2 = HEAP32[i2 >> 2] | 0;
  i1 = i3 + 340 | 0;
  if (!(__ZL10loadMarkerPKcPiP8ARHandlePP12ARPattHandle(i2, i1, i3 + 220 | 0) | 0)) {
   _arLog(0, 3, 45032, i4);
   i1 = -1;
   break;
  } else {
   i1 = HEAP32[i1 >> 2] | 0;
   break;
  }
 } else i1 = -1; while (0);
 STACKTOP = i5;
 return i1 | 0;
}

function __ZN6vision11ScopedTimerD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, d9 = 0.0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i7 = i8;
 i2 = i8 + 24 | 0;
 __ZN6vision5Timer4stopEv(i1);
 i4 = __ZN6vision6Logger11getInstanceEv() | 0;
 __ZN6vision15get_pretty_timeEv(i2);
 i5 = (HEAP8[i2 + 11 >> 0] | 0) < 0 ? HEAP32[i2 >> 2] | 0 : i2;
 i6 = i1 + 16 | 0;
 if ((HEAP8[i6 + 11 >> 0] | 0) < 0) i3 = HEAP32[i6 >> 2] | 0; else i3 = i6;
 d9 = +__ZNK6vision5Timer24duration_in_millisecondsEv(i1);
 HEAP32[i7 >> 2] = 33784;
 HEAP32[i7 + 4 >> 2] = i5;
 HEAP32[i7 + 8 >> 2] = 33792;
 HEAP32[i7 + 12 >> 2] = i3;
 HEAPF64[i7 + 16 >> 3] = d9;
 __ZN6vision6Logger5writeENS_19LoggerPriorityLevelEPKcz(i4, 8, 33757, i7);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
 STACKTOP = i8;
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EEPi(i5, i6, i7) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i8 = 0, i9 = 0;
 i8 = i6 + 4 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i4 = i7;
 i3 = i4 - i2 | 0;
 i1 = i9 + (0 - (i3 >> 2) << 2) | 0;
 HEAP32[i8 >> 2] = i1;
 if ((i3 | 0) > 0) _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
 i2 = i5 + 4 | 0;
 i3 = i6 + 8 | 0;
 i1 = (HEAP32[i2 >> 2] | 0) - i4 | 0;
 if ((i1 | 0) > 0) {
  _memcpy(HEAP32[i3 >> 2] | 0, i7 | 0, i1 | 0) | 0;
  HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + (i1 >>> 2 << 2);
 }
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i8 >> 2];
 HEAP32[i8 >> 2] = i4;
 i4 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i4;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i8 >> 2];
 return i9 | 0;
}

function _kpmChangePageNoOfRefDataSet(i4, i6, i7) {
 i4 = i4 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 L1 : do if (!i4) {
  _arLog(0, 3, 20356, i9);
  i1 = -1;
 } else {
  i3 = HEAP32[i4 + 4 >> 2] | 0;
  i8 = (i6 | 0) == -1;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i3 | 0)) break;
   i2 = (HEAP32[i4 >> 2] | 0) + (i1 * 132 | 0) + 124 | 0;
   i5 = HEAP32[i2 >> 2] | 0;
   if ((i5 | 0) == (i6 | 0) | i8 & (i5 | 0) > -1) HEAP32[i2 >> 2] = i7;
   i1 = i1 + 1 | 0;
  }
  i5 = HEAP32[i4 + 12 >> 2] | 0;
  i2 = i4 + 8 | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i5 | 0)) {
    i1 = 0;
    break L1;
   }
   i3 = (HEAP32[i2 >> 2] | 0) + (i1 * 12 | 0) + 8 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   if ((i4 | 0) == (i6 | 0) | i8 & (i4 | 0) > -1) HEAP32[i3 >> 2] = i7;
   i1 = i1 + 1 | 0;
  }
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = i2 + 4 | 0;
 i6 = i3 + 4 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  i7 = i1 + -8 | 0;
  i10 = i7;
  i9 = HEAP32[i10 + 4 >> 2] | 0;
  i8 = (HEAP32[i6 >> 2] | 0) + -8 | 0;
  HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i8 + 4 >> 2] = i9;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -8;
  i1 = i7;
 }
 i8 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i6 >> 2] = i8;
 i8 = i3 + 8 | 0;
 i10 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i8 >> 2];
 HEAP32[i8 >> 2] = i10;
 i8 = i2 + 8 | 0;
 i10 = i3 + 12 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i10 >> 2] = i9;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 return;
}

function _alloc_sarray(i9, i10, i11, i12) {
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i1 = HEAP32[i9 + 4 >> 2] | 0;
 i2 = 999999984 / (i11 >>> 0) | 0;
 if (i11 >>> 0 > 999999984) {
  i8 = HEAP32[i9 >> 2] | 0;
  HEAP32[i8 + 20 >> 2] = 70;
  FUNCTION_TABLE_vi[HEAP32[i8 >> 2] & 255](i9);
 }
 i6 = (i2 | 0) < (i12 | 0) ? i2 : i12;
 HEAP32[i1 + 80 >> 2] = i6;
 i7 = _alloc_small(i9, i10, i12 << 2) | 0;
 i8 = ~i12;
 i5 = 0;
 i1 = i6;
 while (1) {
  if (i5 >>> 0 >= i12 >>> 0) break;
  i6 = i12 - i5 | 0;
  i6 = i1 >>> 0 < i6 >>> 0 ? i1 : i6;
  i2 = _alloc_large(i9, i10, Math_imul(i6, i11) | 0) | 0;
  i3 = i5 + i8 | 0;
  i4 = ~i1;
  i4 = i3 >>> 0 > i4 >>> 0 ? i3 : i4;
  i1 = i2;
  i2 = i6;
  i3 = i5;
  while (1) {
   if (!i2) break;
   HEAP32[i7 + (i3 << 2) >> 2] = i1;
   i1 = i1 + i11 | 0;
   i2 = i2 + -1 | 0;
   i3 = i3 + 1 | 0;
  }
  i5 = i5 + -1 - i4 | 0;
  i1 = i6;
 }
 return i7 | 0;
}

function _set_bottom_pointers(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i8 = HEAP32[i1 + 424 >> 2] | 0;
 i9 = HEAP32[i1 + 36 >> 2] | 0;
 i10 = i1 + 316 | 0;
 i11 = i8 + 72 | 0;
 i12 = i8 + 64 | 0;
 i7 = 0;
 i4 = HEAP32[i1 + 216 >> 2] | 0;
 while (1) {
  if ((i7 | 0) >= (i9 | 0)) break;
  i2 = Math_imul(HEAP32[i4 + 36 >> 2] | 0, HEAP32[i4 + 12 >> 2] | 0) | 0;
  i1 = (i2 | 0) / (HEAP32[i10 >> 2] | 0) | 0;
  i6 = ((HEAP32[i4 + 44 >> 2] | 0) >>> 0) % (i2 >>> 0) | 0;
  i6 = (i6 | 0) == 0 ? i2 : i6;
  i2 = i6 + -1 | 0;
  if (!i7) HEAP32[i11 >> 2] = ((i2 | 0) / (i1 | 0) | 0) + 1;
  i5 = HEAP32[(HEAP32[i8 + 56 + (HEAP32[i12 >> 2] << 2) >> 2] | 0) + (i7 << 2) >> 2] | 0;
  i3 = i1 << 1;
  i2 = i5 + (i2 << 2) | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i3 | 0)) break;
   HEAP32[i5 + (i1 + i6 << 2) >> 2] = HEAP32[i2 >> 2];
   i1 = i1 + 1 | 0;
  }
  i7 = i7 + 1 | 0;
  i4 = i4 + 84 | 0;
 }
 return;
}

function __ZN6vision5ImageC2EPhNS_9ImageTypeEmmim(i7, i2, i3, i4, i5, i1, i6) {
 i7 = i7 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i8 + 8 | 0;
 i10 = i8 + 4 | 0;
 i11 = i8;
 HEAP32[i7 >> 2] = i3;
 HEAP32[i7 + 4 >> 2] = i4;
 HEAP32[i7 + 8 >> 2] = i5;
 HEAP32[i7 + 16 >> 2] = i6;
 i5 = Math_imul(i1, i5) | 0;
 HEAP32[i7 + 20 >> 2] = i5;
 HEAP32[i11 >> 2] = 0;
 HEAP8[i10 >> 0] = HEAP8[i8 + 12 >> 0] | 0;
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 __ZNSt3__210shared_ptrIhEC2Ih16NullArrayDeleterIhEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS6_PhEE5valueENS1_5__natEE4typeE(i7 + 24 | 0, i2, i10, i9);
 if ((i1 | 0) < 0) i1 = Math_imul(Math_imul(i6, i4) | 0, __ZN6vision5Image19calculate_unit_sizeENS_9ImageTypeE(i3) | 0) | 0;
 HEAP32[i7 + 12 >> 2] = i1;
 STACKTOP = i8;
 return;
}

function _setMarkerInfoDir(i1, i3, i4) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i5;
 HEAP32[i2 >> 2] = i1;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0) {
  i1 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0) + 216 | 0;
  i1 = HEAP32[i1 >> 2] | 0;
  if ((HEAP32[i1 + 44 >> 2] | 0) > (i3 | 0)) {
   HEAP32[((i3 | 0) < 0 ? 56104 : i1 + 48 + (i3 << 8) | 0) + 16 >> 2] = i4;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[3415] | 0;
   break;
  }
 } else i1 = HEAP32[3413] | 0; while (0);
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i2, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i3 = 0;
 do if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, i6) | 0)) {
  if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 >> 2] | 0, i6) | 0) {
   if ((HEAP32[i2 + 16 >> 2] | 0) != (i4 | 0) ? (i3 = i2 + 20 | 0, (HEAP32[i3 >> 2] | 0) != (i4 | 0)) : 0) {
    HEAP32[i2 + 32 >> 2] = i5;
    HEAP32[i3 >> 2] = i4;
    i6 = i2 + 40 | 0;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
    if ((HEAP32[i2 + 36 >> 2] | 0) == 1 ? (HEAP32[i2 + 24 >> 2] | 0) == 2 : 0) HEAP8[i2 + 54 >> 0] = 1;
    HEAP32[i2 + 44 >> 2] = 4;
    break;
   }
   if ((i5 | 0) == 1) HEAP32[i2 + 32 >> 2] = 1;
  }
 } else __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, i2, i4, i5); while (0);
 return;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv(i3, i1, i4) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i5 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i7;
 if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i3, i1, 0) | 0)) if ((i1 | 0) != 0 ? (i6 = ___dynamic_cast(i1, 13232, 13216, 0) | 0, (i6 | 0) != 0) : 0) {
  i1 = i5 + 4 | 0;
  i2 = i1 + 52 | 0;
  do {
   HEAP32[i1 >> 2] = 0;
   i1 = i1 + 4 | 0;
  } while ((i1 | 0) < (i2 | 0));
  HEAP32[i5 >> 2] = i6;
  HEAP32[i5 + 8 >> 2] = i3;
  HEAP32[i5 + 12 >> 2] = -1;
  HEAP32[i5 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 31](i6, i5, HEAP32[i4 >> 2] | 0, 1);
  if ((HEAP32[i5 + 24 >> 2] | 0) == 1) {
   HEAP32[i4 >> 2] = HEAP32[i5 + 16 >> 2];
   i1 = 1;
  } else i1 = 0;
 } else i1 = 0; else i1 = 1;
 STACKTOP = i7;
 return i1 | 0;
}

function __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var d4 = 0.0;
 d4 = +__ZN6vision11DotProduct9IfEET_PKS1_S3_(i3, i2);
 HEAPF32[i1 >> 2] = +HEAPF32[i1 >> 2] - d4 * +HEAPF32[i2 >> 2];
 i3 = i1 + 4 | 0;
 HEAPF32[i3 >> 2] = +HEAPF32[i3 >> 2] - d4 * +HEAPF32[i2 + 4 >> 2];
 i3 = i1 + 8 | 0;
 HEAPF32[i3 >> 2] = +HEAPF32[i3 >> 2] - d4 * +HEAPF32[i2 + 8 >> 2];
 i3 = i1 + 12 | 0;
 HEAPF32[i3 >> 2] = +HEAPF32[i3 >> 2] - d4 * +HEAPF32[i2 + 12 >> 2];
 i3 = i1 + 16 | 0;
 HEAPF32[i3 >> 2] = +HEAPF32[i3 >> 2] - d4 * +HEAPF32[i2 + 16 >> 2];
 i3 = i1 + 20 | 0;
 HEAPF32[i3 >> 2] = +HEAPF32[i3 >> 2] - d4 * +HEAPF32[i2 + 20 >> 2];
 i3 = i1 + 24 | 0;
 HEAPF32[i3 >> 2] = +HEAPF32[i3 >> 2] - d4 * +HEAPF32[i2 + 24 >> 2];
 i3 = i1 + 28 | 0;
 HEAPF32[i3 >> 2] = +HEAPF32[i3 >> 2] - d4 * +HEAPF32[i2 + 28 >> 2];
 i3 = i1 + 32 | 0;
 HEAPF32[i3 >> 2] = +HEAPF32[i3 >> 2] - d4 * +HEAPF32[i2 + 32 >> 2];
 return;
}

function _arUtilMatInvf(i3, i5) {
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0;
 i6 = _arMatrixAlloc(4, 4) | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  i4 = i1 << 2;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 4) break;
   HEAPF64[(HEAP32[i6 >> 2] | 0) + (i2 + i4 << 3) >> 3] = +HEAPF32[i3 + (i1 << 4) + (i2 << 2) >> 2];
   i2 = i2 + 1 | 0;
  }
  i1 = i1 + 1 | 0;
 }
 i1 = HEAP32[i6 >> 2] | 0;
 i4 = i1 + 96 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = 0;
 HEAP32[i4 + 20 >> 2] = 0;
 HEAPF64[i1 + 120 >> 3] = 1.0;
 _arMatrixSelfInv(i6) | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  i3 = i1 << 2;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 4) break;
   HEAPF32[i5 + (i1 << 4) + (i2 << 2) >> 2] = +HEAPF64[(HEAP32[i6 >> 2] | 0) + (i2 + i3 << 3) >> 3];
   i2 = i2 + 1 | 0;
  }
  i1 = i1 + 1 | 0;
 }
 _arMatrixFree(i6) | 0;
 return 0;
}

function _arUtilMatInv(i3, i5) {
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0;
 i6 = _arMatrixAlloc(4, 4) | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  i4 = i1 << 2;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 4) break;
   HEAPF64[(HEAP32[i6 >> 2] | 0) + (i2 + i4 << 3) >> 3] = +HEAPF64[i3 + (i1 << 5) + (i2 << 3) >> 3];
   i2 = i2 + 1 | 0;
  }
  i1 = i1 + 1 | 0;
 }
 i1 = HEAP32[i6 >> 2] | 0;
 i4 = i1 + 96 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = 0;
 HEAP32[i4 + 20 >> 2] = 0;
 HEAPF64[i1 + 120 >> 3] = 1.0;
 _arMatrixSelfInv(i6) | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  i3 = i1 << 2;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 4) break;
   HEAPF64[i5 + (i1 << 5) + (i2 << 3) >> 3] = +HEAPF64[(HEAP32[i6 >> 2] | 0) + (i2 + i3 << 3) >> 3];
   i2 = i2 + 1 | 0;
  }
  i1 = i1 + 1 | 0;
 }
 _arMatrixFree(i6) | 0;
 return 0;
}

function _getDeltaS(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i7 = i8 + 24 | 0;
 i6 = i8 + 12 | 0;
 i5 = i8;
 HEAP32[i7 + 4 >> 2] = 8;
 HEAP32[i7 + 8 >> 2] = 1;
 HEAP32[i7 >> 2] = i1;
 HEAP32[i6 + 4 >> 2] = i4;
 HEAP32[i6 + 8 >> 2] = 1;
 HEAP32[i6 >> 2] = i2;
 HEAP32[i5 + 4 >> 2] = i4;
 HEAP32[i5 + 8 >> 2] = 8;
 HEAP32[i5 >> 2] = i3;
 i4 = _arMatrixAllocTransf(i5) | 0;
 if (!i4) i1 = -1; else {
  i3 = _arMatrixAllocMulf(i4, i5) | 0;
  if (!i3) i1 = -1; else {
   i2 = _arMatrixAllocMulf(i4, i6) | 0;
   if (!i2) i1 = -1; else {
    if ((_arMatrixSelfInvf(i3) | 0) < 0) i1 = -1; else {
     _arMatrixMulf(i7, i3, i2) | 0;
     i1 = 0;
    }
    _arMatrixFreef(i2) | 0;
   }
   _arMatrixFreef(i3) | 0;
  }
  _arMatrixFreef(i4) | 0;
 }
 STACKTOP = i8;
 return i1 | 0;
}

function _vsnprintf(i2, i1, i5, i6) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(160);
 i3 = i8 + 144 | 0;
 i7 = i8;
 _memcpy(i7 | 0, 11696, 144) | 0;
 if ((i1 + -1 | 0) >>> 0 > 2147483646) if (!i1) {
  i2 = i3;
  i1 = 1;
  i4 = 4;
 } else {
  i1 = ___errno_location() | 0;
  HEAP32[i1 >> 2] = 75;
  i1 = -1;
 } else i4 = 4;
 if ((i4 | 0) == 4) {
  i4 = -2 - i2 | 0;
  i4 = i1 >>> 0 > i4 >>> 0 ? i4 : i1;
  HEAP32[i7 + 48 >> 2] = i4;
  i3 = i7 + 20 | 0;
  HEAP32[i3 >> 2] = i2;
  HEAP32[i7 + 44 >> 2] = i2;
  i1 = i2 + i4 | 0;
  i2 = i7 + 16 | 0;
  HEAP32[i2 >> 2] = i1;
  HEAP32[i7 + 28 >> 2] = i1;
  i1 = _vfprintf(i7, i5, i6) | 0;
  if (i4) {
   i7 = HEAP32[i3 >> 2] | 0;
   HEAP8[i7 + (((i7 | 0) == (HEAP32[i2 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
  }
 }
 STACKTOP = i8;
 return i1 | 0;
}

function _pass2_no_dither(i10, i11, i12, i13) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i14 = 0, i15 = 0;
 i14 = HEAP32[(HEAP32[i10 + 460 >> 2] | 0) + 24 >> 2] | 0;
 i15 = HEAP32[i10 + 112 >> 2] | 0;
 i8 = 0;
 while (1) {
  if ((i8 | 0) >= (i13 | 0)) break;
  i6 = HEAP32[i11 + (i8 << 2) >> 2] | 0;
  i7 = i15;
  i9 = HEAP32[i12 + (i8 << 2) >> 2] | 0;
  while (1) {
   if (!i7) break;
   i2 = (HEAPU8[i6 >> 0] | 0) >>> 3;
   i3 = (HEAPU8[i6 + 1 >> 0] | 0) >>> 2;
   i4 = (HEAPU8[i6 + 2 >> 0] | 0) >>> 3;
   i5 = (HEAP32[i14 + (i2 << 2) >> 2] | 0) + (i3 << 6) + (i4 << 1) | 0;
   i1 = HEAP16[i5 >> 1] | 0;
   if (!(i1 << 16 >> 16)) {
    _fill_inverse_cmap(i10, i2, i3, i4);
    i1 = HEAP16[i5 >> 1] | 0;
   }
   HEAP8[i9 >> 0] = (i1 & 65535) + 255;
   i6 = i6 + 3 | 0;
   i7 = i7 + -1 | 0;
   i9 = i9 + 1 | 0;
  }
  i8 = i8 + 1 | 0;
 }
 return;
}

function __ZN6vision21HoughSimilarityVoting4initEffffiiii(i1, d2, d3, d4, d5, i6, i7, i8, i9) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 HEAPF32[i1 + 20 >> 2] = d2;
 HEAPF32[i1 + 24 >> 2] = d3;
 HEAPF32[i1 + 28 >> 2] = d4;
 HEAPF32[i1 + 32 >> 2] = d5;
 HEAPF32[i1 + 36 >> 2] = -1.0;
 HEAPF32[i1 + 40 >> 2] = 1.0;
 HEAP32[i1 + 52 >> 2] = i6;
 HEAP32[i1 + 56 >> 2] = i7;
 HEAP32[i1 + 60 >> 2] = i8;
 HEAP32[i1 + 64 >> 2] = i9;
 i9 = Math_imul(i7, i6) | 0;
 HEAP32[i1 + 84 >> 2] = i9;
 i9 = Math_imul(i9, i8) | 0;
 HEAP32[i1 + 88 >> 2] = i9;
 HEAPF32[i1 + 44 >> 2] = 10.0;
 HEAPF32[i1 + 48 >> 2] = .4342944622039795;
 HEAP8[i1 + 16 >> 0] = (i7 | i6 | 0) == 0 & 1;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE5clearEv(i1 + 92 | 0);
 return;
}

function __ZN6vision16Quadratic3PointsIfEEbRT_S2_S2_PKS1_S4_S4_(i9, i2, i11, i10, i5, i6) {
 i9 = i9 | 0;
 i2 = i2 | 0;
 i11 = i11 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var d1 = 0.0, d3 = 0.0, d4 = 0.0, d7 = 0.0, d8 = 0.0, i12 = 0, d13 = 0.0;
 d1 = +HEAPF32[i6 >> 2];
 d7 = +HEAPF32[i5 >> 2];
 d8 = +HEAPF32[i10 >> 2];
 d4 = d1 - d8;
 d1 = (d1 - d7) * d4;
 d3 = d8 - d7;
 d4 = d3 * d4;
 if (d3 == 0.0 | (d1 == 0.0 | d4 == 0.0)) {
  HEAPF32[i9 >> 2] = 0.0;
  HEAPF32[i2 >> 2] = 0.0;
  i2 = 0;
  d1 = 0.0;
 } else {
  d8 = d8 * d8;
  i12 = i5 + 4 | 0;
  d13 = +HEAPF32[i12 >> 2];
  i5 = i10 + 4 | 0;
  d1 = (+HEAPF32[i6 + 4 >> 2] - d13) / d1 - (+HEAPF32[i5 >> 2] - d13) / d4;
  HEAPF32[i9 >> 2] = d1;
  d1 = (+HEAPF32[i5 >> 2] - +HEAPF32[i12 >> 2] + (d7 * d7 - d8) * d1) / d3;
  HEAPF32[i2 >> 2] = d1;
  i2 = 1;
  d1 = +HEAPF32[i5 >> 2] - d8 * +HEAPF32[i9 >> 2] - d1 * +HEAPF32[i10 >> 2];
 }
 HEAPF32[i11 >> 2] = d1;
 return i2 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwl(i5, i1, i6) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 i8 = i5 + 24 | 0;
 i9 = i5 + 28 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) >= (i6 | 0)) break;
  i3 = HEAP32[i8 >> 2] | 0;
  i4 = HEAP32[i9 >> 2] | 0;
  if (i3 >>> 0 < i4 >>> 0) {
   i4 = i4 - i3 >> 2;
   i10 = i6 - i2 | 0;
   i4 = (i10 | 0) < (i4 | 0) ? i10 : i4;
   __ZNSt3__211char_traitsIwE4copyEPwPKwm(i3, i1, i4) | 0;
   HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + (i4 << 2);
   i1 = i1 + (i4 << 2) | 0;
   i2 = i4 + i2 | 0;
  } else {
   i4 = HEAP32[(HEAP32[i5 >> 2] | 0) + 52 >> 2] | 0;
   i10 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
   if ((FUNCTION_TABLE_iii[i4 & 63](i5, i10) | 0) == (i7 | 0)) break;
   i1 = i1 + 4 | 0;
   i2 = i2 + 1 | 0;
  }
 }
 return i2 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 L1 : do if ((i1 | 0) != (i4 | 0)) {
  i2 = HEAP8[i1 >> 0] | 0;
  if (i2 << 24 >> 24 != 95) {
   if (((i2 << 24 >> 24) + -48 | 0) >>> 0 >= 10) break;
   while (1) {
    i1 = i1 + 1 | 0;
    if ((i1 | 0) == (i4 | 0)) {
     i1 = i4;
     break L1;
    }
    if (((HEAP8[i1 >> 0] | 0) + -48 | 0) >>> 0 >= 10) break L1;
   }
  }
  i2 = i1 + 1 | 0;
  if ((i2 | 0) != (i4 | 0)) {
   i2 = HEAP8[i2 >> 0] | 0;
   if (((i2 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
    i1 = i1 + 2 | 0;
    break;
   }
   if (i2 << 24 >> 24 == 95) {
    i2 = i1 + 2 | 0;
    while (1) {
     if ((i2 | 0) == (i4 | 0)) break L1;
     i3 = HEAP8[i2 >> 0] | 0;
     if (((i3 << 24 >> 24) + -48 | 0) >>> 0 >= 10) break;
     i2 = i2 + 1 | 0;
    }
    return (i3 << 24 >> 24 == 95 ? i2 + 1 | 0 : i1) | 0;
   }
  }
 } while (0);
 return i1 | 0;
}

function __ZN6vision29SolveNullVector8x9DestructiveIfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 i3 = i4;
 if (((((((__ZN6vision27OrthogonalizePivot8x9Basis0IfEEbPT_S2_(i3, i2) | 0 ? __ZN6vision27OrthogonalizePivot8x9Basis1IfEEbPT_S2_(i3, i2) | 0 : 0) ? __ZN6vision27OrthogonalizePivot8x9Basis2IfEEbPT_S2_(i3, i2) | 0 : 0) ? __ZN6vision27OrthogonalizePivot8x9Basis3IfEEbPT_S2_(i3, i2) | 0 : 0) ? __ZN6vision27OrthogonalizePivot8x9Basis4IfEEbPT_S2_(i3, i2) | 0 : 0) ? __ZN6vision27OrthogonalizePivot8x9Basis5IfEEbPT_S2_(i3, i2) | 0 : 0) ? __ZN6vision27OrthogonalizePivot8x9Basis6IfEEbPT_S2_(i3, i2) | 0 : 0) ? __ZN6vision27OrthogonalizePivot8x9Basis7IfEEbPT_S2_(i3, i2) | 0 : 0) i1 = __ZN6vision24OrthogonalizeIdentity8x9IfEEbPT_PKS1_(i1, i3) | 0; else i1 = 0;
 STACKTOP = i4;
 return i1 | 0;
}

function __ZNSt3__211__stdoutbufIwE4syncEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i10 + 8 | 0;
 i4 = i10;
 i5 = i1 + 36 | 0;
 i6 = i1 + 40 | 0;
 i7 = i3 + 8 | 0;
 i8 = i3;
 i2 = i1 + 32 | 0;
 L1 : while (1) {
  i1 = HEAP32[i5 >> 2] | 0;
  i1 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 31](i1, HEAP32[i6 >> 2] | 0, i3, i7, i4) | 0;
  i11 = (HEAP32[i4 >> 2] | 0) - i8 | 0;
  if ((_fwrite(i3, 1, i11, HEAP32[i2 >> 2] | 0) | 0) != (i11 | 0)) {
   i1 = -1;
   break;
  }
  switch (i1 | 0) {
  case 1:
   break;
  case 2:
   {
    i1 = -1;
    break L1;
   }
  default:
   {
    i9 = 4;
    break L1;
   }
  }
 }
 if ((i9 | 0) == 4) i1 = ((_fflush(HEAP32[i2 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNSt3__211__stdoutbufIcE4syncEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i10 + 8 | 0;
 i4 = i10;
 i5 = i1 + 36 | 0;
 i6 = i1 + 40 | 0;
 i7 = i3 + 8 | 0;
 i8 = i3;
 i2 = i1 + 32 | 0;
 L1 : while (1) {
  i1 = HEAP32[i5 >> 2] | 0;
  i1 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 31](i1, HEAP32[i6 >> 2] | 0, i3, i7, i4) | 0;
  i11 = (HEAP32[i4 >> 2] | 0) - i8 | 0;
  if ((_fwrite(i3, 1, i11, HEAP32[i2 >> 2] | 0) | 0) != (i11 | 0)) {
   i1 = -1;
   break;
  }
  switch (i1 | 0) {
  case 1:
   break;
  case 2:
   {
    i1 = -1;
    break L1;
   }
  default:
   {
    i9 = 4;
    break L1;
   }
  }
 }
 if ((i9 | 0) == 4) i1 = ((_fflush(HEAP32[i2 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i2, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i3 = 0, i4 = 0;
 L1 : do if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, 0) | 0)) {
  i4 = HEAP32[i1 + 12 >> 2] | 0;
  i3 = i1 + 16 + (i4 << 3) | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1 + 16 | 0, i2, i5, i6);
  if ((i4 | 0) > 1) {
   i4 = i2 + 54 | 0;
   i1 = i1 + 24 | 0;
   do {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i2, i5, i6);
    if (HEAP8[i4 >> 0] | 0) break L1;
    i1 = i1 + 8 | 0;
   } while (i1 >>> 0 < i3 >>> 0);
  }
 } else __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i5, i6); while (0);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl(i5, i1, i6) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 i8 = i5 + 24 | 0;
 i9 = i5 + 28 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) >= (i6 | 0)) break;
  i3 = HEAP32[i8 >> 2] | 0;
  i4 = HEAP32[i9 >> 2] | 0;
  if (i3 >>> 0 < i4 >>> 0) {
   i4 = i4 - i3 | 0;
   i10 = i6 - i2 | 0;
   i4 = (i10 | 0) < (i4 | 0) ? i10 : i4;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm(i3, i1, i4) | 0;
   HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i4;
   i1 = i1 + i4 | 0;
   i2 = i4 + i2 | 0;
  } else {
   i4 = HEAP32[(HEAP32[i5 >> 2] | 0) + 52 >> 2] | 0;
   i10 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
   if ((FUNCTION_TABLE_iii[i4 & 63](i5, i10) | 0) == (i7 | 0)) break;
   i1 = i1 + 1 | 0;
   i2 = i2 + 1 | 0;
  }
 }
 return i2 | 0;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(i1, i5, i3, i2, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 HEAP8[i5 + 53 >> 0] = 1;
 do if ((HEAP32[i5 + 4 >> 2] | 0) == (i2 | 0)) {
  HEAP8[i5 + 52 >> 0] = 1;
  i1 = i5 + 16 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (!i2) {
   HEAP32[i1 >> 2] = i3;
   HEAP32[i5 + 24 >> 2] = i4;
   HEAP32[i5 + 36 >> 2] = 1;
   if (!((i4 | 0) == 1 ? (HEAP32[i5 + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[i5 + 54 >> 0] = 1;
   break;
  }
  if ((i2 | 0) != (i3 | 0)) {
   i4 = i5 + 36 | 0;
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
   HEAP8[i5 + 54 >> 0] = 1;
   break;
  }
  i2 = i5 + 24 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == 2) {
   HEAP32[i2 >> 2] = i4;
   i1 = i4;
  }
  if ((i1 | 0) == 1 ? (HEAP32[i5 + 48 >> 2] | 0) == 1 : 0) HEAP8[i5 + 54 >> 0] = 1;
 } while (0);
 return;
}

function __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc(i1, i5, i6, i2, i3, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 i10 = i7;
 i11 = i7 + 116 | 0;
 i8 = i7 + 104 | 0;
 i9 = i7 + 112 | 0;
 HEAP32[i11 >> 2] = i10 + 100;
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc(i1, i10, i11, i2, i3, i4);
 i2 = i8;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i9 >> 2] = i10;
 i2 = __ZNSt3__212_GLOBAL__N_17countofIwEEmPKT_S4_(i5, HEAP32[i6 >> 2] | 0) | 0;
 i1 = ___uselocale(HEAP32[i1 >> 2] | 0) | 0;
 i2 = _mbsrtowcs(i5, i9, i2, i8) | 0;
 if (i1 | 0) ___uselocale(i1) | 0;
 if ((i2 | 0) == -1) __ZNSt3__221__throw_runtime_errorEPKc(0); else {
  HEAP32[i6 >> 2] = i5 + (i2 << 2);
  STACKTOP = i7;
  return;
 }
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwl(i5, i1, i6) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0;
 __ZNSt3__211char_traitsIwE3eofEv() | 0;
 i7 = i5 + 12 | 0;
 i8 = i5 + 16 | 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) >= (i6 | 0)) break;
  i2 = HEAP32[i7 >> 2] | 0;
  i3 = HEAP32[i8 >> 2] | 0;
  if (i2 >>> 0 < i3 >>> 0) {
   i3 = i3 - i2 >> 2;
   i9 = i6 - i4 | 0;
   i3 = (i9 | 0) < (i3 | 0) ? i9 : i3;
   __ZNSt3__211char_traitsIwE4copyEPwPKwm(i1, i2, i3) | 0;
   HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + (i3 << 2);
   i1 = i1 + (i3 << 2) | 0;
   i2 = i3;
  } else {
   i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 40 >> 2] & 127](i5) | 0;
   if ((i2 | 0) == -1) break;
   i2 = __ZNSt3__211char_traitsIwE12to_char_typeEj(i2) | 0;
   HEAP32[i1 >> 2] = i2;
   i1 = i1 + 4 | 0;
   i2 = 1;
  }
  i4 = i2 + i4 | 0;
 }
 return i4 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(i5, i6, i1, i4, i8, i9, i10) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 if ((-17 - i6 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i5);
 if ((HEAP8[i5 + 11 >> 0] | 0) < 0) i7 = HEAP32[i5 >> 2] | 0; else i7 = i5;
 if (i6 >>> 0 < 2147483623) {
  i2 = i1 + i6 | 0;
  i3 = i6 << 1;
  i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  i2 = i2 >>> 0 < 11 ? 11 : i2 + 16 & -16;
 } else i2 = -17;
 i3 = __Znwm(i2) | 0;
 if (i8 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i3, i7, i8) | 0;
 i1 = i4 - i9 - i8 | 0;
 if (i1 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i3 + i8 + i10 | 0, i7 + i8 + i9 | 0, i1) | 0;
 if ((i6 | 0) != 10) __ZdlPv(i7);
 HEAP32[i5 >> 2] = i3;
 HEAP32[i5 + 8 >> 2] = i2 | -2147483648;
 return;
}

function ___strchrnul(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 i3 = i4 & 255;
 L1 : do if (!i3) i1 = i1 + (_strlen(i1) | 0) | 0; else {
  if (i1 & 3) {
   i2 = i4 & 255;
   do {
    i5 = HEAP8[i1 >> 0] | 0;
    if (i5 << 24 >> 24 == 0 ? 1 : i5 << 24 >> 24 == i2 << 24 >> 24) break L1;
    i1 = i1 + 1 | 0;
   } while ((i1 & 3 | 0) != 0);
  }
  i3 = Math_imul(i3, 16843009) | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  L10 : do if (!((i2 & -2139062144 ^ -2139062144) & i2 + -16843009)) do {
   i5 = i2 ^ i3;
   if ((i5 & -2139062144 ^ -2139062144) & i5 + -16843009 | 0) break L10;
   i1 = i1 + 4 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
  } while (!((i2 & -2139062144 ^ -2139062144) & i2 + -16843009 | 0)); while (0);
  i2 = i4 & 255;
  while (1) {
   i5 = HEAP8[i1 >> 0] | 0;
   if (i5 << 24 >> 24 == 0 ? 1 : i5 << 24 >> 24 == i2 << 24 >> 24) break; else i1 = i1 + 1 | 0;
  }
 } while (0);
 return i1 | 0;
}

function __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 if (i2 & 2048) {
  HEAP8[i1 >> 0] = 43;
  i1 = i1 + 1 | 0;
 }
 if (i2 & 1024) {
  HEAP8[i1 >> 0] = 35;
  i1 = i1 + 1 | 0;
 }
 i6 = i2 & 260;
 i4 = i2 & 16384;
 i5 = (i6 | 0) == 260;
 if (i5) i7 = 0; else {
  HEAP8[i1 >> 0] = 46;
  HEAP8[i1 + 1 >> 0] = 42;
  i7 = 1;
  i1 = i1 + 2 | 0;
 }
 while (1) {
  i2 = HEAP8[i3 >> 0] | 0;
  if (!(i2 << 24 >> 24)) break;
  HEAP8[i1 >> 0] = i2;
  i3 = i3 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 L14 : do switch (i6 & 511) {
 case 4:
  {
   i2 = i4 >>> 9 & 255 ^ 102;
   break;
  }
 case 256:
  {
   i2 = i4 >>> 9 & 255 ^ 101;
   break;
  }
 default:
  {
   i2 = i4 >>> 9 & 255;
   if (i5) {
    i2 = i2 ^ 97;
    break L14;
   } else {
    i2 = i2 ^ 103;
    break L14;
   }
  }
 } while (0);
 HEAP8[i1 >> 0] = i2;
 return i7 | 0;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = i2 + 4 | 0;
 i6 = i3 + 4 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  i7 = i1 + -24 | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_((HEAP32[i6 >> 2] | 0) + -24 | 0, i7);
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -24;
  i1 = i7;
 }
 i4 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i6 >> 2] = i4;
 i4 = i3 + 8 | 0;
 i7 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i7;
 i4 = i2 + 8 | 0;
 i7 = i3 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 return;
}

function _ar2GetImageValue(i1, i2, i6, d8, d9, i10) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 d8 = +d8;
 d9 = +d9;
 i10 = i10 | 0;
 var d3 = 0.0, i4 = 0, i5 = 0, i7 = 0, i11 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i11 = i13 + 4 | 0;
 i12 = i13;
 if ((((_ar2ScreenCoord2MarkerCoord(i1, i2, d8, d9, i11, i12) | 0) >= 0 ? (d3 = +HEAPF32[i6 + 12 >> 2], i4 = ~~(+HEAPF32[i11 >> 2] * d3 / 25.399999618530273 + .5), (i4 | 0) >= 0) : 0) ? (i5 = HEAP32[i6 + 4 >> 2] | 0, (i5 | 0) > (i4 | 0)) : 0) ? (i11 = HEAP32[i6 + 8 >> 2] | 0, i7 = ~~(+(i11 | 0) - d3 * +HEAPF32[i12 >> 2] / 25.399999618530273 + .5), (i7 | 0) > -1 & (i11 | 0) > (i7 | 0)) : 0) {
  i1 = (Math_imul(i5, i7) | 0) + i4 | 0;
  HEAP8[i10 >> 0] = HEAP8[(HEAP32[i6 >> 2] | 0) + i1 >> 0] | 0;
  i1 = 0;
 } else i1 = -1;
 STACKTOP = i13;
 return i1 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl(i5, i1, i6) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0;
 __ZNSt3__211char_traitsIcE3eofEv() | 0;
 i7 = i5 + 12 | 0;
 i8 = i5 + 16 | 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) >= (i6 | 0)) break;
  i2 = HEAP32[i7 >> 2] | 0;
  i3 = HEAP32[i8 >> 2] | 0;
  if (i2 >>> 0 < i3 >>> 0) {
   i3 = i3 - i2 | 0;
   i9 = i6 - i4 | 0;
   i3 = (i9 | 0) < (i3 | 0) ? i9 : i3;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm(i1, i2, i3) | 0;
   HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i3;
   i1 = i1 + i3 | 0;
   i2 = i3;
  } else {
   i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 40 >> 2] & 127](i5) | 0;
   if ((i2 | 0) == -1) break;
   i2 = __ZNSt3__211char_traitsIcE12to_char_typeEi(i2) | 0;
   HEAP8[i1 >> 0] = i2;
   i1 = i1 + 1 | 0;
   i2 = 1;
  }
  i4 = i2 + i4 | 0;
 }
 return i4 | 0;
}

function __ZNK6vision21HoughSimilarityVoting12mapVoteToBinERfS1_S1_S1_ffff(i1, i2, i3, i4, i5, d6, d7, d8, d9) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 d7 = +d7;
 d8 = +d8;
 d9 = +d9;
 var d10 = 0.0, d11 = 0.0;
 d10 = +(HEAP32[i1 + 52 >> 2] | 0);
 d11 = +HEAPF32[i1 + 20 >> 2];
 d6 = +__ZN6vision12SafeDivisionIfEET_S1_S1_(d6 - d11, +HEAPF32[i1 + 24 >> 2] - d11) * d10;
 HEAPF32[i2 >> 2] = d6;
 d6 = +(HEAP32[i1 + 56 >> 2] | 0);
 d10 = +HEAPF32[i1 + 28 >> 2];
 d7 = +__ZN6vision12SafeDivisionIfEET_S1_S1_(d7 - d10, +HEAPF32[i1 + 32 >> 2] - d10) * d6;
 HEAPF32[i3 >> 2] = d7;
 HEAPF32[i4 >> 2] = (d8 + 3.141592653589793) * .15915494309189535 * +(HEAP32[i1 + 60 >> 2] | 0);
 d8 = +(HEAP32[i1 + 64 >> 2] | 0);
 d7 = +HEAPF32[i1 + 36 >> 2];
 d9 = +__ZN6vision12SafeDivisionIfEET_S1_S1_(d9 - d7, +HEAPF32[i1 + 40 >> 2] - d7) * d8;
 HEAPF32[i5 >> 2] = d9;
 return;
}

function _fopen(i1, i3) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i6 = i7 + 32 | 0;
 i5 = i7 + 16 | 0;
 i2 = i7;
 if (_strchr(47017, HEAP8[i3 >> 0] | 0) | 0) {
  i4 = ___fmodeflags(i3) | 0;
  HEAP32[i2 >> 2] = i1;
  HEAP32[i2 + 4 >> 2] = i4 | 32768;
  HEAP32[i2 + 8 >> 2] = 438;
  i2 = ___syscall_ret(___syscall5(5, i2 | 0) | 0) | 0;
  if ((i2 | 0) >= 0) {
   if (i4 & 524288 | 0) {
    HEAP32[i5 >> 2] = i2;
    HEAP32[i5 + 4 >> 2] = 2;
    HEAP32[i5 + 8 >> 2] = 1;
    ___syscall221(221, i5 | 0) | 0;
   }
   i1 = ___fdopen(i2, i3) | 0;
   if (!i1) {
    HEAP32[i6 >> 2] = i2;
    ___syscall6(6, i6 | 0) | 0;
    i1 = 0;
   }
  } else i1 = 0;
 } else {
  i1 = ___errno_location() | 0;
  HEAP32[i1 >> 2] = 22;
  i1 = 0;
 }
 STACKTOP = i7;
 return i1 | 0;
}

function __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 __ZNKSt3__28ios_base6getlocEv(i7, i2);
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58824) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 48 >> 2] & 15](i2, 10736, 10768, i3) | 0;
 i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58832) | 0;
 i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] & 127](i3) | 0;
 HEAP32[i4 >> 2] = i2;
 i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0;
 HEAP32[i5 >> 2] = i4;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 20 >> 2] & 63](i1, i3);
 __ZNSt3__26localeD2Ev(i7);
 STACKTOP = i6;
 return;
}

function __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 var i4 = 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i1 >> 2] + +HEAPF32[i2 >> 2] * d3;
 i4 = i1 + 4 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] + +HEAPF32[i2 + 4 >> 2] * d3;
 i4 = i1 + 8 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] + +HEAPF32[i2 + 8 >> 2] * d3;
 i4 = i1 + 12 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] + +HEAPF32[i2 + 12 >> 2] * d3;
 i4 = i1 + 16 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] + +HEAPF32[i2 + 16 >> 2] * d3;
 i4 = i1 + 20 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] + +HEAPF32[i2 + 20 >> 2] * d3;
 i4 = i1 + 24 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] + +HEAPF32[i2 + 24 >> 2] * d3;
 i4 = i1 + 28 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] + +HEAPF32[i2 + 28 >> 2] * d3;
 i1 = i1 + 32 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i1 >> 2] + +HEAPF32[i2 + 32 >> 2] * d3;
 return;
}

function __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 __ZNKSt3__28ios_base6getlocEv(i7, i2);
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58792) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 15](i2, 10736, 10768, i3) | 0;
 i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58808) | 0;
 i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] & 127](i3) | 0;
 HEAP8[i4 >> 0] = i2;
 i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0;
 HEAP8[i5 >> 0] = i4;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 20 >> 2] & 63](i1, i3);
 __ZNSt3__26localeD2Ev(i7);
 STACKTOP = i6;
 return;
}

function __ZL19kpmCreateHandleCoreP9ARParamLTiii(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = _calloc(1, 4156) | 0;
 if (!i5) {
  _arLog(0, 3, 20581, i6);
  _exit(1);
 } else {
  i7 = __Znwm(4) | 0;
  __ZN6vision20VisualDatabaseFacadeC2Ev(i7);
  HEAP32[i5 >> 2] = i7;
  HEAP32[i5 + 4 >> 2] = i1;
  HEAP32[i5 + 8 >> 2] = i4;
  HEAP32[i5 + 12 >> 2] = i2;
  HEAP32[i5 + 16 >> 2] = i3;
  HEAP32[i5 + 20 >> 2] = 1;
  HEAP32[i5 + 24 >> 2] = -1;
  i4 = i5 + 28 | 0;
  HEAP32[i4 >> 2] = 0;
  HEAP32[i4 + 4 >> 2] = 0;
  HEAP32[i4 + 8 >> 2] = 0;
  HEAP32[i4 + 12 >> 2] = 0;
  HEAP32[i4 + 16 >> 2] = 0;
  HEAP32[i4 + 20 >> 2] = 0;
  HEAP32[i4 + 24 >> 2] = 0;
  HEAP32[i4 + 28 >> 2] = 0;
  STACKTOP = i6;
  return i5 | 0;
 }
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 L1 : do if ((i1 | 0) != (i4 | 0)) {
  switch (HEAP8[i1 >> 0] | 0) {
  case 104:
   {
    i3 = i1 + 1 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i3, i4) | 0;
    if ((i2 | 0) == (i3 | 0) | (i2 | 0) == (i4 | 0)) break L1;
    return ((HEAP8[i2 >> 0] | 0) == 95 ? i2 + 1 | 0 : i1) | 0;
   }
  case 118:
   break;
  default:
   break L1;
  }
  i5 = i1 + 1 | 0;
  i2 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i5, i4) | 0;
  if ((!((i2 | 0) == (i5 | 0) | (i2 | 0) == (i4 | 0)) ? (HEAP8[i2 >> 0] | 0) == 95 : 0) ? (i5 = i2 + 1 | 0, i3 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i5, i4) | 0, !((i3 | 0) == (i5 | 0) | (i3 | 0) == (i4 | 0))) : 0) i1 = (HEAP8[i3 >> 0] | 0) == 95 ? i3 + 1 | 0 : i1;
 } while (0);
 return i1 | 0;
}

function __ZN6vision25DoGScaleInvariantDetectorC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 10;
 HEAP32[i1 + 12 >> 2] = 10;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 24 >> 2] = 0;
 HEAP8[i1 + 28 >> 0] = 1;
 __ZN6vision10DoGPyramidC2Ev(i1 + 32 | 0);
 HEAPF32[i1 + 52 >> 2] = 0.0;
 HEAPF32[i1 + 56 >> 2] = 10.0;
 i2 = i1 + 60 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAPF32[i1 + 88 >> 2] = 9.0;
 __ZN6vision21OrientationAssignmentC2Ev(i1 + 92 | 0);
 i2 = i1 + 144 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i1 + 148 >> 2] = 0;
 HEAP32[i1 + 152 >> 2] = 0;
 __ZN6vision25DoGScaleInvariantDetector22setMaxNumFeaturePointsEm(i1, 5e3);
 __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm(i2, 36);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i2, i3, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i8;
 i6 = i2 + 11 | 0;
 i1 = HEAP8[i6 >> 0] | 0;
 i7 = i1 << 24 >> 24 < 0;
 if (i7) i1 = HEAP32[i2 + 4 >> 2] | 0; else i1 = i1 & 255;
 do if (i1 >>> 0 >= i3 >>> 0) if (i7) {
  i7 = (HEAP32[i2 >> 2] | 0) + i3 | 0;
  HEAP8[i5 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i7, i5);
  HEAP32[i2 + 4 >> 2] = i3;
  break;
 } else {
  HEAP8[i5 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i2 + i3 | 0, i5);
  HEAP8[i6 >> 0] = i3;
  break;
 } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(i2, i3 - i1 | 0, i4) | 0; while (0);
 STACKTOP = i8;
 return;
}

function _trackingInitGetResult(i1, i5, i6) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i7;
 if ((i1 | 0) != 0 & (i5 | 0) != 0 & (i6 | 0) != 0) if (_threadGetStatus(i1) | 0) {
  _threadEndWait(i1) | 0;
  i4 = _threadGetArg(i1) | 0;
  if ((i4 | 0) != 0 ? (HEAP32[i4 + 64 >> 2] | 0) != 0 : 0) {
   i3 = i4 + 12 | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 4) break;
     HEAP32[i5 + (i1 << 4) + (i2 << 2) >> 2] = HEAP32[i3 + (i1 << 4) + (i2 << 2) >> 2];
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 1 | 0;
   }
   HEAP32[i6 >> 2] = HEAP32[i4 + 60 >> 2];
   i1 = 1;
  } else i1 = -1;
 } else i1 = 0; else {
  _arLog(0, 3, 38784, i2);
  i1 = -1;
 }
 STACKTOP = i7;
 return i1 | 0;
}

function _setPattRatio(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 var i3 = 0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i8;
 i4 = i8 + 8 | 0;
 HEAP32[i4 >> 2] = i1;
 if (((__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i4) | 0 ? (i5 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i4) | 0, !(d2 <= 0.0 | d2 >= 1.0)) : 0) ? (d6 = d2, i3 = HEAP32[i5 + 216 >> 2] | 0, i3 | 0) : 0) ? (_arSetPattRatio(i3, d6) | 0) == 0 : 0) {
  HEAPF64[i7 >> 3] = d6;
  _arLog(0, 1, 41232, i7);
 }
 STACKTOP = i8;
 return;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i7 = i5 + 4 | 0;
 i4 = i6 + 4 | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i2 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (((i3 | 0) / -36 | 0) * 36 | 0) | 0;
 HEAP32[i4 >> 2] = i1;
 if ((i3 | 0) > 0) {
  _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  i2 = i4;
  i1 = HEAP32[i4 >> 2] | 0;
 } else i2 = i4;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i2 >> 2] = i4;
 i4 = i6 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i3;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 return;
}

function ___stpcpy(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = i2;
 L1 : do if (!((i3 ^ i1) & 3)) {
  if (i3 & 3) do {
   i3 = HEAP8[i2 >> 0] | 0;
   HEAP8[i1 >> 0] = i3;
   if (!(i3 << 24 >> 24)) break L1;
   i2 = i2 + 1 | 0;
   i1 = i1 + 1 | 0;
  } while ((i2 & 3 | 0) != 0);
  i3 = HEAP32[i2 >> 2] | 0;
  if (!((i3 & -2139062144 ^ -2139062144) & i3 + -16843009)) {
   i4 = i1;
   while (1) {
    i2 = i2 + 4 | 0;
    i1 = i4 + 4 | 0;
    HEAP32[i4 >> 2] = i3;
    i3 = HEAP32[i2 >> 2] | 0;
    if ((i3 & -2139062144 ^ -2139062144) & i3 + -16843009 | 0) break; else i4 = i1;
   }
  }
  i4 = 10;
 } else i4 = 10; while (0);
 if ((i4 | 0) == 10) {
  i4 = HEAP8[i2 >> 0] | 0;
  HEAP8[i1 >> 0] = i4;
  if (i4 << 24 >> 24) do {
   i2 = i2 + 1 | 0;
   i1 = i1 + 1 | 0;
   i4 = HEAP8[i2 >> 0] | 0;
   HEAP8[i1 >> 0] = i4;
  } while (i4 << 24 >> 24 != 0);
 }
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_unscoped_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i3, i5) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i2 = 0, i4 = 0;
 if ((i3 - i1 | 0) > 1) {
  if ((HEAP8[i1 >> 0] | 0) == 83 ? (HEAP8[i1 + 1 >> 0] | 0) == 116 : 0) {
   i2 = i1 + 2 | 0;
   if ((i2 | 0) == (i3 | 0)) {
    i4 = 0;
    i2 = i3;
   } else {
    i4 = 0;
    i2 = (HEAP8[i2 >> 0] | 0) == 76 ? i1 + 3 | 0 : i2;
   }
  } else {
   i4 = 1;
   i2 = i1;
  }
  i3 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_(i2, i3, i5) | 0;
  i2 = (i3 | 0) == (i2 | 0);
  if (!(i4 | i2)) {
   i2 = HEAP32[i5 + 4 >> 2] | 0;
   if ((HEAP32[i5 >> 2] | 0) != (i2 | 0)) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i2 + -24 | 0, 0, 50820) | 0;
    i1 = i3;
   }
  } else i1 = i2 ? i1 : i3;
 }
 return i1 | 0;
}

function _getMultiMarkerNum(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i6;
 HEAP32[i4 >> 2] = i1;
 if (((__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i4) | 0) != 0 ? (i5 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i4) | 0, (i2 | 0) >= 0) : 0) ? (i3 = HEAP32[i5 + 328 >> 2] | 0, (HEAP32[i5 + 332 >> 2] | 0) - i3 >> 3 >>> 0 > i2 >>> 0) : 0) i1 = HEAP32[(HEAP32[i3 + (i2 << 3) + 4 >> 2] | 0) + 4 >> 2] | 0; else i1 = -1;
 STACKTOP = i6;
 return i1 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 i1 = i1 + 8 | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 127](i1) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i2, i8, i1, i1 + 288 | 0, i5, i4, 0) | 0) - i1 | 0;
 if ((i1 | 0) < 288) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = i7;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 i1 = i1 + 8 | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 127](i1) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i2, i8, i1, i1 + 288 | 0, i5, i4, 0) | 0) - i1 | 0;
 if ((i1 | 0) < 288) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = i7;
 return;
}

function __ZN6vision14ExtractFREAK84EPhPKNS_25GaussianScaleSpacePyramidERKNS_12FeaturePointEPKfS8_S8_S8_S8_S8_ffffffff(i1, i2, i11, i12, i13, i14, i15, i16, i17, d18, d3, d4, d5, d6, d7, d8, d9) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i17 = i17 | 0;
 d18 = +d18;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 d7 = +d7;
 d8 = +d8;
 d9 = +d9;
 var i10 = 0, i19 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(160);
 i10 = i19;
 if (__ZN6vision20SamplePyramidFREAK84EPfPKNS_25GaussianScaleSpacePyramidERKNS_12FeaturePointEPKfS8_S8_S8_S8_S8_ffffffff(i10, i2, i11, i12, i13, i14, i15, i16, i17, d18, d3, d4, d5, d6, d7, d8, d9) | 0) {
  __ZN6vision14CompareFREAK84EPhPKf(i1, i10);
  i1 = 1;
 } else i1 = 0;
 STACKTOP = i19;
 return i1 | 0;
}

function __ZN6vision40Homography4PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_S3_S3_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i9 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i1, i2, i3) > 0.0;
 if ((!(i9 ^ +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i5, i6, i7) > 0.0) ? (i9 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i2, i3, i4) > 0.0, !(i9 ^ +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i6, i7, i8) > 0.0)) : 0) ? (i9 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i3, i4, i1) > 0.0, !(i9 ^ +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i7, i8, i5) > 0.0)) : 0) {
  i1 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i4, i1, i2) > 0.0;
  i1 = i1 ^ +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i8, i5, i6) > 0.0 ^ 1;
 } else i1 = 0;
 return i1 | 0;
}

function __ZN6vision14FREAKExtractor7extractERNS_18BinaryFeatureStoreEPKNS_25GaussianScaleSpacePyramidERKNSt3__26vectorINS_12FeaturePointENS6_9allocatorIS8_EEEE(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 __ZN6vision18BinaryFeatureStore21setNumBytesPerFeatureEi(i2, 96);
 __ZN6vision18BinaryFeatureStore6resizeEm(i2, ((HEAP32[i4 + 4 >> 2] | 0) - (HEAP32[i4 >> 2] | 0) | 0) / 20 | 0);
 __ZN6vision14ExtractFREAK84ERNS_18BinaryFeatureStoreEPKNS_25GaussianScaleSpacePyramidERKNSt3__26vectorINS_12FeaturePointENS5_9allocatorIS7_EEEEPKfSE_SE_SE_SE_SE_ffffffff(i2, i3, i4, i1, i1 + 48 | 0, i1 + 96 | 0, i1 + 144 | 0, i1 + 192 | 0, i1 + 240 | 0, +HEAPF32[i1 + 288 >> 2], +HEAPF32[i1 + 292 >> 2], +HEAPF32[i1 + 296 >> 2], +HEAPF32[i1 + 300 >> 2], +HEAPF32[i1 + 304 >> 2], +HEAPF32[i1 + 308 >> 2], +HEAPF32[i1 + 312 >> 2], +HEAPF32[i1 + 316 >> 2]);
 return;
}

function _get_soi(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i3 + 20 >> 2] = 102;
 FUNCTION_TABLE_vii[HEAP32[i3 + 4 >> 2] & 63](i2, 1);
 i3 = i2 + 440 | 0;
 if (HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] | 0) {
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i1 + 20 >> 2] = 61;
  FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i2);
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 16) break;
  HEAP8[i2 + 228 + i1 >> 0] = 0;
  HEAP8[i2 + 244 + i1 >> 0] = 1;
  HEAP8[i2 + 260 + i1 >> 0] = 5;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i2 + 276 >> 2] = 0;
 HEAP32[i2 + 40 >> 2] = 0;
 HEAP32[i2 + 300 >> 2] = 0;
 HEAP32[i2 + 280 >> 2] = 0;
 HEAP8[i2 + 284 >> 0] = 1;
 HEAP8[i2 + 285 >> 0] = 1;
 HEAP8[i2 + 286 >> 0] = 0;
 HEAP16[i2 + 288 >> 1] = 1;
 HEAP16[i2 + 290 >> 1] = 1;
 HEAP32[i2 + 292 >> 2] = 0;
 HEAP8[i2 + 296 >> 0] = 0;
 HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] = 1;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 i1 = i1 + 8 | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i1 >> 2] >> 2] & 127](i1) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i2, i8, i1, i1 + 168 | 0, i5, i4, 0) | 0) - i1 | 0;
 if ((i1 | 0) < 168) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = i7;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 i1 = i1 + 8 | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i1 >> 2] >> 2] & 127](i1) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i2, i8, i1, i1 + 168 | 0, i5, i4, 0) | 0) - i1 | 0;
 if ((i1 | 0) < 168) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = i7;
 return;
}

function _post_process_1pass(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i8;
 i12 = HEAP32[i1 + 432 >> 2] | 0;
 i10 = i7 - (HEAP32[i6 >> 2] | 0) | 0;
 i11 = HEAP32[i12 + 16 >> 2] | 0;
 HEAP32[i9 >> 2] = 0;
 i7 = i12 + 12 | 0;
 FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[i1 + 452 >> 2] | 0) + 4 >> 2] & 7](i1, i2, i3, i4, HEAP32[i7 >> 2] | 0, i9, i10 >>> 0 > i11 >>> 0 ? i11 : i10);
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 4 >> 2] & 31](i1, HEAP32[i7 >> 2] | 0, i5 + (HEAP32[i6 >> 2] << 2) | 0, HEAP32[i9 >> 2] | 0);
 HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + (HEAP32[i9 >> 2] | 0);
 STACKTOP = i8;
 return;
}

function __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i2, i3, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i6 = 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i6 = i3 + 11 | 0;
 i5 = HEAP8[i6 >> 0] | 0;
 i5 = i5 << 24 >> 24 < 0 ? HEAP32[i3 + 4 >> 2] | 0 : i5 & 255;
 i1 = __ZNSt3__211char_traitsIcE6lengthEPKc(i4) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcmm(i2, (HEAP8[i6 >> 0] | 0) < 0 ? HEAP32[i3 >> 2] | 0 : i3, i5, i5 + i1 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i2, i4, i1) | 0;
 return;
}

function __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i2, i3, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i6 = 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i6 = __ZNSt3__211char_traitsIcE6lengthEPKc(i3) | 0;
 i5 = i4 + 11 | 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i1 = i1 << 24 >> 24 < 0 ? HEAP32[i4 + 4 >> 2] | 0 : i1 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcmm(i2, i3, i6, i1 + i6 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i2, (HEAP8[i5 >> 0] | 0) < 0 ? HEAP32[i4 >> 2] | 0 : i4, i1) | 0;
 return;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE7reserveEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i5;
 i4 = HEAP32[i1 >> 2] | 0;
 if ((((HEAP32[i1 + 8 >> 2] | 0) - i4 | 0) / 36 | 0) >>> 0 < i2 >>> 0) {
  __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEEC2EmmS6_(i3, i2, ((HEAP32[i1 + 4 >> 2] | 0) - i4 | 0) / 36 | 0, i1 + 8 | 0);
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i1, i3);
  __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEED2Ev(i3);
 }
 STACKTOP = i5;
 return;
}

function _ar2Tracking2d(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i11 = i12 + 8 | 0;
 i4 = i12;
 i2 = _threadGetArg(i1) | 0;
 i3 = _threadGetID(i1) | 0;
 HEAP32[i4 >> 2] = i3;
 _arLog(0, 1, 20032, i4);
 i4 = i2 + 4 | 0;
 i5 = i2 + 8 | 0;
 i6 = i2 + 12 | 0;
 i7 = i2 + 16 | 0;
 i8 = i2 + 20 | 0;
 i9 = i2 + 24 | 0;
 i10 = i2 + 48 | 0;
 while (1) {
  if ((_threadStartWait(i1) | 0) < 0) break;
  i13 = _ar2Tracking2dSub(HEAP32[i2 >> 2] | 0, HEAP32[i4 >> 2] | 0, HEAP32[i5 >> 2] | 0, HEAP32[i6 >> 2] | 0, HEAP32[i7 >> 2] | 0, i8, i9) | 0;
  HEAP32[i10 >> 2] = i13;
  _threadEndSignal(i1) | 0;
 }
 HEAP32[i11 >> 2] = i3;
 _arLog(0, 1, 20060, i11);
 STACKTOP = i12;
 return 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(i2, i3, i5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i1 = 0, i4 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i7;
 if (i5 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i2);
 do if (i5 >>> 0 >= 2) {
  i4 = i5 + 4 & -4;
  if (i4 >>> 0 > 1073741823) _abort(); else {
   i1 = __Znwm(i4 << 2) | 0;
   HEAP32[i2 >> 2] = i1;
   HEAP32[i2 + 8 >> 2] = i4 | -2147483648;
   HEAP32[i2 + 4 >> 2] = i5;
   break;
  }
 } else {
  HEAP8[i2 + 8 + 3 >> 0] = i5;
  i1 = i2;
 } while (0);
 __ZNSt3__211char_traitsIwE4copyEPwPKwm(i1, i3, i5) | 0;
 HEAP32[i6 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw(i1 + (i5 << 2) | 0, i6);
 STACKTOP = i7;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw(i2, i3, i5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i1 = 0, i4 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i7;
 if (i3 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i2);
 do if (i3 >>> 0 >= 2) {
  i4 = i3 + 4 & -4;
  if (i4 >>> 0 > 1073741823) _abort(); else {
   i1 = __Znwm(i4 << 2) | 0;
   HEAP32[i2 >> 2] = i1;
   HEAP32[i2 + 8 >> 2] = i4 | -2147483648;
   HEAP32[i2 + 4 >> 2] = i3;
   break;
  }
 } else {
  HEAP8[i2 + 8 + 3 >> 0] = i3;
  i1 = i2;
 } while (0);
 __ZNSt3__211char_traitsIwE6assignEPwmw(i1, i3, i5) | 0;
 HEAP32[i6 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw(i1 + (i3 << 2) | 0, i6);
 STACKTOP = i7;
 return;
}

function _setDebugMode(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5;
 i3 = i5 + 4 | 0;
 HEAP32[i3 >> 2] = i2;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0)) i1 = 0; else {
  i2 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0) + 216 | 0;
  i3 = (i1 | 0) != 0;
  _arSetDebugMode(HEAP32[i2 >> 2] | 0, i3 & 1) | 0;
  HEAP32[i4 >> 2] = i3 ? 41366 : 41370;
  _arLog(0, 1, 41375, i4);
 }
 STACKTOP = i5;
 return i1 | 0;
}

function ___fseeko_unlocked(i5, i1, i2, i6) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 var i3 = 0, i4 = 0;
 if ((i6 | 0) == 1) {
  i4 = (HEAP32[i5 + 8 >> 2] | 0) - (HEAP32[i5 + 4 >> 2] | 0) | 0;
  i1 = _i64Subtract(i1 | 0, i2 | 0, i4 | 0, ((i4 | 0) < 0) << 31 >> 31 | 0) | 0;
  i2 = getTempRet0() | 0;
 }
 i3 = i5 + 20 | 0;
 i4 = i5 + 28 | 0;
 if ((HEAP32[i3 >> 2] | 0) >>> 0 > (HEAP32[i4 >> 2] | 0) >>> 0 ? (FUNCTION_TABLE_iiii[HEAP32[i5 + 36 >> 2] & 63](i5, 0, 0) | 0, (HEAP32[i3 >> 2] | 0) == 0) : 0) i1 = -1; else {
  HEAP32[i5 + 16 >> 2] = 0;
  HEAP32[i4 >> 2] = 0;
  HEAP32[i3 >> 2] = 0;
  FUNCTION_TABLE_iiiii[HEAP32[i5 + 40 >> 2] & 15](i5, i1, i2, i6) | 0;
  if ((getTempRet0() | 0) < 0) i1 = -1; else {
   HEAP32[i5 + 8 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 >> 2] = HEAP32[i5 >> 2] & -17;
   i1 = 0;
  }
 }
 return i1 | 0;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i7 = i5 + 4 | 0;
 i4 = i6 + 4 | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i2 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (((i3 | 0) / -12 | 0) * 12 | 0) | 0;
 HEAP32[i4 >> 2] = i1;
 if ((i3 | 0) > 0) {
  _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  i2 = i4;
  i1 = HEAP32[i4 >> 2] | 0;
 } else i2 = i4;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i2 >> 2] = i4;
 i4 = i6 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i3;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i7 = i5 + 4 | 0;
 i4 = i6 + 4 | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i2 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (0 - (i3 >> 2) << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 if ((i3 | 0) > 0) {
  _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  i2 = i4;
  i1 = HEAP32[i4 >> 2] | 0;
 } else i2 = i4;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i2 >> 2] = i4;
 i4 = i6 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i3;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 return;
}

function _threadInit(i2, i3, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i7 + 48 | 0;
 i6 = i7;
 i1 = _malloc(144) | 0;
 HEAP32[i5 >> 2] = i1;
 if (i1) {
  HEAP32[i1 >> 2] = i2;
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 + 12 >> 2] = 0;
  HEAP32[i1 + 140 >> 2] = i3;
  _pthread_mutex_init(i1 + 16 | 0, 0) | 0;
  _pthread_cond_init(i1 + 44 | 0, 0) | 0;
  _pthread_cond_init(i1 + 92 | 0, 0) | 0;
  _pthread_attr_init(i6 | 0) | 0;
  _pthread_attr_setdetachstate(i6 | 0, 1) | 0;
  i4 = _pthread_create(i7 + 44 | 0, i6 | 0, i4 | 0, i1 | 0) | 0;
  _pthread_attr_destroy(i6 | 0) | 0;
  if (i4) {
   _threadFree(i5) | 0;
   i1 = 0;
  }
 } else i1 = 0;
 STACKTOP = i7;
 return i1 | 0;
}

function _getPattRatio(i2) {
 i2 = i2 | 0;
 var d1 = 0.0, i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i5 + 8 | 0;
 i4 = i5;
 HEAP32[i3 >> 2] = i2;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0)) d1 = -1.0; else {
  i2 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0) + 216 | 0;
  i2 = HEAP32[i2 >> 2] | 0;
  if (!i2) d1 = -1.0; else {
   i3 = (_arGetPattRatio(i2, i4) | 0) == 0;
   d1 = i3 ? +HEAPF64[i4 >> 3] : -1.0;
  }
 }
 STACKTOP = i5;
 return +d1;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcmm(i1, i3, i4, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i6;
 if (i2 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i2 >>> 0 < 11) HEAP8[i1 + 11 >> 0] = i4; else {
  i7 = i2 + 16 & -16;
  i2 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm(i7) | 0;
  HEAP32[i1 >> 2] = i2;
  HEAP32[i1 + 8 >> 2] = i7 | -2147483648;
  HEAP32[i1 + 4 >> 2] = i4;
  i1 = i2;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcm(i1, i3, i4) | 0;
 HEAP8[i5 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i1 + i4 | 0, i5);
 STACKTOP = i6;
 return;
}

function __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS5_RS7_EE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i7 = i5 + 4 | 0;
 i4 = i6 + 4 | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i2 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (0 - (i3 >> 2) << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 if ((i3 | 0) > 0) {
  _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  i2 = i4;
  i1 = HEAP32[i4 >> 2] | 0;
 } else i2 = i4;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i2 >> 2] = i4;
 i4 = i6 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i3;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS4_RS6_EE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i7 = i5 + 4 | 0;
 i4 = i6 + 4 | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i2 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (0 - (i3 >> 2) << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 if ((i3 | 0) > 0) {
  _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  i2 = i4;
  i1 = HEAP32[i4 >> 2] | 0;
 } else i2 = i4;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i2 >> 2] = i4;
 i4 = i6 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i3;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 return;
}

function _arPattDeleteHandle(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 if (!i3) i1 = -1; else {
  i5 = i3 + 4 | 0;
  i6 = i3 + 8 | 0;
  i7 = i3 + 12 | 0;
  i8 = i3 + 20 | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (HEAP32[i5 >> 2] | 0)) break;
   if (HEAP32[(HEAP32[i6 >> 2] | 0) + (i2 << 2) >> 2] | 0) _arPattFree(i3, i2) | 0;
   i4 = i2 << 2;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 4) break;
    i9 = i1 + i4 | 0;
    _free(HEAP32[(HEAP32[i7 >> 2] | 0) + (i9 << 2) >> 2] | 0);
    _free(HEAP32[(HEAP32[i8 >> 2] | 0) + (i9 << 2) >> 2] | 0);
    i1 = i1 + 1 | 0;
   }
   i2 = i2 + 1 | 0;
  }
  _free(HEAP32[i7 >> 2] | 0);
  _free(HEAP32[i8 >> 2] | 0);
  _free(HEAP32[i6 >> 2] | 0);
  _free(HEAP32[i3 + 16 >> 2] | 0);
  _free(HEAP32[i3 + 24 >> 2] | 0);
  _free(i3);
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = i2 + 4 | 0;
 i6 = i3 + 4 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  i7 = i1 + -32 | 0;
  __ZN6vision5ImageC2ERKS0_((HEAP32[i6 >> 2] | 0) + -32 | 0, i7);
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -32;
  i1 = i7;
 }
 i4 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i6 >> 2] = i4;
 i4 = i3 + 8 | 0;
 i7 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i7;
 i4 = i2 + 8 | 0;
 i7 = i3 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 return;
}

function __ZNSt3__215__num_get_floatIeEET_PKcS3_Rj(i2, i3, i6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 var d1 = 0.0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i8;
 if ((i2 | 0) == (i3 | 0)) {
  HEAP32[i6 >> 2] = 4;
  d1 = 0.0;
 } else {
  i5 = ___errno_location() | 0;
  i5 = HEAP32[i5 >> 2] | 0;
  i9 = ___errno_location() | 0;
  HEAP32[i9 >> 2] = 0;
  d1 = +_strtold_l(i2, i4, __ZNSt3__26__clocEv() | 0);
  i2 = ___errno_location() | 0;
  i2 = HEAP32[i2 >> 2] | 0;
  if (!i2) {
   i9 = ___errno_location() | 0;
   HEAP32[i9 >> 2] = i5;
  }
  if ((HEAP32[i4 >> 2] | 0) == (i3 | 0)) {
   if ((i2 | 0) == 34) i7 = 6;
  } else {
   d1 = 0.0;
   i7 = 6;
  }
  if ((i7 | 0) == 6) HEAP32[i6 >> 2] = 4;
 }
 STACKTOP = i8;
 return +d1;
}

function __ZN6vision27AddHomographyPointContraintIfEEvPT_PKS1_S4_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 HEAPF32[i1 >> 2] = -+HEAPF32[i2 >> 2];
 i4 = i2 + 4 | 0;
 HEAPF32[i1 + 4 >> 2] = -+HEAPF32[i4 >> 2];
 HEAPF32[i1 + 8 >> 2] = -1.0;
 __ZN6vision11ZeroVector3IfEEvPT_(i1 + 12 | 0);
 HEAPF32[i1 + 24 >> 2] = +HEAPF32[i3 >> 2] * +HEAPF32[i2 >> 2];
 HEAPF32[i1 + 28 >> 2] = +HEAPF32[i3 >> 2] * +HEAPF32[i4 >> 2];
 HEAP32[i1 + 32 >> 2] = HEAP32[i3 >> 2];
 __ZN6vision11ZeroVector3IfEEvPT_(i1 + 36 | 0);
 HEAPF32[i1 + 48 >> 2] = -+HEAPF32[i2 >> 2];
 HEAPF32[i1 + 52 >> 2] = -+HEAPF32[i4 >> 2];
 HEAPF32[i1 + 56 >> 2] = -1.0;
 i3 = i3 + 4 | 0;
 HEAPF32[i1 + 60 >> 2] = +HEAPF32[i3 >> 2] * +HEAPF32[i2 >> 2];
 HEAPF32[i1 + 64 >> 2] = +HEAPF32[i3 >> 2] * +HEAPF32[i4 >> 2];
 HEAP32[i1 + 68 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i7 = i5 + 4 | 0;
 i4 = i6 + 4 | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i2 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (0 - (i3 >> 3) << 3) | 0;
 HEAP32[i4 >> 2] = i1;
 if ((i3 | 0) > 0) {
  _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  i2 = i4;
  i1 = HEAP32[i4 >> 2] | 0;
 } else i2 = i4;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i2 >> 2] = i4;
 i4 = i6 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i3;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNSt3__215__num_get_floatIfEET_PKcS3_Rj(i2, i3, i6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 var d1 = 0.0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i8;
 if ((i2 | 0) == (i3 | 0)) {
  HEAP32[i6 >> 2] = 4;
  d1 = 0.0;
 } else {
  i5 = ___errno_location() | 0;
  i5 = HEAP32[i5 >> 2] | 0;
  i9 = ___errno_location() | 0;
  HEAP32[i9 >> 2] = 0;
  d1 = +_strtof_l(i2, i4, __ZNSt3__26__clocEv() | 0);
  i2 = ___errno_location() | 0;
  i2 = HEAP32[i2 >> 2] | 0;
  if (!i2) {
   i9 = ___errno_location() | 0;
   HEAP32[i9 >> 2] = i5;
  }
  if ((HEAP32[i4 >> 2] | 0) == (i3 | 0)) {
   if ((i2 | 0) == 34) i7 = 6;
  } else {
   d1 = 0.0;
   i7 = 6;
  }
  if ((i7 | 0) == 6) HEAP32[i6 >> 2] = 4;
 }
 STACKTOP = i8;
 return +d1;
}

function __ZNSt3__215__num_get_floatIdEET_PKcS3_Rj(i2, i3, i6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 var d1 = 0.0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i8;
 if ((i2 | 0) == (i3 | 0)) {
  HEAP32[i6 >> 2] = 4;
  d1 = 0.0;
 } else {
  i5 = ___errno_location() | 0;
  i5 = HEAP32[i5 >> 2] | 0;
  i9 = ___errno_location() | 0;
  HEAP32[i9 >> 2] = 0;
  d1 = +_strtod_l(i2, i4, __ZNSt3__26__clocEv() | 0);
  i2 = ___errno_location() | 0;
  i2 = HEAP32[i2 >> 2] | 0;
  if (!i2) {
   i9 = ___errno_location() | 0;
   HEAP32[i9 >> 2] = i5;
  }
  if ((HEAP32[i4 >> 2] | 0) == (i3 | 0)) {
   if ((i2 | 0) == 34) i7 = 6;
  } else {
   d1 = 0.0;
   i7 = 6;
  }
  if ((i7 | 0) == 6) HEAP32[i6 >> 2] = 4;
 }
 STACKTOP = i8;
 return +d1;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 11) HEAP8[i1 + 11 >> 0] = i3; else {
  i7 = i3 + 16 & -16;
  i6 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm(i7) | 0;
  HEAP32[i1 >> 2] = i6;
  HEAP32[i1 + 8 >> 2] = i7 | -2147483648;
  HEAP32[i1 + 4 >> 2] = i3;
  i1 = i6;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcm(i1, i2, i3) | 0;
 HEAP8[i4 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i1 + i3 | 0, i4);
 STACKTOP = i5;
 return;
}

function __ZNSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i7 = i5 + 4 | 0;
 i4 = i6 + 4 | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i2 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (0 - (i3 >> 3) << 3) | 0;
 HEAP32[i4 >> 2] = i1;
 if ((i3 | 0) > 0) {
  _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  i2 = i4;
  i1 = HEAP32[i4 >> 2] | 0;
 } else i2 = i4;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i2 >> 2] = i4;
 i4 = i6 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i3;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i1, i4, i3, i5, i6) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i2 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i7;
 HEAP32[i6 >> 2] = i3;
 i3 = ___uselocale(HEAP32[i1 + 8 >> 2] | 0) | 0;
 i1 = _wcrtomb(i2, 0, i4) | 0;
 if (i3 | 0) ___uselocale(i3) | 0;
 L4 : do if ((i1 + 1 | 0) >>> 0 >= 2) {
  i1 = i1 + -1 | 0;
  if (i1 >>> 0 > (i5 - (HEAP32[i6 >> 2] | 0) | 0) >>> 0) i1 = 1; else while (1) {
   if (!i1) {
    i1 = 0;
    break L4;
   }
   i4 = HEAP8[i2 >> 0] | 0;
   i5 = HEAP32[i6 >> 2] | 0;
   HEAP32[i6 >> 2] = i5 + 1;
   HEAP8[i5 >> 0] = i4;
   i2 = i2 + 1 | 0;
   i1 = i1 + -1 | 0;
  }
 } else i1 = 2; while (0);
 STACKTOP = i7;
 return i1 | 0;
}

function __ZNSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i7 = i5 + 4 | 0;
 i4 = i6 + 4 | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i2 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (0 - (i3 >> 3) << 3) | 0;
 HEAP32[i4 >> 2] = i1;
 if ((i3 | 0) > 0) {
  _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  i2 = i4;
  i1 = HEAP32[i4 >> 2] | 0;
 } else i2 = i4;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i2 >> 2] = i4;
 i4 = i6 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i3;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i7 = i5 + 4 | 0;
 i4 = i6 + 4 | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i2 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (0 - (i3 >> 3) << 3) | 0;
 HEAP32[i4 >> 2] = i1;
 if ((i3 | 0) > 0) {
  _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  i2 = i4;
  i1 = HEAP32[i4 >> 2] | 0;
 } else i2 = i4;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i2 >> 2] = i4;
 i4 = i6 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i3;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZN10emscripten8internal7InvokerIiJiNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFiiS8_EiPNS0_11BindingTypeIS8_EUt_E(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i4 + 12 | 0;
 i5 = i4;
 i2 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi(i2) | 0;
 __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12fromWireTypeEPNS9_Ut_E(i5, i3);
 i3 = FUNCTION_TABLE_iii[i1 & 63](i2, i5) | 0;
 HEAP32[i6 >> 2] = i3;
 i3 = __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi(i6) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 STACKTOP = i4;
 return i3 | 0;
}

function _setThreshold(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i6;
 i3 = i6 + 4 | 0;
 HEAP32[i3 >> 2] = i1;
 if ((__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0 ? (i4 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0, i2 >>> 0 <= 255) : 0) ? (_arSetLabelingThresh(HEAP32[i4 + 216 >> 2] | 0, i2) | 0) == 0 : 0) {
  HEAP32[i5 >> 2] = i2;
  _arLog(0, 1, 41298, i5);
 }
 STACKTOP = i6;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 L1 : do if ((i1 | 0) != (i2 | 0)) switch (HEAP8[i1 >> 0] | 0) {
 case 68:
 case 67:
  {
   i1 = __ZN10__cxxabiv112_GLOBAL__N_120parse_ctor_dtor_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
   break L1;
  }
 case 85:
  {
   i1 = __ZN10__cxxabiv112_GLOBAL__N_123parse_unnamed_type_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
   break L1;
  }
 case 57:
 case 56:
 case 55:
 case 54:
 case 53:
 case 52:
 case 51:
 case 50:
 case 49:
  {
   i1 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
   break L1;
  }
 default:
  return __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
 } while (0);
 return i1 | 0;
}

function _read_restart_marker(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i5 = i4 + 416 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 if (!i1) if (!(_next_marker(i4) | 0)) i1 = 0; else {
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = 4;
 } else i2 = 4;
 do if ((i2 | 0) == 4) {
  i2 = i4 + 440 | 0;
  i3 = HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] | 0;
  if ((i1 | 0) != (i3 + 208 | 0)) {
   if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 + 24 >> 2] | 0) + 20 >> 2] & 63](i4, i3) | 0)) {
    i1 = 0;
    break;
   }
  } else {
   i1 = HEAP32[i4 >> 2] | 0;
   HEAP32[i1 + 20 >> 2] = 98;
   HEAP32[i1 + 24 >> 2] = i3;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] & 63](i4, 3);
   HEAP32[i5 >> 2] = 0;
  }
  i1 = (HEAP32[i2 >> 2] | 0) + 20 | 0;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 1 & 7;
  i1 = 1;
 } while (0);
 return i1 | 0;
}

function _setPatternDetectionMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5;
 i3 = i5 + 4 | 0;
 HEAP32[i3 >> 2] = i1;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0 ? (i3 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0) + 216 | 0, (_arSetPatternDetectionMode(HEAP32[i3 >> 2] | 0, i2) | 0) == 0) : 0) {
  HEAP32[i4 >> 2] = i2;
  _arLog(0, 1, 41263, i4);
 }
 STACKTOP = i5;
 return;
}

function _byteswap(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(192);
 i5 = i6;
 _byteSwapInt(i4, i5);
 _byteSwapInt(i4 + 4 | 0, i5 + 4 | 0);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 4) break;
   _byteSwapDouble(i4 + 8 + (i1 << 5) + (i2 << 3) | 0, i5 + 8 + (i1 << 5) + (i2 << 3) | 0);
   i2 = i2 + 1 | 0;
  }
  i1 = i1 + 1 | 0;
 }
 i2 = i4 + 176 | 0;
 i1 = 0;
 while (1) {
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) >= (HEAP32[1712 + (i3 + -1 << 3) >> 2] | 0)) break;
  _byteSwapDouble(i4 + 104 + (i1 << 3) | 0, i5 + 104 + (i1 << 3) | 0);
  i1 = i1 + 1 | 0;
 }
 HEAP32[i5 + 176 >> 2] = i3;
 _memcpy(i4 | 0, i5 | 0, 184) | 0;
 STACKTOP = i6;
 return;
}

function __ZNSt3__26vectorItNS_9allocatorItEEE26__swap_out_circular_bufferERNS_14__split_bufferItRS2_EE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i7 = i5 + 4 | 0;
 i4 = i6 + 4 | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i2 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (0 - (i3 >> 1) << 1) | 0;
 HEAP32[i4 >> 2] = i1;
 if ((i3 | 0) > 0) {
  _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  i2 = i4;
  i1 = HEAP32[i4 >> 2] | 0;
 } else i2 = i4;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i2 >> 2] = i4;
 i4 = i6 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i3;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i7 = i5 + 4 | 0;
 i4 = i6 + 4 | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i2 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (0 - (i3 >> 2) << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 if ((i3 | 0) > 0) {
  _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  i2 = i4;
  i1 = HEAP32[i4 >> 2] | 0;
 } else i2 = i4;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i2 >> 2] = i4;
 i4 = i6 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i3;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNSt3__26vectorIfNS_9allocatorIfEEE26__swap_out_circular_bufferERNS_14__split_bufferIfRS2_EE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i7 = i5 + 4 | 0;
 i4 = i6 + 4 | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i2 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (0 - (i3 >> 2) << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 if ((i3 | 0) > 0) {
  _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  i2 = i4;
  i1 = HEAP32[i4 >> 2] | 0;
 } else i2 = i4;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i2 >> 2] = i4;
 i4 = i6 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i3;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i3, i4, i7) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0;
 i8 = i3 + 4 | 0;
 i2 = (HEAP32[i8 >> 2] | 0) != 143;
 i1 = HEAP32[i3 >> 2] | 0;
 i6 = i1;
 i9 = (HEAP32[i7 >> 2] | 0) - i6 | 0;
 i5 = i9 << 1;
 i5 = i9 >>> 0 < 2147483647 ? ((i5 | 0) == 0 ? 4 : i5) : -1;
 i6 = (HEAP32[i4 >> 2] | 0) - i6 >> 2;
 i1 = _realloc(i2 ? i1 : 0, i5) | 0;
 if (!i1) __ZSt17__throw_bad_allocv();
 if (!i2) {
  i2 = HEAP32[i3 >> 2] | 0;
  HEAP32[i3 >> 2] = i1;
  if (i2) {
   FUNCTION_TABLE_vi[HEAP32[i8 >> 2] & 255](i2);
   i1 = HEAP32[i3 >> 2] | 0;
  }
 } else HEAP32[i3 >> 2] = i1;
 HEAP32[i8 >> 2] = 144;
 HEAP32[i4 >> 2] = i1 + (i6 << 2);
 HEAP32[i7 >> 2] = (HEAP32[i3 >> 2] | 0) + (i5 >>> 2 << 2);
 return;
}

function __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i3, i4, i7) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0;
 i8 = i3 + 4 | 0;
 i2 = (HEAP32[i8 >> 2] | 0) != 143;
 i1 = HEAP32[i3 >> 2] | 0;
 i6 = i1;
 i9 = (HEAP32[i7 >> 2] | 0) - i6 | 0;
 i5 = i9 << 1;
 i5 = i9 >>> 0 < 2147483647 ? ((i5 | 0) == 0 ? 4 : i5) : -1;
 i6 = (HEAP32[i4 >> 2] | 0) - i6 >> 2;
 i1 = _realloc(i2 ? i1 : 0, i5) | 0;
 if (!i1) __ZSt17__throw_bad_allocv();
 if (!i2) {
  i2 = HEAP32[i3 >> 2] | 0;
  HEAP32[i3 >> 2] = i1;
  if (i2) {
   FUNCTION_TABLE_vi[HEAP32[i8 >> 2] & 255](i2);
   i1 = HEAP32[i3 >> 2] | 0;
  }
 } else HEAP32[i3 >> 2] = i1;
 HEAP32[i8 >> 2] = 144;
 HEAP32[i4 >> 2] = i1 + (i6 << 2);
 HEAP32[i7 >> 2] = (HEAP32[i3 >> 2] | 0) + (i5 >>> 2 << 2);
 return;
}

function _fputc(i7, i9) {
 i7 = i7 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 if ((HEAP32[i9 + 76 >> 2] | 0) >= 0 ? (___lockfile(i9) | 0) != 0 : 0) {
  i2 = i7 & 255;
  i1 = i7 & 255;
  if ((i1 | 0) != (HEAP8[i9 + 75 >> 0] | 0) ? (i5 = i9 + 20 | 0, i6 = HEAP32[i5 >> 2] | 0, i6 >>> 0 < (HEAP32[i9 + 16 >> 2] | 0) >>> 0) : 0) {
   HEAP32[i5 >> 2] = i6 + 1;
   HEAP8[i6 >> 0] = i2;
  } else i1 = ___overflow(i9, i7) | 0;
  ___unlockfile(i9);
 } else i8 = 3;
 do if ((i8 | 0) == 3) {
  i2 = i7 & 255;
  i1 = i7 & 255;
  if ((i1 | 0) != (HEAP8[i9 + 75 >> 0] | 0) ? (i3 = i9 + 20 | 0, i4 = HEAP32[i3 >> 2] | 0, i4 >>> 0 < (HEAP32[i9 + 16 >> 2] | 0) >>> 0) : 0) {
   HEAP32[i3 >> 2] = i4 + 1;
   HEAP8[i4 >> 0] = i2;
   break;
  }
  i1 = ___overflow(i9, i7) | 0;
 } while (0);
 return i1 | 0;
}

function _getPatternDetectionMode(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i4;
 i3 = i4 + 4 | 0;
 HEAP32[i2 >> 2] = i1;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0)) i1 = -1; else {
  i1 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0) + 216 | 0;
  i1 = (_arGetPatternDetectionMode(HEAP32[i1 >> 2] | 0, i3) | 0) == 0;
  i1 = i1 ? HEAP32[i3 >> 2] | 0 : -1;
 }
 STACKTOP = i4;
 return i1 | 0;
}

function ___overflow(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i9;
 i8 = i6 & 255;
 HEAP8[i7 >> 0] = i8;
 i2 = i5 + 16 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (!i3) if (!(___towrite(i5) | 0)) {
  i3 = HEAP32[i2 >> 2] | 0;
  i4 = 4;
 } else i1 = -1; else i4 = 4;
 do if ((i4 | 0) == 4) {
  i4 = i5 + 20 | 0;
  i2 = HEAP32[i4 >> 2] | 0;
  if (i2 >>> 0 < i3 >>> 0 ? (i1 = i6 & 255, (i1 | 0) != (HEAP8[i5 + 75 >> 0] | 0)) : 0) {
   HEAP32[i4 >> 2] = i2 + 1;
   HEAP8[i2 >> 0] = i8;
   break;
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[i5 + 36 >> 2] & 63](i5, i7, 1) | 0) == 1) i1 = HEAPU8[i7 >> 0] | 0; else i1 = -1;
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i3;
 if (HEAP32[i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0) {
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i2, i1);
  if (HEAP8[i2 >> 0] | 0 ? (i4 = HEAP32[i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0, (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 127](i4) | 0) == -1) : 0) {
   i4 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj(i4, HEAP32[i4 + 16 >> 2] | 1);
  }
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i2);
 }
 STACKTOP = i3;
 return i1 | 0;
}

function _setThresholdMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5;
 i3 = i5 + 4 | 0;
 HEAP32[i3 >> 2] = i1;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0 ? (i3 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0) + 216 | 0, (_arSetLabelingThreshMode(HEAP32[i3 >> 2] | 0, i2) | 0) == 0) : 0) {
  HEAP32[i4 >> 2] = i2;
  _arLog(0, 1, 41324, i4);
 }
 STACKTOP = i5;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEmm(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i8;
 i7 = i4 + 11 | 0;
 i1 = HEAP8[i7 >> 0] | 0;
 if (i1 << 24 >> 24 < 0) {
  i6 = HEAP32[i4 >> 2] | 0;
  i2 = HEAP32[i4 + 4 >> 2] | 0;
 } else {
  i6 = i4;
  i2 = i1 & 255;
 }
 i3 = (i2 | 0) != 0 & 1;
 i2 = i2 - i3 | 0;
 if (i2) {
  __ZNSt3__211char_traitsIcE4moveEPcPKcm(i6, i6 + i3 | 0, i2) | 0;
  i1 = HEAP8[i7 >> 0] | 0;
 }
 if (i1 << 24 >> 24 < 0) HEAP32[i4 + 4 >> 2] = i2; else HEAP8[i7 >> 0] = i2;
 HEAP8[i5 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i6 + i2 | 0, i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE26__swap_out_circular_bufferERNS_14__split_bufferIhRS2_EE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i7 = i5 + 4 | 0;
 i4 = i6 + 4 | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i2 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (0 - i3) | 0;
 HEAP32[i4 >> 2] = i1;
 if ((i3 | 0) > 0) {
  _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  i2 = i4;
  i1 = HEAP32[i4 >> 2] | 0;
 } else i2 = i4;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i2 >> 2] = i4;
 i4 = i6 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i3;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 return;
}

function _setImageProcMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5;
 i3 = i5 + 4 | 0;
 HEAP32[i3 >> 2] = i1;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0 ? (i3 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0) + 216 | 0, (_arSetImageProcMode(HEAP32[i3 >> 2] | 0, i2) | 0) == 0) : 0) {
  HEAP32[i4 >> 2] = i2;
  _arLog(0, 1, 41173, i4);
 }
 STACKTOP = i5;
 return;
}

function _getThresholdMode(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i4;
 i3 = i4 + 4 | 0;
 HEAP32[i2 >> 2] = i1;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0)) i1 = -1; else {
  i1 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0) + 216 | 0;
  i1 = (_arGetLabelingThreshMode(HEAP32[i1 >> 2] | 0, i3) | 0) == 0;
  i1 = i1 ? HEAP32[i3 >> 2] | 0 : -1;
 }
 STACKTOP = i4;
 return i1 | 0;
}

function _setLabelingMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5;
 i3 = i5 + 4 | 0;
 HEAP32[i3 >> 2] = i1;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0 ? (i3 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0) + 216 | 0, (_arSetLabelingMode(HEAP32[i3 >> 2] | 0, i2) | 0) == 0) : 0) {
  HEAP32[i4 >> 2] = i2;
  _arLog(0, 1, 41202, i4);
 }
 STACKTOP = i5;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE5clearEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 i3 = i2 + 12 | 0;
 if (HEAP32[i3 >> 2] | 0) {
  i4 = i2 + 8 | 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS2_PvEEEE(i2, HEAP32[i4 >> 2] | 0);
  HEAP32[i4 >> 2] = 0;
  i4 = HEAP32[i2 + 4 >> 2] | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i4 | 0)) break;
   HEAP32[(HEAP32[i2 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  HEAP32[i3 >> 2] = 0;
 }
 return;
}

function _loadCamera(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 i6 = i7 + 192 | 0;
 i5 = i7 + 184 | 0;
 i2 = i7;
 i3 = i1 + 11 | 0;
 if ((HEAP8[i3 >> 0] | 0) < 0) i4 = HEAP32[i1 >> 2] | 0; else i4 = i1;
 if ((_arParamLoad(i4, 1, i2, i5) | 0) < 0) {
  if ((HEAP8[i3 >> 0] | 0) < 0) i1 = HEAP32[i1 >> 2] | 0;
  HEAP32[i6 >> 2] = i1;
  _arLog(0, 3, 44577, i6);
  i1 = -1;
 } else {
  i1 = HEAP32[14273] | 0;
  HEAP32[14273] = i1 + 1;
  HEAP32[i5 >> 2] = i1;
  _memcpy(__ZNSt3__213unordered_mapIi7ARParamNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57072, i5) | 0, i2 | 0, 184) | 0;
  i1 = HEAP32[i5 >> 2] | 0;
 }
 STACKTOP = i7;
 return i1 | 0;
}

function _jinit_1pass_quantizer(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 1, 88) | 0;
 HEAP32[i1 + 460 >> 2] = i2;
 HEAP32[i2 >> 2] = 42;
 HEAP32[i2 + 8 >> 2] = 122;
 HEAP32[i2 + 12 >> 2] = 123;
 HEAP32[i2 + 68 >> 2] = 0;
 HEAP32[i2 + 52 >> 2] = 0;
 if ((HEAP32[i1 + 120 >> 2] | 0) > 4) {
  i2 = HEAP32[i1 >> 2] | 0;
  HEAP32[i2 + 20 >> 2] = 55;
  HEAP32[i2 + 24 >> 2] = 4;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 if ((HEAP32[i1 + 96 >> 2] | 0) > 256) {
  i2 = HEAP32[i1 >> 2] | 0;
  HEAP32[i2 + 20 >> 2] = 57;
  HEAP32[i2 + 24 >> 2] = 256;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 _create_colormap(i1);
 _create_colorindex(i1);
 if ((HEAP32[i1 + 88 >> 2] | 0) == 2) _alloc_fs_workspace(i1);
 return;
}

function _getImageProcMode(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i4;
 i3 = i4 + 4 | 0;
 HEAP32[i2 >> 2] = i1;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0)) i1 = -1; else {
  i1 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0) + 216 | 0;
  i1 = (_arGetImageProcMode(HEAP32[i1 >> 2] | 0, i3) | 0) == 0;
  i1 = i1 ? HEAP32[i3 >> 2] | 0 : -1;
 }
 STACKTOP = i4;
 return i1 | 0;
}

function __ZNSt3__213__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEENS5_IS9_Lm4096EEEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) {
  i4 = i2 + 4 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i3 | 0)) break;
   i5 = i1 + -16 | 0;
   __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev(i5);
   i1 = i5;
  }
  HEAP32[i4 >> 2] = i3;
  i5 = HEAP32[i2 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE10deallocateEPS8_m(i2 + 12 | 0, i5, (HEAP32[i2 + 8 >> 2] | 0) - i5 >> 4);
 }
 return;
}

function _getLabelingMode(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i4;
 i3 = i4 + 4 | 0;
 HEAP32[i2 >> 2] = i1;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0)) i1 = -1; else {
  i1 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0) + 216 | 0;
  i1 = (_arGetLabelingMode(HEAP32[i1 >> 2] | 0, i3) | 0) == 0;
  i1 = i1 ? HEAP32[i3 >> 2] | 0 : -1;
 }
 STACKTOP = i4;
 return i1 | 0;
}

function __ZL15loadMultiMarkerPKcP8ARHandlePP12ARPattHandlePP18ARMultiMarkerInfoT(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = _arMultiReadConfigFile(i1, HEAP32[i3 >> 2] | 0) | 0;
 HEAP32[i4 >> 2] = i1;
 L1 : do if (!i1) {
  _arLog(0, 3, 45005, i5);
  _arPattDeleteHandle(HEAP32[i3 >> 2] | 0) | 0;
  i1 = 0;
 } else switch (HEAP32[i1 + 108 >> 2] | 0) {
 case 0:
  {
   _arSetPatternDetectionMode(i2, 0) | 0;
   i1 = 1;
   break L1;
  }
 case 1:
  {
   _arSetPatternDetectionMode(i2, 2) | 0;
   i1 = 1;
   break L1;
  }
 default:
  {
   _arSetPatternDetectionMode(i2, 3) | 0;
   i1 = 1;
   break L1;
  }
 } while (0);
 STACKTOP = i5;
 return i1 | 0;
}

function _getThreshold(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i4;
 i3 = i4 + 4 | 0;
 HEAP32[i2 >> 2] = i1;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0)) i1 = -1; else {
  i1 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0) + 216 | 0;
  i1 = (_arGetLabelingThresh(HEAP32[i1 >> 2] | 0, i3) | 0) == 0;
  i1 = i1 ? HEAP32[i3 >> 2] | 0 : -1;
 }
 STACKTOP = i4;
 return i1 | 0;
}

function __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i3, i4, i7) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0;
 i8 = i3 + 4 | 0;
 i2 = (HEAP32[i8 >> 2] | 0) != 143;
 i1 = HEAP32[i3 >> 2] | 0;
 i6 = i1;
 i9 = (HEAP32[i7 >> 2] | 0) - i6 | 0;
 i5 = i9 << 1;
 i5 = i9 >>> 0 < 2147483647 ? ((i5 | 0) == 0 ? 1 : i5) : -1;
 i6 = (HEAP32[i4 >> 2] | 0) - i6 | 0;
 i1 = _realloc(i2 ? i1 : 0, i5) | 0;
 if (!i1) __ZSt17__throw_bad_allocv();
 if (!i2) {
  i2 = HEAP32[i3 >> 2] | 0;
  HEAP32[i3 >> 2] = i1;
  if (i2) {
   FUNCTION_TABLE_vi[HEAP32[i8 >> 2] & 255](i2);
   i1 = HEAP32[i3 >> 2] | 0;
  }
 } else HEAP32[i3 >> 2] = i1;
 HEAP32[i8 >> 2] = 144;
 HEAP32[i4 >> 2] = i1 + i6;
 HEAP32[i7 >> 2] = (HEAP32[i3 >> 2] | 0) + i5;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS6_ISW_EEEEEEmOT_DpOT0_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i6 = __Znwm(24) | 0;
 HEAP32[i1 >> 2] = i6;
 HEAP32[i1 + 4 >> 2] = i2 + 8;
 HEAP32[i6 + 8 >> 2] = HEAP32[HEAP32[i5 >> 2] >> 2];
 HEAP32[i6 + 12 >> 2] = 0;
 HEAP32[i6 + 16 >> 2] = 0;
 HEAP32[i6 + 20 >> 2] = 0;
 HEAP8[i1 + 8 >> 0] = 1;
 HEAP32[i6 + 4 >> 2] = i3;
 HEAP32[i6 >> 2] = 0;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 __ZNKSt3__28ios_base6getlocEv(i8, i4);
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58824) | 0;
 __ZNSt3__26localeD2Ev(i8);
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 16 | 0, i2, i8, i5, i4);
 STACKTOP = i7;
 return HEAP32[i2 >> 2] | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 __ZNKSt3__28ios_base6getlocEv(i8, i4);
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58824) | 0;
 __ZNSt3__26localeD2Ev(i8);
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 24 | 0, i2, i8, i5, i4);
 STACKTOP = i7;
 return HEAP32[i2 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 __ZNKSt3__28ios_base6getlocEv(i8, i4);
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58792) | 0;
 __ZNSt3__26localeD2Ev(i8);
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 16 | 0, i2, i8, i5, i4);
 STACKTOP = i7;
 return HEAP32[i2 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 __ZNKSt3__28ios_base6getlocEv(i8, i4);
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58792) | 0;
 __ZNSt3__26localeD2Ev(i8);
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 24 | 0, i2, i8, i5, i4);
 STACKTOP = i7;
 return HEAP32[i2 >> 2] | 0;
}

function _color_quantize(i1, i8, i9, i10) {
 i1 = i1 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i11 = 0, i12 = 0;
 i11 = HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 24 >> 2] | 0;
 i12 = HEAP32[i1 + 112 >> 2] | 0;
 i7 = HEAP32[i1 + 120 >> 2] | 0;
 i5 = 0;
 while (1) {
  if ((i5 | 0) >= (i10 | 0)) break;
  i4 = i12;
  i6 = HEAP32[i9 + (i5 << 2) >> 2] | 0;
  i1 = HEAP32[i8 + (i5 << 2) >> 2] | 0;
  while (1) {
   if (!i4) break;
   i2 = 0;
   i3 = 0;
   while (1) {
    if ((i3 | 0) >= (i7 | 0)) break;
    i2 = i2 + (HEAPU8[(HEAP32[i11 + (i3 << 2) >> 2] | 0) + (HEAPU8[i1 >> 0] | 0) >> 0] | 0) | 0;
    i3 = i3 + 1 | 0;
    i1 = i1 + 1 | 0;
   }
   HEAP8[i6 >> 0] = i2;
   i4 = i4 + -1 | 0;
   i6 = i6 + 1 | 0;
  }
  i5 = i5 + 1 | 0;
 }
 return;
}

function _color_quantize3(i1, i6, i9, i10) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i11 = 0;
 i8 = HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 24 >> 2] | 0;
 i11 = HEAP32[i8 >> 2] | 0;
 i7 = HEAP32[i8 + 4 >> 2] | 0;
 i8 = HEAP32[i8 + 8 >> 2] | 0;
 i5 = HEAP32[i1 + 112 >> 2] | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i10 | 0)) break;
  i1 = HEAP32[i6 + (i3 << 2) >> 2] | 0;
  i2 = i5;
  i4 = HEAP32[i9 + (i3 << 2) >> 2] | 0;
  while (1) {
   if (!i2) break;
   HEAP8[i4 >> 0] = (HEAPU8[i7 + (HEAPU8[i1 + 1 >> 0] | 0) >> 0] | 0) + (HEAPU8[i11 + (HEAPU8[i1 >> 0] | 0) >> 0] | 0) + (HEAPU8[i8 + (HEAPU8[i1 + 2 >> 0] | 0) >> 0] | 0);
   i1 = i1 + 3 | 0;
   i2 = i2 + -1 | 0;
   i4 = i4 + 1 | 0;
  }
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 while (1) {
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (i1 | 0)) break;
  i3 = i3 + -16 | 0;
  HEAP32[i2 >> 2] = i3;
  __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev(i3);
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE10deallocateEPS8_m(HEAP32[i4 + 16 >> 2] | 0, i1, (HEAP32[i4 + 12 >> 2] | 0) - i1 >> 4);
 return;
}

function _latch_quant_tables(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i5 = i4 + 328 | 0;
 i6 = i4 + 4 | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (HEAP32[i5 >> 2] | 0)) break;
  i1 = HEAP32[i4 + 332 + (i3 << 2) >> 2] | 0;
  i7 = i1 + 76 | 0;
  if (!(HEAP32[i7 >> 2] | 0)) {
   i2 = HEAP32[i1 + 16 >> 2] | 0;
   i1 = i4 + 164 + (i2 << 2) | 0;
   if (!(i2 >>> 0 <= 3 ? (HEAP32[i1 >> 2] | 0) != 0 : 0)) {
    i8 = HEAP32[i4 >> 2] | 0;
    HEAP32[i8 + 20 >> 2] = 52;
    HEAP32[i8 + 24 >> 2] = i2;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i4 >> 2] >> 2] & 255](i4);
   }
   i8 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i6 >> 2] >> 2] & 63](i4, 1, 132) | 0;
   _memcpy(i8 | 0, HEAP32[i1 >> 2] | 0, 132) | 0;
   HEAP32[i7 >> 2] = i8;
  }
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i1, i9, i8, i4, i5, i6, 10960, 10992) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i1, i9, i8, i4, i5, i6, 48390, 48398) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 __ZNKSt3__28ios_base6getlocEv(i8, i4);
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58824) | 0;
 __ZNSt3__26localeD2Ev(i8);
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 20 | 0, i2, i8, i5, i4);
 STACKTOP = i7;
 return HEAP32[i2 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 __ZNKSt3__28ios_base6getlocEv(i8, i4);
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58792) | 0;
 __ZNSt3__26localeD2Ev(i8);
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 20 | 0, i2, i8, i5, i4);
 STACKTOP = i7;
 return HEAP32[i2 >> 2] | 0;
}

function _getMatrixCodeType(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i4;
 i3 = i4 + 4 | 0;
 HEAP32[i2 >> 2] = i1;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0)) i1 = -1; else {
  i1 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0) + 216 | 0;
  _arGetMatrixCodeType(HEAP32[i1 >> 2] | 0, i3) | 0;
  i1 = HEAP32[i3 >> 2] | 0;
 }
 STACKTOP = i4;
 return i1 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i6 = __Znwm(24) | 0;
 HEAP32[i1 >> 2] = i6;
 HEAP32[i1 + 4 >> 2] = i2 + 8;
 HEAP32[i6 + 8 >> 2] = HEAP32[HEAP32[i5 >> 2] >> 2];
 HEAP32[i6 + 12 >> 2] = 0;
 HEAP32[i6 + 16 >> 2] = 0;
 HEAP32[i6 + 20 >> 2] = 0;
 HEAP8[i1 + 8 >> 0] = 1;
 HEAP32[i6 + 4 >> 2] = i3;
 HEAP32[i6 >> 2] = 0;
 return;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i3, i5, i4) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i6 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i6 + 4 | 0;
 i8 = i6;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i5, i4, 4) | 0;
 if (!(HEAP32[i5 >> 2] & 4)) {
  if ((i1 | 0) < 69) i1 = i1 + 2e3 | 0; else i1 = (i1 | 0) < 100 ? i1 + 1900 | 0 : i1;
  HEAP32[i7 >> 2] = i1 + -1900;
 }
 STACKTOP = i6;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i3, i5, i4) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i6 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i6 + 4 | 0;
 i8 = i6;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i5, i4, 4) | 0;
 if (!(HEAP32[i5 >> 2] & 4)) {
  if ((i1 | 0) < 69) i1 = i1 + 2e3 | 0; else i1 = (i1 | 0) < 100 ? i1 + 1900 | 0 : i1;
  HEAP32[i7 >> 2] = i1 + -1900;
 }
 STACKTOP = i6;
 return;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function _strtox(i4, i5, i1) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, d3 = 0.0, i6 = 0, i7 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 i2 = i6;
 _memset(i2 | 0, 0, 144) | 0;
 i8 = i2 + 4 | 0;
 HEAP32[i8 >> 2] = i4;
 i7 = i2 + 8 | 0;
 HEAP32[i7 >> 2] = -1;
 HEAP32[i2 + 44 >> 2] = i4;
 HEAP32[i2 + 76 >> 2] = -1;
 ___shlim(i2, 0, 0);
 d3 = +___floatscan(i2, i1, 1);
 i2 = i2 + 120 | 0;
 i1 = (HEAP32[i8 >> 2] | 0) - (HEAP32[i7 >> 2] | 0) | 0;
 i1 = _i64Add(HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0, i1 | 0, ((i1 | 0) < 0) << 31 >> 31 | 0) | 0;
 i2 = getTempRet0() | 0;
 if (i5 | 0) HEAP32[i5 >> 2] = (i1 | 0) == 0 & (i2 | 0) == 0 ? i4 : i4 + i1 | 0;
 STACKTOP = i6;
 return +d3;
}

function __ZN10emscripten8functionIiJiNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getCountEv(i4) | 0;
 i4 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getTypesEv(i4) | 0;
 __embind_register_function(i1 | 0, i5 | 0, i4 | 0, __ZN10emscripten8internal19getGenericSignatureIJiiiiEEEPKcv() | 0, 34, i2 | 0);
 STACKTOP = i3;
 return;
}

function _getDebugMode(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i4;
 i3 = i4 + 4 | 0;
 HEAP32[i2 >> 2] = i1;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0)) i1 = 0; else {
  i1 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0) + 216 | 0;
  _arGetDebugMode(HEAP32[i1 >> 2] | 0, i3) | 0;
  i1 = HEAP32[i3 >> 2] | 0;
 }
 STACKTOP = i4;
 return i1 | 0;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZN6vision16RobustHomographyIfED2Ev(i1 + 788 | 0);
 __ZN6vision21HoughSimilarityVotingD2Ev(i1 + 652 | 0);
 __ZN6vision20BinaryFeatureMatcherILi96EED2Ev(i1 + 636 | 0);
 __ZN6vision14FREAKExtractorD2Ev(i1 + 316 | 0);
 __ZN6vision25DoGScaleInvariantDetectorD2Ev(i1 + 160 | 0);
 __ZN6vision18BinomialPyramid32fD2Ev(i1 + 92 | 0);
 __ZNSt3__213unordered_mapIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS5_EEEEED2Ev(i1 + 72 | 0);
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev(i1 + 64 | 0);
 __ZNSt3__213__vector_baseIN6vision7match_tENS_9allocatorIS2_EEED2Ev(i1 + 12 | 0);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i6 = __Znwm(20) | 0;
 HEAP32[i1 >> 2] = i6;
 HEAP32[i1 + 4 >> 2] = i2 + 8;
 HEAP32[i6 + 8 >> 2] = HEAP32[HEAP32[i5 >> 2] >> 2];
 HEAP32[i6 + 12 >> 2] = 0;
 HEAP32[i6 + 16 >> 2] = 0;
 HEAP8[i1 + 8 >> 0] = 1;
 HEAP32[i6 + 4 >> 2] = i3;
 HEAP32[i6 >> 2] = 0;
 return;
}

function _use_merged_upsample(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 if ((((((((((((((HEAP32[i1 + 76 >> 2] | 0) == 0 ? (HEAP32[i1 + 300 >> 2] | 0) == 0 : 0) ? (HEAP32[i1 + 40 >> 2] | 0) == 3 : 0) ? (HEAP32[i1 + 36 >> 2] | 0) == 3 : 0) ? (HEAP32[i1 + 44 >> 2] | 0) == 2 : 0) ? (HEAP32[i1 + 120 >> 2] | 0) == 3 : 0) ? (i2 = HEAP32[i1 + 216 >> 2] | 0, (HEAP32[i2 + 8 >> 2] | 0) == 2) : 0) ? (HEAP32[i2 + 92 >> 2] | 0) == 1 : 0) ? (HEAP32[i2 + 176 >> 2] | 0) == 1 : 0) ? (HEAP32[i2 + 12 >> 2] | 0) <= 2 : 0) ? (HEAP32[i2 + 96 >> 2] | 0) == 1 : 0) ? (HEAP32[i2 + 180 >> 2] | 0) == 1 : 0) ? (i3 = HEAP32[i2 + 36 >> 2] | 0, (i3 | 0) == (HEAP32[i1 + 316 >> 2] | 0)) : 0) ? (HEAP32[i2 + 120 >> 2] | 0) == (i3 | 0) : 0) return (HEAP32[i2 + 204 >> 2] | 0) == (i3 | 0) | 0;
 return 0;
}

function __ZN10emscripten8functionIiJNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getCountEv(i4) | 0;
 i4 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getTypesEv(i4) | 0;
 __embind_register_function(i1 | 0, i5 | 0, i4 | 0, __ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv() | 0, 41, i2 | 0);
 STACKTOP = i3;
 return;
}

function __ZN6vision14FREAKExtractorC2Ev(i1) {
 i1 = i1 | 0;
 __ZN6vision10CopyVectorIfEEvPT_PKS1_m(i1, 1760, 12);
 __ZN6vision10CopyVectorIfEEvPT_PKS1_m(i1 + 48 | 0, 1808, 12);
 __ZN6vision10CopyVectorIfEEvPT_PKS1_m(i1 + 96 | 0, 1856, 12);
 __ZN6vision10CopyVectorIfEEvPT_PKS1_m(i1 + 144 | 0, 1904, 12);
 __ZN6vision10CopyVectorIfEEvPT_PKS1_m(i1 + 192 | 0, 1952, 12);
 __ZN6vision10CopyVectorIfEEvPT_PKS1_m(i1 + 240 | 0, 2e3, 12);
 HEAPF32[i1 + 288 >> 2] = .10000000149011612;
 HEAPF32[i1 + 292 >> 2] = .17499999701976776;
 HEAPF32[i1 + 296 >> 2] = .25;
 HEAPF32[i1 + 300 >> 2] = .32499998807907104;
 HEAPF32[i1 + 304 >> 2] = .4000000059604645;
 HEAPF32[i1 + 308 >> 2] = .4749999940395355;
 HEAPF32[i1 + 312 >> 2] = .550000011920929;
 HEAPF32[i1 + 316 >> 2] = 7.0;
 return;
}

function __ZN6vision18BinomialPyramid32f18apply_filter_twiceERNS_5ImageERKS1_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4;
 i9 = HEAP32[i1 + 56 >> 2] | 0;
 i8 = __ZNK6vision5Image4typeEv(i3) | 0;
 i7 = __ZNK6vision5Image5widthEv(i3) | 0;
 i6 = __ZNK6vision5Image6heightEv(i3) | 0;
 __ZN6vision5ImageC2EPhNS_9ImageTypeEmmim(i5, i9, i8, i7, i6, __ZNK6vision5Image4stepEv(i3) | 0, 1);
 __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_(i1, i5, i3);
 __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_(i1, i2, i5);
 __ZN6vision5ImageD2Ev(i5);
 STACKTOP = i4;
 return;
}
function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINSC_ISR_EEEEEEmOT_DpOT0_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i6 = __Znwm(496) | 0;
 HEAP32[i1 >> 2] = i6;
 HEAP32[i1 + 4 >> 2] = i2 + 8;
 HEAP32[i6 + 8 >> 2] = HEAP32[HEAP32[i5 >> 2] >> 2];
 i5 = i6 + 16 | 0;
 _memset(i5 | 0, 0, 480) | 0;
 __ZN12arControllerC2Ev(i5);
 HEAP8[i1 + 8 >> 0] = 1;
 HEAP32[i6 + 4 >> 2] = i3;
 HEAP32[i6 >> 2] = 0;
 return;
}

function _init_error_limit(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[i1 + 460 >> 2] | 0;
 i4 = (FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 1, 2044) | 0) + 1020 | 0;
 HEAP32[i3 + 40 >> 2] = i4;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 16) break;
  HEAP32[i4 + (i1 << 2) >> 2] = i1;
  i3 = 0 - i1 | 0;
  HEAP32[i4 + (i3 << 2) >> 2] = i3;
  i1 = i1 + 1 | 0;
 }
 i2 = 16;
 i1 = 16;
 while (1) {
  if (i1 >>> 0 >= 48) break;
  HEAP32[i4 + (i1 << 2) >> 2] = i2;
  HEAP32[i4 + (0 - i1 << 2) >> 2] = 0 - i2;
  i3 = i1 + 1 | 0;
  i2 = (i3 & 1 ^ 1) + i2 | 0;
  i1 = i3;
 }
 i3 = 0 - i2 | 0;
 while (1) {
  if (i1 >>> 0 >= 256) break;
  HEAP32[i4 + (i1 << 2) >> 2] = i2;
  HEAP32[i4 + (0 - i1 << 2) >> 2] = i3;
  i1 = i1 + 1 | 0;
 }
 return;
}

function _arImageProcLumaHistAndCDFAndPercentile(i7, i1, d2, i8) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i8 = i8 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 if (!(d2 < 0.0 | d2 > 1.0)) {
  i1 = _arImageProcLumaHistAndCDF(i7, i1) | 0;
  if ((i1 | 0) >= 0) {
   i5 = ~~(+(Math_imul(HEAP32[i7 + 8 >> 2] | 0, HEAP32[i7 + 4 >> 2] | 0) | 0) * d2) >>> 0;
   i1 = 0;
   while (1) {
    i6 = i1 & 255;
    i3 = HEAP32[i7 + 1036 + (i6 << 2) >> 2] | 0;
    if (i3 >>> 0 < i5 >>> 0) i1 = i1 + 1 << 24 >> 24; else break;
   }
   while (1) {
    i4 = i1 + 1 << 24 >> 24;
    if ((i3 | 0) != (i5 | 0)) break;
    i1 = i4;
    i3 = HEAP32[i7 + 1036 + ((i4 & 255) << 2) >> 2] | 0;
   }
   HEAP8[i8 >> 0] = ((i1 & 255) + i6 | 0) >>> 1;
   i1 = 0;
  }
 } else i1 = -1;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 11) HEAP8[i1 + 11 >> 0] = i3; else {
  i7 = i3 + 16 & -16;
  i6 = __Znwm(i7) | 0;
  HEAP32[i1 >> 2] = i6;
  HEAP32[i1 + 8 >> 2] = i7 | -2147483648;
  HEAP32[i1 + 4 >> 2] = i3;
  i1 = i6;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcm(i1, i2, i3) | 0;
 HEAP8[i4 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i1 + i3 | 0, i4);
 STACKTOP = i5;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5;
 if (i2 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i2 >>> 0 < 11) HEAP8[i1 + 11 >> 0] = i2; else {
  i7 = i2 + 16 & -16;
  i6 = __Znwm(i7) | 0;
  HEAP32[i1 >> 2] = i6;
  HEAP32[i1 + 8 >> 2] = i7 | -2147483648;
  HEAP32[i1 + 4 >> 2] = i2;
  i1 = i6;
 }
 __ZNSt3__211char_traitsIcE6assignEPcmc(i1, i2, i3) | 0;
 HEAP8[i4 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i1 + i2 | 0, i4);
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 12 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 12 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function _cycle(i1, i4, i5) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i2 = i7;
 L1 : do if ((i5 | 0) >= 2 ? (i6 = i4 + (i5 << 2) | 0, HEAP32[i6 >> 2] = i2, i1 | 0) : 0) while (1) {
  i3 = i1 >>> 0 < 256 ? i1 : 256;
  _memcpy(i2 | 0, HEAP32[i4 >> 2] | 0, i3 | 0) | 0;
  i2 = 0;
  do {
   i8 = i4 + (i2 << 2) | 0;
   i2 = i2 + 1 | 0;
   _memcpy(HEAP32[i8 >> 2] | 0, HEAP32[i4 + (i2 << 2) >> 2] | 0, i3 | 0) | 0;
   HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i3;
  } while ((i2 | 0) != (i5 | 0));
  i1 = i1 - i3 | 0;
  if (!i1) break L1;
  i2 = HEAP32[i6 >> 2] | 0;
 } while (0);
 STACKTOP = i7;
 return;
}

function __ZN12arControllerC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 + 192 >> 2] = 0;
 HEAP32[i1 + 196 >> 2] = 0;
 i2 = i1 + 204 | 0;
 HEAP32[i1 + 240 >> 2] = 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i1 + 244 >> 2] = -2;
 i2 = i1 + 248 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i1 + 268 >> 2] = 1065353216;
 HEAPF64[i1 + 312 >> 3] = .0001;
 HEAPF64[i1 + 320 >> 3] = 1.0e3;
 i2 = i1 + 328 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i1 + 472 >> 2] = 2;
 return;
}

function _ungetc(i1, i3) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 do if ((i1 | 0) != -1) {
  if ((HEAP32[i3 + 76 >> 2] | 0) > -1) i5 = ___lockfile(i3) | 0; else i5 = 0;
  i6 = i3 + 4 | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  if (!i2) {
   ___toread(i3) | 0;
   i2 = HEAP32[i6 >> 2] | 0;
   if (i2 | 0) {
    i4 = i2;
    i7 = 6;
   }
  } else {
   i4 = i2;
   i7 = 6;
  }
  if ((i7 | 0) == 6 ? i4 >>> 0 > ((HEAP32[i3 + 44 >> 2] | 0) + -8 | 0) >>> 0 : 0) {
   i7 = i4 + -1 | 0;
   HEAP32[i6 >> 2] = i7;
   HEAP8[i7 >> 0] = i1;
   HEAP32[i3 >> 2] = HEAP32[i3 >> 2] & -17;
   if (!i5) break;
   ___unlockfile(i3);
   break;
  }
  if (i5) {
   ___unlockfile(i3);
   i1 = -1;
  } else i1 = -1;
 } else i1 = -1; while (0);
 return i1 | 0;
}

function _jinit_phuff_decoder(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0;
 i4 = i3 + 4 | 0;
 i2 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i4 >> 2] >> 2] & 63](i3, 1, 64) | 0;
 HEAP32[i3 + 444 >> 2] = i2;
 HEAP32[i2 >> 2] = 129;
 i2 = i2 + 44 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 4) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i5 = i3 + 36 | 0;
 i2 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i4 >> 2] >> 2] & 63](i3, 1, HEAP32[i5 >> 2] << 8) | 0;
 HEAP32[i3 + 160 >> 2] = i2;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (HEAP32[i5 >> 2] | 0)) break;
  i3 = 0;
  i4 = i2;
  while (1) {
   if ((i3 | 0) == 64) break;
   HEAP32[i4 >> 2] = -1;
   i3 = i3 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  i1 = i1 + 1 | 0;
  i2 = i2 + 256 | 0;
 }
 return;
}

function __ZN6vision26SmoothOrientationHistogramIfEEvPT_PKS1_mS4_(i7, i8, i1, i9) {
 i7 = i7 | 0;
 i8 = i8 | 0;
 i1 = i1 | 0;
 i9 = i9 | 0;
 var d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d10 = 0.0, i11 = 0, d12 = 0.0;
 d10 = +HEAPF32[i8 >> 2];
 i3 = i1 + -1 | 0;
 i4 = i8 + (i3 << 2) | 0;
 i5 = i9 + 4 | 0;
 i6 = i9 + 8 | 0;
 d2 = +HEAPF32[i4 >> 2];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  d12 = +HEAPF32[i8 + (i1 << 2) >> 2];
  i11 = i1 + 1 | 0;
  HEAPF32[i7 + (i1 << 2) >> 2] = d2 * +HEAPF32[i9 >> 2] + d12 * +HEAPF32[i5 >> 2] + +HEAPF32[i6 >> 2] * +HEAPF32[i8 + (i11 << 2) >> 2];
  d2 = d12;
  i1 = i11;
 }
 HEAPF32[i7 + (i3 << 2) >> 2] = d2 * +HEAPF32[i9 >> 2] + +HEAPF32[i5 >> 2] * +HEAPF32[i4 >> 2] + d10 * +HEAPF32[i6 >> 2];
 return;
}

function _setupAR2(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i3;
 HEAP32[i2 >> 2] = i1;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0)) i1 = -1; else {
  i1 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0;
  i2 = _createKpmHandle(HEAP32[i1 + 192 >> 2] | 0) | 0;
  HEAP32[i1 + 232 >> 2] = i2;
  i1 = 0;
 }
 STACKTOP = i3;
 return i1 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 31 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 3) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 366 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 31 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 3) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 366 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function _fflush(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 do if (i2) {
  if ((HEAP32[i2 + 76 >> 2] | 0) <= -1) {
   i1 = ___fflush_unlocked(i2) | 0;
   break;
  }
  i3 = (___lockfile(i2) | 0) == 0;
  i1 = ___fflush_unlocked(i2) | 0;
  if (!i3) ___unlockfile(i2);
 } else {
  if (!(HEAP32[3456] | 0)) i1 = 0; else i1 = _fflush(HEAP32[3456] | 0) | 0;
  i2 = ___ofl_lock() | 0;
  i2 = HEAP32[i2 >> 2] | 0;
  if (i2) do {
   if ((HEAP32[i2 + 76 >> 2] | 0) > -1) i3 = ___lockfile(i2) | 0; else i3 = 0;
   if ((HEAP32[i2 + 20 >> 2] | 0) >>> 0 > (HEAP32[i2 + 28 >> 2] | 0) >>> 0) i1 = ___fflush_unlocked(i2) | 0 | i1;
   if (i3 | 0) ___unlockfile(i2);
   i2 = HEAP32[i2 + 56 >> 2] | 0;
  } while ((i2 | 0) != 0);
  ___ofl_unlock();
 } while (0);
 return i1 | 0;
}

function __ZN6vision5Image19calculate_unit_sizeENS_9ImageTypeE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i3;
 switch (i1 | 0) {
 case 1:
  break;
 case 2:
  {
   i1 = 4;
   break;
  }
 default:
  {
   i3 = ___cxa_allocate_exception(16) | 0;
   HEAP32[i2 >> 2] = 0;
   HEAP32[i2 + 4 >> 2] = 0;
   HEAP32[i2 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i2, 33393, __ZNSt3__211char_traitsIcE6lengthEPKc(33393) | 0);
   __ZN6vision9ExceptionC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i3, i2);
   ___cxa_throw(i3 | 0, 11016, 5);
  }
 }
 STACKTOP = i3;
 return i1 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 13 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1 + -1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 13 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1 + -1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 1) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 7 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 61 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 60 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 1) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 7 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 61 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 60 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 24 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 24 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function _fclose(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0;
 if ((HEAP32[i4 + 76 >> 2] | 0) > -1) i5 = ___lockfile(i4) | 0; else i5 = 0;
 ___unlist_locked_file(i4);
 i6 = (HEAP32[i4 >> 2] & 1 | 0) != 0;
 if (!i6) {
  i3 = ___ofl_lock() | 0;
  i2 = HEAP32[i4 + 52 >> 2] | 0;
  i1 = i4 + 56 | 0;
  if (i2 | 0) HEAP32[i2 + 56 >> 2] = HEAP32[i1 >> 2];
  i1 = HEAP32[i1 >> 2] | 0;
  if (i1 | 0) HEAP32[i1 + 52 >> 2] = i2;
  if ((HEAP32[i3 >> 2] | 0) == (i4 | 0)) HEAP32[i3 >> 2] = i1;
  ___ofl_unlock();
 }
 i1 = _fflush(i4) | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[i4 + 12 >> 2] & 127](i4) | 0 | i1;
 i2 = HEAP32[i4 + 96 >> 2] | 0;
 if (i2 | 0) _free(i2);
 if (i6) {
  if (i5 | 0) ___unlockfile(i4);
 } else _free(i4);
 return i1 | 0;
}

function __ZN10emscripten8internal7InvokerIiJNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFiS8_EPNS0_11BindingTypeIS8_EUt_E(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i3 + 12 | 0;
 i4 = i3;
 __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12fromWireTypeEPNS9_Ut_E(i4, i2);
 i2 = FUNCTION_TABLE_ii[i1 & 127](i4) | 0;
 HEAP32[i5 >> 2] = i2;
 i2 = __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi(i5) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 STACKTOP = i3;
 return i2 | 0;
}

function _getMultiMarkerCount(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i3;
 HEAP32[i2 >> 2] = i1;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0)) i1 = -1; else {
  i1 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0;
  i1 = (HEAP32[i1 + 332 >> 2] | 0) - (HEAP32[i1 + 328 >> 2] | 0) >> 3;
 }
 STACKTOP = i3;
 return i1 | 0;
}

function __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i10;
 HEAP8[i7 >> 0] = 37;
 i8 = i7 + 1 | 0;
 HEAP8[i8 >> 0] = i5;
 i9 = i7 + 2 | 0;
 HEAP8[i9 >> 0] = i6;
 HEAP8[i7 + 3 >> 0] = 0;
 if (i6 << 24 >> 24) {
  HEAP8[i8 >> 0] = i6;
  HEAP8[i9 >> 0] = i5;
 }
 i9 = __ZNSt3__212_GLOBAL__N_17countofIcEEmPKT_S4_(i2, HEAP32[i3 >> 2] | 0) | 0;
 i9 = i2 + (_strftime_l(i2 | 0, i9 | 0, i7 | 0, i4 | 0, HEAP32[i1 >> 2] | 0) | 0) | 0;
 HEAP32[i3 >> 2] = i9;
 STACKTOP = i10;
 return;
}

function __ZN6vision14Determinant3x3IfEET_PKS1_(i1) {
 i1 = i1 | 0;
 var d2 = 0.0, d3 = 0.0, d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = i1 + 16 | 0;
 i10 = i1 + 20 | 0;
 i5 = i1 + 28 | 0;
 i9 = i1 + 32 | 0;
 d4 = +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i7 >> 2], +HEAPF32[i10 >> 2], +HEAPF32[i5 >> 2], +HEAPF32[i9 >> 2]);
 i8 = i1 + 12 | 0;
 i6 = i1 + 24 | 0;
 d3 = +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i8 >> 2], +HEAPF32[i10 >> 2], +HEAPF32[i6 >> 2], +HEAPF32[i9 >> 2]);
 d2 = +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[i8 >> 2], +HEAPF32[i7 >> 2], +HEAPF32[i6 >> 2], +HEAPF32[i5 >> 2]);
 return +(d4 * +HEAPF32[i1 >> 2] - d3 * +HEAPF32[i1 + 4 >> 2] + d2 * +HEAPF32[i1 + 8 >> 2]);
}

function _process_data_simple_main_37(i2, i3, i5, i7) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 var i1 = 0, i4 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = HEAP32[i2 + 424 >> 2] | 0;
 i9 = i8 + 48 | 0;
 if (!(HEAP32[i9 >> 2] | 0)) {
  i4 = i8 + 8 | 0;
  if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 + 428 >> 2] | 0) + 12 >> 2] & 63](i2, i4) | 0) {
   HEAP32[i9 >> 2] = 1;
   i1 = i4;
   i10 = 5;
  }
 } else {
  i1 = i8 + 8 | 0;
  i10 = 5;
 }
 if ((i10 | 0) == 5 ? (i10 = HEAP32[i2 + 316 >> 2] | 0, i6 = i8 + 52 | 0, FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[i2 + 432 >> 2] | 0) + 4 >> 2] & 7](i2, i1, i6, i10, i3, i5, i7), (HEAP32[i6 >> 2] | 0) >>> 0 >= i10 >>> 0) : 0) {
  HEAP32[i9 >> 2] = 0;
  HEAP32[i6 >> 2] = 0;
 }
 return;
}

function _getProcessingImage(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i3;
 HEAP32[i2 >> 2] = i1;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0)) i1 = 0; else {
  i1 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0) + 216 | 0;
  i1 = HEAP32[(HEAP32[i1 >> 2] | 0) + 4834148 >> 2] | 0;
 }
 STACKTOP = i3;
 return i1 | 0;
}

function __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i2, i4, i5) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i3 = 0, i6 = 0;
 i3 = i4 + 4 | 0;
 HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
 i3 = i2 + 8 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if ((HEAP32[i2 + 12 >> 2] | 0) - i1 >> 2 >>> 0 > i5 >>> 0) i2 = i3; else {
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE6resizeEm(i3, i5 + 1 | 0);
  i2 = i3;
  i1 = HEAP32[i3 >> 2] | 0;
 }
 i1 = HEAP32[i1 + (i5 << 2) >> 2] | 0;
 if (i1 | 0 ? (i6 = i1 + 4 | 0, i3 = HEAP32[i6 >> 2] | 0, HEAP32[i6 >> 2] = i3 + -1, (i3 | 0) == 0) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
 HEAP32[(HEAP32[i2 >> 2] | 0) + (i5 << 2) >> 2] = i4;
 return;
}

function _alloc_large(i4, i5, i1) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i6 = 0;
 i6 = HEAP32[i4 + 4 >> 2] | 0;
 if (i1 >>> 0 > 999999984) _out_of_memory(i4, 3);
 i3 = i1 & 7;
 i1 = ((i3 | 0) == 0 ? 0 : 8 - i3 | 0) + i1 | 0;
 if (i5 >>> 0 > 1) {
  i3 = HEAP32[i4 >> 2] | 0;
  HEAP32[i3 + 20 >> 2] = 14;
  HEAP32[i3 + 24 >> 2] = i5;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i4 >> 2] >> 2] & 255](i4);
 }
 i2 = i1 + 16 | 0;
 i3 = _jpeg_get_large(i4, i2) | 0;
 if (!i3) _out_of_memory(i4, 4);
 i4 = i6 + 76 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + i2;
 i6 = i6 + 60 + (i5 << 2) | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i3 + 4 >> 2] = i1;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i6 >> 2] = i3;
 return i3 + 16 | 0;
}

function __ZNSt3__26locale5__impD2Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 HEAP32[i3 >> 2] = 16836;
 i4 = i3 + 8 | 0;
 i5 = i3 + 12 | 0;
 i2 = 0;
 while (1) {
  i1 = HEAP32[i4 >> 2] | 0;
  if (i2 >>> 0 >= (HEAP32[i5 >> 2] | 0) - i1 >> 2 >>> 0) break;
  i1 = HEAP32[i1 + (i2 << 2) >> 2] | 0;
  if (i1 | 0 ? (i7 = i1 + 4 | 0, i6 = HEAP32[i7 >> 2] | 0, HEAP32[i7 >> 2] = i6 + -1, (i6 | 0) == 0) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
  i2 = i2 + 1 | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 144 | 0);
 __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEED2Ev(i4);
 __ZNSt3__26locale5facetD2Ev(i3);
 return;
}

function _scalbn(d2, i1) {
 d2 = +d2;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 if ((i1 | 0) <= 1023) {
  if ((i1 | 0) < -1022) {
   d2 = d2 * 2.2250738585072014e-308;
   i4 = (i1 | 0) < -2044;
   i3 = i1 + 2044 | 0;
   d2 = i4 ? d2 * 2.2250738585072014e-308 : d2;
   i1 = i4 ? ((i3 | 0) > -1022 ? i3 : -1022) : i1 + 1022 | 0;
  }
 } else {
  d2 = d2 * 8988465674311579538646525.0e283;
  i3 = (i1 | 0) > 2046;
  i4 = i1 + -2046 | 0;
  d2 = i3 ? d2 * 8988465674311579538646525.0e283 : d2;
  i1 = i3 ? ((i4 | 0) < 1023 ? i4 : 1023) : i1 + -1023 | 0;
 }
 i3 = _bitshift64Shl(i1 + 1023 | 0, 0, 52) | 0;
 i4 = getTempRet0() | 0;
 HEAP32[tempDoublePtr >> 2] = i3;
 HEAP32[tempDoublePtr + 4 >> 2] = i4;
 return +(d2 * +HEAPF64[tempDoublePtr >> 3]);
}

function __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE7reserveEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i5;
 i4 = HEAP32[i1 >> 2] | 0;
 if ((HEAP32[i1 + 8 >> 2] | 0) - i4 >> 2 >>> 0 < i2 >>> 0) {
  __ZNSt3__214__split_bufferIPN6vision4NodeILi96EEERNS_9allocatorIS4_EEEC2EmmS7_(i3, i2, (HEAP32[i1 + 4 >> 2] | 0) - i4 >> 2, i1 + 8 | 0);
  __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS4_RS6_EE(i1, i3);
  __ZNSt3__214__split_bufferIPN6vision4NodeILi96EEERNS_9allocatorIS4_EEED2Ev(i3);
 }
 STACKTOP = i5;
 return;
}

function _getMarkerNum(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i3;
 HEAP32[i2 >> 2] = i1;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0)) i1 = 13652; else {
  i1 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0) + 216 | 0;
  i1 = (HEAP32[i1 >> 2] | 0) + 44 | 0;
 }
 STACKTOP = i3;
 return HEAP32[i1 >> 2] | 0;
}

function _icpGetQ_from_S(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var d1 = 0.0, d2 = 0.0, i3 = 0, i4 = 0, d7 = 0.0;
 d2 = +HEAPF64[i6 >> 3];
 i3 = i6 + 8 | 0;
 d7 = +HEAPF64[i3 >> 3];
 i4 = i6 + 16 | 0;
 d1 = +HEAPF64[i4 >> 3];
 d1 = d2 * d2 + d7 * d7 + d1 * d1;
 if (d1 == 0.0) {
  HEAPF64[i5 >> 3] = 1.0;
  HEAPF64[i5 + 8 >> 3] = 0.0;
  d2 = 0.0;
  d1 = 0.0;
 } else {
  d1 = +Math_sqrt(+d1);
  HEAPF64[i5 >> 3] = d2 / d1;
  HEAPF64[i5 + 8 >> 3] = +HEAPF64[i3 >> 3] / d1;
  d2 = d1;
  d1 = +HEAPF64[i4 >> 3] / d1;
 }
 HEAPF64[i5 + 16 >> 3] = d1;
 HEAPF64[i5 + 24 >> 3] = d2;
 HEAPF64[i5 + 32 >> 3] = +HEAPF64[i6 + 24 >> 3];
 HEAPF64[i5 + 40 >> 3] = +HEAPF64[i6 + 32 >> 3];
 HEAPF64[i5 + 48 >> 3] = +HEAPF64[i6 + 40 >> 3];
 return;
}

function __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) {
  i4 = i2 + 4 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i3 | 0)) break;
   i5 = i1 + -16 | 0;
   __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
   i1 = i5;
  }
  HEAP32[i4 >> 2] = i3;
  i5 = HEAP32[i2 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE10deallocateEPS6_m(i2 + 12 | 0, i5, (HEAP32[i2 + 8 >> 2] | 0) - i5 >> 4);
 }
 return;
}

function _setMatrixCodeType(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i4;
 HEAP32[i3 >> 2] = i1;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0) {
  i3 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0) + 216 | 0;
  _arSetMatrixCodeType(HEAP32[i3 >> 2] | 0, i2) | 0;
 }
 STACKTOP = i4;
 return;
}

function ___fflush_unlocked(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i2 = i1 + 20 | 0;
 i7 = i1 + 28 | 0;
 if ((HEAP32[i2 >> 2] | 0) >>> 0 > (HEAP32[i7 >> 2] | 0) >>> 0 ? (FUNCTION_TABLE_iiii[HEAP32[i1 + 36 >> 2] & 63](i1, 0, 0) | 0, (HEAP32[i2 >> 2] | 0) == 0) : 0) i1 = -1; else {
  i3 = i1 + 4 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  i5 = i1 + 8 | 0;
  i6 = HEAP32[i5 >> 2] | 0;
  if (i4 >>> 0 < i6 >>> 0) {
   i6 = i4 - i6 | 0;
   FUNCTION_TABLE_iiiii[HEAP32[i1 + 40 >> 2] & 15](i1, i6, ((i6 | 0) < 0) << 31 >> 31, 1) | 0;
   getTempRet0() | 0;
  }
  HEAP32[i1 + 16 >> 2] = 0;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i5 >> 2] = 0;
  HEAP32[i3 >> 2] = 0;
  i1 = 0;
 }
 return i1 | 0;
}

function _prescan_quantize(i2, i6, i1, i7) {
 i2 = i2 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i10 = 0;
 i5 = HEAP32[(HEAP32[i2 + 460 >> 2] | 0) + 24 >> 2] | 0;
 i4 = HEAP32[i2 + 112 >> 2] | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i7 | 0)) break;
  i1 = HEAP32[i6 + (i3 << 2) >> 2] | 0;
  i2 = i4;
  while (1) {
   if (!i2) break;
   i8 = (HEAP32[i5 + ((HEAPU8[i1 >> 0] | 0) >>> 3 << 2) >> 2] | 0) + ((HEAPU8[i1 + 1 >> 0] | 0) >>> 2 << 6) + ((HEAPU8[i1 + 2 >> 0] | 0) >>> 3 << 1) | 0;
   i10 = HEAP16[i8 >> 1] | 0;
   i9 = i10 + 1 << 16 >> 16;
   HEAP16[i8 >> 1] = i9 << 16 >> 16 == 0 ? i10 : i9;
   i1 = i1 + 3 | 0;
   i2 = i2 + -1 | 0;
  }
  i3 = i3 + 1 | 0;
 }
 return;
}

function _kpmDeleteRefDataSet(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (i3) {
  i1 = HEAP32[i3 >> 2] | 0;
  if (!i1) i1 = 0; else {
   i1 = HEAP32[i1 >> 2] | 0;
   if (i1 | 0) _free(i1);
   i1 = 0;
   while (1) {
    i5 = HEAP32[i3 >> 2] | 0;
    i2 = i5 + 8 | 0;
    if ((i1 | 0) >= (HEAP32[i5 + 12 >> 2] | 0)) break;
    _free(HEAP32[(HEAP32[i2 >> 2] | 0) + (i1 * 12 | 0) >> 2] | 0);
    i1 = i1 + 1 | 0;
   }
   _free(HEAP32[i2 >> 2] | 0);
   _free(HEAP32[i3 >> 2] | 0);
   HEAP32[i3 >> 2] = 0;
   i1 = 0;
  }
 } else {
  _arLog(0, 3, 20146, i4);
  i1 = -1;
 }
 STACKTOP = i4;
 return i1 | 0;
}

function __ZN6vision34SolveHomography4PointsInhomogenousIfEEbPT_PKS1_S4_S4_S4_S4_S4_S4_S4_(i1, i2, i3, i4, i5, i6, i7, i8, i9) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 i11 = i10;
 __ZN6vision40Homography4PointsInhomogeneousConstraintIfEEvPT_PKS1_S4_S4_S4_S4_S4_S4_S4_(i11, i2, i3, i4, i5, i6, i7, i8, i9);
 if (__ZN6vision29SolveNullVector8x9DestructiveIfEEbPT_S2_(i1, i11) | 0) i1 = !(+Math_abs(+(+__ZN6vision14Determinant3x3IfEET_PKS1_(i1))) < 1.0e-05); else i1 = 0;
 STACKTOP = i10;
 return i1 | 0;
}

function _strtox_547(i4, i5, i1, i2, i3) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 i7 = i9;
 HEAP32[i7 >> 2] = 0;
 i8 = i7 + 4 | 0;
 HEAP32[i8 >> 2] = i4;
 HEAP32[i7 + 44 >> 2] = i4;
 i6 = i7 + 8 | 0;
 HEAP32[i6 >> 2] = (i4 | 0) < 0 ? -1 : i4 + 2147483647 | 0;
 HEAP32[i7 + 76 >> 2] = -1;
 ___shlim(i7, 0, 0);
 i1 = ___intscan(i7, i1, 1, i2, i3) | 0;
 i2 = getTempRet0() | 0;
 if (i5 | 0) HEAP32[i5 >> 2] = i4 + ((HEAP32[i8 >> 2] | 0) + (HEAP32[i7 + 120 >> 2] | 0) - (HEAP32[i6 >> 2] | 0));
 setTempRet0(i2 | 0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i2 = i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if ((((HEAP32[i2 + 24 >> 2] | 0 ? (HEAP32[i2 + 16 >> 2] | 0) == 0 : 0) ? HEAP32[i2 + 4 >> 2] & 8192 | 0 : 0) ? !(__ZSt18uncaught_exceptionv() | 0) : 0) ? (i2 = HEAP32[i1 >> 2] | 0, i2 = HEAP32[i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0, (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i2) | 0) == -1) : 0) {
  i2 = HEAP32[i1 >> 2] | 0;
  i2 = i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0;
  __ZNSt3__28ios_base5clearEj(i2, HEAP32[i2 + 16 >> 2] | 1);
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINSC_ISR_EEEEEEmOT_DpOT0_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i6 = __Znwm(200) | 0;
 HEAP32[i1 >> 2] = i6;
 HEAP32[i1 + 4 >> 2] = i2 + 8;
 HEAP32[i6 + 8 >> 2] = HEAP32[HEAP32[i5 >> 2] >> 2];
 _memset(i6 + 16 | 0, 0, 184) | 0;
 HEAP8[i1 + 8 >> 0] = 1;
 HEAP32[i6 + 4 >> 2] = i3;
 HEAP32[i6 >> 2] = 0;
 return;
}

function _getProjectionNearPlane(i2) {
 i2 = i2 | 0;
 var d1 = 0.0, i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i4;
 HEAP32[i3 >> 2] = i2;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0)) d1 = -1.0; else {
  i3 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0) + 312 | 0;
  d1 = +HEAPF64[i3 >> 3];
 }
 STACKTOP = i4;
 return +d1;
}

function _getProjectionFarPlane(i2) {
 i2 = i2 | 0;
 var d1 = 0.0, i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i4;
 HEAP32[i3 >> 2] = i2;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0)) d1 = -1.0; else {
  i3 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0) + 320 | 0;
  d1 = +HEAPF64[i3 >> 3];
 }
 STACKTOP = i4;
 return +d1;
}

function __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE6resizeEm(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = i2 + 4 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 i4 = (i1 - i5 | 0) / 12 | 0;
 if (i4 >>> 0 >= i3 >>> 0) {
  if (i4 >>> 0 > i3 >>> 0) {
   i2 = i5 + (i3 * 12 | 0) | 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break;
    i5 = i1 + -12 | 0;
    __ZNSt3__213__vector_baseINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEED2Ev(i5);
    i1 = i5;
   }
   HEAP32[i6 >> 2] = i2;
  }
 } else __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE8__appendEm(i2, i3 - i4 | 0);
 return;
}

function _null_convert_30(i1, i9, i2, i3, i4) {
 i1 = i1 | 0;
 i9 = i9 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0;
 i10 = HEAP32[i1 + 36 >> 2] | 0;
 i8 = HEAP32[i1 + 112 >> 2] | 0;
 i1 = i4;
 while (1) {
  i7 = i1 + -1 | 0;
  if ((i1 | 0) <= 0) break;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i10 | 0)) break;
   i4 = i8;
   i5 = (HEAP32[i3 >> 2] | 0) + i1 | 0;
   i6 = HEAP32[(HEAP32[i9 + (i1 << 2) >> 2] | 0) + (i2 << 2) >> 2] | 0;
   while (1) {
    if (!i4) break;
    HEAP8[i5 >> 0] = HEAP8[i6 >> 0] | 0;
    i4 = i4 + -1 | 0;
    i5 = i5 + i10 | 0;
    i6 = i6 + 1 | 0;
   }
   i1 = i1 + 1 | 0;
  }
  i2 = i2 + 1 | 0;
  i3 = i3 + 4 | 0;
  i1 = i7;
 }
 return;
}

function _fill_input_buffer(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = HEAP32[i2 + 24 >> 2] | 0;
 i4 = i3 + 32 | 0;
 i1 = _fread(HEAP32[i4 >> 2] | 0, 1, 4096, HEAP32[i3 + 28 >> 2] | 0) | 0;
 i5 = i3 + 36 | 0;
 if (!i1) {
  if (!(HEAP32[i5 >> 2] | 0)) i1 = i2; else {
   i1 = HEAP32[i2 >> 2] | 0;
   HEAP32[i1 + 20 >> 2] = 42;
   FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i2);
   i1 = i2;
  }
  i2 = HEAP32[i2 >> 2] | 0;
  HEAP32[i2 + 20 >> 2] = 120;
  FUNCTION_TABLE_vii[HEAP32[i2 + 4 >> 2] & 63](i1, -1);
  HEAP8[HEAP32[i4 >> 2] >> 0] = -1;
  HEAP8[(HEAP32[i4 >> 2] | 0) + 1 >> 0] = -39;
  i1 = 2;
 }
 HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i3 + 4 >> 2] = i1;
 HEAP32[i5 >> 2] = 0;
 return 1;
}

function __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 while (1) {
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (i1 | 0)) break;
  i3 = i3 + -16 | 0;
  HEAP32[i2 >> 2] = i3;
  __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i3);
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE10deallocateEPS6_m(HEAP32[i4 + 16 >> 2] | 0, i1, (HEAP32[i4 + 12 >> 2] | 0) - i1 >> 4);
 return;
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i5;
 i4 = HEAP32[i1 >> 2] | 0;
 if ((HEAP32[i1 + 8 >> 2] | 0) - i4 >> 3 >>> 0 < i2 >>> 0) {
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEEC2EmmS5_(i3, i2, (HEAP32[i1 + 4 >> 2] | 0) - i4 >> 3, i1 + 8 | 0);
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i1, i3);
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEED2Ev(i3);
 }
 STACKTOP = i5;
 return;
}

function _prepare_range_limit_table(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 1, 1408) | 0;
 i2 = i3 + 256 | 0;
 i4 = i1 + 324 | 0;
 HEAP32[i4 >> 2] = i2;
 _memset(i3 | 0, 0, 256) | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 256) break;
  HEAP8[i2 + i1 >> 0] = i1;
  i1 = i1 + 1 | 0;
 }
 i2 = i3 + 384 | 0;
 i1 = 128;
 while (1) {
  if ((i1 | 0) == 512) break;
  HEAP8[i2 + i1 >> 0] = -1;
  i1 = i1 + 1 | 0;
 }
 _memset(i3 + 896 | 0, 0, 384) | 0;
 i3 = i3 + 1280 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = i3 + 128 | 0;
 do {
  HEAP8[i3 >> 0] = HEAP8[i1 >> 0] | 0;
  i3 = i3 + 1 | 0;
  i1 = i1 + 1 | 0;
 } while ((i3 | 0) < (i2 | 0));
 return;
}

function _fmt_u(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i3 >>> 0 > 4294967295) {
  do {
   i4 = i3;
   i3 = ___udivdi3(i3 | 0, i2 | 0, 10, 0) | 0;
   i5 = i2;
   i2 = getTempRet0() | 0;
   i6 = ___muldi3(i3 | 0, i2 | 0, 10, 0) | 0;
   i6 = _i64Subtract(i4 | 0, i5 | 0, i6 | 0, getTempRet0() | 0) | 0;
   getTempRet0() | 0;
   i1 = i1 + -1 | 0;
   HEAP8[i1 >> 0] = i6 & 255 | 48;
  } while (i5 >>> 0 > 9 | (i5 | 0) == 9 & i4 >>> 0 > 4294967295);
  i2 = i3;
 } else i2 = i3;
 if (i2) do {
  i6 = i2;
  i2 = (i2 >>> 0) / 10 | 0;
  i1 = i1 + -1 | 0;
  HEAP8[i1 >> 0] = i6 - (i2 * 10 | 0) | 48;
 } while (i6 >>> 0 >= 10);
 return i1 | 0;
}

function _process_restart_49(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = HEAP32[i2 + 444 >> 2] | 0;
 i1 = i4 + 16 | 0;
 i3 = HEAP32[i2 + 440 >> 2] | 0;
 i5 = i3 + 24 | 0;
 HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + ((HEAP32[i1 >> 2] | 0) / 8 | 0);
 HEAP32[i1 >> 2] = 0;
 if (FUNCTION_TABLE_ii[HEAP32[i3 + 8 >> 2] & 127](i2) | 0) {
  i3 = i2 + 328 | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (HEAP32[i3 >> 2] | 0)) break;
   HEAP32[i4 + 24 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  HEAP32[i4 + 20 >> 2] = 0;
  HEAP32[i4 + 40 >> 2] = HEAP32[i2 + 276 >> 2];
  if (!(HEAP32[i2 + 416 >> 2] | 0)) {
   HEAP32[i4 + 8 >> 2] = 0;
   i1 = 1;
  } else i1 = 1;
 } else i1 = 0;
 return i1 | 0;
}

function _h2v2_upsample(i3, i1, i9, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i9 = i9 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0;
 i7 = HEAP32[i2 >> 2] | 0;
 i8 = i3 + 312 | 0;
 i6 = i3 + 112 | 0;
 i1 = 0;
 i2 = 0;
 while (1) {
  if ((i1 | 0) >= (HEAP32[i8 >> 2] | 0)) break;
  i4 = HEAP32[i7 + (i1 << 2) >> 2] | 0;
  i5 = i4 + (HEAP32[i6 >> 2] | 0) | 0;
  i3 = HEAP32[i9 + (i2 << 2) >> 2] | 0;
  while (1) {
   if (i4 >>> 0 >= i5 >>> 0) break;
   i10 = HEAP8[i3 >> 0] | 0;
   HEAP8[i4 >> 0] = i10;
   HEAP8[i4 + 1 >> 0] = i10;
   i3 = i3 + 1 | 0;
   i4 = i4 + 2 | 0;
  }
  _jcopy_sample_rows(i7, i1, i7, i1 | 1, 1, HEAP32[i6 >> 2] | 0);
  i1 = i1 + 2 | 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function _icpGetU_from_X_by_MatX2U(i4, i5, i1) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 var d2 = 0.0, d3 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0;
 d6 = +HEAPF64[i1 >> 3];
 d7 = +HEAPF64[i1 + 8 >> 3];
 d3 = +HEAPF64[i1 + 16 >> 3];
 d2 = +HEAPF64[i5 + 88 >> 3] + (d6 * +HEAPF64[i5 + 64 >> 3] + d7 * +HEAPF64[i5 + 72 >> 3] + d3 * +HEAPF64[i5 + 80 >> 3]);
 if (d2 == 0.0) i1 = -1; else {
  d8 = +HEAPF64[i5 + 56 >> 3] + (d6 * +HEAPF64[i5 + 32 >> 3] + d7 * +HEAPF64[i5 + 40 >> 3] + d3 * +HEAPF64[i5 + 48 >> 3]);
  HEAPF64[i4 >> 3] = (+HEAPF64[i5 + 24 >> 3] + (d6 * +HEAPF64[i5 >> 3] + d7 * +HEAPF64[i5 + 8 >> 3] + d3 * +HEAPF64[i5 + 16 >> 3])) / d2;
  HEAPF64[i4 + 8 >> 3] = d8 / d2;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0;
 L1 : do switch ((HEAP32[i2 + 4 >> 2] & 176) << 24 >> 24) {
 case 16:
  {
   i2 = HEAP8[i1 >> 0] | 0;
   switch (i2 << 24 >> 24) {
   case 43:
   case 45:
    {
     i1 = i1 + 1 | 0;
     break L1;
    }
   default:
    {}
   }
   if ((i3 - i1 | 0) > 1 & i2 << 24 >> 24 == 48) {
    switch (HEAP8[i1 + 1 >> 0] | 0) {
    case 88:
    case 120:
     break;
    default:
     {
      i4 = 7;
      break L1;
     }
    }
    i1 = i1 + 2 | 0;
   } else i4 = 7;
   break;
  }
 case 32:
  {
   i1 = i3;
   break;
  }
 default:
  i4 = 7;
 } while (0);
 return i1 | 0;
}

function _jinit_merged_upsampler(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = i4 + 4 | 0;
 i5 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 >> 2] >> 2] & 63](i4, 1, 48) | 0;
 HEAP32[i4 + 452 >> 2] = i5;
 HEAP32[i5 >> 2] = 125;
 HEAP32[i5 + 8 >> 2] = 0;
 i2 = Math_imul(HEAP32[i4 + 120 >> 2] | 0, HEAP32[i4 + 112 >> 2] | 0) | 0;
 HEAP32[i5 + 40 >> 2] = i2;
 i3 = i5 + 4 | 0;
 if ((HEAP32[i4 + 312 >> 2] | 0) == 2) {
  HEAP32[i3 >> 2] = 1;
  HEAP32[i5 + 12 >> 2] = 9;
  i1 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i4, 1, i2) | 0;
 } else {
  HEAP32[i3 >> 2] = 2;
  HEAP32[i5 + 12 >> 2] = 10;
  i1 = 0;
 }
 HEAP32[i5 + 32 >> 2] = i1;
 _build_ycc_rgb_table_46(i4);
 return;
}

function ___ftello_unlocked(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0;
 if (!(HEAP32[i3 >> 2] & 128)) i1 = 1; else i1 = (HEAP32[i3 + 20 >> 2] | 0) >>> 0 > (HEAP32[i3 + 28 >> 2] | 0) >>> 0 ? 2 : 1;
 i1 = FUNCTION_TABLE_iiiii[HEAP32[i3 + 40 >> 2] & 15](i3, 0, 0, i1) | 0;
 i2 = getTempRet0() | 0;
 if ((i2 | 0) >= 0) {
  i4 = (HEAP32[i3 + 8 >> 2] | 0) - (HEAP32[i3 + 4 >> 2] | 0) | 0;
  i4 = _i64Subtract(i1 | 0, i2 | 0, i4 | 0, ((i4 | 0) < 0) << 31 >> 31 | 0) | 0;
  i2 = getTempRet0() | 0;
  i1 = (HEAP32[i3 + 20 >> 2] | 0) - (HEAP32[i3 + 28 >> 2] | 0) | 0;
  i1 = _i64Add(i4 | 0, i2 | 0, i1 | 0, ((i1 | 0) < 0) << 31 >> 31 | 0) | 0;
  i2 = getTempRet0() | 0;
 }
 setTempRet0(i2 | 0);
 return i1 | 0;
}

function _frexp(d1, i5) {
 d1 = +d1;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i2 = HEAP32[tempDoublePtr >> 2] | 0;
 i3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i4 = _bitshift64Lshr(i2 | 0, i3 | 0, 52) | 0;
 getTempRet0() | 0;
 switch (i4 & 2047) {
 case 0:
  {
   if (d1 != 0.0) {
    d1 = +_frexp(d1 * 18446744073709551616.0, i5);
    i2 = (HEAP32[i5 >> 2] | 0) + -64 | 0;
   } else i2 = 0;
   HEAP32[i5 >> 2] = i2;
   break;
  }
 case 2047:
  break;
 default:
  {
   HEAP32[i5 >> 2] = (i4 & 2047) + -1022;
   HEAP32[tempDoublePtr >> 2] = i2;
   HEAP32[tempDoublePtr + 4 >> 2] = i3 & -2146435073 | 1071644672;
   d1 = +HEAPF64[tempDoublePtr >> 3];
  }
 }
 return +d1;
}

function _setProjectionNearPlane(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 var i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i4;
 HEAP32[i3 >> 2] = i1;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0) {
  i3 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0) + 312 | 0;
  HEAPF64[i3 >> 3] = d2;
 }
 STACKTOP = i4;
 return;
}

function _create_odither_tables(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = HEAP32[i4 + 460 >> 2] | 0;
 i6 = i4 + 120 | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (HEAP32[i6 >> 2] | 0)) break;
  i2 = HEAP32[i5 + 32 + (i3 << 2) >> 2] | 0;
  i1 = 0;
  while (1) {
   if (i1 >>> 0 >= i3 >>> 0) {
    i7 = 8;
    break;
   }
   if ((i2 | 0) == (HEAP32[i5 + 32 + (i1 << 2) >> 2] | 0)) {
    i7 = 7;
    break;
   }
   i1 = i1 + 1 | 0;
  }
  if ((i7 | 0) == 7) {
   i7 = 0;
   i1 = HEAP32[i5 + 52 + (i1 << 2) >> 2] | 0;
   if (!i1) i7 = 8;
  }
  if ((i7 | 0) == 8) i1 = _make_odither_array(i4, i2) | 0;
  HEAP32[i5 + 52 + (i3 << 2) >> 2] = i1;
  i3 = i3 + 1 | 0;
 }
 return;
}

function ___stdio_seek(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i7 = i6 + 8 | 0;
 i5 = i6;
 HEAP32[i7 >> 2] = HEAP32[i1 + 60 >> 2];
 HEAP32[i7 + 4 >> 2] = i3;
 HEAP32[i7 + 8 >> 2] = i2;
 HEAP32[i7 + 12 >> 2] = i5;
 HEAP32[i7 + 16 >> 2] = i4;
 if ((___syscall_ret(___syscall140(140, i7 | 0) | 0) | 0) < 0) {
  i1 = i5;
  HEAP32[i1 >> 2] = -1;
  HEAP32[i1 + 4 >> 2] = -1;
  i1 = -1;
  i2 = -1;
 } else {
  i2 = i5;
  i1 = HEAP32[i2 + 4 >> 2] | 0;
  i2 = HEAP32[i2 >> 2] | 0;
 }
 setTempRet0(i1 | 0);
 STACKTOP = i6;
 return i2 | 0;
}

function __ZN6vision19downsample_bilinearEPfPKfmm(i2, i9, i10, i1) {
 i2 = i2 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0;
 i11 = i10 >>> 1;
 i7 = i1 >>> 1;
 i8 = i10 << 1;
 i6 = 0;
 while (1) {
  if ((i6 | 0) == (i7 | 0)) break;
  i4 = i9 + ((Math_imul(i8, i6) | 0) << 2) | 0;
  i1 = 0;
  i3 = i4 + (i10 << 2) | 0;
  i5 = i2;
  while (1) {
   if ((i1 | 0) == (i11 | 0)) break;
   HEAPF32[i5 >> 2] = (+HEAPF32[i4 >> 2] + +HEAPF32[i4 + 4 >> 2] + +HEAPF32[i3 >> 2] + +HEAPF32[i3 + 4 >> 2]) * .25;
   i1 = i1 + 1 | 0;
   i3 = i3 + 8 | 0;
   i4 = i4 + 8 | 0;
   i5 = i5 + 4 | 0;
  }
  i6 = i6 + 1 | 0;
  i2 = i2 + (i11 << 2) | 0;
 }
 return;
}

function _setProjectionFarPlane(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 var i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i4;
 HEAP32[i3 >> 2] = i1;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i3) | 0) {
  i3 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i3) | 0) + 320 | 0;
  HEAPF64[i3 >> 3] = d2;
 }
 STACKTOP = i4;
 return;
}

function _select_colors(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0;
 i4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 + 4 >> 2] >> 2] & 63](i3, 1, i1 << 5) | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 31;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 63;
 HEAP32[i4 + 16 >> 2] = 0;
 HEAP32[i4 + 20 >> 2] = 31;
 _update_box(i3, i4);
 i2 = _median_cut(i3, i4, i1) | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (i2 | 0)) break;
  _compute_color(i3, i4 + (i1 << 5) | 0, i1);
  i1 = i1 + 1 | 0;
 }
 HEAP32[i3 + 132 >> 2] = i2;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAP32[i4 + 20 >> 2] = 96;
 HEAP32[i4 + 24 >> 2] = i2;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 4 >> 2] & 63](i3, 1);
 return;
}

function __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev(i1);
 HEAP32[i1 >> 2] = 14436;
 HEAP32[i1 + 32 >> 2] = i2;
 __ZNSt3__26localeC2ERKS0_(i5, i1 + 4 | 0);
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 59104) | 0;
 __ZNSt3__26localeD2Ev(i5);
 HEAP32[i1 + 36 >> 2] = i2;
 HEAP32[i1 + 40 >> 2] = i3;
 i3 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i2) | 0) & 1;
 HEAP8[i1 + 44 >> 0] = i3;
 STACKTOP = i4;
 return;
}

function __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1);
 HEAP32[i1 >> 2] = 14500;
 HEAP32[i1 + 32 >> 2] = i2;
 __ZNSt3__26localeC2ERKS0_(i5, i1 + 4 | 0);
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 59096) | 0;
 __ZNSt3__26localeD2Ev(i5);
 HEAP32[i1 + 36 >> 2] = i2;
 HEAP32[i1 + 40 >> 2] = i3;
 i3 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i2) | 0) & 1;
 HEAP8[i1 + 44 >> 0] = i3;
 STACKTOP = i4;
 return;
}

function _arUtilMatMuldff(i3, i4, i5) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i6 = 0, i7 = 0, i8 = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  i6 = i3 + (i1 << 5) | 0;
  i7 = i3 + (i1 << 5) + 8 | 0;
  i8 = i3 + (i1 << 5) + 16 | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 4) break;
   HEAPF32[i5 + (i1 << 4) + (i2 << 2) >> 2] = +HEAPF32[i4 + (i2 << 2) >> 2] * +HEAPF64[i6 >> 3] + +HEAPF32[i4 + 16 + (i2 << 2) >> 2] * +HEAPF64[i7 >> 3] + +HEAPF32[i4 + 32 + (i2 << 2) >> 2] * +HEAPF64[i8 >> 3];
   i2 = i2 + 1 | 0;
  }
  i8 = i5 + (i1 << 4) + 12 | 0;
  HEAPF32[i8 >> 2] = +HEAPF32[i8 >> 2] + +HEAPF64[i3 + (i1 << 5) + 24 >> 3];
  i1 = i1 + 1 | 0;
 }
 return 0;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPKhi(i3, i4, i5) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i8;
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2Em(i6, i5);
 i2 = HEAP32[i6 >> 2] | 0;
 i7 = (HEAP32[i6 + 4 >> 2] | 0) - i2 >> 2;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == (i7 | 0)) break;
  HEAP32[i2 + (i1 << 2) >> 2] = i1;
  i1 = i1 + 1 | 0;
 }
 __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPKhiPKii(i3, i4, i5, i2, i7);
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev(i6);
 STACKTOP = i8;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_destructor_nameINS0_2DbEEEPKcS4_S4_RT_(i3, i2, i5) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 var i1 = 0, i4 = 0;
 if ((i3 | 0) != (i2 | 0)) {
  i1 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_(i3, i2, i5) | 0;
  if ((i1 | 0) == (i3 | 0)) i1 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_(i3, i2, i5) | 0;
  if ((i1 | 0) != (i3 | 0) ? (i4 = HEAP32[i5 + 4 >> 2] | 0, (HEAP32[i5 >> 2] | 0) != (i4 | 0)) : 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i4 + -24 | 0, 0, 50596) | 0; else i1 = i3;
 } else i1 = i3;
 return i1 | 0;
}

function _arUtilMatMulf(i3, i4, i5) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i6 = 0, i7 = 0, i8 = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  i6 = i3 + (i1 << 4) | 0;
  i7 = i3 + (i1 << 4) + 4 | 0;
  i8 = i3 + (i1 << 4) + 8 | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 4) break;
   HEAPF32[i5 + (i1 << 4) + (i2 << 2) >> 2] = +HEAPF32[i6 >> 2] * +HEAPF32[i4 + (i2 << 2) >> 2] + +HEAPF32[i7 >> 2] * +HEAPF32[i4 + 16 + (i2 << 2) >> 2] + +HEAPF32[i8 >> 2] * +HEAPF32[i4 + 32 + (i2 << 2) >> 2];
   i2 = i2 + 1 | 0;
  }
  i8 = i5 + (i1 << 4) + 12 | 0;
  HEAPF32[i8 >> 2] = +HEAPF32[i3 + (i1 << 4) + 12 >> 2] + +HEAPF32[i8 >> 2];
  i1 = i1 + 1 | 0;
 }
 return 0;
}

function _arUtilMatMul(i3, i4, i5) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i6 = 0, i7 = 0, i8 = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  i6 = i3 + (i1 << 5) | 0;
  i7 = i3 + (i1 << 5) + 8 | 0;
  i8 = i3 + (i1 << 5) + 16 | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 4) break;
   HEAPF64[i5 + (i1 << 5) + (i2 << 3) >> 3] = +HEAPF64[i6 >> 3] * +HEAPF64[i4 + (i2 << 3) >> 3] + +HEAPF64[i7 >> 3] * +HEAPF64[i4 + 32 + (i2 << 3) >> 3] + +HEAPF64[i8 >> 3] * +HEAPF64[i4 + 64 + (i2 << 3) >> 3];
   i2 = i2 + 1 | 0;
  }
  i8 = i5 + (i1 << 5) + 24 | 0;
  HEAPF64[i8 >> 3] = +HEAPF64[i3 + (i1 << 5) + 24 >> 3] + +HEAPF64[i8 >> 3];
  i1 = i1 + 1 | 0;
 }
 return 0;
}

function __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEEC2EmmSA_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 357913941) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 * 12 | 0) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 * 12 | 0) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 * 12 | 0);
 return;
}

function _atoi(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 while (1) {
  i4 = i1 + 1 | 0;
  if (!(_isspace(HEAP8[i1 >> 0] | 0) | 0)) break; else i1 = i4;
 }
 i3 = HEAP8[i1 >> 0] | 0;
 switch (i3 | 0) {
 case 45:
  {
   i1 = 1;
   i5 = 5;
   break;
  }
 case 43:
  {
   i1 = 0;
   i5 = 5;
   break;
  }
 default:
  {
   i6 = 0;
   i2 = i1;
   i1 = i3;
  }
 }
 if ((i5 | 0) == 5) {
  i6 = i1;
  i2 = i4;
  i1 = HEAP8[i4 >> 0] | 0;
 }
 if (!(_isdigit(i1) | 0)) i1 = 0; else {
  i1 = 0;
  do {
   i1 = (i1 * 10 | 0) + 48 - (HEAP8[i2 >> 0] | 0) | 0;
   i2 = i2 + 1 | 0;
  } while ((_isdigit(HEAP8[i2 >> 0] | 0) | 0) != 0);
 }
 return ((i6 | 0) == 0 ? 0 - i1 | 0 : i1) | 0;
}

function __ZNSt3__26locale2id5__getEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i1 = i5 + 32 | 0;
 i3 = i5 + 24 | 0;
 i4 = i5;
 i6 = i5 + 16 | 0;
 HEAP32[i6 >> 2] = 141;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i1 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
 __ZNSt3__212_GLOBAL__N_111__fake_bindC2EMNS_6locale2idEFvvEPS3_(i4, i1, i2);
 if ((HEAP32[i2 >> 2] | 0) != -1) {
  HEAP32[i1 >> 2] = i4;
  HEAP32[i3 >> 2] = i1;
  __ZNSt3__211__call_onceERVmPvPFvS2_E(i2, i3, 142);
 }
 STACKTOP = i5;
 return (HEAP32[i2 + 4 >> 2] | 0) + -1 | 0;
}

function __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEEC2EmmS6_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 119304647) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 * 36 | 0) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 * 36 | 0) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 * 36 | 0);
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 4) | 0;
 if (!(HEAP32[i7 >> 2] & 4)) HEAP32[i6 >> 2] = i1 + -1900;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 4) | 0;
 if (!(HEAP32[i7 >> 2] & 4)) HEAP32[i6 >> 2] = i1 + -1900;
 STACKTOP = i5;
 return;
}

function _kpmDeleteHandle(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if (!i1) i1 = -1; else {
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2) {
   __ZN6vision20VisualDatabaseFacadeD2Ev(i2);
   __ZdlPv(i2);
   i1 = HEAP32[i3 >> 2] | 0;
  }
  i2 = HEAP32[i1 + 28 >> 2] | 0;
  if (i2) {
   _free(i2);
   i1 = HEAP32[i3 >> 2] | 0;
  }
  i2 = HEAP32[i1 + 36 >> 2] | 0;
  if (i2) {
   _free(i2);
   i1 = HEAP32[i3 >> 2] | 0;
  }
  i2 = HEAP32[i1 + 52 >> 2] | 0;
  if (i2) {
   _free(i2);
   i1 = HEAP32[i3 >> 2] | 0;
  }
  i2 = HEAP32[i1 + 44 >> 2] | 0;
  if (i2) {
   _free(i2);
   i1 = HEAP32[i3 >> 2] | 0;
  }
  _free(i1);
  HEAP32[i3 >> 2] = 0;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev(i1);
 HEAP32[i1 >> 2] = 14564;
 HEAP32[i1 + 32 >> 2] = i2;
 HEAP32[i1 + 40 >> 2] = i3;
 i3 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[i1 + 48 >> 2] = i3;
 HEAP8[i1 + 52 >> 0] = 0;
 i3 = HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] | 0;
 __ZNSt3__26localeC2ERKS0_(i5, i1 + 4 | 0);
 FUNCTION_TABLE_vii[i3 & 63](i1, i5);
 __ZNSt3__26localeD2Ev(i5);
 STACKTOP = i4;
 return;
}

function __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1);
 HEAP32[i1 >> 2] = 14628;
 HEAP32[i1 + 32 >> 2] = i2;
 HEAP32[i1 + 40 >> 2] = i3;
 i3 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[i1 + 48 >> 2] = i3;
 HEAP8[i1 + 52 >> 0] = 0;
 i3 = HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] | 0;
 __ZNSt3__26localeC2ERKS0_(i5, i1 + 4 | 0);
 FUNCTION_TABLE_vii[i3 & 63](i1, i5);
 __ZNSt3__26localeD2Ev(i5);
 STACKTOP = i4;
 return;
}

function _cat(i1, i5) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 do if (i1) {
  i2 = _fopen(i1, 20190) | 0;
  if (i2) {
   _fseek(i2, 0, 2) | 0;
   i3 = _ftell(i2) | 0;
   _fseek(i2, 0, 0) | 0;
   i4 = i3 + 1 | 0;
   i1 = _malloc(i4) | 0;
   if (!i1) {
    _fclose(i2) | 0;
    i1 = ___errno_location() | 0;
    HEAP32[i1 >> 2] = 12;
    i1 = 0;
    break;
   }
   if (!(_fread(i1, i3, 1, i2) | 0)) {
    _free(i1);
    _fclose(i2) | 0;
    i1 = 0;
    break;
   }
   HEAP8[i1 + i3 >> 0] = 0;
   _fclose(i2) | 0;
   if (i5) HEAP32[i5 >> 2] = i4;
  } else i1 = 0;
 } else {
  i1 = ___errno_location() | 0;
  HEAP32[i1 >> 2] = 22;
  i1 = 0;
 } while (0);
 return i1 | 0;
}

function __ZN10emscripten8internal7InvokerIiJiiiEE6invokeEPFiiiiEiii(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 i2 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi(i2) | 0;
 i3 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi(i3) | 0;
 i4 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi(i4) | 0;
 i4 = FUNCTION_TABLE_iiii[i1 & 63](i2, i3, i4) | 0;
 HEAP32[i6 >> 2] = i4;
 i4 = __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi(i6) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function _process_restart(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = HEAP32[i2 + 444 >> 2] | 0;
 i1 = i4 + 16 | 0;
 i3 = HEAP32[i2 + 440 >> 2] | 0;
 i5 = i3 + 24 | 0;
 HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + ((HEAP32[i1 >> 2] | 0) / 8 | 0);
 HEAP32[i1 >> 2] = 0;
 if (FUNCTION_TABLE_ii[HEAP32[i3 + 8 >> 2] & 127](i2) | 0) {
  i3 = i2 + 328 | 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (HEAP32[i3 >> 2] | 0)) break;
   HEAP32[i4 + 20 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  HEAP32[i4 + 36 >> 2] = HEAP32[i2 + 276 >> 2];
  if (!(HEAP32[i2 + 416 >> 2] | 0)) {
   HEAP32[i4 + 8 >> 2] = 0;
   i1 = 1;
  } else i1 = 1;
 } else i1 = 0;
 return i1 | 0;
}

function _arMatrixTrans(i1, i5) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = HEAP32[i1 + 4 >> 2] | 0;
 L1 : do if ((i6 | 0) == (HEAP32[i5 + 8 >> 2] | 0) ? (i7 = HEAP32[i1 + 8 >> 2] | 0, (i7 | 0) == (HEAP32[i5 + 4 >> 2] | 0)) : 0) {
  i1 = HEAP32[i1 >> 2] | 0;
  i4 = 0;
  while (1) {
   if ((i4 | 0) >= (i6 | 0)) {
    i1 = 0;
    break L1;
   }
   i2 = (HEAP32[i5 >> 2] | 0) + (i4 << 3) | 0;
   i3 = 0;
   while (1) {
    if ((i3 | 0) >= (i7 | 0)) break;
    HEAPF64[i1 >> 3] = +HEAPF64[i2 >> 3];
    i2 = i2 + (i6 << 3) | 0;
    i3 = i3 + 1 | 0;
    i1 = i1 + 8 | 0;
   }
   i4 = i4 + 1 | 0;
  }
 } else i1 = -1; while (0);
 return i1 | 0;
}

function _arMatrixTransf(i1, i5) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = HEAP32[i1 + 4 >> 2] | 0;
 L1 : do if ((i6 | 0) == (HEAP32[i5 + 8 >> 2] | 0) ? (i7 = HEAP32[i1 + 8 >> 2] | 0, (i7 | 0) == (HEAP32[i5 + 4 >> 2] | 0)) : 0) {
  i1 = HEAP32[i1 >> 2] | 0;
  i4 = 0;
  while (1) {
   if ((i4 | 0) >= (i6 | 0)) {
    i1 = 0;
    break L1;
   }
   i2 = (HEAP32[i5 >> 2] | 0) + (i4 << 2) | 0;
   i3 = 0;
   while (1) {
    if ((i3 | 0) >= (i7 | 0)) break;
    HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
    i2 = i2 + (i6 << 2) | 0;
    i3 = i3 + 1 | 0;
    i1 = i1 + 4 | 0;
   }
   i4 = i4 + 1 | 0;
  }
 } else i1 = -1; while (0);
 return i1 | 0;
}

function __ZN6vision32CauchyProjectiveReprojectionCostIfEET_PKS1_S3_S3_S1_(i1, i2, i3, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i5 + 8 | 0;
 i6 = i5;
 i7 = i8 + 4 | 0;
 __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvRT_S2_PKS1_S1_S1_(i8, i7, i1, +HEAPF32[i2 >> 2], +HEAPF32[i2 + 4 >> 2]);
 HEAPF32[i6 >> 2] = +HEAPF32[i8 >> 2] - +HEAPF32[i3 >> 2];
 HEAPF32[i6 + 4 >> 2] = +HEAPF32[i7 >> 2] - +HEAPF32[i3 + 4 >> 2];
 d4 = +__ZN6vision10CauchyCostIfEET_PKS1_S1_(i6, d4);
 STACKTOP = i5;
 return +d4;
}

function __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEEC2EmmS8_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 357913941) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 * 12 | 0) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 * 12 | 0) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 * 12 | 0);
 return;
}

function _arSetDebugMode(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5;
 do if (i2) if ((HEAP32[i2 >> 2] | 0) != (i3 | 0)) {
  HEAP32[i2 >> 2] = i3;
  if (!i3) {
   i1 = i2 + 4834148 | 0;
   _free(HEAP32[i1 >> 2] | 0);
   HEAP32[i1 >> 2] = 0;
   i1 = 0;
   break;
  }
  i3 = _malloc(Math_imul(HEAP32[i2 + 40 >> 2] | 0, HEAP32[i2 + 36 >> 2] | 0) | 0) | 0;
  HEAP32[i2 + 4834148 >> 2] = i3;
  if (!i3) {
   _arLog(0, 3, 20581, i4);
   _exit(1);
  } else i1 = 0;
 } else i1 = 0; else i1 = -1; while (0);
 STACKTOP = i5;
 return i1 | 0;
}

function _arMatrixDup(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i6 = HEAP32[i3 + 4 >> 2] | 0;
 L1 : do if ((i6 | 0) == (HEAP32[i4 + 4 >> 2] | 0) ? (i7 = HEAP32[i3 + 8 >> 2] | 0, (i7 | 0) == (HEAP32[i4 + 8 >> 2] | 0)) : 0) {
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (i6 | 0)) {
    i1 = 0;
    break L1;
   }
   i5 = Math_imul(i2, i7) | 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) >= (i7 | 0)) break;
    i8 = i1 + i5 | 0;
    HEAPF64[(HEAP32[i3 >> 2] | 0) + (i8 << 3) >> 3] = +HEAPF64[(HEAP32[i4 >> 2] | 0) + (i8 << 3) >> 3];
    i1 = i1 + 1 | 0;
   }
   i2 = i2 + 1 | 0;
  }
 } else i1 = -1; while (0);
 return i1 | 0;
}

function __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i1;
 HEAP32[i2 >> 2] = i3;
 i5 = __Znwm(16) | 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 HEAP32[i5 >> 2] = 13548;
 HEAP32[i5 + 12 >> 2] = i3;
 HEAP32[i2 + 4 >> 2] = i5;
 HEAP32[i4 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEE18__enable_weak_thisEz(i2, i4);
 STACKTOP = i1;
 return;
}

function _start_pass_main_36(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i3 = HEAP32[i2 + 424 >> 2] | 0;
 switch (i1 | 0) {
 case 0:
  {
   i1 = i3 + 4 | 0;
   if (!(HEAP32[(HEAP32[i2 + 452 >> 2] | 0) + 8 >> 2] | 0)) HEAP32[i1 >> 2] = 19; else {
    HEAP32[i1 >> 2] = 18;
    _make_funny_pointers(i2);
    HEAP32[i3 + 64 >> 2] = 0;
    HEAP32[i3 + 68 >> 2] = 0;
    HEAP32[i3 + 76 >> 2] = 0;
   }
   HEAP32[i3 + 48 >> 2] = 0;
   HEAP32[i3 + 52 >> 2] = 0;
   break;
  }
 case 2:
  {
   HEAP32[i3 + 4 >> 2] = 20;
   break;
  }
 default:
  {
   i3 = HEAP32[i2 >> 2] | 0;
   HEAP32[i3 + 20 >> 2] = 4;
   FUNCTION_TABLE_vi[HEAP32[i3 >> 2] & 255](i2);
  }
 }
 return;
}

function _kpmFopen(i2, i3, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i8 + 8 | 0;
 i6 = i8;
 do if (i2) {
  if (!i3) {
   i1 = _fopen(i2, i4) | 0;
   break;
  }
  i5 = _strlen(i2) | 0;
  i5 = _malloc(i5 + 2 + (_strlen(i3) | 0) | 0) | 0;
  if (!i5) {
   _arLog(0, 3, 20581, i6);
   _exit(1);
  } else {
   HEAP32[i7 >> 2] = i2;
   HEAP32[i7 + 4 >> 2] = i3;
   _sprintf(i5, 20598, i7) | 0;
   i1 = _fopen(i5, i4) | 0;
   _free(i5);
   break;
  }
 } else i1 = 0; while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function __ZN6vision19NormalizeHomographyIfEEvPT_(i1) {
 i1 = i1 | 0;
 var i2 = 0, d3 = 0.0, i4 = 0;
 i2 = i1 + 32 | 0;
 d3 = 1.0 / +HEAPF32[i2 >> 2];
 HEAPF32[i1 >> 2] = +HEAPF32[i1 >> 2] * d3;
 i4 = i1 + 4 | 0;
 HEAPF32[i4 >> 2] = d3 * +HEAPF32[i4 >> 2];
 i4 = i1 + 8 | 0;
 HEAPF32[i4 >> 2] = d3 * +HEAPF32[i4 >> 2];
 i4 = i1 + 12 | 0;
 HEAPF32[i4 >> 2] = d3 * +HEAPF32[i4 >> 2];
 i4 = i1 + 16 | 0;
 HEAPF32[i4 >> 2] = d3 * +HEAPF32[i4 >> 2];
 i4 = i1 + 20 | 0;
 HEAPF32[i4 >> 2] = d3 * +HEAPF32[i4 >> 2];
 i4 = i1 + 24 | 0;
 HEAPF32[i4 >> 2] = d3 * +HEAPF32[i4 >> 2];
 i1 = i1 + 28 | 0;
 HEAPF32[i1 >> 2] = d3 * +HEAPF32[i1 >> 2];
 HEAPF32[i2 >> 2] = 1.0;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS9_PvEEEE(i1, HEAP32[i1 + 8 >> 2] | 0);
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = 0;
 if (i2 | 0) __ZdlPv(i2);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS7_PvEEEE(i1, HEAP32[i1 + 8 >> 2] | 0);
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = 0;
 if (i2 | 0) __ZdlPv(i2);
 return;
}

function __ZN6vision14CompareFREAK84EPhPKf(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 __ZN6vision10ZeroVectorIhEEvPT_m(i5, 84);
 i1 = 0;
 i4 = 0;
 i8 = 36;
 i9 = 35;
 i10 = 36;
 while (1) {
  if ((i1 | 0) == 37) break;
  i7 = i1 + 1 | 0;
  i3 = i6 + (i1 << 2) | 0;
  i1 = i7;
  i2 = i4;
  while (1) {
   if ((i2 | 0) == (i10 | 0)) break;
   __ZN6vision17bitstring_set_bitEPhih(i5, i2, +HEAPF32[i3 >> 2] < +HEAPF32[i6 + (i1 << 2) >> 2] & 1);
   i1 = i1 + 1 | 0;
   i2 = i2 + 1 | 0;
  }
  i3 = i10 + i9 | 0;
  i1 = i7;
  i4 = i4 + i8 | 0;
  i8 = i8 + -1 | 0;
  i9 = i9 + -1 | 0;
  i10 = i3;
 }
 return;
}

function __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE6resizeEm(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = i2 + 4 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 i4 = (i1 - i5 | 0) / 12 | 0;
 if (i4 >>> 0 >= i3 >>> 0) {
  if (i4 >>> 0 > i3 >>> 0) {
   i2 = i5 + (i3 * 12 | 0) | 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break;
    i5 = i1 + -12 | 0;
    __ZNSt3__213__vector_baseINS_4pairIfmEENS_9allocatorIS2_EEED2Ev(i5);
    i1 = i5;
   }
   HEAP32[i6 >> 2] = i2;
  }
 } else __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE8__appendEm(i2, i3 - i4 | 0);
 return;
}

function __ZNSt3__214__split_bufferIN6vision17PriorityQueueItemILi96EEERNS_9allocatorIS3_EEEC2EmmS6_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 536870911) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 << 3) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 << 3) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 << 3);
 return;
}

function __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEEC2EmmS5_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 214748364) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 * 20 | 0) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 * 20 | 0) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 * 20 | 0);
 return;
}

function _request_virt_sarray(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i7 = HEAP32[i1 + 4 >> 2] | 0;
 if ((i2 | 0) != 1) {
  i8 = HEAP32[i1 >> 2] | 0;
  HEAP32[i8 + 20 >> 2] = 14;
  HEAP32[i8 + 24 >> 2] = i2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i8 = _alloc_small(i1, i2, 128) | 0;
 HEAP32[i8 >> 2] = 0;
 HEAP32[i8 + 4 >> 2] = i5;
 HEAP32[i8 + 8 >> 2] = i4;
 HEAP32[i8 + 12 >> 2] = i6;
 HEAP32[i8 + 32 >> 2] = i3;
 HEAP32[i8 + 40 >> 2] = 0;
 i7 = i7 + 68 | 0;
 HEAP32[i8 + 44 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i8;
 return i8 | 0;
}

function _request_virt_barray(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i7 = HEAP32[i1 + 4 >> 2] | 0;
 if ((i2 | 0) != 1) {
  i8 = HEAP32[i1 >> 2] | 0;
  HEAP32[i8 + 20 >> 2] = 14;
  HEAP32[i8 + 24 >> 2] = i2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i8 = _alloc_small(i1, i2, 128) | 0;
 HEAP32[i8 >> 2] = 0;
 HEAP32[i8 + 4 >> 2] = i5;
 HEAP32[i8 + 8 >> 2] = i4;
 HEAP32[i8 + 12 >> 2] = i6;
 HEAP32[i8 + 32 >> 2] = i3;
 HEAP32[i8 + 40 >> 2] = 0;
 i7 = i7 + 72 | 0;
 HEAP32[i8 + 44 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i8;
 return i8 | 0;
}

function __ZNSt3__214__split_bufferIN6vision7Point3dIfEERNS_9allocatorIS3_EEEC2EmmS6_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 357913941) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 * 12 | 0) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 * 12 | 0) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 * 12 | 0);
 return;
}

function __ZN6vision8KeyframeILi96EE10buildIndexEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + 36 | 0;
 __ZN6vision28BinaryHierarchicalClusteringILi96EE16setNumHypothesesEi(i3, 128);
 __ZN6vision28BinaryHierarchicalClusteringILi96EE13setNumCentersEi(i3, 8);
 __ZN6vision28BinaryHierarchicalClusteringILi96EE16setMaxNodesToPopEi(i3, 8);
 __ZN6vision28BinaryHierarchicalClusteringILi96EE21setMinFeaturesPerNodeEi(i3, 16);
 i1 = i1 + 8 | 0;
 i2 = __ZN6vision18BinaryFeatureStore8featuresEv(i1) | 0;
 i2 = HEAP32[i2 >> 2] | 0;
 __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPKhi(i3, i2, __ZNK6vision18BinaryFeatureStore4sizeEv(i1) | 0);
 return;
}

function _threadStartWait(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = i2 + 16 | 0;
 _pthread_mutex_lock(i3) | 0;
 i4 = i2 + 4 | 0;
 i1 = i2 + 44 | 0;
 L1 : while (1) {
  switch (HEAP32[i4 >> 2] | 0) {
  case 1:
   {
    i5 = 4;
    break L1;
   }
  case 0:
   break;
  default:
   {
    i5 = 5;
    break L1;
   }
  }
  _pthread_cond_wait(i1 | 0, i3 | 0) | 0;
 }
 if ((i5 | 0) == 4) {
  HEAP32[i4 >> 2] = 0;
  HEAP32[i2 + 12 >> 2] = 1;
  _pthread_mutex_unlock(i3) | 0;
  i1 = 0;
 } else if ((i5 | 0) == 5) {
  HEAP32[i2 + 8 >> 2] = 2;
  _pthread_cond_signal(i2 + 92 | 0) | 0;
  _pthread_mutex_unlock(i3) | 0;
  i1 = -1;
 }
 return i1 | 0;
}

function __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEEC2EmmSB_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 if (!i3) i1 = 0; else i1 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE8allocateEm(i1, i3) | 0;
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 << 4) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 << 4);
 return;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPKhiPKii(i3, i4, i5, i6, i7) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i8 = 0;
 i1 = __Znwm(128) | 0;
 __ZN6vision4NodeILi96EEC2Ei(i1, __ZN6vision28BinaryHierarchicalClusteringILi96EE10nextNodeIdEv(i3) | 0);
 i8 = i3 + 8 | 0;
 i2 = HEAP32[i8 >> 2] | 0;
 HEAP32[i8 >> 2] = i1;
 if (i2) {
  __ZN6vision4NodeILi96EED2Ev(i2);
  __ZdlPv(i2);
  i1 = HEAP32[i8 >> 2] | 0;
 }
 __ZN6vision4NodeILi96EE4leafEb(i1, 0);
 __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPNS_4NodeILi96EEEPKhiPKii(i3, HEAP32[i8 >> 2] | 0, i4, i5, i6, i7);
 return;
}

function __ZNSt3__210shared_ptrIhEC2Ih16NullArrayDeleterIhEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS6_PhEE5valueENS1_5__natEE4typeE(i3, i4, i1, i2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i5 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i1;
 HEAP32[i3 >> 2] = i4;
 i5 = __Znwm(16) | 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 HEAP32[i5 >> 2] = 13604;
 HEAP32[i5 + 12 >> 2] = i4;
 HEAP32[i3 + 4 >> 2] = i5;
 HEAP32[i2 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 __ZNSt3__210shared_ptrIhE18__enable_weak_thisEz(i3, i2);
 STACKTOP = i1;
 return;
}

function __ZNSt3__214__split_bufferIPKN6vision4NodeILi96EEERNS_9allocatorIS5_EEEC2EmmS8_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 1073741823) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 << 2) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 << 2) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 << 2);
 return;
}

function __ZNSt3__214__split_bufferIPN6vision4NodeILi96EEERNS_9allocatorIS4_EEEC2EmmS7_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 1073741823) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 << 2) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 << 2) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 << 2);
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_m(i1, i7, i2, i8, i9) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0;
 i10 = i8;
 i6 = i1 + 8 | 0;
 i4 = 0;
 i5 = 0;
 L1 : while (1) {
  if ((i2 | 0) == (i8 | 0) | i4 >>> 0 >= i9 >>> 0) break;
  i3 = ___uselocale(HEAP32[i6 >> 2] | 0) | 0;
  i1 = _mbrlen(i2, i10 - i2 | 0, i7) | 0;
  if (i3 | 0) ___uselocale(i3) | 0;
  switch (i1 | 0) {
  case -2:
  case -1:
   break L1;
  case 0:
   {
    i1 = 1;
    break;
   }
  default:
   {}
  }
  i4 = i4 + 1 | 0;
  i5 = i1 + i5 | 0;
  i2 = i2 + i1 | 0;
 }
 return i5 | 0;
}

function __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((__ZNKSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE8max_sizeEv(i1) | 0) >>> 0 < i2 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 if (i2 >>> 0 > 536870911) {
  i2 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i2, 41105);
  HEAP32[i2 >> 2] = 17440;
  ___cxa_throw(i2 | 0, 13288, 107);
 } else {
  i3 = __Znwm(i2 << 3) | 0;
  HEAP32[i1 + 4 >> 2] = i3;
  HEAP32[i1 >> 2] = i3;
  HEAP32[i1 + 8 >> 2] = i3 + (i2 << 3);
  return;
 }
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE21__construct_node_hashINS_4pairIjjEEJEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISK_EEEEEEmOT_DpOT0_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0;
 i5 = __Znwm(16) | 0;
 HEAP32[i1 >> 2] = i5;
 HEAP32[i1 + 4 >> 2] = i2 + 8;
 HEAP32[i5 + 8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i5 + 12 >> 2] = HEAP32[i4 + 4 >> 2];
 HEAP8[i1 + 8 >> 0] = 1;
 HEAP32[i5 + 4 >> 2] = i3;
 HEAP32[i5 >> 2] = 0;
 return;
}

function _ar2GenTemplate(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = _malloc(40) | 0;
 if (!i3) {
  _arLog(0, 3, 20581, i4);
  _exit(1);
 }
 HEAP32[i3 + 16 >> 2] = i1;
 HEAP32[i3 + 8 >> 2] = i1;
 HEAP32[i3 + 20 >> 2] = i2;
 HEAP32[i3 + 12 >> 2] = i2;
 i2 = i1 + 1 + i2 | 0;
 HEAP32[i3 >> 2] = i2;
 HEAP32[i3 + 4 >> 2] = i2;
 i2 = _malloc(Math_imul(i2 << 1, i2) | 0) | 0;
 HEAP32[i3 + 24 >> 2] = i2;
 if (!i2) {
  _arLog(0, 3, 20581, i4 + 8 | 0);
  _exit(1);
 } else {
  STACKTOP = i4;
  return i3 | 0;
 }
 return 0;
}

function __ZN6vision6detail23create_formatted_stringERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPi(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 2048 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2048);
 i5 = i4;
 _vsnprintf(i5, 2048, (HEAP8[i2 + 11 >> 0] | 0) < 0 ? HEAP32[i2 >> 2] | 0 : i2, i3) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i1, i5, __ZNSt3__211char_traitsIcE6lengthEPKc(i5) | 0);
 STACKTOP = i4;
 return;
}

function __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEEC2EmmS5_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 536870911) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 << 3) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 << 3) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 << 3);
 return;
}

function __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEEC2EmmS5_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 134217727) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 << 5) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 << 5) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 << 5);
 return;
}

function __ZNSt3__214__split_bufferI12multi_markerRNS_9allocatorIS1_EEEC2EmmS4_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 536870911) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 << 3) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 << 3) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 << 3);
 return;
}

function __ZNSt3__214__split_bufferINS_4pairIfmEERNS_9allocatorIS2_EEEC2EmmS5_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 536870911) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 << 3) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 << 3) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 << 3);
 return;
}

function __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEEC2EmmS5_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 536870911) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 << 3) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 << 3) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 << 3);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i1 + 4 | 0;
 i2 = i1;
 HEAP32[i9 >> 2] = i3;
 HEAP32[i2 >> 2] = i6;
 i7 = __ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i3, i4, i9, i6, i7, i2, 1114111, 0) | 0;
 HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i2 >> 2];
 STACKTOP = i1;
 return i7 | 0;
}

function __ZN6vision16Multiply_3x3_3x1IfEEvPT_PKS1_S4_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i5 = i3 + 4 | 0;
 i4 = i3 + 8 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i2 >> 2] * +HEAPF32[i3 >> 2] + +HEAPF32[i2 + 4 >> 2] * +HEAPF32[i5 >> 2] + +HEAPF32[i2 + 8 >> 2] * +HEAPF32[i4 >> 2];
 HEAPF32[i1 + 4 >> 2] = +HEAPF32[i2 + 12 >> 2] * +HEAPF32[i3 >> 2] + +HEAPF32[i2 + 16 >> 2] * +HEAPF32[i5 >> 2] + +HEAPF32[i2 + 20 >> 2] * +HEAPF32[i4 >> 2];
 HEAPF32[i1 + 8 >> 2] = +HEAPF32[i2 + 24 >> 2] * +HEAPF32[i3 >> 2] + +HEAPF32[i2 + 28 >> 2] * +HEAPF32[i5 >> 2] + +HEAPF32[i2 + 32 >> 2] * +HEAPF32[i4 >> 2];
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i1 + 4 | 0;
 i2 = i1;
 HEAP32[i9 >> 2] = i3;
 HEAP32[i2 >> 2] = i6;
 i7 = __ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE(i3, i4, i9, i6, i7, i2, 1114111, 0) | 0;
 HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i2 >> 2];
 STACKTOP = i1;
 return i7 | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i1 + 4 | 0;
 i2 = i1;
 HEAP32[i9 >> 2] = i3;
 HEAP32[i2 >> 2] = i6;
 i7 = __ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i3, i4, i9, i6, i7, i2, 1114111, 0) | 0;
 HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i2 >> 2];
 STACKTOP = i1;
 return i7 | 0;
}

function _jpeg_read_header(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0;
 i1 = HEAP32[i2 + 20 >> 2] | 0;
 if ((i1 & -2 | 0) != 200) {
  i4 = HEAP32[i2 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 20;
  HEAP32[i4 + 24 >> 2] = i1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i2 >> 2] >> 2] & 255](i2);
 }
 i1 = _jpeg_consume_input(i2) | 0;
 switch (i1 | 0) {
 case 1:
  {
   i1 = 1;
   break;
  }
 case 2:
  {
   if (!i3) i1 = i2; else {
    i1 = HEAP32[i2 >> 2] | 0;
    HEAP32[i1 + 20 >> 2] = 51;
    FUNCTION_TABLE_vi[HEAP32[i1 >> 2] & 255](i2);
    i1 = i2;
   }
   _jpeg_abort(i1);
   i1 = 2;
   break;
  }
 default:
  {}
 }
 return i1 | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i1 + 4 | 0;
 i2 = i1;
 HEAP32[i9 >> 2] = i3;
 HEAP32[i2 >> 2] = i6;
 i7 = __ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE(i3, i4, i9, i6, i7, i2, 1114111, 0) | 0;
 HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i2 >> 2];
 STACKTOP = i1;
 return i7 | 0;
}

function _jpeg_stdio_src(i2, i4) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i1 = 0, i3 = 0, i5 = 0;
 i3 = i2 + 24 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if (!i1) {
  i5 = i2 + 4 | 0;
  i1 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i5 >> 2] >> 2] & 63](i2, 0, 40) | 0;
  HEAP32[i3 >> 2] = i1;
  i2 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i5 >> 2] >> 2] & 63](i2, 0, 4096) | 0;
  HEAP32[i1 + 32 >> 2] = i2;
  i1 = HEAP32[i3 >> 2] | 0;
 }
 HEAP32[i1 + 8 >> 2] = 135;
 HEAP32[i1 + 12 >> 2] = 74;
 HEAP32[i1 + 16 >> 2] = 46;
 HEAP32[i1 + 20 >> 2] = 29;
 HEAP32[i1 + 24 >> 2] = 136;
 HEAP32[i1 + 28 >> 2] = i4;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 >> 2] = 0;
 return;
}

function __ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i1, i4, i6) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 i2 = HEAP8[i1 + 11 >> 0] | 0;
 i3 = i2 << 24 >> 24 < 0;
 if (i3) i5 = HEAP32[i1 + 4 >> 2] | 0; else i5 = i2 & 255;
 if ((i6 | 0) == -1) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv(i1);
 if (i3) i1 = HEAP32[i1 >> 2] | 0;
 i2 = i5 >>> 0 > i6 >>> 0;
 i1 = __ZNSt3__211char_traitsIcE7compareEPKcS3_m(i1, i4, i2 ? i6 : i5) | 0;
 if (!i1) return (i5 >>> 0 < i6 >>> 0 ? -1 : i2 & 1) | 0; else return i1 | 0;
 return 0;
}

function _getc(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 if ((HEAP32[i4 + 76 >> 2] | 0) >= 0 ? (___lockfile(i4) | 0) != 0 : 0) {
  i1 = i4 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i1 >> 2] = i2 + 1;
   i1 = HEAPU8[i2 >> 0] | 0;
  } else i1 = ___uflow(i4) | 0;
  ___unlockfile(i4);
 } else i3 = 3;
 do if ((i3 | 0) == 3) {
  i1 = i4 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i1 >> 2] = i2 + 1;
   i1 = HEAPU8[i2 >> 0] | 0;
   break;
  } else {
   i1 = ___uflow(i4) | 0;
   break;
  }
 } while (0);
 return i1 | 0;
}

function _detectNFTMarker(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i3;
 HEAP32[i2 >> 2] = i1;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(57052, i2) | 0) __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(57052, i2) | 0;
 STACKTOP = i3;
 return -1;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = i2 + 12 | 0;
 i3 = HEAP8[i5 + 11 >> 0] | 0;
 i4 = i3 << 24 >> 24 < 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i2, i4 ? HEAP32[i5 >> 2] | 0 : i5, i4 ? HEAP32[i2 + 16 >> 2] | 0 : i3 & 255) | 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function _realloc(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0;
 if (!i2) {
  i3 = _malloc(i3) | 0;
  return i3 | 0;
 }
 if (i3 >>> 0 > 4294967231) {
  i3 = ___errno_location() | 0;
  HEAP32[i3 >> 2] = 12;
  i3 = 0;
  return i3 | 0;
 }
 i1 = _try_realloc_chunk(i2 + -8 | 0, i3 >>> 0 < 11 ? 16 : i3 + 11 & -8) | 0;
 if (i1 | 0) {
  i3 = i1 + 8 | 0;
  return i3 | 0;
 }
 i1 = _malloc(i3) | 0;
 if (!i1) {
  i3 = 0;
  return i3 | 0;
 }
 i4 = HEAP32[i2 + -4 >> 2] | 0;
 i4 = (i4 & -8) - ((i4 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy(i1 | 0, i2 | 0, (i4 >>> 0 < i3 >>> 0 ? i4 : i3) | 0) | 0;
 _free(i2);
 i3 = i1;
 return i3 | 0;
}

function ___toread(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = i3 + 74 | 0;
 i2 = HEAP8[i1 >> 0] | 0;
 HEAP8[i1 >> 0] = i2 + 255 | i2;
 i1 = i3 + 20 | 0;
 i2 = i3 + 28 | 0;
 if ((HEAP32[i1 >> 2] | 0) >>> 0 > (HEAP32[i2 >> 2] | 0) >>> 0) FUNCTION_TABLE_iiii[HEAP32[i3 + 36 >> 2] & 63](i3, 0, 0) | 0;
 HEAP32[i3 + 16 >> 2] = 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if (!(i1 & 4)) {
  i2 = (HEAP32[i3 + 44 >> 2] | 0) + (HEAP32[i3 + 48 >> 2] | 0) | 0;
  HEAP32[i3 + 8 >> 2] = i2;
  HEAP32[i3 + 4 >> 2] = i2;
  i1 = i1 << 27 >> 31;
 } else {
  HEAP32[i3 >> 2] = i1 | 32;
  i1 = -1;
 }
 return i1 | 0;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_m(i2, i1, i4, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i2 = i2 + 4 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  i3 = HEAP32[i2 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i3 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
  HEAP32[i3 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
  HEAP32[i3 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
  HEAP32[i3 + 16 >> 2] = HEAP32[i1 + 16 >> 2];
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 20;
  i1 = i1 + 20 | 0;
 }
 return;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((__ZNKSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8max_sizeEv(i1) | 0) >>> 0 < i2 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 if (i2 >>> 0 > 214748364) {
  i2 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i2, 41105);
  HEAP32[i2 >> 2] = 17440;
  ___cxa_throw(i2 | 0, 13288, 107);
 } else {
  i3 = __Znwm(i2 * 20 | 0) | 0;
  HEAP32[i1 + 4 >> 2] = i3;
  HEAP32[i1 >> 2] = i3;
  HEAP32[i1 + 8 >> 2] = i3 + (i2 * 20 | 0);
  return;
 }
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EEC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 HEAP32[i1 >> 2] = 1234;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i2 = i1 + 12 | 0;
 __ZN6vision14BinarykMedoidsILi96EEC2ERi(i2, i1);
 i3 = i1 + 72 | 0;
 HEAP32[i1 + 100 >> 2] = 0;
 HEAP32[i1 + 104 >> 2] = 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP32[i3 + 16 >> 2] = 0;
 HEAP32[i3 + 20 >> 2] = 0;
 HEAP32[i1 + 108 >> 2] = 16;
 __ZN6vision14BinarykMedoidsILi96EE4setkEi(i2, 8);
 __ZN6vision14BinarykMedoidsILi96EE16setNumHypothesesEi(i2, 1);
 return;
}

function _arUtilReplaceExt(i6, i5, i7) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i8 = 0;
 i1 = 0;
 i4 = 0;
 L1 : while (1) {
  switch (HEAP8[i6 + i4 >> 0] | 0) {
  case 0:
   break L1;
  case 46:
   {
    i1 = i4;
    break;
   }
  default:
   {}
  }
  i4 = i4 + 1 | 0;
 }
 i2 = i6 + i4 | 0;
 i3 = (_strlen(i7) | 0) + 2 | 0;
 if (!i1) if ((i3 + i4 | 0) > (i5 | 0)) i1 = -1; else {
  HEAP8[i2 >> 0] = 46;
  i1 = i4;
  i8 = 9;
 } else if ((i3 + i1 | 0) > (i5 | 0)) i1 = -1; else i8 = 9;
 if ((i8 | 0) == 9) {
  HEAP8[i6 + (i1 + 1) >> 0] = 0;
  _strcat(i6, i7) | 0;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZN6vision9MaxIndex9IfEEiPKT_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = +HEAPF32[i1 + 4 >> 2] > +HEAPF32[i1 >> 2] & 1;
 i2 = +HEAPF32[i1 + 8 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 2 : i2;
 i2 = +HEAPF32[i1 + 12 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 3 : i2;
 i2 = +HEAPF32[i1 + 16 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 4 : i2;
 i2 = +HEAPF32[i1 + 20 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 5 : i2;
 i2 = +HEAPF32[i1 + 24 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 6 : i2;
 i2 = +HEAPF32[i1 + 28 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 7 : i2;
 return (+HEAPF32[i1 + 32 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 8 : i2) | 0;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((__ZNKSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE8max_sizeEv(i1) | 0) >>> 0 < i2 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 if (i2 >>> 0 > 357913941) {
  i2 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i2, 41105);
  HEAP32[i2 >> 2] = 17440;
  ___cxa_throw(i2 | 0, 13288, 107);
 } else {
  i3 = __Znwm(i2 * 12 | 0) | 0;
  HEAP32[i1 + 4 >> 2] = i3;
  HEAP32[i1 >> 2] = i3;
  HEAP32[i1 + 8 >> 2] = i3 + (i2 * 12 | 0);
  return;
 }
}

function __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 1073741823) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 << 2) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 << 2) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 << 2);
 return;
}

function __ZNSt3__214__split_bufferIfRNS_9allocatorIfEEEC2EmmS3_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if (i3 >>> 0 > 1073741823) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 << 2) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 << 2) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 << 2);
 return;
}

function __ZN6vision23DeterminantSymmetric3x3IfEET_PKS1_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0, i8 = 0;
 i2 = i1 + 32 | 0;
 d6 = +HEAPF32[i2 >> 2];
 i3 = i1 + 4 | 0;
 d6 = d6 * +__ZN6vision3sqrIfEET_S1_(+HEAPF32[i3 >> 2]);
 d5 = +HEAPF32[i1 + 8 >> 2];
 i8 = i1 + 20 | 0;
 d7 = +HEAPF32[i3 >> 2] * 2.0 * d5 * +HEAPF32[i8 >> 2];
 i3 = i1 + 16 | 0;
 d4 = +HEAPF32[i3 >> 2];
 d5 = d4 * +__ZN6vision3sqrIfEET_S1_(d5);
 d4 = +HEAPF32[i1 >> 2];
 d4 = d4 * +__ZN6vision3sqrIfEET_S1_(+HEAPF32[i8 >> 2]);
 return +(d7 - d6 - d5 - d4 + +HEAPF32[i1 >> 2] * +HEAPF32[i3 >> 2] * +HEAPF32[i2 >> 2]);
}

function _gray_rgb_convert(i1, i8, i2, i3, i4) {
 i1 = i1 | 0;
 i8 = i8 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i9 = 0;
 i7 = HEAP32[i1 + 112 >> 2] | 0;
 i1 = i4;
 while (1) {
  i6 = i1 + -1 | 0;
  if ((i1 | 0) <= 0) break;
  i5 = HEAP32[(HEAP32[i8 >> 2] | 0) + (i2 << 2) >> 2] | 0;
  i1 = 0;
  i4 = HEAP32[i3 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i7 | 0)) break;
   i9 = HEAP8[i5 + i1 >> 0] | 0;
   HEAP8[i4 + 2 >> 0] = i9;
   HEAP8[i4 + 1 >> 0] = i9;
   HEAP8[i4 >> 0] = i9;
   i1 = i1 + 1 | 0;
   i4 = i4 + 3 | 0;
  }
  i2 = i2 + 1 | 0;
  i3 = i3 + 4 | 0;
  i1 = i6;
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS6_PvEEEE(i1, HEAP32[i1 + 8 >> 2] | 0);
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = 0;
 if (i2 | 0) __ZdlPv(i2);
 return;
}

function __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) {
  i4 = i2 + 4 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i3 | 0)) break;
   i5 = i1 + -24 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i1 = i5;
  }
  HEAP32[i4 >> 2] = i3;
  i5 = HEAP32[i2 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE10deallocateEPS2_m(i2 + 12 | 0, i5, ((HEAP32[i2 + 8 >> 2] | 0) - i5 | 0) / 24 | 0);
 }
 return;
}

function __ZNSt3__211__stdoutbufIwE6xsputnEPKwl(i3, i2, i4) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i6 = 0;
 L1 : do if (!(HEAP8[i3 + 44 >> 0] | 0)) {
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i4 | 0)) break L1;
   i6 = HEAP32[(HEAP32[i3 >> 2] | 0) + 52 >> 2] | 0;
   i5 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
   i5 = FUNCTION_TABLE_iii[i6 & 63](i3, i5) | 0;
   if ((i5 | 0) == (__ZNSt3__211char_traitsIwE3eofEv() | 0)) break L1;
   i1 = i1 + 1 | 0;
   i2 = i2 + 4 | 0;
  }
 } else i1 = _fwrite(i2, 4, i4, HEAP32[i3 + 32 >> 2] | 0) | 0; while (0);
 return i1 | 0;
}

function __ZNSt3__211__stdoutbufIcE6xsputnEPKcl(i3, i2, i4) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i6 = 0;
 L1 : do if (!(HEAP8[i3 + 44 >> 0] | 0)) {
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i4 | 0)) break L1;
   i6 = HEAP32[(HEAP32[i3 >> 2] | 0) + 52 >> 2] | 0;
   i5 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
   i5 = FUNCTION_TABLE_iii[i6 & 63](i3, i5) | 0;
   if ((i5 | 0) == (__ZNSt3__211char_traitsIcE3eofEv() | 0)) break L1;
   i1 = i1 + 1 | 0;
   i2 = i2 + 1 | 0;
  }
 } else i1 = _fwrite(i2, 1, i4, HEAP32[i3 + 32 >> 2] | 0) | 0; while (0);
 return i1 | 0;
}

function _make_odither_array(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
 i4 = (i2 << 9) + -512 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 16) break;
  i3 = 0;
  while (1) {
   if ((i3 | 0) == 16) break;
   i6 = 255 - ((HEAPU8[3200 + (i2 << 4) + i3 >> 0] | 0) << 1) | 0;
   i1 = i6 * 255 | 0;
   if ((i6 | 0) < 0) i1 = 0 - ((0 - i1 | 0) / (i4 | 0) | 0) | 0; else i1 = (i1 | 0) / (i4 | 0) | 0;
   HEAP32[i5 + (i2 << 6) + (i3 << 2) >> 2] = i1;
   i3 = i3 + 1 | 0;
  }
  i2 = i2 + 1 | 0;
 }
 return i5 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i3 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = i2 + 12 | 0;
 i2 = i3 + 12 | 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function _CENTER(i1, i5) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = HEAP32[i1 + 4 >> 2] | 0;
 i7 = HEAP32[i1 + 8 >> 2] | 0;
 L1 : do if ((HEAP32[i5 + 4 >> 2] | 0) == (i7 | 0)) {
  i4 = 0;
  i1 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i4 | 0) >= (i6 | 0)) {
    i1 = 0;
    break L1;
   }
   i2 = 0;
   i3 = HEAP32[i5 >> 2] | 0;
   while (1) {
    if ((i2 | 0) >= (i7 | 0)) break;
    HEAPF64[i1 >> 3] = +HEAPF64[i1 >> 3] - +HEAPF64[i3 >> 3];
    i2 = i2 + 1 | 0;
    i3 = i3 + 8 | 0;
    i1 = i1 + 8 | 0;
   }
   i4 = i4 + 1 | 0;
  }
 } else i1 = -1; while (0);
 return i1 | 0;
}

function __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((__ZNKSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEE8max_sizeEv(i1) | 0) >>> 0 < i2 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 if (i2 >>> 0 > 536870911) {
  i2 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i2, 41105);
  HEAP32[i2 >> 2] = 17440;
  ___cxa_throw(i2 | 0, 13288, 107);
 } else {
  i3 = __Znwm(i2 << 3) | 0;
  HEAP32[i1 + 4 >> 2] = i3;
  HEAP32[i1 >> 2] = i3;
  HEAP32[i1 + 8 >> 2] = i3 + (i2 << 3);
  return;
 }
}

function __ZNSt3__210shared_ptrIhEC2IhEEPT_NS_9enable_ifIXsr14is_convertibleIS4_PhEE5valueENS1_5__natEE4typeE(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i1;
 HEAP32[i2 >> 2] = i3;
 i5 = __Znwm(16) | 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 HEAP32[i5 >> 2] = 13576;
 HEAP32[i5 + 12 >> 2] = i3;
 HEAP32[i2 + 4 >> 2] = i5;
 HEAP32[i4 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 __ZNSt3__210shared_ptrIhE18__enable_weak_thisEz(i2, i4);
 STACKTOP = i1;
 return;
}

function _kpmUtilResizeImage(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 switch (i4 | 0) {
 case 1:
  {
   i1 = __ZL14genBWImageFullPhiiPiS0_(i1, i2, i3, i5, i6) | 0;
   break;
  }
 case 5:
  {
   i1 = __ZL18genBWImageTwoThirdPhiiPiS0_(i1, i2, i3, i5, i6) | 0;
   break;
  }
 case 2:
  {
   i1 = __ZL14genBWImageHalfPhiiPiS0_(i1, i2, i3, i5, i6) | 0;
   break;
  }
 case 4:
  {
   i1 = __ZL18genBWImageOneThirdPhiiPiS0_(i1, i2, i3, i5, i6) | 0;
   break;
  }
 default:
  i1 = __ZL15genBWImageQuartPhiiPiS0_(i1, i2, i3, i5, i6) | 0;
 }
 return i1 | 0;
}

function __ZNSt3__214__split_bufferItRNS_9allocatorItEEEC2EmmS3_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 do if (i3) if ((i3 | 0) < 0) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 41105);
  HEAP32[i5 >> 2] = 17440;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i1 = __Znwm(i3 << 1) | 0;
  break;
 } else i1 = 0; while (0);
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 << 1) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 << 1);
 return;
}

function _jinit_inverse_dct(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = i3 + 4 | 0;
 i6 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i4 >> 2] >> 2] & 63](i3, 1, 84) | 0;
 HEAP32[i3 + 448 >> 2] = i6;
 HEAP32[i6 >> 2] = 128;
 i5 = i3 + 36 | 0;
 i6 = i6 + 44 | 0;
 i1 = HEAP32[i3 + 216 >> 2] | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) >= (HEAP32[i5 >> 2] | 0)) break;
  i7 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i4 >> 2] >> 2] & 63](i3, 1, 256) | 0;
  HEAP32[i1 + 80 >> 2] = i7;
  _memset(i7 | 0, 0, 256) | 0;
  HEAP32[i6 + (i2 << 2) >> 2] = -1;
  i1 = i1 + 84 | 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6resizeEm(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = i2 + 4 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 i4 = (i1 - i5 | 0) / 20 | 0;
 if (i4 >>> 0 >= i3 >>> 0) {
  if (i4 >>> 0 > i3 >>> 0) {
   i2 = i5 + (i3 * 20 | 0) | 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break;
    i5 = i1 + -20 | 0;
    __ZN6vision12FeaturePointD2Ev(i5);
    i1 = i5;
   }
   HEAP32[i6 >> 2] = i2;
  }
 } else __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8__appendEm(i2, i3 - i4 | 0);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS4_PvEEEE(i1, HEAP32[i1 + 8 >> 2] | 0);
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = 0;
 if (i2 | 0) __ZdlPv(i2);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i3 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i2 = i2 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function _pad_734(i5, i2, i3, i4, i1) {
 i5 = i5 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i6 = i7;
 if ((i3 | 0) > (i4 | 0) & (i1 & 73728 | 0) == 0) {
  i1 = i3 - i4 | 0;
  _memset(i6 | 0, i2 << 24 >> 24 | 0, (i1 >>> 0 < 256 ? i1 : 256) | 0) | 0;
  if (i1 >>> 0 > 255) {
   i2 = i3 - i4 | 0;
   do {
    _out_728(i5, i6, 256);
    i1 = i1 + -256 | 0;
   } while (i1 >>> 0 > 255);
   i1 = i2 & 255;
  }
  _out_728(i5, i6, i1);
 }
 STACKTOP = i7;
 return;
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(i1, i3, i4, i5) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i2 = 0;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  if ((i2 | 0) != (i4 | 0)) {
   i5 = i3 + 36 | 0;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
   HEAP32[i3 + 24 >> 2] = 2;
   HEAP8[i3 + 54 >> 0] = 1;
   break;
  }
  i1 = i3 + 24 | 0;
  if ((HEAP32[i1 >> 2] | 0) == 2) HEAP32[i1 >> 2] = i5;
 } else {
  HEAP32[i1 >> 2] = i4;
  HEAP32[i3 + 24 >> 2] = i5;
  HEAP32[i3 + 36 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEEC2EmmS9_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 if (!i3) i1 = 0; else i1 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE8allocateEm(i1, i3) | 0;
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 << 4) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 << 4);
 return;
}

function __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 while (1) {
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (i1 | 0)) break;
  i3 = i3 + -24 | 0;
  HEAP32[i2 >> 2] = i3;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3);
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE10deallocateEPS2_m(HEAP32[i4 + 16 >> 2] | 0, i1, ((HEAP32[i4 + 12 >> 2] | 0) - i1 | 0) / 24 | 0);
 return;
}

function __ZNSt3__2L11init_wam_pmEv() {
 var i1 = 0, i2 = 0;
 if ((HEAP8[56496] | 0) == 0 ? ___cxa_guard_acquire(56496) | 0 : 0) {
  i2 = 55344;
  do {
   HEAP32[i2 >> 2] = 0;
   HEAP32[i2 + 4 >> 2] = 0;
   HEAP32[i2 + 8 >> 2] = 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i2 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i2 = i2 + 12 | 0;
  } while ((i2 | 0) != 55632);
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55344, 15352) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55356, 15364) | 0;
 return;
}

function __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 __ZNKSt3__28ios_base6getlocEv(i5, i2);
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58832) | 0;
 i6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
 HEAP32[i3 >> 2] = i6;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i1, i2);
 __ZNSt3__26localeD2Ev(i5);
 STACKTOP = i4;
 return;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEEC2EmmS6_(i3, i4, i5, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i6 = 0;
 i6 = i3 + 12 | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i3 + 16 >> 2] = i1;
 do if (i4) {
  i2 = i1 + 112 | 0;
  if (i4 >>> 0 < 29 & (HEAP8[i2 >> 0] | 0) == 0) {
   HEAP8[i2 >> 0] = 1;
   break;
  } else {
   i1 = __Znwm(i4 << 2) | 0;
   break;
  }
 } else i1 = 0; while (0);
 HEAP32[i3 >> 2] = i1;
 i5 = i1 + (i5 << 2) | 0;
 HEAP32[i3 + 8 >> 2] = i5;
 HEAP32[i3 + 4 >> 2] = i5;
 HEAP32[i6 >> 2] = i1 + (i4 << 2);
 return;
}

function __ZNSt3__2L10init_am_pmEv() {
 var i1 = 0, i2 = 0;
 if ((HEAP8[56416] | 0) == 0 ? ___cxa_guard_acquire(56416) | 0 : 0) {
  i2 = 54592;
  do {
   HEAP32[i2 >> 2] = 0;
   HEAP32[i2 + 4 >> 2] = 0;
   HEAP32[i2 + 8 >> 2] = 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i2 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i2 = i2 + 12 | 0;
  } while ((i2 | 0) != 54880);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54592, 48129) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54604, 48132) | 0;
 return;
}

function __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 __ZNKSt3__28ios_base6getlocEv(i5, i2);
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58808) | 0;
 i6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
 HEAP8[i3 >> 0] = i6;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i1, i2);
 __ZNSt3__26localeD2Ev(i5);
 STACKTOP = i4;
 return;
}

function _h2v1_upsample(i3, i1, i8, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i8 = i8 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0;
 i6 = HEAP32[i2 >> 2] | 0;
 i7 = i3 + 312 | 0;
 i5 = i3 + 112 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (HEAP32[i7 >> 2] | 0)) break;
  i3 = HEAP32[i6 + (i1 << 2) >> 2] | 0;
  i4 = i3 + (HEAP32[i5 >> 2] | 0) | 0;
  i2 = HEAP32[i8 + (i1 << 2) >> 2] | 0;
  while (1) {
   if (i3 >>> 0 >= i4 >>> 0) break;
   i9 = HEAP8[i2 >> 0] | 0;
   HEAP8[i3 >> 0] = i9;
   HEAP8[i3 + 1 >> 0] = i9;
   i2 = i2 + 1 | 0;
   i3 = i3 + 2 | 0;
  }
  i1 = i1 + 1 | 0;
 }
 return;
}

function _trackingInitStart(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5 + 8 | 0;
 i1 = i5;
 do if ((i2 | 0) != 0 & (i3 | 0) != 0) {
  i1 = _threadGetArg(i2) | 0;
  if (!i1) {
   _arLog(0, 3, 38730, i4);
   i1 = -1;
   break;
  } else {
   _memcpy(HEAP32[i1 + 4 >> 2] | 0, i3 | 0, HEAP32[i1 + 8 >> 2] | 0) | 0;
   _threadStartSignal(i2) | 0;
   i1 = 0;
   break;
  }
 } else {
  _arLog(0, 3, 38670, i1);
  i1 = -1;
 } while (0);
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 __ZNK6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE13queryKeyframeEv(i3, HEAP32[HEAP32[i1 >> 2] >> 2] | 0);
 i1 = __ZN6vision18BinaryFeatureStore6pointsEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[i3 >> 2] | 0) | 0) | 0;
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev(i3);
 STACKTOP = i2;
 return i1 | 0;
}

function _jinit_marker_reader(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i5 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 + 4 >> 2] >> 2] & 63](i2, 0, 172) | 0;
 HEAP32[i2 + 440 >> 2] = i5;
 HEAP32[i5 >> 2] = 116;
 HEAP32[i5 + 4 >> 2] = 67;
 HEAP32[i5 + 8 >> 2] = 68;
 HEAP32[i5 + 28 >> 2] = 69;
 HEAP32[i5 + 96 >> 2] = 0;
 i3 = i5 + 32 | 0;
 i4 = i5 + 100 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 16) break;
  HEAP32[i3 + (i1 << 2) >> 2] = 69;
  HEAP32[i4 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i3 >> 2] = 70;
 HEAP32[i5 + 88 >> 2] = 70;
 _reset_marker_reader(i2);
 return;
}

function __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i1, i2, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i3 = 0;
 if (i5 & 2048) {
  HEAP8[i1 >> 0] = 43;
  i1 = i1 + 1 | 0;
 }
 if (i5 & 512) {
  HEAP8[i1 >> 0] = 35;
  i1 = i1 + 1 | 0;
 }
 i3 = i1;
 while (1) {
  i1 = HEAP8[i2 >> 0] | 0;
  if (!(i1 << 24 >> 24)) break;
  HEAP8[i3 >> 0] = i1;
  i2 = i2 + 1 | 0;
  i3 = i3 + 1 | 0;
 }
 switch (i5 & 74) {
 case 64:
  {
   i1 = 111;
   break;
  }
 case 8:
  {
   i1 = i5 >>> 9 & 32 ^ 120;
   break;
  }
 default:
  i1 = i4 ? 100 : 117;
 }
 HEAP8[i3 >> 0] = i1;
 return;
}

function __ZN6vision18VisualDatabaseImplC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 1065353216;
 i3 = __Znwm(840) | 0;
 __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEEC2Ev(i3);
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i3;
 if (i2 | 0) {
  __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEED2Ev(i2);
  __ZdlPv(i2);
 }
 return;
}

function _saveSetjmp(i1, i3, i5, i4) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0;
 setjmpId = setjmpId + 1 | 0;
 HEAP32[i1 >> 2] = setjmpId;
 while ((i2 | 0) < (i4 | 0)) {
  if (!(HEAP32[i5 + (i2 << 3) >> 2] | 0)) {
   HEAP32[i5 + (i2 << 3) >> 2] = setjmpId;
   HEAP32[i5 + ((i2 << 3) + 4) >> 2] = i3;
   HEAP32[i5 + ((i2 << 3) + 8) >> 2] = 0;
   setTempRet0(i4 | 0);
   return i5 | 0;
  }
  i2 = i2 + 1 | 0;
 }
 i4 = i4 * 2 | 0;
 i5 = _realloc(i5 | 0, 8 * (i4 + 1 | 0) | 0) | 0;
 i5 = _saveSetjmp(i1 | 0, i3 | 0, i5 | 0, i4 | 0) | 0;
 setTempRet0(i4 | 0);
 return i5 | 0;
}

function _arParamObserv2IdealLTf(i5, d2, d3, i7, i8) {
 i5 = i5 | 0;
 d2 = +d2;
 d3 = +d3;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i1 = 0, i4 = 0, i6 = 0;
 i4 = (HEAP32[i5 + 16 >> 2] | 0) + ~~(d2 + .5) | 0;
 i1 = (HEAP32[i5 + 20 >> 2] | 0) + ~~(d3 + .5) | 0;
 if (((i4 | 0) >= 0 ? (i6 = HEAP32[i5 + 8 >> 2] | 0, !((i1 | 0) < 0 | (i4 | 0) >= (i6 | 0))) : 0) ? (i1 | 0) < (HEAP32[i5 + 12 >> 2] | 0) : 0) {
  i1 = (HEAP32[i5 + 4 >> 2] | 0) + ((Math_imul(i6, i1) | 0) + i4 << 1 << 2) | 0;
  HEAP32[i7 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i1 + 4 >> 2];
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function __ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_(i1, i3, i5, i2, i6) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 var i4 = 0, i7 = 0;
 i1 = i3;
 while (1) {
  if ((i2 | 0) == (i6 | 0)) {
   i7 = 7;
   break;
  }
  if ((i1 | 0) == (i5 | 0)) {
   i1 = -1;
   break;
  }
  i3 = HEAP8[i1 >> 0] | 0;
  i4 = HEAP8[i2 >> 0] | 0;
  if (i3 << 24 >> 24 < i4 << 24 >> 24) {
   i1 = -1;
   break;
  }
  if (i4 << 24 >> 24 < i3 << 24 >> 24) {
   i1 = 1;
   break;
  }
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 if ((i7 | 0) == 7) i1 = (i1 | 0) != (i5 | 0) & 1;
 return i1 | 0;
}

function _trackingInitInit(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (i1) {
  i2 = _malloc(68) | 0;
  if (!i2) i1 = 0; else {
   HEAP32[i2 >> 2] = i1;
   i4 = _kpmHandleGetXSize(i1) | 0;
   i1 = Math_imul(_kpmHandleGetYSize(i1) | 0, i4) | 0;
   HEAP32[i2 + 8 >> 2] = i1;
   i1 = _malloc(i1) | 0;
   HEAP32[i2 + 4 >> 2] = i1;
   HEAP32[i2 + 64 >> 2] = 0;
   i1 = _threadInit(0, i2, 75) | 0;
  }
 } else {
  _arLog(0, 3, 38461, i3);
  i1 = 0;
 }
 STACKTOP = i3;
 return i1 | 0;
}

function __ZN6vision16RobustHomographyIfE4findEPfPKfS4_iS4_i(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0;
 i8 = i1 + 12 | 0;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm(i8, i5);
 return __ZN6vision26PreemptiveRobustHomographyIfEEbPT_PKS1_S4_iS4_iRNSt3__26vectorIS1_NS5_9allocatorIS1_EEEERNS6_IiNS7_IiEEEERNS6_INS5_4pairIS1_iEENS7_ISF_EEEES1_iii(i2, i3, i4, i5, i6, i7, i1, i8, i1 + 24 | 0, +HEAPF32[i1 + 36 >> 2], HEAP32[i1 + 40 >> 2] | 0, HEAP32[i1 + 44 >> 2] | 0, HEAP32[i1 + 48 >> 2] | 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0;
 HEAP32[i4 >> 2] = 0;
 if ((i1 | 0) != (i2 | 0)) {
  i3 = HEAP8[i1 >> 0] | 0;
  if (i3 << 24 >> 24 == 114) {
   HEAP32[i4 >> 2] = 4;
   i3 = i1 + 1 | 0;
   i1 = i3;
   i2 = 4;
   i3 = HEAP8[i3 >> 0] | 0;
  } else i2 = 0;
  if (i3 << 24 >> 24 == 86) {
   i2 = i2 | 2;
   HEAP32[i4 >> 2] = i2;
   i3 = i1 + 1 | 0;
   i1 = i3;
   i3 = HEAP8[i3 >> 0] | 0;
  }
  if (i3 << 24 >> 24 == 75) {
   HEAP32[i4 >> 2] = i2 | 1;
   i1 = i1 + 1 | 0;
  }
 }
 return i1 | 0;
}

function _arParamIdeal2ObservLTf(i5, d2, d3, i7, i8) {
 i5 = i5 | 0;
 d2 = +d2;
 d3 = +d3;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i1 = 0, i4 = 0, i6 = 0;
 i4 = (HEAP32[i5 + 16 >> 2] | 0) + ~~(d2 + .5) | 0;
 i1 = (HEAP32[i5 + 20 >> 2] | 0) + ~~(d3 + .5) | 0;
 if (((i4 | 0) >= 0 ? (i6 = HEAP32[i5 + 8 >> 2] | 0, !((i1 | 0) < 0 | (i4 | 0) >= (i6 | 0))) : 0) ? (i1 | 0) < (HEAP32[i5 + 12 >> 2] | 0) : 0) {
  i1 = (HEAP32[i5 >> 2] | 0) + ((Math_imul(i6, i1) | 0) + i4 << 1 << 2) | 0;
  HEAP32[i7 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i1 + 4 >> 2];
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var d4 = 0.0, i5 = 0, d6 = 0.0, d7 = 0.0;
 d7 = +HEAPF32[i3 >> 2];
 i5 = i3 + 4 | 0;
 d6 = +HEAPF32[i5 >> 2];
 d4 = +HEAPF32[i2 + 32 >> 2] + (+HEAPF32[i2 + 24 >> 2] * d7 + +HEAPF32[i2 + 28 >> 2] * d6);
 HEAPF32[i1 >> 2] = (+HEAPF32[i2 + 8 >> 2] + (d7 * +HEAPF32[i2 >> 2] + d6 * +HEAPF32[i2 + 4 >> 2])) / d4;
 HEAPF32[i1 + 4 >> 2] = (+HEAPF32[i2 + 20 >> 2] + (+HEAPF32[i2 + 12 >> 2] * +HEAPF32[i3 >> 2] + +HEAPF32[i2 + 16 >> 2] * +HEAPF32[i5 >> 2])) / d4;
 return;
}

function __ZN6vision25DoGScaleInvariantDetectorD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev(i1 + 144 | 0);
 __ZN6vision21OrientationAssignmentD2Ev(i1 + 92 | 0);
 __ZNSt3__213__vector_baseIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEED2Ev(i1 + 72 | 0);
 __ZNSt3__213__vector_baseIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEED2Ev(i1 + 60 | 0);
 __ZN6vision10DoGPyramidD2Ev(i1 + 32 | 0);
 __ZNSt3__213__vector_baseINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEENS4_IS8_EEED2Ev(i1 + 16 | 0);
 return;
}

function __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiiEE8getCountEv(i4) | 0;
 i4 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiiEE8getTypesEv(i4) | 0;
 __embind_register_function(i1 | 0, i5 | 0, i4 | 0, __ZN10emscripten8internal19getGenericSignatureIJiiiiiEEEPKcv() | 0, 9, i2 | 0);
 STACKTOP = i3;
 return;
}

function __ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii(i1, d2, d3, i4, i5) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i6 + 4 | 0;
 i7 = i6;
 i5 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i1, i4, i5) | 0;
 __ZN6vision25bilinear_downsample_pointERfS0_ffi(i8, i7, d2, d3, i4);
 d3 = +__ZN6vision14SampleReceptorERKNS_5ImageEff(i5, +HEAPF32[i8 >> 2], +HEAPF32[i7 >> 2]);
 STACKTOP = i6;
 return +d3;
}

function __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiEE8getCountEv(i4) | 0;
 i4 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiEE8getTypesEv(i4) | 0;
 __embind_register_function(i1 | 0, i5 | 0, i4 | 0, __ZN10emscripten8internal19getGenericSignatureIJiiiiEEEPKcv() | 0, 35, i2 | 0);
 STACKTOP = i3;
 return;
}

function __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviiEE8getCountEv(i4) | 0;
 i4 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviiEE8getTypesEv(i4) | 0;
 __embind_register_function(i1 | 0, i5 | 0, i4 | 0, __ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv() | 0, 2, i2 | 0);
 STACKTOP = i3;
 return;
}

function __ZN10emscripten8functionIvJifEJEEEvPKcPFT_DpT0_EDpT1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvifEE8getCountEv(i4) | 0;
 i4 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvifEE8getTypesEv(i4) | 0;
 __embind_register_function(i1 | 0, i5 | 0, i4 | 0, __ZN10emscripten8internal19getGenericSignatureIJviifEEEPKcv() | 0, 2, i2 | 0);
 STACKTOP = i3;
 return;
}

function __ZN10emscripten8functionIvJidEJEEEvPKcPFT_DpT0_EDpT1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvidEE8getCountEv(i4) | 0;
 i4 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvidEE8getTypesEv(i4) | 0;
 __embind_register_function(i1 | 0, i5 | 0, i4 | 0, __ZN10emscripten8internal19getGenericSignatureIJviidEEEPKcv() | 0, 1, i2 | 0);
 STACKTOP = i3;
 return;
}

function _arPattLoad(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i6 + 8 | 0;
 i4 = i6;
 i3 = _cat(i2, 0) | 0;
 if (!i3) {
  HEAP32[i4 >> 2] = i2;
  _arLog(0, 3, 18137, i4);
  i1 = ___errno_location() | 0;
  i1 = _strerror(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i5 >> 2] = 59242;
  HEAP32[i5 + 4 >> 2] = i1;
  _arLog(0, 3, 19715, i5);
  i1 = -1;
 } else {
  i1 = _arPattLoadFromBuffer(i1, i3) | 0;
  _free(i3);
 }
 STACKTOP = i6;
 return i1 | 0;
}

function __ZN10emscripten8functionIvJiEJEEEvPKcPFT_DpT0_EDpT1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviEE8getCountEv(i4) | 0;
 i4 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviEE8getTypesEv(i4) | 0;
 __embind_register_function(i1 | 0, i5 | 0, i4 | 0, __ZN10emscripten8internal19getGenericSignatureIJviiEEEPKcv() | 0, 55, i2 | 0);
 STACKTOP = i3;
 return;
}

function __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiEE8getCountEv(i4) | 0;
 i4 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiEE8getTypesEv(i4) | 0;
 __embind_register_function(i1 | 0, i5 | 0, i4 | 0, __ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv() | 0, 40, i2 | 0);
 STACKTOP = i3;
 return;
}

function __ZN10emscripten8functionIdJiEJEEEvPKcPFT_DpT0_EDpT1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJdiEE8getCountEv(i4) | 0;
 i4 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJdiEE8getTypesEv(i4) | 0;
 __embind_register_function(i1 | 0, i5 | 0, i4 | 0, __ZN10emscripten8internal19getGenericSignatureIJdiiEEEPKcv() | 0, 1, i2 | 0);
 STACKTOP = i3;
 return;
}

function __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 HEAPF32[i1 >> 2] = +HEAPF32[i2 >> 2] * d3;
 HEAPF32[i1 + 4 >> 2] = +HEAPF32[i2 + 4 >> 2] * d3;
 HEAPF32[i1 + 8 >> 2] = +HEAPF32[i2 + 8 >> 2] * d3;
 HEAPF32[i1 + 12 >> 2] = +HEAPF32[i2 + 12 >> 2] * d3;
 HEAPF32[i1 + 16 >> 2] = +HEAPF32[i2 + 16 >> 2] * d3;
 HEAPF32[i1 + 20 >> 2] = +HEAPF32[i2 + 20 >> 2] * d3;
 HEAPF32[i1 + 24 >> 2] = +HEAPF32[i2 + 24 >> 2] * d3;
 HEAPF32[i1 + 28 >> 2] = +HEAPF32[i2 + 28 >> 2] * d3;
 HEAPF32[i1 + 32 >> 2] = +HEAPF32[i2 + 32 >> 2] * d3;
 return;
}

function __ZN10emscripten8internal7InvokerIiJiiEE6invokeEPFiiiEii(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i2 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi(i2) | 0;
 i3 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi(i3) | 0;
 i3 = FUNCTION_TABLE_iii[i1 & 63](i2, i3) | 0;
 HEAP32[i5 >> 2] = i3;
 i3 = __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi(i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS2_PvEEEE(i1, HEAP32[i1 + 8 >> 2] | 0);
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = 0;
 if (i2 | 0) __ZdlPv(i2);
 return;
}

function __ZN6vision40Homography4PointsInhomogeneousConstraintIfEEvPT_PKS1_S4_S4_S4_S4_S4_S4_S4_(i1, i2, i3, i4, i5, i6, i7, i8, i9) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 __ZN6vision27AddHomographyPointContraintIfEEvPT_PKS1_S4_(i1, i2, i6);
 __ZN6vision27AddHomographyPointContraintIfEEvPT_PKS1_S4_(i1 + 72 | 0, i3, i7);
 __ZN6vision27AddHomographyPointContraintIfEEvPT_PKS1_S4_(i1 + 144 | 0, i4, i8);
 __ZN6vision27AddHomographyPointContraintIfEEvPT_PKS1_S4_(i1 + 216 | 0, i5, i9);
 return;
}

function __ZN10emscripten8functionIiJEJEEEvPKcPFT_DpT0_EDpT1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiEE8getCountEv(i4) | 0;
 i4 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiEE8getTypesEv(i4) | 0;
 __embind_register_function(i1 | 0, i5 | 0, i4 | 0, __ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv() | 0, 92, i2 | 0);
 STACKTOP = i3;
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((__ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv(i1) | 0) >>> 0 < i2 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 if (i2 >>> 0 > 1073741823) {
  i2 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i2, 41105);
  HEAP32[i2 >> 2] = 17440;
  ___cxa_throw(i2 | 0, 13288, 107);
 } else {
  i3 = __Znwm(i2 << 2) | 0;
  HEAP32[i1 + 4 >> 2] = i3;
  HEAP32[i1 >> 2] = i3;
  HEAP32[i1 + 8 >> 2] = i3 + (i2 << 2);
  return;
 }
}

function __ZNSt3__26vectorIfNS_9allocatorIfEEE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((__ZNKSt3__26vectorIfNS_9allocatorIfEEE8max_sizeEv(i1) | 0) >>> 0 < i2 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 if (i2 >>> 0 > 1073741823) {
  i2 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i2, 41105);
  HEAP32[i2 >> 2] = 17440;
  ___cxa_throw(i2 | 0, 13288, 107);
 } else {
  i3 = __Znwm(i2 << 2) | 0;
  HEAP32[i1 + 4 >> 2] = i3;
  HEAP32[i1 >> 2] = i3;
  HEAP32[i1 + 8 >> 2] = i3 + (i2 << 2);
  return;
 }
}

function __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE6resizeEm(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = i2 + 4 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 i4 = i1 - i5 >> 5;
 if (i4 >>> 0 >= i3 >>> 0) {
  if (i4 >>> 0 > i3 >>> 0) {
   i2 = i5 + (i3 << 5) | 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break;
    i5 = i1 + -32 | 0;
    __ZN6vision5ImageD2Ev(i5);
    i1 = i5;
   }
   HEAP32[i6 >> 2] = i2;
  }
 } else __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE8__appendEm(i2, i3 - i4 | 0);
 return;
}

function _icpCreateHandle(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = _malloc(136) | 0;
 if (!i1) i1 = 0; else {
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 4) break;
    HEAPF64[i1 + (i2 << 5) + (i3 << 3) >> 3] = +HEAPF64[i4 + (i2 << 5) + (i3 << 3) >> 3];
    i3 = i3 + 1 | 0;
   }
   i2 = i2 + 1 | 0;
  }
  HEAP32[i1 + 96 >> 2] = 10;
  HEAPF64[i1 + 104 >> 3] = .10000000149011612;
  HEAPF64[i1 + 112 >> 3] = .9900000095367432;
  HEAPF64[i1 + 120 >> 3] = 4.0;
  HEAPF64[i1 + 128 >> 3] = .5;
 }
 return i1 | 0;
}

function __ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_(i1, i3, i5, i2, i6) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 var i4 = 0, i7 = 0;
 i1 = i3;
 while (1) {
  if ((i2 | 0) == (i6 | 0)) {
   i7 = 7;
   break;
  }
  if ((i1 | 0) == (i5 | 0)) {
   i1 = -1;
   break;
  }
  i3 = HEAP32[i1 >> 2] | 0;
  i4 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) < (i4 | 0)) {
   i1 = -1;
   break;
  }
  if ((i4 | 0) < (i3 | 0)) {
   i1 = 1;
   break;
  }
  i2 = i2 + 4 | 0;
  i1 = i1 + 4 | 0;
 }
 if ((i7 | 0) == 7) i1 = (i1 | 0) != (i5 | 0) & 1;
 return i1 | 0;
}

function __ZN6vision21HoughSimilarityVotingC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP8[i1 + 16 >> 0] = 1;
 i2 = i1 + 108 | 0;
 i3 = i1 + 20 | 0;
 i4 = i3 + 88 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 HEAP32[i2 >> 2] = 1065353216;
 i4 = i1 + 112 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = 0;
 HEAP32[i4 + 20 >> 2] = 0;
 return;
}

function __ZN6vision20VisualDatabaseFacade5queryEPhmm(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i5;
 __ZN6vision5ImageC2EPhNS_9ImageTypeEmmim(i6, i2, 1, i3, i4, i3, 1);
 i4 = __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryERKNS_5ImageE(HEAP32[HEAP32[i1 >> 2] >> 2] | 0, i6) | 0;
 __ZN6vision5ImageD2Ev(i6);
 STACKTOP = i5;
 return i4 | 0;
}

function _strlen(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = i1;
 L1 : do if (!(i4 & 3)) i3 = 5; else {
  i2 = i4;
  while (1) {
   if (!(HEAP8[i1 >> 0] | 0)) {
    i1 = i2;
    break L1;
   }
   i1 = i1 + 1 | 0;
   i2 = i1;
   if (!(i2 & 3)) {
    i3 = 5;
    break;
   }
  }
 } while (0);
 if ((i3 | 0) == 5) {
  while (1) {
   i2 = HEAP32[i1 >> 2] | 0;
   if (!((i2 & -2139062144 ^ -2139062144) & i2 + -16843009)) i1 = i1 + 4 | 0; else break;
  }
  if ((i2 & 255) << 24 >> 24) do i1 = i1 + 1 | 0; while ((HEAP8[i1 >> 0] | 0) != 0);
 }
 return i1 - i4 | 0;
}

function __ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 59104) | 0;
 i3 = i1 + 36 | 0;
 HEAP32[i3 >> 2] = i4;
 i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 127](i4) | 0;
 i2 = i1 + 44 | 0;
 HEAP32[i2 >> 2] = i4;
 i3 = HEAP32[i3 >> 2] | 0;
 i3 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 127](i3) | 0) & 1;
 HEAP8[i1 + 53 >> 0] = i3;
 if ((HEAP32[i2 >> 2] | 0) > 8) __ZNSt3__221__throw_runtime_errorEPKc(47501); else return;
}

function __ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 59096) | 0;
 i3 = i1 + 36 | 0;
 HEAP32[i3 >> 2] = i4;
 i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 127](i4) | 0;
 i2 = i1 + 44 | 0;
 HEAP32[i2 >> 2] = i4;
 i3 = HEAP32[i3 >> 2] | 0;
 i3 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 127](i3) | 0) & 1;
 HEAP8[i1 + 53 >> 0] = i3;
 if ((HEAP32[i2 >> 2] | 0) > 8) __ZNSt3__221__throw_runtime_errorEPKc(47501); else return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, i6) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i2, i3, i4, i5); else {
  i1 = HEAP32[i1 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 7](i1, i2, i3, i4, i5, i6);
 }
 return;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8allocateEm(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 if ((__ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8max_sizeEv(i2) | 0) >>> 0 < i3 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i2);
 i1 = i2 + 128 | 0;
 if (i3 >>> 0 < 29 & (HEAP8[i1 >> 0] | 0) == 0) {
  HEAP8[i1 >> 0] = 1;
  i1 = i2 + 16 | 0;
 } else i1 = __Znwm(i3 << 2) | 0;
 HEAP32[i2 + 4 >> 2] = i1;
 HEAP32[i2 >> 2] = i1;
 HEAP32[i2 + 8 >> 2] = i1 + (i3 << 2);
 return;
}

function __ZN6vision19QuadrilateralConvexIfEEbPKT_S3_S3_S3_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i1, i2, i3) > 0.0;
 i6 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i2, i3, i4) > 0.0;
 i3 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i3, i4, i1) > 0.0;
 i4 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i4, i1, i2) > 0.0;
 i4 = (i6 ? 1 : -1) + (i5 ? 1 : -1) + (i3 ? 1 : -1) + (i4 ? 1 : -1) | 0;
 return (((i4 | 0) > -1 ? i4 : 0 - i4 | 0) | 0) == 4 | 0;
}

function ___strerror_l(i2, i4) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i1 = 0, i3 = 0;
 i1 = 0;
 while (1) {
  if ((HEAPU8[4496 + i1 >> 0] | 0) == (i2 | 0)) {
   i3 = 4;
   break;
  }
  i1 = i1 + 1 | 0;
  if ((i1 | 0) == 87) {
   i2 = 87;
   i3 = 5;
   break;
  }
 }
 if ((i3 | 0) == 4) if (!i1) i1 = 4592; else {
  i2 = i1;
  i3 = 5;
 }
 if ((i3 | 0) == 5) {
  i1 = 4592;
  do {
   do {
    i3 = i1;
    i1 = i1 + 1 | 0;
   } while ((HEAP8[i3 >> 0] | 0) != 0);
   i2 = i2 + -1 | 0;
  } while ((i2 | 0) != 0);
 }
 return ___lctrans(i1, HEAP32[i4 + 20 >> 2] | 0) | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 if ((HEAP8[i2 + 11 >> 0] | 0) < 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0); else {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i2, i4) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i1 = 0, i3 = 0;
 L1 : do if ((i2 | 0) != (i4 | 0) ? (i1 = (HEAP8[i2 >> 0] | 0) == 110 ? i2 + 1 | 0 : i2, (i1 | 0) != (i4 | 0)) : 0) {
  i3 = HEAP8[i1 >> 0] | 0;
  if (i3 << 24 >> 24 == 48) {
   i1 = i1 + 1 | 0;
   break;
  }
  if ((i3 + -49 & 255) < 9) do {
   i1 = i1 + 1 | 0;
   if ((i1 | 0) == (i4 | 0)) {
    i1 = i4;
    break L1;
   }
  } while (((HEAP8[i1 >> 0] | 0) + -48 | 0) >>> 0 < 10); else i1 = i2;
 } else i1 = i2; while (0);
 return i1 | 0;
}

function __ZN6vision9MaxIndex8IfEEiPKT_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = +HEAPF32[i1 + 4 >> 2] > +HEAPF32[i1 >> 2] & 1;
 i2 = +HEAPF32[i1 + 8 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 2 : i2;
 i2 = +HEAPF32[i1 + 12 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 3 : i2;
 i2 = +HEAPF32[i1 + 16 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 4 : i2;
 i2 = +HEAPF32[i1 + 20 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 5 : i2;
 i2 = +HEAPF32[i1 + 24 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 6 : i2;
 return (+HEAPF32[i1 + 28 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 7 : i2) | 0;
}

function ___shlim(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i5 = i1 + 112 | 0;
 HEAP32[i5 >> 2] = i2;
 HEAP32[i5 + 4 >> 2] = i4;
 i5 = HEAP32[i1 + 8 >> 2] | 0;
 i3 = HEAP32[i1 + 4 >> 2] | 0;
 i6 = i5 - i3 | 0;
 i7 = ((i6 | 0) < 0) << 31 >> 31;
 i8 = i1 + 120 | 0;
 HEAP32[i8 >> 2] = i6;
 HEAP32[i8 + 4 >> 2] = i7;
 if (((i2 | 0) != 0 | (i4 | 0) != 0) & ((i7 | 0) > (i4 | 0) | (i7 | 0) == (i4 | 0) & i6 >>> 0 > i2 >>> 0)) HEAP32[i1 + 104 >> 2] = i3 + i2; else HEAP32[i1 + 104 >> 2] = i5;
 return;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 HEAP32[i1 >> 2] = 0;
 i4 = i1 + 4 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = HEAP32[i3 >> 2];
 __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8allocateEm(i1);
 __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(HEAP32[i4 >> 2] | 0, i2);
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 24;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i4 = HEAP8[i2 + 11 >> 0] | 0;
 i5 = i4 << 24 >> 24 < 0;
 i4 = i5 ? HEAP32[i2 + 4 >> 2] | 0 : i4 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i5 ? HEAP32[i2 >> 2] | 0 : i2, i4 >>> 0 < i3 >>> 0 ? i4 : i3);
 return;
}

function __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEEC2EmmS6_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 if (!i3) i1 = 0; else i1 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE8allocateEm(i1, i3) | 0;
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + (i4 * 24 | 0) | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + (i3 * 24 | 0);
 return;
}

function _arVecHousehold(i2) {
 i2 = i2 | 0;
 var d1 = 0.0, i3 = 0, d4 = 0.0, i5 = 0, i6 = 0;
 d1 = +Math_sqrt(+(+_arVecInnerproduct(i2, i2)));
 L1 : do if (d1 != 0.0) {
  i5 = HEAP32[i2 >> 2] | 0;
  d4 = +HEAPF64[i5 >> 3];
  d1 = d4 < 0.0 ? -d1 : d1;
  d4 = d4 + d1;
  HEAPF64[i5 >> 3] = d4;
  d4 = 1.0 / +Math_sqrt(+(d1 * d4));
  i3 = HEAP32[i2 + 4 >> 2] | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (i3 | 0)) break L1;
   i6 = i5 + (i2 << 3) | 0;
   HEAPF64[i6 >> 3] = d4 * +HEAPF64[i6 >> 3];
   i2 = i2 + 1 | 0;
  }
 } while (0);
 return +-d1;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8allocateEm(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (!(__ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv(i1) | 0)) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i2 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE8allocateEm(i1 + 12 | 0, 1) | 0;
  HEAP32[i1 + 4 >> 2] = i2;
  HEAP32[i1 >> 2] = i2;
  HEAP32[i1 + 8 >> 2] = i2 + 24;
  return;
 }
}

function __ZN6vision15get_pretty_timeEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(272);
 i4 = i2 + 256 | 0;
 i3 = i2;
 _time(i4 | 0) | 0;
 _strftime(i3 | 0, 256, 32846, _localtime(i4 | 0) | 0) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i1, i3, __ZNSt3__211char_traitsIcE6lengthEPKc(i3) | 0);
 STACKTOP = i2;
 return;
}

function _ar2FreeImageSet(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 if ((i4 | 0) != 0 ? (i1 = HEAP32[i4 >> 2] | 0, (i1 | 0) != 0) : 0) {
  i3 = 0;
  while (1) {
   i2 = HEAP32[i1 >> 2] | 0;
   if ((i3 | 0) >= (HEAP32[i1 + 4 >> 2] | 0)) break;
   _free(HEAP32[HEAP32[i2 + (i3 << 2) >> 2] >> 2] | 0);
   _free(HEAP32[(HEAP32[HEAP32[i4 >> 2] >> 2] | 0) + (i3 << 2) >> 2] | 0);
   i3 = i3 + 1 | 0;
   i1 = HEAP32[i4 >> 2] | 0;
  }
  _free(i2);
  _free(HEAP32[i4 >> 2] | 0);
  HEAP32[i4 >> 2] = 0;
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i2 = HEAP32[i4 >> 2] | 0;
 do if (i2 | 0) {
  i1 = HEAP32[i4 + 16 >> 2] | 0;
  if ((i2 | 0) == (i1 | 0)) {
   HEAP8[i1 + 112 >> 0] = 0;
   break;
  } else {
   __ZdlPv(i2);
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE12__move_rangeEPiS4_S4_(i1, i7, i8, i2) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0;
 i5 = i1 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i3 = i6 - i2 | 0;
 i4 = i3 >> 2;
 i1 = i7 + (i4 << 2) | 0;
 i2 = i6;
 while (1) {
  if (i1 >>> 0 >= i8 >>> 0) break;
  HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
  i9 = i2 + 4 | 0;
  HEAP32[i5 >> 2] = i9;
  i1 = i1 + 4 | 0;
  i2 = i9;
 }
 if (i3 | 0) _memmove(i6 + (0 - i4 << 2) | 0, i7 | 0, i3 | 0) | 0;
 return;
}

function __ZNSt3__211__call_onceERVmPvPFvS2_E(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 _pthread_mutex_lock(59144) | 0;
 while (1) {
  if ((HEAP32[i1 >> 2] | 0) != 1) break;
  _pthread_cond_wait(59172, 59144) | 0;
 }
 if (!(HEAP32[i1 >> 2] | 0)) {
  HEAP32[i1 >> 2] = 1;
  _pthread_mutex_unlock(59144) | 0;
  FUNCTION_TABLE_vi[i3 & 255](i2);
  _pthread_mutex_lock(59144) | 0;
  HEAP32[i1 >> 2] = -1;
  _pthread_mutex_unlock(59144) | 0;
  _pthread_cond_broadcast(59172) | 0;
 } else _pthread_mutex_unlock(59144) | 0;
 return;
}

function __ZN6vision4NodeILi96EED2Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0;
 i4 = i3 + 104 | 0;
 i5 = i3 + 108 | 0;
 i2 = 0;
 while (1) {
  i1 = HEAP32[i4 >> 2] | 0;
  if (i2 >>> 0 >= (HEAP32[i5 >> 2] | 0) - i1 >> 2 >>> 0) break;
  i1 = HEAP32[i1 + (i2 << 2) >> 2] | 0;
  if (i1 | 0) {
   __ZN6vision4NodeILi96EED2Ev(i1);
   __ZdlPv(i1);
  }
  i2 = i2 + 1 | 0;
 }
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev(i3 + 116 | 0);
 __ZNSt3__213__vector_baseIPN6vision4NodeILi96EEENS_9allocatorIS4_EEED2Ev(i4);
 return;
}

function __ZN6vision11DotProduct9IfEET_PKS1_S3_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return +(+HEAPF32[i1 >> 2] * +HEAPF32[i2 >> 2] + +HEAPF32[i1 + 4 >> 2] * +HEAPF32[i2 + 4 >> 2] + +HEAPF32[i1 + 8 >> 2] * +HEAPF32[i2 + 8 >> 2] + +HEAPF32[i1 + 12 >> 2] * +HEAPF32[i2 + 12 >> 2] + +HEAPF32[i1 + 16 >> 2] * +HEAPF32[i2 + 16 >> 2] + +HEAPF32[i1 + 20 >> 2] * +HEAPF32[i2 + 20 >> 2] + +HEAPF32[i1 + 24 >> 2] * +HEAPF32[i2 + 24 >> 2] + +HEAPF32[i1 + 28 >> 2] * +HEAPF32[i2 + 28 >> 2] + +HEAPF32[i1 + 32 >> 2] * +HEAPF32[i2 + 32 >> 2]);
}

function _strtok(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!i1) {
  i1 = HEAP32[14303] | 0;
  if (!i1) i1 = 0; else i3 = 3;
 } else i3 = 3;
 do if ((i3 | 0) == 3) {
  i1 = i1 + (_strspn(i1, i2) | 0) | 0;
  if (!(HEAP8[i1 >> 0] | 0)) {
   HEAP32[14303] = 0;
   i1 = 0;
   break;
  }
  i2 = i1 + (_strcspn(i1, i2) | 0) | 0;
  HEAP32[14303] = i2;
  if (!(HEAP8[i2 >> 0] | 0)) {
   HEAP32[14303] = 0;
   break;
  } else {
   HEAP32[14303] = i2 + 1;
   HEAP8[i2 >> 0] = 0;
   break;
  }
 } while (0);
 return i1 | 0;
}

function __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEE18__construct_at_endINS_11__wrap_iterIPKiEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(i2, i4, i1) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i1 = i2 + 8 | 0;
 i2 = HEAP32[i4 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i5 = HEAP32[i1 >> 2] | 0;
  HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i1 >> 2] = i5 + 4;
  i5 = i2 + 4 | 0;
  HEAP32[i4 >> 2] = i5;
  i2 = i5;
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS9_PvEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 while (1) {
  if (!i1) break;
  i2 = HEAP32[i1 >> 2] | 0;
  __ZNSt3__24pairIKiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEED2Ev(i1 + 8 | 0);
  __ZdlPv(i1);
  i1 = i2;
 }
 return;
}

function ___stdout_write(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i5;
 HEAP32[i1 + 36 >> 2] = 2;
 if ((HEAP32[i1 >> 2] & 64 | 0) == 0 ? (HEAP32[i4 >> 2] = HEAP32[i1 + 60 >> 2], HEAP32[i4 + 4 >> 2] = 21523, HEAP32[i4 + 8 >> 2] = i5 + 16, ___syscall54(54, i4 | 0) | 0) : 0) HEAP8[i1 + 75 >> 0] = -1;
 i4 = ___stdio_write(i1, i2, i3) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function __ZNKSt3__29__num_getIwE12__do_widen_pIwEEPKT_RNS_8ios_baseEPS3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i1;
 __ZNKSt3__28ios_base6getlocEv(i4, i2);
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58824) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 48 >> 2] & 15](i2, 10736, 10762, i3) | 0;
 __ZNSt3__26localeD2Ev(i4);
 STACKTOP = i1;
 return i3 | 0;
}

function _trackingInitQuit(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (i2) {
  i1 = HEAP32[i2 >> 2] | 0;
  if (!i1) i1 = 0; else {
   _threadWaitQuit(i1) | 0;
   i1 = _threadGetArg(HEAP32[i2 >> 2] | 0) | 0;
   if (i1 | 0) {
    _free(HEAP32[i1 + 4 >> 2] | 0);
    _free(i1);
   }
   _threadFree(i2) | 0;
   i1 = 0;
  }
 } else {
  _arLog(0, 3, 38412, i3);
  i1 = -1;
 }
 STACKTOP = i3;
 return i1 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, 0) | 0) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i3, i4); else {
  i1 = HEAP32[i1 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, i2, i3, i4);
 }
 return;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE4swapERS6_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i5;
 i5 = i1 + 4 | 0;
 i3 = i2 + 4 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i4;
 i3 = i1 + 8 | 0;
 i2 = i2 + 8 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i1;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS7_PvEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 while (1) {
  if (!i1) break;
  i2 = HEAP32[i1 >> 2] | 0;
  __ZNSt3__24pairIKiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEED2Ev(i1 + 8 | 0);
  __ZdlPv(i1);
  i1 = i2;
 }
 return;
}

function __ZL10loadMarkerPKcPiP8ARHandlePP12ARPattHandle(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5;
 i6 = _arPattLoad(HEAP32[i3 >> 2] | 0, i1) | 0;
 HEAP32[i2 >> 2] = i6;
 if ((i6 | 0) < 0) {
  HEAP32[i4 >> 2] = i1;
  _arLog(0, 3, 45076, i4);
  _arPattDeleteHandle(HEAP32[i3 >> 2] | 0) | 0;
  i1 = 0;
 } else i1 = 1;
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNSt3__213__vector_baseINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEENS4_IS8_EEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) {
  i4 = i2 + 4 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i3 | 0)) break;
   i5 = i1 + -12 | 0;
   __ZNSt3__213__vector_baseINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEED2Ev(i5);
   i1 = i5;
  }
  HEAP32[i4 >> 2] = i3;
  __ZdlPv(HEAP32[i2 >> 2] | 0);
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm18EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 17);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 14);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm14EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 13);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 12);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 11);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 10);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 9);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm9EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 8);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 5);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 4);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm4EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 3);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm22EEERAT__Kc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 51917, 21);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm19EEERAT__Kc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 52138, 18);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm16EEERAT__Kc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 51311, 15);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i2, i3, i4, i5, i6, i7) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i8 = 0;
 i8 = HEAP32[i2 + 4 >> 2] | 0;
 i1 = i8 >> 8;
 if (i8 & 1) i1 = HEAP32[(HEAP32[i5 >> 2] | 0) + i1 >> 2] | 0;
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 7](i2, i3, i4, i5 + i1 | 0, (i8 & 2 | 0) == 0 ? 2 : i6, i7);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm8EEERAT__Kc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 51718, 7);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm7EEERAT__Kc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 52131, 6);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm3EEERAT__Kc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 51942, 2);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEENS5_IS9_Lm4096EEEED2Ev(i1 + 32 | 0);
 __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev(i1 + 16 | 0);
 __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i1);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 if ((HEAP8[i2 + 11 >> 0] | 0) < 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i1, HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0); else {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 }
 return;
}

function __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvRT_S2_PKS1_S1_S1_(i1, i2, i3, d4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 var d6 = 0.0;
 d6 = +HEAPF32[i3 + 32 >> 2] + (+HEAPF32[i3 + 24 >> 2] * d4 + +HEAPF32[i3 + 28 >> 2] * d5);
 HEAPF32[i1 >> 2] = (+HEAPF32[i3 + 8 >> 2] + (+HEAPF32[i3 >> 2] * d4 + +HEAPF32[i3 + 4 >> 2] * d5)) / d6;
 HEAPF32[i2 >> 2] = (+HEAPF32[i3 + 20 >> 2] + (+HEAPF32[i3 + 12 >> 2] * d4 + +HEAPF32[i3 + 16 >> 2] * d5)) / d6;
 return;
}

function __ZL14genBWImageFullPhiiPiS0_(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 HEAP32[i3 >> 2] = i1;
 HEAP32[i4 >> 2] = i2;
 i1 = Math_imul(i2, i1) | 0;
 i2 = _malloc(i1) | 0;
 if (!i2) {
  _arLog(0, 3, 20581, i6);
  _exit(1);
 } else {
  _memcpy(i2 | 0, i5 | 0, i1 | 0) | 0;
  STACKTOP = i6;
  return i2 | 0;
 }
 return 0;
}

function __ZNK6vision21HoughSimilarityVoting23getMaximumNumberOfVotesERfRi(i1, i5, i6) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var d2 = 0.0, i3 = 0, i4 = 0;
 HEAPF32[i5 >> 2] = 0.0;
 HEAP32[i6 >> 2] = -1;
 i1 = i1 + 100 | 0;
 d2 = 0.0;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  if (!i1) break;
  i3 = i1;
  i4 = i3 + 12 | 0;
  if (d2 < +((HEAP32[i4 >> 2] | 0) >>> 0)) {
   HEAP32[i6 >> 2] = HEAP32[i3 + 8 >> 2];
   d2 = +((HEAP32[i4 >> 2] | 0) >>> 0);
   HEAPF32[i5 >> 2] = d2;
  }
 }
 return;
}

function _store_int_669(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 L1 : do if (i1 | 0) switch (i2 | 0) {
 case -2:
  {
   HEAP8[i1 >> 0] = i3;
   break L1;
  }
 case -1:
  {
   HEAP16[i1 >> 1] = i3;
   break L1;
  }
 case 0:
  {
   HEAP32[i1 >> 2] = i3;
   break L1;
  }
 case 1:
  {
   HEAP32[i1 >> 2] = i3;
   break L1;
  }
 case 3:
  {
   i2 = i1;
   HEAP32[i2 >> 2] = i3;
   HEAP32[i2 + 4 >> 2] = i4;
   break L1;
  }
 default:
  break L1;
 } while (0);
 return;
}

function _arImageProcLumaHist(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 L1 : do if ((i2 | 0) != 0 & (i1 | 0) != 0) {
  _memset(i2 + 12 | 0, 0, 1024) | 0;
  i3 = i1 + (Math_imul(HEAP32[i2 + 8 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0) | 0) | 0;
  while (1) {
   if (i1 >>> 0 >= i3 >>> 0) {
    i1 = 0;
    break L1;
   }
   i4 = i2 + 12 + ((HEAPU8[i1 >> 0] | 0) << 2) | 0;
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
   i1 = i1 + 1 | 0;
  }
 } else i1 = -1; while (0);
 return i1 | 0;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE10deallocateEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) {
  i4 = i2 + 4 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i3 | 0)) break;
   i5 = i1 + -20 | 0;
   __ZN6vision12FeaturePointD2Ev(i5);
   i1 = i5;
  }
  HEAP32[i4 >> 2] = i3;
  __ZdlPv(HEAP32[i2 >> 2] | 0);
  HEAP32[i2 + 8 >> 2] = 0;
  HEAP32[i4 >> 2] = 0;
  HEAP32[i2 >> 2] = 0;
 }
 return;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE6resizeEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = i1 + 4 | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i4 = ((HEAP32[i3 >> 2] | 0) - i5 | 0) / 36 | 0;
 if (i4 >>> 0 >= i2 >>> 0) {
  if (i4 >>> 0 > i2 >>> 0) HEAP32[i3 >> 2] = i5 + (i2 * 36 | 0);
 } else __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8__appendEm(i1, i2 - i4 | 0);
 return;
}

function _jpeg_open_backing_store(i3, i4, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 i2 = _tmpfile() | 0;
 HEAP32[i4 + 12 >> 2] = i2;
 if (!i2) {
  i1 = HEAP32[i3 >> 2] | 0;
  HEAP32[i1 + 20 >> 2] = 63;
  i1 = i1 + 24 | 0;
  i2 = i1 + 80 | 0;
  do {
   HEAP8[i1 >> 0] = 0;
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) < (i2 | 0));
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i3 >> 2] >> 2] & 255](i3);
 }
 HEAP32[i4 >> 2] = 4;
 HEAP32[i4 + 4 >> 2] = 5;
 HEAP32[i4 + 8 >> 2] = 41;
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 while (1) {
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) == (i2 | 0)) break;
  i4 = i4 + -12 | 0;
  HEAP32[i3 >> 2] = i4;
  __ZNSt3__213__vector_baseINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEED2Ev(i4);
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZN6vision6Logger5writeENS_19LoggerPriorityLevelERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i2, i3, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i6 = 0;
 i5 = i2 + 4 | 0;
 i1 = 0;
 while (1) {
  i6 = HEAP32[i2 >> 2] | 0;
  if (i1 >>> 0 >= (HEAP32[i5 >> 2] | 0) - i6 >> 3 >>> 0) break;
  i6 = HEAP32[i6 + (i1 << 3) >> 2] | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 3](i6, i3, i4);
  i1 = i1 + 1 | 0;
 }
 return;
}

function _vasprintf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i7;
 HEAP32[i4 >> 2] = HEAP32[i3 >> 2];
 i4 = _vsnprintf(0, 0, i2, i4) | 0;
 if ((i4 | 0) >= 0 ? (i5 = i4 + 1 | 0, i6 = _malloc(i5) | 0, HEAP32[i1 >> 2] = i6, (i6 | 0) != 0) : 0) i1 = _vsnprintf(i6, i5, i2, i3) | 0; else i1 = -1;
 STACKTOP = i7;
 return i1 | 0;
}

function __ZN6vision18BinaryFeatureStore6resizeEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = Math_imul(HEAP32[i1 >> 2] | 0, i2) | 0;
 HEAP8[i4 >> 0] = 0;
 __ZNSt3__26vectorIhNS_9allocatorIhEEE6resizeEmRKh(i1 + 4 | 0, i5, i4);
 __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6resizeEm(i1 + 16 | 0, i2);
 STACKTOP = i3;
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endINS_11__wrap_iterIPKiEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_m(i3, i5, i1, i2) {
 i3 = i3 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i2 = i3 + 4 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  i5 = HEAP32[i2 >> 2] | 0;
  HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i2 >> 2] = i5 + 4;
  i1 = i1 + 4 | 0;
 }
 return;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 __ZNSt3__214priority_queueIN6vision17PriorityQueueItemILi96EEENS_6vectorIS3_NS_9allocatorIS3_EEEENS_4lessIS3_EEED2Ev(i1 + 84 | 0);
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev(i1 + 72 | 0);
 __ZN6vision14BinarykMedoidsILi96EED2Ev(i1 + 12 | 0);
 i2 = i1 + 8 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = 0;
 if (i1 | 0) {
  __ZN6vision4NodeILi96EED2Ev(i1);
  __ZdlPv(i1);
 }
 return;
}

function __ZN6vision9MaxIndex7IfEEiPKT_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = +HEAPF32[i1 + 4 >> 2] > +HEAPF32[i1 >> 2] & 1;
 i2 = +HEAPF32[i1 + 8 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 2 : i2;
 i2 = +HEAPF32[i1 + 12 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 3 : i2;
 i2 = +HEAPF32[i1 + 16 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 4 : i2;
 i2 = +HEAPF32[i1 + 20 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 5 : i2;
 return (+HEAPF32[i1 + 24 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 6 : i2) | 0;
}

function __ZN10emscripten8internal7InvokerIiJiEE6invokeEPFiiEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i2 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi(i2) | 0;
 i2 = FUNCTION_TABLE_ii[i1 & 127](i2) | 0;
 HEAP32[i4 >> 2] = i2;
 i2 = __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi(i4) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZN10emscripten8internal7InvokerIdJiEE6invokeEPFdiEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, d4 = 0.0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i3;
 i2 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi(i2) | 0;
 d4 = +FUNCTION_TABLE_di[i1 & 3](i2);
 HEAPF64[i5 >> 3] = d4;
 d4 = +__ZN10emscripten8internal11BindingTypeIdE10toWireTypeERKd(i5);
 STACKTOP = i3;
 return +d4;
}

function __ZNK6vision20VisualDatabaseFacade18get3DFeaturePointsEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = i2;
 i2 = __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEEixERSD_((HEAP32[i1 >> 2] | 0) + 4 | 0, i4) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZN6vision29SolveSymmetricLinearSystem3x3IfEEbPT_PKS1_S4_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i4 = i5;
 if (__ZN6vision25MatrixInverseSymmetric3x3IfEEbPT_PKS1_S1_(i4, i2, 1.1920928955078125e-07) | 0) {
  __ZN6vision16Multiply_3x3_3x1IfEEvPT_PKS1_S4_(i1, i4, i3);
  i1 = 1;
 } else i1 = 0;
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i2, i3, i4, i5, i6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i7 = 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i1 = i7 >> 8;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i4 >> 2] | 0) + i1 >> 2] | 0;
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 31](i2, i3, i4 + i1 | 0, (i7 & 2 | 0) == 0 ? 2 : i5, i6);
 return;
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE4swapERS5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i5;
 i5 = i1 + 4 | 0;
 i3 = i2 + 4 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i4;
 i3 = i1 + 8 | 0;
 i2 = i2 + 8 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i1;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS6_PvEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 while (1) {
  if (!i1) break;
  i2 = HEAP32[i1 >> 2] | 0;
  __ZNSt3__24pairIKiNS_6vectorIiNS_9allocatorIiEEEEED2Ev(i1 + 8 | 0);
  __ZdlPv(i1);
  i1 = i2;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i2 = i2 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function _write_backing_store(i2, i1, i3, i4, i5) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 + 12 | 0;
 if (_fseek(HEAP32[i1 >> 2] | 0, i4, 0) | 0) {
  i4 = HEAP32[i2 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 65;
  FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i2);
 }
 if ((_fwrite(i3, 1, i5, HEAP32[i1 >> 2] | 0) | 0) != (i5 | 0)) {
  i5 = HEAP32[i2 >> 2] | 0;
  HEAP32[i5 + 20 >> 2] = 66;
  FUNCTION_TABLE_vi[HEAP32[i5 >> 2] & 255](i2);
 }
 return;
}

function _emit_message(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if ((i1 | 0) >= 0) {
  if ((HEAP32[i3 + 104 >> 2] | 0) >= (i1 | 0)) FUNCTION_TABLE_vi[HEAP32[i3 + 8 >> 2] & 255](i2);
 } else {
  i4 = i3 + 108 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  if (!((i1 | 0) != 0 ? (HEAP32[i3 + 104 >> 2] | 0) <= 2 : 0)) {
   FUNCTION_TABLE_vi[HEAP32[i3 + 8 >> 2] & 255](i2);
   i1 = HEAP32[i4 >> 2] | 0;
  }
  HEAP32[i4 >> 2] = i1 + 1;
 }
 return;
}

function _read_backing_store(i2, i1, i3, i4, i5) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 + 12 | 0;
 if (_fseek(HEAP32[i1 >> 2] | 0, i4, 0) | 0) {
  i4 = HEAP32[i2 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 65;
  FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i2);
 }
 if ((_fread(i3, 1, i5, HEAP32[i1 >> 2] | 0) | 0) != (i5 | 0)) {
  i5 = HEAP32[i2 >> 2] | 0;
  HEAP32[i5 + 20 >> 2] = 64;
  FUNCTION_TABLE_vi[HEAP32[i5 >> 2] & 255](i2);
 }
 return;
}

function _get_buff(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0;
 L1 : while (1) {
  if (!(_fgets(i3, 256, i4) | 0)) break;
  i1 = _strlen(i3) | 0;
  L4 : while (1) {
   if (!i1) break;
   i1 = i1 + -1 | 0;
   i2 = i3 + i1 | 0;
   switch (HEAP8[i2 >> 0] | 0) {
   case 13:
   case 10:
    break;
   default:
    break L4;
   }
   HEAP8[i2 >> 0] = 0;
  }
  switch (HEAP8[i3 >> 0] | 0) {
  case 0:
  case 35:
   break;
  default:
   break L1;
  }
 }
 return;
}

function __ZNSt3__213__vector_baseINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) {
  i4 = i2 + 4 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i3 | 0)) break;
   i5 = i1 + -12 | 0;
   __ZNSt3__213__vector_baseINS_4pairIfmEENS_9allocatorIS2_EEED2Ev(i5);
   i1 = i5;
  }
  HEAP32[i4 >> 2] = i3;
  __ZdlPv(HEAP32[i2 >> 2] | 0);
 }
 return;
}

function __ZN6vision10SimilarityIfEEvPT_S1_S1_S1_S1_(i1, d2, d3, d4, d5) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 var d6 = 0.0;
 d6 = +Math_cos(+d4) * d5;
 d5 = +Math_sin(+d4) * d5;
 HEAPF32[i1 >> 2] = d6;
 HEAPF32[i1 + 4 >> 2] = -d5;
 HEAPF32[i1 + 8 >> 2] = d2;
 HEAPF32[i1 + 12 >> 2] = d5;
 HEAPF32[i1 + 16 >> 2] = d6;
 HEAPF32[i1 + 20 >> 2] = d3;
 HEAPF32[i1 + 24 >> 2] = 0.0;
 HEAPF32[i1 + 28 >> 2] = 0.0;
 HEAPF32[i1 + 32 >> 2] = 1.0;
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i2, i3, i4, i5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i6 = 0;
 i6 = HEAP32[i2 + 4 >> 2] | 0;
 i1 = i6 >> 8;
 if (i6 & 1) i1 = HEAP32[(HEAP32[i4 >> 2] | 0) + i1 >> 2] | 0;
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 31](i2, i3, i4 + i1 | 0, (i6 & 2 | 0) == 0 ? 2 : i5);
 return;
}

function ___towrite(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 74 | 0;
 i3 = HEAP8[i2 >> 0] | 0;
 HEAP8[i2 >> 0] = i3 + 255 | i3;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!(i2 & 8)) {
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 + 4 >> 2] = 0;
  i3 = HEAP32[i1 + 44 >> 2] | 0;
  HEAP32[i1 + 28 >> 2] = i3;
  HEAP32[i1 + 20 >> 2] = i3;
  HEAP32[i1 + 16 >> 2] = i3 + (HEAP32[i1 + 48 >> 2] | 0);
  i1 = 0;
 } else {
  HEAP32[i1 >> 2] = i2 | 32;
  i1 = -1;
 }
 return i1 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 8 | 0;
 i2 = ___uselocale(HEAP32[i1 >> 2] | 0) | 0;
 i3 = _mbtowc(0, 0, 4) | 0;
 if (i2 | 0) ___uselocale(i2) | 0;
 if (!i3) {
  i1 = HEAP32[i1 >> 2] | 0;
  if (!i1) i1 = 1; else {
   i2 = ___uselocale(i1) | 0;
   i1 = ___ctype_get_mb_cur_max() | 0;
   if (i2 | 0) ___uselocale(i2) | 0;
   return (i1 | 0) == 1 | 0;
  }
 } else i1 = -1;
 return i1 | 0;
}

function _arUtilGetDirectoryNameFromPath(i1, i4, i5, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 do if ((i1 | 0) != 0 & (i4 | 0) != 0 & (i5 | 0) != 0) {
  i3 = _strrchr(i4, 47) | 0;
  if (!i3) {
   HEAP8[i1 >> 0] = 0;
   break;
  }
  i2 = i3 + ((i2 | 0) != 0 & 1) - i4 | 0;
  if ((i2 + 1 | 0) >>> 0 <= i5 >>> 0) {
   _strncpy(i1, i4, i2) | 0;
   HEAP8[i1 + i2 >> 0] = 0;
  } else i1 = 0;
 } else i1 = 0; while (0);
 return i1 | 0;
}

function ___randname(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i4;
 ___clock_gettime(0, i2 | 0) | 0;
 i1 = 0;
 i2 = (HEAP32[i2 + 4 >> 2] | 0) * 65537 ^ (i2 >>> 4) + i3;
 while (1) {
  HEAP8[i3 + i1 >> 0] = (i2 & 15) + 65 | i2 << 1 & 32;
  i1 = i1 + 1 | 0;
  if ((i1 | 0) == 6) break; else i2 = i2 >>> 5;
 }
 STACKTOP = i4;
 return i3 | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE4swapERS3_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i5;
 i5 = i1 + 4 | 0;
 i3 = i2 + 4 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i4;
 i3 = i1 + 8 | 0;
 i2 = i2 + 8 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i1;
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0;
 if ((i2 | 0) == (__ZNSt3__211char_traitsIwE3eofEv() | 0)) i1 = __ZNSt3__211char_traitsIwE3eofEv() | 0; else {
  i2 = i1 + 12 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i2 >> 2] = i1 + 4;
  i1 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
 }
 return i1 | 0;
}

function __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = i1 + 8 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 do {
  i3 = i1 + 36 | 0;
  do {
   HEAP32[i1 >> 2] = 0;
   i1 = i1 + 4 | 0;
  } while ((i1 | 0) < (i3 | 0));
  i1 = (HEAP32[i4 >> 2] | 0) + 36 | 0;
  HEAP32[i4 >> 2] = i1;
  i2 = i2 + -1 | 0;
 } while ((i2 | 0) != 0);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0;
 if ((i2 | 0) == (__ZNSt3__211char_traitsIcE3eofEv() | 0)) i1 = __ZNSt3__211char_traitsIcE3eofEv() | 0; else {
  i2 = i1 + 12 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i2 >> 2] = i1 + 1;
  i1 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
 }
 return i1 | 0;
}

function __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i3, i4, i1, i5, i2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 HEAP32[i7 >> 2] = i2;
 i2 = ___uselocale(i1) | 0;
 i1 = _vsnprintf(i3, i4, i5, i7) | 0;
 if (i2 | 0) ___uselocale(i2) | 0;
 STACKTOP = i6;
 return i1 | 0;
}

function _wmemmove(i4, i2, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 if (i4 - i2 >> 2 >>> 0 >= i1 >>> 0) {
  if (i1 | 0) {
   i3 = i4;
   while (1) {
    i1 = i1 + -1 | 0;
    HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
    if (!i1) break; else {
     i2 = i2 + 4 | 0;
     i3 = i3 + 4 | 0;
    }
   }
  }
 } else do {
  i1 = i1 + -1 | 0;
  HEAP32[i4 + (i1 << 2) >> 2] = HEAP32[i2 + (i1 << 2) >> 2];
 } while ((i1 | 0) != 0);
 return i4 | 0;
}

function _jpeg_abort(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i2 = i3 + 4 | 0;
 do if (HEAP32[i2 >> 2] | 0) {
  i1 = 1;
  while (1) {
   if (!i1) break;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 63](i3, i1);
   i1 = i1 + -1 | 0;
  }
  i1 = i3 + 20 | 0;
  if (!(HEAP32[i3 + 16 >> 2] | 0)) {
   HEAP32[i1 >> 2] = 100;
   break;
  } else {
   HEAP32[i1 >> 2] = 200;
   HEAP32[i3 + 304 >> 2] = 0;
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 while (1) {
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) == (i2 | 0)) break;
  i4 = i4 + -12 | 0;
  HEAP32[i3 >> 2] = i4;
  __ZNSt3__213__vector_baseINS_4pairIfmEENS_9allocatorIS2_EEED2Ev(i4);
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 if ((i1 | 0) != (i2 | 0)) {
  i3 = HEAP8[i2 + 11 >> 0] | 0;
  i4 = i3 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcm(i1, i4 ? HEAP32[i2 >> 2] | 0 : i2, i4 ? HEAP32[i2 + 4 >> 2] | 0 : i3 & 255);
 }
 return;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = i1 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 do {
  i3 = i1 + 36 | 0;
  do {
   HEAP32[i1 >> 2] = 0;
   i1 = i1 + 4 | 0;
  } while ((i1 | 0) < (i3 | 0));
  i1 = (HEAP32[i4 >> 2] | 0) + 36 | 0;
  HEAP32[i4 >> 2] = i1;
  i2 = i2 + -1 | 0;
 } while ((i2 | 0) != 0);
 return;
}

function _sbrk(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = _emscripten_get_heap_size() | 0;
 i3 = HEAP32[DYNAMICTOP_PTR >> 2] | 0;
 i2 = i3 + i1 | 0;
 if ((i1 | 0) > 0 & (i2 | 0) < (i3 | 0) | (i2 | 0) < 0) {
  abortOnCannotGrowMemory(i2 | 0) | 0;
  ___setErrNo(12);
  return -1;
 }
 if ((i2 | 0) > (i4 | 0)) if (!(_emscripten_resize_heap(i2 | 0) | 0)) {
  ___setErrNo(12);
  return -1;
 }
 HEAP32[DYNAMICTOP_PTR >> 2] = i2;
 return i3 | 0;
}

function _arg_n_668(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i4;
 HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
 while (1) {
  i5 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
  i2 = HEAP32[i5 >> 2] | 0;
  HEAP32[i3 >> 2] = i5 + 4;
  if (i1 >>> 0 > 1) i1 = i1 + -1 | 0; else break;
 }
 STACKTOP = i4;
 return i2 | 0;
}

function _ar2SetInitTrans(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0;
 if (!i3) i1 = -1; else {
  HEAP32[i3 + 152 >> 2] = 1;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 4) break;
    HEAP32[i3 + 8 + (i1 << 4) + (i2 << 2) >> 2] = HEAP32[i4 + (i1 << 4) + (i2 << 2) >> 2];
    i2 = i2 + 1 | 0;
   }
   i1 = i1 + 1 | 0;
  }
  HEAP32[i3 + 168 >> 2] = -1;
  i1 = 0;
 }
 return i1 | 0;
}

function _alloc_fs_workspace(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = HEAP32[i2 + 460 >> 2] | 0;
 i4 = (HEAP32[i2 + 112 >> 2] << 1) + 4 | 0;
 i5 = i2 + 120 | 0;
 i6 = i2 + 4 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (HEAP32[i5 >> 2] | 0)) break;
  i7 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 4 >> 2] & 63](i2, 1, i4) | 0;
  HEAP32[i3 + 68 + (i1 << 2) >> 2] = i7;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNSt3__213__vector_baseIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) {
  i4 = i2 + 4 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i3 | 0)) break;
   i5 = i1 + -8 | 0;
   __ZN6vision17PriorityQueueItemILi96EED2Ev(i5);
   i1 = i5;
  }
  HEAP32[i4 >> 2] = i3;
  __ZdlPv(HEAP32[i2 >> 2] | 0);
 }
 return;
}

function ___string_read(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = i1 + 84 | 0;
 i6 = HEAP32[i4 >> 2] | 0;
 i7 = i3 + 256 | 0;
 i5 = _memchr(i6, 0, i7) | 0;
 i5 = (i5 | 0) == 0 ? i7 : i5 - i6 | 0;
 i3 = i5 >>> 0 < i3 >>> 0 ? i5 : i3;
 _memcpy(i2 | 0, i6 | 0, i3 | 0) | 0;
 HEAP32[i1 + 4 >> 2] = i6 + i3;
 i2 = i6 + i5 | 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i4 >> 2] = i2;
 return i3 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE6resizeEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = i1 + 4 | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i4 = (HEAP32[i3 >> 2] | 0) - i5 >> 2;
 if (i4 >>> 0 >= i2 >>> 0) {
  if (i4 >>> 0 > i2 >>> 0) HEAP32[i3 >> 2] = i5 + (i2 << 2);
 } else __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8__appendEm(i1, i2 - i4 | 0);
 return;
}

function __ZNSt3__28ios_base4initEPv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 HEAP32[i2 + 24 >> 2] = i1;
 HEAP32[i2 + 16 >> 2] = (i1 | 0) == 0 & 1;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 4098;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 6;
 i3 = i2 + 28 | 0;
 i1 = i2 + 32 | 0;
 i2 = i1 + 40 | 0;
 do {
  HEAP32[i1 >> 2] = 0;
  i1 = i1 + 4 | 0;
 } while ((i1 | 0) < (i2 | 0));
 __ZNSt3__26localeC2Ev(i3);
 return;
}

function ___fmodeflags(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = (_strchr(i1, 43) | 0) == 0;
 i2 = HEAP8[i1 >> 0] | 0;
 i3 = i3 ? i2 << 24 >> 24 != 114 & 1 : 2;
 i4 = (_strchr(i1, 120) | 0) == 0;
 i3 = i4 ? i3 : i3 | 128;
 i1 = (_strchr(i1, 101) | 0) == 0;
 i1 = i1 ? i3 : i3 | 524288;
 i1 = i2 << 24 >> 24 == 114 ? i1 : i1 | 64;
 i1 = i2 << 24 >> 24 == 119 ? i1 | 512 : i1;
 return (i2 << 24 >> 24 == 97 ? i1 | 1024 : i1) | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEEC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP8[i1 + 128 >> 0] = 0;
 if (i2 | 0) {
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8allocateEm(i1, i2);
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm(i1, i2);
 }
 return;
}

function __ZN6vision12ArrayShuffleIiEEvPT_iiRi(i2, i3, i4, i5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i6 = 0, i7 = 0, i8 = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (i4 | 0)) break;
  i8 = i2 + (i1 << 2) | 0;
  i6 = i2 + (((__ZN6vision10FastRandomERi(i5) | 0) % (i3 | 0) | 0) << 2) | 0;
  i7 = HEAP32[i8 >> 2] | 0;
  HEAP32[i8 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i6 >> 2] = i7;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNSt3__213__lower_boundIRNS_6__lessIjmEEPKjmEET0_S6_S6_RKT1_T_(i4, i5, i1, i2) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i6 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i2 = i4;
 i1 = i5 - i4 >> 2;
 while (1) {
  if (!i1) break;
  i5 = (i1 | 0) / 2 | 0;
  i6 = i2 + (i5 << 2) | 0;
  i4 = (HEAP32[i6 >> 2] | 0) >>> 0 < i3 >>> 0;
  i2 = i4 ? i6 + 4 | 0 : i2;
  i1 = i4 ? i1 + -1 - i5 | 0 : i5;
 }
 return i2 | 0;
}

function __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 i4 = i3 + 4 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i2 + 8 >> 2] + (+HEAPF32[i2 >> 2] * +HEAPF32[i3 >> 2] + +HEAPF32[i2 + 4 >> 2] * +HEAPF32[i4 >> 2]);
 HEAPF32[i1 + 4 >> 2] = +HEAPF32[i2 + 20 >> 2] + (+HEAPF32[i2 + 12 >> 2] * +HEAPF32[i3 >> 2] + +HEAPF32[i2 + 16 >> 2] * +HEAPF32[i4 >> 2]);
 return;
}

function _strcmp(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0;
 i1 = HEAP8[i2 >> 0] | 0;
 i4 = HEAP8[i3 >> 0] | 0;
 if (i1 << 24 >> 24 == 0 ? 1 : i1 << 24 >> 24 != i4 << 24 >> 24) i2 = i4; else {
  do {
   i2 = i2 + 1 | 0;
   i3 = i3 + 1 | 0;
   i1 = HEAP8[i2 >> 0] | 0;
   i4 = HEAP8[i3 >> 0] | 0;
  } while (!(i1 << 24 >> 24 == 0 ? 1 : i1 << 24 >> 24 != i4 << 24 >> 24));
  i2 = i4;
 }
 return (i1 & 255) - (i2 & 255) | 0;
}

function __ZN6vision18VisualDatabaseImplD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEED2Ev(i1 + 4 | 0);
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = 0;
 if (i2 | 0) {
  __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEED2Ev(i2);
  __ZdlPv(i2);
 }
 return;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_m(i1, i4, i3, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i2 = i1 + 4 | 0;
 i1 = i3 - i4 | 0;
 if ((i1 | 0) > 0) {
  _memcpy(HEAP32[i2 >> 2] | 0, i4 | 0, i1 | 0) | 0;
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + (((i1 >>> 0) / 12 | 0) * 12 | 0);
 }
 return;
}

function _memcmp(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0;
 L1 : do if (!i2) i1 = 0; else {
  while (1) {
   i4 = HEAP8[i1 >> 0] | 0;
   i5 = HEAP8[i3 >> 0] | 0;
   if (i4 << 24 >> 24 != i5 << 24 >> 24) break;
   i2 = i2 + -1 | 0;
   if (!i2) {
    i1 = 0;
    break L1;
   } else {
    i1 = i1 + 1 | 0;
    i3 = i3 + 1 | 0;
   }
  }
  i1 = (i4 & 255) - (i5 & 255) | 0;
 } while (0);
 return i1 | 0;
}

function __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i3, i1, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 HEAP32[i6 >> 2] = i2;
 i2 = ___uselocale(i1) | 0;
 i1 = _vasprintf(i3, i4, i6) | 0;
 if (i2 | 0) ___uselocale(i2) | 0;
 STACKTOP = i5;
 return i1 | 0;
}

function _deleteHandle(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = i3 + 216 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  _arPattDetach(i2) | 0;
  _arDeleteHandle(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i1 >> 2] = 0;
 }
 i1 = i3 + 228 | 0;
 if (HEAP32[i1 >> 2] | 0) {
  _ar3DDeleteHandle(i1) | 0;
  HEAP32[i1 >> 2] = 0;
 }
 i1 = i3 + 192 | 0;
 if (HEAP32[i1 >> 2] | 0) {
  _arParamLTFree(i1) | 0;
  HEAP32[i1 >> 2] = 0;
 }
 return;
}

function _ar2FreeFeatureSet(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (!i1) i1 = -1; else {
  i3 = 0;
  while (1) {
   i2 = HEAP32[i1 >> 2] | 0;
   if ((i3 | 0) >= (HEAP32[i1 + 4 >> 2] | 0)) break;
   _free(HEAP32[i2 + (i3 * 20 | 0) >> 2] | 0);
   i3 = i3 + 1 | 0;
   i1 = HEAP32[i4 >> 2] | 0;
  }
  _free(i2);
  _free(HEAP32[i4 >> 2] | 0);
  HEAP32[i4 >> 2] = 0;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z(i3, i1, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 HEAP32[i6 >> 2] = i2;
 i2 = ___uselocale(i1) | 0;
 i1 = _vsscanf(i3, i4, i6) | 0;
 if (i2 | 0) ___uselocale(i2) | 0;
 STACKTOP = i5;
 return i1 | 0;
}

function _fwrite(i2, i4, i1, i3) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i5 = 0, i6 = 0;
 i5 = Math_imul(i1, i4) | 0;
 i1 = (i4 | 0) == 0 ? 0 : i1;
 if ((HEAP32[i3 + 76 >> 2] | 0) > -1) {
  i6 = (___lockfile(i3) | 0) == 0;
  i2 = ___fwritex(i2, i5, i3) | 0;
  if (!i6) ___unlockfile(i3);
 } else i2 = ___fwritex(i2, i5, i3) | 0;
 if ((i2 | 0) != (i5 | 0)) i1 = (i2 >>> 0) / (i4 >>> 0) | 0;
 return i1 | 0;
}

function ___cxa_can_catch(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i5;
 HEAP32[i4 >> 2] = HEAP32[i3 >> 2];
 i1 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 63](i1, i2, i4) | 0;
 if (i1) HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
 STACKTOP = i5;
 return i1 & 1 | 0;
}

function __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEEC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 if (i2 | 0) {
  __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE8allocateEm(i1, i2);
  __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE18__construct_at_endEm(i1, i2);
 }
 return;
}

function __ZNSt3__214__split_bufferIN6vision17PriorityQueueItemILi96EEERNS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 while (1) {
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) == (i2 | 0)) break;
  i4 = i4 + -8 | 0;
  HEAP32[i3 >> 2] = i4;
  __ZN6vision17PriorityQueueItemILi96EED2Ev(i4);
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, i6) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i2, i3, i4, i5);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_pack_expansionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 if (((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 112 : 0) {
  i4 = i1 + 2 | 0;
  i3 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i4, i2, i3) | 0;
  i1 = (i3 | 0) == (i4 | 0) ? i1 : i3;
 }
 return i1 | 0;
}

function _jpeg_std_error(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 137;
 HEAP32[i1 + 4 >> 2] = 47;
 HEAP32[i1 + 8 >> 2] = 138;
 HEAP32[i1 + 12 >> 2] = 48;
 HEAP32[i1 + 16 >> 2] = 139;
 HEAP32[i1 + 104 >> 2] = 0;
 HEAP32[i1 + 108 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 112 >> 2] = 2048;
 HEAP32[i1 + 116 >> 2] = 123;
 HEAP32[i1 + 120 >> 2] = 0;
 HEAP32[i1 + 124 >> 2] = 0;
 HEAP32[i1 + 128 >> 2] = 0;
 return i1 | 0;
}

function _vsscanf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 i5 = i4;
 _memset(i5 | 0, 0, 144) | 0;
 HEAP32[i5 + 32 >> 2] = 36;
 HEAP32[i5 + 44 >> 2] = i1;
 HEAP32[i5 + 76 >> 2] = -1;
 HEAP32[i5 + 84 >> 2] = i1;
 i3 = _vfscanf(i5, i2, i3) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function _ar2ReadJpegImage2(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = _malloc(20) | 0;
 if (!i1) {
  _arLog(0, 3, 20581, i3);
  _exit(1);
 }
 i2 = _jpgread(i2, i1 + 8 | 0, i1 + 12 | 0, i1 + 4 | 0, i1 + 16 | 0) | 0;
 HEAP32[i1 >> 2] = i2;
 if (!i2) {
  _free(i1);
  i1 = 0;
 }
 STACKTOP = i3;
 return i1 | 0;
}

function _strncat(i6, i3, i2) {
 i6 = i6 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0, i4 = 0, i5 = 0;
 i1 = i6 + (_strlen(i6) | 0) | 0;
 L1 : do if (i2) while (1) {
  i5 = HEAP8[i3 >> 0] | 0;
  if (!(i5 << 24 >> 24)) break L1;
  i2 = i2 + -1 | 0;
  i4 = i1 + 1 | 0;
  HEAP8[i1 >> 0] = i5;
  if (!i2) {
   i1 = i4;
   break;
  } else {
   i3 = i3 + 1 | 0;
   i1 = i4;
  }
 } while (0);
 HEAP8[i1 >> 0] = 0;
 return i6 | 0;
}

function __ZNSt3__213__vector_baseIN6vision12FeaturePointENS_9allocatorIS2_EEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) {
  i4 = i2 + 4 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i3 | 0)) break;
   i5 = i1 + -20 | 0;
   __ZN6vision12FeaturePointD2Ev(i5);
   i1 = i5;
  }
  HEAP32[i4 >> 2] = i3;
  __ZdlPv(HEAP32[i2 >> 2] | 0);
 }
 return;
}

function _jinit_huff_decoder(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 1, 232) | 0;
 HEAP32[i1 + 444 >> 2] = i3;
 HEAP32[i3 >> 2] = 130;
 HEAP32[i3 + 4 >> 2] = 21;
 i2 = i3 + 56 | 0;
 i3 = i3 + 40 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 4) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  HEAP32[i3 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function _start_iMCU_row_28(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = HEAP32[i1 + 428 >> 2] | 0;
 if ((HEAP32[i1 + 328 >> 2] | 0) > 1) i1 = 1; else {
  i3 = HEAP32[i1 + 332 >> 2] | 0;
  i1 = HEAP32[((HEAP32[i1 + 148 >> 2] | 0) >>> 0 < ((HEAP32[i1 + 320 >> 2] | 0) + -1 | 0) >>> 0 ? i3 + 12 | 0 : i3 + 72 | 0) >> 2] | 0;
 }
 HEAP32[i2 + 28 >> 2] = i1;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i2 + 24 >> 2] = 0;
 return;
}

function _arVecInnerproduct(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, d2 = 0.0, i5 = 0, d6 = 0.0;
 i5 = HEAP32[i3 + 4 >> 2] | 0;
 if ((i5 | 0) != (HEAP32[i4 + 4 >> 2] | 0)) _exit(0);
 i1 = 0;
 d2 = 0.0;
 while (1) {
  if ((i1 | 0) >= (i5 | 0)) break;
  d6 = d2 + +HEAPF64[(HEAP32[i3 >> 2] | 0) + (i1 << 3) >> 3] * +HEAPF64[(HEAP32[i4 >> 2] | 0) + (i1 << 3) >> 3];
  i1 = i1 + 1 | 0;
  d2 = d6;
 }
 return +d2;
}

function __ZN6vision9MaxIndex6IfEEiPKT_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = +HEAPF32[i1 + 4 >> 2] > +HEAPF32[i1 >> 2] & 1;
 i2 = +HEAPF32[i1 + 8 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 2 : i2;
 i2 = +HEAPF32[i1 + 12 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 3 : i2;
 i2 = +HEAPF32[i1 + 16 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 4 : i2;
 return (+HEAPF32[i1 + 20 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 5 : i2) | 0;
}

function __ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt(i2, i1, i4, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  if ((HEAP32[i1 >> 2] | 0) >>> 0 < 128) {
   i2 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0;
   i2 = HEAPU16[i2 + (HEAP32[i1 >> 2] << 1) >> 1] | 0;
  } else i2 = 0;
  HEAP16[i3 >> 1] = i2;
  i3 = i3 + 2 | 0;
  i1 = i1 + 4 | 0;
 }
 return i4 | 0;
}

function __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -36 | 0;
  HEAP32[i3 >> 2] = i5;
  i4 = i5;
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__28ios_base16__call_callbacksENS0_5eventE(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0;
 i4 = i2 + 32 | 0;
 i5 = i2 + 36 | 0;
 i1 = HEAP32[i2 + 40 >> 2] | 0;
 while (1) {
  if (!i1) break;
  i6 = i1 + -1 | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[i4 >> 2] | 0) + (i6 << 2) >> 2] & 3](i3, i2, HEAP32[(HEAP32[i5 >> 2] | 0) + (i6 << 2) >> 2] | 0);
  i1 = i6;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE10deallocateEPcm(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 if (__ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE17pointer_in_bufferEPc(i1, i3) | 0) {
  i2 = i3 + (__ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8align_upEm(i2) | 0) | 0;
  i1 = i1 + 4096 | 0;
  if ((i2 | 0) == (HEAP32[i1 >> 2] | 0)) HEAP32[i1 >> 2] = i3;
 } else _free(i3);
 return;
}

function __ZN6vision27OrthogonalizePivot8x9Basis7IfEEbPT_S2_(i1, i3) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 var d2 = 0.0, i4 = 0;
 i4 = i1 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_(i4, i1 + 216 | 0, i3 + 252 | 0);
 d2 = +__ZN6vision11SumSquares9IfEET_PKS1_(i4);
 if (d2 == 0.0) i1 = 0; else {
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_(i4, i4, 1.0 / +Math_sqrt(+d2));
  i1 = 1;
 }
 return i1 | 0;
}

function __ZN6vision22SampleReceptorBilinearERKNS_5ImageEff(i1, d2, d3) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d2 = +__ZN6vision10ClipScalarIfEET_S1_S1_S1_(d2, 0.0, +(((__ZNK6vision5Image5widthEv(i1) | 0) + -2 | 0) >>> 0));
 return +(+__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i1, d2, +__ZN6vision10ClipScalarIfEET_S1_S1_S1_(d3, 0.0, +(((__ZNK6vision5Image6heightEv(i1) | 0) + -2 | 0) >>> 0))));
}

function ___muldsi3(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = i1 & 65535;
 i5 = i2 & 65535;
 i3 = Math_imul(i5, i6) | 0;
 i4 = i1 >>> 16;
 i1 = (i3 >>> 16) + (Math_imul(i5, i4) | 0) | 0;
 i5 = i2 >>> 16;
 i2 = Math_imul(i5, i6) | 0;
 return (setTempRet0((i1 >>> 16) + (Math_imul(i5, i4) | 0) + (((i1 & 65535) + i2 | 0) >>> 16) | 0), i1 + i2 << 16 | i3 & 65535 | 0) | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEmRKi(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = i1 + 4 | 0;
 i6 = HEAP32[i1 >> 2] | 0;
 i5 = (HEAP32[i4 >> 2] | 0) - i6 >> 2;
 if (i5 >>> 0 >= i2 >>> 0) {
  if (i5 >>> 0 > i2 >>> 0) HEAP32[i4 >> 2] = i6 + (i2 << 2);
 } else __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEmRKi(i1, i2 - i5 | 0, i3);
 return;
}

function __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE6resizeEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = i1 + 4 | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i4 = (HEAP32[i3 >> 2] | 0) - i5 >> 3;
 if (i4 >>> 0 >= i2 >>> 0) {
  if (i4 >>> 0 > i2 >>> 0) HEAP32[i3 >> 2] = i5 + (i2 << 3);
 } else __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE8__appendEm(i1, i2 - i4 | 0);
 return;
}

function __ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_(i2, i3, i1, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) {
   i1 = i4;
   break;
  }
  if ((HEAP32[i1 >> 2] | 0) >>> 0 >= 128) break;
  i2 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0;
  if (!((HEAP16[i2 + (HEAP32[i1 >> 2] << 1) >> 1] & i3) << 16 >> 16)) break;
  i1 = i1 + 4 | 0;
 }
 return i1 | 0;
}

function __ZN6vision16RobustHomographyIfE4initEfiii(i1, d2, i3, i4, i5) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm(i1, i3 * 9 | 0);
 __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE6resizeEm(i1 + 24 | 0, i3);
 HEAPF32[i1 + 36 >> 2] = d2;
 HEAP32[i1 + 40 >> 2] = i3;
 HEAP32[i1 + 44 >> 2] = i4;
 HEAP32[i1 + 48 >> 2] = i5;
 return;
}

function __ZNSt3__213__vector_baseIN6vision5ImageENS_9allocatorIS2_EEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) {
  i4 = i2 + 4 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i3 | 0)) break;
   i5 = i1 + -32 | 0;
   __ZN6vision5ImageD2Ev(i5);
   i1 = i5;
  }
  HEAP32[i4 >> 2] = i3;
  __ZdlPv(HEAP32[i2 >> 2] | 0);
 }
 return;
}

function __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 while (1) {
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) == (i2 | 0)) break;
  i4 = i4 + -20 | 0;
  HEAP32[i3 >> 2] = i4;
  __ZN6vision12FeaturePointD2Ev(i4);
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS4_PvEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 while (1) {
  if (!i1) break;
  i2 = HEAP32[i1 >> 2] | 0;
  __ZdlPv(i1);
  i1 = i2;
 }
 return;
}

function __ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc(i1, i4, i5, i6, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 var i3 = 0, i7 = 0;
 i3 = (i5 - i4 | 0) >>> 2;
 i1 = i2;
 i2 = i4;
 while (1) {
  if ((i2 | 0) == (i5 | 0)) break;
  i7 = HEAP32[i2 >> 2] | 0;
  HEAP8[i1 >> 0] = i7 >>> 0 < 128 ? i7 & 255 : i6;
  i1 = i1 + 1 | 0;
  i2 = i2 + 4 | 0;
 }
 return i4 + (i3 << 2) | 0;
}

function _copysign(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 var i3 = 0, i4 = 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i4 = HEAP32[tempDoublePtr >> 2] | 0;
 i3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = d2;
 i3 = HEAP32[tempDoublePtr + 4 >> 2] & -2147483648 | i3 & 2147483647;
 HEAP32[tempDoublePtr >> 2] = i4;
 HEAP32[tempDoublePtr + 4 >> 2] = i3;
 return +(+HEAPF64[tempDoublePtr >> 3]);
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP8[i2 >> 0] = 0;
 HEAP32[i2 + 4 >> 2] = i1;
 i1 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (!(HEAP32[i1 + 16 >> 2] | 0)) {
  i1 = HEAP32[i1 + 72 >> 2] | 0;
  if (i1 | 0) __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i1) | 0;
  HEAP8[i2 >> 0] = 1;
 }
 return;
}

function __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEED2Ev(i1);
 return;
}

function __ZNSt3__213unordered_mapIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS5_EEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEED2Ev(i1);
 return;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE6resizeEmRKh(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = i1 + 4 | 0;
 i6 = HEAP32[i1 >> 2] | 0;
 i5 = (HEAP32[i4 >> 2] | 0) - i6 | 0;
 if (i5 >>> 0 >= i2 >>> 0) {
  if (i5 >>> 0 > i2 >>> 0) HEAP32[i4 >> 2] = i6 + i2;
 } else __ZNSt3__26vectorIhNS_9allocatorIhEEE8__appendEmRKh(i1, i2 - i5 | 0, i3);
 return;
}

function _find_biggest_color_pop(i1, i6) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i3 = 0;
 i2 = 0;
 i5 = 0;
 while (1) {
  if ((i5 | 0) >= (i6 | 0)) break;
  i4 = HEAP32[i1 + 28 >> 2] | 0;
  if ((i4 | 0) > (i2 | 0)) {
   i7 = (HEAP32[i1 + 24 >> 2] | 0) > 0;
   i3 = i7 ? i1 : i3;
   i2 = i7 ? i4 : i2;
  }
  i5 = i5 + 1 | 0;
  i1 = i1 + 32 | 0;
 }
 return i3 | 0;
}

function __ZNSt3__218__libcpp_refstringC2EPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = _strlen(i2) | 0;
 i3 = __Znwm(i4 + 13 | 0) | 0;
 HEAP32[i3 >> 2] = i4;
 HEAP32[i3 + 4 >> 2] = i4;
 HEAP32[i3 + 8 >> 2] = 0;
 i3 = __ZNSt3__215__refstring_imp12_GLOBAL__N_113data_from_repEPNS1_9_Rep_baseE(i3) | 0;
 _memcpy(i3 | 0, i2 | 0, i4 + 1 | 0) | 0;
 HEAP32[i1 >> 2] = i3;
 return;
}

function __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEEC2EmmS3_(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = i2 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = i1;
 if (!i3) i1 = 0; else i1 = __Znwm(i3) | 0;
 HEAP32[i2 >> 2] = i1;
 i4 = i1 + i4 | 0;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i1 + i3;
 return;
}

function __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12fromWireTypeEPNS9_Ut_E(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i1, i2 + 4 | 0, i3);
 return;
}

function __ZNSt3__28numpunctIwEC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 4 >> 2] = i2 + -1;
 HEAP32[i1 >> 2] = 16948;
 HEAP32[i1 + 8 >> 2] = 46;
 HEAP32[i1 + 12 >> 2] = 44;
 i2 = i1 + 16 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_(i2, i3, i1, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) {
   i1 = i4;
   break;
  }
  if ((HEAP32[i1 >> 2] | 0) >>> 0 < 128 ? (i2 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0, (HEAP16[i2 + (HEAP32[i1 >> 2] << 1) >> 1] & i3) << 16 >> 16) : 0) break;
  i1 = i1 + 4 | 0;
 }
 return i1 | 0;
}

function _merged_1v_upsample(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i1 + 452 >> 2] | 0) + 12 >> 2] & 31](i1, i2, HEAP32[i3 >> 2] | 0, i5 + (HEAP32[i6 >> 2] << 2) | 0);
 HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
 HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
 return;
}

function _ar2GetVectorAngle(i1, i2, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var d3 = 0.0, d4 = 0.0;
 d4 = +HEAPF32[i2 >> 2] - +HEAPF32[i1 >> 2];
 d3 = +HEAPF32[i2 + 4 >> 2] - +HEAPF32[i1 + 4 >> 2];
 d4 = +Math_sqrt(+(d4 * d4 + d3 * d3));
 if (!(d4 == 0.0)) {
  HEAPF32[i5 >> 2] = d3 / d4;
  HEAPF32[i6 >> 2] = (+HEAPF32[i2 >> 2] - +HEAPF32[i1 >> 2]) / d4;
 }
 return;
}

function _output_message(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 i3 = i2 + 200 | 0;
 i4 = i2;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 63](i1, i4);
 i1 = HEAP32[3454] | 0;
 HEAP32[i3 >> 2] = i4;
 _fprintf(i1, 38408, i3) | 0;
 STACKTOP = i2;
 return;
}

function __ZN6vision16ComputeEdgeScoreERfPKf(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, d4 = 0.0;
 i3 = i2 + 16 | 0;
 d4 = +HEAPF32[i2 >> 2] * +HEAPF32[i3 >> 2];
 d4 = d4 - +__ZN6vision3sqrIfEET_S1_(+HEAPF32[i2 + 4 >> 2]);
 if (d4 == 0.0) i1 = 0; else {
  d4 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[i2 >> 2] + +HEAPF32[i3 >> 2]) / d4;
  HEAPF32[i1 >> 2] = d4;
  i1 = 1;
 }
 return i1 | 0;
}

function __ZNSt3__28numpunctIcEC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 4 >> 2] = i2 + -1;
 HEAP32[i1 >> 2] = 16908;
 HEAP8[i1 + 8 >> 0] = 46;
 HEAP8[i1 + 9 >> 0] = 44;
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEEC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 if (i2 | 0) {
  __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8allocateEm(i1, i2);
  __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endEm(i1, i2);
 }
 return;
}

function __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 while (1) {
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) == (i2 | 0)) break;
  i4 = i4 + -32 | 0;
  HEAP32[i3 >> 2] = i4;
  __ZN6vision5ImageD2Ev(i4);
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS2_PvEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 while (1) {
  if (!i1) break;
  i2 = HEAP32[i1 >> 2] | 0;
  __ZdlPv(i1);
  i1 = i2;
 }
 return;
}

function __ZN6vision4NodeILi96EEC2EiPKh(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 HEAP32[i1 >> 2] = i2;
 HEAP8[i1 + 100 >> 0] = 1;
 i2 = i1 + 104 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 __ZN6vision10CopyVectorIhEEvPT_PKS1_m(i1 + 4 | 0, i3, 96);
 return;
}

function _skip_input_data(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0, i5 = 0;
 i4 = HEAP32[i3 + 24 >> 2] | 0;
 if ((i1 | 0) > 0) {
  i5 = i4 + 4 | 0;
  while (1) {
   i2 = HEAP32[i5 >> 2] | 0;
   if ((i1 | 0) <= (i2 | 0)) break;
   _fill_input_buffer(i3) | 0;
   i1 = i1 - i2 | 0;
  }
  HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + i1;
  HEAP32[i5 >> 2] = i2 - i1;
 }
 return;
}

function _jcopy_sample_rows(i2, i3, i5, i6, i1, i7) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 var i4 = 0;
 i4 = i1;
 i2 = i2 + (i3 << 2) | 0;
 i1 = i5 + (i6 << 2) | 0;
 while (1) {
  if ((i4 | 0) <= 0) break;
  _memcpy(HEAP32[i1 >> 2] | 0, HEAP32[i2 >> 2] | 0, i7 | 0) | 0;
  i4 = i4 + -1 | 0;
  i2 = i2 + 4 | 0;
  i1 = i1 + 4 | 0;
 }
 return;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((__ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv(i1) | 0) >>> 0 < i2 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i3 = __Znwm(i2) | 0;
  HEAP32[i1 + 4 >> 2] = i3;
  HEAP32[i1 >> 2] = i3;
  HEAP32[i1 + 8 >> 2] = i3 + i2;
  return;
 }
}

function __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEE18__construct_at_endEmRKi(i1, i5, i6) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = i1 + 8 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 i1 = i5;
 i4 = i2;
 while (1) {
  HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
  i1 = i1 + -1 | 0;
  if (!i1) break; else i4 = i4 + 4 | 0;
 }
 HEAP32[i3 >> 2] = i2 + (i5 << 2);
 return;
}

function __ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff(i1, d2, d3) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 var i4 = 0, i5 = 0, i6 = 0;
 i6 = __ZNK6vision5Image3getEv(i1) | 0;
 i5 = __ZNK6vision5Image5widthEv(i1) | 0;
 i4 = __ZNK6vision5Image6heightEv(i1) | 0;
 return +(+__ZN6vision22bilinear_interpolationIfEET_PKS1_mmmff(i6, i5, i4, __ZNK6vision5Image4stepEv(i1) | 0, d2, d3));
}

function __ZN10emscripten8internal7InvokerIiJEE6invokeEPFivE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i1 = FUNCTION_TABLE_i[i1 & 1]() | 0;
 HEAP32[i3 >> 2] = i1;
 i1 = __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi(i3) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZNKSt3__25ctypeIcE10do_toupperEPcPKc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i1 = HEAP8[i2 >> 0] | 0;
  if (i1 << 24 >> 24 > -1) {
   i1 = __ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0;
   i1 = HEAP32[i1 + (HEAP8[i2 >> 0] << 2) >> 2] & 255;
  }
  HEAP8[i2 >> 0] = i1;
  i2 = i2 + 1 | 0;
 }
 return i3 | 0;
}

function __ZNKSt3__25ctypeIcE10do_tolowerEPcPKc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i1 = HEAP8[i2 >> 0] | 0;
  if (i1 << 24 >> 24 > -1) {
   i1 = __ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0;
   i1 = HEAP32[i1 + (HEAP8[i2 >> 0] << 2) >> 2] & 255;
  }
  HEAP8[i2 >> 0] = i1;
  i2 = i2 + 1 | 0;
 }
 return i3 | 0;
}

function __ZN6vision11ScopedTimerC2EPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 __ZN6vision5TimerC2Ev(i1);
 i3 = i1 + 16 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i3, i2, __ZNSt3__211char_traitsIcE6lengthEPKc(i2) | 0);
 __ZN6vision5Timer5startEv(i1);
 return;
}

function _shl(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 i5 = i4 + 4 | 0;
 if (i1 >>> 0 > 31) {
  i3 = HEAP32[i4 >> 2] | 0;
  HEAP32[i5 >> 2] = i3;
  HEAP32[i4 >> 2] = 0;
  i1 = i1 + -32 | 0;
  i2 = 0;
 } else {
  i2 = HEAP32[i4 >> 2] | 0;
  i3 = HEAP32[i5 >> 2] | 0;
 }
 HEAP32[i5 >> 2] = i2 >>> (32 - i1 | 0) | i3 << i1;
 HEAP32[i4 >> 2] = i2 << i1;
 return;
}

function __ZNSt3__214__split_bufferIPKN6vision4NodeILi96EEERNS_9allocatorIS5_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -4 | 0;
  HEAP32[i3 >> 2] = i5;
  i4 = i5;
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__214__split_bufferIPN6vision4NodeILi96EEERNS_9allocatorIS4_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -4 | 0;
  HEAP32[i3 >> 2] = i5;
  i4 = i5;
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEEC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 if (i2 | 0) {
  __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEE8allocateEm(i1, i2);
  __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEE18__construct_at_endEm(i1, i2);
 }
 return;
}

function __ZNSt3__214__split_bufferIN6vision7Point3dIfEERNS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -12 | 0;
  HEAP32[i3 >> 2] = i5;
  i4 = i5;
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNKSt3__25ctypeIwE10do_toupperEPwPKw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i1 >>> 0 < 128) {
   i1 = __ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0;
   i1 = HEAP32[i1 + (HEAP32[i2 >> 2] << 2) >> 2] | 0;
  }
  HEAP32[i2 >> 2] = i1;
  i2 = i2 + 4 | 0;
 }
 return i3 | 0;
}

function __ZNKSt3__25ctypeIwE10do_tolowerEPwPKw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i1 >>> 0 < 128) {
   i1 = __ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0;
   i1 = HEAP32[i1 + (HEAP32[i2 >> 2] << 2) >> 2] | 0;
  }
  HEAP32[i2 >> 2] = i1;
  i2 = i2 + 4 | 0;
 }
 return i3 | 0;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, 0) | 0) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i3, i4);
 return;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPhEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m(i1, i4, i3, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i2 = i1 + 4 | 0;
 i1 = i3 - i4 | 0;
 if ((i1 | 0) > 0) {
  _memcpy(HEAP32[i2 >> 2] | 0, i4 | 0, i1 | 0) | 0;
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + i1;
 }
 return;
}

function __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 4 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  __ZN6vision17PriorityQueueItemILi96EEC2Ev(i2);
  i2 = (HEAP32[i3 >> 2] | 0) + 8 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function _memmove(i1, i4, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((i4 | 0) < (i1 | 0) & (i1 | 0) < (i4 + i2 | 0)) {
  i3 = i1;
  i4 = i4 + i2 | 0;
  i1 = i1 + i2 | 0;
  while ((i2 | 0) > 0) {
   i1 = i1 - 1 | 0;
   i4 = i4 - 1 | 0;
   i2 = i2 - 1 | 0;
   HEAP8[i1 >> 0] = HEAP8[i4 >> 0] | 0;
  }
  i1 = i3;
 } else _memcpy(i1, i4, i2) | 0;
 return i1 | 0;
}

function _arLog(i1, i3, i4, i5) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i2;
 if ((i4 | 0) != 0 & (HEAP32[3368] | 0) <= (i3 | 0) ? HEAP8[i4 >> 0] | 0 : 0) {
  HEAP32[i1 >> 2] = i5;
  _arLogv(0, i3, i4, i1);
 }
 STACKTOP = i2;
 return;
}

function __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = HEAP32[i1 + 4 >> 2] | 0;
 if (i1 | 0 ? (i3 = i1 + 4 | 0, i2 = HEAP32[i3 >> 2] | 0, HEAP32[i3 >> 2] = i2 + -1, (i2 | 0) == 0) : 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
  __ZNSt3__219__shared_weak_count14__release_weakEv(i1);
 }
 return;
}

function _shr(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 i5 = i4 + 4 | 0;
 if (i1 >>> 0 > 31) {
  i3 = HEAP32[i5 >> 2] | 0;
  HEAP32[i4 >> 2] = i3;
  HEAP32[i5 >> 2] = 0;
  i1 = i1 + -32 | 0;
  i2 = 0;
 } else {
  i2 = HEAP32[i5 >> 2] | 0;
  i3 = HEAP32[i4 >> 2] | 0;
 }
 HEAP32[i4 >> 2] = i2 << 32 - i1 | i3 >>> i1;
 HEAP32[i5 >> 2] = i2 >>> i1;
 return;
}

function _ar3DCreateHandle2(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = _malloc(4) | 0;
 if (!i1) {
  _arLog(0, 3, 20581, i3);
  _exit(1);
 }
 i2 = _icpCreateHandle(i2) | 0;
 HEAP32[i1 >> 2] = i2;
 if (!i2) {
  _free(i1);
  i1 = 0;
 }
 STACKTOP = i3;
 return i1 | 0;
}

function __ZNSt3__26vectorItNS_9allocatorItEEE6resizeEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = i1 + 4 | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i4 = (HEAP32[i3 >> 2] | 0) - i5 >> 1;
 if (i4 >>> 0 >= i2 >>> 0) {
  if (i4 >>> 0 > i2 >>> 0) HEAP32[i3 >> 2] = i5 + (i2 << 1);
 } else __ZNSt3__26vectorItNS_9allocatorItEEE8__appendEm(i1, i2 - i4 | 0);
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = i1 + 4 | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i4 = (HEAP32[i3 >> 2] | 0) - i5 >> 2;
 if (i4 >>> 0 >= i2 >>> 0) {
  if (i4 >>> 0 > i2 >>> 0) HEAP32[i3 >> 2] = i5 + (i2 << 2);
 } else __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEm(i1, i2 - i4 | 0);
 return;
}

function __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = i1 + 4 | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i4 = (HEAP32[i3 >> 2] | 0) - i5 >> 2;
 if (i4 >>> 0 >= i2 >>> 0) {
  if (i4 >>> 0 > i2 >>> 0) HEAP32[i3 >> 2] = i5 + (i2 << 2);
 } else __ZNSt3__26vectorIfNS_9allocatorIfEEE8__appendEm(i1, i2 - i4 | 0);
 return;
}

function ___ftello(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 if ((HEAP32[i2 + 76 >> 2] | 0) > -1) {
  i4 = (___lockfile(i2) | 0) == 0;
  i3 = ___ftello_unlocked(i2) | 0;
  i1 = getTempRet0() | 0;
  if (i4) i2 = i3; else {
   ___unlockfile(i2);
   i2 = i3;
  }
 } else {
  i2 = ___ftello_unlocked(i2) | 0;
  i1 = getTempRet0() | 0;
 }
 setTempRet0(i1 | 0);
 return i2 | 0;
}

function __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -8 | 0;
  HEAP32[i3 >> 2] = i5;
  i4 = i5;
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 127](i1) | 0;
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 59104) | 0;
 HEAP32[i1 + 36 >> 2] = i2;
 i2 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i2) | 0) & 1;
 HEAP8[i1 + 44 >> 0] = i2;
 return;
}

function __ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 127](i1) | 0;
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 59096) | 0;
 HEAP32[i1 + 36 >> 2] = i2;
 i2 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i2) | 0) & 1;
 HEAP8[i1 + 44 >> 0] = i2;
 return;
}

function _reset_input_controller(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 436 >> 2] | 0;
 HEAP32[i2 >> 2] = 71;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i2 + 24 >> 2] = 1;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 255](i1);
 FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 + 440 >> 2] >> 2] & 255](i1);
 HEAP32[i1 + 160 >> 2] = 0;
 return;
}

function __ZNSt3__214__split_bufferI12multi_markerRNS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -8 | 0;
  HEAP32[i3 >> 2] = i5;
  i4 = i5;
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__214__split_bufferINS_4pairIfmEERNS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -8 | 0;
  HEAP32[i3 >> 2] = i5;
  i4 = i5;
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -8 | 0;
  HEAP32[i3 >> 2] = i5;
  i4 = i5;
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function _rand() {
 var i1 = 0, i2 = 0, i3 = 0;
 i2 = 56360;
 i2 = ___muldi3(HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0, 1284865837, 1481765933) | 0;
 i2 = _i64Add(i2 | 0, getTempRet0() | 0, 1, 0) | 0;
 i1 = getTempRet0() | 0;
 i3 = 56360;
 HEAP32[i3 >> 2] = i2;
 HEAP32[i3 + 4 >> 2] = i1;
 i1 = _bitshift64Lshr(i2 | 0, i1 | 0, 33) | 0;
 getTempRet0() | 0;
 return i1 | 0;
}

function _jinit_input_controller(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 0, 28) | 0;
 HEAP32[i1 + 436 >> 2] = i2;
 HEAP32[i2 >> 2] = 71;
 HEAP32[i2 + 4 >> 2] = 117;
 HEAP32[i2 + 8 >> 2] = 118;
 HEAP32[i2 + 12 >> 2] = 119;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i2 + 24 >> 2] = 1;
 return;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE6resizeEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = i1 + 4 | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i4 = (HEAP32[i3 >> 2] | 0) - i5 | 0;
 if (i4 >>> 0 >= i2 >>> 0) {
  if (i4 >>> 0 > i2 >>> 0) HEAP32[i3 >> 2] = i5 + i2;
 } else __ZNSt3__26vectorIhNS_9allocatorIhEEE8__appendEm(i1, i2 - i4 | 0);
 return;
}

function __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 8 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  __ZN6vision12FeaturePointC2Ev(i2);
  i2 = (HEAP32[i3 >> 2] | 0) + 20 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE18__construct_at_endEmRKh(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0;
 i3 = i1 + 8 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  HEAP8[i2 >> 0] = HEAP8[i4 >> 0] | 0;
  i2 = (HEAP32[i3 >> 2] | 0) + 1 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function __ZNKSt3__27collateIwE12do_transformEPKwS3_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i1, i3, i4);
 return;
}

function __ZNKSt3__27collateIcE12do_transformEPKcS3_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i1, i3, i4);
 return;
}

function _arMatrixAllocf(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0;
 i1 = _malloc(12) | 0;
 do if (i1) {
  i4 = _malloc(Math_imul(i2 << 2, i3) | 0) | 0;
  HEAP32[i1 >> 2] = i4;
  if (!i4) {
   _free(i1);
   i1 = 0;
   break;
  } else {
   HEAP32[i1 + 4 >> 2] = i2;
   HEAP32[i1 + 8 >> 2] = i3;
   break;
  }
 } else i1 = 0; while (0);
 return i1 | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE3__xEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56464] | 0) == 0 ? ___cxa_guard_acquire(56464) | 0 : 0) {
  HEAP32[14736] = 0;
  HEAP32[14737] = 0;
  HEAP32[14738] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(58944, 15184, __ZNSt3__211char_traitsIwE6lengthEPKw(15184) | 0);
 }
 return 58944;
}

function __ZNKSt3__220__time_get_c_storageIwE3__rEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56472] | 0) == 0 ? ___cxa_guard_acquire(56472) | 0 : 0) {
  HEAP32[14739] = 0;
  HEAP32[14740] = 0;
  HEAP32[14741] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(58956, 15220, __ZNSt3__211char_traitsIwE6lengthEPKw(15220) | 0);
 }
 return 58956;
}

function __ZNKSt3__220__time_get_c_storageIwE3__cEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56480] | 0) == 0 ? ___cxa_guard_acquire(56480) | 0 : 0) {
  HEAP32[14742] = 0;
  HEAP32[14743] = 0;
  HEAP32[14744] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(58968, 15268, __ZNSt3__211char_traitsIwE6lengthEPKw(15268) | 0);
 }
 return 58968;
}

function __ZNKSt3__220__time_get_c_storageIwE3__XEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56456] | 0) == 0 ? ___cxa_guard_acquire(56456) | 0 : 0) {
  HEAP32[14733] = 0;
  HEAP32[14734] = 0;
  HEAP32[14735] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(58932, 15148, __ZNSt3__211char_traitsIwE6lengthEPKw(15148) | 0);
 }
 return 58932;
}

function __ZNKSt3__220__time_get_c_storageIcE3__xEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56384] | 0) == 0 ? ___cxa_guard_acquire(56384) | 0 : 0) {
  HEAP32[14719] = 0;
  HEAP32[14720] = 0;
  HEAP32[14721] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(58876, 48087, __ZNSt3__211char_traitsIcE6lengthEPKc(48087) | 0);
 }
 return 58876;
}

function __ZNKSt3__220__time_get_c_storageIcE3__rEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56392] | 0) == 0 ? ___cxa_guard_acquire(56392) | 0 : 0) {
  HEAP32[14722] = 0;
  HEAP32[14723] = 0;
  HEAP32[14724] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(58888, 48096, __ZNSt3__211char_traitsIcE6lengthEPKc(48096) | 0);
 }
 return 58888;
}

function __ZNKSt3__220__time_get_c_storageIcE3__cEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56400] | 0) == 0 ? ___cxa_guard_acquire(56400) | 0 : 0) {
  HEAP32[14725] = 0;
  HEAP32[14726] = 0;
  HEAP32[14727] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(58900, 48108, __ZNSt3__211char_traitsIcE6lengthEPKc(48108) | 0);
 }
 return 58900;
}

function __ZNKSt3__220__time_get_c_storageIcE3__XEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56376] | 0) == 0 ? ___cxa_guard_acquire(56376) | 0 : 0) {
  HEAP32[14716] = 0;
  HEAP32[14717] = 0;
  HEAP32[14718] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(58864, 48078, __ZNSt3__211char_traitsIcE6lengthEPKc(48078) | 0);
 }
 return 58864;
}

function _arMatrixAlloc(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0;
 i1 = _malloc(12) | 0;
 do if (i1) {
  i4 = _malloc(Math_imul(i2 << 3, i3) | 0) | 0;
  HEAP32[i1 >> 2] = i4;
  if (!i4) {
   _free(i1);
   i1 = 0;
   break;
  } else {
   HEAP32[i1 + 4 >> 2] = i2;
   HEAP32[i1 + 8 >> 2] = i3;
   break;
  }
 } else i1 = 0; while (0);
 return i1 | 0;
}

function __ZSt9terminatev() {
 var i1 = 0, i2 = 0;
 i1 = ___cxa_get_globals_fast() | 0;
 if ((i1 | 0 ? (i2 = HEAP32[i1 >> 2] | 0, i2 | 0) : 0) ? (i1 = i2 + 48 | 0, (HEAP32[i1 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[i1 + 4 >> 2] | 0) == 1129074247 : 0) : 0) __ZSt11__terminatePFvvE(HEAP32[i2 + 12 >> 2] | 0);
 __ZSt11__terminatePFvvE(__ZSt13get_terminatev() | 0);
}

function __ZNSt3__218__libcpp_refstringD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 if (__ZNKSt3__218__libcpp_refstring15__uses_refcountEv(i1) | 0 ? (i2 = __ZNSt3__215__refstring_imp12_GLOBAL__N_113rep_from_dataEPKc_1023(HEAP32[i1 >> 2] | 0) | 0, i3 = i2 + 8 | 0, i1 = HEAP32[i3 >> 2] | 0, HEAP32[i3 >> 2] = i1 + -1, (i1 + -1 | 0) < 0) : 0) __ZdlPv(i2);
 return;
}

function __ZNK6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE13queryKeyframeEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = HEAP32[i1 + 64 >> 2];
 i1 = HEAP32[i1 + 68 >> 2] | 0;
 HEAP32[i2 + 4 >> 2] = i1;
 if (i1 | 0) {
  i2 = i1 + 4 | 0;
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
 }
 return;
}

function _calloc(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 if (i2) {
  i1 = Math_imul(i3, i2) | 0;
  if ((i3 | i2) >>> 0 > 65535) i1 = ((i1 >>> 0) / (i2 >>> 0) | 0 | 0) == (i3 | 0) ? i1 : -1;
 } else i1 = 0;
 i2 = _malloc(i1) | 0;
 if (!i2) return i2 | 0;
 if (!(HEAP32[i2 + -4 >> 2] & 3)) return i2 | 0;
 _memset(i2 | 0, 0, i1 | 0) | 0;
 return i2 | 0;
}

function _arUtilGetPixelSize(i1) {
 i1 = i1 | 0;
 switch (i1 | 0) {
 case 1:
 case 0:
  {
   i1 = 3;
   break;
  }
 case 6:
 case 4:
 case 3:
 case 2:
  {
   i1 = 4;
   break;
  }
 case 14:
 case 13:
 case 12:
 case 5:
  {
   i1 = 1;
   break;
  }
 case 11:
 case 10:
 case 9:
 case 8:
 case 7:
  {
   i1 = 2;
   break;
  }
 default:
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__214__split_bufferItRNS_9allocatorItEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -2 | 0;
  HEAP32[i3 >> 2] = i5;
  i4 = i5;
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -4 | 0;
  HEAP32[i3 >> 2] = i5;
  i4 = i5;
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__214__split_bufferIfRNS_9allocatorIfEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -4 | 0;
  HEAP32[i3 >> 2] = i5;
  i4 = i5;
 }
 i1 = HEAP32[i1 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 8 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  HEAP32[i2 >> 2] = 0;
  i2 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function __ZN6vision16SequentialVectorIiEEvPT_iS1_(i3, i4, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i5 = 0;
 L1 : do if ((i4 | 0) >= 1) {
  HEAP32[i3 >> 2] = i1;
  i2 = 1;
  while (1) {
   if ((i2 | 0) == (i4 | 0)) break L1;
   i5 = i1 + 1 | 0;
   HEAP32[i3 + (i2 << 2) >> 2] = i5;
   i2 = i2 + 1 | 0;
   i1 = i5;
  }
 } while (0);
 return;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 4 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  __ZN6vision12FeaturePointC2Ev(i2);
  i2 = (HEAP32[i3 >> 2] | 0) + 20 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function __ZNSt3__213unordered_mapIiNS_6vectorIiNS_9allocatorIiEEEENS_4hashIiEENS_8equal_toIiEENS2_INS_4pairIKiS4_EEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEED2Ev(i1);
 return;
}

function __ZN6vision4NodeILi96EEC2Ei(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = i2;
 HEAP8[i1 + 100 >> 0] = 1;
 i2 = i1 + 104 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 __ZN6vision10ZeroVectorIhEEvPT_m(i1 + 4 | 0, 96);
 return;
}

function __ZN6vision25bilinear_downsample_pointERfS0_S0_fffi(i1, i2, i3, d4, d5, d6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 i7 = i7 | 0;
 var d8 = 0.0, d9 = 0.0;
 d8 = 1.0 / +(1 << i7 | 0);
 d9 = d8 * .5 + -.5;
 HEAPF32[i1 >> 2] = d8 * d4 + d9;
 HEAPF32[i2 >> 2] = d8 * d5 + d9;
 HEAPF32[i3 >> 2] = d8 * d6;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8allocateEm(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8align_upEm(i1) | 0;
 i3 = i4 + 4096 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if ((i4 + 4096 - i1 | 0) >>> 0 < i2 >>> 0) i1 = _malloc(i2) | 0; else HEAP32[i3 >> 2] = i1 + i2;
 return i1 | 0;
}

function ___uflow(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i2 = i3;
 if ((___toread(i1) | 0) == 0 ? (FUNCTION_TABLE_iiii[HEAP32[i1 + 32 >> 2] & 63](i1, i2, 1) | 0) == 1 : 0) i1 = HEAPU8[i2 >> 0] | 0; else i1 = -1;
 STACKTOP = i3;
 return i1 | 0;
}

function __ZNSt3__210shared_ptrIhED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = HEAP32[i1 + 4 >> 2] | 0;
 if (i1 | 0 ? (i3 = i1 + 4 | 0, i2 = HEAP32[i3 >> 2] | 0, HEAP32[i3 >> 2] = i2 + -1, (i2 | 0) == 0) : 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
  __ZNSt3__219__shared_weak_count14__release_weakEv(i1);
 }
 return;
}

function _arImageProcLumaHistAndCDF(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 i1 = _arImageProcLumaHist(i3, i1) | 0;
 if ((i1 | 0) >= 0) {
  i1 = 0;
  i2 = 0;
  do {
   i1 = (HEAP32[i3 + 12 + (i2 << 2) >> 2] | 0) + i1 | 0;
   HEAP32[i3 + 1036 + (i2 << 2) >> 2] = i1;
   i2 = i2 + 1 | 0;
  } while ((i2 | 0) != 256);
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 8 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  __ZN6vision5ImageC2Ev(i2);
  i2 = (HEAP32[i3 >> 2] | 0) + 32 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 4 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  __ZN6vision7Point2dIfEC2Ev(i2);
  i2 = (HEAP32[i3 >> 2] | 0) + 8 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 4 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  HEAP32[i2 >> 2] = 0;
  i2 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function __ZN6vision40Homography3PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i3 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i1, i2, i3) > 0.0;
 return i3 ^ +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i4, i5, i6) > 0.0 ^ 1 | 0;
}

function _getint_729(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 if (!(_isdigit(HEAP8[HEAP32[i2 >> 2] >> 0] | 0) | 0)) i1 = 0; else {
  i1 = 0;
  do {
   i3 = HEAP32[i2 >> 2] | 0;
   i1 = (i1 * 10 | 0) + -48 + (HEAP8[i3 >> 0] | 0) | 0;
   i3 = i3 + 1 | 0;
   HEAP32[i2 >> 2] = i3;
  } while ((_isdigit(HEAP8[i3 >> 0] | 0) | 0) != 0);
 }
 return i1 | 0;
}

function ___unlist_locked_file(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (HEAP32[i1 + 68 >> 2] | 0) {
  i2 = HEAP32[i1 + 132 >> 2] | 0;
  i1 = i1 + 128 | 0;
  if (i2 | 0) HEAP32[i2 + 128 >> 2] = HEAP32[i1 >> 2];
  i1 = HEAP32[i1 >> 2] | 0;
  if (!i1) i1 = (___pthread_self_604() | 0) + 232 | 0; else i1 = i1 + 132 | 0;
  HEAP32[i1 >> 2] = i2;
 }
 return;
}

function __ZNSt3__213unordered_mapIiP14AR2SurfaceSetTNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS2_EEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEED2Ev(i1);
 return;
}

function _find_biggest_volume(i1, i5) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i2 = 0;
 i3 = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) >= (i5 | 0)) break;
  i6 = HEAP32[i1 + 24 >> 2] | 0;
  i7 = (i6 | 0) > (i3 | 0);
  i2 = i7 ? i1 : i2;
  i3 = i7 ? i6 : i3;
  i4 = i4 + 1 | 0;
  i1 = i1 + 32 | 0;
 }
 return i2 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm(i1, i2, i3, __ZNSt3__211char_traitsIcE6lengthEPKc(i3) | 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1, i2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1 + 12 | 0, i2 + 12 | 0);
 return;
}

function _start_input_pass_33(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 _per_scan_setup_34(i1);
 _latch_quant_tables(i1);
 FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 + 444 >> 2] >> 2] & 255](i1);
 i2 = i1 + 428 | 0;
 FUNCTION_TABLE_vi[HEAP32[HEAP32[i2 >> 2] >> 2] & 255](i1);
 HEAP32[HEAP32[i1 + 436 >> 2] >> 2] = HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2];
 return;
}

function _fmt_x(i3, i2, i1, i4) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 if (!((i3 | 0) == 0 & (i2 | 0) == 0)) do {
  i1 = i1 + -1 | 0;
  HEAP8[i1 >> 0] = HEAPU8[4448 + (i3 & 15) >> 0] | 0 | i4;
  i3 = _bitshift64Lshr(i3 | 0, i2 | 0, 4) | 0;
  i2 = getTempRet0() | 0;
 } while (!((i3 | 0) == 0 & (i2 | 0) == 0));
 return i1 | 0;
}

function __ZN6vision9MaxIndex5IfEEiPKT_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = +HEAPF32[i1 + 4 >> 2] > +HEAPF32[i1 >> 2] & 1;
 i2 = +HEAPF32[i1 + 8 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 2 : i2;
 i2 = +HEAPF32[i1 + 12 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 3 : i2;
 return (+HEAPF32[i1 + 16 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 4 : i2) | 0;
}

function __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 4 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  __ZN6vision5ImageC2Ev(i2);
  i2 = (HEAP32[i3 >> 2] | 0) + 32 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function __ZN6vision18BinomialPyramid32fD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 13484;
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev(i1 + 56 | 0);
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev(i1 + 44 | 0);
 __ZNSt3__213__vector_baseItNS_9allocatorItEEED2Ev(i1 + 32 | 0);
 __ZN6vision25GaussianScaleSpacePyramidD2Ev(i1);
 return;
}

function ___stdio_close(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i1 = _dummy_465(HEAP32[i1 + 60 >> 2] | 0) | 0;
 HEAP32[i3 >> 2] = i1;
 i1 = ___syscall_ret(___syscall6(6, i3 | 0) | 0) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZN6vision16RobustHomographyIfEC2Efiii(i1, d2, i3, i4, i5) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0;
 i6 = i1;
 i7 = i6 + 36 | 0;
 do {
  HEAP32[i6 >> 2] = 0;
  i6 = i6 + 4 | 0;
 } while ((i6 | 0) < (i7 | 0));
 __ZN6vision16RobustHomographyIfE4initEfiii(i1, d2, i3, i4, i5);
 return;
}

function _rewind(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP32[i1 + 76 >> 2] | 0) > -1) {
  i2 = (___lockfile(i1) | 0) == 0;
  ___fseeko_unlocked(i1, 0, 0, 0) | 0;
  HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -33;
  if (!i2) ___unlockfile(i1);
 } else {
  ___fseeko_unlocked(i1, 0, 0, 0) | 0;
  HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -33;
 }
 return;
}

function _ar2CreateHandle(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i3 = _ar2CreateHandleSub(i2, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0, i3) | 0;
 HEAP32[i3 >> 2] = 1;
 HEAP32[i3 + 12 >> 2] = i1;
 i2 = _icpCreateHandle(i1 + 8 | 0) | 0;
 HEAP32[i3 + 16 >> 2] = i2;
 _icpSetInlierProbability(i2, 0.0) | 0;
 return i3 | 0;
}

function __ZNK10__cxxabiv112_GLOBAL__N_111string_pair4sizeEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i1 = HEAP8[i2 + 11 >> 0] | 0;
 if (i1 << 24 >> 24 < 0) i3 = HEAP32[i2 + 4 >> 2] | 0; else i3 = i1 & 255;
 i1 = HEAP8[i2 + 12 + 11 >> 0] | 0;
 if (i1 << 24 >> 24 < 0) i1 = HEAP32[i2 + 16 >> 2] | 0; else i1 = i1 & 255;
 return i1 + i3 | 0;
}

function ___cxa_get_globals_fast() {
 var i1 = 0, i2 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (!(_pthread_once(59220, 2) | 0)) {
  i2 = _pthread_getspecific(HEAP32[14806] | 0) | 0;
  STACKTOP = i1;
  return i2 | 0;
 } else _abort_message(50074, i1);
 return 0;
}

function __ZNSt3__25ctypeIcEC2EPKtbm(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 4 >> 2] = i1 + -1;
 HEAP32[i2 >> 2] = 16856;
 i1 = i2 + 8 | 0;
 HEAP32[i1 >> 2] = i3;
 HEAP8[i2 + 12 >> 0] = i4 & 1;
 if (!i3) {
  i4 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0;
  HEAP32[i1 >> 2] = i4;
 }
 return;
}

function __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -1 | 0;
  HEAP32[i3 >> 2] = i5;
  i4 = i5;
 }
 __ZdlPv(HEAP32[i1 >> 2] | 0);
 return;
}

function __ZN6vision5ImageC2ERKS0_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 24 >> 2] = 0;
 HEAP32[i1 + 28 >> 2] = 0;
 __ZN6vision5Image11shallowCopyERKS0_(i1, i2);
 return;
}

function _arDeleteHandle(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 if (!i1) i1 = -1; else {
  i2 = i1 + 7062408 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if (i3 | 0) {
   _arImageProcFinal(i3);
   HEAP32[i2 >> 2] = 0;
  }
  _free(HEAP32[i1 + 4834144 >> 2] | 0);
  _free(HEAP32[i1 + 4834148 >> 2] | 0);
  _free(i1);
  i1 = 0;
 }
 return i1 | 0;
}

function ___munmap(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = i1;
 HEAP32[i4 + 4 >> 2] = i2;
 i2 = ___syscall_ret(___syscall91(91, i4 | 0) | 0) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i6 = i1;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 i6 = i1 + 8 | 0;
 HEAP32[i6 >> 2] = -1;
 HEAP32[i6 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i6 = i1;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 i6 = i1 + 8 | 0;
 HEAP32[i6 >> 2] = -1;
 HEAP32[i6 + 4 >> 2] = -1;
 return;
}

function __ZN6vision14BinarykMedoidsILi96EED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev(i1 + 48 | 0);
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev(i1 + 36 | 0);
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev(i1 + 24 | 0);
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev(i1 + 12 | 0);
 return;
}

function __ZN6vision5Timer5startEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 _gettimeofday(i3 | 0, 0) | 0;
 HEAPF64[i1 >> 3] = +(HEAP32[i3 + 4 >> 2] | 0) * 1.0e-06 + +(HEAP32[i3 >> 2] | 0);
 STACKTOP = i2;
 return;
}

function _jpeg_idct_1x1(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i3 = (HEAP32[i1 + 324 >> 2] | 0) + 128 + (((Math_imul(HEAP32[HEAP32[i2 + 80 >> 2] >> 2] | 0, HEAP16[i3 >> 1] | 0) | 0) + 4 | 0) >>> 3 & 1023) | 0;
 HEAP8[(HEAP32[i4 >> 2] | 0) + i5 >> 0] = HEAP8[i3 >> 0] | 0;
 return;
}

function __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  if ((i2 | 0) == (i1 + 16 | 0)) {
   HEAP8[i1 + 128 >> 0] = 0;
   break;
  } else {
   __ZdlPv(i2);
   break;
  }
 } while (0);
 return;
}

function __ZNKSt3__212_GLOBAL__N_111__fake_bindclEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i4 = HEAP32[i1 + 8 >> 2] | 0;
 i3 = (HEAP32[i1 >> 2] | 0) + (i4 >> 1) | 0;
 if (!(i4 & 1)) i1 = i2; else i1 = HEAP32[(HEAP32[i3 >> 2] | 0) + i2 >> 2] | 0;
 FUNCTION_TABLE_vi[i1 & 255](i3);
 return;
}

function __ZN6vision25GaussianScaleSpacePyramid9configureEii(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var d4 = 0.0;
 HEAP32[i1 + 16 >> 2] = i2;
 HEAP32[i1 + 20 >> 2] = i3;
 d4 = +_llvm_exp2_f32(+(1.0 / +(i3 + -1 | 0)));
 HEAPF32[i1 + 24 >> 2] = d4;
 d4 = 1.0 / +Math_log(+d4);
 HEAPF32[i1 + 28 >> 2] = d4;
 return;
}

function __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 8 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  HEAP8[i2 >> 0] = 0;
  i2 = (HEAP32[i3 >> 2] | 0) + 1 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function __ZN10emscripten8constantIiEEvPKcRKT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = __ZN10emscripten8internal6TypeIDIRKiE3getEv() | 0;
 __embind_register_constant(i1 | 0, i3 | 0, +(+__ZN10emscripten8internal14asGenericValueIiEEdT_(__ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi(i2) | 0)));
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 _free(i1);
 if (!(_pthread_setspecific(HEAP32[14806] | 0, 0) | 0)) {
  STACKTOP = i2;
  return;
 } else _abort_message(50173, i2);
}

function _threadWaitQuit(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 16 | 0;
 _pthread_mutex_lock(i2) | 0;
 HEAP32[i1 + 4 >> 2] = 2;
 _pthread_cond_signal(i1 + 44 | 0) | 0;
 i3 = i1 + 8 | 0;
 i1 = i1 + 92 | 0;
 while (1) {
  if ((HEAP32[i3 >> 2] | 0) == 2) break;
  _pthread_cond_wait(i1 | 0, i2 | 0) | 0;
 }
 return 0;
}

function _snprintf(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 HEAP32[i6 >> 2] = i4;
 i4 = _vsnprintf(i1, i2, i3, i6) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 14180;
 __ZNSt3__26localeC2Ev(i1 + 4 | 0);
 i1 = i1 + 8 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 14116;
 __ZNSt3__26localeC2Ev(i1 + 4 | 0);
 i1 = i1 + 8 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 return;
}

function _matrixCopy(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 4) break;
   HEAPF64[i4 + (i2 << 5) + (i1 << 3) >> 3] = +HEAPF64[i3 + (i2 << 5) + (i1 << 3) >> 3];
   i1 = i1 + 1 | 0;
  }
  i2 = i2 + 1 | 0;
 }
 return;
}

function ___fseeko(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i5 = 0;
 if ((HEAP32[i4 + 76 >> 2] | 0) > -1) {
  i5 = (___lockfile(i4) | 0) == 0;
  i1 = ___fseeko_unlocked(i4, i1, i2, i3) | 0;
  if (!i5) ___unlockfile(i4);
 } else i1 = ___fseeko_unlocked(i4, i1, i2, i3) | 0;
 return i1 | 0;
}

function __ZN10emscripten8constantIdEEvPKcRKT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = __ZN10emscripten8internal6TypeIDIRKdE3getEv() | 0;
 __embind_register_constant(i1 | 0, i3 | 0, +(+__ZN10emscripten8internal14asGenericValueIdEEdT_(+__ZN10emscripten8internal11BindingTypeIdE10toWireTypeERKd(i2))));
 return;
}

function _ar2GetTriangleArea(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var d4 = 0.0, d5 = 0.0;
 d4 = +HEAPF32[i1 >> 2];
 d5 = +HEAPF32[i1 + 4 >> 2];
 d4 = ((+HEAPF32[i2 >> 2] - d4) * (+HEAPF32[i3 + 4 >> 2] - d5) - (+HEAPF32[i2 + 4 >> 2] - d5) * (+HEAPF32[i3 >> 2] - d4)) * .5;
 return +(d4 < 0.0 ? -d4 : d4);
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEEC2EmRKS8_RKS9_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i1, i2, __ZNSt3__211char_traitsIcE6lengthEPKc(i2) | 0) | 0;
}

function __ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc(i3, i1, i4, i5, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  i3 = HEAP8[i1 >> 0] | 0;
  HEAP8[i2 >> 0] = i3 << 24 >> 24 > -1 ? i3 : i5;
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 return i4 | 0;
}

function _sn_write(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = i1 + 20 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i1 = (HEAP32[i1 + 16 >> 2] | 0) - i5 | 0;
 i1 = i1 >>> 0 > i3 >>> 0 ? i3 : i1;
 _memcpy(i5 | 0, i2 | 0, i1 | 0) | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + i1;
 return i3 | 0;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0;
 if ((HEAP32[i2 + 4 >> 2] | 0) == (i3 | 0) ? (i5 = i2 + 28 | 0, (HEAP32[i5 >> 2] | 0) != 1) : 0) HEAP32[i5 >> 2] = i4;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcm(i1, i2, __ZNSt3__211char_traitsIcE6lengthEPKc(i2) | 0);
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEEC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 if (i2 | 0) {
  __ZNSt3__26vectorIiNS_9allocatorIiEEE8allocateEm(i1, i2);
  __ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endEm(i1, i2);
 }
 return;
}

function __ZNSt3__26vectorIfNS_9allocatorIfEEEC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 if (i2 | 0) {
  __ZNSt3__26vectorIfNS_9allocatorIfEEE8allocateEm(i1, i2);
  __ZNSt3__26vectorIfNS_9allocatorIfEEE18__construct_at_endEm(i1, i2);
 }
 return;
}

function __ZNSt3__28ios_baseD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 14100;
 __ZNSt3__28ios_base16__call_callbacksENS0_5eventE(i1, 0);
 __ZNSt3__26localeD2Ev(i1 + 28 | 0);
 _free(HEAP32[i1 + 32 >> 2] | 0);
 _free(HEAP32[i1 + 36 >> 2] | 0);
 _free(HEAP32[i1 + 48 >> 2] | 0);
 _free(HEAP32[i1 + 60 >> 2] | 0);
 return;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 4 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  HEAP8[i2 >> 0] = 0;
  i2 = (HEAP32[i3 >> 2] | 0) + 1 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function ___memrchr(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 L1 : do if (!i1) i1 = 0; else {
  i2 = i2 & 255;
  while (1) {
   i1 = i1 + -1 | 0;
   if ((HEAP8[i3 + i1 >> 0] | 0) == i2 << 24 >> 24) break;
   if (!i1) {
    i1 = 0;
    break L1;
   }
  }
  i1 = i3 + i1 | 0;
 } while (0);
 return i1 | 0;
}

function __ZNKSt3__27collateIwE7do_hashEPKwS3_(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i2 = 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i4 = (HEAP32[i1 >> 2] | 0) + (i2 << 4) | 0;
  i5 = i4 & -268435456;
  i2 = (i5 >>> 24 | i5) ^ i4;
  i1 = i1 + 4 | 0;
 }
 return i2 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE10deallocateEPS8_m(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE10deallocateEPcm(HEAP32[i1 >> 2] | 0, i2, i3 << 4);
 return;
}

function __ZNKSt3__27collateIcE7do_hashEPKcS3_(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i2 = 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i4 = (i2 << 4) + (HEAP8[i1 >> 0] | 0) | 0;
  i5 = i4 & -268435456;
  i2 = (i5 >>> 24 | i5) ^ i4;
  i1 = i1 + 1 | 0;
 }
 return i2 | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getTypesEv(i1) {
 i1 = i1 | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEE3getEv() | 0;
}

function __ZNSt3__213unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEED2Ev(i1);
 return;
}

function __ZN6vision21HoughSimilarityVotingD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev(i1 + 124 | 0);
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev(i1 + 112 | 0);
 __ZNSt3__213unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEED2Ev(i1 + 92 | 0);
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i1 = i1 + 8 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 _memset(i3 | 0, 0, i2 * 12 | 0) | 0;
 HEAP32[i1 >> 2] = i3 + (i2 * 12 | 0);
 return;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getTypesEv(i1) {
 i1 = i1 | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEE3getEv() | 0;
}

function __ZN10emscripten8internal7InvokerIvJiiEE6invokeEPFviiEii(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i2 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi(i2) | 0;
 i3 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi(i3) | 0;
 FUNCTION_TABLE_vii[i1 & 63](i2, i3);
 return;
}

function _arParamLTFree(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((i1 | 0) != 0 ? (i2 = HEAP32[i1 >> 2] | 0, (i2 | 0) != 0) : 0) {
  _free(HEAP32[i2 + 184 >> 2] | 0);
  _free(HEAP32[(HEAP32[i1 >> 2] | 0) + 188 >> 2] | 0);
  _free(HEAP32[i1 >> 2] | 0);
  HEAP32[i1 >> 2] = 0;
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function __ZN6vision13LinePointSideIfEET_PKS1_S3_S3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var d4 = 0.0, d5 = 0.0;
 d4 = +HEAPF32[i1 >> 2];
 d5 = +HEAPF32[i1 + 4 >> 2];
 return +((+HEAPF32[i2 >> 2] - d4) * (+HEAPF32[i3 + 4 >> 2] - d5) - (+HEAPF32[i2 + 4 >> 2] - d5) * (+HEAPF32[i3 >> 2] - d4));
}

function _abort_message(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = i2;
 i3 = HEAP32[3454] | 0;
 _vfprintf(i3, i1, i4) | 0;
 _fputc(10, i3) | 0;
 _abort();
}

function __ZNKSt3__28numpunctIwE12do_falsenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(i1, 16980, __ZNSt3__211char_traitsIwE6lengthEPKw(16980) | 0);
 return;
}

function __ZNKSt3__28numpunctIcE12do_falsenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i1, 51726, __ZNSt3__211char_traitsIcE6lengthEPKc(51726) | 0);
 return;
}

function _arUtilRemoveExt(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = -1;
 i2 = 0;
 L1 : while (1) {
  switch (HEAP8[i3 + i2 >> 0] | 0) {
  case 0:
   break L1;
  case 46:
   {
    i1 = i2;
    break;
   }
  default:
   {}
  }
  i2 = i2 + 1 | 0;
 }
 if ((i1 | 0) != -1) HEAP8[i3 + i1 >> 0] = 0;
 return 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEmmPKc(i1) {
 i1 = i1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEmmPKcm(i1, __ZNSt3__211char_traitsIcE6lengthEPKc(51945) | 0);
 return;
}

function __ZNKSt3__28numpunctIwE11do_truenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(i1, 17004, __ZNSt3__211char_traitsIwE6lengthEPKw(17004) | 0);
 return;
}

function __ZNKSt3__28numpunctIcE11do_truenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i1, 51732, __ZNSt3__211char_traitsIcE6lengthEPKc(51732) | 0);
 return;
}

function __ZN6vision20VisualDatabaseFacadeC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 HEAP32[i1 >> 2] = 0;
 i3 = __Znwm(24) | 0;
 __ZN6vision18VisualDatabaseImplC2Ev(i3);
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i3;
 if (i2 | 0) {
  __ZN6vision18VisualDatabaseImplD2Ev(i2);
  __ZdlPv(i2);
 }
 return;
}

function _threadEndWait(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 16 | 0;
 _pthread_mutex_lock(i2) | 0;
 i3 = i1 + 8 | 0;
 i1 = i1 + 92 | 0;
 while (1) {
  if (HEAP32[i3 >> 2] | 0) break;
  _pthread_cond_wait(i1 | 0, i2 | 0) | 0;
 }
 HEAP32[i3 >> 2] = 0;
 _pthread_mutex_unlock(i2) | 0;
 return 0;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE10deallocateEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  i3 = i1 + 4 | 0;
  HEAP32[i3 >> 2] = i2;
  __ZdlPv(i2);
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i3 >> 2] = 0;
  HEAP32[i1 >> 2] = 0;
 }
 return;
}

function __ZNSt3__219__shared_weak_count14__release_weakEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 8 | 0;
 if (!((HEAP32[i2 >> 2] | 0) != 0 ? (i3 = HEAP32[i2 >> 2] | 0, HEAP32[i2 >> 2] = i3 + -1, (i3 | 0) != 0) : 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 255](i1);
 return;
}

function __ZN10emscripten8internal7InvokerIvJifEE6invokeEPFvifEif(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i2 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi(i2) | 0;
 d3 = +__ZN10emscripten8internal11BindingTypeIfE12fromWireTypeEf(d3);
 FUNCTION_TABLE_vid[i1 & 3](i2, d3);
 return;
}

function __ZN10emscripten8internal7InvokerIvJidEE6invokeEPFvidEid(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i2 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi(i2) | 0;
 d3 = +__ZN10emscripten8internal11BindingTypeIdE12fromWireTypeEd(d3);
 FUNCTION_TABLE_vid[i1 & 3](i2, d3);
 return;
}

function __ZN6vision25GaussianScaleSpacePyramidC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 13500;
 i1 = i1 + 4 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 24 >> 2] = 0;
 return;
}

function _ar2GetTransMatHomography(i2, i3, i4, i5, i6, i7, d1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 d1 = +d1;
 if (!i7) d1 = +_ar2GetTransMatHomography2(i2, i3, i4, i5, i6); else d1 = +_ar2GetTransMatHomographyRobust(i2, i3, i4, i5, i6, d1);
 return +d1;
}

function _sprintf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 HEAP32[i5 >> 2] = i3;
 i3 = _vsprintf(i1, i2, i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function _fprintf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 HEAP32[i5 >> 2] = i3;
 i3 = _vfprintf(i1, i2, i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function __ZN6vision23bilinear_upsample_pointERfS0_ffi(i1, i2, d3, d4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 var d6 = 0.0, d7 = 0.0;
 d6 = +_ldexp(1.0, i5 + -1 | 0) + -.5;
 d7 = +(1 << i5 | 0);
 HEAPF32[i1 >> 2] = d7 * d3 + d6;
 HEAPF32[i2 >> 2] = d7 * d4 + d6;
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = i1;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = i1 + 8 | 0;
 HEAP32[i4 >> 2] = -1;
 HEAP32[i4 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = i1;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = i1 + 8 | 0;
 HEAP32[i4 >> 2] = -1;
 HEAP32[i4 + 4 >> 2] = -1;
 return;
}

function dynCall_iiiiiiiii(i9, i1, i2, i3, i4, i5, i6, i7, i8) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 return FUNCTION_TABLE_iiiiiiiii[i9 & 15](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0, i8 | 0) | 0;
}

function _sscanf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 HEAP32[i5 >> 2] = i3;
 i3 = _vsscanf(i1, i2, i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function _fmt_o(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!((i3 | 0) == 0 & (i2 | 0) == 0)) do {
  i1 = i1 + -1 | 0;
  HEAP8[i1 >> 0] = i3 & 7 | 48;
  i3 = _bitshift64Lshr(i3 | 0, i2 | 0, 3) | 0;
  i2 = getTempRet0() | 0;
 } while (!((i3 | 0) == 0 & (i2 | 0) == 0));
 return i1 | 0;
}

function _start_output_pass(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = HEAP32[i1 + 428 >> 2] | 0;
 if (HEAP32[i2 + 16 >> 2] | 0) {
  if ((HEAP32[i1 + 80 >> 2] | 0) != 0 ? (_smoothing_ok(i1) | 0) != 0 : 0) i3 = 24; else i3 = 22;
  HEAP32[i2 + 12 >> 2] = i3;
 }
 HEAP32[i1 + 156 >> 2] = 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i1 + 12 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i1);
 return;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEC2EmRKS6_RKS7_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i1 = i1 + 4 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 _memset(i3 | 0, 0, i2 * 12 | 0) | 0;
 HEAP32[i1 >> 2] = i3 + (i2 * 12 | 0);
 return;
}

function __ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i3 = _catopen((HEAP8[i2 + 11 >> 0] | 0) < 0 ? HEAP32[i2 >> 2] | 0 : i2, 1) | 0;
 return i3 >>> ((i3 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i3 = _catopen((HEAP8[i2 + 11 >> 0] | 0) < 0 ? HEAP32[i2 >> 2] | 0 : i2, 1) | 0;
 return i3 >>> ((i3 | 0) != (-1 | 0) & 1) | 0;
}

function _reset_marker_reader(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 440 >> 2] | 0;
 HEAP32[i1 + 216 >> 2] = 0;
 HEAP32[i1 + 144 >> 2] = 0;
 HEAP32[i1 + 416 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 24 >> 2] = 0;
 HEAP32[i2 + 164 >> 2] = 0;
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i1 = i1 + 8 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 _memset(i3 | 0, 0, i2 * 12 | 0) | 0;
 HEAP32[i1 >> 2] = i3 + (i2 * 12 | 0);
 return;
}

function ___muldi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = i1;
 i6 = i3;
 i3 = ___muldsi3(i5, i6) | 0;
 i1 = getTempRet0() | 0;
 return (setTempRet0((Math_imul(i2, i6) | 0) + (Math_imul(i4, i5) | 0) + i1 | i1 & 0 | 0), i3 | 0 | 0) | 0;
}

function _arVecAlloc(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i1 = _malloc(8) | 0;
 do if (i1) {
  i3 = _malloc(i2 << 3) | 0;
  HEAP32[i1 >> 2] = i3;
  if (!i3) {
   _free(i1);
   i1 = 0;
   break;
  } else {
   HEAP32[i1 + 4 >> 2] = i2;
   break;
  }
 } else i1 = 0; while (0);
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE10deallocateEPS6_m(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE10deallocateEPcm(HEAP32[i1 >> 2] | 0, i2, i3 << 4);
 return;
}

function _testSetjmp(i3, i5, i4) {
 i3 = i3 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0;
 while ((i2 | 0) < (i4 | 0)) {
  i1 = HEAP32[i5 + (i2 << 3) >> 2] | 0;
  if (!i1) break;
  if ((i1 | 0) == (i3 | 0)) return HEAP32[i5 + ((i2 << 3) + 4) >> 2] | 0;
  i2 = i2 + 1 | 0;
 }
 return 0;
}

function __ZN6vision25bilinear_downsample_pointERfS0_ffi(i1, i2, d3, d4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 var d6 = 0.0, d7 = 0.0;
 d7 = 1.0 / +(1 << i5 | 0);
 d6 = d7 * .5 + -.5;
 HEAPF32[i1 >> 2] = d7 * d3 + d6;
 HEAPF32[i2 >> 2] = d7 * d4 + d6;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var i1 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (!(_pthread_key_create(59224, 145) | 0)) {
  STACKTOP = i1;
  return;
 } else _abort_message(50123, i1);
}

function __ZN6vision12FeaturePointC2Effffb(i1, d2, d3, d4, d5, i6) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 i6 = i6 | 0;
 HEAPF32[i1 >> 2] = d2;
 HEAPF32[i1 + 4 >> 2] = d3;
 HEAPF32[i1 + 8 >> 2] = d4;
 HEAPF32[i1 + 12 >> 2] = d5;
 HEAP8[i1 + 16 >> 0] = i6 & 1;
 return;
}

function _jinit_master_decompress(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 1, 28) | 0;
 HEAP32[i1 + 420 >> 2] = i2;
 HEAP32[i2 >> 2] = 120;
 HEAP32[i2 + 4 >> 2] = 121;
 HEAP32[i2 + 8 >> 2] = 0;
 _master_selection(i1);
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN6vision13Similarity2x2IfEEvPT_S1_S1_(i1, d2, d3) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 var d4 = 0.0;
 d4 = +Math_cos(+d2) * d3;
 d3 = +Math_sin(+d2) * d3;
 HEAPF32[i1 >> 2] = d4;
 HEAPF32[i1 + 4 >> 2] = -d3;
 HEAPF32[i1 + 8 >> 2] = d3;
 HEAPF32[i1 + 12 >> 2] = d4;
 return;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE10deallocateEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  i3 = i1 + 4 | 0;
  HEAP32[i3 >> 2] = i2;
  __ZdlPv(i2);
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i3 >> 2] = 0;
  HEAP32[i1 >> 2] = 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8allocateEm(HEAP32[i1 >> 2] | 0, i2 << 4) | 0;
}

function _arMatrixAllocMulf(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 i1 = _arMatrixAllocf(HEAP32[i2 + 4 >> 2] | 0, HEAP32[i3 + 8 >> 2] | 0) | 0;
 if (i1) {
  if ((_arMatrixMulf(i1, i2, i3) | 0) < 0) {
   _arMatrixFreef(i1) | 0;
   i1 = 0;
  }
 } else i1 = 0;
 return i1 | 0;
}

function __ZNSt3__212_GLOBAL__N_111__fake_bindC2EMNS_6locale2idEFvvEPS3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i2 = HEAP32[i2 + 4 >> 2] | 0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + 4 >> 2] = i4;
 HEAP32[i1 + 8 >> 2] = i2;
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function _threadFree(i1) {
 i1 = i1 | 0;
 _pthread_mutex_destroy((HEAP32[i1 >> 2] | 0) + 16 | 0) | 0;
 _pthread_cond_destroy((HEAP32[i1 >> 2] | 0) + 44 | 0) | 0;
 _pthread_cond_destroy((HEAP32[i1 >> 2] | 0) + 92 | 0) | 0;
 _free(HEAP32[i1 >> 2] | 0);
 HEAP32[i1 >> 2] = 0;
 return 0;
}

function __ZNSt3__27codecvtIwc11__mbstate_tED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 HEAP32[i1 >> 2] = 16788;
 i2 = i1 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if ((i3 | 0) != (__ZNSt3__26__clocEv() | 0)) _freelocale(HEAP32[i2 >> 2] | 0);
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function _wmemcpy(i4, i2, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 if (i1 | 0) {
  i3 = i4;
  while (1) {
   i1 = i1 + -1 | 0;
   HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
   if (!i1) break; else {
    i2 = i2 + 4 | 0;
    i3 = i3 + 4 | 0;
   }
  }
 }
 return i4 | 0;
}

function _arMatrixAllocMul(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 i1 = _arMatrixAlloc(HEAP32[i2 + 4 >> 2] | 0, HEAP32[i3 + 8 >> 2] | 0) | 0;
 if (i1) {
  if ((_arMatrixMul(i1, i2, i3) | 0) < 0) {
   _arMatrixFree(i1) | 0;
   i1 = 0;
  }
 } else i1 = 0;
 return i1 | 0;
}

function __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i1 = i1 + 4 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 _memset(i3 | 0, 0, i2 * 12 | 0) | 0;
 HEAP32[i1 >> 2] = i3 + (i2 * 12 | 0);
 return;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 HEAP32[i5 >> 2] = i3;
 HEAP32[i8 >> 2] = i6;
 return 3;
}

function __ZN6vision18BinomialPyramid32fC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 __ZN6vision25GaussianScaleSpacePyramidC2Ev(i1);
 HEAP32[i1 >> 2] = 13484;
 i1 = i1 + 32 | 0;
 i2 = i1 + 36 | 0;
 do {
  HEAP32[i1 >> 2] = 0;
  i1 = i1 + 4 | 0;
 } while ((i1 | 0) < (i2 | 0));
 return;
}

function __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i1, i2, __ZNSt3__211char_traitsIcE6lengthEPKc(i2) | 0) | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 HEAP32[i5 >> 2] = i3;
 HEAP32[i8 >> 2] = i6;
 return 3;
}

function __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i1) {
 i1 = i1 | 0;
 switch (HEAP32[i1 + 4 >> 2] & 74) {
 case 64:
  {
   i1 = 8;
   break;
  }
 case 8:
  {
   i1 = 16;
   break;
  }
 case 0:
  {
   i1 = 0;
   break;
  }
 default:
  i1 = 10;
 }
 return i1 | 0;
}

function _finish_output_pass(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 420 >> 2] | 0;
 if (HEAP32[i1 + 84 >> 2] | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 8 >> 2] & 255](i1);
 i2 = i2 + 12 | 0;
 HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
 return;
}

function __ZN6vision9MaxIndex4IfEEiPKT_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = +HEAPF32[i1 + 4 >> 2] > +HEAPF32[i1 >> 2] & 1;
 i2 = +HEAPF32[i1 + 8 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 2 : i2;
 return (+HEAPF32[i1 + 12 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 3 : i2) | 0;
}

function __ZN6vision16RobustHomographyIfED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213__vector_baseINS_4pairIfiEENS_9allocatorIS2_EEED2Ev(i1 + 24 | 0);
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev(i1 + 12 | 0);
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev(i1);
 return;
}

function dynCall_iiiiiiii(i8, i1, i2, i3, i4, i5, i6, i7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 return FUNCTION_TABLE_iiiiiiii[i8 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0) | 0;
}

function _get_buff_380(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 L1 : while (1) {
  i1 = _fgets(i2, 256, i3) | 0;
  if (!i1) {
   i1 = 0;
   break;
  }
  switch (HEAP8[i2 >> 0] | 0) {
  case 35:
  case 10:
   break;
  default:
   break L1;
  }
 }
 return i1 | 0;
}

function _get_buff_345(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 L1 : while (1) {
  i1 = _fgets(i2, 256, i3) | 0;
  if (!i1) {
   i1 = 0;
   break;
  }
  switch (HEAP8[i2 >> 0] | 0) {
  case 35:
  case 10:
   break;
  default:
   break L1;
  }
 }
 return i1 | 0;
}

function _self_destruct(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = 1;
 while (1) {
  if ((i1 | 0) <= -1) break;
  _free_pool(i2, i1);
  i1 = i1 + -1 | 0;
 }
 i1 = i2 + 4 | 0;
 _jpeg_free_small(i2, HEAP32[i1 >> 2] | 0, 84);
 HEAP32[i1 >> 2] = 0;
 _jpeg_mem_term(i2);
 return;
}

function __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i1 = i1 + 8 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 _memset(i3 | 0, 0, i2 << 3 | 0) | 0;
 HEAP32[i1 >> 2] = i3 + (i2 << 3);
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i1 = HEAP32[i1 + 8 >> 2] | 0;
 if (i1) {
  i2 = ___uselocale(i1) | 0;
  i1 = ___ctype_get_mb_cur_max() | 0;
  if (i2) ___uselocale(i2) | 0;
 } else i1 = 1;
 return i1 | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw(i1, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw(i1, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc(i1, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc(i1, 1, 45);
 return;
}

function __ZN6vision5ImageC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 24 >> 2] = 0;
 HEAP32[i1 + 28 >> 2] = 0;
 return;
}

function _arMatrixAllocTransf(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = _arMatrixAllocf(HEAP32[i2 + 8 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0) | 0;
 if (i1) {
  if ((_arMatrixTransf(i1, i2) | 0) < 0) {
   _arMatrixFreef(i1) | 0;
   i1 = 0;
  }
 } else i1 = 0;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwm(i1, i2, __ZNSt3__211char_traitsIwE6lengthEPKw(i2) | 0) | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm(i1, i2, __ZNSt3__211char_traitsIcE6lengthEPKc(i2) | 0) | 0;
}

function __ZN12arControllerD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213__vector_baseI12multi_markerNS_9allocatorIS1_EEED2Ev(i1 + 328 | 0);
 __ZNSt3__213unordered_mapIiP14AR2SurfaceSetTNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS2_EEEEED2Ev(i1 + 252 | 0);
 return;
}

function __ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 i1 = HEAP32[i1 + 12 >> 2] | 0;
 if (i1 | 0) {
  __ZN6vision8KeyframeILi96EED2Ev(i1);
  __ZdlPv(i1);
 }
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[14197] = 0;
 HEAP32[14196] = 17032;
 __ZNSt3__220__time_get_c_storageIwEC2Ev(56792);
 HEAP32[14196] = 15072;
 HEAP32[14198] = 15120;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[14193] = 0;
 HEAP32[14192] = 17032;
 __ZNSt3__220__time_get_c_storageIcEC2Ev(56776);
 HEAP32[14192] = 14988;
 HEAP32[14194] = 15036;
 return;
}

function __ZNKSt3__25ctypeIwE5do_isEtw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (i3 >>> 0 < 128) {
  i1 = (__ZNSt3__25ctypeIcE13classic_tableEv() | 0) + (i3 << 1) | 0;
  i1 = (HEAP16[i1 >> 1] & i2) << 16 >> 16 != 0;
 } else i1 = 0;
 return i1 | 0;
}

function __ZN6vision25DoGScaleInvariantDetector22setMaxNumFeaturePointsEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 84 >> 2] = i2;
 __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE7reserveEm(i1 + 60 | 0, i2);
 return;
}

function __ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc(i3, i1, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 return i4 | 0;
}

function _ferror(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 if ((HEAP32[i2 + 76 >> 2] | 0) > -1) {
  i3 = (___lockfile(i2) | 0) == 0;
  i1 = (HEAP32[i2 >> 2] | 0) >>> 5 & 1;
  if (!i3) ___unlockfile(i2);
 } else i1 = (HEAP32[i2 >> 2] | 0) >>> 5 & 1;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE10deallocateEPS2_m(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE10deallocateEPcm(HEAP32[i1 >> 2] | 0, i2, i3 * 24 | 0);
 return;
}

function _arMatrixAllocTrans(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = _arMatrixAlloc(HEAP32[i2 + 8 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0) | 0;
 if (i1) {
  if ((_arMatrixTrans(i1, i2) | 0) < 0) {
   _arMatrixFree(i1) | 0;
   i1 = 0;
  }
 } else i1 = 0;
 return i1 | 0;
}

function _ar2GetRegionArea(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var d5 = 0.0;
 i3 = i1 + (i3 << 3) | 0;
 d5 = +_ar2GetTriangleArea(i1, i1 + (i2 << 3) | 0, i3);
 return +(d5 + +_ar2GetTriangleArea(i1, i3, i1 + (i4 << 3) | 0));
}

function __ZN6vision9ExceptionC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 13516;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1 + 4 | 0, i2);
 return;
}

function __ZN6vision17HammingDistance32Ejj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i2 = i2 ^ i1;
 i2 = i2 - (i2 >>> 1 & 1431655765) | 0;
 i2 = (i2 >>> 2 & 858993459) + (i2 & 858993459) | 0;
 return (Math_imul((i2 >>> 4) + i2 & 252645135, 16843009) | 0) >>> 24 | 0;
}

function __ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw(i3, i1, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  HEAP32[i2 >> 2] = HEAP8[i1 >> 0];
  i2 = i2 + 4 | 0;
  i1 = i1 + 1 | 0;
 }
 return i4 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8allocateEm(HEAP32[i1 >> 2] | 0, i2 << 4) | 0;
}

function dynCall_viiiiiii(i8, i1, i2, i3, i4, i5, i6, i7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 FUNCTION_TABLE_viiiiiii[i8 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0);
}

function __Znwm(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = (i1 | 0) == 0 ? 1 : i1;
 while (1) {
  i1 = _malloc(i2) | 0;
  if (i1 | 0) break;
  i1 = __ZSt15get_new_handlerv() | 0;
  if (!i1) {
   i1 = 0;
   break;
  }
  FUNCTION_TABLE_v[i1 & 3]();
 }
 return i1 | 0;
}

function __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i1 = i1 + 4 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 _memset(i3 | 0, 0, i2 << 3 | 0) | 0;
 HEAP32[i1 >> 2] = i3 + (i2 << 3);
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 var i1 = 0;
 HEAP32[14205] = 0;
 HEAP32[14204] = 17032;
 i1 = __ZNSt3__26__clocEv() | 0;
 HEAP32[14206] = i1;
 HEAP32[14204] = 16268;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 var i1 = 0;
 HEAP32[14201] = 0;
 HEAP32[14200] = 17032;
 i1 = __ZNSt3__26__clocEv() | 0;
 HEAP32[14202] = i1;
 HEAP32[14200] = 16244;
 return;
}

function _arMatrixAllocDup(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = _arMatrixAlloc(HEAP32[i2 + 4 >> 2] | 0, HEAP32[i2 + 8 >> 2] | 0) | 0;
 if (i1) {
  if ((_arMatrixDup(i1, i2) | 0) < 0) {
   _arMatrixFree(i1) | 0;
   i1 = 0;
  }
 } else i1 = 0;
 return i1 | 0;
}

function __ZNSt3__26localeD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = HEAP32[i1 >> 2] | 0;
 i3 = i1 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i2 + -1;
 if (!i2) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_m(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 return __ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_mmNS_12codecvt_modeE(i3, i4, i5, 1114111, 0) | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_m(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 return __ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_mmNS_12codecvt_modeE(i3, i4, i5, 1114111, 0) | 0;
}

function __ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59072) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59064) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59056) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59048) | 0);
 return;
}

function __ZNSt3__214__split_bufferItRNS_9allocatorItEEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i1 = i1 + 8 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 _memset(i3 | 0, 0, i2 << 1 | 0) | 0;
 HEAP32[i1 >> 2] = i3 + (i2 << 1);
 return;
}

function __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i1 = i1 + 8 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 _memset(i3 | 0, 0, i2 << 2 | 0) | 0;
 HEAP32[i1 >> 2] = i3 + (i2 << 2);
 return;
}

function __ZNSt3__214__split_bufferIfRNS_9allocatorIfEEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i1 = i1 + 8 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 _memset(i3 | 0, 0, i2 << 2 | 0) | 0;
 HEAP32[i1 >> 2] = i3 + (i2 << 2);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i1) {
 i1 = i1 | 0;
 if ((HEAP8[i1 + 11 >> 0] | 0) < 0) __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm(HEAP32[i1 >> 2] | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59008) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58992) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58924) | 0);
 return;
}

function __ZN6vision21OrientationAssignmentC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 i1 = i1 + 12 | 0;
 i2 = i1 + 40 | 0;
 do {
  HEAP32[i1 >> 2] = 0;
  i1 = i1 + 4 | 0;
 } while ((i1 | 0) < (i2 | 0));
 return;
}

function __ZN6vision18BinaryFeatureStoreC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 24 >> 2] = 0;
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59e3) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58856) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58848) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58840) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58816) | 0);
 return;
}

function __ZN6vision22bilinear_interpolationIfEET_PKS1_mmmff(i1, i2, i3, i4, d5, d6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 d6 = +d6;
 return +(+__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(i1, i2, i3, i4, d5, d6));
}

function __ZN6vision10numOctavesEiii(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0;
 i3 = 0;
 while (1) {
  if ((i2 | 0) < (i4 | 0) | (i1 | 0) < (i4 | 0)) break;
  i3 = i3 + 1 | 0;
  i2 = i2 >> 1;
  i1 = i1 >> 1;
 }
 return i3 | 0;
}

function _arPattFree(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = (HEAP32[i2 + 8 >> 2] | 0) + (i1 << 2) | 0;
 if (!(HEAP32[i1 >> 2] | 0)) i1 = -1; else {
  HEAP32[i1 >> 2] = 0;
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + -1;
  i1 = 1;
 }
 return i1 | 0;
}

function ___ofl_add(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = ___ofl_lock() | 0;
 HEAP32[i1 + 56 >> 2] = HEAP32[i2 >> 2];
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) HEAP32[i3 + 52 >> 2] = i1;
 HEAP32[i2 >> 2] = i1;
 ___ofl_unlock();
 return i1 | 0;
}

function __ZNKSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return ((HEAP32[i2 + 4 >> 2] | 0) == 28778 ? i1 + 12 | 0 : 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
}

function _pntz(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = _a_ctz_l_556((HEAP32[i1 >> 2] | 0) + -1 | 0) | 0;
 if (!i2) {
  i2 = _a_ctz_l_556(HEAP32[i1 + 4 >> 2] | 0) | 0;
  return ((i2 | 0) == 0 ? 0 : i2 + 32 | 0) | 0;
 } else return i2 | 0;
 return 0;
}

function __ZNKSt3__25ctypeIcE10do_tolowerEc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 << 24 >> 24 > -1) {
  i1 = (__ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0) + (i1 << 24 >> 24 << 2) | 0;
  i1 = HEAP32[i1 >> 2] & 255;
 }
 return i1 | 0;
}

function __ZNSt3__26vectorItNS_9allocatorItEEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i1 = i1 + 4 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 _memset(i3 | 0, 0, i2 << 1 | 0) | 0;
 HEAP32[i1 >> 2] = i3 + (i2 << 1);
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i1 = i1 + 4 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 _memset(i3 | 0, 0, i2 << 2 | 0) | 0;
 HEAP32[i1 >> 2] = i3 + (i2 << 2);
 return;
}

function __ZNSt3__26vectorIfNS_9allocatorIfEEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i1 = i1 + 4 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 _memset(i3 | 0, 0, i2 << 2 | 0) | 0;
 HEAP32[i1 >> 2] = i3 + (i2 << 2);
 return;
}

function __ZNSt3__214priority_queueIN6vision17PriorityQueueItemILi96EEENS_6vectorIS3_NS_9allocatorIS3_EEEENS_4lessIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213__vector_baseIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEED2Ev(i1);
 return;
}

function dynCall_iiiiiii(i7, i1, i2, i3, i4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 return FUNCTION_TABLE_iiiiiii[i7 & 63](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0) | 0;
}

function _ftell(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i1 = ___ftello(i1) | 0;
 i2 = getTempRet0() | 0;
 if ((i2 | 0) > 0 | (i2 | 0) == 0 & i1 >>> 0 > 2147483647) {
  i1 = ___errno_location() | 0;
  HEAP32[i1 >> 2] = 75;
  i1 = -1;
 }
 return i1 | 0;
}

function _threadEndSignal(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = i1 + 16 | 0;
 _pthread_mutex_lock(i2) | 0;
 HEAP32[i1 + 8 >> 2] = 1;
 HEAP32[i1 + 12 >> 2] = 0;
 _pthread_cond_signal(i1 + 92 | 0) | 0;
 _pthread_mutex_unlock(i2) | 0;
 return 0;
}

function ___uselocale(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = (___pthread_self_523() | 0) + 188 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i1 | 0) HEAP32[i2 >> 2] = (i1 | 0) == (-1 | 0) ? 57140 : i1;
 return ((i3 | 0) == 57140 ? -1 : i3) | 0;
}

function __ZNKSt3__25ctypeIcE10do_toupperEc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 << 24 >> 24 > -1) {
  i1 = (__ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0) + ((i1 & 255) << 2) | 0;
  i1 = HEAP32[i1 >> 2] & 255;
 }
 return i1 | 0;
}

function __ZN6vision10SubVector2IfEEvPT_PKS1_S4_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i2 >> 2] - +HEAPF32[i3 >> 2];
 HEAPF32[i1 + 4 >> 2] = +HEAPF32[i2 + 4 >> 2] - +HEAPF32[i3 + 4 >> 2];
 return;
}

function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() | 0;
}

function _bitshift64Shl(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i1 | 0) < 32) {
  setTempRet0(i2 << i1 | (i3 & (1 << i1) - 1 << 32 - i1) >>> 32 - i1 | 0);
  return i3 << i1;
 }
 setTempRet0(i3 << i1 - 32 | 0);
 return 0;
}

function __ZN6vision20VisualDatabaseFacade9matchedIdEv(i1) {
 i1 = i1 | 0;
 return __ZNK6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE9matchedIdEv(HEAP32[HEAP32[i1 >> 2] >> 2] | 0) | 0;
}

function __ZNSt3__213__vector_baseIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  __ZdlPv(i2);
 }
 return;
}

function dynCall_iiiiiid(i7, i1, i2, i3, i4, i5, d6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 return FUNCTION_TABLE_iiiiiid[i7 & 3](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, +d6) | 0;
}

function dynCall_iidiiii(i7, i1, d2, i3, i4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 return FUNCTION_TABLE_iidiiii[i7 & 1](i1 | 0, +d2, i3 | 0, i4 | 0, i5 | 0, i6 | 0) | 0;
}

function __ZNK6vision20VisualDatabaseFacade7inliersEv(i1) {
 i1 = i1 | 0;
 return __ZNK6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE7inliersEv(HEAP32[HEAP32[i1 >> 2] >> 2] | 0) | 0;
}

function __ZN6vision11CopyVector9IfEEvPT_PKS1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 36 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 return;
}

function __ZN6vision10FastMedianIfiEENSt3__24pairIT_T0_EEPS5_i(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 __ZN6vision11PartialSortIfiEENSt3__24pairIT_T0_EEPS5_ii(i1, i2, i3, (i3 & 1) + -1 + ((i3 | 0) / 2 | 0) | 0);
 return;
}

function _wmemset(i3, i4, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 if (i1 | 0) {
  i2 = i3;
  while (1) {
   i1 = i1 + -1 | 0;
   HEAP32[i2 >> 2] = i4;
   if (!i1) break; else i2 = i2 + 4 | 0;
  }
 }
 return i3 | 0;
}

function __ZN6vision8KeyframeILi96EEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 __ZN6vision18BinaryFeatureStoreC2Ev(i1 + 8 | 0);
 __ZN6vision28BinaryHierarchicalClusteringILi96EEC2Ev(i1 + 36 | 0);
 return;
}

function __ZN6vision14BinarykMedoidsILi96EEC2ERi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = i2;
 i1 = i1 + 4 | 0;
 i2 = i1 + 56 | 0;
 do {
  HEAP32[i1 >> 2] = 0;
  i1 = i1 + 4 | 0;
 } while ((i1 | 0) < (i2 | 0));
 return;
}

function _pthread_key_create(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) {
  i2 = 22;
  return i2 | 0;
 }
 i2 = _malloc(8) | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 38177486;
 HEAP32[i1 >> 2] = i2;
 i2 = 0;
 return i2 | 0;
}

function _bitshift64Lshr(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i1 | 0) < 32) {
  setTempRet0(i2 >>> i1 | 0);
  return i3 >>> i1 | (i2 & (1 << i1) - 1) << 32 - i1;
 }
 setTempRet0(0);
 return i2 >>> i1 - 32 | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE8__monthsEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56504] | 0) == 0 ? ___cxa_guard_acquire(56504) | 0 : 0) {
  __ZNSt3__2L12init_wmonthsEv();
  HEAP32[14746] = 55632;
 }
 return HEAP32[14746] | 0;
}

function dynCall_viiiiii(i7, i1, i2, i3, i4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 FUNCTION_TABLE_viiiiii[i7 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0);
}

function __ZSt11__terminatePFvvE(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 FUNCTION_TABLE_v[i1 & 3]();
 _abort_message(50226, i2);
}

function __ZNKSt3__220__time_get_c_storageIcE8__monthsEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56424] | 0) == 0 ? ___cxa_guard_acquire(56424) | 0 : 0) {
  __ZNSt3__2L11init_monthsEv();
  HEAP32[14729] = 54880;
 }
 return HEAP32[14729] | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE7__weeksEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56520] | 0) == 0 ? ___cxa_guard_acquire(56520) | 0 : 0) {
  __ZNSt3__2L11init_wweeksEv();
  HEAP32[14747] = 55920;
 }
 return HEAP32[14747] | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE7__am_pmEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56488] | 0) == 0 ? ___cxa_guard_acquire(56488) | 0 : 0) {
  __ZNSt3__2L11init_wam_pmEv();
  HEAP32[14745] = 55344;
 }
 return HEAP32[14745] | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8allocateEm(HEAP32[i1 >> 2] | 0, i2 * 24 | 0) | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE7__weeksEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56440] | 0) == 0 ? ___cxa_guard_acquire(56440) | 0 : 0) {
  __ZNSt3__2L10init_weeksEv();
  HEAP32[14730] = 55168;
 }
 return HEAP32[14730] | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE7__am_pmEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56408] | 0) == 0 ? ___cxa_guard_acquire(56408) | 0 : 0) {
  __ZNSt3__2L10init_am_pmEv();
  HEAP32[14728] = 54592;
 }
 return HEAP32[14728] | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = i2;
 return;
}

function _jpeg_destroy(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) FUNCTION_TABLE_vi[HEAP32[i3 + 40 >> 2] & 255](i1);
 HEAP32[i2 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 return;
}

function _a_ctz_l_556(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (i1) if (!(i1 & 1)) {
  i2 = i1;
  i1 = 0;
  while (1) {
   i1 = i1 + 1 | 0;
   if (!(i2 & 2)) i2 = i2 >>> 1; else break;
  }
 } else i1 = 0; else i1 = 32;
 return i1 | 0;
}

function __ZNSt3__26localeC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __ZNSt3__26locale8__globalEv() | 0;
 i2 = HEAP32[i2 >> 2] | 0;
 HEAP32[i1 >> 2] = i2;
 i1 = i2 + 4 | 0;
 HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 1;
 return;
}

function __ZNKSt3__25ctypeIwE10do_toupperEw(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 >>> 0 < 128) {
  i1 = (__ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0) + (i1 << 2) | 0;
  i1 = HEAP32[i1 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZNKSt3__25ctypeIwE10do_tolowerEw(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 >>> 0 < 128) {
  i1 = (__ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0) + (i1 << 2) | 0;
  i1 = HEAP32[i1 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZN6vision11CopyVector2IfEEvPT_PKS1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = i2;
 i3 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i1;
 HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i2 + 4 >> 2] = i3;
 return;
}

function _out_of_memory(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 HEAP32[i3 + 20 >> 2] = 54;
 HEAP32[i3 + 24 >> 2] = i2;
 FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 return;
}

function __ZNSt3__211char_traitsIwE7not_eofEj(i1) {
 i1 = i1 | 0;
 if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) i1 = ~(__ZNSt3__211char_traitsIwE3eofEv() | 0);
 return i1 | 0;
}

function __ZNSt3__211char_traitsIcE7not_eofEi(i1) {
 i1 = i1 | 0;
 if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) i1 = ~(__ZNSt3__211char_traitsIcE3eofEv() | 0);
 return i1 | 0;
}

function __ZN6vision18BinaryFeatureStoreD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213__vector_baseIN6vision12FeaturePointENS_9allocatorIS2_EEED2Ev(i1 + 16 | 0);
 __ZNSt3__213__vector_baseIhNS_9allocatorIhEEED2Ev(i1 + 4 | 0);
 return;
}

function _pop_arg_long_double(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, i4 = 0;
 i4 = (HEAP32[i2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
 d3 = +HEAPF64[i4 >> 3];
 HEAP32[i2 >> 2] = i4 + 8;
 HEAPF64[i1 >> 3] = d3;
 return;
}

function __ZN6vision22QuadraticCriticalPointIfEEbRT_S1_S1_S1_(i1, d2, d3, d4) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 if (d2 == 0.0) i1 = 0; else {
  HEAPF32[i1 >> 2] = -d3 / (d2 * 2.0);
  i1 = 1;
 }
 return i1 | 0;
}

function __ZNSt3__211char_traitsIcE6assignEPcmc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (i2 | 0) _memset(i1 | 0, (__ZNSt3__211char_traitsIcE11to_int_typeEc(i3) | 0) & 255 | 0, i2 | 0) | 0;
 return i1 | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_m(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i4 = i4 - i3 | 0;
 return (i4 >>> 0 < i5 >>> 0 ? i4 : i5) | 0;
}

function _ar3DDeleteHandle(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!i2) i1 = -1; else {
  _icpDeleteHandle(i2) | 0;
  _free(HEAP32[i1 >> 2] | 0);
  HEAP32[i1 >> 2] = 0;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNKSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE13__get_deleterERKSt9type_info(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return ((HEAP32[i2 + 4 >> 2] | 0) == 33290 ? i1 + 12 | 0 : 0) | 0;
}

function __ZN6vision21OrientationAssignmentD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213__vector_baseIN6vision5ImageENS_9allocatorIS2_EEED2Ev(i1 + 40 | 0);
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev(i1 + 28 | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2IS4_EERKNS1_IT_Lm4096EEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59112) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59120) | 0);
 return;
}

function __ZNSt3__25ctypeIcED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 16856;
 i2 = HEAP32[i1 + 8 >> 2] | 0;
 if (i2 | 0 ? HEAP8[i1 + 12 >> 0] | 0 : 0) __ZdaPv(i2);
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function _arPattAttach(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((i1 | 0) != 0 ? (i3 = i1 + 7062384 | 0, (HEAP32[i3 >> 2] | 0) == 0) : 0) {
  HEAP32[i3 >> 2] = i2;
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59104) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59096) | 0);
 return;
}

function __ZNKSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE13__get_deleterERKSt9type_info(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return ((HEAP32[i2 + 4 >> 2] | 0) == 33412 ? i1 + 12 | 0 : 0) | 0;
}

function _threadStartSignal(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = i1 + 16 | 0;
 _pthread_mutex_lock(i2) | 0;
 HEAP32[i1 + 4 >> 2] = 1;
 _pthread_cond_signal(i1 + 44 | 0) | 0;
 _pthread_mutex_unlock(i2) | 0;
 return 0;
}

function _finish_pass1(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 460 >> 2] | 0;
 HEAP32[i1 + 136 >> 2] = HEAP32[i2 + 16 >> 2];
 _select_colors(i1, HEAP32[i2 + 20 >> 2] | 0);
 HEAP32[i2 + 28 >> 2] = 1;
 return;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED2Ev(i1, 14420);
 __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev(i1, 14372);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED2Ev(i1, 14324);
 __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev(i1 + 8 | 0);
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev(i1, 14276);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev(i1 + 8 | 0);
 return;
}

function dynCall_iiiiii(i6, i1, i2, i3, i4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 return FUNCTION_TABLE_iiiiii[i6 & 31](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0) | 0;
}

function _process_data_crank_post(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[i1 + 432 >> 2] | 0) + 4 >> 2] & 7](i1, 0, 0, 0, i2, i3, i4);
 return;
}

function _kpmGetResult(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (!i1) i1 = -1; else {
  HEAP32[i2 >> 2] = HEAP32[i1 + 52 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i1 + 56 >> 2];
  i1 = 0;
 }
 return i1 | 0;
}

function __ZN10emscripten8internal7InvokerIvJiEE6invokeEPFviEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i2 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi(i2) | 0;
 FUNCTION_TABLE_vi[i1 & 255](i2);
 return;
}
function stackAlloc(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + i2 | 0;
 STACKTOP = STACKTOP + 15 & -16;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(i2 | 0);
 return i1 | 0;
}

function _grayscale_convert_29(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 _jcopy_sample_rows(HEAP32[i2 >> 2] | 0, i3, i4, 0, i5, HEAP32[i1 + 112 >> 2] | 0);
 return;
}

function _arImageProcInit(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = _malloc(2064) | 0;
 if (i3 | 0) {
  HEAP32[i3 >> 2] = 0;
  HEAP32[i3 + 4 >> 2] = i1;
  HEAP32[i3 + 8 >> 2] = i2;
 }
 return i3 | 0;
}

function __ZNSt3__26locale8__globalEv() {
 if ((HEAP8[57016] | 0) == 0 ? ___cxa_guard_acquire(57016) | 0 : 0) {
  __ZNSt3__26locale5__imp11make_globalEv() | 0;
  HEAP32[14785] = 59136;
 }
 return HEAP32[14785] | 0;
}

function __ZNSt3__26locale7classicEv() {
 if ((HEAP8[56848] | 0) == 0 ? ___cxa_guard_acquire(56848) | 0 : 0) {
  __ZNSt3__26locale5__imp12make_classicEv() | 0;
  HEAP32[14783] = 59128;
 }
 return HEAP32[14783] | 0;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59040) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59032) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59024) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59016) | 0);
 return;
}

function __ZNSt3__26__clocEv() {
 var i1 = 0;
 if ((HEAP8[56368] | 0) == 0 ? ___cxa_guard_acquire(56368) | 0 : 0) {
  i1 = ___newlocale(2147483647, 47652, 0) | 0;
  HEAP32[14700] = i1;
 }
 return HEAP32[14700] | 0;
}

function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, i2, 0) | 0;
}

function __ZNSt3__27codecvtIwc11__mbstate_tEC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 4 >> 2] = i2 + -1;
 HEAP32[i1 >> 2] = 16788;
 i2 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i1 + 8 >> 2] = i2;
 return;
}

function __ZN6vision20VisualDatabaseFacadeD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = 0;
 if (i2 | 0) {
  __ZN6vision18VisualDatabaseImplD2Ev(i2);
  __ZdlPv(i2);
 }
 return;
}

function __ZNSt3__213__vector_baseIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  __ZdlPv(i2);
 }
 return;
}

function _byteSwapDouble(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 8) break;
  HEAP8[i3 + i1 >> 0] = HEAP8[i2 + (7 - i1) >> 0] | 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNSt3__213__vector_baseIPN6vision4NodeILi96EEENS_9allocatorIS4_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  __ZdlPv(i2);
 }
 return;
}

function dynCall_iiiiid(i6, i1, i2, i3, i4, d5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 return FUNCTION_TABLE_iiiiid[i6 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0, +d5) | 0;
}

function __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 i1 = i1 + 12 | 0;
 __ZNK16NullArrayDeleterIhEclEPh(i1, HEAP32[i1 >> 2] | 0);
 return;
}

function __ZN6vision17bitstring_set_bitEPhih(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 + ((i2 | 0) / 8 | 0) | 0;
 HEAP8[i1 >> 0] = (i3 & 255) << (i2 & 7) | (HEAPU8[i1 >> 0] | 0);
 return;
}

function __ZNSt3__213__vector_baseIN6vision7Point3dIfEENS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  __ZdlPv(i2);
 }
 return;
}

function __ZNSt3__213__vector_baseIN6vision7Point2dIfEENS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  __ZdlPv(i2);
 }
 return;
}

function _byteSwapInt(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 4) break;
  HEAP8[i3 + i1 >> 0] = HEAP8[i2 + (3 - i1) >> 0] | 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNSt3__28numpunctIwED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 16948;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 16 | 0);
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__28numpunctIcED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 16908;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 12 | 0);
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return __ZNKSt3__29__num_getIwE12__do_widen_pIwEEPKT_RNS_8ios_baseEPS3_(i1, i2, i3) | 0;
}

function __ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58832) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58808) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59088) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(59080) | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = i2;
 return;
}

function dynCall_viiiii(i6, i1, i2, i3, i4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 FUNCTION_TABLE_viiiii[i6 & 31](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0);
}

function __ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58784) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58776) | 0);
 return;
}

function __ZNSt3__213__vector_baseIN6vision7match_tENS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  __ZdlPv(i2);
 }
 return;
}

function _arSetLabelingThreshModeAutoInterval(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) i1 = -1; else {
  HEAP32[i1 + 7062392 >> 2] = i2;
  HEAP32[i1 + 7062396 >> 2] = 0;
  i1 = 0;
 }
 return i1 | 0;
}

function _ar2GetResolution(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 if (!i1) _ar2GetResolution2(0, i2, i3, i4) | 0; else _ar2GetResolution2(i1, i2, i3, i4) | 0;
 return 0;
}

function __ZN6vision14AreaOfTriangleIfEET_PKS1_S3_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return +(+Math_abs(+(+HEAPF32[i1 >> 2] * +HEAPF32[i2 + 4 >> 2] - +HEAPF32[i1 + 4 >> 2] * +HEAPF32[i2 >> 2])) * .5);
}

function _ar2SetSearchFeatureNum(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = (i1 | 0) < 40 ? i1 : 40;
 if (!i2) i1 = -1; else {
  HEAP32[i2 + 36 >> 2] = (i1 | 0) > 3 ? i1 : 3;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58824) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58792) | 0);
 return;
}

function __ZNKSt3__26locale9use_facetERNS0_2idE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 return __ZNKSt3__26locale5__imp9use_facetEl(i1, __ZNSt3__26locale2id5__getEv(i2) | 0) | 0;
}

function __ZN6vision10DoGPyramid3getEmm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i3 = (Math_imul(HEAP32[i1 + 16 >> 2] | 0, i2) | 0) + i3 | 0;
 return (HEAP32[i1 >> 2] | 0) + (i3 << 5) | 0;
}

function __ZNSt3__213__vector_baseI12multi_markerNS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  __ZdlPv(i2);
 }
 return;
}

function __ZN6vision9MaxIndex3IfEEiPKT_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = +HEAPF32[i1 + 4 >> 2] > +HEAPF32[i1 >> 2] & 1;
 return (+HEAPF32[i1 + 8 >> 2] > +HEAPF32[i1 + (i2 << 2) >> 2] ? 2 : i2) | 0;
}

function __ZNSt3__213__vector_baseINS_4pairIfmEENS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  __ZdlPv(i2);
 }
 return;
}

function __ZNSt3__213__vector_baseINS_4pairIfiEENS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  __ZdlPv(i2);
 }
 return;
}

function _arPattDetach(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((i1 | 0) != 0 ? (i2 = i1 + 7062384 | 0, (HEAP32[i2 >> 2] | 0) != 0) : 0) {
  HEAP32[i2 >> 2] = 0;
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__210__time_putD2Ev(i1 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__210__time_putD2Ev(i1 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _arGetLabelingThreshMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((i1 | 0) != 0 & (i2 | 0) != 0) {
  HEAP32[i2 >> 2] = HEAP32[i1 + 7062388 >> 2];
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return __ZNKSt3__29__num_getIcE12__do_widen_pERNS_8ios_baseEPc(i1, i2, i3) | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZN6vision20BinaryFeatureMatcherILi96EEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAPF32[i1 + 12 >> 2] = .699999988079071;
 return;
}

function _start_pass_upsample(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 452 >> 2] | 0;
 HEAP32[i2 + 92 >> 2] = HEAP32[i1 + 312 >> 2];
 HEAP32[i2 + 96 >> 2] = HEAP32[i1 + 116 >> 2];
 return;
}

function _i64Subtract(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = i2 - i4 - (i3 >>> 0 > i1 >>> 0 | 0) >>> 0;
 return (setTempRet0(i4 | 0), i1 - i3 >>> 0 | 0) | 0;
}

function __ZNSt3__24pairIKiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213__vector_baseIN6vision7Point3dIfEENS_9allocatorIS3_EEED2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv(i1) {
 i1 = i1 | 0;
 __ZNKSt3__212_GLOBAL__N_111__fake_bindclEv(HEAP32[HEAP32[i1 >> 2] >> 2] | 0);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i3;
 return 3;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i3;
 return 3;
}

function __ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 268435455;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE16setNumHypothesesEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN6vision14BinarykMedoidsILi96EE16setNumHypothesesEi(i1 + 12 | 0, i2);
 return;
}

function ___lctrans_impl(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) i1 = 0; else i1 = ___mo_lookup(HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0, i2) | 0;
 return ((i1 | 0) == 0 ? i2 : i1) | 0;
}

function __ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__214__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i3;
 return 3;
}

function __ZN6vision4min4IfEET_S1_S1_S1_S1_(d1, d2, d3, d4) {
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 return +(+__ZN6vision4min2IfEET_S1_S1_(+__ZN6vision4min3IfEET_S1_S1_S1_(d1, d2, d3), d4));
}

function __ZN12_GLOBAL__N_120register_memory_viewItEEvPKc(i1) {
 i1 = i1 | 0;
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewItEEE3getEv() | 0, 3, i1 | 0);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIsEEvPKc(i1) {
 i1 = i1 | 0;
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEE3getEv() | 0, 2, i1 | 0);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIjEEvPKc(i1) {
 i1 = i1 | 0;
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEE3getEv() | 0, 5, i1 | 0);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIiEEvPKc(i1) {
 i1 = i1 | 0;
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEE3getEv() | 0, 4, i1 | 0);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIhEEvPKc(i1) {
 i1 = i1 | 0;
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEE3getEv() | 0, 1, i1 | 0);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIaEEvPKc(i1) {
 i1 = i1 | 0;
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEE3getEv() | 0, 0, i1 | 0);
 return;
}

function ___strdup(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = (_strlen(i1) | 0) + 1 | 0;
 i3 = _malloc(i2) | 0;
 if (!i3) i1 = 0; else i1 = _memcpy(i3 | 0, i1 | 0, i2 | 0) | 0;
 return i1 | 0;
}

function ___DOUBLE_BITS_737(d1) {
 d1 = +d1;
 var i2 = 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i2 = HEAP32[tempDoublePtr >> 2] | 0;
 setTempRet0(HEAP32[tempDoublePtr + 4 >> 2] | 0);
 return i2 | 0;
}

function ___DOUBLE_BITS_102(d1) {
 d1 = +d1;
 var i2 = 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i2 = HEAP32[tempDoublePtr >> 2] | 0;
 setTempRet0(HEAP32[tempDoublePtr + 4 >> 2] | 0);
 return i2 | 0;
}

function _arGetMatrixCodeType(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((i1 | 0) != 0 & (i2 | 0) != 0) {
  HEAP32[i2 >> 2] = HEAP32[i1 + 7062424 >> 2];
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function __ZNSt3__26localeC2ERKS0_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i2 = HEAP32[i2 >> 2] | 0;
 HEAP32[i1 >> 2] = i2;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
 return;
}

function b13(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 nullFunc_iiiiiiiii(13);
 return 0;
}

function __ZN6vision12FeaturePointC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP8[i1 + 16 >> 0] = 1;
 return;
}

function _i64Add(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i3 = i1 + i3 >>> 0;
 return (setTempRet0(i2 + i4 + (i3 >>> 0 < i1 >>> 0 | 0) >>> 0 | 0), i3 | 0) | 0;
}

function __ZN6vision10DoGPyramidC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 return;
}

function _pthread_setspecific(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((HEAP32[i1 + 4 >> 2] | 0) != 38177486) {
  i2 = 22;
  return i2 | 0;
 }
 HEAP32[i1 >> 2] = i2;
 i2 = 0;
 return i2 | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiiEE8getTypesEv(i1) {
 i1 = i1 | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiiiEEEE3getEv() | 0;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE10nextNodeIdEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = i1 + 4 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = i1 + 1;
 return i1 | 0;
}

function __ZN6vision7Point3dIfEC2Efff(i1, d2, d3, d4) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 HEAPF32[i1 >> 2] = d2;
 HEAPF32[i1 + 4 >> 2] = d3;
 HEAPF32[i1 + 8 >> 2] = d4;
 return;
}

function _arSetPattRatio(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 if ((i1 | 0) != 0 ? !(d2 <= 0.0 | d2 >= 1.0) : 0) {
  HEAPF64[i1 + 7062416 >> 3] = d2;
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function _arGetLabelingThresh(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((i1 | 0) != 0 & (i2 | 0) != 0) {
  HEAP32[i2 >> 2] = HEAP32[i1 + 16 >> 2];
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviiEE8getTypesEv(i1) {
 i1 = i1 | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJviiEEEE3getEv() | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvifEE8getTypesEv(i1) {
 i1 = i1 | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvifEEEE3getEv() | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvidEE8getTypesEv(i1) {
 i1 = i1 | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvidEEEE3getEv() | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiEE8getTypesEv(i1) {
 i1 = i1 | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiiEEEE3getEv() | 0;
}

function __ZN6vision21HoughSimilarityVoting26setObjectCenterInReferenceEff(i1, d2, d3) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 HEAPF32[i1 + 8 >> 2] = d2;
 HEAPF32[i1 + 12 >> 2] = d3;
 return;
}

function __ZN6vision14BinarykMedoidsILi96EE4setkEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 4 >> 2] = i2;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm(i1 + 12 | 0, i2);
 return;
}

function dynCall_iiiii(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return FUNCTION_TABLE_iiiii[i5 & 15](i1 | 0, i2 | 0, i3 | 0, i4 | 0) | 0;
}

function _arGetLabelingMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((i1 | 0) != 0 & (i2 | 0) != 0) {
  HEAP32[i2 >> 2] = HEAP32[i1 + 12 >> 2];
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function __ZNSt3__213__vector_baseItNS_9allocatorItEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  __ZdlPv(i2);
 }
 return;
}

function __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  __ZdlPv(i2);
 }
 return;
}

function __ZNSt3__213__vector_baseIhNS_9allocatorIhEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  __ZdlPv(i2);
 }
 return;
}

function __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  __ZdlPv(i2);
 }
 return;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviEE8getTypesEv(i1) {
 i1 = i1 | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJviEEEE3getEv() | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiEE8getTypesEv(i1) {
 i1 = i1 | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiEEEE3getEv() | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJdiEE8getTypesEv(i1) {
 i1 = i1 | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJdiEEEE3getEv() | 0;
}

function __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__210__time_putD2Ev(i1 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__210__time_putD2Ev(i1 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZN6vision8KeyframeILi96EED2Ev(i1) {
 i1 = i1 | 0;
 __ZN6vision28BinaryHierarchicalClusteringILi96EED2Ev(i1 + 36 | 0);
 __ZN6vision18BinaryFeatureStoreD2Ev(i1 + 8 | 0);
 return;
}

function _threadGetStatus(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = i1 + 16 | 0;
 _pthread_mutex_lock(i2) | 0;
 i1 = HEAP32[i1 + 8 >> 2] | 0;
 _pthread_mutex_unlock(i2) | 0;
 return i1 | 0;
}

function __ZNKSt3__28numpunctIwE11do_groupingEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1, i2 + 16 | 0);
 return;
}

function __ZNKSt3__28numpunctIcE11do_groupingEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1, i2 + 12 | 0);
 return;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiEE8getTypesEv(i1) {
 i1 = i1 | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiEEEE3getEv() | 0;
}

function __ZN6vision25GaussianScaleSpacePyramidD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 13500;
 __ZNSt3__213__vector_baseIN6vision5ImageENS_9allocatorIS2_EEED2Ev(i1 + 4 | 0);
 return;
}

function _start_pass_merged_upsample(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 452 >> 2] | 0;
 HEAP32[i2 + 36 >> 2] = 0;
 HEAP32[i2 + 44 >> 2] = HEAP32[i1 + 116 >> 2];
 return;
}

function __ZNSt3__210__time_putD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (__ZNSt3__26__clocEv() | 0)) _freelocale(HEAP32[i1 >> 2] | 0);
 return;
}

function __ZN6vision21HoughSimilarityVoting21setRefImageDimensionsEii(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 HEAP32[i1 >> 2] = i2;
 HEAP32[i1 + 4 >> 2] = i3;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE17pointer_in_bufferEPc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 + 4096 | 0) >>> 0 >= i2 >>> 0 & i1 >>> 0 <= i2 >>> 0 | 0;
}

function __ZN6vision17PriorityQueueItemILi96EEC2EPKNS_4NodeILi96EEEj(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 HEAP32[i1 >> 2] = i2;
 HEAP32[i1 + 4 >> 2] = i3;
 return;
}

function _arSetPatternDetectionMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((i1 | 0) != 0 & i2 >>> 0 < 5) {
  HEAP32[i1 + 24 >> 2] = i2;
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function __ZNK6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE9matchedIdEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 24 >> 2] | 0;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE13setNumCentersEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN6vision14BinarykMedoidsILi96EE4setkEi(i1 + 12 | 0, i2);
 return;
}

function _pthread_once(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 324508639) return 0;
 FUNCTION_TABLE_v[i2 & 3]();
 HEAP32[i1 >> 2] = 324508639;
 return 0;
}

function __ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _arGetDebugMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((i1 | 0) != 0 & (i2 | 0) != 0) {
  HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function __ZN6vision10FastRandomERi(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = ((HEAP32[i1 >> 2] | 0) * 214013 | 0) + 2531011 | 0;
 HEAP32[i1 >> 2] = i2;
 return i2 >>> 16 & 32767 | 0;
}

function __ZN12_GLOBAL__N_120register_memory_viewImEEvPKc() {
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewImEEE3getEv() | 0, 5, 46424);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIlEEvPKc() {
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEE3getEv() | 0, 4, 46494);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIfEEvPKc() {
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEE3getEv() | 0, 6, 46362);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIeEEvPKc() {
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEE3getEv() | 0, 7, 46231);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIdEEvPKc() {
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEE3getEv() | 0, 7, 46299);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIcEEvPKc() {
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEE3getEv() | 0, 0, 46741);
 return;
}

function __ZNK6vision18BinaryFeatureStore7featureEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i2 = Math_imul(HEAP32[i1 >> 2] | 0, i2) | 0;
 return (HEAP32[i1 + 4 >> 2] | 0) + i2 | 0;
}

function __ZN6vision10FastMedianIfEET_PS1_i(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return +(+__ZN6vision11PartialSortIfEET_PS1_ii(i1, i2, (i2 & 1) + -1 + ((i2 | 0) / 2 | 0) | 0));
}

function __ZN6vision10CauchyCostIfEET_PKS1_S1_(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 return +(+__ZN6vision10CauchyCostIfEET_S1_S1_S1_(+HEAPF32[i1 >> 2], +HEAPF32[i1 + 4 >> 2], d2));
}

function dynCall_viiii(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 FUNCTION_TABLE_viiii[i5 & 31](i1 | 0, i2 | 0, i3 | 0, i4 | 0);
}

function _jpeg_alloc_quant_table(i1) {
 i1 = i1 | 0;
 i1 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 0, 132) | 0;
 HEAP32[i1 + 128 >> 2] = 0;
 return i1 | 0;
}

function _arSetLabelingThresh(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((i1 | 0) == 0 | i2 >>> 0 > 255) i1 = -1; else {
  HEAP32[i1 + 16 >> 2] = i2;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getCountEv(i1) {
 i1 = i1 | 0;
 return 3;
}

function __ZN6vision18BinaryFeatureStore7featureEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i2 = Math_imul(HEAP32[i1 >> 2] | 0, i2) | 0;
 return (HEAP32[i1 + 4 >> 2] | 0) + i2 | 0;
}

function __ZN12_GLOBAL__N_116register_integerIlEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDIlE3getEv() | 0, 51990, 4, -2147483648, 2147483647);
 return;
}

function __ZN12_GLOBAL__N_116register_integerIiEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDIiE3getEv() | 0, 51973, 4, -2147483648, 2147483647);
 return;
}

function _jpeg_alloc_huff_table(i1) {
 i1 = i1 | 0;
 i1 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 0, 280) | 0;
 HEAP32[i1 + 276 >> 2] = 0;
 return i1 | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getCountEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function __ZN6vision14SampleReceptorERKNS_5ImageEff(i1, d2, d3) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 return +(+__ZN6vision22SampleReceptorBilinearERKNS_5ImageEff(i1, d2, d3));
}

function _strtoull_l(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = _strtoull(i1, i2, i3) | 0;
 setTempRet0(getTempRet0() | 0);
 return i4 | 0;
}

function _icpDeleteHandle(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!i2) i1 = -1; else {
  _free(i2);
  HEAP32[i1 >> 2] = 0;
  i1 = 0;
 }
 return i1 | 0;
}

function ___syscall_ret(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (i1 >>> 0 > 4294963200) {
  i2 = ___errno_location() | 0;
  HEAP32[i2 >> 2] = 0 - i1;
  i1 = -1;
 }
 return i1 | 0;
}

function __ZNSt3__211char_traitsIcE7compareEPKcS3_m(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (!i3) i1 = 0; else i1 = _memcmp(i1, i2, i3) | 0;
 return i1 | 0;
}

function b12(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 nullFunc_iiiiiiii(12);
 return 0;
}

function _new_color_map_1_quant(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i2 + 20 >> 2] = 46;
 FUNCTION_TABLE_vi[HEAP32[i2 >> 2] & 255](i1);
 return;
}

function _arSetImageProcMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((i1 | 0) != 0 & i2 >>> 0 < 2) {
  HEAP32[i1 + 20 >> 2] = i2;
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i1) {
 i1 = i1 | 0;
 if ((HEAP8[i1 + 8 + 3 >> 0] | 0) < 0) __ZdlPv(HEAP32[i1 >> 2] | 0);
 return;
}

function _strtoll_l(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = _strtoll(i1, i2, i3) | 0;
 setTempRet0(getTempRet0() | 0);
 return i4 | 0;
}

function _arSetLabelingMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((i1 | 0) != 0 & i2 >>> 0 < 2) {
  HEAP32[i1 + 12 >> 2] = i2;
  i1 = 0;
 } else i1 = -1;
 return i1 | 0;
}

function __ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 268435455;
}

function _strtoll(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i3 = _strtox_547(i1, i2, i3, 0, -2147483648) | 0;
 setTempRet0(getTempRet0() | 0);
 return i3 | 0;
}

function _arGetTransMatMultiSquareRobust(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return +(+_arGetTransMatMultiSquare2(i1, i2, i3, i4, 1));
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EEC2ERNS0_5arenaILm4096EEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = i2;
 return;
}

function __ZNSt3__24pairIKiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1) {
 i1 = i1 | 0;
 if ((HEAP8[i1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[i1 >> 2] | 0);
 return;
}

function __ZNK6vision17PriorityQueueItemILi96EEltERKS1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (HEAP32[i1 + 4 >> 2] | 0) >>> 0 > (HEAP32[i2 + 4 >> 2] | 0) >>> 0 | 0;
}

function __ZN6vision9ExceptionD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 13516;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 4 | 0);
 return;
}

function __ZN6vision4min3IfEET_S1_S1_S1_(d1, d2, d3) {
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 return +(+__ZN6vision4min2IfEET_S1_S1_(+__ZN6vision4min2IfEET_S1_S1_(d1, d2), d3));
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = i2;
 HEAP8[i1 + 4 >> 0] = HEAP8[i2 >> 0] | 0;
 return;
}

function _jpeg_mem_available(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return (HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 44 >> 2] | 0) - i4 | 0;
}

function _arGetPatternDetectionMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) i1 = -1; else {
  HEAP32[i2 >> 2] = HEAP32[i1 + 24 >> 2];
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(HEAP32[i1 + 12 >> 2] | 0);
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[14191] = 0;
 HEAP32[14190] = 16600;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[14189] = 0;
 HEAP32[14188] = 16572;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[14187] = 0;
 HEAP32[14186] = 16544;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[14185] = 0;
 HEAP32[14184] = 16516;
 return;
}

function __ZNSt3__211char_traitsIcE4moveEPcPKcm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (i3 | 0) _memmove(i1 | 0, i2 | 0, i3 | 0) | 0;
 return i1 | 0;
}

function _arImageProcLumaHistAndCDFAndMedian(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return _arImageProcLumaHistAndCDFAndPercentile(i1, i2, .5, i3) | 0;
}

function __ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__214__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__211char_traitsIcE4copyEPcPKcm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (i3 | 0) _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjEC2ERj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = i2;
 HEAP32[i1 + 4 >> 2] = HEAP32[i2 >> 2];
 return;
}

function _pthread_getspecific(i1) {
 i1 = i1 | 0;
 if ((HEAP32[i1 + 4 >> 2] | 0) != 38177486) {
  i1 = 0;
  return i1 | 0;
 }
 i1 = HEAP32[i1 >> 2] | 0;
 return i1 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[14175] = 0;
 HEAP32[14174] = 14936;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[14173] = 0;
 HEAP32[14172] = 14884;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[14171] = 0;
 HEAP32[14170] = 14820;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[14169] = 0;
 HEAP32[14168] = 14756;
 return;
}

function __ZN12_GLOBAL__N_116register_integerIsEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDIsE3getEv() | 0, 51768, 2, -32768, 32767);
 return;
}

function _arGetTransMatMultiSquare(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return +(+_arGetTransMatMultiSquare2(i1, i2, i3, i4, 0));
}

function _arGetPattRatio(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) i1 = -1; else {
  HEAPF64[i2 >> 3] = +HEAPF64[i1 + 7062416 >> 3];
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__214__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNK6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE7inliersEv(i1) {
 i1 = i1 | 0;
 return i1 + 12 | 0;
}

function __ZN6vision10ClipScalarIfEET_S1_S1_S1_(d1, d2, d3) {
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 if (!(d1 < d2)) {
  if (d1 > d3) d1 = d3;
 } else d1 = d2;
 return +d1;
}

function _strtoull(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i3 = _strtox_547(i1, i2, i3, -1, -1) | 0;
 setTempRet0(getTempRet0() | 0);
 return i3 | 0;
}

function __ZN6vision8fastexp6IfEET_S1_(d1) {
 d1 = +d1;
 return +(((((((d1 + 6.0) * d1 + 30.0) * d1 + 120.0) * d1 + 360.0) * d1 + 720.0) * d1 + 720.0) * .0013888888);
}

function b23(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 nullFunc_viiiiiii(23);
}

function _arMatrixSelfInvf(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 return ((_minvf(HEAP32[i1 >> 2] | 0, i2, i2) | 0) == 0) << 31 >> 31 | 0;
}

function __ZN12_GLOBAL__N_116register_integerIcEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDIcE3getEv() | 0, 51737, 1, -128, 127);
 return;
}

function __ZN12_GLOBAL__N_116register_integerIaEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDIaE3getEv() | 0, 51742, 1, -128, 127);
 return;
}

function _icpGetXw2XcCleanup_221(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 _free(i1);
 _free(i2);
 _free(i3);
 _free(i4);
 return;
}

function _arGetImageProcMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) i1 = -1; else {
  HEAP32[i2 >> 2] = HEAP32[i1 + 20 >> 2];
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__26locale5facet16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 return;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN12_GLOBAL__N_116register_integerItEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDItE3getEv() | 0, 51774, 2, 0, 65535);
 return;
}

function _arMatrixSelfInv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 return ((_minv(HEAP32[i1 >> 2] | 0, i2, i2) | 0) == 0) << 31 >> 31 | 0;
}

function __ZNSt3__214__ptr_in_rangeIwEEbPKT_S3_S3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return i2 >>> 0 <= i1 >>> 0 & i1 >>> 0 < i3 >>> 0 | 0;
}

function __ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return i2 >>> 0 <= i1 >>> 0 & i1 >>> 0 < i3 >>> 0 | 0;
}

function __ZNSt11logic_errorC2EPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 17420;
 __ZNSt3__218__libcpp_refstringC2EPKc(i1 + 4 | 0, i2);
 return;
}

function dynCall_iiii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return FUNCTION_TABLE_iiii[i4 & 63](i1 | 0, i2 | 0, i3 | 0) | 0;
}

function _compE_396(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0;
 d3 = +HEAPF32[i1 >> 2] - +HEAPF32[i2 >> 2];
 return (d3 < 0.0 ? -1 : d3 > 0.0 & 1) | 0;
}

function __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__26locale2id6__initEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[14701] | 0;
 HEAP32[14701] = i2 + 1;
 HEAP32[i1 + 4 >> 2] = i2 + 1;
 return;
}

function __ZN12_GLOBAL__N_116register_integerIhEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDIhE3getEv() | 0, 51754, 1, 0, 255);
 return;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEE3getEv() {
 return 13740;
}

function __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN6vision6Logger11getInstanceEv() {
 if ((HEAP8[56096] | 0) == 0 ? ___cxa_guard_acquire(56096) | 0 : 0) __ZN6vision6LoggerC2Ev(57032);
 return 57032;
}

function __ZN12_GLOBAL__N_116register_integerImEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDImE3getEv() | 0, 51995, 4, 0, -1);
 return;
}

function __ZN12_GLOBAL__N_116register_integerIjEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDIjE3getEv() | 0, 51977, 4, 0, -1);
 return;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEE3getEv() {
 return 13720;
}

function __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE21setMinFeaturesPerNodeEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 108 >> 2] = i2;
 return;
}

function _strchr(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = ___strchrnul(i1, i2) | 0;
 return ((HEAP8[i1 >> 0] | 0) == (i2 & 255) << 24 >> 24 ? i1 : 0) | 0;
}

function _fputs(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = _strlen(i1) | 0;
 return ((_fwrite(i1, 1, i3, i2) | 0) != (i3 | 0)) << 31 >> 31 | 0;
}

function _compE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0;
 d3 = +HEAPF64[i1 >> 3] - +HEAPF64[i2 >> 3];
 return (d3 < 0.0 ? -1 : d3 > 0.0 & 1) | 0;
}

function ___ctype_get_mb_cur_max() {
 var i1 = 0;
 i1 = (___pthread_self_826() | 0) + 188 | 0;
 return ((HEAP32[HEAP32[i1 >> 2] >> 2] | 0) == 0 ? 1 : 4) | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__211char_traitsIwE3eofEv() | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__211char_traitsIcE3eofEv() | 0;
}

function b11(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 nullFunc_iiiiiii(11);
 return 0;
}

function _arSetMatrixCodeType(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) i1 = -1; else {
  HEAP32[i1 + 7062424 >> 2] = i2;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__24pairIKiNS_6vectorIiNS_9allocatorIiEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__211char_traitsIwE3eofEv() | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__211char_traitsIcE3eofEv() | 0;
}

function __ZN6vision20BinaryFeatureMatcherILi96EED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213__vector_baseIN6vision7match_tENS_9allocatorIS2_EEED2Ev(i1);
 return;
}

function ___cxx_global_var_init_1() {
 HEAP32[14268] = 0;
 HEAP32[14269] = 0;
 HEAP32[14270] = 0;
 HEAP32[14271] = 0;
 HEAP32[14272] = 1065353216;
 return;
}

function __ZNSt3__211char_traitsIwE4moveEPwPKwm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (i3) _wmemmove(i1, i2, i3) | 0;
 return i1 | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewItEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewImEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv() | 0;
}

function _icpSetInlierProbability(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 if (!i1) i1 = -1; else {
  HEAPF64[i1 + 128 >> 3] = d2;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 14180;
 __ZNSt3__26localeD2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 14116;
 __ZNSt3__26localeD2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__211char_traitsIwE6assignEPwmw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (i2) _wmemset(i1, i3, i2) | 0;
 return i1 | 0;
}

function __ZNSt3__211char_traitsIwE4copyEPwPKwm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (i3) _wmemcpy(i1, i2, i3) | 0;
 return i1 | 0;
}

function __ZNK6vision9Exception4whatEv(i1) {
 i1 = i1 | 0;
 i1 = i1 + 4 | 0;
 if ((HEAP8[i1 + 11 >> 0] | 0) < 0) i1 = HEAP32[i1 >> 2] | 0;
 return i1 | 0;
}

function __ZN6vision10CopyVectorIiEEvPT_PKS1_m(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 _memcpy(i1 | 0, i2 | 0, i3 << 2 | 0) | 0;
 return;
}

function __ZN6vision10CopyVectorIfEEvPT_PKS1_m(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 _memcpy(i1 | 0, i2 | 0, i3 << 2 | 0) | 0;
 return;
}

function b10(i1, i2, i3, i4, i5, d6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 nullFunc_iiiiiid(10);
 return 0;
}

function _wcslen(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2;
 while (1) if (!(HEAP32[i1 >> 2] | 0)) break; else i1 = i1 + 4 | 0;
 return i1 - i2 >> 2 | 0;
}

function ___cxx_global_var_init() {
 HEAP32[14263] = 0;
 HEAP32[14264] = 0;
 HEAP32[14265] = 0;
 HEAP32[14266] = 0;
 HEAP32[14267] = 1065353216;
 return;
}

function __ZNSt3__28ios_base33__set_badbit_and_consider_rethrowEv(i1) {
 i1 = i1 | 0;
 i1 = i1 + 16 | 0;
 HEAP32[i1 >> 2] = HEAP32[i1 >> 2] | 1;
 return;
}

function __ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE16setMaxNodesToPopEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 104 >> 2] = i2;
 return;
}

function __ZNSt3__26locale5__imp12make_classicEv() {
 __ZNSt3__212_GLOBAL__N_14makeINS_6locale5__impEjEERT_T0_();
 HEAP32[14782] = 56856;
 return 59128;
}

function __ZNK6vision18BinaryFeatureStore4sizeEv(i1) {
 i1 = i1 | 0;
 return ((HEAP32[i1 + 20 >> 2] | 0) - (HEAP32[i1 + 16 >> 2] | 0) | 0) / 20 | 0 | 0;
}

function b4(i1, d2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 nullFunc_iidiiii(4);
 return 0;
}

function _kpmCreateHandle(i1) {
 i1 = i1 | 0;
 return __ZL19kpmCreateHandleCoreP9ARParamLTiii(i1, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0, 1) | 0;
}

function _ar2SetTemplateSize2(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) i1 = -1; else {
  HEAP32[i1 + 32 >> 2] = i2;
  i1 = 0;
 }
 return i1 | 0;
}

function _ar2SetTemplateSize1(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) i1 = -1; else {
  HEAP32[i1 + 28 >> 2] = i2;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN6vision10CauchyCostIfEET_S1_S1_S1_(d1, d2, d3) {
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 return +(+Math_log(+((d1 * d1 + d2 * d2) * d3 + 1.0)));
}

function _ar2SetTrackingThresh(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 if (!i1) i1 = -1; else {
  HEAPF32[i1 + 44 >> 2] = d2;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 178956970;
}

function __ZN6vision15HammingDistanceILi96EEEjPKhS2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZN6vision18HammingDistance768EPKjS1_(i1, i2) | 0;
}

function dynCall_viii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 FUNCTION_TABLE_viii[i4 & 3](i1 | 0, i2 | 0, i3 | 0);
}

function __ZN6vision10CopyVectorIhEEvPT_PKS1_m(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
 return;
}

function __ZN12_GLOBAL__N_114register_floatIfEEvPKc() {
 __embind_register_float(__ZN10emscripten8internal6TypeIDIfE3getEv() | 0, 52019, 4);
 return;
}

function __ZN12_GLOBAL__N_114register_floatIdEEvPKc() {
 __embind_register_float(__ZN10emscripten8internal6TypeIDIdE3getEv() | 0, 52131, 8);
 return;
}

function _strerror(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = (___pthread_self_197() | 0) + 188 | 0;
 return ___strerror_l(i1, HEAP32[i2 >> 2] | 0) | 0;
}

function _ar2SetSearchSize(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) i1 = -1; else {
  HEAP32[i1 + 24 >> 2] = i2;
  i1 = 0;
 }
 return i1 | 0;
}

function ___cxa_is_pointer_type(i1) {
 i1 = i1 | 0;
 if (!i1) i1 = 0; else i1 = (___dynamic_cast(i1, 13232, 13320, 0) | 0) != 0 & 1;
 return i1 | 0;
}

function __ZNKSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 119304647;
}

function __ZN6vision7match_tC2Eii(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 HEAP32[i1 >> 2] = i2;
 HEAP32[i1 + 4 >> 2] = i3;
 return;
}

function ___cxa_guard_acquire(i1) {
 i1 = i1 | 0;
 if ((HEAP8[i1 >> 0] | 0) == 1) i1 = 0; else {
  HEAP8[i1 >> 0] = 1;
  i1 = 1;
 }
 return i1 | 0;
}

function __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNKSt3__26locale5__imp9use_facetEl(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return HEAP32[(HEAP32[i1 + 8 >> 2] | 0) + (i2 << 2) >> 2] | 0;
}

function __ZNK6vision25GaussianScaleSpacePyramid4sizeEv(i1) {
 i1 = i1 | 0;
 return (HEAP32[i1 + 8 >> 2] | 0) - (HEAP32[i1 + 4 >> 2] | 0) >> 5 | 0;
}

function __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function b22(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 nullFunc_viiiiii(22);
}

function _dot(d1, d2, d3, d4, d5, d6) {
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 return +(d1 * d4 + d2 * d5 + d3 * d6);
}

function _ar2SetSimThresh(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 if (!i1) i1 = -1; else {
  HEAPF32[i1 + 40 >> 2] = d2;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__28ios_base5clearEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 16 >> 2] = (HEAP32[i1 + 24 >> 2] | 0) == 0 | i2;
 return;
}

function __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNKSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 357913941;
}

function __ZN6vision25DoGScaleInvariantDetector21setLaplacianThresholdEf(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 HEAPF32[i1 + 52 >> 2] = d2;
 return;
}

function __ZNKSt3__25ctypeIwE9do_narrowEwc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return (i2 >>> 0 < 128 ? i2 & 255 : i3) | 0;
}

function __ZNK6vision10DoGPyramid14scaleFromIndexEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i2 | 0) % (HEAP32[i1 + 16 >> 2] | 0) | 0 | 0;
}

function __ZN6vision11ZeroVector3IfEEvPT_(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 return;
}

function dynCall_viid(i4, i1, i2, d3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 FUNCTION_TABLE_viid[i4 & 3](i1 | 0, i2 | 0, +d3);
}

function __ZNSt3__211__stdoutbufIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__211__stdoutbufIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__25ctypeIcE9do_narrowEcc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return (i2 << 24 >> 24 > -1 ? i2 : i3) | 0;
}

function __ZNK6vision18BinaryFeatureStore5pointEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (HEAP32[i1 + 16 >> 2] | 0) + (i2 * 20 | 0) | 0;
}

function __ZN6vision25GaussianScaleSpacePyramidD0Ev(i1) {
 i1 = i1 | 0;
 __ZN6vision25GaussianScaleSpacePyramidD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(d1, d2, d3, d4) {
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 return +(d1 * d4 - d2 * d3);
}

function __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return (i1 | 0) == (i2 | 0) | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwl(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return i1 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return i1 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIwc11__mbstate_tEEjEERT_T0_() {
 __ZNSt3__27codecvtIwc11__mbstate_tEC2Em(56584, 1);
 return;
}

function __ZNSt3__210__stdinbufIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210__stdinbufIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNK6vision5Timer24duration_in_millisecondsEv(i1) {
 i1 = i1 | 0;
 return +(+__ZNK6vision5Timer19duration_in_secondsEv(i1) * 1.0e3);
}

function __ZN6vision18BinaryFeatureStore5pointEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (HEAP32[i1 + 16 >> 2] | 0) + (i2 * 20 | 0) | 0;
}

function __ZN10__cxxabiv123__fundamental_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev(i1) {
 i1 = i1 | 0;
 HEAP8[HEAP32[i1 >> 2] >> 0] = HEAP8[i1 + 4 >> 0] | 0;
 return;
}

function _error_exit(i1) {
 i1 = i1 | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
 _jpeg_destroy(i1);
 _exit(1);
}

function _swapc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = _llvm_bswap_i32(i1 | 0) | 0;
 return ((i2 | 0) == 0 ? i1 : i3) | 0;
}

function _out_728(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (!(HEAP32[i1 >> 2] & 32)) ___fwritex(i2, i3, i1) | 0;
 return;
}

function __ZN6vision25DoGScaleInvariantDetector16setEdgeThresholdEf(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 HEAPF32[i1 + 56 >> 2] = d2;
 return;
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[HEAP32[i1 >> 2] >> 2] = HEAP32[i1 + 4 >> 2];
 return;
}

function ___udivdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return ___udivmoddi4(i1, i2, i3, i4, 0) | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__211char_traitsIwE3eofEv() | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__211char_traitsIcE3eofEv() | 0;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __GLOBAL__sub_I_ARToolKitJS_cpp() {
 ___cxx_global_var_init();
 ___cxx_global_var_init_1();
 ___cxx_global_var_init_47();
 return;
}

function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 return 11216;
}

function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 return 11240;
}

function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 return 11080;
}

function _largest_input_value(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (((i1 << 1 | 1) * 255 | 0) + i2 | 0) / (i2 << 1 | 0) | 0 | 0;
}

function __ZNSt3__27codecvtIwc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__27codecvtIwc11__mbstate_tED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN6vision14BinarykMedoidsILi96EE16setNumHypothesesEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 8 >> 2] = i2;
 return;
}

function __ZN6vision10DoGPyramidD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213__vector_baseIN6vision5ImageENS_9allocatorIS2_EEED2Ev(i1);
 return;
}

function _reset_error_mgr(i1) {
 i1 = i1 | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 + 108 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__26locale5__imp11make_globalEv() {
 __ZNSt3__26localeC2ERKS0_(59136, __ZNSt3__26locale7classicEv() | 0);
 return 59136;
}

function __ZNSt11logic_errorD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 17420;
 __ZNSt3__218__libcpp_refstringD2Ev(i1 + 4 | 0);
 return;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function b9(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 nullFunc_iiiiii(9);
 return 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDsc11__mbstate_tEEjEERT_T0_() {
 HEAP32[14151] = 0;
 HEAP32[14150] = 17168;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDic11__mbstate_tEEjEERT_T0_() {
 HEAP32[14153] = 0;
 HEAP32[14152] = 17216;
 return;
}

function __ZNKSt3__29__num_getIcE12__do_widen_pERNS_8ios_baseEPc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return 10736;
}

function __ZN6vision18BinaryFeatureStore21setNumBytesPerFeatureEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = i2;
 return;
}

function _llvm_bswap_i32(i1) {
 i1 = i1 | 0;
 return (i1 & 255) << 24 | (i1 >> 8 & 255) << 16 | (i1 >> 16 & 255) << 8 | i1 >>> 24 | 0;
}

function _fseek(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return ___fseeko(i1, i2, ((i2 | 0) < 0) << 31 >> 31, i3) | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIcc11__mbstate_tEEjEERT_T0_() {
 HEAP32[14145] = 0;
 HEAP32[14144] = 17120;
 return;
}

function __ZN6vision6LoggerC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 return;
}

function dynCall_iii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return FUNCTION_TABLE_iii[i3 & 63](i1 | 0, i2 | 0) | 0;
}

function _mbrlen(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return _mbrtowc(0, i1, i2, (i3 | 0) == 0 ? 57208 : i3) | 0;
}

function _jcopy_block_row(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 _memcpy(i2 | 0, i1 | 0, i3 << 7 | 0) | 0;
 return;
}

function _fullsize_upsample(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 HEAP32[i4 >> 2] = i3;
 return;
}

function __ZNSt3__25ctypeIcE21__classic_upper_tableEv() {
 var i1 = 0;
 i1 = ___ctype_toupper_loc() | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNSt3__25ctypeIcE21__classic_lower_tableEv() {
 var i1 = 0;
 i1 = ___ctype_tolower_loc() | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
 return;
}

function __ZNKSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 536870911;
}

function b8(i1, i2, i3, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 nullFunc_iiiiid(8);
 return 0;
}

function __ZNSt3__211char_traitsIwE6assignERwRKw(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZN10emscripten8internal6TypeIDINS_3valEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv() | 0;
}

function _output_value(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (((i2 | 0) / 2 | 0) + (i1 * 255 | 0) | 0) / (i2 | 0) | 0 | 0;
}

function __ZNKSt3__28ios_base6getlocEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26localeC2ERKS0_(i1, i2 + 28 | 0);
 return;
}

function dynCall_dii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return +FUNCTION_TABLE_dii[i3 & 1](i1 | 0, i2 | 0);
}

function __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIcEEDnbjEERT_T0_T1_T2_() {
 __ZNSt3__25ctypeIcEC2EPKtbm(56552, 0, 0, 1);
 return;
}

function __ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 1073741823;
}

function __ZN6vision18BinomialPyramid32fD0Ev(i1) {
 i1 = i1 | 0;
 __ZN6vision18BinomialPyramid32fD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _noop_upsample(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 HEAP32[i4 >> 2] = 0;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb1EEEjEERT_T0_() {
 HEAP32[14183] = 0;
 HEAP32[14182] = 16460;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb0EEEjEERT_T0_() {
 HEAP32[14181] = 0;
 HEAP32[14180] = 16404;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb1EEEjEERT_T0_() {
 HEAP32[14179] = 0;
 HEAP32[14178] = 16348;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb0EEEjEERT_T0_() {
 HEAP32[14177] = 0;
 HEAP32[14176] = 16292;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function __ZNKSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 357913941;
}

function __ZNK6vision10DoGPyramid4sizeEv(i1) {
 i1 = i1 | 0;
 return (HEAP32[i1 + 4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 5 | 0;
}

function _vfprintf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return ___vfprintf_internal(i1, i2, i3, 1, 56) | 0;
}

function _trackingInit(i1) {
 i1 = i1 | 0;
 i1 = _trackingInitInit(i1) | 0;
 if (!i1) _exit(-1); else return i1 | 0;
 return 0;
}

function __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEE18__enable_weak_thisEz(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZN6vision17PriorityQueueItemILi96EEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return;
}

function b21(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 nullFunc_viiiii(21);
}

function _ar2UtilReplaceExt(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return _arUtilReplaceExt(i1, i2, i3) | 0;
}

function __ZNSt3__27codecvtIDsc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27codecvtIDic11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__217__widen_from_utf8ILm32EED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZN6vision10ZeroVectorIfEEvPT_m(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 _memset(i1 | 0, 0, i2 << 2 | 0) | 0;
 return;
}

function _jround_up(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = i1 + -1 + i2 | 0;
 return i1 - ((i1 | 0) % (i2 | 0) | 0) | 0;
}

function __ZNSt3__27codecvtIcc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__216__narrow_to_utf8ILm32EED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN6vision11Cofactor2x2IfEET_S1_S1_S1_(d1, d2, d3) {
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 return +(d1 * d3 - d2 * d2);
}

function _srand(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = 56360;
 HEAP32[i2 >> 2] = i1 + -1;
 HEAP32[i2 + 4 >> 2] = 0;
 return;
}

function __ZNSt3__210__stdinbufIwE9underflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__210__stdinbufIwE9__getcharEb(i1, 0) | 0;
}

function __ZNSt3__210__stdinbufIcE9underflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__210__stdinbufIcE9__getcharEb(i1, 0) | 0;
}

function __ZNK6vision25GaussianScaleSpacePyramid18numScalesPerOctaveEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 20 >> 2] | 0;
}

function __ZNK6vision10DoGPyramid3getEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (HEAP32[i1 >> 2] | 0) + (i2 << 5) | 0;
}

function __ZN6vision11SumSquares9IfEET_PKS1_(i1) {
 i1 = i1 | 0;
 return +(+__ZN6vision11DotProduct9IfEET_PKS1_S3_(i1, i1));
}

function _wctomb(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) i1 = 0; else i1 = _wcrtomb(i1, i2, 0) | 0;
 return i1 | 0;
}

function __ZNSt3__215__refstring_imp12_GLOBAL__N_113data_from_repEPNS1_9_Rep_baseE(i1) {
 i1 = i1 | 0;
 return i1 + 12 | 0;
}

function __ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 | 0) == (i2 | 0) | 0;
}

function __ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 | 0) == (i2 | 0) | 0;
}

function dynCall_vii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 FUNCTION_TABLE_vii[i3 & 63](i1 | 0, i2 | 0);
}

function _vsprintf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return _vsnprintf(i1, 2147483647, i2, i3) | 0;
}

function __ZNKSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 1073741823;
}

function __ZN6vision8KeyframeILi96EE9setHeightEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function ___loc_is_allocated(i1) {
 i1 = i1 | 0;
 return (i1 | 0) != 13788 & ((i1 | 0) != 0 & (i1 | 0) != 57164) & 1 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIwEEjEERT_T0_() {
 HEAP32[14211] = 0;
 HEAP32[14210] = 16660;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIcEEjEERT_T0_() {
 HEAP32[14209] = 0;
 HEAP32[14208] = 16628;
 return;
}

function __ZNKSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 1073741823;
}

function __ZNKSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 214748364;
}

function __ZNKSt11logic_error4whatEv(i1) {
 i1 = i1 | 0;
 return __ZNKSt3__218__libcpp_refstring5c_strEv(i1 + 4 | 0) | 0;
}

function __ZN6vision10ZeroVectorIhEEvPT_m(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 _memset(i1 | 0, 0, i2 | 0) | 0;
 return;
}

function __ZN10emscripten8internal6TypeIDIRKiE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIRKiE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIRKdE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIRKdE3getEv() | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7collateIwEEjEERT_T0_() {
 HEAP32[14137] = 0;
 HEAP32[14136] = 14724;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7collateIcEEjEERT_T0_() {
 HEAP32[14135] = 0;
 HEAP32[14134] = 14692;
 return;
}

function __ZNSt3__210__stdinbufIwE5uflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__210__stdinbufIwE9__getcharEb(i1, 1) | 0;
}

function __ZNSt3__210__stdinbufIcE5uflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__210__stdinbufIcE9__getcharEb(i1, 1) | 0;
}

function __ZN6vision4min2IiEET_S1_S1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return ((i1 | 0) < (i2 | 0) ? i1 : i2) | 0;
}

function __ZN6vision4max2IiEET_S1_S1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return ((i1 | 0) > (i2 | 0) ? i1 : i2) | 0;
}

function __ZNSt3__25ctypeIcE13classic_tableEv() {
 var i1 = 0;
 i1 = ___ctype_b_loc() | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNSt3__210moneypunctIwLb1EED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210moneypunctIwLb0EED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210moneypunctIcLb1EED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210moneypunctIcLb0EED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _strncpy(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 ___stpncpy(i1, i2, i3) | 0;
 return i1 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_6locale5__impEjEERT_T0_() {
 __ZNSt3__26locale5__impC2Em(56856, 1);
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIwEEjEERT_T0_() {
 HEAP32[14143] = 0;
 HEAP32[14142] = 17052;
 return;
}

function __ZNKSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 536870911;
}

function __ZN6vision7Point2dIfEC2Ev(i1) {
 i1 = i1 | 0;
 HEAPF32[i1 >> 2] = 0.0;
 HEAPF32[i1 + 4 >> 2] = 0.0;
 return;
}

function __ZN6vision4NodeILi96EE4leafEb(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 + 100 >> 0] = i2 & 1;
 return;
}

function __ZN6vision12SafeDivisionIfEET_S1_S1_(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 return +(d1 / (d2 == 0.0 ? 1.0 : d2));
}

function _kpmHandleGetYSize(i1) {
 i1 = i1 | 0;
 if (!i1) i1 = 0; else i1 = HEAP32[i1 + 16 >> 2] | 0;
 return i1 | 0;
}

function _kpmHandleGetXSize(i1) {
 i1 = i1 | 0;
 if (!i1) i1 = 0; else i1 = HEAP32[i1 + 12 >> 2] | 0;
 return i1 | 0;
}

function _do_read_589(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return ___string_read(i1, i2, i3) | 0;
}

function ___cxx_global_var_init_399() {
 __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev(0);
 return;
}

function __ZNSt3__212_GLOBAL__N_17countofIwEEmPKT_S4_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return i2 - i1 >> 2 | 0;
}
function __ZNKSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 357913941;
}

function __ZN6vision8KeyframeILi96EE8setWidthEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = i2;
 return;
}

function __ZN10emscripten8internal6TypeIDIvE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIvE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDItE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDItE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIsE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIsE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDImE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDImE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIlE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIlE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIjE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIjE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIiE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIiE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIhE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIhE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIfE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIfE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIdE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIdE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIcE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIcE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIbE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIbE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIaE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIaE3getEv() | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 4096 >> 2] = i1;
 return;
}

function b7(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 nullFunc_iiiii(7);
 return 0;
}

function _strcat(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 _strcpy(i1 + (_strlen(i1) | 0) | 0, i2) | 0;
 return i1 | 0;
}

function _norm(d1, d2, d3) {
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 return +(+Math_sqrt(+(d1 * d1 + d2 * d2 + d3 * d3)));
}

function _close_backing_store(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 _fclose(HEAP32[i2 + 12 >> 2] | 0) | 0;
 return;
}

function _arImageProcFinal(i1) {
 i1 = i1 | 0;
 if (i1 | 0) {
  _free(HEAP32[i1 >> 2] | 0);
  _free(i1);
 }
 return;
}

function __ZNSt3__215__refstring_imp12_GLOBAL__N_113rep_from_dataEPKc_1023(i1) {
 i1 = i1 | 0;
 return i1 + -12 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIwEEjEERT_T0_() {
 __ZNSt3__28numpunctIwEC2Em(56640, 1);
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIcEEjEERT_T0_() {
 __ZNSt3__28numpunctIcEC2Em(56616, 1);
 return;
}

function __ZNK6vision25GaussianScaleSpacePyramid10numOctavesEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 16 >> 2] | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiiEE8getCountEv(i1) {
 i1 = i1 | 0;
 return 4;
}

function __ZN10emscripten8internal11BindingTypeIdE10toWireTypeERKd(i1) {
 i1 = i1 | 0;
 return +(+HEAPF64[i1 >> 3]);
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 4096 >> 2] = 0;
 return;
}

function dynCall_vid(i3, i1, d2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 FUNCTION_TABLE_vid[i3 & 3](i1 | 0, +d2);
}

function _setThrew(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!__THREW__) {
  __THREW__ = i1;
  threwValue = i2;
 }
}

function _isxdigit(i1) {
 i1 = i1 | 0;
 return (((i1 | 32) + -97 | 0) >>> 0 < 6 | (_isdigit(i1) | 0) != 0) & 1 | 0;
}

function _arMatrixFreef(i1) {
 i1 = i1 | 0;
 if (i1 | 0) {
  _free(HEAP32[i1 >> 2] | 0);
  _free(i1);
 }
 return 0;
}

function __ZSt15get_new_handlerv() {
 var i1 = 0;
 i1 = HEAP32[14807] | 0;
 HEAP32[14807] = i1 + 0;
 return i1 | 0;
}

function __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1);
 return;
}

function __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1);
 return;
}

function __ZNKSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 536870911;
}

function __ZNK6vision28BinaryHierarchicalClusteringILi96EE12reverseIndexEv(i1) {
 i1 = i1 | 0;
 return i1 + 72 | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviiEE8getCountEv(i1) {
 i1 = i1 | 0;
 return 3;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvifEE8getCountEv(i1) {
 i1 = i1 | 0;
 return 3;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvidEE8getCountEv(i1) {
 i1 = i1 | 0;
 return 3;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiEE8getCountEv(i1) {
 i1 = i1 | 0;
 return 3;
}

function __ZN6vision5TimerC2Ev(i1) {
 i1 = i1 | 0;
 HEAPF64[i1 >> 3] = -1.0;
 HEAPF64[i1 + 8 >> 3] = -1.0;
 return;
}

function __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function _strrchr(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return ___memrchr(i1, i2, (_strlen(i1) | 0) + 1 | 0) | 0;
}

function _arMatrixFree(i1) {
 i1 = i1 | 0;
 if (i1 | 0) {
  _free(HEAP32[i1 >> 2] | 0);
  _free(i1);
 }
 return 0;
}

function __ZNK6vision21HoughSimilarityVoting24getSubBinLocationIndicesEv(i1) {
 i1 = i1 | 0;
 return i1 + 124 | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviEE8getCountEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiEE8getCountEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJdiEE8getCountEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function __ZN6vision9MaxIndex2IfEEiPKT_(i1) {
 i1 = i1 | 0;
 return +HEAPF32[i1 + 4 >> 2] > +HEAPF32[i1 >> 2] | 0;
}

function _mbsinit(i1) {
 i1 = i1 | 0;
 if (!i1) i1 = 1; else i1 = (HEAP32[i1 >> 2] | 0) == 0 & 1;
 return i1 | 0;
}

function __ZNSt3__26locale5facetD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__26locale5__impD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5__impD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 134217727;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiEE8getCountEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm(i1) {
 i1 = i1 | 0;
 _free(i1);
 return;
}

function _new_color_map_2_quant(i1) {
 i1 = i1 | 0;
 HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 28 >> 2] = 1;
 return;
}

function __ZNSt3__28messagesIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28messagesIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__24pairIKi12arControllerED2Ev(i1) {
 i1 = i1 | 0;
 __ZN12arControllerD2Ev(i1 + 8 | 0);
 return;
}

function __ZNSt3__212_GLOBAL__N_17countofIcEEmPKT_S4_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return i2 - i1 | 0;
}

function __ZNKSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 536870911;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8align_upEm(i1) {
 i1 = i1 | 0;
 return i1 + 15 & -16 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm(i1) {
 i1 = i1 | 0;
 return _malloc(i1) | 0;
}

function __ZSt13get_terminatev() {
 var i1 = 0;
 i1 = HEAP32[4332] | 0;
 HEAP32[4332] = i1 + 0;
 return i1 | 0;
}

function __ZNSt3__28numpunctIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28numpunctIwED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28numpunctIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28numpunctIcED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 536870911;
}

function __ZNKSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 536870911;
}

function __ZNK6vision25DoGScaleInvariantDetector6heightEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 4 >> 2] | 0;
}

function ___cxx_global_var_init_47() {
 __ZN46EmscriptenBindingInitializer_constant_bindingsC2Ev(0);
 return;
}

function __ZNSt3__27collateIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__27collateIwED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27collateIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__27collateIcED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__25ctypeIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN6vision9ExceptionD0Ev(i1) {
 i1 = i1 | 0;
 __ZN6vision9ExceptionD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _start_input_pass(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 148 >> 2] = 0;
 _start_iMCU_row_28(i1);
 return;
}

function _jdiv_round_up(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 + -1 + i2 | 0) / (i2 | 0) | 0 | 0;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED2Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED2Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNK6vision21HoughSimilarityVoting18getSubBinLocationsEv(i1) {
 i1 = i1 | 0;
 return i1 + 112 | 0;
}

function __ZNK6vision10DoGPyramid17numScalePerOctaveEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 16 >> 2] | 0;
}

function b20(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 nullFunc_viiii(20);
}

function _llvm_cttz_i32(i1) {
 i1 = i1 | 0;
 return (i1 ? 31 - (Math_clz32(i1 ^ i1 - 1) | 0) | 0 : 32) | 0;
}

function _catgets(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return i4 | 0;
}

function __ZNK6vision17PriorityQueueItemILi96EE4distEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 4 >> 2] | 0;
}

function dynCall_ii(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return FUNCTION_TABLE_ii[i2 & 127](i1 | 0) | 0;
}

function ___clang_call_terminate(i1) {
 i1 = i1 | 0;
 ___cxa_begin_catch(i1 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNSt12length_errorD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt11logic_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__28numpunctIwE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 12 >> 2] | 0;
}

function __ZNKSt3__25ctypeIwE8do_widenEc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return i2 << 24 >> 24 | 0;
}

function _strtold_l(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return +(+_strtold(i1, i2));
}

function __ZNSt3__28ios_baseD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__25ctypeIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__25ctypeIcED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210moneypunctIwLb1EED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__210moneypunctIwLb0EED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__210moneypunctIcLb1EED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__210moneypunctIcLb0EED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt11logic_errorD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt11logic_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__28numpunctIwE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 8 >> 2] | 0;
}

function __ZNK6vision4NodeILi96EE4leafEv(i1) {
 i1 = i1 | 0;
 return (HEAP8[i1 + 100 >> 0] | 0) != 0 | 0;
}

function __ZNK6vision25DoGScaleInvariantDetector5widthEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNKSt3__28numpunctIcE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return HEAP8[i1 + 9 >> 0] | 0;
}

function __ZNKSt3__28numpunctIcE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return HEAP8[i1 + 8 >> 0] | 0;
}

function __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv(i1) {
 i1 = i1 | 0;
 _abort();
}

function __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1) {
 i1 = i1 | 0;
 _abort();
}

function __ZN6vision5ImageD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__210shared_ptrIhED2Ev(i1 + 24 | 0);
 return;
}

function _strtof_l(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return +(+_strtof(i1, i2));
}

function _strtod_l(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return +(+_strtod(i1, i2));
}

function __ZNSt3__220__time_get_c_storageIwEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 17300;
 return;
}

function __ZNSt3__220__time_get_c_storageIcEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 17264;
 return;
}

function __ZNSt3__210shared_ptrIhE18__enable_weak_thisEz(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1) {
 i1 = i1 | 0;
 _abort();
}

function __ZNK6vision17PriorityQueueItemILi96EE4nodeEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function _jpeg_free_small(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 _free(i2);
 return;
}

function _jpeg_free_large(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 _free(i2);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi(i1) {
 i1 = i1 | 0;
 return i1 | 0;
}

function dynCall_di(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return +FUNCTION_TABLE_di[i2 & 3](i1 | 0);
}

function _init_source(i1) {
 i1 = i1 | 0;
 HEAP32[(HEAP32[i1 + 24 >> 2] | 0) + 36 >> 2] = 1;
 return;
}

function __ZNK6vision14BinarykMedoidsILi96EE1kEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 4 >> 2] | 0;
}

function __ZNK6vision25DoGScaleInvariantDetector8featuresEv(i1) {
 i1 = i1 | 0;
 return i1 + 60 | 0;
}

function establishStackSpace(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 STACKTOP = i1;
 STACK_MAX = i2;
}

function _jzero_far(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 _memset(i1 | 0, 0, i2 | 0) | 0;
 return;
}

function _icpGetXw2XcCleanup(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 _free(i1);
 _free(i2);
 return;
}

function _arMultiFreeConfig(i1) {
 i1 = i1 | 0;
 _free(HEAP32[i1 >> 2] | 0);
 _free(i1);
 return 0;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNK6vision8KeyframeILi96EE6heightEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 4 >> 2] | 0;
}

function __ZNK6vision14BinarykMedoidsILi96EE10assignmentEv(i1) {
 i1 = i1 | 0;
 return i1 + 24 | 0;
}

function __ZN6vision4min2IfEET_S1_S1_(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 return +(d1 < d2 ? d1 : d2);
}

function __ZN6vision4max2IfEET_S1_S1_(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 return +(d1 > d2 ? d1 : d2);
}

function __ZN10emscripten8internal14asGenericValueIiEEdT_(i1) {
 i1 = i1 | 0;
 return +(+(i1 | 0));
}

function _finish_input_pass(i1) {
 i1 = i1 | 0;
 HEAP32[HEAP32[i1 + 436 >> 2] >> 2] = 71;
 return;
}

function __ZNSt3__28messagesIwED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__28messagesIcED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNKSt3__26vectorItNS_9allocatorItEEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 1073741823;
}

function __ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__26vectorIfNS_9allocatorIfEEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 1073741823;
}

function __ZN6vision4log2IfEET_S1_(d1) {
 d1 = +d1;
 return +(+Math_log(+d1) / .6931471824645996);
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJviiEEEE3getEv() {
 return 13676;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvifEEEE3getEv() {
 return 13664;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvidEEEE3getEv() {
 return 13696;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiiiEEEE3getEv() {
 return 3456;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiiEEEE3getEv() {
 return 13728;
}

function b6(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 nullFunc_iiii(6);
 return 0;
}

function _roundf(d1) {
 d1 = +d1;
 return d1 >= 0.0 ? +Math_floor(d1 + .5) : +Math_ceil(d1 - .5);
}

function _isspace(i1) {
 i1 = i1 | 0;
 return ((i1 | 0) == 32 | (i1 + -9 | 0) >>> 0 < 5) & 1 | 0;
}

function __ZNSt3__27collateIwED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__27collateIcED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__218__libcpp_refstring5c_strEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNK6vision25GaussianScaleSpacePyramid6imagesEv(i1) {
 i1 = i1 | 0;
 return i1 + 4 | 0;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJviEEEE3getEv() {
 return 13712;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiEEEE3getEv() {
 return 13752;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJdiEEEE3getEv() {
 return 13688;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZNK6vision20BinaryFeatureMatcherILi96EE7matchesEv(i1) {
 i1 = i1 | 0;
 return i1 | 0;
}

function __ZN6vision25GaussianScaleSpacePyramid6imagesEv(i1) {
 i1 = i1 | 0;
 return i1 + 4 | 0;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiEEEE3getEv() {
 return 13708;
}

function __ZN10emscripten8internal11BindingTypeIfE12fromWireTypeEf(d1) {
 d1 = +d1;
 return +d1;
}

function __ZN10emscripten8internal11BindingTypeIdE12fromWireTypeEd(d1) {
 d1 = +d1;
 return +d1;
}

function dynCall_vi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vi[i2 & 255](i1 | 0);
}

function _strcpy(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 ___stpcpy(i1, i2) | 0;
 return i1 | 0;
}

function _freelocale(i1) {
 i1 = i1 | 0;
 if (___loc_is_allocated(i1) | 0) _free(i1);
 return;
}

function ___lctrans(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return ___lctrans_impl(i1, i2) | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 4;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 4;
}

function __ZNKSt3__25ctypeIcE8do_widenEc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return i2 | 0;
}

function __ZNK6vision8KeyframeILi96EE5widthEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNK6vision5Image3getIfEEPKT_v(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 24 >> 2] | 0;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv() {
 return 11168;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv() {
 return 11176;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv() {
 return 11136;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv() {
 return 11144;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv() {
 return 11152;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv() {
 return 11160;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv() {
 return 11184;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv() {
 return 11128;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv() {
 return 11112;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv() {
 return 11120;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv() {
 return 11200;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv() {
 return 11192;
}

function __ZNSt3__211char_traitsIcE12to_char_typeEi(i1) {
 i1 = i1 | 0;
 return i1 & 255 | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZSt18uncaught_exceptionv() {
 return (__ZSt19uncaught_exceptionsv() | 0) > 0 | 0;
}

function __ZNSt3__211char_traitsIcE11to_int_typeEc(i1) {
 i1 = i1 | 0;
 return i1 & 255 | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNK6vision5Image8channelsEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 16 >> 2] | 0;
}

function __ZN6vision5Image3getIfEEPT_v(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 24 >> 2] | 0;
}

function _arVecFree(i1) {
 i1 = i1 | 0;
 _free(HEAP32[i1 >> 2] | 0);
 _free(i1);
 return 0;
}

function ___getTypeName(i1) {
 i1 = i1 | 0;
 return ___strdup(HEAP32[i1 + 4 >> 2] | 0) | 0;
}

function __ZSt19uncaught_exceptionsv() {
 return (___cxa_uncaught_exception() | 0) & 1 | 0;
}

function __ZNSt3__211char_traitsIwE6lengthEPKw(i1) {
 i1 = i1 | 0;
 return _wcslen(i1) | 0;
}

function __ZNSt3__211char_traitsIcE6lengthEPKc(i1) {
 i1 = i1 | 0;
 return _strlen(i1) | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZNK6vision4NodeILi96EE12reverseIndexEv(i1) {
 i1 = i1 | 0;
 return i1 + 116 | 0;
}

function __ZNK6vision18BinaryFeatureStore6pointsEv(i1) {
 i1 = i1 | 0;
 return i1 + 16 | 0;
}

function __ZN6vision18BinaryFeatureStore8featuresEv(i1) {
 i1 = i1 | 0;
 return i1 + 4 | 0;
}

function _my_error_exit(i1) {
 i1 = i1 | 0;
 _longjmp((HEAP32[i1 >> 2] | 0) + 132 | 0, 1);
}

function _ar3DCreateHandle(i1) {
 i1 = i1 | 0;
 return _ar3DCreateHandle2(i1 + 8 | 0) | 0;
}

function __ZNKSt3__28messagesIwE8do_closeEl(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNKSt3__28messagesIcE8do_closeEl(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNKSt3__218__libcpp_refstring15__uses_refcountEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZN6vision4NodeILi96EE12reverseIndexEv(i1) {
 i1 = i1 | 0;
 return i1 + 116 | 0;
}

function __ZN6vision18BinaryFeatureStore6pointsEv(i1) {
 i1 = i1 | 0;
 return i1 + 16 | 0;
}

function __ZNK6vision5Image6heightEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 8 >> 2] | 0;
}

function b19(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 nullFunc_viii(19);
}

function __ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNK6vision5Image5widthEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 4 >> 2] | 0;
}

function __ZNK6vision5Image4stepEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 12 >> 2] | 0;
}

function __ZN6vision5roundIfEET_S1_(d1) {
 d1 = +d1;
 return +(+Math_floor(+(d1 + .5)));
}

function __ZN10emscripten8internal19getGenericSignatureIJiiiiiEEEPKcv() {
 return 45246;
}

function _strtold(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return +(+_strtox(i1, i2, 2));
}

function _jpeg_get_small(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return _malloc(i2) | 0;
}

function _jpeg_get_large(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return _malloc(i2) | 0;
}

function __ZNSt3__211char_traitsIwE12to_char_typeEj(i1) {
 i1 = i1 | 0;
 return i1 | 0;
}

function __ZNK6vision5Image3getEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 24 >> 2] | 0;
}

function __ZNK16NullArrayDeleterIhEclEPh(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv() {
 return 41319;
}

function __ZN10emscripten8internal19getGenericSignatureIJviifEEEPKcv() {
 return 41227;
}

function __ZN10emscripten8internal19getGenericSignatureIJviidEEEPKcv() {
 return 41354;
}

function __ZN10emscripten8internal19getGenericSignatureIJiiiiEEEPKcv() {
 return 44636;
}

function __ZN10emscripten8internal14asGenericValueIdEEdT_(d1) {
 d1 = +d1;
 return +d1;
}

function _strtof(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return +(+_strtox(i1, i2, 0));
}

function _strtod(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return +(+_strtox(i1, i2, 1));
}

function __ZNSt3__211char_traitsIwE11to_int_typeEw(i1) {
 i1 = i1 | 0;
 return i1 | 0;
}

function __ZNK6vision8KeyframeILi96EE5indexEv(i1) {
 i1 = i1 | 0;
 return i1 + 36 | 0;
}

function __ZN6vision5Image3getEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 24 >> 2] | 0;
}

function __ZN10emscripten8internal19getGenericSignatureIJviiEEEPKcv() {
 return 41362;
}

function __ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv() {
 return 44472;
}

function __ZN10emscripten8internal19getGenericSignatureIJdiiEEEPKcv() {
 return 41350;
}

function b18(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 nullFunc_viid(18);
}

function _isxdigit_l(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return _isxdigit(i1) | 0;
}

function __ZNK6vision8KeyframeILi96EE5storeEv(i1) {
 i1 = i1 | 0;
 return i1 + 8 | 0;
}

function __ZN6vision4NodeILi96EE8childrenEv(i1) {
 i1 = i1 | 0;
 return i1 + 104 | 0;
}

function __ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv() {
 return 41359;
}

function ___emscripten_environ_constructor() {
 ___buildEnvironment(57740);
 return;
}

function __ZN6vision8KeyframeILi96EE5storeEv(i1) {
 i1 = i1 | 0;
 return i1 + 8 | 0;
}

function _isdigit_l(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return _isdigit(i1) | 0;
}

function __ZNK6vision5Image4typeEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function _jpeg_destroy_decompress(i1) {
 i1 = i1 | 0;
 _jpeg_destroy(i1);
 return;
}

function _copysignl(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 return +(+_copysign(d1, d2));
}

function ___cxx_global_var_init_677() {
 __ZNSt3__28ios_base4InitC2Ev(0);
 return;
}

function __ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv() {
 return 11208;
}

function _scalbnl(d1, i2) {
 d1 = +d1;
 i2 = i2 | 0;
 return +(+_scalbn(d1, i2));
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev(i1) {
 i1 = i1 | 0;
 return;
}

function b1(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 nullFunc_dii(1);
 return 0.0;
}

function _ar2UtilRemoveExt(i1) {
 i1 = i1 | 0;
 return _arUtilRemoveExt(i1) | 0;
}

function _ldexp(d1, i2) {
 d1 = +d1;
 i2 = i2 | 0;
 return +(+_scalbn(d1, i2));
}

function _createKpmHandle(i1) {
 i1 = i1 | 0;
 return _kpmCreateHandle(i1) | 0;
}

function __ZN6vision17PriorityQueueItemILi96EED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function dynCall_i(i1) {
 i1 = i1 | 0;
 return FUNCTION_TABLE_i[i1 & 1]() | 0;
}

function b5(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 nullFunc_iii(5);
 return 0;
}

function __ZNK6vision10DoGPyramid6imagesEv(i1) {
 i1 = i1 | 0;
 return i1 | 0;
}

function _threadGetArg(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 140 >> 2] | 0;
}

function _pthread_mutex_init(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return 0;
}

function __ZNSt3__221__throw_runtime_errorEPKc(i1) {
 i1 = i1 | 0;
 _abort();
}

function __ZN10emscripten8internal11LightTypeIDIRKiE3getEv() {
 return 13408;
}

function __ZN10emscripten8internal11LightTypeIDIRKdE3getEv() {
 return 13448;
}

function __GLOBAL__sub_I_bind_cpp() {
 ___cxx_global_var_init_399();
 return;
}

function _isupper(i1) {
 i1 = i1 | 0;
 return (i1 + -65 | 0) >>> 0 < 26 | 0;
}

function _isdigit(i1) {
 i1 = i1 | 0;
 return (i1 + -48 | 0) >>> 0 < 10 | 0;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN10emscripten8internal11LightTypeIDIvE3getEv() {
 return 13352;
}

function __ZN10emscripten8internal11LightTypeIDItE3getEv() {
 return 13400;
}

function __ZN10emscripten8internal11LightTypeIDIsE3getEv() {
 return 13392;
}

function __ZN10emscripten8internal11LightTypeIDImE3getEv() {
 return 13432;
}

function __ZN10emscripten8internal11LightTypeIDIlE3getEv() {
 return 13424;
}

function __ZN10emscripten8internal11LightTypeIDIjE3getEv() {
 return 13416;
}

function __ZN10emscripten8internal11LightTypeIDIiE3getEv() {
 return 13408;
}

function __ZN10emscripten8internal11LightTypeIDIhE3getEv() {
 return 13376;
}

function __ZN10emscripten8internal11LightTypeIDIfE3getEv() {
 return 13440;
}

function __ZN10emscripten8internal11LightTypeIDIdE3getEv() {
 return 13448;
}

function __ZN10emscripten8internal11LightTypeIDIcE3getEv() {
 return 13368;
}

function __ZN10emscripten8internal11LightTypeIDIbE3getEv() {
 return 13360;
}

function __ZN10emscripten8internal11LightTypeIDIaE3getEv() {
 return 13384;
}

function _fmodl(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 return +(+_fmod(d1, d2));
}

function _arPattCreateHandle() {
 return _arPattCreateHandle2(16, 50) | 0;
}

function _catopen(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return -1 | 0;
}

function __GLOBAL__I_000101() {
 ___cxx_global_var_init_677();
 return;
}

function _threadGetID(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function _setLogLevel(i1) {
 i1 = i1 | 0;
 HEAP32[3368] = i1;
 return;
}

function __ZN6vision3sqrIfEET_S1_(d1) {
 d1 = +d1;
 return +(d1 * d1);
}

function b17(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 nullFunc_vii(17);
}

function __ZN6vision14FREAKExtractorD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN6vision11ScopedTimercvbEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZNSt3__214__shared_countD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function dynCall_v(i1) {
 i1 = i1 | 0;
 FUNCTION_TABLE_v[i1 & 3]();
}

function __ZN6vision12FeaturePointD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function b16(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 nullFunc_vid(16);
}

function __ZNSt3__26locale5facetD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__212__do_nothingEPv(i1) {
 i1 = i1 | 0;
 return;
}

function _pthread_cond_broadcast(i1) {
 i1 = i1 | 0;
 return 0;
}

function _lroundf(d1) {
 d1 = +d1;
 return ~~+_roundf(+d1) | 0;
}

function _pthread_mutex_destroy(i1) {
 i1 = i1 | 0;
 return 0;
}

function b0(i1) {
 i1 = i1 | 0;
 nullFunc_di(0);
 return 0.0;
}

function _pthread_mutex_unlock(i1) {
 i1 = i1 | 0;
 return 0;
}

function ___pthread_self_826() {
 return _pthread_self() | 0;
}

function ___pthread_self_604() {
 return _pthread_self() | 0;
}

function ___pthread_self_523() {
 return _pthread_self() | 0;
}

function ___pthread_self_306() {
 return _pthread_self() | 0;
}

function ___pthread_self_303() {
 return _pthread_self() | 0;
}

function ___pthread_self_300() {
 return _pthread_self() | 0;
}

function ___pthread_self_293() {
 return _pthread_self() | 0;
}

function ___pthread_self_197() {
 return _pthread_self() | 0;
}

function b3(i1) {
 i1 = i1 | 0;
 nullFunc_ii(3);
 return 0;
}

function _pthread_mutex_lock(i1) {
 i1 = i1 | 0;
 return 0;
}

function _dummy_consume_data(i1) {
 i1 = i1 | 0;
 return 0;
}

function __Znam(i1) {
 i1 = i1 | 0;
 return __Znwm(i1) | 0;
}

function __ZdaPv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _finish_pass_1_quant(i1) {
 i1 = i1 | 0;
 return;
}

function ___cxa_guard_release(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9type_infoD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9exceptionD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function stackRestore(i1) {
 i1 = i1 | 0;
 STACKTOP = i1;
}

function __ZdlPv(i1) {
 i1 = i1 | 0;
 _free(i1);
 return;
}

function __ZNSt3__211char_traitsIwE3eofEv() {
 return -1;
}

function __ZNSt3__211char_traitsIcE3eofEv() {
 return -1;
}

function _start_pass_dcolor(i1) {
 i1 = i1 | 0;
 return;
}

function _jpeg_mem_init(i1) {
 i1 = i1 | 0;
 return 1e6;
}

function ___ofl_lock() {
 ___lock(57192);
 return 57200;
}

function ___cxa_guard_abort(i1) {
 i1 = i1 | 0;
 return;
}

function _dummy_465(i1) {
 i1 = i1 | 0;
 return i1 | 0;
}

function ___ofl_unlock() {
 ___unlock(57192);
 return;
}

function _threadGetCPU() {
 return _sysconf(84) | 0;
}

function _jpeg_mem_term(i1) {
 i1 = i1 | 0;
 return;
}

function _getLogLevel() {
 return HEAP32[3368] | 0;
}

function _finish_pass2(i1) {
 i1 = i1 | 0;
 return;
}

function ___unlockfile(i1) {
 i1 = i1 | 0;
 return;
}

function ___lockfile(i1) {
 i1 = i1 | 0;
 return 1;
}

function b15(i1) {
 i1 = i1 | 0;
 nullFunc_vi(15);
}

function _term_source(i1) {
 i1 = i1 | 0;
 return;
}

function __GLOBAL__sub_I_iostream_cpp() {
 return;
}

function _catclose(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZSt17__throw_bad_allocv() {
 _abort();
}

function ___ctype_toupper_loc() {
 return 14084;
}

function ___ctype_tolower_loc() {
 return 14088;
}

function ___errno_location() {
 return 57188;
}

function stackSave() {
 return STACKTOP | 0;
}

function b2() {
 nullFunc_i(2);
 return 0;
}

function __get_timezone() {
 return 57736;
}

function __get_daylight() {
 return 57732;
}

function ___ctype_b_loc() {
 return 14080;
}

function _pthread_self() {
 return 13828;
}

function __get_environ() {
 return 57740;
}

function __get_tzname() {
 return 57724;
}

function b14() {
 nullFunc_v(14);
}

function _dummy() {
 return;
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_di = [b0,_getProjectionNearPlane,_getProjectionFarPlane,_getPattRatio];
var FUNCTION_TABLE_dii = [b1,__ZN10emscripten8internal7InvokerIdJiEE6invokeEPFdiEi];
var FUNCTION_TABLE_i = [b2,_getLogLevel];
var FUNCTION_TABLE_ii = [b3,__ZNK6vision9Exception4whatEv,___stdio_close,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv,__ZNSt3__211__stdoutbufIwE4syncEv,__ZNSt3__211__stdoutbufIcE4syncEv,__ZNSt3__210__stdinbufIwE9underflowEv,__ZNSt3__210__stdinbufIwE5uflowEv,__ZNSt3__210__stdinbufIcE9underflowEv,__ZNSt3__210__stdinbufIcE5uflowEv,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__220__time_get_c_storageIcE7__weeksEv,__ZNKSt3__220__time_get_c_storageIcE8__monthsEv,__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__220__time_get_c_storageIcE3__cEv,__ZNKSt3__220__time_get_c_storageIcE3__rEv,__ZNKSt3__220__time_get_c_storageIcE3__xEv,__ZNKSt3__220__time_get_c_storageIcE3__XEv,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__220__time_get_c_storageIwE7__weeksEv,__ZNKSt3__220__time_get_c_storageIwE8__monthsEv,__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv
,__ZNKSt3__220__time_get_c_storageIwE3__cEv,__ZNKSt3__220__time_get_c_storageIwE3__rEv,__ZNKSt3__220__time_get_c_storageIwE3__xEv,__ZNKSt3__220__time_get_c_storageIwE3__XEv,__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv,__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__28numpunctIcE16do_decimal_pointEv,__ZNKSt3__28numpunctIcE16do_thousands_sepEv,__ZNKSt3__28numpunctIwE16do_decimal_pointEv,__ZNKSt3__28numpunctIwE16do_thousands_sepEv,__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv
,__ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt11logic_error4whatEv,_ar2Tracking2d,_jpeg_std_error,_jpeg_start_decompress,_malloc,_jpeg_finish_decompress,_read_markers,_read_restart_marker,_skip_variable,_get_interesting_appn,_consume_markers,_consume_data,_dummy_consume_data,_fill_input_buffer,_trackingInitMain,_teardown,_setupAR2,_setupAR2Threads,_getMultiMarkerCount,_loadCamera,_detectMarker,_getMarkerNum,_detectNFTMarker,_getDebugMode,_getProcessingImage,_getThresholdMode,_getThreshold,_getPatternDetectionMode
,_getMatrixCodeType,_getLabelingMode,_getImageProcMode,__ZN10emscripten8internal7InvokerIiJEE6invokeEPFivE,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_iidiiii = [b4,_fmt_fp];
var FUNCTION_TABLE_iii = [b5,__ZNKSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info,__ZNKSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE13__get_deleterERKSt9type_info,__ZNKSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE13__get_deleterERKSt9type_info,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj,__ZNSt3__211__stdoutbufIwE8overflowEj,__ZNSt3__211__stdoutbufIcE8overflowEi,__ZNSt3__210__stdinbufIwE9pbackfailEj,__ZNSt3__210__stdinbufIcE9pbackfailEi,__ZNKSt3__25ctypeIcE10do_toupperEc,__ZNKSt3__25ctypeIcE10do_tolowerEc,__ZNKSt3__25ctypeIcE8do_widenEc,__ZNKSt3__25ctypeIwE10do_toupperEw,__ZNKSt3__25ctypeIwE10do_tolowerEw,__ZNKSt3__25ctypeIwE8do_widenEc,_compE,_jpeg_read_header,_compE_396,_decode_mcu,_decompress_data,_decompress_onepass,_decompress_smooth_data,_decode_mcu_AC_first,_decode_mcu_DC_first,_decode_mcu_AC_refine,_decode_mcu_DC_refine
,_jpeg_resync_to_restart,_addMarker,_addMultiMarker,_addNFTMarker,_getMultiMarkerNum,_setMarkerInfoVertex,_getTransMatMultiSquare,_getTransMatMultiSquareRobust,_getMarkerInfo,_getNFTMarkerInfo,_setDebugMode,__ZN10emscripten8internal7InvokerIiJiEE6invokeEPFiiEi,__ZN10emscripten8internal7InvokerIiJNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFiS8_EPNS0_11BindingTypeIS8_EUt_E,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_iiii = [b6,___stdio_read,___stdio_write,___stdout_write,_sn_write,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwl,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwl,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwl,__ZNSt3__211__stdoutbufIwE6xsputnEPKwl,__ZNSt3__211__stdoutbufIcE6xsputnEPKcl,__ZNKSt3__27collateIcE7do_hashEPKcS3_,__ZNKSt3__27collateIwE7do_hashEPKwS3_,__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__25ctypeIcE10do_toupperEPcPKc,__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__25ctypeIcE9do_narrowEcc,__ZNKSt3__25ctypeIwE5do_isEtw,__ZNKSt3__25ctypeIwE10do_toupperEPwPKw,__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__25ctypeIwE9do_narrowEwc,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,_jpeg_read_scanlines,_alloc_small,_alloc_large
,_setup,_setMarkerInfoDir,_getTransMatSquare,_getTransMatSquareCont,_getMultiEachMarkerInfo,__ZN10emscripten8internal7InvokerIiJiNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFiiS8_EiPNS0_11BindingTypeIS8_EUt_E,__ZN10emscripten8internal7InvokerIiJiiEE6invokeEPFiiiEii,_do_read_589,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_iiiii = [b7,___stdio_seek,__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw,_alloc_sarray,_alloc_barray,__ZN10emscripten8internal7InvokerIiJiiiEE6invokeEPFiiiiEiii,b7,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_iiiiid = [b8,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b8,b8,b8];
var FUNCTION_TABLE_iiiiii = [b9,__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_m,__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_m,__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_m,__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_m,_access_virt_sarray,_access_virt_barray,b9,b9,b9,b9,b9,b9
,b9,b9,b9];
var FUNCTION_TABLE_iiiiiid = [b10,__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b10];
var FUNCTION_TABLE_iiiiiii = [b11,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,_request_virt_sarray,_request_virt_barray,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11];
var FUNCTION_TABLE_iiiiiiii = [b12,__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b12];
var FUNCTION_TABLE_iiiiiiiii = [b13,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b13,b13,b13,b13,b13];
var FUNCTION_TABLE_v = [b14,__ZL25default_terminate_handlerv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b14];
var FUNCTION_TABLE_vi = [b15,__ZN6vision18BinomialPyramid32fD2Ev,__ZN6vision18BinomialPyramid32fD0Ev,__ZN6vision25GaussianScaleSpacePyramidD2Ev,__ZN6vision25GaussianScaleSpacePyramidD0Ev,__ZN6vision9ExceptionD2Ev,__ZN6vision9ExceptionD0Ev,__ZNSt3__214__shared_countD2Ev,__ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEED0Ev,__ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEED0Ev,__ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE21__on_zero_shared_weakEv,__ZNSt3__28ios_baseD2Ev,__ZNSt3__28ios_baseD0Ev,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev,__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev
,__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__211__stdoutbufIwED0Ev,__ZNSt3__211__stdoutbufIcED0Ev,__ZNSt3__210__stdinbufIwED0Ev,__ZNSt3__210__stdinbufIcED0Ev,__ZNSt3__27collateIcED2Ev,__ZNSt3__27collateIcED0Ev,__ZNSt3__26locale5facet16__on_zero_sharedEv,__ZNSt3__27collateIwED2Ev,__ZNSt3__27collateIwED0Ev,__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
,__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__210moneypunctIcLb0EED2Ev,__ZNSt3__210moneypunctIcLb0EED0Ev,__ZNSt3__210moneypunctIcLb1EED2Ev,__ZNSt3__210moneypunctIcLb1EED0Ev,__ZNSt3__210moneypunctIwLb0EED2Ev,__ZNSt3__210moneypunctIwLb0EED0Ev,__ZNSt3__210moneypunctIwLb1EED2Ev,__ZNSt3__210moneypunctIwLb1EED0Ev,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28messagesIcED2Ev,__ZNSt3__28messagesIcED0Ev,__ZNSt3__28messagesIwED2Ev,__ZNSt3__28messagesIwED0Ev,__ZNSt3__26locale5facetD2Ev,__ZNSt3__216__narrow_to_utf8ILm32EED0Ev,__ZNSt3__217__widen_from_utf8ILm32EED0Ev,__ZNSt3__27codecvtIwc11__mbstate_tED2Ev,__ZNSt3__27codecvtIwc11__mbstate_tED0Ev
,__ZNSt3__26locale5__impD2Ev,__ZNSt3__26locale5__impD0Ev,__ZNSt3__25ctypeIcED2Ev,__ZNSt3__25ctypeIcED0Ev,__ZNSt3__28numpunctIcED2Ev,__ZNSt3__28numpunctIcED0Ev,__ZNSt3__28numpunctIwED2Ev,__ZNSt3__28numpunctIwED0Ev,__ZNSt3__26locale5facetD0Ev,__ZNSt3__25ctypeIwED0Ev,__ZNSt3__27codecvtIcc11__mbstate_tED0Ev,__ZNSt3__27codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__27codecvtIDic11__mbstate_tED0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,__ZNSt12length_errorD0Ev,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,_my_error_exit,_jpeg_destroy_decompress,_realize_virt_arrays,_self_destruct,_reset_marker_reader,_reset_input_controller,_start_input_pass_33
,_finish_input_pass,_prepare_for_output_pass,_finish_output_pass,_finish_pass_1_quant,_new_color_map_1_quant,_new_color_map_2_quant,_start_pass_merged_upsample,_start_pass_dcolor,_start_pass_upsample,_start_pass,_start_pass_phuff_decoder,_start_pass_huff_decoder,_start_input_pass,_start_output_pass,_finish_pass1,_finish_pass2,_init_source,_term_source,_error_exit,_output_message,_reset_error_mgr,_setLogLevel,__ZNSt3__26locale2id6__initEv,__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,__ZNSt3__212__do_nothingEPv,_free,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_vid = [b16,_setProjectionNearPlane,_setProjectionFarPlane,_setPattRatio];
var FUNCTION_TABLE_vii = [b17,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE,__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE,__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE,__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE,__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__210moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__210moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__210moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv
,__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__28messagesIcE8do_closeEl,__ZNKSt3__28messagesIwE8do_closeEl,__ZNKSt3__28numpunctIcE11do_groupingEv,__ZNKSt3__28numpunctIcE11do_truenameEv,__ZNKSt3__28numpunctIcE12do_falsenameEv,__ZNKSt3__28numpunctIwE11do_groupingEv,__ZNKSt3__28numpunctIwE11do_truenameEv,__ZNKSt3__28numpunctIwE12do_falsenameEv,_jpeg_stdio_src,_free_pool,_close_backing_store,_start_pass_1_quant,_start_pass_2_quant,_start_pass_dpost,_start_pass_main_36,_skip_input_data,_emit_message,_format_message,_setThresholdMode,_setThreshold,_setPatternDetectionMode,_setMatrixCodeType,_setLabelingMode,_setImageProcMode,__ZN10emscripten8internal7InvokerIvJiEE6invokeEPFviEi,_pop_arg_long_double,b17,b17
,b17,b17,b17,b17,b17];
var FUNCTION_TABLE_viid = [b18,__ZN10emscripten8internal7InvokerIvJidEE6invokeEPFvidEid,__ZN10emscripten8internal7InvokerIvJifEE6invokeEPFvifEif,b18];
var FUNCTION_TABLE_viii = [b19,_jpeg_CreateDecompress,__ZN10emscripten8internal7InvokerIvJiiEE6invokeEPFviiEii,b19];
var FUNCTION_TABLE_viiii = [b20,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__27collateIcE12do_transformEPKcS3_,__ZNKSt3__27collateIwE12do_transformEPKwS3_,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,_arLog,_h2v2_merged_upsample,_h2v1_merged_upsample,_noop_upsample,_fullsize_upsample,_h2v1_fancy_upsample,_h2v1_upsample,_h2v2_fancy_upsample,_h2v2_upsample,_int_upsample,_process_data_context_main,_process_data_simple_main_37,_process_data_crank_post,_prescan_quantize,_pass2_no_dither,_pass2_fs_dither,_color_quantize3,_color_quantize,_quantize_ord_dither,_quantize3_ord_dither,_quantize_fs_dither
,b20,b20,b20];
var FUNCTION_TABLE_viiiii = [b21,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,_read_backing_store,_write_backing_store,_grayscale_convert_29,_ycc_rgb_convert,_gray_rgb_convert,_null_convert_30,_ycck_cmyk_convert,_jpeg_idct_1x1,_jpeg_idct_2x2,_jpeg_idct_4x4,_jpeg_idct_islow,_jpeg_idct_ifast,_jpeg_idct_float,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21];
var FUNCTION_TABLE_viiiiii = [b22,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__28messagesIcE6do_getEliiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__28messagesIwE6do_getEliiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib];
var FUNCTION_TABLE_viiiiiii = [b23,_merged_2v_upsample,_merged_1v_upsample,_sep_upsample,_post_process_1pass,_post_process_prepass,_post_process_2pass,b23];

  return { __GLOBAL__I_000101: __GLOBAL__I_000101, __GLOBAL__sub_I_ARToolKitJS_cpp: __GLOBAL__sub_I_ARToolKitJS_cpp, __GLOBAL__sub_I_bind_cpp: __GLOBAL__sub_I_bind_cpp, __GLOBAL__sub_I_iostream_cpp: __GLOBAL__sub_I_iostream_cpp, __ZSt18uncaught_exceptionv: __ZSt18uncaught_exceptionv, ___cxa_can_catch: ___cxa_can_catch, ___cxa_demangle: ___cxa_demangle, ___cxa_is_pointer_type: ___cxa_is_pointer_type, ___emscripten_environ_constructor: ___emscripten_environ_constructor, ___errno_location: ___errno_location, ___getTypeName: ___getTypeName, ___muldi3: ___muldi3, ___udivdi3: ___udivdi3, __get_daylight: __get_daylight, __get_environ: __get_environ, __get_timezone: __get_timezone, __get_tzname: __get_tzname, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _emscripten_replace_memory: _emscripten_replace_memory, _fflush: _fflush, _free: _free, _i64Add: _i64Add, _i64Subtract: _i64Subtract, _llvm_bswap_i32: _llvm_bswap_i32, _malloc: _malloc, _memcpy: _memcpy, _memmove: _memmove, _memset: _memset, _pthread_cond_broadcast: _pthread_cond_broadcast, _realloc: _realloc, _roundf: _roundf, _saveSetjmp: _saveSetjmp, _sbrk: _sbrk, _setThrew: _setThrew, _testSetjmp: _testSetjmp, dynCall_di: dynCall_di, dynCall_dii: dynCall_dii, dynCall_i: dynCall_i, dynCall_ii: dynCall_ii, dynCall_iidiiii: dynCall_iidiiii, dynCall_iii: dynCall_iii, dynCall_iiii: dynCall_iiii, dynCall_iiiii: dynCall_iiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_iiiiii: dynCall_iiiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_v: dynCall_v, dynCall_vi: dynCall_vi, dynCall_vid: dynCall_vid, dynCall_vii: dynCall_vii, dynCall_viid: dynCall_viid, dynCall_viii: dynCall_viii, dynCall_viiii: dynCall_viiii, dynCall_viiiii: dynCall_viiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_viiiiiii: dynCall_viiiiiii, establishStackSpace: establishStackSpace, stackAlloc: stackAlloc, stackRestore: stackRestore, stackSave: stackSave };
})
// EMSCRIPTEN_END_ASM
(asmGlobalArg, asmLibraryArg, buffer);

var real___GLOBAL__I_000101 = asm["__GLOBAL__I_000101"];

asm["__GLOBAL__I_000101"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___GLOBAL__I_000101.apply(null, arguments);
};

var real___GLOBAL__sub_I_ARToolKitJS_cpp = asm["__GLOBAL__sub_I_ARToolKitJS_cpp"];

asm["__GLOBAL__sub_I_ARToolKitJS_cpp"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___GLOBAL__sub_I_ARToolKitJS_cpp.apply(null, arguments);
};

var real___GLOBAL__sub_I_bind_cpp = asm["__GLOBAL__sub_I_bind_cpp"];

asm["__GLOBAL__sub_I_bind_cpp"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___GLOBAL__sub_I_bind_cpp.apply(null, arguments);
};

var real___GLOBAL__sub_I_iostream_cpp = asm["__GLOBAL__sub_I_iostream_cpp"];

asm["__GLOBAL__sub_I_iostream_cpp"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___GLOBAL__sub_I_iostream_cpp.apply(null, arguments);
};

var real___ZSt18uncaught_exceptionv = asm["__ZSt18uncaught_exceptionv"];

asm["__ZSt18uncaught_exceptionv"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___ZSt18uncaught_exceptionv.apply(null, arguments);
};

var real____cxa_can_catch = asm["___cxa_can_catch"];

asm["___cxa_can_catch"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____cxa_can_catch.apply(null, arguments);
};

var real____cxa_demangle = asm["___cxa_demangle"];

asm["___cxa_demangle"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____cxa_demangle.apply(null, arguments);
};

var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"];

asm["___cxa_is_pointer_type"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____cxa_is_pointer_type.apply(null, arguments);
};

var real____emscripten_environ_constructor = asm["___emscripten_environ_constructor"];

asm["___emscripten_environ_constructor"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____emscripten_environ_constructor.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"];

asm["___errno_location"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____errno_location.apply(null, arguments);
};

var real____getTypeName = asm["___getTypeName"];

asm["___getTypeName"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____getTypeName.apply(null, arguments);
};

var real____muldi3 = asm["___muldi3"];

asm["___muldi3"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____muldi3.apply(null, arguments);
};

var real____udivdi3 = asm["___udivdi3"];

asm["___udivdi3"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____udivdi3.apply(null, arguments);
};

var real___get_daylight = asm["__get_daylight"];

asm["__get_daylight"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___get_daylight.apply(null, arguments);
};

var real___get_environ = asm["__get_environ"];

asm["__get_environ"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___get_environ.apply(null, arguments);
};

var real___get_timezone = asm["__get_timezone"];

asm["__get_timezone"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___get_timezone.apply(null, arguments);
};

var real___get_tzname = asm["__get_tzname"];

asm["__get_tzname"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___get_tzname.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"];

asm["_bitshift64Lshr"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"];

asm["_bitshift64Shl"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__bitshift64Shl.apply(null, arguments);
};

var real__fflush = asm["_fflush"];

asm["_fflush"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__fflush.apply(null, arguments);
};

var real__free = asm["_free"];

asm["_free"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__free.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"];

asm["_i64Add"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__i64Add.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"];

asm["_i64Subtract"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__i64Subtract.apply(null, arguments);
};

var real__llvm_bswap_i32 = asm["_llvm_bswap_i32"];

asm["_llvm_bswap_i32"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__llvm_bswap_i32.apply(null, arguments);
};

var real__malloc = asm["_malloc"];

asm["_malloc"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__malloc.apply(null, arguments);
};

var real__memmove = asm["_memmove"];

asm["_memmove"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__memmove.apply(null, arguments);
};

var real__pthread_cond_broadcast = asm["_pthread_cond_broadcast"];

asm["_pthread_cond_broadcast"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__pthread_cond_broadcast.apply(null, arguments);
};

var real__realloc = asm["_realloc"];

asm["_realloc"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__realloc.apply(null, arguments);
};

var real__roundf = asm["_roundf"];

asm["_roundf"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__roundf.apply(null, arguments);
};

var real__saveSetjmp = asm["_saveSetjmp"];

asm["_saveSetjmp"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__saveSetjmp.apply(null, arguments);
};

var real__sbrk = asm["_sbrk"];

asm["_sbrk"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__sbrk.apply(null, arguments);
};

var real__setThrew = asm["_setThrew"];

asm["_setThrew"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__setThrew.apply(null, arguments);
};

var real__testSetjmp = asm["_testSetjmp"];

asm["_testSetjmp"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__testSetjmp.apply(null, arguments);
};

var real_establishStackSpace = asm["establishStackSpace"];

asm["establishStackSpace"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real_establishStackSpace.apply(null, arguments);
};

var real_stackAlloc = asm["stackAlloc"];

asm["stackAlloc"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real_stackAlloc.apply(null, arguments);
};

var real_stackRestore = asm["stackRestore"];

asm["stackRestore"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real_stackRestore.apply(null, arguments);
};

var real_stackSave = asm["stackSave"];

asm["stackSave"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real_stackSave.apply(null, arguments);
};

var __GLOBAL__I_000101 = Module["__GLOBAL__I_000101"] = asm["__GLOBAL__I_000101"];

var __GLOBAL__sub_I_ARToolKitJS_cpp = Module["__GLOBAL__sub_I_ARToolKitJS_cpp"] = asm["__GLOBAL__sub_I_ARToolKitJS_cpp"];

var __GLOBAL__sub_I_bind_cpp = Module["__GLOBAL__sub_I_bind_cpp"] = asm["__GLOBAL__sub_I_bind_cpp"];

var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = asm["__GLOBAL__sub_I_iostream_cpp"];

var __ZSt18uncaught_exceptionv = Module["__ZSt18uncaught_exceptionv"] = asm["__ZSt18uncaught_exceptionv"];

var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];

var ___cxa_demangle = Module["___cxa_demangle"] = asm["___cxa_demangle"];

var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];

var ___emscripten_environ_constructor = Module["___emscripten_environ_constructor"] = asm["___emscripten_environ_constructor"];

var ___errno_location = Module["___errno_location"] = asm["___errno_location"];

var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];

var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];

var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];

var __get_daylight = Module["__get_daylight"] = asm["__get_daylight"];

var __get_environ = Module["__get_environ"] = asm["__get_environ"];

var __get_timezone = Module["__get_timezone"] = asm["__get_timezone"];

var __get_tzname = Module["__get_tzname"] = asm["__get_tzname"];

var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];

var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];

var _emscripten_replace_memory = Module["_emscripten_replace_memory"] = asm["_emscripten_replace_memory"];

var _fflush = Module["_fflush"] = asm["_fflush"];

var _free = Module["_free"] = asm["_free"];

var _i64Add = Module["_i64Add"] = asm["_i64Add"];

var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];

var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];

var _malloc = Module["_malloc"] = asm["_malloc"];

var _memcpy = Module["_memcpy"] = asm["_memcpy"];

var _memmove = Module["_memmove"] = asm["_memmove"];

var _memset = Module["_memset"] = asm["_memset"];

var _pthread_cond_broadcast = Module["_pthread_cond_broadcast"] = asm["_pthread_cond_broadcast"];

var _realloc = Module["_realloc"] = asm["_realloc"];

var _roundf = Module["_roundf"] = asm["_roundf"];

var _saveSetjmp = Module["_saveSetjmp"] = asm["_saveSetjmp"];

var _sbrk = Module["_sbrk"] = asm["_sbrk"];

var _setThrew = Module["_setThrew"] = asm["_setThrew"];

var _testSetjmp = Module["_testSetjmp"] = asm["_testSetjmp"];

var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];

var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];

var stackRestore = Module["stackRestore"] = asm["stackRestore"];

var stackSave = Module["stackSave"] = asm["stackSave"];

var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];

var dynCall_dii = Module["dynCall_dii"] = asm["dynCall_dii"];

var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];

var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];

var dynCall_iidiiii = Module["dynCall_iidiiii"] = asm["dynCall_iidiiii"];

var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];

var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];

var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];

var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];

var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];

var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];

var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];

var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];

var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];

var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];

var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];

var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];

var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];

var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];

var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];

var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];

var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];

var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];

Module["asm"] = asm;

if (!Module["intArrayFromString"]) Module["intArrayFromString"] = function() {
 abort("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["intArrayToString"]) Module["intArrayToString"] = function() {
 abort("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["ccall"]) Module["ccall"] = function() {
 abort("'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["cwrap"]) Module["cwrap"] = function() {
 abort("'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["setValue"]) Module["setValue"] = function() {
 abort("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["getValue"]) Module["getValue"] = function() {
 abort("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["allocate"]) Module["allocate"] = function() {
 abort("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["getMemory"]) Module["getMemory"] = function() {
 abort("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["AsciiToString"]) Module["AsciiToString"] = function() {
 abort("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stringToAscii"]) Module["stringToAscii"] = function() {
 abort("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["UTF8ArrayToString"]) Module["UTF8ArrayToString"] = function() {
 abort("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["UTF8ToString"]) Module["UTF8ToString"] = function() {
 abort("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stringToUTF8Array"]) Module["stringToUTF8Array"] = function() {
 abort("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stringToUTF8"]) Module["stringToUTF8"] = function() {
 abort("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["lengthBytesUTF8"]) Module["lengthBytesUTF8"] = function() {
 abort("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["UTF16ToString"]) Module["UTF16ToString"] = function() {
 abort("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stringToUTF16"]) Module["stringToUTF16"] = function() {
 abort("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["lengthBytesUTF16"]) Module["lengthBytesUTF16"] = function() {
 abort("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["UTF32ToString"]) Module["UTF32ToString"] = function() {
 abort("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stringToUTF32"]) Module["stringToUTF32"] = function() {
 abort("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["lengthBytesUTF32"]) Module["lengthBytesUTF32"] = function() {
 abort("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["allocateUTF8"]) Module["allocateUTF8"] = function() {
 abort("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stackTrace"]) Module["stackTrace"] = function() {
 abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["addOnPreRun"]) Module["addOnPreRun"] = function() {
 abort("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["addOnInit"]) Module["addOnInit"] = function() {
 abort("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["addOnPreMain"]) Module["addOnPreMain"] = function() {
 abort("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["addOnExit"]) Module["addOnExit"] = function() {
 abort("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["addOnPostRun"]) Module["addOnPostRun"] = function() {
 abort("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["writeStringToMemory"]) Module["writeStringToMemory"] = function() {
 abort("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["writeArrayToMemory"]) Module["writeArrayToMemory"] = function() {
 abort("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["writeAsciiToMemory"]) Module["writeAsciiToMemory"] = function() {
 abort("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["addRunDependency"]) Module["addRunDependency"] = function() {
 abort("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["removeRunDependency"]) Module["removeRunDependency"] = function() {
 abort("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["ENV"]) Module["ENV"] = function() {
 abort("'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["FS"]) Module["FS"] = function() {
 abort("'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["FS_createFolder"]) Module["FS_createFolder"] = function() {
 abort("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["FS_createPath"]) Module["FS_createPath"] = function() {
 abort("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["FS_createDataFile"]) Module["FS_createDataFile"] = function() {
 abort("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["FS_createPreloadedFile"]) Module["FS_createPreloadedFile"] = function() {
 abort("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["FS_createLazyFile"]) Module["FS_createLazyFile"] = function() {
 abort("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["FS_createLink"]) Module["FS_createLink"] = function() {
 abort("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["FS_createDevice"]) Module["FS_createDevice"] = function() {
 abort("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["FS_unlink"]) Module["FS_unlink"] = function() {
 abort("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["GL"]) Module["GL"] = function() {
 abort("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["dynamicAlloc"]) Module["dynamicAlloc"] = function() {
 abort("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["warnOnce"]) Module["warnOnce"] = function() {
 abort("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["loadDynamicLibrary"]) Module["loadDynamicLibrary"] = function() {
 abort("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["loadWebAssemblyModule"]) Module["loadWebAssemblyModule"] = function() {
 abort("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["getLEB"]) Module["getLEB"] = function() {
 abort("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["getFunctionTables"]) Module["getFunctionTables"] = function() {
 abort("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["alignFunctionTables"]) Module["alignFunctionTables"] = function() {
 abort("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["registerFunctions"]) Module["registerFunctions"] = function() {
 abort("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["addFunction"]) Module["addFunction"] = function() {
 abort("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["removeFunction"]) Module["removeFunction"] = function() {
 abort("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["getFuncWrapper"]) Module["getFuncWrapper"] = function() {
 abort("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["prettyPrint"]) Module["prettyPrint"] = function() {
 abort("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["makeBigInt"]) Module["makeBigInt"] = function() {
 abort("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["dynCall"]) Module["dynCall"] = function() {
 abort("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["getCompilerSetting"]) Module["getCompilerSetting"] = function() {
 abort("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stackSave"]) Module["stackSave"] = function() {
 abort("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stackRestore"]) Module["stackRestore"] = function() {
 abort("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stackAlloc"]) Module["stackAlloc"] = function() {
 abort("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["establishStackSpace"]) Module["establishStackSpace"] = function() {
 abort("'establishStackSpace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["print"]) Module["print"] = function() {
 abort("'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["printErr"]) Module["printErr"] = function() {
 abort("'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["getTempRet0"]) Module["getTempRet0"] = function() {
 abort("'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["setTempRet0"]) Module["setTempRet0"] = function() {
 abort("'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["Pointer_stringify"]) Module["Pointer_stringify"] = function() {
 abort("'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["intArrayFromBase64"]) Module["intArrayFromBase64"] = function() {
 abort("'intArrayFromBase64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["tryParseAsDataURI"]) Module["tryParseAsDataURI"] = function() {
 abort("'tryParseAsDataURI' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["ALLOC_NORMAL"]) Object.defineProperty(Module, "ALLOC_NORMAL", {
 get: function() {
  abort("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
 }
});

if (!Module["ALLOC_STACK"]) Object.defineProperty(Module, "ALLOC_STACK", {
 get: function() {
  abort("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
 }
});

if (!Module["ALLOC_DYNAMIC"]) Object.defineProperty(Module, "ALLOC_DYNAMIC", {
 get: function() {
  abort("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
 }
});

if (!Module["ALLOC_NONE"]) Object.defineProperty(Module, "ALLOC_NONE", {
 get: function() {
  abort("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
 }
});

if (memoryInitializer) {
 if (!isDataURI(memoryInitializer)) {
  memoryInitializer = locateFile(memoryInitializer);
 }
 if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
  var data = Module["readBinary"](memoryInitializer);
  HEAPU8.set(data, GLOBAL_BASE);
 } else {
  addRunDependency("memory initializer");
  var applyMemoryInitializer = function(data) {
   if (data.byteLength) data = new Uint8Array(data);
   for (var i = 0; i < data.length; i++) {
    assert(HEAPU8[GLOBAL_BASE + i] === 0, "area for memory initializer should not have been touched before it's loaded");
   }
   HEAPU8.set(data, GLOBAL_BASE);
   if (Module["memoryInitializerRequest"]) delete Module["memoryInitializerRequest"].response;
   removeRunDependency("memory initializer");
  };
  var doBrowserLoad = function() {
   Module["readAsync"](memoryInitializer, applyMemoryInitializer, function() {
    throw "could not load memory initializer " + memoryInitializer;
   });
  };
  var memoryInitializerBytes = tryParseAsDataURI(memoryInitializer);
  if (memoryInitializerBytes) {
   applyMemoryInitializer(memoryInitializerBytes.buffer);
  } else if (Module["memoryInitializerRequest"]) {
   var useRequest = function() {
    var request = Module["memoryInitializerRequest"];
    var response = request.response;
    if (request.status !== 200 && request.status !== 0) {
     var data = tryParseAsDataURI(Module["memoryInitializerRequestURL"]);
     if (data) {
      response = data.buffer;
     } else {
      console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: " + request.status + ", retrying " + memoryInitializer);
      doBrowserLoad();
      return;
     }
    }
    applyMemoryInitializer(response);
   };
   if (Module["memoryInitializerRequest"].response) {
    setTimeout(useRequest, 0);
   } else {
    Module["memoryInitializerRequest"].addEventListener("load", useRequest);
   }
  } else {
   doBrowserLoad();
  }
 }
}

function ExitStatus(status) {
 this.name = "ExitStatus";
 this.message = "Program terminated with exit(" + status + ")";
 this.status = status;
}

ExitStatus.prototype = new Error();

ExitStatus.prototype.constructor = ExitStatus;

dependenciesFulfilled = function runCaller() {
 if (!Module["calledRun"]) run();
 if (!Module["calledRun"]) dependenciesFulfilled = runCaller;
};

function run(args) {
 args = args || Module["arguments"];
 if (runDependencies > 0) {
  return;
 }
 writeStackCookie();
 preRun();
 if (runDependencies > 0) return;
 if (Module["calledRun"]) return;
 function doRun() {
  if (Module["calledRun"]) return;
  Module["calledRun"] = true;
  if (ABORT) return;
  ensureInitRuntime();
  preMain();
  if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
  assert(!Module["_main"], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');
  postRun();
 }
 if (Module["setStatus"]) {
  Module["setStatus"]("Running...");
  setTimeout(function() {
   setTimeout(function() {
    Module["setStatus"]("");
   }, 1);
   doRun();
  }, 1);
 } else {
  doRun();
 }
 checkStackCookie();
}

Module["run"] = run;

function checkUnflushedContent() {
 var print = out;
 var printErr = err;
 var has = false;
 out = err = function(x) {
  has = true;
 };
 try {
  var flush = Module["_fflush"];
  if (flush) flush(0);
  [ "stdout", "stderr" ].forEach(function(name) {
   var info = FS.analyzePath("/dev/" + name);
   if (!info) return;
   var stream = info.object;
   var rdev = stream.rdev;
   var tty = TTY.ttys[rdev];
   if (tty && tty.output && tty.output.length) {
    has = true;
   }
  });
 } catch (e) {}
 out = print;
 err = printErr;
 if (has) {
  warnOnce("stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.");
 }
}

function exit(status, implicit) {
 checkUnflushedContent();
 if (implicit && Module["noExitRuntime"] && status === 0) {
  return;
 }
 if (Module["noExitRuntime"]) {
  if (!implicit) {
   err("exit(" + status + ") called, but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)");
  }
 } else {
  ABORT = true;
  EXITSTATUS = status;
  exitRuntime();
  if (Module["onExit"]) Module["onExit"](status);
 }
 Module["quit"](status, new ExitStatus(status));
}

var abortDecorators = [];

function abort(what) {
 if (Module["onAbort"]) {
  Module["onAbort"](what);
 }
 if (what !== undefined) {
  out(what);
  err(what);
  what = JSON.stringify(what);
 } else {
  what = "";
 }
 ABORT = true;
 EXITSTATUS = 1;
 var extra = "";
 var output = "abort(" + what + ") at " + stackTrace() + extra;
 if (abortDecorators) {
  abortDecorators.forEach(function(decorator) {
   output = decorator(output, what);
  });
 }
 throw output;
}

Module["abort"] = abort;

if (Module["preInit"]) {
 if (typeof Module["preInit"] == "function") Module["preInit"] = [ Module["preInit"] ];
 while (Module["preInit"].length > 0) {
  Module["preInit"].pop()();
 }
}

Module["noExitRuntime"] = true;

run();

